
NUCLEO_F446RE/AKROS_bridge_mbed.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08007319


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 19 73 00 08 4d 73 00 08 4d 73 00 08     ... .s..Ms..Ms..
 8000010:	4d 73 00 08 4d 73 00 08 4d 73 00 08 00 00 00 00     Ms..Ms..Ms......
	...
 800002c:	dd 71 00 08 4d 73 00 08 00 00 00 00 83 72 00 08     .q..Ms.......r..
 800003c:	e3 72 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     .r..Ms..Ms..Ms..
 800004c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800005c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800006c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800007c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800008c:	31 46 00 08 35 46 00 08 4d 73 00 08 25 46 00 08     1F..5F..Ms..%F..
 800009c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000ac:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000bc:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000cc:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000dc:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000ec:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80000fc:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800010c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800011c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800012c:	4d 73 00 08 4d 73 00 08 00 00 00 00 00 00 00 00     Ms..Ms..........
 800013c:	45 46 00 08 49 46 00 08 4d 73 00 08 39 46 00 08     EF..IF..Ms..9F..
 800014c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800015c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 800016c:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
	...
 8000184:	4d 73 00 08 00 00 00 00 00 00 00 00 4d 73 00 08     Ms..........Ms..
	...
 800019c:	4d 73 00 08 00 00 00 00 00 00 00 00 00 00 00 00     Ms..............
 80001ac:	4d 73 00 08 4d 73 00 08 4d 73 00 08 4d 73 00 08     Ms..Ms..Ms..Ms..
 80001bc:	4d 73 00 08 4d 73 00 08                             Ms..Ms..

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000270 	.word	0x20000270
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080092ec 	.word	0x080092ec

080001e8 <frame_dummy>:
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <frame_dummy+0x34>)
 80001ea:	b143      	cbz	r3, 80001fe <frame_dummy+0x16>
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <frame_dummy+0x38>)
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <frame_dummy+0x3c>)
 80001f0:	b510      	push	{r4, lr}
 80001f2:	f3af 8000 	nop.w
 80001f6:	480c      	ldr	r0, [pc, #48]	; (8000228 <frame_dummy+0x40>)
 80001f8:	6803      	ldr	r3, [r0, #0]
 80001fa:	b923      	cbnz	r3, 8000206 <frame_dummy+0x1e>
 80001fc:	bd10      	pop	{r4, pc}
 80001fe:	480a      	ldr	r0, [pc, #40]	; (8000228 <frame_dummy+0x40>)
 8000200:	6803      	ldr	r3, [r0, #0]
 8000202:	b933      	cbnz	r3, 8000212 <frame_dummy+0x2a>
 8000204:	4770      	bx	lr
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <frame_dummy+0x44>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d0f7      	beq.n	80001fc <frame_dummy+0x14>
 800020c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000210:	4718      	bx	r3
 8000212:	4b06      	ldr	r3, [pc, #24]	; (800022c <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f5      	beq.n	8000204 <frame_dummy+0x1c>
 8000218:	4718      	bx	r3
 800021a:	bf00      	nop
 800021c:	00000000 	.word	0x00000000
 8000220:	080092ec 	.word	0x080092ec
 8000224:	20000274 	.word	0x20000274
 8000228:	20000268 	.word	0x20000268
 800022c:	00000000 	.word	0x00000000

08000230 <std_msgs::Time::serialize(unsigned char*) const>:
 8000230:	6843      	ldr	r3, [r0, #4]
 8000232:	700b      	strb	r3, [r1, #0]
 8000234:	6843      	ldr	r3, [r0, #4]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	704b      	strb	r3, [r1, #1]
 800023a:	88c3      	ldrh	r3, [r0, #6]
 800023c:	708b      	strb	r3, [r1, #2]
 800023e:	79c3      	ldrb	r3, [r0, #7]
 8000240:	70cb      	strb	r3, [r1, #3]
 8000242:	6883      	ldr	r3, [r0, #8]
 8000244:	710b      	strb	r3, [r1, #4]
 8000246:	6883      	ldr	r3, [r0, #8]
 8000248:	0a1b      	lsrs	r3, r3, #8
 800024a:	714b      	strb	r3, [r1, #5]
 800024c:	8943      	ldrh	r3, [r0, #10]
 800024e:	718b      	strb	r3, [r1, #6]
 8000250:	7ac3      	ldrb	r3, [r0, #11]
 8000252:	71cb      	strb	r3, [r1, #7]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::deserialize(unsigned char*)>:
 8000258:	780b      	ldrb	r3, [r1, #0]
 800025a:	6043      	str	r3, [r0, #4]
 800025c:	784a      	ldrb	r2, [r1, #1]
 800025e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000262:	6043      	str	r3, [r0, #4]
 8000264:	788a      	ldrb	r2, [r1, #2]
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	6043      	str	r3, [r0, #4]
 800026c:	78ca      	ldrb	r2, [r1, #3]
 800026e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000272:	6043      	str	r3, [r0, #4]
 8000274:	790b      	ldrb	r3, [r1, #4]
 8000276:	6083      	str	r3, [r0, #8]
 8000278:	794a      	ldrb	r2, [r1, #5]
 800027a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800027e:	6083      	str	r3, [r0, #8]
 8000280:	798a      	ldrb	r2, [r1, #6]
 8000282:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000286:	6083      	str	r3, [r0, #8]
 8000288:	79ca      	ldrb	r2, [r1, #7]
 800028a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800028e:	6083      	str	r3, [r0, #8]
 8000290:	2008      	movs	r0, #8
 8000292:	4770      	bx	lr

08000294 <std_msgs::Time::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <std_msgs::Time::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080089e1 	.word	0x080089e1

0800029c <std_msgs::Time::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <std_msgs::Time::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	080089c0 	.word	0x080089c0

080002a4 <rosserial_msgs::TopicInfo::getType()>:
 80002a4:	4800      	ldr	r0, [pc, #0]	; (80002a8 <rosserial_msgs::TopicInfo::getType()+0x4>)
 80002a6:	4770      	bx	lr
 80002a8:	08008952 	.word	0x08008952

080002ac <rosserial_msgs::TopicInfo::getMD5()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	08008931 	.word	0x08008931

080002b4 <rosserial_msgs::Log::getType()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <rosserial_msgs::Log::getType()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	0800891e 	.word	0x0800891e

080002bc <rosserial_msgs::Log::getMD5()>:
 80002bc:	4800      	ldr	r0, [pc, #0]	; (80002c0 <rosserial_msgs::Log::getMD5()+0x4>)
 80002be:	4770      	bx	lr
 80002c0:	080088fd 	.word	0x080088fd

080002c4 <rosserial_msgs::RequestParamResponse::getType()>:
 80002c4:	4800      	ldr	r0, [pc, #0]	; (80002c8 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 80002c6:	4770      	bx	lr
 80002c8:	0800896b 	.word	0x0800896b

080002cc <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002cc:	4800      	ldr	r0, [pc, #0]	; (80002d0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002ce:	4770      	bx	lr
 80002d0:	080088dc 	.word	0x080088dc

080002d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80002d4:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80002d8:	4770      	bx	lr

080002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80002da:	3801      	subs	r0, #1
 80002dc:	2300      	movs	r3, #0
 80002de:	fa21 f203 	lsr.w	r2, r1, r3
 80002e2:	3308      	adds	r3, #8
 80002e4:	2b20      	cmp	r3, #32
 80002e6:	f800 2f01 	strb.w	r2, [r0, #1]!
 80002ea:	d1f8      	bne.n	80002de <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 80002ec:	4770      	bx	lr

080002ee <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80002ee:	6843      	ldr	r3, [r0, #4]
 80002f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80002f4:	700b      	strb	r3, [r1, #0]
 80002f6:	6843      	ldr	r3, [r0, #4]
 80002f8:	0a1b      	lsrs	r3, r3, #8
 80002fa:	704b      	strb	r3, [r1, #1]
 80002fc:	88c3      	ldrh	r3, [r0, #6]
 80002fe:	708b      	strb	r3, [r1, #2]
 8000300:	79c3      	ldrb	r3, [r0, #7]
 8000302:	70cb      	strb	r3, [r1, #3]
 8000304:	460d      	mov	r5, r1
 8000306:	1d0a      	adds	r2, r1, #4
 8000308:	4604      	mov	r4, r0
 800030a:	2100      	movs	r1, #0
 800030c:	6860      	ldr	r0, [r4, #4]
 800030e:	4281      	cmp	r1, r0
 8000310:	eba2 0305 	sub.w	r3, r2, r5
 8000314:	f102 0204 	add.w	r2, r2, #4
 8000318:	d20f      	bcs.n	800033a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 800031a:	68e3      	ldr	r3, [r4, #12]
 800031c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000320:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000324:	0a18      	lsrs	r0, r3, #8
 8000326:	f802 0c03 	strb.w	r0, [r2, #-3]
 800032a:	0c18      	lsrs	r0, r3, #16
 800032c:	0e1b      	lsrs	r3, r3, #24
 800032e:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000332:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000336:	3101      	adds	r1, #1
 8000338:	e7e8      	b.n	800030c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800033a:	6922      	ldr	r2, [r4, #16]
 800033c:	54ea      	strb	r2, [r5, r3]
 800033e:	6921      	ldr	r1, [r4, #16]
 8000340:	18ea      	adds	r2, r5, r3
 8000342:	0a09      	lsrs	r1, r1, #8
 8000344:	7051      	strb	r1, [r2, #1]
 8000346:	8a61      	ldrh	r1, [r4, #18]
 8000348:	7091      	strb	r1, [r2, #2]
 800034a:	7ce1      	ldrb	r1, [r4, #19]
 800034c:	70d1      	strb	r1, [r2, #3]
 800034e:	3304      	adds	r3, #4
 8000350:	442b      	add	r3, r5
 8000352:	2100      	movs	r1, #0
 8000354:	6922      	ldr	r2, [r4, #16]
 8000356:	4291      	cmp	r1, r2
 8000358:	eba3 0605 	sub.w	r6, r3, r5
 800035c:	f103 0304 	add.w	r3, r3, #4
 8000360:	d20f      	bcs.n	8000382 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000362:	69a2      	ldr	r2, [r4, #24]
 8000364:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000368:	f803 2c04 	strb.w	r2, [r3, #-4]
 800036c:	0a10      	lsrs	r0, r2, #8
 800036e:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000372:	0c10      	lsrs	r0, r2, #16
 8000374:	0e12      	lsrs	r2, r2, #24
 8000376:	f803 0c02 	strb.w	r0, [r3, #-2]
 800037a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800037e:	3101      	adds	r1, #1
 8000380:	e7e8      	b.n	8000354 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000382:	69e3      	ldr	r3, [r4, #28]
 8000384:	55ab      	strb	r3, [r5, r6]
 8000386:	69e2      	ldr	r2, [r4, #28]
 8000388:	19ab      	adds	r3, r5, r6
 800038a:	0a12      	lsrs	r2, r2, #8
 800038c:	705a      	strb	r2, [r3, #1]
 800038e:	8be2      	ldrh	r2, [r4, #30]
 8000390:	709a      	strb	r2, [r3, #2]
 8000392:	7fe2      	ldrb	r2, [r4, #31]
 8000394:	70da      	strb	r2, [r3, #3]
 8000396:	3604      	adds	r6, #4
 8000398:	2700      	movs	r7, #0
 800039a:	69e3      	ldr	r3, [r4, #28]
 800039c:	429f      	cmp	r7, r3
 800039e:	d214      	bcs.n	80003ca <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80003a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003a2:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80003a6:	f008 f834 	bl	8008412 <strlen>
 80003aa:	4680      	mov	r8, r0
 80003ac:	4601      	mov	r1, r0
 80003ae:	19a8      	adds	r0, r5, r6
 80003b0:	f7ff ff93 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003b6:	3604      	adds	r6, #4
 80003b8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80003bc:	19a8      	adds	r0, r5, r6
 80003be:	4642      	mov	r2, r8
 80003c0:	f007 fd36 	bl	8007e30 <memcpy>
 80003c4:	4446      	add	r6, r8
 80003c6:	3701      	adds	r7, #1
 80003c8:	e7e7      	b.n	800039a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80003ca:	4630      	mov	r0, r6
 80003cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080003d0 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80003d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003d2:	460e      	mov	r6, r1
 80003d4:	7903      	ldrb	r3, [r0, #4]
 80003d6:	f806 3b01 	strb.w	r3, [r6], #1
 80003da:	4605      	mov	r5, r0
 80003dc:	6880      	ldr	r0, [r0, #8]
 80003de:	460f      	mov	r7, r1
 80003e0:	f008 f817 	bl	8008412 <strlen>
 80003e4:	4604      	mov	r4, r0
 80003e6:	4601      	mov	r1, r0
 80003e8:	4630      	mov	r0, r6
 80003ea:	f7ff ff76 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003ee:	4622      	mov	r2, r4
 80003f0:	68a9      	ldr	r1, [r5, #8]
 80003f2:	1d78      	adds	r0, r7, #5
 80003f4:	f007 fd1c 	bl	8007e30 <memcpy>
 80003f8:	1d60      	adds	r0, r4, #5
 80003fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080003fc <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 80003fc:	8883      	ldrh	r3, [r0, #4]
 80003fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000402:	700b      	strb	r3, [r1, #0]
 8000404:	8883      	ldrh	r3, [r0, #4]
 8000406:	0a1b      	lsrs	r3, r3, #8
 8000408:	704b      	strb	r3, [r1, #1]
 800040a:	4605      	mov	r5, r0
 800040c:	6880      	ldr	r0, [r0, #8]
 800040e:	460c      	mov	r4, r1
 8000410:	f007 ffff 	bl	8008412 <strlen>
 8000414:	4607      	mov	r7, r0
 8000416:	4601      	mov	r1, r0
 8000418:	1ca0      	adds	r0, r4, #2
 800041a:	f7ff ff5e 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800041e:	463a      	mov	r2, r7
 8000420:	68a9      	ldr	r1, [r5, #8]
 8000422:	1da0      	adds	r0, r4, #6
 8000424:	f007 fd04 	bl	8007e30 <memcpy>
 8000428:	68e8      	ldr	r0, [r5, #12]
 800042a:	f007 fff2 	bl	8008412 <strlen>
 800042e:	f107 0806 	add.w	r8, r7, #6
 8000432:	4606      	mov	r6, r0
 8000434:	4601      	mov	r1, r0
 8000436:	370a      	adds	r7, #10
 8000438:	eb04 0008 	add.w	r0, r4, r8
 800043c:	f7ff ff4d 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000440:	4632      	mov	r2, r6
 8000442:	68e9      	ldr	r1, [r5, #12]
 8000444:	19e0      	adds	r0, r4, r7
 8000446:	f007 fcf3 	bl	8007e30 <memcpy>
 800044a:	6928      	ldr	r0, [r5, #16]
 800044c:	f007 ffe1 	bl	8008412 <strlen>
 8000450:	443e      	add	r6, r7
 8000452:	4601      	mov	r1, r0
 8000454:	4607      	mov	r7, r0
 8000456:	19a0      	adds	r0, r4, r6
 8000458:	3604      	adds	r6, #4
 800045a:	f7ff ff3e 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800045e:	463a      	mov	r2, r7
 8000460:	19a0      	adds	r0, r4, r6
 8000462:	6929      	ldr	r1, [r5, #16]
 8000464:	443e      	add	r6, r7
 8000466:	f007 fce3 	bl	8007e30 <memcpy>
 800046a:	696b      	ldr	r3, [r5, #20]
 800046c:	55a3      	strb	r3, [r4, r6]
 800046e:	4434      	add	r4, r6
 8000470:	0a1a      	lsrs	r2, r3, #8
 8000472:	7062      	strb	r2, [r4, #1]
 8000474:	0c1a      	lsrs	r2, r3, #16
 8000476:	0e1b      	lsrs	r3, r3, #24
 8000478:	70a2      	strb	r2, [r4, #2]
 800047a:	70e3      	strb	r3, [r4, #3]
 800047c:	1d30      	adds	r0, r6, #4
 800047e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000482:	b510      	push	{r4, lr}
 8000484:	2300      	movs	r3, #0
 8000486:	6003      	str	r3, [r0, #0]
 8000488:	3901      	subs	r1, #1
 800048a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800048e:	fa02 f403 	lsl.w	r4, r2, r3
 8000492:	6802      	ldr	r2, [r0, #0]
 8000494:	3308      	adds	r3, #8
 8000496:	4322      	orrs	r2, r4
 8000498:	2b20      	cmp	r3, #32
 800049a:	6002      	str	r2, [r0, #0]
 800049c:	d1f5      	bne.n	800048a <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 800049e:	bd10      	pop	{r4, pc}

080004a0 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80004a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004a2:	460c      	mov	r4, r1
 80004a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80004a8:	7103      	strb	r3, [r0, #4]
 80004aa:	4605      	mov	r5, r0
 80004ac:	a801      	add	r0, sp, #4
 80004ae:	f7ff ffe8 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80004b2:	9b01      	ldr	r3, [sp, #4]
 80004b4:	1d62      	adds	r2, r4, #5
 80004b6:	1d58      	adds	r0, r3, #5
 80004b8:	1b11      	subs	r1, r2, r4
 80004ba:	4288      	cmp	r0, r1
 80004bc:	d904      	bls.n	80004c8 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80004be:	f812 1b01 	ldrb.w	r1, [r2], #1
 80004c2:	f802 1c02 	strb.w	r1, [r2, #-2]
 80004c6:	e7f7      	b.n	80004b8 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80004c8:	4423      	add	r3, r4
 80004ca:	2200      	movs	r2, #0
 80004cc:	3404      	adds	r4, #4
 80004ce:	711a      	strb	r2, [r3, #4]
 80004d0:	60ac      	str	r4, [r5, #8]
 80004d2:	b003      	add	sp, #12
 80004d4:	bd30      	pop	{r4, r5, pc}

080004d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80004d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80004da:	6843      	ldr	r3, [r0, #4]
 80004dc:	680d      	ldr	r5, [r1, #0]
 80004de:	429d      	cmp	r5, r3
 80004e0:	4604      	mov	r4, r0
 80004e2:	460e      	mov	r6, r1
 80004e4:	d904      	bls.n	80004f0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80004e6:	00a9      	lsls	r1, r5, #2
 80004e8:	68c0      	ldr	r0, [r0, #12]
 80004ea:	f007 ff37 	bl	800835c <realloc>
 80004ee:	60e0      	str	r0, [r4, #12]
 80004f0:	6065      	str	r5, [r4, #4]
 80004f2:	1d32      	adds	r2, r6, #4
 80004f4:	2100      	movs	r1, #0
 80004f6:	6860      	ldr	r0, [r4, #4]
 80004f8:	4281      	cmp	r1, r0
 80004fa:	eba2 0306 	sub.w	r3, r2, r6
 80004fe:	f102 0204 	add.w	r2, r2, #4
 8000502:	d213      	bcs.n	800052c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000504:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000508:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 800050c:	041b      	lsls	r3, r3, #16
 800050e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8000512:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000516:	4303      	orrs	r3, r0
 8000518:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 800051c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000520:	68e0      	ldr	r0, [r4, #12]
 8000522:	60a3      	str	r3, [r4, #8]
 8000524:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000528:	3101      	adds	r1, #1
 800052a:	e7e4      	b.n	80004f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 800052c:	18f2      	adds	r2, r6, r3
 800052e:	5cf1      	ldrb	r1, [r6, r3]
 8000530:	7895      	ldrb	r5, [r2, #2]
 8000532:	7850      	ldrb	r0, [r2, #1]
 8000534:	78d2      	ldrb	r2, [r2, #3]
 8000536:	042d      	lsls	r5, r5, #16
 8000538:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800053c:	430d      	orrs	r5, r1
 800053e:	1d1f      	adds	r7, r3, #4
 8000540:	6923      	ldr	r3, [r4, #16]
 8000542:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000546:	429d      	cmp	r5, r3
 8000548:	d904      	bls.n	8000554 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 800054a:	00a9      	lsls	r1, r5, #2
 800054c:	69a0      	ldr	r0, [r4, #24]
 800054e:	f007 ff05 	bl	800835c <realloc>
 8000552:	61a0      	str	r0, [r4, #24]
 8000554:	6125      	str	r5, [r4, #16]
 8000556:	19f3      	adds	r3, r6, r7
 8000558:	2100      	movs	r1, #0
 800055a:	6922      	ldr	r2, [r4, #16]
 800055c:	4291      	cmp	r1, r2
 800055e:	eba3 0506 	sub.w	r5, r3, r6
 8000562:	f103 0304 	add.w	r3, r3, #4
 8000566:	d213      	bcs.n	8000590 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000568:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 800056c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000570:	0412      	lsls	r2, r2, #16
 8000572:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000576:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800057a:	4302      	orrs	r2, r0
 800057c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000580:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000584:	69a0      	ldr	r0, [r4, #24]
 8000586:	6162      	str	r2, [r4, #20]
 8000588:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 800058c:	3101      	adds	r1, #1
 800058e:	e7e4      	b.n	800055a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000590:	1973      	adds	r3, r6, r5
 8000592:	5d72      	ldrb	r2, [r6, r5]
 8000594:	789f      	ldrb	r7, [r3, #2]
 8000596:	7859      	ldrb	r1, [r3, #1]
 8000598:	78db      	ldrb	r3, [r3, #3]
 800059a:	043f      	lsls	r7, r7, #16
 800059c:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80005a0:	4317      	orrs	r7, r2
 80005a2:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80005a6:	69e3      	ldr	r3, [r4, #28]
 80005a8:	429f      	cmp	r7, r3
 80005aa:	f105 0504 	add.w	r5, r5, #4
 80005ae:	d904      	bls.n	80005ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80005b0:	00b9      	lsls	r1, r7, #2
 80005b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80005b4:	f007 fed2 	bl	800835c <realloc>
 80005b8:	6260      	str	r0, [r4, #36]	; 0x24
 80005ba:	61e7      	str	r7, [r4, #28]
 80005bc:	2700      	movs	r7, #0
 80005be:	46b8      	mov	r8, r7
 80005c0:	69e3      	ldr	r3, [r4, #28]
 80005c2:	429f      	cmp	r7, r3
 80005c4:	d21a      	bcs.n	80005fc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80005c6:	1971      	adds	r1, r6, r5
 80005c8:	a801      	add	r0, sp, #4
 80005ca:	f7ff ff5a 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005ce:	1d2b      	adds	r3, r5, #4
 80005d0:	9d01      	ldr	r5, [sp, #4]
 80005d2:	18f2      	adds	r2, r6, r3
 80005d4:	441d      	add	r5, r3
 80005d6:	1b91      	subs	r1, r2, r6
 80005d8:	42a9      	cmp	r1, r5
 80005da:	d204      	bcs.n	80005e6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80005dc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80005e0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80005e4:	e7f7      	b.n	80005d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80005e6:	1972      	adds	r2, r6, r5
 80005e8:	3b01      	subs	r3, #1
 80005ea:	f802 8c01 	strb.w	r8, [r2, #-1]
 80005ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80005f0:	4433      	add	r3, r6
 80005f2:	6223      	str	r3, [r4, #32]
 80005f4:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80005f8:	3701      	adds	r7, #1
 80005fa:	e7e1      	b.n	80005c0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80005fc:	4628      	mov	r0, r5
 80005fe:	b002      	add	sp, #8
 8000600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000604 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000606:	780b      	ldrb	r3, [r1, #0]
 8000608:	8083      	strh	r3, [r0, #4]
 800060a:	784a      	ldrb	r2, [r1, #1]
 800060c:	b085      	sub	sp, #20
 800060e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000612:	8083      	strh	r3, [r0, #4]
 8000614:	460c      	mov	r4, r1
 8000616:	4606      	mov	r6, r0
 8000618:	3102      	adds	r1, #2
 800061a:	a801      	add	r0, sp, #4
 800061c:	f7ff ff31 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000620:	9f01      	ldr	r7, [sp, #4]
 8000622:	1da3      	adds	r3, r4, #6
 8000624:	1dbd      	adds	r5, r7, #6
 8000626:	1b1a      	subs	r2, r3, r4
 8000628:	4295      	cmp	r5, r2
 800062a:	d904      	bls.n	8000636 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800062c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000630:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000634:	e7f7      	b.n	8000626 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000636:	19e3      	adds	r3, r4, r7
 8000638:	2200      	movs	r2, #0
 800063a:	715a      	strb	r2, [r3, #5]
 800063c:	1d63      	adds	r3, r4, #5
 800063e:	60b3      	str	r3, [r6, #8]
 8000640:	1961      	adds	r1, r4, r5
 8000642:	a802      	add	r0, sp, #8
 8000644:	f7ff ff1d 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000648:	1d2b      	adds	r3, r5, #4
 800064a:	9d02      	ldr	r5, [sp, #8]
 800064c:	f107 020a 	add.w	r2, r7, #10
 8000650:	441d      	add	r5, r3
 8000652:	4422      	add	r2, r4
 8000654:	1b11      	subs	r1, r2, r4
 8000656:	428d      	cmp	r5, r1
 8000658:	d904      	bls.n	8000664 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800065a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800065e:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000662:	e7f7      	b.n	8000654 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000664:	1961      	adds	r1, r4, r5
 8000666:	3b01      	subs	r3, #1
 8000668:	4423      	add	r3, r4
 800066a:	2200      	movs	r2, #0
 800066c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000670:	a803      	add	r0, sp, #12
 8000672:	60f3      	str	r3, [r6, #12]
 8000674:	f7ff ff05 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000678:	9803      	ldr	r0, [sp, #12]
 800067a:	3504      	adds	r5, #4
 800067c:	4428      	add	r0, r5
 800067e:	1963      	adds	r3, r4, r5
 8000680:	1b1a      	subs	r2, r3, r4
 8000682:	4290      	cmp	r0, r2
 8000684:	d904      	bls.n	8000690 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000686:	f813 2b01 	ldrb.w	r2, [r3], #1
 800068a:	f803 2c02 	strb.w	r2, [r3, #-2]
 800068e:	e7f7      	b.n	8000680 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000690:	1822      	adds	r2, r4, r0
 8000692:	3d01      	subs	r5, #1
 8000694:	2300      	movs	r3, #0
 8000696:	4425      	add	r5, r4
 8000698:	f802 3c01 	strb.w	r3, [r2, #-1]
 800069c:	6135      	str	r5, [r6, #16]
 800069e:	7893      	ldrb	r3, [r2, #2]
 80006a0:	7851      	ldrb	r1, [r2, #1]
 80006a2:	78d2      	ldrb	r2, [r2, #3]
 80006a4:	041b      	lsls	r3, r3, #16
 80006a6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006aa:	5c21      	ldrb	r1, [r4, r0]
 80006ac:	430b      	orrs	r3, r1
 80006ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80006b2:	3004      	adds	r0, #4
 80006b4:	6173      	str	r3, [r6, #20]
 80006b6:	b005      	add	sp, #20
 80006b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80006bc:	b530      	push	{r4, r5, lr}
 80006be:	b085      	sub	sp, #20
 80006c0:	4604      	mov	r4, r0
 80006c2:	4b09      	ldr	r3, [pc, #36]	; (80006e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80006c4:	9301      	str	r3, [sp, #4]
 80006c6:	2300      	movs	r3, #0
 80006c8:	9302      	str	r3, [sp, #8]
 80006ca:	9303      	str	r3, [sp, #12]
 80006cc:	f854 3bec 	ldr.w	r3, [r4], #236
 80006d0:	aa01      	add	r2, sp, #4
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	210a      	movs	r1, #10
 80006d6:	4605      	mov	r5, r0
 80006d8:	4798      	blx	r3
 80006da:	4620      	mov	r0, r4
 80006dc:	f006 fa89 	bl	8006bf2 <mbed::Timer::read_ms()>
 80006e0:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 80006e4:	b005      	add	sp, #20
 80006e6:	bd30      	pop	{r4, r5, pc}
 80006e8:	08008870 	.word	0x08008870

080006ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 80006ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006f0:	b086      	sub	sp, #24
 80006f2:	4b2b      	ldr	r3, [pc, #172]	; (80007a0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 80006f4:	9300      	str	r3, [sp, #0]
 80006f6:	2200      	movs	r2, #0
 80006f8:	4b2a      	ldr	r3, [pc, #168]	; (80007a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 80006fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80006fe:	4605      	mov	r5, r0
 8000700:	9302      	str	r3, [sp, #8]
 8000702:	9303      	str	r3, [sp, #12]
 8000704:	9304      	str	r3, [sp, #16]
 8000706:	9205      	str	r2, [sp, #20]
 8000708:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 800070c:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000710:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000714:	6823      	ldr	r3, [r4, #0]
 8000716:	b1bb      	cbz	r3, 8000748 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000718:	6858      	ldr	r0, [r3, #4]
 800071a:	689a      	ldr	r2, [r3, #8]
 800071c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000720:	681a      	ldr	r2, [r3, #0]
 8000722:	6803      	ldr	r3, [r0, #0]
 8000724:	9202      	str	r2, [sp, #8]
 8000726:	689b      	ldr	r3, [r3, #8]
 8000728:	4798      	blx	r3
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	9003      	str	r0, [sp, #12]
 800072e:	6858      	ldr	r0, [r3, #4]
 8000730:	6803      	ldr	r3, [r0, #0]
 8000732:	68db      	ldr	r3, [r3, #12]
 8000734:	4798      	blx	r3
 8000736:	6821      	ldr	r1, [r4, #0]
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	9004      	str	r0, [sp, #16]
 800073c:	9705      	str	r7, [sp, #20]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	6909      	ldr	r1, [r1, #16]
 8000742:	466a      	mov	r2, sp
 8000744:	4628      	mov	r0, r5
 8000746:	4798      	blx	r3
 8000748:	3404      	adds	r4, #4
 800074a:	42b4      	cmp	r4, r6
 800074c:	d1e2      	bne.n	8000714 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800074e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000752:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000756:	6820      	ldr	r0, [r4, #0]
 8000758:	b1c8      	cbz	r0, 800078e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800075a:	6843      	ldr	r3, [r0, #4]
 800075c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000760:	6883      	ldr	r3, [r0, #8]
 8000762:	9302      	str	r3, [sp, #8]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	689b      	ldr	r3, [r3, #8]
 8000768:	4798      	blx	r3
 800076a:	9003      	str	r0, [sp, #12]
 800076c:	6820      	ldr	r0, [r4, #0]
 800076e:	6803      	ldr	r3, [r0, #0]
 8000770:	68db      	ldr	r3, [r3, #12]
 8000772:	4798      	blx	r3
 8000774:	682b      	ldr	r3, [r5, #0]
 8000776:	9004      	str	r0, [sp, #16]
 8000778:	6820      	ldr	r0, [r4, #0]
 800077a:	f8d3 8000 	ldr.w	r8, [r3]
 800077e:	6803      	ldr	r3, [r0, #0]
 8000780:	9705      	str	r7, [sp, #20]
 8000782:	685b      	ldr	r3, [r3, #4]
 8000784:	4798      	blx	r3
 8000786:	466a      	mov	r2, sp
 8000788:	4601      	mov	r1, r0
 800078a:	4628      	mov	r0, r5
 800078c:	47c0      	blx	r8
 800078e:	3404      	adds	r4, #4
 8000790:	42a6      	cmp	r6, r4
 8000792:	d1e0      	bne.n	8000756 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000794:	2301      	movs	r3, #1
 8000796:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 800079a:	b006      	add	sp, #24
 800079c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007a0:	08008888 	.word	0x08008888
 80007a4:	08008a76 	.word	0x08008a76

080007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80007a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007aa:	b085      	sub	sp, #20
 80007ac:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80007b0:	4b1f      	ldr	r3, [pc, #124]	; (8000830 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80007b2:	9301      	str	r3, [sp, #4]
 80007b4:	4604      	mov	r4, r0
 80007b6:	2300      	movs	r3, #0
 80007b8:	4628      	mov	r0, r5
 80007ba:	9302      	str	r3, [sp, #8]
 80007bc:	9303      	str	r3, [sp, #12]
 80007be:	460e      	mov	r6, r1
 80007c0:	f006 fa17 	bl	8006bf2 <mbed::Timer::read_ms()>
 80007c4:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80007c8:	4631      	mov	r1, r6
 80007ca:	1a87      	subs	r7, r0, r2
 80007cc:	a801      	add	r0, sp, #4
 80007ce:	f7ff fd43 	bl	8000258 <std_msgs::Time::deserialize(unsigned char*)>
 80007d2:	9b02      	ldr	r3, [sp, #8]
 80007d4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80007d8:	fbb7 f2f6 	udiv	r2, r7, r6
 80007dc:	4413      	add	r3, r2
 80007de:	9302      	str	r3, [sp, #8]
 80007e0:	fb06 7212 	mls	r2, r6, r2, r7
 80007e4:	9b03      	ldr	r3, [sp, #12]
 80007e6:	4f13      	ldr	r7, [pc, #76]	; (8000834 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 80007e8:	4628      	mov	r0, r5
 80007ea:	fb07 3202 	mla	r2, r7, r2, r3
 80007ee:	9203      	str	r2, [sp, #12]
 80007f0:	f006 f9ff 	bl	8006bf2 <mbed::Timer::read_ms()>
 80007f4:	9a02      	ldr	r2, [sp, #8]
 80007f6:	fbb0 f3f6 	udiv	r3, r0, r6
 80007fa:	3a01      	subs	r2, #1
 80007fc:	1ad2      	subs	r2, r2, r3
 80007fe:	9903      	ldr	r1, [sp, #12]
 8000800:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000804:	4a0c      	ldr	r2, [pc, #48]	; (8000838 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000806:	fb06 0313 	mls	r3, r6, r3, r0
 800080a:	440a      	add	r2, r1
 800080c:	fb07 2313 	mls	r3, r7, r3, r2
 8000810:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000814:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000818:	f504 7080 	add.w	r0, r4, #256	; 0x100
 800081c:	f000 fa1c 	bl	8000c58 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000820:	4628      	mov	r0, r5
 8000822:	f006 f9e6 	bl	8006bf2 <mbed::Timer::read_ms()>
 8000826:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800082a:	b005      	add	sp, #20
 800082c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800082e:	bf00      	nop
 8000830:	08008870 	.word	0x08008870
 8000834:	000f4240 	.word	0x000f4240
 8000838:	3b9aca00 	.word	0x3b9aca00

0800083c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 800083c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800083e:	2963      	cmp	r1, #99	; 0x63
 8000840:	b085      	sub	sp, #20
 8000842:	4604      	mov	r4, r0
 8000844:	460e      	mov	r6, r1
 8000846:	dd03      	ble.n	8000850 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000848:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 800084c:	2d00      	cmp	r5, #0
 800084e:	d04d      	beq.n	80008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000850:	6813      	ldr	r3, [r2, #0]
 8000852:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	4610      	mov	r0, r2
 800085a:	4798      	blx	r3
 800085c:	23ff      	movs	r3, #255	; 0xff
 800085e:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000862:	23fe      	movs	r3, #254	; 0xfe
 8000864:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000868:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 800086c:	b2c3      	uxtb	r3, r0
 800086e:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000872:	4413      	add	r3, r2
 8000874:	43db      	mvns	r3, r3
 8000876:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 800087a:	f346 2607 	sbfx	r6, r6, #8, #8
 800087e:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000882:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000886:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 800088a:	f204 3111 	addw	r1, r4, #785	; 0x311
 800088e:	2205      	movs	r2, #5
 8000890:	2300      	movs	r3, #0
 8000892:	1d86      	adds	r6, r0, #6
 8000894:	42b2      	cmp	r2, r6
 8000896:	dc04      	bgt.n	80008a2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000898:	f811 5b01 	ldrb.w	r5, [r1], #1
 800089c:	3201      	adds	r2, #1
 800089e:	442b      	add	r3, r5
 80008a0:	e7f8      	b.n	8000894 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 80008a2:	f100 0508 	add.w	r5, r0, #8
 80008a6:	4420      	add	r0, r4
 80008a8:	43db      	mvns	r3, r3
 80008aa:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80008ae:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 80008b2:	dc0c      	bgt.n	80008ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 80008b4:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 80008b8:	463e      	mov	r6, r7
 80008ba:	3404      	adds	r4, #4
 80008bc:	1bf3      	subs	r3, r6, r7
 80008be:	429d      	cmp	r5, r3
 80008c0:	dd14      	ble.n	80008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 80008c2:	f816 1b01 	ldrb.w	r1, [r6], #1
 80008c6:	4620      	mov	r0, r4
 80008c8:	f000 fb2c 	bl	8000f24 <BufferedSerial::putc(int)>
 80008cc:	e7f6      	b.n	80008bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 80008ce:	4b09      	ldr	r3, [pc, #36]	; (80008f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 80008d0:	9301      	str	r3, [sp, #4]
 80008d2:	2303      	movs	r3, #3
 80008d4:	f88d 3008 	strb.w	r3, [sp, #8]
 80008d8:	4b07      	ldr	r3, [pc, #28]	; (80008f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 80008da:	9303      	str	r3, [sp, #12]
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	aa01      	add	r2, sp, #4
 80008e0:	681b      	ldr	r3, [r3, #0]
 80008e2:	2107      	movs	r1, #7
 80008e4:	4620      	mov	r0, r4
 80008e6:	4798      	blx	r3
 80008e8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80008ec:	4628      	mov	r0, r5
 80008ee:	b005      	add	sp, #20
 80008f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008f2:	bf00      	nop
 80008f4:	080088a0 	.word	0x080088a0
 80008f8:	08008987 	.word	0x08008987

080008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 80008fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000900:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000904:	4604      	mov	r4, r0
 8000906:	4640      	mov	r0, r8
 8000908:	f006 f973 	bl	8006bf2 <mbed::Timer::read_ms()>
 800090c:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000910:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000914:	1ac3      	subs	r3, r0, r3
 8000916:	4293      	cmp	r3, r2
 8000918:	bf84      	itt	hi
 800091a:	2300      	movhi	r3, #0
 800091c:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000920:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000924:	4605      	mov	r5, r0
 8000926:	b133      	cbz	r3, 8000936 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000928:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 800092c:	4283      	cmp	r3, r0
 800092e:	bf3c      	itt	cc
 8000930:	2300      	movcc	r3, #0
 8000932:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000936:	f104 0904 	add.w	r9, r4, #4
 800093a:	2600      	movs	r6, #0
 800093c:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000940:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000944:	b9ab      	cbnz	r3, 8000972 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000946:	4648      	mov	r0, r9
 8000948:	f000 f994 	bl	8000c74 <BufferedSerial::readable()>
 800094c:	b9e8      	cbnz	r0, 800098a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 800094e:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000952:	b160      	cbz	r0, 800096e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000954:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000958:	f640 12c4 	movw	r2, #2500	; 0x9c4
 800095c:	1aeb      	subs	r3, r5, r3
 800095e:	4293      	cmp	r3, r2
 8000960:	d904      	bls.n	800096c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000962:	4620      	mov	r0, r4
 8000964:	f7ff feaa 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000968:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 800096c:	2000      	movs	r0, #0
 800096e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000972:	4640      	mov	r0, r8
 8000974:	f006 f93d 	bl	8006bf2 <mbed::Timer::read_ms()>
 8000978:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800097c:	1b40      	subs	r0, r0, r5
 800097e:	4298      	cmp	r0, r3
 8000980:	d9e1      	bls.n	8000946 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000982:	f06f 0001 	mvn.w	r0, #1
 8000986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800098a:	4648      	mov	r0, r9
 800098c:	f000 f97c 	bl	8000c88 <BufferedSerial::getc()>
 8000990:	2800      	cmp	r0, #0
 8000992:	dbdc      	blt.n	800094e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000994:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000998:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 800099c:	4403      	add	r3, r0
 800099e:	f1ba 0f07 	cmp.w	r10, #7
 80009a2:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 80009a6:	d112      	bne.n	80009ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 80009a8:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80009ac:	1c5a      	adds	r2, r3, #1
 80009ae:	4423      	add	r3, r4
 80009b0:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 80009b4:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 80009b8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 80009bc:	3b01      	subs	r3, #1
 80009be:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	d1bc      	bne.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009c6:	2308      	movs	r3, #8
 80009c8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80009cc:	e7b8      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009ce:	f1ba 0f00 	cmp.w	r10, #0
 80009d2:	d114      	bne.n	80009fe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 80009d4:	28ff      	cmp	r0, #255	; 0xff
 80009d6:	d107      	bne.n	80009e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 80009d8:	2301      	movs	r3, #1
 80009da:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80009de:	f105 0314 	add.w	r3, r5, #20
 80009e2:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80009e6:	e7ab      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009e8:	4640      	mov	r0, r8
 80009ea:	f006 f902 	bl	8006bf2 <mbed::Timer::read_ms()>
 80009ee:	f241 3388 	movw	r3, #5000	; 0x1388
 80009f2:	1b40      	subs	r0, r0, r5
 80009f4:	4298      	cmp	r0, r3
 80009f6:	d9a3      	bls.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009f8:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 80009fc:	e7c1      	b.n	8000982 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 80009fe:	f1ba 0f01 	cmp.w	r10, #1
 8000a02:	d10d      	bne.n	8000a20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000a04:	28fe      	cmp	r0, #254	; 0xfe
 8000a06:	d101      	bne.n	8000a0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000a08:	2302      	movs	r3, #2
 8000a0a:	e7dd      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a0c:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000a10:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d193      	bne.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a18:	4620      	mov	r0, r4
 8000a1a:	f7ff fe4f 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000a1e:	e78f      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a20:	f1ba 0f02 	cmp.w	r10, #2
 8000a24:	d109      	bne.n	8000a3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000a26:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000a2a:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000a2e:	2303      	movs	r3, #3
 8000a30:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a34:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000a38:	e782      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a3a:	f1ba 0f03 	cmp.w	r10, #3
 8000a3e:	d107      	bne.n	8000a50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000a40:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a44:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000a48:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000a4c:	2304      	movs	r3, #4
 8000a4e:	e7bb      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a50:	f1ba 0f04 	cmp.w	r10, #4
 8000a54:	d10b      	bne.n	8000a6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000a56:	425a      	negs	r2, r3
 8000a58:	b2d2      	uxtb	r2, r2
 8000a5a:	b2db      	uxtb	r3, r3
 8000a5c:	bf58      	it	pl
 8000a5e:	4253      	negpl	r3, r2
 8000a60:	2bff      	cmp	r3, #255	; 0xff
 8000a62:	d101      	bne.n	8000a68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000a64:	2305      	movs	r3, #5
 8000a66:	e7af      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a68:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a6c:	e768      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a6e:	f1ba 0f05 	cmp.w	r10, #5
 8000a72:	d103      	bne.n	8000a7c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000a74:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000a78:	2306      	movs	r3, #6
 8000a7a:	e7d9      	b.n	8000a30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000a7c:	f1ba 0f06 	cmp.w	r10, #6
 8000a80:	d10b      	bne.n	8000a9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000a82:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000a86:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000a8a:	2307      	movs	r3, #7
 8000a8c:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a90:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000a94:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a98:	e793      	b.n	80009c2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000a9a:	f1ba 0f08 	cmp.w	r10, #8
 8000a9e:	f47f af4f 	bne.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000aa2:	425a      	negs	r2, r3
 8000aa4:	b2d2      	uxtb	r2, r2
 8000aa6:	b2db      	uxtb	r3, r3
 8000aa8:	bf58      	it	pl
 8000aaa:	4253      	negpl	r3, r2
 8000aac:	2bff      	cmp	r3, #255	; 0xff
 8000aae:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ab2:	f47f af45 	bne.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ab6:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000aba:	b96b      	cbnz	r3, 8000ad8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000abc:	4620      	mov	r0, r4
 8000abe:	f7ff fdfd 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000ac2:	4620      	mov	r0, r4
 8000ac4:	f7ff fe12 	bl	80006ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000ac8:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000acc:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000ad0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000ad8:	2b0a      	cmp	r3, #10
 8000ada:	d104      	bne.n	8000ae6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000adc:	4639      	mov	r1, r7
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f7ff fe62 	bl	80007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000ae4:	e72c      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ae6:	2b06      	cmp	r3, #6
 8000ae8:	d108      	bne.n	8000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000aea:	4639      	mov	r1, r7
 8000aec:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000af0:	f7ff fcf1 	bl	80004d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000af4:	2301      	movs	r3, #1
 8000af6:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000afa:	e721      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000afc:	2b0b      	cmp	r3, #11
 8000afe:	d102      	bne.n	8000b06 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000b00:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000b04:	e71c      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b06:	33f8      	adds	r3, #248	; 0xf8
 8000b08:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	f43f af17 	beq.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b12:	6803      	ldr	r3, [r0, #0]
 8000b14:	4639      	mov	r1, r7
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	4798      	blx	r3
 8000b1a:	e711      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000b1c <main>:
 8000b1c:	b500      	push	{lr}
 8000b1e:	f6ad 1d24 	subw	sp, sp, #2340	; 0x924
 8000b22:	4b3f      	ldr	r3, [pc, #252]	; (8000c20 <main+0x104>)
 8000b24:	93bf      	str	r3, [sp, #764]	; 0x2fc
 8000b26:	2400      	movs	r4, #0
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2203      	movs	r2, #3
 8000b2c:	2102      	movs	r1, #2
 8000b2e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8000b32:	a8c0      	add	r0, sp, #768	; 0x300
 8000b34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b38:	f000 f984 	bl	8000e44 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000b3c:	a8fa      	add	r0, sp, #1000	; 0x3e8
 8000b3e:	f006 f86e 	bl	8006c1e <mbed::Timer::Timer()>
 8000b42:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000b46:	a8fa      	add	r0, sp, #1000	; 0x3e8
 8000b48:	93f9      	str	r3, [sp, #996]	; 0x3e4
 8000b4a:	f006 f826 	bl	8006b9a <mbed::Timer::start()>
 8000b4e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b52:	4621      	mov	r1, r4
 8000b54:	f50d 6081 	add.w	r0, sp, #1032	; 0x408
 8000b58:	94fe      	str	r4, [sp, #1016]	; 0x3f8
 8000b5a:	94ff      	str	r4, [sp, #1020]	; 0x3fc
 8000b5c:	f8cd 4400 	str.w	r4, [sp, #1024]	; 0x400
 8000b60:	f8cd 4404 	str.w	r4, [sp, #1028]	; 0x404
 8000b64:	f007 f989 	bl	8007e7a <memset>
 8000b68:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b6c:	4621      	mov	r1, r4
 8000b6e:	f50d 60c1 	add.w	r0, sp, #1544	; 0x608
 8000b72:	f007 f982 	bl	8007e7a <memset>
 8000b76:	2264      	movs	r2, #100	; 0x64
 8000b78:	4621      	mov	r1, r4
 8000b7a:	f60d 0008 	addw	r0, sp, #2056	; 0x808
 8000b7e:	f007 f97c 	bl	8007e7a <memset>
 8000b82:	2264      	movs	r2, #100	; 0x64
 8000b84:	4621      	mov	r1, r4
 8000b86:	f60d 006c 	addw	r0, sp, #2156	; 0x86c
 8000b8a:	f007 f976 	bl	8007e7a <memset>
 8000b8e:	f60d 120c 	addw	r2, sp, #2316	; 0x90c
 8000b92:	4b24      	ldr	r3, [pc, #144]	; (8000c24 <main+0x108>)
 8000b94:	f8cd 38f8 	str.w	r3, [sp, #2296]	; 0x8f8
 8000b98:	2300      	movs	r3, #0
 8000b9a:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000b9e:	6013      	str	r3, [r2, #0]
 8000ba0:	a8c0      	add	r0, sp, #768	; 0x300
 8000ba2:	91f9      	str	r1, [sp, #996]	; 0x3e4
 8000ba4:	f8cd 48d0 	str.w	r4, [sp, #2256]	; 0x8d0
 8000ba8:	f8cd 48d4 	str.w	r4, [sp, #2260]	; 0x8d4
 8000bac:	f8cd 48d8 	str.w	r4, [sp, #2264]	; 0x8d8
 8000bb0:	f8cd 48dc 	str.w	r4, [sp, #2268]	; 0x8dc
 8000bb4:	f8cd 48e0 	str.w	r4, [sp, #2272]	; 0x8e0
 8000bb8:	f88d 48e4 	strb.w	r4, [sp, #2276]	; 0x8e4
 8000bbc:	f8cd 48e8 	str.w	r4, [sp, #2280]	; 0x8e8
 8000bc0:	f8cd 48ec 	str.w	r4, [sp, #2284]	; 0x8ec
 8000bc4:	f8cd 48f0 	str.w	r4, [sp, #2288]	; 0x8f0
 8000bc8:	f88d 48f4 	strb.w	r4, [sp, #2292]	; 0x8f4
 8000bcc:	f8cd 48fc 	str.w	r4, [sp, #2300]	; 0x8fc
 8000bd0:	f8cd 4900 	str.w	r4, [sp, #2304]	; 0x900
 8000bd4:	f8cd 4904 	str.w	r4, [sp, #2308]	; 0x904
 8000bd8:	f8cd 4908 	str.w	r4, [sp, #2312]	; 0x908
 8000bdc:	f8cd 4910 	str.w	r4, [sp, #2320]	; 0x910
 8000be0:	f8cd 4914 	str.w	r4, [sp, #2324]	; 0x914
 8000be4:	f8cd 4918 	str.w	r4, [sp, #2328]	; 0x918
 8000be8:	f8cd 491c 	str.w	r4, [sp, #2332]	; 0x91c
 8000bec:	f005 fef2 	bl	80069d4 <mbed::SerialBase::baud(int)>
 8000bf0:	a9bf      	add	r1, sp, #764	; 0x2fc
 8000bf2:	a802      	add	r0, sp, #8
 8000bf4:	f8cd 48d0 	str.w	r4, [sp, #2256]	; 0x8d0
 8000bf8:	f8cd 48d4 	str.w	r4, [sp, #2260]	; 0x8d4
 8000bfc:	f8cd 48dc 	str.w	r4, [sp, #2268]	; 0x8dc
 8000c00:	f8cd 48d8 	str.w	r4, [sp, #2264]	; 0x8d8
 8000c04:	f001 fabe 	bl	8002184 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)>
 8000c08:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c0c:	f006 f95a 	bl	8006ec4 <wait_ms>
 8000c10:	a802      	add	r0, sp, #8
 8000c12:	f001 f82d 	bl	8001c70 <AKROS_bridge::loop()>
 8000c16:	a8bf      	add	r0, sp, #764	; 0x2fc
 8000c18:	f7ff fe70 	bl	80008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000c1c:	200a      	movs	r0, #10
 8000c1e:	e7f5      	b.n	8000c0c <main+0xf0>
 8000c20:	080088d0 	.word	0x080088d0
 8000c24:	080088b8 	.word	0x080088b8

08000c28 <_start>:
 8000c28:	4807      	ldr	r0, [pc, #28]	; (8000c48 <_start+0x20>)
 8000c2a:	4a08      	ldr	r2, [pc, #32]	; (8000c4c <_start+0x24>)
 8000c2c:	b508      	push	{r3, lr}
 8000c2e:	1a12      	subs	r2, r2, r0
 8000c30:	2100      	movs	r1, #0
 8000c32:	f007 f922 	bl	8007e7a <memset>
 8000c36:	f006 fa05 	bl	8007044 <software_init_hook>
 8000c3a:	f007 f86f 	bl	8007d1c <__libc_init_array>
 8000c3e:	f006 fa08 	bl	8007052 <__wrap_main>
 8000c42:	f006 fa43 	bl	80070cc <__wrap_exit>
 8000c46:	bf00      	nop
 8000c48:	20000270 	.word	0x20000270
 8000c4c:	2000229c 	.word	0x2000229c

08000c50 <abort>:
 8000c50:	b508      	push	{r3, lr}
 8000c52:	2001      	movs	r0, #1
 8000c54:	f006 fa3a 	bl	80070cc <__wrap_exit>

08000c58 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000c58:	b530      	push	{r4, r5, lr}
 8000c5a:	6802      	ldr	r2, [r0, #0]
 8000c5c:	680d      	ldr	r5, [r1, #0]
 8000c5e:	4c04      	ldr	r4, [pc, #16]	; (8000c70 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000c60:	fbb5 f3f4 	udiv	r3, r5, r4
 8000c64:	441a      	add	r2, r3
 8000c66:	fb04 5313 	mls	r3, r4, r3, r5
 8000c6a:	6002      	str	r2, [r0, #0]
 8000c6c:	600b      	str	r3, [r1, #0]
 8000c6e:	bd30      	pop	{r4, r5, pc}
 8000c70:	3b9aca00 	.word	0x3b9aca00

08000c74 <BufferedSerial::readable()>:
 8000c74:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000c78:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000c7c:	1a10      	subs	r0, r2, r0
 8000c7e:	bf18      	it	ne
 8000c80:	2001      	movne	r0, #1
 8000c82:	4770      	bx	lr

08000c84 <BufferedSerial::writeable()>:
 8000c84:	2001      	movs	r0, #1
 8000c86:	4770      	bx	lr

08000c88 <BufferedSerial::getc()>:
 8000c88:	b510      	push	{r4, lr}
 8000c8a:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000c8e:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000c92:	4603      	mov	r3, r0
 8000c94:	1c50      	adds	r0, r2, #1
 8000c96:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000c9a:	5c88      	ldrb	r0, [r1, r2]
 8000c9c:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000ca0:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000ca4:	3a01      	subs	r2, #1
 8000ca6:	fbb4 f1f2 	udiv	r1, r4, r2
 8000caa:	fb02 4211 	mls	r2, r2, r1, r4
 8000cae:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000cb2:	bd10      	pop	{r4, pc}

08000cb4 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	b110      	cbz	r0, 8000cbe <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000cb8:	c907      	ldmia	r1, {r0, r1, r2}
 8000cba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000cbe:	4770      	bx	lr

08000cc0 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000cc0:	4770      	bx	lr

08000cc2 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000cc2:	6842      	ldr	r2, [r0, #4]
 8000cc4:	6881      	ldr	r1, [r0, #8]
 8000cc6:	6803      	ldr	r3, [r0, #0]
 8000cc8:	f012 0f01 	tst.w	r2, #1
 8000ccc:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000cd0:	bf1c      	itt	ne
 8000cd2:	5888      	ldrne	r0, [r1, r2]
 8000cd4:	58c3      	ldrne	r3, [r0, r3]
 8000cd6:	1888      	adds	r0, r1, r2
 8000cd8:	4718      	bx	r3

08000cda <mbed::Callback<void ()>::~Callback()>:
 8000cda:	68c3      	ldr	r3, [r0, #12]
 8000cdc:	b510      	push	{r4, lr}
 8000cde:	4604      	mov	r4, r0
 8000ce0:	b10b      	cbz	r3, 8000ce6 <mbed::Callback<void ()>::~Callback()+0xc>
 8000ce2:	689b      	ldr	r3, [r3, #8]
 8000ce4:	4798      	blx	r3
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}

08000cea <BufferedSerial::txIrq()>:
 8000cea:	b530      	push	{r4, r5, lr}
 8000cec:	4604      	mov	r4, r0
 8000cee:	b085      	sub	sp, #20
 8000cf0:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000cf4:	4628      	mov	r0, r5
 8000cf6:	f004 fa35 	bl	8005164 <serial_writable>
 8000cfa:	b330      	cbz	r0, 8000d4a <BufferedSerial::txIrq()+0x60>
 8000cfc:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8000d00:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000d04:	429a      	cmp	r2, r3
 8000d06:	d016      	beq.n	8000d36 <BufferedSerial::txIrq()+0x4c>
 8000d08:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000d0c:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8000d10:	1c59      	adds	r1, r3, #1
 8000d12:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8000d16:	5cd1      	ldrb	r1, [r2, r3]
 8000d18:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8000d1c:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8000d20:	3b01      	subs	r3, #1
 8000d22:	fbb0 f2f3 	udiv	r2, r0, r3
 8000d26:	fb03 0312 	mls	r3, r3, r2, r0
 8000d2a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8000d2e:	4628      	mov	r0, r5
 8000d30:	f004 fa22 	bl	8005178 <serial_putc>
 8000d34:	e7de      	b.n	8000cf4 <BufferedSerial::txIrq()+0xa>
 8000d36:	2300      	movs	r3, #0
 8000d38:	4620      	mov	r0, r4
 8000d3a:	2201      	movs	r2, #1
 8000d3c:	4669      	mov	r1, sp
 8000d3e:	9303      	str	r3, [sp, #12]
 8000d40:	f005 fed6 	bl	8006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000d44:	4668      	mov	r0, sp
 8000d46:	f7ff ffc8 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000d4a:	b005      	add	sp, #20
 8000d4c:	bd30      	pop	{r4, r5, pc}

08000d4e <mbed::Callback<void (int)>::~Callback()>:
 8000d4e:	68c3      	ldr	r3, [r0, #12]
 8000d50:	b510      	push	{r4, lr}
 8000d52:	4604      	mov	r4, r0
 8000d54:	b10b      	cbz	r3, 8000d5a <mbed::Callback<void (int)>::~Callback()+0xc>
 8000d56:	689b      	ldr	r3, [r3, #8]
 8000d58:	4798      	blx	r3
 8000d5a:	4620      	mov	r0, r4
 8000d5c:	bd10      	pop	{r4, pc}
	...

08000d60 <mbed::SerialBase::~SerialBase()>:
 8000d60:	b570      	push	{r4, r5, r6, lr}
 8000d62:	4606      	mov	r6, r0
 8000d64:	4b0b      	ldr	r3, [pc, #44]	; (8000d94 <mbed::SerialBase::~SerialBase()+0x34>)
 8000d66:	f846 3b98 	str.w	r3, [r6], #152
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	b146      	cbz	r6, 8000d80 <mbed::SerialBase::~SerialBase()+0x20>
 8000d6e:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8000d72:	42b5      	cmp	r5, r6
 8000d74:	d004      	beq.n	8000d80 <mbed::SerialBase::~SerialBase()+0x20>
 8000d76:	3d10      	subs	r5, #16
 8000d78:	4628      	mov	r0, r5
 8000d7a:	f7ff ffae 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000d7e:	e7f8      	b.n	8000d72 <mbed::SerialBase::~SerialBase()+0x12>
 8000d80:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8000d84:	f7ff ffe3 	bl	8000d4e <mbed::Callback<void (int)>::~Callback()>
 8000d88:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000d8c:	f7ff ffdf 	bl	8000d4e <mbed::Callback<void (int)>::~Callback()>
 8000d90:	4620      	mov	r0, r4
 8000d92:	bd70      	pop	{r4, r5, r6, pc}
 8000d94:	080091b0 	.word	0x080091b0

08000d98 <mbed::SerialBase::~SerialBase()>:
 8000d98:	b510      	push	{r4, lr}
 8000d9a:	4604      	mov	r4, r0
 8000d9c:	f7ff ffe0 	bl	8000d60 <mbed::SerialBase::~SerialBase()>
 8000da0:	4620      	mov	r0, r4
 8000da2:	f006 f9bb 	bl	800711c <operator delete(void*)>
 8000da6:	4620      	mov	r0, r4
 8000da8:	bd10      	pop	{r4, pc}
	...

08000dac <BufferedSerial::~BufferedSerial()>:
 8000dac:	b530      	push	{r4, r5, lr}
 8000dae:	4b13      	ldr	r3, [pc, #76]	; (8000dfc <BufferedSerial::~BufferedSerial()+0x50>)
 8000db0:	6003      	str	r3, [r0, #0]
 8000db2:	b085      	sub	sp, #20
 8000db4:	2500      	movs	r5, #0
 8000db6:	462a      	mov	r2, r5
 8000db8:	4669      	mov	r1, sp
 8000dba:	4604      	mov	r4, r0
 8000dbc:	9503      	str	r5, [sp, #12]
 8000dbe:	f005 fe97 	bl	8006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000dc2:	4668      	mov	r0, sp
 8000dc4:	f7ff ff89 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000dc8:	2201      	movs	r2, #1
 8000dca:	4669      	mov	r1, sp
 8000dcc:	4620      	mov	r0, r4
 8000dce:	9503      	str	r5, [sp, #12]
 8000dd0:	f005 fe8e 	bl	8006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000dd4:	4668      	mov	r0, sp
 8000dd6:	f7ff ff80 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000dda:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000dde:	f000 f923 	bl	8001028 <Buffer<char>::~Buffer()>
 8000de2:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000de6:	f000 f91f 	bl	8001028 <Buffer<char>::~Buffer()>
 8000dea:	4b05      	ldr	r3, [pc, #20]	; (8000e00 <BufferedSerial::~BufferedSerial()+0x54>)
 8000dec:	6023      	str	r3, [r4, #0]
 8000dee:	4620      	mov	r0, r4
 8000df0:	f7ff ffb6 	bl	8000d60 <mbed::SerialBase::~SerialBase()>
 8000df4:	4620      	mov	r0, r4
 8000df6:	b005      	add	sp, #20
 8000df8:	bd30      	pop	{r4, r5, pc}
 8000dfa:	bf00      	nop
 8000dfc:	08008a80 	.word	0x08008a80
 8000e00:	080091c8 	.word	0x080091c8

08000e04 <BufferedSerial::~BufferedSerial()>:
 8000e04:	b510      	push	{r4, lr}
 8000e06:	4604      	mov	r4, r0
 8000e08:	f7ff ffd0 	bl	8000dac <BufferedSerial::~BufferedSerial()>
 8000e0c:	4620      	mov	r0, r4
 8000e0e:	f006 f985 	bl	800711c <operator delete(void*)>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd10      	pop	{r4, pc}
	...

08000e18 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8000e18:	b510      	push	{r4, lr}
 8000e1a:	b086      	sub	sp, #24
 8000e1c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8000e20:	9b01      	ldr	r3, [sp, #4]
 8000e22:	9202      	str	r2, [sp, #8]
 8000e24:	9303      	str	r3, [sp, #12]
 8000e26:	9104      	str	r1, [sp, #16]
 8000e28:	4b05      	ldr	r3, [pc, #20]	; (8000e40 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8000e2a:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8000e2e:	9305      	str	r3, [sp, #20]
 8000e30:	a902      	add	r1, sp, #8
 8000e32:	f005 fe5d 	bl	8006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000e36:	a802      	add	r0, sp, #8
 8000e38:	f7ff ff4f 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000e3c:	b006      	add	sp, #24
 8000e3e:	bd10      	pop	{r4, pc}
 8000e40:	080089f0 	.word	0x080089f0

08000e44 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8000e44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	461d      	mov	r5, r3
 8000e4a:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000e4e:	9e08      	ldr	r6, [sp, #32]
 8000e50:	f005 fe86 	bl	8006b60 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8000e54:	4620      	mov	r0, r4
 8000e56:	4b0f      	ldr	r3, [pc, #60]	; (8000e94 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8000e58:	f840 3bbc 	str.w	r3, [r0], #188
 8000e5c:	4629      	mov	r1, r5
 8000e5e:	f000 f8f2 	bl	8001046 <Buffer<char>::Buffer(unsigned long)>
 8000e62:	fb06 f105 	mul.w	r1, r6, r5
 8000e66:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000e6a:	f000 f8ec 	bl	8001046 <Buffer<char>::Buffer(unsigned long)>
 8000e6e:	4b0a      	ldr	r3, [pc, #40]	; (8000e98 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8000e70:	9302      	str	r3, [sp, #8]
 8000e72:	2300      	movs	r3, #0
 8000e74:	9303      	str	r3, [sp, #12]
 8000e76:	9300      	str	r3, [sp, #0]
 8000e78:	ab04      	add	r3, sp, #16
 8000e7a:	4620      	mov	r0, r4
 8000e7c:	e913 000c 	ldmdb	r3, {r2, r3}
 8000e80:	4621      	mov	r1, r4
 8000e82:	f7ff ffc9 	bl	8000e18 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000e86:	4620      	mov	r0, r4
 8000e88:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8000e8c:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8000e90:	b004      	add	sp, #16
 8000e92:	bd70      	pop	{r4, r5, r6, pc}
 8000e94:	08008a80 	.word	0x08008a80
 8000e98:	08000f03 	.word	0x08000f03

08000e9c <BufferedSerial::prime()>:
 8000e9c:	b570      	push	{r4, r5, r6, lr}
 8000e9e:	4604      	mov	r4, r0
 8000ea0:	b086      	sub	sp, #24
 8000ea2:	304c      	adds	r0, #76	; 0x4c
 8000ea4:	f004 f95e 	bl	8005164 <serial_writable>
 8000ea8:	b1c0      	cbz	r0, 8000edc <BufferedSerial::prime()+0x40>
 8000eaa:	ad02      	add	r5, sp, #8
 8000eac:	2201      	movs	r2, #1
 8000eae:	4629      	mov	r1, r5
 8000eb0:	2600      	movs	r6, #0
 8000eb2:	4620      	mov	r0, r4
 8000eb4:	9605      	str	r6, [sp, #20]
 8000eb6:	f005 fe1b 	bl	8006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000eba:	4628      	mov	r0, r5
 8000ebc:	f7ff ff0d 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	f7ff ff12 	bl	8000cea <BufferedSerial::txIrq()>
 8000ec6:	4b06      	ldr	r3, [pc, #24]	; (8000ee0 <BufferedSerial::prime()+0x44>)
 8000ec8:	9302      	str	r3, [sp, #8]
 8000eca:	2301      	movs	r3, #1
 8000ecc:	9603      	str	r6, [sp, #12]
 8000ece:	9300      	str	r3, [sp, #0]
 8000ed0:	e895 000c 	ldmia.w	r5, {r2, r3}
 8000ed4:	4621      	mov	r1, r4
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	f7ff ff9e 	bl	8000e18 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000edc:	b006      	add	sp, #24
 8000ede:	bd70      	pop	{r4, r5, r6, pc}
 8000ee0:	08000ceb 	.word	0x08000ceb

08000ee4 <Buffer<char>::put(char)>:
 8000ee4:	6843      	ldr	r3, [r0, #4]
 8000ee6:	6802      	ldr	r2, [r0, #0]
 8000ee8:	b510      	push	{r4, lr}
 8000eea:	1c5c      	adds	r4, r3, #1
 8000eec:	6044      	str	r4, [r0, #4]
 8000eee:	54d1      	strb	r1, [r2, r3]
 8000ef0:	68c3      	ldr	r3, [r0, #12]
 8000ef2:	6841      	ldr	r1, [r0, #4]
 8000ef4:	3b01      	subs	r3, #1
 8000ef6:	fbb1 f2f3 	udiv	r2, r1, r3
 8000efa:	fb03 1312 	mls	r3, r3, r2, r1
 8000efe:	6043      	str	r3, [r0, #4]
 8000f00:	bd10      	pop	{r4, pc}

08000f02 <BufferedSerial::rxIrq()>:
 8000f02:	b538      	push	{r3, r4, r5, lr}
 8000f04:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000f08:	4604      	mov	r4, r0
 8000f0a:	4628      	mov	r0, r5
 8000f0c:	f004 f90e 	bl	800512c <serial_readable>
 8000f10:	b138      	cbz	r0, 8000f22 <BufferedSerial::rxIrq()+0x20>
 8000f12:	4628      	mov	r0, r5
 8000f14:	f004 f914 	bl	8005140 <serial_getc>
 8000f18:	b2c1      	uxtb	r1, r0
 8000f1a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000f1e:	f7ff ffe1 	bl	8000ee4 <Buffer<char>::put(char)>
 8000f22:	bd38      	pop	{r3, r4, r5, pc}

08000f24 <BufferedSerial::putc(int)>:
 8000f24:	b538      	push	{r3, r4, r5, lr}
 8000f26:	4605      	mov	r5, r0
 8000f28:	460c      	mov	r4, r1
 8000f2a:	30cc      	adds	r0, #204	; 0xcc
 8000f2c:	b2c9      	uxtb	r1, r1
 8000f2e:	f7ff ffd9 	bl	8000ee4 <Buffer<char>::put(char)>
 8000f32:	4628      	mov	r0, r5
 8000f34:	f7ff ffb2 	bl	8000e9c <BufferedSerial::prime()>
 8000f38:	4620      	mov	r0, r4
 8000f3a:	bd38      	pop	{r3, r4, r5, pc}

08000f3c <BufferedSerial::puts(char const*)>:
 8000f3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f40:	4607      	mov	r7, r0
 8000f42:	460c      	mov	r4, r1
 8000f44:	b1b1      	cbz	r1, 8000f74 <BufferedSerial::puts(char const*)+0x38>
 8000f46:	460d      	mov	r5, r1
 8000f48:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8000f4c:	462e      	mov	r6, r5
 8000f4e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000f52:	b121      	cbz	r1, 8000f5e <BufferedSerial::puts(char const*)+0x22>
 8000f54:	4640      	mov	r0, r8
 8000f56:	f7ff ffc5 	bl	8000ee4 <Buffer<char>::put(char)>
 8000f5a:	4635      	mov	r5, r6
 8000f5c:	e7f6      	b.n	8000f4c <BufferedSerial::puts(char const*)+0x10>
 8000f5e:	210a      	movs	r1, #10
 8000f60:	4640      	mov	r0, r8
 8000f62:	f7ff ffbf 	bl	8000ee4 <Buffer<char>::put(char)>
 8000f66:	1b2c      	subs	r4, r5, r4
 8000f68:	4638      	mov	r0, r7
 8000f6a:	f7ff ff97 	bl	8000e9c <BufferedSerial::prime()>
 8000f6e:	1c60      	adds	r0, r4, #1
 8000f70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f74:	4608      	mov	r0, r1
 8000f76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000f7a <BufferedSerial::write(void const*, unsigned int)>:
 8000f7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f7e:	4607      	mov	r7, r0
 8000f80:	460d      	mov	r5, r1
 8000f82:	b191      	cbz	r1, 8000faa <BufferedSerial::write(void const*, unsigned int)+0x30>
 8000f84:	b1a2      	cbz	r2, 8000fb0 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8000f86:	188c      	adds	r4, r1, r2
 8000f88:	460e      	mov	r6, r1
 8000f8a:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8000f8e:	42b4      	cmp	r4, r6
 8000f90:	d005      	beq.n	8000f9e <BufferedSerial::write(void const*, unsigned int)+0x24>
 8000f92:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000f96:	4640      	mov	r0, r8
 8000f98:	f7ff ffa4 	bl	8000ee4 <Buffer<char>::put(char)>
 8000f9c:	e7f7      	b.n	8000f8e <BufferedSerial::write(void const*, unsigned int)+0x14>
 8000f9e:	4638      	mov	r0, r7
 8000fa0:	f7ff ff7c 	bl	8000e9c <BufferedSerial::prime()>
 8000fa4:	1b60      	subs	r0, r4, r5
 8000fa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000faa:	4608      	mov	r0, r1
 8000fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fb0:	4610      	mov	r0, r2
 8000fb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08000fb8 <BufferedSerial::printf(char const*, ...)>:
 8000fb8:	b40e      	push	{r1, r2, r3}
 8000fba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fbe:	b085      	sub	sp, #20
 8000fc0:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8000fc4:	af02      	add	r7, sp, #8
 8000fc6:	1dd3      	adds	r3, r2, #7
 8000fc8:	f023 0307 	bic.w	r3, r3, #7
 8000fcc:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8000fd0:	ebad 0d03 	sub.w	sp, sp, r3
 8000fd4:	f854 8b04 	ldr.w	r8, [r4], #4
 8000fd8:	ae02      	add	r6, sp, #8
 8000fda:	4605      	mov	r5, r0
 8000fdc:	2100      	movs	r1, #0
 8000fde:	4630      	mov	r0, r6
 8000fe0:	f006 ff4b 	bl	8007e7a <memset>
 8000fe4:	4622      	mov	r2, r4
 8000fe6:	4641      	mov	r1, r8
 8000fe8:	4630      	mov	r0, r6
 8000fea:	607c      	str	r4, [r7, #4]
 8000fec:	f007 fa32 	bl	8008454 <vsiprintf>
 8000ff0:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8000ff4:	4283      	cmp	r3, r0
 8000ff6:	4602      	mov	r2, r0
 8000ff8:	d20c      	bcs.n	8001014 <BufferedSerial::printf(char const*, ...)+0x5c>
 8000ffa:	9000      	str	r0, [sp, #0]
 8000ffc:	225d      	movs	r2, #93	; 0x5d
 8000ffe:	4808      	ldr	r0, [pc, #32]	; (8001020 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001000:	4908      	ldr	r1, [pc, #32]	; (8001024 <BufferedSerial::printf(char const*, ...)+0x6c>)
 8001002:	f001 fe03 	bl	8002c0c <error>
 8001006:	2000      	movs	r0, #0
 8001008:	370c      	adds	r7, #12
 800100a:	46bd      	mov	sp, r7
 800100c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001010:	b003      	add	sp, #12
 8001012:	4770      	bx	lr
 8001014:	4631      	mov	r1, r6
 8001016:	4628      	mov	r0, r5
 8001018:	f7ff ffaf 	bl	8000f7a <BufferedSerial::write(void const*, unsigned int)>
 800101c:	e7f4      	b.n	8001008 <BufferedSerial::printf(char const*, ...)+0x50>
 800101e:	bf00      	nop
 8001020:	08008a3d 	.word	0x08008a3d
 8001024:	080089fc 	.word	0x080089fc

08001028 <Buffer<char>::~Buffer()>:
 8001028:	b510      	push	{r4, lr}
 800102a:	4604      	mov	r4, r0
 800102c:	6800      	ldr	r0, [r0, #0]
 800102e:	b108      	cbz	r0, 8001034 <Buffer<char>::~Buffer()+0xc>
 8001030:	f006 f870 	bl	8007114 <operator delete[](void*)>
 8001034:	4620      	mov	r0, r4
 8001036:	bd10      	pop	{r4, pc}

08001038 <Buffer<char>::clear()>:
 8001038:	2100      	movs	r1, #0
 800103a:	6041      	str	r1, [r0, #4]
 800103c:	68c2      	ldr	r2, [r0, #12]
 800103e:	6081      	str	r1, [r0, #8]
 8001040:	6800      	ldr	r0, [r0, #0]
 8001042:	f006 bf1a 	b.w	8007e7a <memset>

08001046 <Buffer<char>::Buffer(unsigned long)>:
 8001046:	b538      	push	{r3, r4, r5, lr}
 8001048:	4604      	mov	r4, r0
 800104a:	4608      	mov	r0, r1
 800104c:	460d      	mov	r5, r1
 800104e:	f006 f855 	bl	80070fc <operator new[](unsigned int)>
 8001052:	60e5      	str	r5, [r4, #12]
 8001054:	6020      	str	r0, [r4, #0]
 8001056:	4620      	mov	r0, r4
 8001058:	f7ff ffee 	bl	8001038 <Buffer<char>::clear()>
 800105c:	4620      	mov	r0, r4
 800105e:	bd38      	pop	{r3, r4, r5, pc}

08001060 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8001060:	2000      	movs	r0, #0
 8001062:	4770      	bx	lr

08001064 <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 8001064:	2000      	movs	r0, #0
 8001066:	4770      	bx	lr

08001068 <std_srvs::EmptyRequest::getType()>:
 8001068:	4800      	ldr	r0, [pc, #0]	; (800106c <std_srvs::EmptyRequest::getType()+0x4>)
 800106a:	4770      	bx	lr
 800106c:	08008ddb 	.word	0x08008ddb

08001070 <std_srvs::EmptyRequest::getMD5()>:
 8001070:	4800      	ldr	r0, [pc, #0]	; (8001074 <std_srvs::EmptyRequest::getMD5()+0x4>)
 8001072:	4770      	bx	lr
 8001074:	08008dba 	.word	0x08008dba

08001078 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 8001078:	2000      	movs	r0, #0
 800107a:	4770      	bx	lr

0800107c <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 800107c:	2000      	movs	r0, #0
 800107e:	4770      	bx	lr

08001080 <std_srvs::EmptyResponse::getType()>:
 8001080:	4800      	ldr	r0, [pc, #0]	; (8001084 <std_srvs::EmptyResponse::getType()+0x4>)
 8001082:	4770      	bx	lr
 8001084:	08008ddb 	.word	0x08008ddb

08001088 <std_srvs::EmptyResponse::getMD5()>:
 8001088:	4800      	ldr	r0, [pc, #0]	; (800108c <std_srvs::EmptyResponse::getMD5()+0x4>)
 800108a:	4770      	bx	lr
 800108c:	08008dba 	.word	0x08008dba

08001090 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const>:
 8001090:	6843      	ldr	r3, [r0, #4]
 8001092:	b570      	push	{r4, r5, r6, lr}
 8001094:	700b      	strb	r3, [r1, #0]
 8001096:	6843      	ldr	r3, [r0, #4]
 8001098:	0a1b      	lsrs	r3, r3, #8
 800109a:	704b      	strb	r3, [r1, #1]
 800109c:	88c3      	ldrh	r3, [r0, #6]
 800109e:	708b      	strb	r3, [r1, #2]
 80010a0:	79c3      	ldrb	r3, [r0, #7]
 80010a2:	70cb      	strb	r3, [r1, #3]
 80010a4:	1d0a      	adds	r2, r1, #4
 80010a6:	2500      	movs	r5, #0
 80010a8:	6844      	ldr	r4, [r0, #4]
 80010aa:	42a5      	cmp	r5, r4
 80010ac:	eba2 0301 	sub.w	r3, r2, r1
 80010b0:	f102 0208 	add.w	r2, r2, #8
 80010b4:	d21d      	bcs.n	80010f2 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x62>
 80010b6:	6903      	ldr	r3, [r0, #16]
 80010b8:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80010bc:	eb03 06c5 	add.w	r6, r3, r5, lsl #3
 80010c0:	3501      	adds	r5, #1
 80010c2:	6873      	ldr	r3, [r6, #4]
 80010c4:	f802 4c08 	strb.w	r4, [r2, #-8]
 80010c8:	0a26      	lsrs	r6, r4, #8
 80010ca:	f802 6c07 	strb.w	r6, [r2, #-7]
 80010ce:	0c26      	lsrs	r6, r4, #16
 80010d0:	0e24      	lsrs	r4, r4, #24
 80010d2:	f802 4c05 	strb.w	r4, [r2, #-5]
 80010d6:	0a1c      	lsrs	r4, r3, #8
 80010d8:	f802 3c04 	strb.w	r3, [r2, #-4]
 80010dc:	f802 4c03 	strb.w	r4, [r2, #-3]
 80010e0:	0c1c      	lsrs	r4, r3, #16
 80010e2:	0e1b      	lsrs	r3, r3, #24
 80010e4:	f802 6c06 	strb.w	r6, [r2, #-6]
 80010e8:	f802 4c02 	strb.w	r4, [r2, #-2]
 80010ec:	f802 3c01 	strb.w	r3, [r2, #-1]
 80010f0:	e7da      	b.n	80010a8 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x18>
 80010f2:	6942      	ldr	r2, [r0, #20]
 80010f4:	54ca      	strb	r2, [r1, r3]
 80010f6:	6944      	ldr	r4, [r0, #20]
 80010f8:	18ca      	adds	r2, r1, r3
 80010fa:	0a24      	lsrs	r4, r4, #8
 80010fc:	7054      	strb	r4, [r2, #1]
 80010fe:	8ac4      	ldrh	r4, [r0, #22]
 8001100:	7094      	strb	r4, [r2, #2]
 8001102:	7dc4      	ldrb	r4, [r0, #23]
 8001104:	70d4      	strb	r4, [r2, #3]
 8001106:	3304      	adds	r3, #4
 8001108:	440b      	add	r3, r1
 800110a:	2500      	movs	r5, #0
 800110c:	6944      	ldr	r4, [r0, #20]
 800110e:	42a5      	cmp	r5, r4
 8001110:	eba3 0201 	sub.w	r2, r3, r1
 8001114:	f103 0308 	add.w	r3, r3, #8
 8001118:	d21d      	bcs.n	8001156 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0xc6>
 800111a:	6a02      	ldr	r2, [r0, #32]
 800111c:	f852 4035 	ldr.w	r4, [r2, r5, lsl #3]
 8001120:	eb02 06c5 	add.w	r6, r2, r5, lsl #3
 8001124:	3501      	adds	r5, #1
 8001126:	6872      	ldr	r2, [r6, #4]
 8001128:	f803 4c08 	strb.w	r4, [r3, #-8]
 800112c:	0a26      	lsrs	r6, r4, #8
 800112e:	f803 6c07 	strb.w	r6, [r3, #-7]
 8001132:	0c26      	lsrs	r6, r4, #16
 8001134:	0e24      	lsrs	r4, r4, #24
 8001136:	f803 4c05 	strb.w	r4, [r3, #-5]
 800113a:	0a14      	lsrs	r4, r2, #8
 800113c:	f803 2c04 	strb.w	r2, [r3, #-4]
 8001140:	f803 4c03 	strb.w	r4, [r3, #-3]
 8001144:	0c14      	lsrs	r4, r2, #16
 8001146:	0e12      	lsrs	r2, r2, #24
 8001148:	f803 6c06 	strb.w	r6, [r3, #-6]
 800114c:	f803 4c02 	strb.w	r4, [r3, #-2]
 8001150:	f803 2c01 	strb.w	r2, [r3, #-1]
 8001154:	e7da      	b.n	800110c <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x7c>
 8001156:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001158:	548b      	strb	r3, [r1, r2]
 800115a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800115c:	188b      	adds	r3, r1, r2
 800115e:	0a24      	lsrs	r4, r4, #8
 8001160:	705c      	strb	r4, [r3, #1]
 8001162:	8cc4      	ldrh	r4, [r0, #38]	; 0x26
 8001164:	709c      	strb	r4, [r3, #2]
 8001166:	f890 4027 	ldrb.w	r4, [r0, #39]	; 0x27
 800116a:	70dc      	strb	r4, [r3, #3]
 800116c:	3204      	adds	r2, #4
 800116e:	440a      	add	r2, r1
 8001170:	2500      	movs	r5, #0
 8001172:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8001174:	42a5      	cmp	r5, r4
 8001176:	eba2 0301 	sub.w	r3, r2, r1
 800117a:	f102 0208 	add.w	r2, r2, #8
 800117e:	d21d      	bcs.n	80011bc <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x12c>
 8001180:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001182:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001186:	eb03 06c5 	add.w	r6, r3, r5, lsl #3
 800118a:	3501      	adds	r5, #1
 800118c:	6873      	ldr	r3, [r6, #4]
 800118e:	f802 4c08 	strb.w	r4, [r2, #-8]
 8001192:	0a26      	lsrs	r6, r4, #8
 8001194:	f802 6c07 	strb.w	r6, [r2, #-7]
 8001198:	0c26      	lsrs	r6, r4, #16
 800119a:	0e24      	lsrs	r4, r4, #24
 800119c:	f802 4c05 	strb.w	r4, [r2, #-5]
 80011a0:	0a1c      	lsrs	r4, r3, #8
 80011a2:	f802 3c04 	strb.w	r3, [r2, #-4]
 80011a6:	f802 4c03 	strb.w	r4, [r2, #-3]
 80011aa:	0c1c      	lsrs	r4, r3, #16
 80011ac:	0e1b      	lsrs	r3, r3, #24
 80011ae:	f802 6c06 	strb.w	r6, [r2, #-6]
 80011b2:	f802 4c02 	strb.w	r4, [r2, #-2]
 80011b6:	f802 3c01 	strb.w	r3, [r2, #-1]
 80011ba:	e7da      	b.n	8001172 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0xe2>
 80011bc:	6b42      	ldr	r2, [r0, #52]	; 0x34
 80011be:	54ca      	strb	r2, [r1, r3]
 80011c0:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80011c2:	18ca      	adds	r2, r1, r3
 80011c4:	0a24      	lsrs	r4, r4, #8
 80011c6:	7054      	strb	r4, [r2, #1]
 80011c8:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 80011ca:	7094      	strb	r4, [r2, #2]
 80011cc:	f890 4037 	ldrb.w	r4, [r0, #55]	; 0x37
 80011d0:	70d4      	strb	r4, [r2, #3]
 80011d2:	3304      	adds	r3, #4
 80011d4:	440b      	add	r3, r1
 80011d6:	2500      	movs	r5, #0
 80011d8:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80011da:	42a5      	cmp	r5, r4
 80011dc:	eba3 0201 	sub.w	r2, r3, r1
 80011e0:	f103 0308 	add.w	r3, r3, #8
 80011e4:	d21d      	bcs.n	8001222 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x192>
 80011e6:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80011e8:	f852 4035 	ldr.w	r4, [r2, r5, lsl #3]
 80011ec:	eb02 06c5 	add.w	r6, r2, r5, lsl #3
 80011f0:	3501      	adds	r5, #1
 80011f2:	6872      	ldr	r2, [r6, #4]
 80011f4:	f803 4c08 	strb.w	r4, [r3, #-8]
 80011f8:	0a26      	lsrs	r6, r4, #8
 80011fa:	f803 6c07 	strb.w	r6, [r3, #-7]
 80011fe:	0c26      	lsrs	r6, r4, #16
 8001200:	0e24      	lsrs	r4, r4, #24
 8001202:	f803 4c05 	strb.w	r4, [r3, #-5]
 8001206:	0a14      	lsrs	r4, r2, #8
 8001208:	f803 2c04 	strb.w	r2, [r3, #-4]
 800120c:	f803 4c03 	strb.w	r4, [r3, #-3]
 8001210:	0c14      	lsrs	r4, r2, #16
 8001212:	0e12      	lsrs	r2, r2, #24
 8001214:	f803 6c06 	strb.w	r6, [r3, #-6]
 8001218:	f803 4c02 	strb.w	r4, [r3, #-2]
 800121c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8001220:	e7da      	b.n	80011d8 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x148>
 8001222:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001224:	548b      	strb	r3, [r1, r2]
 8001226:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001228:	4411      	add	r1, r2
 800122a:	121b      	asrs	r3, r3, #8
 800122c:	704b      	strb	r3, [r1, #1]
 800122e:	f9b0 3046 	ldrsh.w	r3, [r0, #70]	; 0x46
 8001232:	708b      	strb	r3, [r1, #2]
 8001234:	f890 3047 	ldrb.w	r3, [r0, #71]	; 0x47
 8001238:	70cb      	strb	r3, [r1, #3]
 800123a:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800123c:	710b      	strb	r3, [r1, #4]
 800123e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8001240:	121b      	asrs	r3, r3, #8
 8001242:	714b      	strb	r3, [r1, #5]
 8001244:	f9b0 304a 	ldrsh.w	r3, [r0, #74]	; 0x4a
 8001248:	718b      	strb	r3, [r1, #6]
 800124a:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 800124e:	71cb      	strb	r3, [r1, #7]
 8001250:	f102 0008 	add.w	r0, r2, #8
 8001254:	bd70      	pop	{r4, r5, r6, pc}
	...

08001258 <trajectory_msgs::JointTrajectoryPoint::getType()>:
 8001258:	4800      	ldr	r0, [pc, #0]	; (800125c <trajectory_msgs::JointTrajectoryPoint::getType()+0x4>)
 800125a:	4770      	bx	lr
 800125c:	08008c89 	.word	0x08008c89

08001260 <trajectory_msgs::JointTrajectoryPoint::getMD5()>:
 8001260:	4800      	ldr	r0, [pc, #0]	; (8001264 <trajectory_msgs::JointTrajectoryPoint::getMD5()+0x4>)
 8001262:	4770      	bx	lr
 8001264:	08008c68 	.word	0x08008c68

08001268 <AKROS_bridge_msgs::motor_cmd::serialize(unsigned char*) const>:
 8001268:	b538      	push	{r3, r4, r5, lr}
 800126a:	4604      	mov	r4, r0
 800126c:	3008      	adds	r0, #8
 800126e:	460d      	mov	r5, r1
 8001270:	f7ff ff0e 	bl	8001090 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const>
 8001274:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001276:	542b      	strb	r3, [r5, r0]
 8001278:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800127a:	182b      	adds	r3, r5, r0
 800127c:	0a12      	lsrs	r2, r2, #8
 800127e:	705a      	strb	r2, [r3, #1]
 8001280:	f8b4 205a 	ldrh.w	r2, [r4, #90]	; 0x5a
 8001284:	709a      	strb	r2, [r3, #2]
 8001286:	f894 205b 	ldrb.w	r2, [r4, #91]	; 0x5b
 800128a:	70da      	strb	r2, [r3, #3]
 800128c:	3004      	adds	r0, #4
 800128e:	4428      	add	r0, r5
 8001290:	2200      	movs	r2, #0
 8001292:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8001294:	428a      	cmp	r2, r1
 8001296:	eba0 0305 	sub.w	r3, r0, r5
 800129a:	f100 0004 	add.w	r0, r0, #4
 800129e:	d20f      	bcs.n	80012c0 <AKROS_bridge_msgs::motor_cmd::serialize(unsigned char*) const+0x58>
 80012a0:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80012a2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80012a6:	f800 3c04 	strb.w	r3, [r0, #-4]
 80012aa:	0a19      	lsrs	r1, r3, #8
 80012ac:	f800 1c03 	strb.w	r1, [r0, #-3]
 80012b0:	0c19      	lsrs	r1, r3, #16
 80012b2:	0e1b      	lsrs	r3, r3, #24
 80012b4:	f800 1c02 	strb.w	r1, [r0, #-2]
 80012b8:	f800 3c01 	strb.w	r3, [r0, #-1]
 80012bc:	3201      	adds	r2, #1
 80012be:	e7e8      	b.n	8001292 <AKROS_bridge_msgs::motor_cmd::serialize(unsigned char*) const+0x2a>
 80012c0:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012c2:	54ea      	strb	r2, [r5, r3]
 80012c4:	6e61      	ldr	r1, [r4, #100]	; 0x64
 80012c6:	18ea      	adds	r2, r5, r3
 80012c8:	0a09      	lsrs	r1, r1, #8
 80012ca:	7051      	strb	r1, [r2, #1]
 80012cc:	f8b4 1066 	ldrh.w	r1, [r4, #102]	; 0x66
 80012d0:	7091      	strb	r1, [r2, #2]
 80012d2:	f894 1067 	ldrb.w	r1, [r4, #103]	; 0x67
 80012d6:	70d1      	strb	r1, [r2, #3]
 80012d8:	3304      	adds	r3, #4
 80012da:	442b      	add	r3, r5
 80012dc:	2100      	movs	r1, #0
 80012de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012e0:	4291      	cmp	r1, r2
 80012e2:	eba3 0005 	sub.w	r0, r3, r5
 80012e6:	f103 0304 	add.w	r3, r3, #4
 80012ea:	d20f      	bcs.n	800130c <AKROS_bridge_msgs::motor_cmd::serialize(unsigned char*) const+0xa4>
 80012ec:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 80012ee:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80012f2:	f803 2c04 	strb.w	r2, [r3, #-4]
 80012f6:	0a10      	lsrs	r0, r2, #8
 80012f8:	f803 0c03 	strb.w	r0, [r3, #-3]
 80012fc:	0c10      	lsrs	r0, r2, #16
 80012fe:	0e12      	lsrs	r2, r2, #24
 8001300:	f803 0c02 	strb.w	r0, [r3, #-2]
 8001304:	f803 2c01 	strb.w	r2, [r3, #-1]
 8001308:	3101      	adds	r1, #1
 800130a:	e7e8      	b.n	80012de <AKROS_bridge_msgs::motor_cmd::serialize(unsigned char*) const+0x76>
 800130c:	bd38      	pop	{r3, r4, r5, pc}
	...

08001310 <AKROS_bridge_msgs::motor_cmd::getType()>:
 8001310:	4800      	ldr	r0, [pc, #0]	; (8001314 <AKROS_bridge_msgs::motor_cmd::getType()+0x4>)
 8001312:	4770      	bx	lr
 8001314:	08008d50 	.word	0x08008d50

08001318 <AKROS_bridge_msgs::motor_cmd::getMD5()>:
 8001318:	4800      	ldr	r0, [pc, #0]	; (800131c <AKROS_bridge_msgs::motor_cmd::getMD5()+0x4>)
 800131a:	4770      	bx	lr
 800131c:	08008d2f 	.word	0x08008d2f

08001320 <std_msgs::Header::getType()>:
 8001320:	4800      	ldr	r0, [pc, #0]	; (8001324 <std_msgs::Header::getType()+0x4>)
 8001322:	4770      	bx	lr
 8001324:	08008daa 	.word	0x08008daa

08001328 <std_msgs::Header::getMD5()>:
 8001328:	4800      	ldr	r0, [pc, #0]	; (800132c <std_msgs::Header::getMD5()+0x4>)
 800132a:	4770      	bx	lr
 800132c:	08008d89 	.word	0x08008d89

08001330 <sensor_msgs::JointState::getType()>:
 8001330:	4800      	ldr	r0, [pc, #0]	; (8001334 <sensor_msgs::JointState::getType()+0x4>)
 8001332:	4770      	bx	lr
 8001334:	08008bed 	.word	0x08008bed

08001338 <sensor_msgs::JointState::getMD5()>:
 8001338:	4800      	ldr	r0, [pc, #0]	; (800133c <sensor_msgs::JointState::getMD5()+0x4>)
 800133a:	4770      	bx	lr
 800133c:	08008bcc 	.word	0x08008bcc

08001340 <AKROS_bridge_msgs::motor_reply::getType()>:
 8001340:	4800      	ldr	r0, [pc, #0]	; (8001344 <AKROS_bridge_msgs::motor_reply::getType()+0x4>)
 8001342:	4770      	bx	lr
 8001344:	08008ccf 	.word	0x08008ccf

08001348 <AKROS_bridge_msgs::motor_reply::getMD5()>:
 8001348:	4800      	ldr	r0, [pc, #0]	; (800134c <AKROS_bridge_msgs::motor_reply::getMD5()+0x4>)
 800134a:	4770      	bx	lr
 800134c:	08008cae 	.word	0x08008cae

08001350 <AKROS_bridge_msgs::InitializeRequest::serialize(unsigned char*) const>:
 8001350:	7903      	ldrb	r3, [r0, #4]
 8001352:	700b      	strb	r3, [r1, #0]
 8001354:	2001      	movs	r0, #1
 8001356:	4770      	bx	lr

08001358 <AKROS_bridge_msgs::InitializeRequest::deserialize(unsigned char*)>:
 8001358:	780b      	ldrb	r3, [r1, #0]
 800135a:	7103      	strb	r3, [r0, #4]
 800135c:	2001      	movs	r0, #1
 800135e:	4770      	bx	lr

08001360 <AKROS_bridge_msgs::InitializeRequest::getType()>:
 8001360:	4800      	ldr	r0, [pc, #0]	; (8001364 <AKROS_bridge_msgs::InitializeRequest::getType()+0x4>)
 8001362:	4770      	bx	lr
 8001364:	08008d6c 	.word	0x08008d6c

08001368 <AKROS_bridge_msgs::InitializeRequest::getMD5()>:
 8001368:	4800      	ldr	r0, [pc, #0]	; (800136c <AKROS_bridge_msgs::InitializeRequest::getMD5()+0x4>)
 800136a:	4770      	bx	lr
 800136c:	08008ced 	.word	0x08008ced

08001370 <AKROS_bridge_msgs::InitializeResponse::getType()>:
 8001370:	4800      	ldr	r0, [pc, #0]	; (8001374 <AKROS_bridge_msgs::InitializeResponse::getType()+0x4>)
 8001372:	4770      	bx	lr
 8001374:	08008d6c 	.word	0x08008d6c

08001378 <AKROS_bridge_msgs::InitializeResponse::getMD5()>:
 8001378:	4800      	ldr	r0, [pc, #0]	; (800137c <AKROS_bridge_msgs::InitializeResponse::getMD5()+0x4>)
 800137a:	4770      	bx	lr
 800137c:	08008d0e 	.word	0x08008d0e

08001380 <AKROS_bridge::motor_cmd_Cb(AKROS_bridge_msgs::motor_cmd const&)>:
 8001380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8001384:	f890 9060 	ldrb.w	r9, [r0, #96]	; 0x60
 8001388:	4607      	mov	r7, r0
 800138a:	460e      	mov	r6, r1
 800138c:	2400      	movs	r4, #0
 800138e:	f104 0801 	add.w	r8, r4, #1
 8001392:	b2e4      	uxtb	r4, r4
 8001394:	454c      	cmp	r4, r9
 8001396:	da25      	bge.n	80013e4 <AKROS_bridge::motor_cmd_Cb(AKROS_bridge_msgs::motor_cmd const&)+0x64>
 8001398:	69b3      	ldr	r3, [r6, #24]
 800139a:	f8d7 5138 	ldr.w	r5, [r7, #312]	; 0x138
 800139e:	ea4f 0ac4 	mov.w	r10, r4, lsl #3
 80013a2:	4453      	add	r3, r10
 80013a4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013a8:	f006 fad4 	bl	8007954 <__aeabi_d2f>
 80013ac:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 80013ae:	eb05 1544 	add.w	r5, r5, r4, lsl #5
 80013b2:	4453      	add	r3, r10
 80013b4:	6068      	str	r0, [r5, #4]
 80013b6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013ba:	f006 facb 	bl	8007954 <__aeabi_d2f>
 80013be:	6cb3      	ldr	r3, [r6, #72]	; 0x48
 80013c0:	60e8      	str	r0, [r5, #12]
 80013c2:	4453      	add	r3, r10
 80013c4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013c8:	f006 fac4 	bl	8007954 <__aeabi_d2f>
 80013cc:	6e33      	ldr	r3, [r6, #96]	; 0x60
 80013ce:	6168      	str	r0, [r5, #20]
 80013d0:	00a4      	lsls	r4, r4, #2
 80013d2:	4423      	add	r3, r4
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	61ab      	str	r3, [r5, #24]
 80013d8:	6ef3      	ldr	r3, [r6, #108]	; 0x6c
 80013da:	441c      	add	r4, r3
 80013dc:	6823      	ldr	r3, [r4, #0]
 80013de:	61eb      	str	r3, [r5, #28]
 80013e0:	4644      	mov	r4, r8
 80013e2:	e7d4      	b.n	800138e <AKROS_bridge::motor_cmd_Cb(AKROS_bridge_msgs::motor_cmd const&)+0xe>
 80013e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

080013e8 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::getEndpointType()>:
 80013e8:	2003      	movs	r0, #3
 80013ea:	4770      	bx	lr

080013ec <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::getMsgType()>:
 80013ec:	4800      	ldr	r0, [pc, #0]	; (80013f0 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::getMsgType()+0x4>)
 80013ee:	4770      	bx	lr
 80013f0:	08008ddb 	.word	0x08008ddb

080013f4 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::getMsgMD5()>:
 80013f4:	4800      	ldr	r0, [pc, #0]	; (80013f8 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::getMsgMD5()+0x4>)
 80013f6:	4770      	bx	lr
 80013f8:	08008dba 	.word	0x08008dba

080013fc <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::getEndpointType()>:
 80013fc:	2003      	movs	r0, #3
 80013fe:	4770      	bx	lr

08001400 <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::getMsgType()>:
 8001400:	4800      	ldr	r0, [pc, #0]	; (8001404 <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::getMsgType()+0x4>)
 8001402:	4770      	bx	lr
 8001404:	08008d6c 	.word	0x08008d6c

08001408 <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::getMsgMD5()>:
 8001408:	4800      	ldr	r0, [pc, #0]	; (800140c <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::getMsgMD5()+0x4>)
 800140a:	4770      	bx	lr
 800140c:	08008ced 	.word	0x08008ced

08001410 <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::getEndpointType()>:
 8001410:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8001414:	4770      	bx	lr
	...

08001418 <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::getMsgType()>:
 8001418:	4800      	ldr	r0, [pc, #0]	; (800141c <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::getMsgType()+0x4>)
 800141a:	4770      	bx	lr
 800141c:	08008d50 	.word	0x08008d50

08001420 <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::getMsgMD5()>:
 8001420:	4800      	ldr	r0, [pc, #0]	; (8001424 <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::getMsgMD5()+0x4>)
 8001422:	4770      	bx	lr
 8001424:	08008d2f 	.word	0x08008d2f

08001428 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)>:
 8001428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800142c:	6843      	ldr	r3, [r0, #4]
 800142e:	680e      	ldr	r6, [r1, #0]
 8001430:	429e      	cmp	r6, r3
 8001432:	b0b7      	sub	sp, #220	; 0xdc
 8001434:	4604      	mov	r4, r0
 8001436:	460d      	mov	r5, r1
 8001438:	d904      	bls.n	8001444 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x1c>
 800143a:	00f1      	lsls	r1, r6, #3
 800143c:	6900      	ldr	r0, [r0, #16]
 800143e:	f006 ff8d 	bl	800835c <realloc>
 8001442:	6120      	str	r0, [r4, #16]
 8001444:	6066      	str	r6, [r4, #4]
 8001446:	1d29      	adds	r1, r5, #4
 8001448:	2000      	movs	r0, #0
 800144a:	f104 0e08 	add.w	lr, r4, #8
 800144e:	6862      	ldr	r2, [r4, #4]
 8001450:	4290      	cmp	r0, r2
 8001452:	eba1 0305 	sub.w	r3, r1, r5
 8001456:	f101 0108 	add.w	r1, r1, #8
 800145a:	d262      	bcs.n	8001522 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0xfa>
 800145c:	f811 2c07 	ldrb.w	r2, [r1, #-7]
 8001460:	0213      	lsls	r3, r2, #8
 8001462:	f811 2c06 	ldrb.w	r2, [r1, #-6]
 8001466:	9306      	str	r3, [sp, #24]
 8001468:	2600      	movs	r6, #0
 800146a:	0413      	lsls	r3, r2, #16
 800146c:	9609      	str	r6, [sp, #36]	; 0x24
 800146e:	9607      	str	r6, [sp, #28]
 8001470:	9308      	str	r3, [sp, #32]
 8001472:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001476:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 800147a:	4316      	orrs	r6, r2
 800147c:	f811 2c08 	ldrb.w	r2, [r1, #-8]
 8001480:	431f      	orrs	r7, r3
 8001482:	ea42 0806 	orr.w	r8, r2, r6
 8001486:	2300      	movs	r3, #0
 8001488:	f811 6c05 	ldrb.w	r6, [r1, #-5]
 800148c:	ea43 0907 	orr.w	r9, r3, r7
 8001490:	2300      	movs	r3, #0
 8001492:	930b      	str	r3, [sp, #44]	; 0x2c
 8001494:	0633      	lsls	r3, r6, #24
 8001496:	930a      	str	r3, [sp, #40]	; 0x28
 8001498:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800149c:	4646      	mov	r6, r8
 800149e:	4316      	orrs	r6, r2
 80014a0:	4632      	mov	r2, r6
 80014a2:	f811 6c04 	ldrb.w	r6, [r1, #-4]
 80014a6:	9601      	str	r6, [sp, #4]
 80014a8:	464f      	mov	r7, r9
 80014aa:	2600      	movs	r6, #0
 80014ac:	431f      	orrs	r7, r3
 80014ae:	9600      	str	r6, [sp, #0]
 80014b0:	463b      	mov	r3, r7
 80014b2:	e9dd 6700 	ldrd	r6, r7, [sp]
 80014b6:	4316      	orrs	r6, r2
 80014b8:	4632      	mov	r2, r6
 80014ba:	f811 6c03 	ldrb.w	r6, [r1, #-3]
 80014be:	0236      	lsls	r6, r6, #8
 80014c0:	961f      	str	r6, [sp, #124]	; 0x7c
 80014c2:	2600      	movs	r6, #0
 80014c4:	431f      	orrs	r7, r3
 80014c6:	961e      	str	r6, [sp, #120]	; 0x78
 80014c8:	463b      	mov	r3, r7
 80014ca:	e9dd 671e 	ldrd	r6, r7, [sp, #120]	; 0x78
 80014ce:	4316      	orrs	r6, r2
 80014d0:	4632      	mov	r2, r6
 80014d2:	f811 6c02 	ldrb.w	r6, [r1, #-2]
 80014d6:	0436      	lsls	r6, r6, #16
 80014d8:	9621      	str	r6, [sp, #132]	; 0x84
 80014da:	2600      	movs	r6, #0
 80014dc:	431f      	orrs	r7, r3
 80014de:	9620      	str	r6, [sp, #128]	; 0x80
 80014e0:	463b      	mov	r3, r7
 80014e2:	e9dd 6720 	ldrd	r6, r7, [sp, #128]	; 0x80
 80014e6:	4316      	orrs	r6, r2
 80014e8:	4632      	mov	r2, r6
 80014ea:	f811 6c01 	ldrb.w	r6, [r1, #-1]
 80014ee:	0636      	lsls	r6, r6, #24
 80014f0:	9623      	str	r6, [sp, #140]	; 0x8c
 80014f2:	2600      	movs	r6, #0
 80014f4:	431f      	orrs	r7, r3
 80014f6:	9622      	str	r6, [sp, #136]	; 0x88
 80014f8:	463b      	mov	r3, r7
 80014fa:	e9dd 6722 	ldrd	r6, r7, [sp, #136]	; 0x88
 80014fe:	4316      	orrs	r6, r2
 8001500:	431f      	orrs	r7, r3
 8001502:	4632      	mov	r2, r6
 8001504:	463b      	mov	r3, r7
 8001506:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800150a:	6922      	ldr	r2, [r4, #16]
 800150c:	f8de 3000 	ldr.w	r3, [lr]
 8001510:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
 8001514:	eb02 06c0 	add.w	r6, r2, r0, lsl #3
 8001518:	f8de 3004 	ldr.w	r3, [lr, #4]
 800151c:	6073      	str	r3, [r6, #4]
 800151e:	3001      	adds	r0, #1
 8001520:	e795      	b.n	800144e <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x26>
 8001522:	18e9      	adds	r1, r5, r3
 8001524:	5ce8      	ldrb	r0, [r5, r3]
 8001526:	788a      	ldrb	r2, [r1, #2]
 8001528:	784e      	ldrb	r6, [r1, #1]
 800152a:	0412      	lsls	r2, r2, #16
 800152c:	ea42 2606 	orr.w	r6, r2, r6, lsl #8
 8001530:	78ca      	ldrb	r2, [r1, #3]
 8001532:	4306      	orrs	r6, r0
 8001534:	1d1f      	adds	r7, r3, #4
 8001536:	6963      	ldr	r3, [r4, #20]
 8001538:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
 800153c:	429e      	cmp	r6, r3
 800153e:	d904      	bls.n	800154a <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x122>
 8001540:	00f1      	lsls	r1, r6, #3
 8001542:	6a20      	ldr	r0, [r4, #32]
 8001544:	f006 ff0a 	bl	800835c <realloc>
 8001548:	6220      	str	r0, [r4, #32]
 800154a:	6166      	str	r6, [r4, #20]
 800154c:	19eb      	adds	r3, r5, r7
 800154e:	2200      	movs	r2, #0
 8001550:	f104 0e18 	add.w	lr, r4, #24
 8001554:	6961      	ldr	r1, [r4, #20]
 8001556:	428a      	cmp	r2, r1
 8001558:	eba3 0005 	sub.w	r0, r3, r5
 800155c:	f103 0308 	add.w	r3, r3, #8
 8001560:	d260      	bcs.n	8001624 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x1fc>
 8001562:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 8001566:	0201      	lsls	r1, r0, #8
 8001568:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 800156c:	910c      	str	r1, [sp, #48]	; 0x30
 800156e:	2600      	movs	r6, #0
 8001570:	0401      	lsls	r1, r0, #16
 8001572:	960f      	str	r6, [sp, #60]	; 0x3c
 8001574:	960d      	str	r6, [sp, #52]	; 0x34
 8001576:	910e      	str	r1, [sp, #56]	; 0x38
 8001578:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800157c:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	; 0x30
 8001580:	4306      	orrs	r6, r0
 8001582:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8001586:	430f      	orrs	r7, r1
 8001588:	ea40 0806 	orr.w	r8, r0, r6
 800158c:	2100      	movs	r1, #0
 800158e:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001592:	ea41 0907 	orr.w	r9, r1, r7
 8001596:	2100      	movs	r1, #0
 8001598:	9111      	str	r1, [sp, #68]	; 0x44
 800159a:	0631      	lsls	r1, r6, #24
 800159c:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 80015a0:	9603      	str	r6, [sp, #12]
 80015a2:	9110      	str	r1, [sp, #64]	; 0x40
 80015a4:	2600      	movs	r6, #0
 80015a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80015aa:	9602      	str	r6, [sp, #8]
 80015ac:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80015b0:	ea40 0008 	orr.w	r0, r0, r8
 80015b4:	4306      	orrs	r6, r0
 80015b6:	4630      	mov	r0, r6
 80015b8:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 80015bc:	0236      	lsls	r6, r6, #8
 80015be:	9625      	str	r6, [sp, #148]	; 0x94
 80015c0:	ea41 0109 	orr.w	r1, r1, r9
 80015c4:	2600      	movs	r6, #0
 80015c6:	430f      	orrs	r7, r1
 80015c8:	9624      	str	r6, [sp, #144]	; 0x90
 80015ca:	4639      	mov	r1, r7
 80015cc:	e9dd 6724 	ldrd	r6, r7, [sp, #144]	; 0x90
 80015d0:	4306      	orrs	r6, r0
 80015d2:	4630      	mov	r0, r6
 80015d4:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80015d8:	0436      	lsls	r6, r6, #16
 80015da:	9627      	str	r6, [sp, #156]	; 0x9c
 80015dc:	2600      	movs	r6, #0
 80015de:	430f      	orrs	r7, r1
 80015e0:	9626      	str	r6, [sp, #152]	; 0x98
 80015e2:	4639      	mov	r1, r7
 80015e4:	e9dd 6726 	ldrd	r6, r7, [sp, #152]	; 0x98
 80015e8:	4306      	orrs	r6, r0
 80015ea:	4630      	mov	r0, r6
 80015ec:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80015f0:	0636      	lsls	r6, r6, #24
 80015f2:	9629      	str	r6, [sp, #164]	; 0xa4
 80015f4:	2600      	movs	r6, #0
 80015f6:	430f      	orrs	r7, r1
 80015f8:	9628      	str	r6, [sp, #160]	; 0xa0
 80015fa:	4639      	mov	r1, r7
 80015fc:	e9dd 6728 	ldrd	r6, r7, [sp, #160]	; 0xa0
 8001600:	4306      	orrs	r6, r0
 8001602:	430f      	orrs	r7, r1
 8001604:	4630      	mov	r0, r6
 8001606:	4639      	mov	r1, r7
 8001608:	e9c4 0106 	strd	r0, r1, [r4, #24]
 800160c:	6a20      	ldr	r0, [r4, #32]
 800160e:	f8de 1000 	ldr.w	r1, [lr]
 8001612:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001616:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800161a:	f8de 1004 	ldr.w	r1, [lr, #4]
 800161e:	6071      	str	r1, [r6, #4]
 8001620:	3201      	adds	r2, #1
 8001622:	e797      	b.n	8001554 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x12c>
 8001624:	182a      	adds	r2, r5, r0
 8001626:	5c29      	ldrb	r1, [r5, r0]
 8001628:	7893      	ldrb	r3, [r2, #2]
 800162a:	7856      	ldrb	r6, [r2, #1]
 800162c:	041b      	lsls	r3, r3, #16
 800162e:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8001632:	78d3      	ldrb	r3, [r2, #3]
 8001634:	430e      	orrs	r6, r1
 8001636:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 800163a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800163c:	429e      	cmp	r6, r3
 800163e:	f100 0704 	add.w	r7, r0, #4
 8001642:	d904      	bls.n	800164e <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x226>
 8001644:	00f1      	lsls	r1, r6, #3
 8001646:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001648:	f006 fe88 	bl	800835c <realloc>
 800164c:	6320      	str	r0, [r4, #48]	; 0x30
 800164e:	6266      	str	r6, [r4, #36]	; 0x24
 8001650:	19eb      	adds	r3, r5, r7
 8001652:	2200      	movs	r2, #0
 8001654:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8001658:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800165a:	428a      	cmp	r2, r1
 800165c:	eba3 0005 	sub.w	r0, r3, r5
 8001660:	f103 0308 	add.w	r3, r3, #8
 8001664:	d260      	bcs.n	8001728 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x300>
 8001666:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 800166a:	0201      	lsls	r1, r0, #8
 800166c:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8001670:	9112      	str	r1, [sp, #72]	; 0x48
 8001672:	2600      	movs	r6, #0
 8001674:	0401      	lsls	r1, r0, #16
 8001676:	9615      	str	r6, [sp, #84]	; 0x54
 8001678:	9613      	str	r6, [sp, #76]	; 0x4c
 800167a:	9114      	str	r1, [sp, #80]	; 0x50
 800167c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 8001680:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8001684:	4306      	orrs	r6, r0
 8001686:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 800168a:	430f      	orrs	r7, r1
 800168c:	ea40 0806 	orr.w	r8, r0, r6
 8001690:	2100      	movs	r1, #0
 8001692:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001696:	ea41 0907 	orr.w	r9, r1, r7
 800169a:	2100      	movs	r1, #0
 800169c:	9117      	str	r1, [sp, #92]	; 0x5c
 800169e:	0631      	lsls	r1, r6, #24
 80016a0:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 80016a4:	9605      	str	r6, [sp, #20]
 80016a6:	9116      	str	r1, [sp, #88]	; 0x58
 80016a8:	2600      	movs	r6, #0
 80016aa:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
 80016ae:	9604      	str	r6, [sp, #16]
 80016b0:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 80016b4:	ea40 0008 	orr.w	r0, r0, r8
 80016b8:	4306      	orrs	r6, r0
 80016ba:	4630      	mov	r0, r6
 80016bc:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 80016c0:	0236      	lsls	r6, r6, #8
 80016c2:	962b      	str	r6, [sp, #172]	; 0xac
 80016c4:	ea41 0109 	orr.w	r1, r1, r9
 80016c8:	2600      	movs	r6, #0
 80016ca:	430f      	orrs	r7, r1
 80016cc:	962a      	str	r6, [sp, #168]	; 0xa8
 80016ce:	4639      	mov	r1, r7
 80016d0:	e9dd 672a 	ldrd	r6, r7, [sp, #168]	; 0xa8
 80016d4:	4306      	orrs	r6, r0
 80016d6:	4630      	mov	r0, r6
 80016d8:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80016dc:	0436      	lsls	r6, r6, #16
 80016de:	962d      	str	r6, [sp, #180]	; 0xb4
 80016e0:	2600      	movs	r6, #0
 80016e2:	430f      	orrs	r7, r1
 80016e4:	962c      	str	r6, [sp, #176]	; 0xb0
 80016e6:	4639      	mov	r1, r7
 80016e8:	e9dd 672c 	ldrd	r6, r7, [sp, #176]	; 0xb0
 80016ec:	4306      	orrs	r6, r0
 80016ee:	4630      	mov	r0, r6
 80016f0:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80016f4:	0636      	lsls	r6, r6, #24
 80016f6:	962f      	str	r6, [sp, #188]	; 0xbc
 80016f8:	2600      	movs	r6, #0
 80016fa:	430f      	orrs	r7, r1
 80016fc:	962e      	str	r6, [sp, #184]	; 0xb8
 80016fe:	4639      	mov	r1, r7
 8001700:	e9dd 672e 	ldrd	r6, r7, [sp, #184]	; 0xb8
 8001704:	4306      	orrs	r6, r0
 8001706:	430f      	orrs	r7, r1
 8001708:	4630      	mov	r0, r6
 800170a:	4639      	mov	r1, r7
 800170c:	e9c4 010a 	strd	r0, r1, [r4, #40]	; 0x28
 8001710:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001712:	f8de 1000 	ldr.w	r1, [lr]
 8001716:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 800171a:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800171e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8001722:	6071      	str	r1, [r6, #4]
 8001724:	3201      	adds	r2, #1
 8001726:	e797      	b.n	8001658 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x230>
 8001728:	182a      	adds	r2, r5, r0
 800172a:	5c29      	ldrb	r1, [r5, r0]
 800172c:	7893      	ldrb	r3, [r2, #2]
 800172e:	7856      	ldrb	r6, [r2, #1]
 8001730:	041b      	lsls	r3, r3, #16
 8001732:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8001736:	78d3      	ldrb	r3, [r2, #3]
 8001738:	430e      	orrs	r6, r1
 800173a:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 800173e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001740:	429e      	cmp	r6, r3
 8001742:	f100 0704 	add.w	r7, r0, #4
 8001746:	d904      	bls.n	8001752 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x32a>
 8001748:	00f1      	lsls	r1, r6, #3
 800174a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800174c:	f006 fe06 	bl	800835c <realloc>
 8001750:	6420      	str	r0, [r4, #64]	; 0x40
 8001752:	6366      	str	r6, [r4, #52]	; 0x34
 8001754:	19eb      	adds	r3, r5, r7
 8001756:	2200      	movs	r2, #0
 8001758:	f104 0e38 	add.w	lr, r4, #56	; 0x38
 800175c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800175e:	428a      	cmp	r2, r1
 8001760:	eba3 0005 	sub.w	r0, r3, r5
 8001764:	f103 0308 	add.w	r3, r3, #8
 8001768:	d25d      	bcs.n	8001826 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x3fe>
 800176a:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 800176e:	f813 bc04 	ldrb.w	r11, [r3, #-4]
 8001772:	0201      	lsls	r1, r0, #8
 8001774:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8001778:	9118      	str	r1, [sp, #96]	; 0x60
 800177a:	2600      	movs	r6, #0
 800177c:	0401      	lsls	r1, r0, #16
 800177e:	961b      	str	r6, [sp, #108]	; 0x6c
 8001780:	9619      	str	r6, [sp, #100]	; 0x64
 8001782:	911a      	str	r1, [sp, #104]	; 0x68
 8001784:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 8001788:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 800178c:	4306      	orrs	r6, r0
 800178e:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8001792:	430f      	orrs	r7, r1
 8001794:	ea40 0806 	orr.w	r8, r0, r6
 8001798:	2100      	movs	r1, #0
 800179a:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 800179e:	ea41 0907 	orr.w	r9, r1, r7
 80017a2:	2100      	movs	r1, #0
 80017a4:	911d      	str	r1, [sp, #116]	; 0x74
 80017a6:	0631      	lsls	r1, r6, #24
 80017a8:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 80017ac:	911c      	str	r1, [sp, #112]	; 0x70
 80017ae:	f04f 0a00 	mov.w	r10, #0
 80017b2:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
 80017b6:	0236      	lsls	r6, r6, #8
 80017b8:	9631      	str	r6, [sp, #196]	; 0xc4
 80017ba:	f8cd a0c0 	str.w	r10, [sp, #192]	; 0xc0
 80017be:	e9dd 6730 	ldrd	r6, r7, [sp, #192]	; 0xc0
 80017c2:	ea40 0008 	orr.w	r0, r0, r8
 80017c6:	ea40 000a 	orr.w	r0, r0, r10
 80017ca:	4306      	orrs	r6, r0
 80017cc:	4630      	mov	r0, r6
 80017ce:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80017d2:	f8cd a0c8 	str.w	r10, [sp, #200]	; 0xc8
 80017d6:	ea41 0109 	orr.w	r1, r1, r9
 80017da:	ea41 010b 	orr.w	r1, r1, r11
 80017de:	0436      	lsls	r6, r6, #16
 80017e0:	430f      	orrs	r7, r1
 80017e2:	9633      	str	r6, [sp, #204]	; 0xcc
 80017e4:	4639      	mov	r1, r7
 80017e6:	e9dd 6732 	ldrd	r6, r7, [sp, #200]	; 0xc8
 80017ea:	4306      	orrs	r6, r0
 80017ec:	4630      	mov	r0, r6
 80017ee:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80017f2:	f8cd a0d0 	str.w	r10, [sp, #208]	; 0xd0
 80017f6:	0636      	lsls	r6, r6, #24
 80017f8:	430f      	orrs	r7, r1
 80017fa:	9635      	str	r6, [sp, #212]	; 0xd4
 80017fc:	4639      	mov	r1, r7
 80017fe:	e9dd 6734 	ldrd	r6, r7, [sp, #208]	; 0xd0
 8001802:	4306      	orrs	r6, r0
 8001804:	430f      	orrs	r7, r1
 8001806:	4630      	mov	r0, r6
 8001808:	4639      	mov	r1, r7
 800180a:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 800180e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001810:	f8de 1000 	ldr.w	r1, [lr]
 8001814:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001818:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800181c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8001820:	6071      	str	r1, [r6, #4]
 8001822:	3201      	adds	r2, #1
 8001824:	e79a      	b.n	800175c <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x334>
 8001826:	5c2b      	ldrb	r3, [r5, r0]
 8001828:	6463      	str	r3, [r4, #68]	; 0x44
 800182a:	4405      	add	r5, r0
 800182c:	3008      	adds	r0, #8
 800182e:	786a      	ldrb	r2, [r5, #1]
 8001830:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001834:	6463      	str	r3, [r4, #68]	; 0x44
 8001836:	78aa      	ldrb	r2, [r5, #2]
 8001838:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800183c:	6463      	str	r3, [r4, #68]	; 0x44
 800183e:	78ea      	ldrb	r2, [r5, #3]
 8001840:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001844:	6463      	str	r3, [r4, #68]	; 0x44
 8001846:	792b      	ldrb	r3, [r5, #4]
 8001848:	64a3      	str	r3, [r4, #72]	; 0x48
 800184a:	796a      	ldrb	r2, [r5, #5]
 800184c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001850:	64a3      	str	r3, [r4, #72]	; 0x48
 8001852:	79aa      	ldrb	r2, [r5, #6]
 8001854:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001858:	64a3      	str	r3, [r4, #72]	; 0x48
 800185a:	79ea      	ldrb	r2, [r5, #7]
 800185c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001860:	64a3      	str	r3, [r4, #72]	; 0x48
 8001862:	b037      	add	sp, #220	; 0xdc
 8001864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

08001868 <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)>:
 8001868:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800186a:	4604      	mov	r4, r0
 800186c:	3008      	adds	r0, #8
 800186e:	460e      	mov	r6, r1
 8001870:	f7ff fdda 	bl	8001428 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)>
 8001874:	1833      	adds	r3, r6, r0
 8001876:	5c32      	ldrb	r2, [r6, r0]
 8001878:	789d      	ldrb	r5, [r3, #2]
 800187a:	7859      	ldrb	r1, [r3, #1]
 800187c:	78db      	ldrb	r3, [r3, #3]
 800187e:	042d      	lsls	r5, r5, #16
 8001880:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 8001884:	4315      	orrs	r5, r2
 8001886:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
 800188a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800188c:	429d      	cmp	r5, r3
 800188e:	f100 0704 	add.w	r7, r0, #4
 8001892:	d904      	bls.n	800189e <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0x36>
 8001894:	00a9      	lsls	r1, r5, #2
 8001896:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8001898:	f006 fd60 	bl	800835c <realloc>
 800189c:	6620      	str	r0, [r4, #96]	; 0x60
 800189e:	65a5      	str	r5, [r4, #88]	; 0x58
 80018a0:	19f0      	adds	r0, r6, r7
 80018a2:	2200      	movs	r2, #0
 80018a4:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80018a6:	428a      	cmp	r2, r1
 80018a8:	eba0 0306 	sub.w	r3, r0, r6
 80018ac:	f100 0004 	add.w	r0, r0, #4
 80018b0:	d213      	bcs.n	80018da <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0x72>
 80018b2:	f810 3c02 	ldrb.w	r3, [r0, #-2]
 80018b6:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 80018ba:	041b      	lsls	r3, r3, #16
 80018bc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80018c0:	f810 1c04 	ldrb.w	r1, [r0, #-4]
 80018c4:	430b      	orrs	r3, r1
 80018c6:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 80018ca:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80018ce:	6e21      	ldr	r1, [r4, #96]	; 0x60
 80018d0:	65e3      	str	r3, [r4, #92]	; 0x5c
 80018d2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80018d6:	3201      	adds	r2, #1
 80018d8:	e7e4      	b.n	80018a4 <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0x3c>
 80018da:	18f2      	adds	r2, r6, r3
 80018dc:	5cf1      	ldrb	r1, [r6, r3]
 80018de:	7895      	ldrb	r5, [r2, #2]
 80018e0:	7850      	ldrb	r0, [r2, #1]
 80018e2:	78d2      	ldrb	r2, [r2, #3]
 80018e4:	042d      	lsls	r5, r5, #16
 80018e6:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 80018ea:	430d      	orrs	r5, r1
 80018ec:	1d1f      	adds	r7, r3, #4
 80018ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80018f0:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80018f4:	429d      	cmp	r5, r3
 80018f6:	d904      	bls.n	8001902 <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0x9a>
 80018f8:	00a9      	lsls	r1, r5, #2
 80018fa:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80018fc:	f006 fd2e 	bl	800835c <realloc>
 8001900:	66e0      	str	r0, [r4, #108]	; 0x6c
 8001902:	6665      	str	r5, [r4, #100]	; 0x64
 8001904:	19f3      	adds	r3, r6, r7
 8001906:	2100      	movs	r1, #0
 8001908:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800190a:	4291      	cmp	r1, r2
 800190c:	eba3 0006 	sub.w	r0, r3, r6
 8001910:	f103 0304 	add.w	r3, r3, #4
 8001914:	d213      	bcs.n	800193e <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0xd6>
 8001916:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 800191a:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 800191e:	0412      	lsls	r2, r2, #16
 8001920:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001924:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8001928:	4302      	orrs	r2, r0
 800192a:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 800192e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001932:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001934:	66a2      	str	r2, [r4, #104]	; 0x68
 8001936:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 800193a:	3101      	adds	r1, #1
 800193c:	e7e4      	b.n	8001908 <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)+0xa0>
 800193e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001940 <ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>::callback(unsigned char*)>:
 8001940:	b570      	push	{r4, r5, r6, lr}
 8001942:	4604      	mov	r4, r0
 8001944:	f100 0510 	add.w	r5, r0, #16
 8001948:	4628      	mov	r0, r5
 800194a:	f7ff ff8d 	bl	8001868 <AKROS_bridge_msgs::motor_cmd::deserialize(unsigned char*)>
 800194e:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 8001952:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8001956:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 800195a:	f012 0f01 	tst.w	r2, #1
 800195e:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001962:	bf18      	it	ne
 8001964:	5881      	ldrne	r1, [r0, r2]
 8001966:	4410      	add	r0, r2
 8001968:	bf18      	it	ne
 800196a:	58cb      	ldrne	r3, [r1, r3]
 800196c:	4629      	mov	r1, r5
 800196e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001972:	4718      	bx	r3

08001974 <std_msgs::Header::serialize(unsigned char*) const>:
 8001974:	6843      	ldr	r3, [r0, #4]
 8001976:	b570      	push	{r4, r5, r6, lr}
 8001978:	700b      	strb	r3, [r1, #0]
 800197a:	6843      	ldr	r3, [r0, #4]
 800197c:	0a1b      	lsrs	r3, r3, #8
 800197e:	704b      	strb	r3, [r1, #1]
 8001980:	88c3      	ldrh	r3, [r0, #6]
 8001982:	708b      	strb	r3, [r1, #2]
 8001984:	79c3      	ldrb	r3, [r0, #7]
 8001986:	70cb      	strb	r3, [r1, #3]
 8001988:	6883      	ldr	r3, [r0, #8]
 800198a:	710b      	strb	r3, [r1, #4]
 800198c:	6883      	ldr	r3, [r0, #8]
 800198e:	0a1b      	lsrs	r3, r3, #8
 8001990:	714b      	strb	r3, [r1, #5]
 8001992:	8943      	ldrh	r3, [r0, #10]
 8001994:	718b      	strb	r3, [r1, #6]
 8001996:	7ac3      	ldrb	r3, [r0, #11]
 8001998:	71cb      	strb	r3, [r1, #7]
 800199a:	68c3      	ldr	r3, [r0, #12]
 800199c:	720b      	strb	r3, [r1, #8]
 800199e:	68c3      	ldr	r3, [r0, #12]
 80019a0:	0a1b      	lsrs	r3, r3, #8
 80019a2:	724b      	strb	r3, [r1, #9]
 80019a4:	89c3      	ldrh	r3, [r0, #14]
 80019a6:	728b      	strb	r3, [r1, #10]
 80019a8:	7bc3      	ldrb	r3, [r0, #15]
 80019aa:	72cb      	strb	r3, [r1, #11]
 80019ac:	4605      	mov	r5, r0
 80019ae:	6900      	ldr	r0, [r0, #16]
 80019b0:	460c      	mov	r4, r1
 80019b2:	f006 fd2e 	bl	8008412 <strlen>
 80019b6:	0a03      	lsrs	r3, r0, #8
 80019b8:	7363      	strb	r3, [r4, #13]
 80019ba:	0c03      	lsrs	r3, r0, #16
 80019bc:	73a3      	strb	r3, [r4, #14]
 80019be:	0e03      	lsrs	r3, r0, #24
 80019c0:	7320      	strb	r0, [r4, #12]
 80019c2:	73e3      	strb	r3, [r4, #15]
 80019c4:	4606      	mov	r6, r0
 80019c6:	4602      	mov	r2, r0
 80019c8:	6929      	ldr	r1, [r5, #16]
 80019ca:	f104 0010 	add.w	r0, r4, #16
 80019ce:	f006 fa2f 	bl	8007e30 <memcpy>
 80019d2:	f106 0010 	add.w	r0, r6, #16
 80019d6:	bd70      	pop	{r4, r5, r6, pc}

080019d8 <AKROS_bridge::set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 80019d8:	b570      	push	{r4, r5, r6, lr}
 80019da:	4605      	mov	r5, r0
 80019dc:	2400      	movs	r4, #0
 80019de:	f100 0680 	add.w	r6, r0, #128	; 0x80
 80019e2:	f895 2060 	ldrb.w	r2, [r5, #96]	; 0x60
 80019e6:	b2e3      	uxtb	r3, r4
 80019e8:	4293      	cmp	r3, r2
 80019ea:	f104 0401 	add.w	r4, r4, #1
 80019ee:	da07      	bge.n	8001a00 <AKROS_bridge::set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x28>
 80019f0:	4630      	mov	r0, r6
 80019f2:	b2e1      	uxtb	r1, r4
 80019f4:	f000 feca 	bl	800278c <CAN_controller::set_position_to_zero(unsigned char)>
 80019f8:	200a      	movs	r0, #10
 80019fa:	f005 fa63 	bl	8006ec4 <wait_ms>
 80019fe:	e7f0      	b.n	80019e2 <AKROS_bridge::set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0xa>
 8001a00:	bd70      	pop	{r4, r5, r6, pc}

08001a02 <AKROS_bridge::exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 8001a02:	b570      	push	{r4, r5, r6, lr}
 8001a04:	4604      	mov	r4, r0
 8001a06:	2500      	movs	r5, #0
 8001a08:	f100 0680 	add.w	r6, r0, #128	; 0x80
 8001a0c:	f894 2060 	ldrb.w	r2, [r4, #96]	; 0x60
 8001a10:	b2eb      	uxtb	r3, r5
 8001a12:	4293      	cmp	r3, r2
 8001a14:	f105 0501 	add.w	r5, r5, #1
 8001a18:	da07      	bge.n	8001a2a <AKROS_bridge::exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x28>
 8001a1a:	4630      	mov	r0, r6
 8001a1c:	b2e9      	uxtb	r1, r5
 8001a1e:	f000 fe8e 	bl	800273e <CAN_controller::exit_control_mode(unsigned char)>
 8001a22:	200a      	movs	r0, #10
 8001a24:	f005 fa4e 	bl	8006ec4 <wait_ms>
 8001a28:	e7f0      	b.n	8001a0c <AKROS_bridge::exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0xa>
 8001a2a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001a2c:	6f22      	ldr	r2, [r4, #112]	; 0x70
 8001a2e:	041b      	lsls	r3, r3, #16
 8001a30:	6013      	str	r3, [r2, #0]
 8001a32:	bd70      	pop	{r4, r5, r6, pc}

08001a34 <sensor_msgs::JointState::serialize(unsigned char*) const>:
 8001a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8001a38:	4604      	mov	r4, r0
 8001a3a:	3004      	adds	r0, #4
 8001a3c:	460e      	mov	r6, r1
 8001a3e:	f7ff ff99 	bl	8001974 <std_msgs::Header::serialize(unsigned char*) const>
 8001a42:	69a3      	ldr	r3, [r4, #24]
 8001a44:	5433      	strb	r3, [r6, r0]
 8001a46:	69a2      	ldr	r2, [r4, #24]
 8001a48:	1833      	adds	r3, r6, r0
 8001a4a:	0a12      	lsrs	r2, r2, #8
 8001a4c:	705a      	strb	r2, [r3, #1]
 8001a4e:	8b62      	ldrh	r2, [r4, #26]
 8001a50:	709a      	strb	r2, [r3, #2]
 8001a52:	7ee2      	ldrb	r2, [r4, #27]
 8001a54:	70da      	strb	r2, [r3, #3]
 8001a56:	1d05      	adds	r5, r0, #4
 8001a58:	f04f 0800 	mov.w	r8, #0
 8001a5c:	69a3      	ldr	r3, [r4, #24]
 8001a5e:	4598      	cmp	r8, r3
 8001a60:	eb06 0705 	add.w	r7, r6, r5
 8001a64:	d21b      	bcs.n	8001a9e <sensor_msgs::JointState::serialize(unsigned char*) const+0x6a>
 8001a66:	6a23      	ldr	r3, [r4, #32]
 8001a68:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8001a6c:	f006 fcd1 	bl	8008412 <strlen>
 8001a70:	ea4f 0a88 	mov.w	r10, r8, lsl #2
 8001a74:	4681      	mov	r9, r0
 8001a76:	2300      	movs	r3, #0
 8001a78:	fa29 f203 	lsr.w	r2, r9, r3
 8001a7c:	3308      	adds	r3, #8
 8001a7e:	2b20      	cmp	r3, #32
 8001a80:	f807 2b01 	strb.w	r2, [r7], #1
 8001a84:	d1f8      	bne.n	8001a78 <sensor_msgs::JointState::serialize(unsigned char*) const+0x44>
 8001a86:	6a23      	ldr	r3, [r4, #32]
 8001a88:	3504      	adds	r5, #4
 8001a8a:	1970      	adds	r0, r6, r5
 8001a8c:	464a      	mov	r2, r9
 8001a8e:	f853 100a 	ldr.w	r1, [r3, r10]
 8001a92:	f006 f9cd 	bl	8007e30 <memcpy>
 8001a96:	444d      	add	r5, r9
 8001a98:	f108 0801 	add.w	r8, r8, #1
 8001a9c:	e7de      	b.n	8001a5c <sensor_msgs::JointState::serialize(unsigned char*) const+0x28>
 8001a9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aa0:	5573      	strb	r3, [r6, r5]
 8001aa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aa4:	0a1b      	lsrs	r3, r3, #8
 8001aa6:	707b      	strb	r3, [r7, #1]
 8001aa8:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8001aaa:	70bb      	strb	r3, [r7, #2]
 8001aac:	f894 3027 	ldrb.w	r3, [r4, #39]	; 0x27
 8001ab0:	70fb      	strb	r3, [r7, #3]
 8001ab2:	1d28      	adds	r0, r5, #4
 8001ab4:	4430      	add	r0, r6
 8001ab6:	2100      	movs	r1, #0
 8001ab8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001aba:	4291      	cmp	r1, r2
 8001abc:	eba0 0306 	sub.w	r3, r0, r6
 8001ac0:	f100 0008 	add.w	r0, r0, #8
 8001ac4:	d21d      	bcs.n	8001b02 <sensor_msgs::JointState::serialize(unsigned char*) const+0xce>
 8001ac6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ac8:	f853 2031 	ldr.w	r2, [r3, r1, lsl #3]
 8001acc:	eb03 05c1 	add.w	r5, r3, r1, lsl #3
 8001ad0:	3101      	adds	r1, #1
 8001ad2:	686b      	ldr	r3, [r5, #4]
 8001ad4:	f800 2c08 	strb.w	r2, [r0, #-8]
 8001ad8:	0a15      	lsrs	r5, r2, #8
 8001ada:	f800 5c07 	strb.w	r5, [r0, #-7]
 8001ade:	0c15      	lsrs	r5, r2, #16
 8001ae0:	0e12      	lsrs	r2, r2, #24
 8001ae2:	f800 2c05 	strb.w	r2, [r0, #-5]
 8001ae6:	0a1a      	lsrs	r2, r3, #8
 8001ae8:	f800 3c04 	strb.w	r3, [r0, #-4]
 8001aec:	f800 2c03 	strb.w	r2, [r0, #-3]
 8001af0:	0c1a      	lsrs	r2, r3, #16
 8001af2:	0e1b      	lsrs	r3, r3, #24
 8001af4:	f800 5c06 	strb.w	r5, [r0, #-6]
 8001af8:	f800 2c02 	strb.w	r2, [r0, #-2]
 8001afc:	f800 3c01 	strb.w	r3, [r0, #-1]
 8001b00:	e7da      	b.n	8001ab8 <sensor_msgs::JointState::serialize(unsigned char*) const+0x84>
 8001b02:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8001b04:	54f2      	strb	r2, [r6, r3]
 8001b06:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001b08:	18f2      	adds	r2, r6, r3
 8001b0a:	0a09      	lsrs	r1, r1, #8
 8001b0c:	7051      	strb	r1, [r2, #1]
 8001b0e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8001b10:	7091      	strb	r1, [r2, #2]
 8001b12:	f894 1037 	ldrb.w	r1, [r4, #55]	; 0x37
 8001b16:	70d1      	strb	r1, [r2, #3]
 8001b18:	3304      	adds	r3, #4
 8001b1a:	18f1      	adds	r1, r6, r3
 8001b1c:	2000      	movs	r0, #0
 8001b1e:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8001b20:	4290      	cmp	r0, r2
 8001b22:	eba1 0306 	sub.w	r3, r1, r6
 8001b26:	f101 0108 	add.w	r1, r1, #8
 8001b2a:	d21d      	bcs.n	8001b68 <sensor_msgs::JointState::serialize(unsigned char*) const+0x134>
 8001b2c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8001b2e:	eb02 03c0 	add.w	r3, r2, r0, lsl #3
 8001b32:	f852 2030 	ldr.w	r2, [r2, r0, lsl #3]
 8001b36:	685b      	ldr	r3, [r3, #4]
 8001b38:	f801 2c08 	strb.w	r2, [r1, #-8]
 8001b3c:	0a15      	lsrs	r5, r2, #8
 8001b3e:	f801 5c07 	strb.w	r5, [r1, #-7]
 8001b42:	0c15      	lsrs	r5, r2, #16
 8001b44:	0e12      	lsrs	r2, r2, #24
 8001b46:	f801 2c05 	strb.w	r2, [r1, #-5]
 8001b4a:	0a1a      	lsrs	r2, r3, #8
 8001b4c:	f801 3c04 	strb.w	r3, [r1, #-4]
 8001b50:	f801 2c03 	strb.w	r2, [r1, #-3]
 8001b54:	0c1a      	lsrs	r2, r3, #16
 8001b56:	0e1b      	lsrs	r3, r3, #24
 8001b58:	f801 5c06 	strb.w	r5, [r1, #-6]
 8001b5c:	f801 2c02 	strb.w	r2, [r1, #-2]
 8001b60:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001b64:	3001      	adds	r0, #1
 8001b66:	e7da      	b.n	8001b1e <sensor_msgs::JointState::serialize(unsigned char*) const+0xea>
 8001b68:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8001b6a:	54f2      	strb	r2, [r6, r3]
 8001b6c:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8001b6e:	18f2      	adds	r2, r6, r3
 8001b70:	0a09      	lsrs	r1, r1, #8
 8001b72:	7051      	strb	r1, [r2, #1]
 8001b74:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 8001b78:	7091      	strb	r1, [r2, #2]
 8001b7a:	f894 1047 	ldrb.w	r1, [r4, #71]	; 0x47
 8001b7e:	70d1      	strb	r1, [r2, #3]
 8001b80:	3304      	adds	r3, #4
 8001b82:	18f1      	adds	r1, r6, r3
 8001b84:	2500      	movs	r5, #0
 8001b86:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001b88:	429d      	cmp	r5, r3
 8001b8a:	eba1 0006 	sub.w	r0, r1, r6
 8001b8e:	f101 0108 	add.w	r1, r1, #8
 8001b92:	d21d      	bcs.n	8001bd0 <sensor_msgs::JointState::serialize(unsigned char*) const+0x19c>
 8001b94:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b96:	eb02 03c5 	add.w	r3, r2, r5, lsl #3
 8001b9a:	f852 2035 	ldr.w	r2, [r2, r5, lsl #3]
 8001b9e:	685b      	ldr	r3, [r3, #4]
 8001ba0:	f801 2c08 	strb.w	r2, [r1, #-8]
 8001ba4:	0a10      	lsrs	r0, r2, #8
 8001ba6:	f801 0c07 	strb.w	r0, [r1, #-7]
 8001baa:	0c10      	lsrs	r0, r2, #16
 8001bac:	0e12      	lsrs	r2, r2, #24
 8001bae:	f801 2c05 	strb.w	r2, [r1, #-5]
 8001bb2:	0a1a      	lsrs	r2, r3, #8
 8001bb4:	f801 3c04 	strb.w	r3, [r1, #-4]
 8001bb8:	f801 2c03 	strb.w	r2, [r1, #-3]
 8001bbc:	0c1a      	lsrs	r2, r3, #16
 8001bbe:	0e1b      	lsrs	r3, r3, #24
 8001bc0:	f801 0c06 	strb.w	r0, [r1, #-6]
 8001bc4:	f801 2c02 	strb.w	r2, [r1, #-2]
 8001bc8:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001bcc:	3501      	adds	r5, #1
 8001bce:	e7da      	b.n	8001b86 <sensor_msgs::JointState::serialize(unsigned char*) const+0x152>
 8001bd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

08001bd4 <AKROS_bridge_msgs::motor_reply::serialize(unsigned char*) const>:
 8001bd4:	b508      	push	{r3, lr}
 8001bd6:	3008      	adds	r0, #8
 8001bd8:	f7ff ff2c 	bl	8001a34 <sensor_msgs::JointState::serialize(unsigned char*) const>
 8001bdc:	bd08      	pop	{r3, pc}

08001bde <AKROS_bridge_msgs::InitializeResponse::serialize(unsigned char*) const>:
 8001bde:	b508      	push	{r3, lr}
 8001be0:	3008      	adds	r0, #8
 8001be2:	f7ff ff27 	bl	8001a34 <sensor_msgs::JointState::serialize(unsigned char*) const>
 8001be6:	bd08      	pop	{r3, pc}

08001be8 <ros::Publisher::publish(ros::Msg const*)>:
 8001be8:	68c3      	ldr	r3, [r0, #12]
 8001bea:	681a      	ldr	r2, [r3, #0]
 8001bec:	b410      	push	{r4}
 8001bee:	6814      	ldr	r4, [r2, #0]
 8001bf0:	460a      	mov	r2, r1
 8001bf2:	6881      	ldr	r1, [r0, #8]
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	4623      	mov	r3, r4
 8001bf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bfc:	4718      	bx	r3

08001bfe <ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>::callback(unsigned char*)>:
 8001bfe:	b570      	push	{r4, r5, r6, lr}
 8001c00:	780b      	ldrb	r3, [r1, #0]
 8001c02:	7403      	strb	r3, [r0, #16]
 8001c04:	4604      	mov	r4, r0
 8001c06:	f8d0 0090 	ldr.w	r0, [r0, #144]	; 0x90
 8001c0a:	f8d4 6094 	ldr.w	r6, [r4, #148]	; 0x94
 8001c0e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001c12:	f010 0f01 	tst.w	r0, #1
 8001c16:	ea4f 0060 	mov.w	r0, r0, asr #1
 8001c1a:	f104 0518 	add.w	r5, r4, #24
 8001c1e:	bf18      	it	ne
 8001c20:	5832      	ldrne	r2, [r6, r0]
 8001c22:	f104 010c 	add.w	r1, r4, #12
 8001c26:	bf18      	it	ne
 8001c28:	58d3      	ldrne	r3, [r2, r3]
 8001c2a:	4430      	add	r0, r6
 8001c2c:	462a      	mov	r2, r5
 8001c2e:	4798      	blx	r3
 8001c30:	4629      	mov	r1, r5
 8001c32:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8001c36:	f7ff ffd7 	bl	8001be8 <ros::Publisher::publish(ros::Msg const*)>
 8001c3a:	bd70      	pop	{r4, r5, r6, pc}

08001c3c <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>::callback(unsigned char*)>:
 8001c3c:	b570      	push	{r4, r5, r6, lr}
 8001c3e:	f100 010c 	add.w	r1, r0, #12
 8001c42:	4604      	mov	r4, r0
 8001c44:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8001c46:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8001c48:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001c4a:	f010 0f01 	tst.w	r0, #1
 8001c4e:	ea4f 0060 	mov.w	r0, r0, asr #1
 8001c52:	f104 0510 	add.w	r5, r4, #16
 8001c56:	bf18      	it	ne
 8001c58:	5832      	ldrne	r2, [r6, r0]
 8001c5a:	4430      	add	r0, r6
 8001c5c:	bf18      	it	ne
 8001c5e:	58d3      	ldrne	r3, [r2, r3]
 8001c60:	462a      	mov	r2, r5
 8001c62:	4798      	blx	r3
 8001c64:	4629      	mov	r1, r5
 8001c66:	f104 0014 	add.w	r0, r4, #20
 8001c6a:	f7ff ffbd 	bl	8001be8 <ros::Publisher::publish(ros::Msg const*)>
 8001c6e:	bd70      	pop	{r4, r5, r6, pc}

08001c70 <AKROS_bridge::loop()>:
 8001c70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001c74:	f890 3144 	ldrb.w	r3, [r0, #324]	; 0x144
 8001c78:	4604      	mov	r4, r0
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d031      	beq.n	8001ce2 <AKROS_bridge::loop()+0x72>
 8001c7e:	2300      	movs	r3, #0
 8001c80:	f100 0880 	add.w	r8, r0, #128	; 0x80
 8001c84:	b2de      	uxtb	r6, r3
 8001c86:	1c5d      	adds	r5, r3, #1
 8001c88:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 8001c8c:	429e      	cmp	r6, r3
 8001c8e:	da23      	bge.n	8001cd8 <AKROS_bridge::loop()+0x68>
 8001c90:	b672      	cpsid	i
 8001c92:	4631      	mov	r1, r6
 8001c94:	4640      	mov	r0, r8
 8001c96:	f000 fe2f 	bl	80028f8 <CAN_controller::can_send(unsigned char)>
 8001c9a:	b662      	cpsie	i
 8001c9c:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001ca0:	00f7      	lsls	r7, r6, #3
 8001ca2:	eb03 1646 	add.w	r6, r3, r6, lsl #5
 8001ca6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001ca8:	6830      	ldr	r0, [r6, #0]
 8001caa:	eb03 0907 	add.w	r9, r3, r7
 8001cae:	f005 fdfd 	bl	80078ac <__aeabi_f2d>
 8001cb2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001cb4:	e9c9 0100 	strd	r0, r1, [r9]
 8001cb8:	68b0      	ldr	r0, [r6, #8]
 8001cba:	eb03 0907 	add.w	r9, r3, r7
 8001cbe:	f005 fdf5 	bl	80078ac <__aeabi_f2d>
 8001cc2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001cc4:	e9c9 0100 	strd	r0, r1, [r9]
 8001cc8:	6930      	ldr	r0, [r6, #16]
 8001cca:	441f      	add	r7, r3
 8001ccc:	f005 fdee 	bl	80078ac <__aeabi_f2d>
 8001cd0:	462b      	mov	r3, r5
 8001cd2:	e9c7 0100 	strd	r0, r1, [r7]
 8001cd6:	e7d5      	b.n	8001c84 <AKROS_bridge::loop()+0x14>
 8001cd8:	4621      	mov	r1, r4
 8001cda:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 8001cde:	f7ff ff83 	bl	8001be8 <ros::Publisher::publish(ros::Msg const*)>
 8001ce2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08001ce6 <std_msgs::Header::deserialize(unsigned char*)>:
 8001ce6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001ce8:	780b      	ldrb	r3, [r1, #0]
 8001cea:	6043      	str	r3, [r0, #4]
 8001cec:	784a      	ldrb	r2, [r1, #1]
 8001cee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001cf2:	6043      	str	r3, [r0, #4]
 8001cf4:	788a      	ldrb	r2, [r1, #2]
 8001cf6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001cfa:	6043      	str	r3, [r0, #4]
 8001cfc:	78ca      	ldrb	r2, [r1, #3]
 8001cfe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001d02:	6043      	str	r3, [r0, #4]
 8001d04:	790b      	ldrb	r3, [r1, #4]
 8001d06:	6083      	str	r3, [r0, #8]
 8001d08:	794a      	ldrb	r2, [r1, #5]
 8001d0a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001d0e:	6083      	str	r3, [r0, #8]
 8001d10:	798a      	ldrb	r2, [r1, #6]
 8001d12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001d16:	6083      	str	r3, [r0, #8]
 8001d18:	79ca      	ldrb	r2, [r1, #7]
 8001d1a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001d1e:	6083      	str	r3, [r0, #8]
 8001d20:	7a0b      	ldrb	r3, [r1, #8]
 8001d22:	60c3      	str	r3, [r0, #12]
 8001d24:	7a4a      	ldrb	r2, [r1, #9]
 8001d26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001d2a:	60c3      	str	r3, [r0, #12]
 8001d2c:	7a8a      	ldrb	r2, [r1, #10]
 8001d2e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001d32:	60c3      	str	r3, [r0, #12]
 8001d34:	7aca      	ldrb	r2, [r1, #11]
 8001d36:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001d3a:	60c3      	str	r3, [r0, #12]
 8001d3c:	460c      	mov	r4, r1
 8001d3e:	4605      	mov	r5, r0
 8001d40:	310c      	adds	r1, #12
 8001d42:	a801      	add	r0, sp, #4
 8001d44:	f7fe fb9d 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8001d48:	9b01      	ldr	r3, [sp, #4]
 8001d4a:	f104 0210 	add.w	r2, r4, #16
 8001d4e:	f103 0010 	add.w	r0, r3, #16
 8001d52:	1b11      	subs	r1, r2, r4
 8001d54:	4288      	cmp	r0, r1
 8001d56:	d904      	bls.n	8001d62 <std_msgs::Header::deserialize(unsigned char*)+0x7c>
 8001d58:	f812 1b01 	ldrb.w	r1, [r2], #1
 8001d5c:	f802 1c02 	strb.w	r1, [r2, #-2]
 8001d60:	e7f7      	b.n	8001d52 <std_msgs::Header::deserialize(unsigned char*)+0x6c>
 8001d62:	4423      	add	r3, r4
 8001d64:	2200      	movs	r2, #0
 8001d66:	340f      	adds	r4, #15
 8001d68:	73da      	strb	r2, [r3, #15]
 8001d6a:	612c      	str	r4, [r5, #16]
 8001d6c:	b003      	add	sp, #12
 8001d6e:	bd30      	pop	{r4, r5, pc}

08001d70 <sensor_msgs::JointState::deserialize(unsigned char*)>:
 8001d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8001d74:	4604      	mov	r4, r0
 8001d76:	b0ad      	sub	sp, #180	; 0xb4
 8001d78:	3004      	adds	r0, #4
 8001d7a:	460d      	mov	r5, r1
 8001d7c:	f7ff ffb3 	bl	8001ce6 <std_msgs::Header::deserialize(unsigned char*)>
 8001d80:	182a      	adds	r2, r5, r0
 8001d82:	5c29      	ldrb	r1, [r5, r0]
 8001d84:	7893      	ldrb	r3, [r2, #2]
 8001d86:	7857      	ldrb	r7, [r2, #1]
 8001d88:	041b      	lsls	r3, r3, #16
 8001d8a:	ea43 2707 	orr.w	r7, r3, r7, lsl #8
 8001d8e:	78d3      	ldrb	r3, [r2, #3]
 8001d90:	430f      	orrs	r7, r1
 8001d92:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8001d96:	69a3      	ldr	r3, [r4, #24]
 8001d98:	429f      	cmp	r7, r3
 8001d9a:	f100 0604 	add.w	r6, r0, #4
 8001d9e:	d904      	bls.n	8001daa <sensor_msgs::JointState::deserialize(unsigned char*)+0x3a>
 8001da0:	00b9      	lsls	r1, r7, #2
 8001da2:	6a20      	ldr	r0, [r4, #32]
 8001da4:	f006 fada 	bl	800835c <realloc>
 8001da8:	6220      	str	r0, [r4, #32]
 8001daa:	61a7      	str	r7, [r4, #24]
 8001dac:	2200      	movs	r2, #0
 8001dae:	69a3      	ldr	r3, [r4, #24]
 8001db0:	9229      	str	r2, [sp, #164]	; 0xa4
 8001db2:	429a      	cmp	r2, r3
 8001db4:	eb05 0106 	add.w	r1, r5, r6
 8001db8:	f106 0704 	add.w	r7, r6, #4
 8001dbc:	d21b      	bcs.n	8001df6 <sensor_msgs::JointState::deserialize(unsigned char*)+0x86>
 8001dbe:	a82b      	add	r0, sp, #172	; 0xac
 8001dc0:	f7fe fb5f 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8001dc4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8001dc6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8001dc8:	443e      	add	r6, r7
 8001dca:	19eb      	adds	r3, r5, r7
 8001dcc:	1b59      	subs	r1, r3, r5
 8001dce:	428e      	cmp	r6, r1
 8001dd0:	d904      	bls.n	8001ddc <sensor_msgs::JointState::deserialize(unsigned char*)+0x6c>
 8001dd2:	f813 1b01 	ldrb.w	r1, [r3], #1
 8001dd6:	f803 1c02 	strb.w	r1, [r3, #-2]
 8001dda:	e7f7      	b.n	8001dcc <sensor_msgs::JointState::deserialize(unsigned char*)+0x5c>
 8001ddc:	19ab      	adds	r3, r5, r6
 8001dde:	f04f 0100 	mov.w	r1, #0
 8001de2:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001de6:	6a21      	ldr	r1, [r4, #32]
 8001de8:	1e7b      	subs	r3, r7, #1
 8001dea:	442b      	add	r3, r5
 8001dec:	61e3      	str	r3, [r4, #28]
 8001dee:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8001df2:	3201      	adds	r2, #1
 8001df4:	e7db      	b.n	8001dae <sensor_msgs::JointState::deserialize(unsigned char*)+0x3e>
 8001df6:	5dab      	ldrb	r3, [r5, r6]
 8001df8:	788e      	ldrb	r6, [r1, #2]
 8001dfa:	784a      	ldrb	r2, [r1, #1]
 8001dfc:	0436      	lsls	r6, r6, #16
 8001dfe:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 8001e02:	431e      	orrs	r6, r3
 8001e04:	78cb      	ldrb	r3, [r1, #3]
 8001e06:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 8001e0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e0c:	429e      	cmp	r6, r3
 8001e0e:	d904      	bls.n	8001e1a <sensor_msgs::JointState::deserialize(unsigned char*)+0xaa>
 8001e10:	00f1      	lsls	r1, r6, #3
 8001e12:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001e14:	f006 faa2 	bl	800835c <realloc>
 8001e18:	6320      	str	r0, [r4, #48]	; 0x30
 8001e1a:	6266      	str	r6, [r4, #36]	; 0x24
 8001e1c:	19eb      	adds	r3, r5, r7
 8001e1e:	2200      	movs	r2, #0
 8001e20:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8001e24:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001e26:	428a      	cmp	r2, r1
 8001e28:	eba3 0005 	sub.w	r0, r3, r5
 8001e2c:	f103 0308 	add.w	r3, r3, #8
 8001e30:	d262      	bcs.n	8001ef8 <sensor_msgs::JointState::deserialize(unsigned char*)+0x188>
 8001e32:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 8001e36:	0201      	lsls	r1, r0, #8
 8001e38:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8001e3c:	9104      	str	r1, [sp, #16]
 8001e3e:	2600      	movs	r6, #0
 8001e40:	0401      	lsls	r1, r0, #16
 8001e42:	9607      	str	r6, [sp, #28]
 8001e44:	9605      	str	r6, [sp, #20]
 8001e46:	9106      	str	r1, [sp, #24]
 8001e48:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001e4c:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 8001e50:	4306      	orrs	r6, r0
 8001e52:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8001e56:	430f      	orrs	r7, r1
 8001e58:	ea40 0806 	orr.w	r8, r0, r6
 8001e5c:	2100      	movs	r1, #0
 8001e5e:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001e62:	ea41 0907 	orr.w	r9, r1, r7
 8001e66:	2100      	movs	r1, #0
 8001e68:	9109      	str	r1, [sp, #36]	; 0x24
 8001e6a:	0631      	lsls	r1, r6, #24
 8001e6c:	9108      	str	r1, [sp, #32]
 8001e6e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8001e72:	4646      	mov	r6, r8
 8001e74:	4306      	orrs	r6, r0
 8001e76:	4630      	mov	r0, r6
 8001e78:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8001e7c:	9601      	str	r6, [sp, #4]
 8001e7e:	464f      	mov	r7, r9
 8001e80:	2600      	movs	r6, #0
 8001e82:	430f      	orrs	r7, r1
 8001e84:	9600      	str	r6, [sp, #0]
 8001e86:	4639      	mov	r1, r7
 8001e88:	e9dd 6700 	ldrd	r6, r7, [sp]
 8001e8c:	4306      	orrs	r6, r0
 8001e8e:	4630      	mov	r0, r6
 8001e90:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 8001e94:	0236      	lsls	r6, r6, #8
 8001e96:	9617      	str	r6, [sp, #92]	; 0x5c
 8001e98:	2600      	movs	r6, #0
 8001e9a:	430f      	orrs	r7, r1
 8001e9c:	9616      	str	r6, [sp, #88]	; 0x58
 8001e9e:	4639      	mov	r1, r7
 8001ea0:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 8001ea4:	4306      	orrs	r6, r0
 8001ea6:	4630      	mov	r0, r6
 8001ea8:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 8001eac:	0436      	lsls	r6, r6, #16
 8001eae:	9619      	str	r6, [sp, #100]	; 0x64
 8001eb0:	2600      	movs	r6, #0
 8001eb2:	430f      	orrs	r7, r1
 8001eb4:	9618      	str	r6, [sp, #96]	; 0x60
 8001eb6:	4639      	mov	r1, r7
 8001eb8:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8001ebc:	4306      	orrs	r6, r0
 8001ebe:	4630      	mov	r0, r6
 8001ec0:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 8001ec4:	0636      	lsls	r6, r6, #24
 8001ec6:	961b      	str	r6, [sp, #108]	; 0x6c
 8001ec8:	2600      	movs	r6, #0
 8001eca:	430f      	orrs	r7, r1
 8001ecc:	961a      	str	r6, [sp, #104]	; 0x68
 8001ece:	4639      	mov	r1, r7
 8001ed0:	e9dd 671a 	ldrd	r6, r7, [sp, #104]	; 0x68
 8001ed4:	4306      	orrs	r6, r0
 8001ed6:	430f      	orrs	r7, r1
 8001ed8:	4630      	mov	r0, r6
 8001eda:	4639      	mov	r1, r7
 8001edc:	e9c4 010a 	strd	r0, r1, [r4, #40]	; 0x28
 8001ee0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001ee2:	f8de 1000 	ldr.w	r1, [lr]
 8001ee6:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001eea:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8001eee:	f8de 1004 	ldr.w	r1, [lr, #4]
 8001ef2:	6071      	str	r1, [r6, #4]
 8001ef4:	3201      	adds	r2, #1
 8001ef6:	e795      	b.n	8001e24 <sensor_msgs::JointState::deserialize(unsigned char*)+0xb4>
 8001ef8:	182a      	adds	r2, r5, r0
 8001efa:	5c29      	ldrb	r1, [r5, r0]
 8001efc:	7893      	ldrb	r3, [r2, #2]
 8001efe:	7856      	ldrb	r6, [r2, #1]
 8001f00:	041b      	lsls	r3, r3, #16
 8001f02:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8001f06:	78d3      	ldrb	r3, [r2, #3]
 8001f08:	430e      	orrs	r6, r1
 8001f0a:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 8001f0e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001f10:	429e      	cmp	r6, r3
 8001f12:	f100 0704 	add.w	r7, r0, #4
 8001f16:	d904      	bls.n	8001f22 <sensor_msgs::JointState::deserialize(unsigned char*)+0x1b2>
 8001f18:	00f1      	lsls	r1, r6, #3
 8001f1a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001f1c:	f006 fa1e 	bl	800835c <realloc>
 8001f20:	6420      	str	r0, [r4, #64]	; 0x40
 8001f22:	6366      	str	r6, [r4, #52]	; 0x34
 8001f24:	19eb      	adds	r3, r5, r7
 8001f26:	2200      	movs	r2, #0
 8001f28:	f104 0e38 	add.w	lr, r4, #56	; 0x38
 8001f2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001f2e:	428a      	cmp	r2, r1
 8001f30:	eba3 0005 	sub.w	r0, r3, r5
 8001f34:	f103 0308 	add.w	r3, r3, #8
 8001f38:	d25d      	bcs.n	8001ff6 <sensor_msgs::JointState::deserialize(unsigned char*)+0x286>
 8001f3a:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 8001f3e:	f813 bc04 	ldrb.w	r11, [r3, #-4]
 8001f42:	0201      	lsls	r1, r0, #8
 8001f44:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8001f48:	910a      	str	r1, [sp, #40]	; 0x28
 8001f4a:	2600      	movs	r6, #0
 8001f4c:	0401      	lsls	r1, r0, #16
 8001f4e:	960d      	str	r6, [sp, #52]	; 0x34
 8001f50:	960b      	str	r6, [sp, #44]	; 0x2c
 8001f52:	910c      	str	r1, [sp, #48]	; 0x30
 8001f54:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8001f58:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 8001f5c:	4306      	orrs	r6, r0
 8001f5e:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8001f62:	430f      	orrs	r7, r1
 8001f64:	ea40 0806 	orr.w	r8, r0, r6
 8001f68:	2100      	movs	r1, #0
 8001f6a:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001f6e:	ea41 0907 	orr.w	r9, r1, r7
 8001f72:	2100      	movs	r1, #0
 8001f74:	910f      	str	r1, [sp, #60]	; 0x3c
 8001f76:	0631      	lsls	r1, r6, #24
 8001f78:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 8001f7c:	910e      	str	r1, [sp, #56]	; 0x38
 8001f7e:	f04f 0a00 	mov.w	r10, #0
 8001f82:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8001f86:	0236      	lsls	r6, r6, #8
 8001f88:	961d      	str	r6, [sp, #116]	; 0x74
 8001f8a:	f8cd a070 	str.w	r10, [sp, #112]	; 0x70
 8001f8e:	e9dd 671c 	ldrd	r6, r7, [sp, #112]	; 0x70
 8001f92:	ea40 0008 	orr.w	r0, r0, r8
 8001f96:	ea40 000a 	orr.w	r0, r0, r10
 8001f9a:	4306      	orrs	r6, r0
 8001f9c:	4630      	mov	r0, r6
 8001f9e:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 8001fa2:	f8cd a078 	str.w	r10, [sp, #120]	; 0x78
 8001fa6:	ea41 0109 	orr.w	r1, r1, r9
 8001faa:	ea41 010b 	orr.w	r1, r1, r11
 8001fae:	0436      	lsls	r6, r6, #16
 8001fb0:	430f      	orrs	r7, r1
 8001fb2:	961f      	str	r6, [sp, #124]	; 0x7c
 8001fb4:	4639      	mov	r1, r7
 8001fb6:	e9dd 671e 	ldrd	r6, r7, [sp, #120]	; 0x78
 8001fba:	4306      	orrs	r6, r0
 8001fbc:	4630      	mov	r0, r6
 8001fbe:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 8001fc2:	f8cd a080 	str.w	r10, [sp, #128]	; 0x80
 8001fc6:	0636      	lsls	r6, r6, #24
 8001fc8:	430f      	orrs	r7, r1
 8001fca:	9621      	str	r6, [sp, #132]	; 0x84
 8001fcc:	4639      	mov	r1, r7
 8001fce:	e9dd 6720 	ldrd	r6, r7, [sp, #128]	; 0x80
 8001fd2:	4306      	orrs	r6, r0
 8001fd4:	430f      	orrs	r7, r1
 8001fd6:	4630      	mov	r0, r6
 8001fd8:	4639      	mov	r1, r7
 8001fda:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 8001fde:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8001fe0:	f8de 1000 	ldr.w	r1, [lr]
 8001fe4:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001fe8:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8001fec:	f8de 1004 	ldr.w	r1, [lr, #4]
 8001ff0:	6071      	str	r1, [r6, #4]
 8001ff2:	3201      	adds	r2, #1
 8001ff4:	e79a      	b.n	8001f2c <sensor_msgs::JointState::deserialize(unsigned char*)+0x1bc>
 8001ff6:	182a      	adds	r2, r5, r0
 8001ff8:	5c29      	ldrb	r1, [r5, r0]
 8001ffa:	7893      	ldrb	r3, [r2, #2]
 8001ffc:	7856      	ldrb	r6, [r2, #1]
 8001ffe:	041b      	lsls	r3, r3, #16
 8002000:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8002004:	78d3      	ldrb	r3, [r2, #3]
 8002006:	430e      	orrs	r6, r1
 8002008:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 800200c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800200e:	429e      	cmp	r6, r3
 8002010:	f100 0704 	add.w	r7, r0, #4
 8002014:	d904      	bls.n	8002020 <sensor_msgs::JointState::deserialize(unsigned char*)+0x2b0>
 8002016:	00f1      	lsls	r1, r6, #3
 8002018:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800201a:	f006 f99f 	bl	800835c <realloc>
 800201e:	6520      	str	r0, [r4, #80]	; 0x50
 8002020:	6466      	str	r6, [r4, #68]	; 0x44
 8002022:	19eb      	adds	r3, r5, r7
 8002024:	2200      	movs	r2, #0
 8002026:	f104 0e48 	add.w	lr, r4, #72	; 0x48
 800202a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800202c:	428a      	cmp	r2, r1
 800202e:	eba3 0005 	sub.w	r0, r3, r5
 8002032:	f103 0308 	add.w	r3, r3, #8
 8002036:	d260      	bcs.n	80020fa <sensor_msgs::JointState::deserialize(unsigned char*)+0x38a>
 8002038:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 800203c:	0201      	lsls	r1, r0, #8
 800203e:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8002042:	9110      	str	r1, [sp, #64]	; 0x40
 8002044:	2600      	movs	r6, #0
 8002046:	0401      	lsls	r1, r0, #16
 8002048:	9613      	str	r6, [sp, #76]	; 0x4c
 800204a:	9611      	str	r6, [sp, #68]	; 0x44
 800204c:	9112      	str	r1, [sp, #72]	; 0x48
 800204e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002052:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8002056:	4306      	orrs	r6, r0
 8002058:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 800205c:	430f      	orrs	r7, r1
 800205e:	ea40 0806 	orr.w	r8, r0, r6
 8002062:	2100      	movs	r1, #0
 8002064:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8002068:	ea41 0907 	orr.w	r9, r1, r7
 800206c:	2100      	movs	r1, #0
 800206e:	9115      	str	r1, [sp, #84]	; 0x54
 8002070:	0631      	lsls	r1, r6, #24
 8002072:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8002076:	9603      	str	r6, [sp, #12]
 8002078:	9114      	str	r1, [sp, #80]	; 0x50
 800207a:	2600      	movs	r6, #0
 800207c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 8002080:	9602      	str	r6, [sp, #8]
 8002082:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002086:	ea40 0008 	orr.w	r0, r0, r8
 800208a:	4306      	orrs	r6, r0
 800208c:	4630      	mov	r0, r6
 800208e:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 8002092:	0236      	lsls	r6, r6, #8
 8002094:	9623      	str	r6, [sp, #140]	; 0x8c
 8002096:	ea41 0109 	orr.w	r1, r1, r9
 800209a:	2600      	movs	r6, #0
 800209c:	430f      	orrs	r7, r1
 800209e:	9622      	str	r6, [sp, #136]	; 0x88
 80020a0:	4639      	mov	r1, r7
 80020a2:	e9dd 6722 	ldrd	r6, r7, [sp, #136]	; 0x88
 80020a6:	4306      	orrs	r6, r0
 80020a8:	4630      	mov	r0, r6
 80020aa:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80020ae:	0436      	lsls	r6, r6, #16
 80020b0:	9625      	str	r6, [sp, #148]	; 0x94
 80020b2:	2600      	movs	r6, #0
 80020b4:	430f      	orrs	r7, r1
 80020b6:	9624      	str	r6, [sp, #144]	; 0x90
 80020b8:	4639      	mov	r1, r7
 80020ba:	e9dd 6724 	ldrd	r6, r7, [sp, #144]	; 0x90
 80020be:	4306      	orrs	r6, r0
 80020c0:	4630      	mov	r0, r6
 80020c2:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80020c6:	0636      	lsls	r6, r6, #24
 80020c8:	9627      	str	r6, [sp, #156]	; 0x9c
 80020ca:	2600      	movs	r6, #0
 80020cc:	430f      	orrs	r7, r1
 80020ce:	9626      	str	r6, [sp, #152]	; 0x98
 80020d0:	4639      	mov	r1, r7
 80020d2:	e9dd 6726 	ldrd	r6, r7, [sp, #152]	; 0x98
 80020d6:	4306      	orrs	r6, r0
 80020d8:	430f      	orrs	r7, r1
 80020da:	4630      	mov	r0, r6
 80020dc:	4639      	mov	r1, r7
 80020de:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
 80020e2:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80020e4:	f8de 1000 	ldr.w	r1, [lr]
 80020e8:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 80020ec:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80020f0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80020f4:	6071      	str	r1, [r6, #4]
 80020f6:	3201      	adds	r2, #1
 80020f8:	e797      	b.n	800202a <sensor_msgs::JointState::deserialize(unsigned char*)+0x2ba>
 80020fa:	b02d      	add	sp, #180	; 0xb4
 80020fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

08002100 <AKROS_bridge_msgs::motor_reply::deserialize(unsigned char*)>:
 8002100:	b508      	push	{r3, lr}
 8002102:	3008      	adds	r0, #8
 8002104:	f7ff fe34 	bl	8001d70 <sensor_msgs::JointState::deserialize(unsigned char*)>
 8002108:	bd08      	pop	{r3, pc}

0800210a <AKROS_bridge_msgs::InitializeResponse::deserialize(unsigned char*)>:
 800210a:	b508      	push	{r3, lr}
 800210c:	3008      	adds	r0, #8
 800210e:	f7ff fe2f 	bl	8001d70 <sensor_msgs::JointState::deserialize(unsigned char*)>
 8002112:	bd08      	pop	{r3, pc}

08002114 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>:
 8002114:	b510      	push	{r4, lr}
 8002116:	f200 520c 	addw	r2, r0, #1292	; 0x50c
 800211a:	2300      	movs	r3, #0
 800211c:	f852 4b04 	ldr.w	r4, [r2], #4
 8002120:	b944      	cbnz	r4, 8002134 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x20>
 8002122:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8002126:	337d      	adds	r3, #125	; 0x7d
 8002128:	f8c2 150c 	str.w	r1, [r2, #1292]	; 0x50c
 800212c:	60c8      	str	r0, [r1, #12]
 800212e:	608b      	str	r3, [r1, #8]
 8002130:	2001      	movs	r0, #1
 8002132:	bd10      	pop	{r4, pc}
 8002134:	3301      	adds	r3, #1
 8002136:	2b19      	cmp	r3, #25
 8002138:	d1f0      	bne.n	800211c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x8>
 800213a:	2000      	movs	r0, #0
 800213c:	bd10      	pop	{r4, pc}

0800213e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 800213e:	b510      	push	{r4, lr}
 8002140:	f500 62ae 	add.w	r2, r0, #1392	; 0x570
 8002144:	2300      	movs	r3, #0
 8002146:	f852 4b04 	ldr.w	r4, [r2], #4
 800214a:	b93c      	cbnz	r4, 800215c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 800214c:	f503 72ae 	add.w	r2, r3, #348	; 0x15c
 8002150:	3364      	adds	r3, #100	; 0x64
 8002152:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8002156:	604b      	str	r3, [r1, #4]
 8002158:	2001      	movs	r0, #1
 800215a:	bd10      	pop	{r4, pc}
 800215c:	3301      	adds	r3, #1
 800215e:	2b19      	cmp	r3, #25
 8002160:	d1f1      	bne.n	8002146 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8002162:	2000      	movs	r0, #0
 8002164:	bd10      	pop	{r4, pc}

08002166 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>&)>:
 8002166:	b570      	push	{r4, r5, r6, lr}
 8002168:	460c      	mov	r4, r1
 800216a:	3114      	adds	r1, #20
 800216c:	4606      	mov	r6, r0
 800216e:	f7ff ffd1 	bl	8002114 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8002172:	4621      	mov	r1, r4
 8002174:	4605      	mov	r5, r0
 8002176:	4630      	mov	r0, r6
 8002178:	f7ff ffe1 	bl	800213e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 800217c:	2d00      	cmp	r5, #0
 800217e:	bf08      	it	eq
 8002180:	2000      	moveq	r0, #0
 8002182:	bd70      	pop	{r4, r5, r6, pc}

08002184 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)>:
 8002184:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002188:	4b94      	ldr	r3, [pc, #592]	; (80023dc <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x258>)
 800218a:	6003      	str	r3, [r0, #0]
 800218c:	2500      	movs	r5, #0
 800218e:	2600      	movs	r6, #0
 8002190:	2700      	movs	r7, #0
 8002192:	f100 0364 	add.w	r3, r0, #100	; 0x64
 8002196:	f8df b290 	ldr.w	r11, [pc, #656]	; 8002428 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x2a4>
 800219a:	f8df a290 	ldr.w	r10, [pc, #656]	; 800242c <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x2a8>
 800219e:	f8df 9290 	ldr.w	r9, [pc, #656]	; 8002430 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x2ac>
 80021a2:	f8c0 b008 	str.w	r11, [r0, #8]
 80021a6:	4604      	mov	r4, r0
 80021a8:	4688      	mov	r8, r1
 80021aa:	e9c0 670c 	strd	r6, r7, [r0, #48]	; 0x30
 80021ae:	e9c0 6710 	strd	r6, r7, [r0, #64]	; 0x40
 80021b2:	e9c0 6714 	strd	r6, r7, [r0, #80]	; 0x50
 80021b6:	221c      	movs	r2, #28
 80021b8:	f8c0 a00c 	str.w	r10, [r0, #12]
 80021bc:	6105      	str	r5, [r0, #16]
 80021be:	6145      	str	r5, [r0, #20]
 80021c0:	6185      	str	r5, [r0, #24]
 80021c2:	f8c0 901c 	str.w	r9, [r0, #28]
 80021c6:	6205      	str	r5, [r0, #32]
 80021c8:	6245      	str	r5, [r0, #36]	; 0x24
 80021ca:	6285      	str	r5, [r0, #40]	; 0x28
 80021cc:	62c5      	str	r5, [r0, #44]	; 0x2c
 80021ce:	6385      	str	r5, [r0, #56]	; 0x38
 80021d0:	63c5      	str	r5, [r0, #60]	; 0x3c
 80021d2:	6485      	str	r5, [r0, #72]	; 0x48
 80021d4:	64c5      	str	r5, [r0, #76]	; 0x4c
 80021d6:	6585      	str	r5, [r0, #88]	; 0x58
 80021d8:	f880 5060 	strb.w	r5, [r0, #96]	; 0x60
 80021dc:	4629      	mov	r1, r5
 80021de:	4618      	mov	r0, r3
 80021e0:	9301      	str	r3, [sp, #4]
 80021e2:	f005 fe4a 	bl	8007e7a <memset>
 80021e6:	9b01      	ldr	r3, [sp, #4]
 80021e8:	2105      	movs	r1, #5
 80021ea:	4618      	mov	r0, r3
 80021ec:	f000 fc49 	bl	8002a82 <gpio_init_out>
 80021f0:	f104 0080 	add.w	r0, r4, #128	; 0x80
 80021f4:	f000 fa4c 	bl	8002690 <CAN_controller::CAN_controller()>
 80021f8:	4b79      	ldr	r3, [pc, #484]	; (80023e0 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x25c>)
 80021fa:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
 80021fe:	4b79      	ldr	r3, [pc, #484]	; (80023e4 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x260>)
 8002200:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
 8002204:	4b78      	ldr	r3, [pc, #480]	; (80023e8 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x264>)
 8002206:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 800220a:	4b78      	ldr	r3, [pc, #480]	; (80023ec <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x268>)
 800220c:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
 8002210:	2300      	movs	r3, #0
 8002212:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
 8002216:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 800221a:	4b75      	ldr	r3, [pc, #468]	; (80023f0 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x26c>)
 800221c:	f8c4 31e0 	str.w	r3, [r4, #480]	; 0x1e0
 8002220:	2301      	movs	r3, #1
 8002222:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8002226:	4b73      	ldr	r3, [pc, #460]	; (80023f4 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x270>)
 8002228:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
 800222c:	4b72      	ldr	r3, [pc, #456]	; (80023f8 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x274>)
 800222e:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8002232:	4b72      	ldr	r3, [pc, #456]	; (80023fc <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x278>)
 8002234:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8002238:	e9c4 6760 	strd	r6, r7, [r4, #384]	; 0x180
 800223c:	e9c4 6764 	strd	r6, r7, [r4, #400]	; 0x190
 8002240:	e9c4 6768 	strd	r6, r7, [r4, #416]	; 0x1a0
 8002244:	e9c4 676c 	strd	r6, r7, [r4, #432]	; 0x1b0
 8002248:	f8c4 517c 	str.w	r5, [r4, #380]	; 0x17c
 800224c:	f8c4 5188 	str.w	r5, [r4, #392]	; 0x188
 8002250:	f8c4 518c 	str.w	r5, [r4, #396]	; 0x18c
 8002254:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
 8002258:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 800225c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8002260:	f8c4 51ac 	str.w	r5, [r4, #428]	; 0x1ac
 8002264:	f8c4 51b8 	str.w	r5, [r4, #440]	; 0x1b8
 8002268:	f8c4 51bc 	str.w	r5, [r4, #444]	; 0x1bc
 800226c:	f8c4 51c0 	str.w	r5, [r4, #448]	; 0x1c0
 8002270:	f8c4 51c8 	str.w	r5, [r4, #456]	; 0x1c8
 8002274:	f8c4 51d0 	str.w	r5, [r4, #464]	; 0x1d0
 8002278:	f8c4 51d4 	str.w	r5, [r4, #468]	; 0x1d4
 800227c:	f8c4 51dc 	str.w	r5, [r4, #476]	; 0x1dc
 8002280:	f8c4 51e4 	str.w	r5, [r4, #484]	; 0x1e4
 8002284:	4a5e      	ldr	r2, [pc, #376]	; (8002400 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x27c>)
 8002286:	f8c4 4150 	str.w	r4, [r4, #336]	; 0x150
 800228a:	f8c4 41e8 	str.w	r4, [r4, #488]	; 0x1e8
 800228e:	f8c4 31fc 	str.w	r3, [r4, #508]	; 0x1fc
 8002292:	4b5c      	ldr	r3, [pc, #368]	; (8002404 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x280>)
 8002294:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8002298:	f8c4 2268 	str.w	r2, [r4, #616]	; 0x268
 800229c:	f504 7302 	add.w	r3, r4, #520	; 0x208
 80022a0:	f8c4 21f8 	str.w	r2, [r4, #504]	; 0x1f8
 80022a4:	4a58      	ldr	r2, [pc, #352]	; (8002408 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x284>)
 80022a6:	f8c4 326c 	str.w	r3, [r4, #620]	; 0x26c
 80022aa:	f504 7e26 	add.w	lr, r4, #664	; 0x298
 80022ae:	e9c4 678e 	strd	r6, r7, [r4, #568]	; 0x238
 80022b2:	e9c4 6792 	strd	r6, r7, [r4, #584]	; 0x248
 80022b6:	e9c4 6796 	strd	r6, r7, [r4, #600]	; 0x258
 80022ba:	2302      	movs	r3, #2
 80022bc:	f8c4 227c 	str.w	r2, [r4, #636]	; 0x27c
 80022c0:	4852      	ldr	r0, [pc, #328]	; (800240c <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x288>)
 80022c2:	4953      	ldr	r1, [pc, #332]	; (8002410 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x28c>)
 80022c4:	4a53      	ldr	r2, [pc, #332]	; (8002414 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x290>)
 80022c6:	4e54      	ldr	r6, [pc, #336]	; (8002418 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x294>)
 80022c8:	f8c4 e2a0 	str.w	lr, [r4, #672]	; 0x2a0
 80022cc:	f884 5200 	strb.w	r5, [r4, #512]	; 0x200
 80022d0:	f8c4 5218 	str.w	r5, [r4, #536]	; 0x218
 80022d4:	f8c4 521c 	str.w	r5, [r4, #540]	; 0x21c
 80022d8:	f8c4 5220 	str.w	r5, [r4, #544]	; 0x220
 80022dc:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
 80022e0:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 80022e4:	f8c4 522c 	str.w	r5, [r4, #556]	; 0x22c
 80022e8:	f8c4 5230 	str.w	r5, [r4, #560]	; 0x230
 80022ec:	f8c4 5234 	str.w	r5, [r4, #564]	; 0x234
 80022f0:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80022f4:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 80022f8:	f8c4 5250 	str.w	r5, [r4, #592]	; 0x250
 80022fc:	f8c4 5254 	str.w	r5, [r4, #596]	; 0x254
 8002300:	f8c4 5260 	str.w	r5, [r4, #608]	; 0x260
 8002304:	f8c4 3278 	str.w	r3, [r4, #632]	; 0x278
 8002308:	f8c4 5280 	str.w	r5, [r4, #640]	; 0x280
 800230c:	f8c4 0288 	str.w	r0, [r4, #648]	; 0x288
 8002310:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
 8002314:	f8c4 2298 	str.w	r2, [r4, #664]	; 0x298
 8002318:	f8c4 629c 	str.w	r6, [r4, #668]	; 0x29c
 800231c:	f8c4 b210 	str.w	r11, [r4, #528]	; 0x210
 8002320:	f8c4 a214 	str.w	r10, [r4, #532]	; 0x214
 8002324:	f8c4 4284 	str.w	r4, [r4, #644]	; 0x284
 8002328:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
 800232c:	f8c4 6290 	str.w	r6, [r4, #656]	; 0x290
 8002330:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
 8002334:	f8c4 22cc 	str.w	r2, [r4, #716]	; 0x2cc
 8002338:	f504 7133 	add.w	r1, r4, #716	; 0x2cc
 800233c:	4a37      	ldr	r2, [pc, #220]	; (800241c <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x298>)
 800233e:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8002342:	4e37      	ldr	r6, [pc, #220]	; (8002420 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x29c>)
 8002344:	4b37      	ldr	r3, [pc, #220]	; (8002424 <AKROS_bridge::AKROS_bridge(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x2a0>)
 8002346:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 800234a:	f8c4 52b4 	str.w	r5, [r4, #692]	; 0x2b4
 800234e:	f8c4 02bc 	str.w	r0, [r4, #700]	; 0x2bc
 8002352:	f8c4 22d0 	str.w	r2, [r4, #720]	; 0x2d0
 8002356:	f8c4 12d4 	str.w	r1, [r4, #724]	; 0x2d4
 800235a:	f8c4 22c4 	str.w	r2, [r4, #708]	; 0x2c4
 800235e:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 8002362:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
 8002366:	f8c4 42b8 	str.w	r4, [r4, #696]	; 0x2b8
 800236a:	f8c4 42ec 	str.w	r4, [r4, #748]	; 0x2ec
 800236e:	200a      	movs	r0, #10
 8002370:	f004 fda8 	bl	8006ec4 <wait_ms>
 8002374:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002376:	6f22      	ldr	r2, [r4, #112]	; 0x70
 8002378:	f8c4 8148 	str.w	r8, [r4, #328]	; 0x148
 800237c:	041b      	lsls	r3, r3, #16
 800237e:	6013      	str	r3, [r2, #0]
 8002380:	f504 71a6 	add.w	r1, r4, #332	; 0x14c
 8002384:	4640      	mov	r0, r8
 8002386:	f7ff fec5 	bl	8002114 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 800238a:	f504 71b0 	add.w	r1, r4, #352	; 0x160
 800238e:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
 8002392:	f7ff fed4 	bl	800213e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8002396:	f8d4 5148 	ldr.w	r5, [r4, #328]	; 0x148
 800239a:	f504 711a 	add.w	r1, r4, #616	; 0x268
 800239e:	f504 79f8 	add.w	r9, r4, #496	; 0x1f0
 80023a2:	4628      	mov	r0, r5
 80023a4:	f7ff feb6 	bl	8002114 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 80023a8:	f504 7722 	add.w	r7, r4, #648	; 0x288
 80023ac:	4649      	mov	r1, r9
 80023ae:	4628      	mov	r0, r5
 80023b0:	f7ff fec5 	bl	800213e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80023b4:	f504 762f 	add.w	r6, r4, #700	; 0x2bc
 80023b8:	4639      	mov	r1, r7
 80023ba:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
 80023be:	f7ff fed2 	bl	8002166 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>&)>
 80023c2:	4631      	mov	r1, r6
 80023c4:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
 80023c8:	f7ff fecd 	bl	8002166 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>&)>
 80023cc:	200a      	movs	r0, #10
 80023ce:	f004 fd79 	bl	8006ec4 <wait_ms>
 80023d2:	4620      	mov	r0, r4
 80023d4:	b003      	add	sp, #12
 80023d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80023da:	bf00      	nop
 80023dc:	08008b44 	.word	0x08008b44
 80023e0:	08008c04 	.word	0x08008c04
 80023e4:	08008b8c 	.word	0x08008b8c
 80023e8:	08008afc 	.word	0x08008afc
 80023ec:	08008ae4 	.word	0x08008ae4
 80023f0:	08001381 	.word	0x08001381
 80023f4:	08008c18 	.word	0x08008c18
 80023f8:	08008ba4 	.word	0x08008ba4
 80023fc:	08008b5c 	.word	0x08008b5c
 8002400:	08008c27 	.word	0x08008c27
 8002404:	08008b74 	.word	0x08008b74
 8002408:	08002509 	.word	0x08002509
 800240c:	08008bbc 	.word	0x08008bbc
 8002410:	08008ab4 	.word	0x08008ab4
 8002414:	08008acc 	.word	0x08008acc
 8002418:	08008c3f 	.word	0x08008c3f
 800241c:	08008c56 	.word	0x08008c56
 8002420:	08001a03 	.word	0x08001a03
 8002424:	080019d9 	.word	0x080019d9
 8002428:	08008b2c 	.word	0x08008b2c
 800242c:	08008b14 	.word	0x08008b14
 8002430:	08008a76 	.word	0x08008a76

08002434 <motor_status_* std::__uninitialized_default_n_1<true>::__uninit_default_n<motor_status_*, unsigned int>(motor_status_*, unsigned int)>:
 8002434:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002438:	b089      	sub	sp, #36	; 0x24
 800243a:	4680      	mov	r8, r0
 800243c:	4689      	mov	r9, r1
 800243e:	2220      	movs	r2, #32
 8002440:	2100      	movs	r1, #0
 8002442:	4668      	mov	r0, sp
 8002444:	f005 fd19 	bl	8007e7a <memset>
 8002448:	4647      	mov	r7, r8
 800244a:	464e      	mov	r6, r9
 800244c:	3720      	adds	r7, #32
 800244e:	b156      	cbz	r6, 8002466 <motor_status_* std::__uninitialized_default_n_1<true>::__uninit_default_n<motor_status_*, unsigned int>(motor_status_*, unsigned int)+0x32>
 8002450:	466d      	mov	r5, sp
 8002452:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002454:	f1a7 0420 	sub.w	r4, r7, #32
 8002458:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800245a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800245e:	3e01      	subs	r6, #1
 8002460:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002464:	e7f2      	b.n	800244c <motor_status_* std::__uninitialized_default_n_1<true>::__uninit_default_n<motor_status_*, unsigned int>(motor_status_*, unsigned int)+0x18>
 8002466:	eb08 1049 	add.w	r0, r8, r9, lsl #5
 800246a:	b009      	add	sp, #36	; 0x24
 800246c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002470 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)>:
 8002470:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002474:	4606      	mov	r6, r0
 8002476:	4688      	mov	r8, r1
 8002478:	2900      	cmp	r1, #0
 800247a:	d040      	beq.n	80024fe <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x8e>
 800247c:	6840      	ldr	r0, [r0, #4]
 800247e:	68b3      	ldr	r3, [r6, #8]
 8002480:	1a1b      	subs	r3, r3, r0
 8002482:	ebb1 1f63 	cmp.w	r1, r3, asr #5
 8002486:	d804      	bhi.n	8002492 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x22>
 8002488:	f7ff ffd4 	bl	8002434 <motor_status_* std::__uninitialized_default_n_1<true>::__uninit_default_n<motor_status_*, unsigned int>(motor_status_*, unsigned int)>
 800248c:	6070      	str	r0, [r6, #4]
 800248e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002492:	6833      	ldr	r3, [r6, #0]
 8002494:	1ac0      	subs	r0, r0, r3
 8002496:	1140      	asrs	r0, r0, #5
 8002498:	f06f 4378 	mvn.w	r3, #4160749568	; 0xf8000000
 800249c:	1a1a      	subs	r2, r3, r0
 800249e:	4291      	cmp	r1, r2
 80024a0:	d902      	bls.n	80024a8 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x38>
 80024a2:	4818      	ldr	r0, [pc, #96]	; (8002504 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x94>)
 80024a4:	f004 ff53 	bl	800734e <std::__throw_length_error(char const*)>
 80024a8:	4281      	cmp	r1, r0
 80024aa:	bf2c      	ite	cs
 80024ac:	1844      	addcs	r4, r0, r1
 80024ae:	1804      	addcc	r4, r0, r0
 80024b0:	42a0      	cmp	r0, r4
 80024b2:	d802      	bhi.n	80024ba <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x4a>
 80024b4:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 80024b8:	d31d      	bcc.n	80024f6 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x86>
 80024ba:	461c      	mov	r4, r3
 80024bc:	0160      	lsls	r0, r4, #5
 80024be:	f004 fe11 	bl	80070e4 <operator new(unsigned int)>
 80024c2:	4605      	mov	r5, r0
 80024c4:	e896 0082 	ldmia.w	r6, {r1, r7}
 80024c8:	1a7f      	subs	r7, r7, r1
 80024ca:	097b      	lsrs	r3, r7, #5
 80024cc:	d003      	beq.n	80024d6 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x66>
 80024ce:	463a      	mov	r2, r7
 80024d0:	4628      	mov	r0, r5
 80024d2:	f005 fcb8 	bl	8007e46 <memmove>
 80024d6:	19e8      	adds	r0, r5, r7
 80024d8:	4641      	mov	r1, r8
 80024da:	f7ff ffab 	bl	8002434 <motor_status_* std::__uninitialized_default_n_1<true>::__uninit_default_n<motor_status_*, unsigned int>(motor_status_*, unsigned int)>
 80024de:	4607      	mov	r7, r0
 80024e0:	6830      	ldr	r0, [r6, #0]
 80024e2:	b108      	cbz	r0, 80024e8 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x78>
 80024e4:	f004 fe1a 	bl	800711c <operator delete(void*)>
 80024e8:	eb05 1444 	add.w	r4, r5, r4, lsl #5
 80024ec:	e886 00a0 	stmia.w	r6, {r5, r7}
 80024f0:	60b4      	str	r4, [r6, #8]
 80024f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80024f6:	2c00      	cmp	r4, #0
 80024f8:	d1e0      	bne.n	80024bc <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x4c>
 80024fa:	4625      	mov	r5, r4
 80024fc:	e7e2      	b.n	80024c4 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)+0x54>
 80024fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002502:	bf00      	nop
 8002504:	08008dea 	.word	0x08008dea

08002508 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)>:
 8002508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800250c:	790b      	ldrb	r3, [r1, #4]
 800250e:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8002512:	62d3      	str	r3, [r2, #44]	; 0x2c
 8002514:	f890 3060 	ldrb.w	r3, [r0, #96]	; 0x60
 8002518:	63d3      	str	r3, [r2, #60]	; 0x3c
 800251a:	f890 3060 	ldrb.w	r3, [r0, #96]	; 0x60
 800251e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002520:	4604      	mov	r4, r0
 8002522:	f890 0060 	ldrb.w	r0, [r0, #96]	; 0x60
 8002526:	00c0      	lsls	r0, r0, #3
 8002528:	4615      	mov	r5, r2
 800252a:	f005 fc1b 	bl	8007d64 <malloc>
 800252e:	63a8      	str	r0, [r5, #56]	; 0x38
 8002530:	f894 0060 	ldrb.w	r0, [r4, #96]	; 0x60
 8002534:	00c0      	lsls	r0, r0, #3
 8002536:	f005 fc15 	bl	8007d64 <malloc>
 800253a:	64a8      	str	r0, [r5, #72]	; 0x48
 800253c:	f894 0060 	ldrb.w	r0, [r4, #96]	; 0x60
 8002540:	00c0      	lsls	r0, r0, #3
 8002542:	f005 fc0f 	bl	8007d64 <malloc>
 8002546:	65a8      	str	r0, [r5, #88]	; 0x58
 8002548:	f894 6060 	ldrb.w	r6, [r4, #96]	; 0x60
 800254c:	62e6      	str	r6, [r4, #44]	; 0x2c
 800254e:	fa0f f886 	sxth.w	r8, r6
 8002552:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8002556:	63e6      	str	r6, [r4, #60]	; 0x3c
 8002558:	64e6      	str	r6, [r4, #76]	; 0x4c
 800255a:	4638      	mov	r0, r7
 800255c:	f005 fc02 	bl	8007d64 <malloc>
 8002560:	63a0      	str	r0, [r4, #56]	; 0x38
 8002562:	4638      	mov	r0, r7
 8002564:	f005 fbfe 	bl	8007d64 <malloc>
 8002568:	64a0      	str	r0, [r4, #72]	; 0x48
 800256a:	4638      	mov	r0, r7
 800256c:	f005 fbfa 	bl	8007d64 <malloc>
 8002570:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 8002574:	f8d4 313c 	ldr.w	r3, [r4, #316]	; 0x13c
 8002578:	65a0      	str	r0, [r4, #88]	; 0x58
 800257a:	1a9b      	subs	r3, r3, r2
 800257c:	115b      	asrs	r3, r3, #5
 800257e:	429e      	cmp	r6, r3
 8002580:	d91f      	bls.n	80025c2 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0xba>
 8002582:	1af1      	subs	r1, r6, r3
 8002584:	f504 709c 	add.w	r0, r4, #312	; 0x138
 8002588:	f7ff ff72 	bl	8002470 <std::vector<motor_status_, std::allocator<motor_status_> >::_M_default_append(unsigned int)>
 800258c:	2300      	movs	r3, #0
 800258e:	2000      	movs	r0, #0
 8002590:	2100      	movs	r1, #0
 8002592:	f894 2060 	ldrb.w	r2, [r4, #96]	; 0x60
 8002596:	1c5e      	adds	r6, r3, #1
 8002598:	b2db      	uxtb	r3, r3
 800259a:	4293      	cmp	r3, r2
 800259c:	db17      	blt.n	80025ce <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0xc6>
 800259e:	2600      	movs	r6, #0
 80025a0:	f104 0780 	add.w	r7, r4, #128	; 0x80
 80025a4:	f894 2060 	ldrb.w	r2, [r4, #96]	; 0x60
 80025a8:	b2f3      	uxtb	r3, r6
 80025aa:	4293      	cmp	r3, r2
 80025ac:	f106 0601 	add.w	r6, r6, #1
 80025b0:	da1c      	bge.n	80025ec <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0xe4>
 80025b2:	4638      	mov	r0, r7
 80025b4:	b2f1      	uxtb	r1, r6
 80025b6:	f000 f89b 	bl	80026f0 <CAN_controller::enter_control_mode(unsigned char)>
 80025ba:	2032      	movs	r0, #50	; 0x32
 80025bc:	f004 fc82 	bl	8006ec4 <wait_ms>
 80025c0:	e7f0      	b.n	80025a4 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0x9c>
 80025c2:	bf3c      	itt	cc
 80025c4:	eb02 1248 	addcc.w	r2, r2, r8, lsl #5
 80025c8:	f8c4 213c 	strcc.w	r2, [r4, #316]	; 0x13c
 80025cc:	e7de      	b.n	800258c <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0x84>
 80025ce:	6baa      	ldr	r2, [r5, #56]	; 0x38
 80025d0:	00db      	lsls	r3, r3, #3
 80025d2:	441a      	add	r2, r3
 80025d4:	e9c2 0100 	strd	r0, r1, [r2]
 80025d8:	6caa      	ldr	r2, [r5, #72]	; 0x48
 80025da:	441a      	add	r2, r3
 80025dc:	e9c2 0100 	strd	r0, r1, [r2]
 80025e0:	6daa      	ldr	r2, [r5, #88]	; 0x58
 80025e2:	4413      	add	r3, r2
 80025e4:	e9c3 0100 	strd	r0, r1, [r3]
 80025e8:	4633      	mov	r3, r6
 80025ea:	e7d2      	b.n	8002592 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0x8a>
 80025ec:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80025f0:	f004 fc68 	bl	8006ec4 <wait_ms>
 80025f4:	2300      	movs	r3, #0
 80025f6:	f894 2060 	ldrb.w	r2, [r4, #96]	; 0x60
 80025fa:	f103 0801 	add.w	r8, r3, #1
 80025fe:	b2db      	uxtb	r3, r3
 8002600:	4293      	cmp	r3, r2
 8002602:	da1d      	bge.n	8002640 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0x138>
 8002604:	f8d4 6138 	ldr.w	r6, [r4, #312]	; 0x138
 8002608:	eb06 1643 	add.w	r6, r6, r3, lsl #5
 800260c:	00df      	lsls	r7, r3, #3
 800260e:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002610:	6830      	ldr	r0, [r6, #0]
 8002612:	eb03 0907 	add.w	r9, r3, r7
 8002616:	f005 f949 	bl	80078ac <__aeabi_f2d>
 800261a:	6cab      	ldr	r3, [r5, #72]	; 0x48
 800261c:	e9c9 0100 	strd	r0, r1, [r9]
 8002620:	68b0      	ldr	r0, [r6, #8]
 8002622:	eb03 0907 	add.w	r9, r3, r7
 8002626:	f005 f941 	bl	80078ac <__aeabi_f2d>
 800262a:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800262c:	e9c9 0100 	strd	r0, r1, [r9]
 8002630:	6930      	ldr	r0, [r6, #16]
 8002632:	441f      	add	r7, r3
 8002634:	f005 f93a 	bl	80078ac <__aeabi_f2d>
 8002638:	4643      	mov	r3, r8
 800263a:	e9c7 0100 	strd	r0, r1, [r7]
 800263e:	e7da      	b.n	80025f6 <AKROS_bridge::enter_control_mode_Cb(AKROS_bridge_msgs::InitializeRequest const&, AKROS_bridge_msgs::InitializeResponse&)+0xee>
 8002640:	2301      	movs	r3, #1
 8002642:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8002646:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8002648:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800264a:	601a      	str	r2, [r3, #0]
 800264c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08002650 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> >(void*, void const*)>:
 8002650:	4603      	mov	r3, r0
 8002652:	b110      	cbz	r0, 800265a <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> >(void*, void const*)+0xa>
 8002654:	c907      	ldmia	r1, {r0, r1, r2}
 8002656:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800265a:	4770      	bx	lr

0800265c <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> >(void*)>:
 800265c:	4770      	bx	lr

0800265e <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> >(void const*)>:
 800265e:	6842      	ldr	r2, [r0, #4]
 8002660:	6881      	ldr	r1, [r0, #8]
 8002662:	6803      	ldr	r3, [r0, #0]
 8002664:	f012 0f01 	tst.w	r2, #1
 8002668:	ea4f 0262 	mov.w	r2, r2, asr #1
 800266c:	bf1c      	itt	ne
 800266e:	5888      	ldrne	r0, [r1, r2]
 8002670:	58c3      	ldrne	r3, [r0, r3]
 8002672:	1888      	adds	r0, r1, r2
 8002674:	4718      	bx	r3

08002676 <mbed::CANMessage::CANMessage()>:
 8002676:	b510      	push	{r4, lr}
 8002678:	2210      	movs	r2, #16
 800267a:	4604      	mov	r4, r0
 800267c:	2100      	movs	r1, #0
 800267e:	f005 fbfc 	bl	8007e7a <memset>
 8002682:	2308      	movs	r3, #8
 8002684:	7323      	strb	r3, [r4, #12]
 8002686:	2300      	movs	r3, #0
 8002688:	6063      	str	r3, [r4, #4]
 800268a:	60a3      	str	r3, [r4, #8]
 800268c:	4620      	mov	r0, r4
 800268e:	bd10      	pop	{r4, pc}

08002690 <CAN_controller::CAN_controller()>:
 8002690:	b530      	push	{r4, r5, lr}
 8002692:	4604      	mov	r4, r0
 8002694:	b085      	sub	sp, #20
 8002696:	2500      	movs	r5, #0
 8002698:	2219      	movs	r2, #25
 800269a:	2118      	movs	r1, #24
 800269c:	f004 fb4e 	bl	8006d3c <mbed::CAN::CAN(PinName, PinName)>
 80026a0:	4910      	ldr	r1, [pc, #64]	; (80026e4 <CAN_controller::CAN_controller()+0x54>)
 80026a2:	f884 50b4 	strb.w	r5, [r4, #180]	; 0xb4
 80026a6:	f8c4 50b8 	str.w	r5, [r4, #184]	; 0xb8
 80026aa:	f8c4 50bc 	str.w	r5, [r4, #188]	; 0xbc
 80026ae:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 80026b2:	4620      	mov	r0, r4
 80026b4:	f004 fad1 	bl	8006c5a <mbed::CAN::frequency(int)>
 80026b8:	4b0b      	ldr	r3, [pc, #44]	; (80026e8 <CAN_controller::CAN_controller()+0x58>)
 80026ba:	9402      	str	r4, [sp, #8]
 80026bc:	e88d 0028 	stmia.w	sp, {r3, r5}
 80026c0:	462a      	mov	r2, r5
 80026c2:	4b0a      	ldr	r3, [pc, #40]	; (80026ec <CAN_controller::CAN_controller()+0x5c>)
 80026c4:	9303      	str	r3, [sp, #12]
 80026c6:	4669      	mov	r1, sp
 80026c8:	4620      	mov	r0, r4
 80026ca:	f004 fb77 	bl	8006dbc <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>
 80026ce:	9b03      	ldr	r3, [sp, #12]
 80026d0:	b113      	cbz	r3, 80026d8 <CAN_controller::CAN_controller()+0x48>
 80026d2:	689b      	ldr	r3, [r3, #8]
 80026d4:	4668      	mov	r0, sp
 80026d6:	4798      	blx	r3
 80026d8:	4620      	mov	r0, r4
 80026da:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 80026de:	b005      	add	sp, #20
 80026e0:	bd30      	pop	{r4, r5, pc}
 80026e2:	bf00      	nop
 80026e4:	000f4240 	.word	0x000f4240
 80026e8:	080029a9 	.word	0x080029a9
 80026ec:	08008e04 	.word	0x08008e04

080026f0 <CAN_controller::enter_control_mode(unsigned char)>:
 80026f0:	b570      	push	{r4, r5, r6, lr}
 80026f2:	b086      	sub	sp, #24
 80026f4:	ac02      	add	r4, sp, #8
 80026f6:	4605      	mov	r5, r0
 80026f8:	4620      	mov	r0, r4
 80026fa:	460e      	mov	r6, r1
 80026fc:	f7ff ffbb 	bl	8002676 <mbed::CANMessage::CANMessage()>
 8002700:	2308      	movs	r3, #8
 8002702:	f88d 3014 	strb.w	r3, [sp, #20]
 8002706:	23ff      	movs	r3, #255	; 0xff
 8002708:	f88d 300c 	strb.w	r3, [sp, #12]
 800270c:	f88d 300d 	strb.w	r3, [sp, #13]
 8002710:	f88d 300e 	strb.w	r3, [sp, #14]
 8002714:	f88d 300f 	strb.w	r3, [sp, #15]
 8002718:	f88d 3010 	strb.w	r3, [sp, #16]
 800271c:	f88d 3011 	strb.w	r3, [sp, #17]
 8002720:	f88d 3012 	strb.w	r3, [sp, #18]
 8002724:	23fc      	movs	r3, #252	; 0xfc
 8002726:	f88d 3013 	strb.w	r3, [sp, #19]
 800272a:	9b05      	ldr	r3, [sp, #20]
 800272c:	9602      	str	r6, [sp, #8]
 800272e:	9300      	str	r3, [sp, #0]
 8002730:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002734:	4628      	mov	r0, r5
 8002736:	f004 faa3 	bl	8006c80 <mbed::CAN::write(mbed::CANMessage)>
 800273a:	b006      	add	sp, #24
 800273c:	bd70      	pop	{r4, r5, r6, pc}

0800273e <CAN_controller::exit_control_mode(unsigned char)>:
 800273e:	b570      	push	{r4, r5, r6, lr}
 8002740:	b086      	sub	sp, #24
 8002742:	ac02      	add	r4, sp, #8
 8002744:	4605      	mov	r5, r0
 8002746:	4620      	mov	r0, r4
 8002748:	460e      	mov	r6, r1
 800274a:	f7ff ff94 	bl	8002676 <mbed::CANMessage::CANMessage()>
 800274e:	2308      	movs	r3, #8
 8002750:	f88d 3014 	strb.w	r3, [sp, #20]
 8002754:	23ff      	movs	r3, #255	; 0xff
 8002756:	f88d 300c 	strb.w	r3, [sp, #12]
 800275a:	f88d 300d 	strb.w	r3, [sp, #13]
 800275e:	f88d 300e 	strb.w	r3, [sp, #14]
 8002762:	f88d 300f 	strb.w	r3, [sp, #15]
 8002766:	f88d 3010 	strb.w	r3, [sp, #16]
 800276a:	f88d 3011 	strb.w	r3, [sp, #17]
 800276e:	f88d 3012 	strb.w	r3, [sp, #18]
 8002772:	23fd      	movs	r3, #253	; 0xfd
 8002774:	f88d 3013 	strb.w	r3, [sp, #19]
 8002778:	9b05      	ldr	r3, [sp, #20]
 800277a:	9602      	str	r6, [sp, #8]
 800277c:	9300      	str	r3, [sp, #0]
 800277e:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8002782:	4628      	mov	r0, r5
 8002784:	f004 fa7c 	bl	8006c80 <mbed::CAN::write(mbed::CANMessage)>
 8002788:	b006      	add	sp, #24
 800278a:	bd70      	pop	{r4, r5, r6, pc}

0800278c <CAN_controller::set_position_to_zero(unsigned char)>:
 800278c:	b570      	push	{r4, r5, r6, lr}
 800278e:	b086      	sub	sp, #24
 8002790:	ac02      	add	r4, sp, #8
 8002792:	4605      	mov	r5, r0
 8002794:	4620      	mov	r0, r4
 8002796:	460e      	mov	r6, r1
 8002798:	f7ff ff6d 	bl	8002676 <mbed::CANMessage::CANMessage()>
 800279c:	2308      	movs	r3, #8
 800279e:	f88d 3014 	strb.w	r3, [sp, #20]
 80027a2:	23ff      	movs	r3, #255	; 0xff
 80027a4:	f88d 300c 	strb.w	r3, [sp, #12]
 80027a8:	f88d 300d 	strb.w	r3, [sp, #13]
 80027ac:	f88d 300e 	strb.w	r3, [sp, #14]
 80027b0:	f88d 300f 	strb.w	r3, [sp, #15]
 80027b4:	f88d 3010 	strb.w	r3, [sp, #16]
 80027b8:	f88d 3011 	strb.w	r3, [sp, #17]
 80027bc:	f88d 3012 	strb.w	r3, [sp, #18]
 80027c0:	23fe      	movs	r3, #254	; 0xfe
 80027c2:	f88d 3013 	strb.w	r3, [sp, #19]
 80027c6:	9b05      	ldr	r3, [sp, #20]
 80027c8:	9602      	str	r6, [sp, #8]
 80027ca:	9300      	str	r3, [sp, #0]
 80027cc:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80027d0:	4628      	mov	r0, r5
 80027d2:	f004 fa55 	bl	8006c80 <mbed::CAN::write(mbed::CANMessage)>
 80027d6:	b006      	add	sp, #24
 80027d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080027dc <CAN_controller::pack_cmd(mbed::CANMessage&)>:
 80027dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80027e0:	680a      	ldr	r2, [r1, #0]
 80027e2:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 80027e6:	4e3c      	ldr	r6, [pc, #240]	; (80028d8 <CAN_controller::pack_cmd(mbed::CANMessage&)+0xfc>)
 80027e8:	4f3c      	ldr	r7, [pc, #240]	; (80028dc <CAN_controller::pack_cmd(mbed::CANMessage&)+0x100>)
 80027ea:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 80027ee:	460c      	mov	r4, r1
 80027f0:	4605      	mov	r5, r0
 80027f2:	f853 1c1c 	ldr.w	r1, [r3, #-28]
 80027f6:	4630      	mov	r0, r6
 80027f8:	f005 ffd4 	bl	80087a4 <fmaxf>
 80027fc:	4639      	mov	r1, r7
 80027fe:	f005 ffef 	bl	80087e0 <fminf>
 8002802:	463a      	mov	r2, r7
 8002804:	4631      	mov	r1, r6
 8002806:	2310      	movs	r3, #16
 8002808:	f000 f8e1 	bl	80029ce <float_to_uint(float, float, float, int)>
 800280c:	6822      	ldr	r2, [r4, #0]
 800280e:	f8d5 30b8 	ldr.w	r3, [r5, #184]	; 0xb8
 8002812:	4f33      	ldr	r7, [pc, #204]	; (80028e0 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x104>)
 8002814:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8002818:	4681      	mov	r9, r0
 800281a:	f853 1c14 	ldr.w	r1, [r3, #-20]
 800281e:	4831      	ldr	r0, [pc, #196]	; (80028e4 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x108>)
 8002820:	f005 ffc0 	bl	80087a4 <fmaxf>
 8002824:	4930      	ldr	r1, [pc, #192]	; (80028e8 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x10c>)
 8002826:	f005 ffdb 	bl	80087e0 <fminf>
 800282a:	230c      	movs	r3, #12
 800282c:	4a2e      	ldr	r2, [pc, #184]	; (80028e8 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x10c>)
 800282e:	492d      	ldr	r1, [pc, #180]	; (80028e4 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x108>)
 8002830:	f000 f8cd 	bl	80029ce <float_to_uint(float, float, float, int)>
 8002834:	6822      	ldr	r2, [r4, #0]
 8002836:	f8d5 30b8 	ldr.w	r3, [r5, #184]	; 0xb8
 800283a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800283e:	2600      	movs	r6, #0
 8002840:	f853 1c08 	ldr.w	r1, [r3, #-8]
 8002844:	4680      	mov	r8, r0
 8002846:	4630      	mov	r0, r6
 8002848:	f005 ffac 	bl	80087a4 <fmaxf>
 800284c:	4639      	mov	r1, r7
 800284e:	f005 ffc7 	bl	80087e0 <fminf>
 8002852:	463a      	mov	r2, r7
 8002854:	4631      	mov	r1, r6
 8002856:	230c      	movs	r3, #12
 8002858:	f000 f8b9 	bl	80029ce <float_to_uint(float, float, float, int)>
 800285c:	6822      	ldr	r2, [r4, #0]
 800285e:	f8d5 30b8 	ldr.w	r3, [r5, #184]	; 0xb8
 8002862:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8002866:	4607      	mov	r7, r0
 8002868:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800286c:	4630      	mov	r0, r6
 800286e:	f005 ff99 	bl	80087a4 <fmaxf>
 8002872:	491e      	ldr	r1, [pc, #120]	; (80028ec <CAN_controller::pack_cmd(mbed::CANMessage&)+0x110>)
 8002874:	f005 ffb4 	bl	80087e0 <fminf>
 8002878:	4631      	mov	r1, r6
 800287a:	230c      	movs	r3, #12
 800287c:	4a1b      	ldr	r2, [pc, #108]	; (80028ec <CAN_controller::pack_cmd(mbed::CANMessage&)+0x110>)
 800287e:	f000 f8a6 	bl	80029ce <float_to_uint(float, float, float, int)>
 8002882:	6822      	ldr	r2, [r4, #0]
 8002884:	f8d5 30b8 	ldr.w	r3, [r5, #184]	; 0xb8
 8002888:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800288c:	4606      	mov	r6, r0
 800288e:	f853 1c0c 	ldr.w	r1, [r3, #-12]
 8002892:	4817      	ldr	r0, [pc, #92]	; (80028f0 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x114>)
 8002894:	f005 ff86 	bl	80087a4 <fmaxf>
 8002898:	4916      	ldr	r1, [pc, #88]	; (80028f4 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x118>)
 800289a:	f005 ffa1 	bl	80087e0 <fminf>
 800289e:	230c      	movs	r3, #12
 80028a0:	4a14      	ldr	r2, [pc, #80]	; (80028f4 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x118>)
 80028a2:	4913      	ldr	r1, [pc, #76]	; (80028f0 <CAN_controller::pack_cmd(mbed::CANMessage&)+0x114>)
 80028a4:	f000 f893 	bl	80029ce <float_to_uint(float, float, float, int)>
 80028a8:	ea4f 2329 	mov.w	r3, r9, asr #8
 80028ac:	7123      	strb	r3, [r4, #4]
 80028ae:	ea4f 1328 	mov.w	r3, r8, asr #4
 80028b2:	71a3      	strb	r3, [r4, #6]
 80028b4:	123b      	asrs	r3, r7, #8
 80028b6:	ea43 1308 	orr.w	r3, r3, r8, lsl #4
 80028ba:	71e3      	strb	r3, [r4, #7]
 80028bc:	1133      	asrs	r3, r6, #4
 80028be:	7263      	strb	r3, [r4, #9]
 80028c0:	1203      	asrs	r3, r0, #8
 80028c2:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 80028c6:	72e0      	strb	r0, [r4, #11]
 80028c8:	f884 9005 	strb.w	r9, [r4, #5]
 80028cc:	7227      	strb	r7, [r4, #8]
 80028ce:	72a3      	strb	r3, [r4, #10]
 80028d0:	2001      	movs	r0, #1
 80028d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80028d6:	bf00      	nop
 80028d8:	c2bf0000 	.word	0xc2bf0000
 80028dc:	42bf0000 	.word	0x42bf0000
 80028e0:	43fa0000 	.word	0x43fa0000
 80028e4:	c1f00000 	.word	0xc1f00000
 80028e8:	41f00000 	.word	0x41f00000
 80028ec:	40a00000 	.word	0x40a00000
 80028f0:	c1900000 	.word	0xc1900000
 80028f4:	41900000 	.word	0x41900000

080028f8 <CAN_controller::can_send(unsigned char)>:
 80028f8:	b570      	push	{r4, r5, r6, lr}
 80028fa:	b086      	sub	sp, #24
 80028fc:	ac02      	add	r4, sp, #8
 80028fe:	4606      	mov	r6, r0
 8002900:	460d      	mov	r5, r1
 8002902:	4620      	mov	r0, r4
 8002904:	f7ff feb7 	bl	8002676 <mbed::CANMessage::CANMessage()>
 8002908:	3501      	adds	r5, #1
 800290a:	4621      	mov	r1, r4
 800290c:	4630      	mov	r0, r6
 800290e:	9502      	str	r5, [sp, #8]
 8002910:	f7ff ff64 	bl	80027dc <CAN_controller::pack_cmd(mbed::CANMessage&)>
 8002914:	9b05      	ldr	r3, [sp, #20]
 8002916:	9300      	str	r3, [sp, #0]
 8002918:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800291c:	4630      	mov	r0, r6
 800291e:	f004 f9af 	bl	8006c80 <mbed::CAN::write(mbed::CANMessage)>
 8002922:	b006      	add	sp, #24
 8002924:	bd70      	pop	{r4, r5, r6, pc}
	...

08002928 <CAN_controller::unpack_reply(mbed::CANMessage const&)>:
 8002928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800292a:	4606      	mov	r6, r0
 800292c:	f891 e005 	ldrb.w	lr, [r1, #5]
 8002930:	790d      	ldrb	r5, [r1, #4]
 8002932:	f8d0 70b8 	ldr.w	r7, [r0, #184]	; 0xb8
 8002936:	7988      	ldrb	r0, [r1, #6]
 8002938:	4a15      	ldr	r2, [pc, #84]	; (8002990 <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x68>)
 800293a:	460c      	mov	r4, r1
 800293c:	2310      	movs	r3, #16
 800293e:	4915      	ldr	r1, [pc, #84]	; (8002994 <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x6c>)
 8002940:	ea40 200e 	orr.w	r0, r0, lr, lsl #8
 8002944:	3d01      	subs	r5, #1
 8002946:	f000 f85d 	bl	8002a04 <uint_to_float(int, float, float, int)>
 800294a:	016d      	lsls	r5, r5, #5
 800294c:	442f      	add	r7, r5
 800294e:	230c      	movs	r3, #12
 8002950:	6038      	str	r0, [r7, #0]
 8002952:	7a20      	ldrb	r0, [r4, #8]
 8002954:	f894 e007 	ldrb.w	lr, [r4, #7]
 8002958:	f8d6 70b8 	ldr.w	r7, [r6, #184]	; 0xb8
 800295c:	4a0e      	ldr	r2, [pc, #56]	; (8002998 <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x70>)
 800295e:	490f      	ldr	r1, [pc, #60]	; (800299c <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x74>)
 8002960:	1100      	asrs	r0, r0, #4
 8002962:	ea40 100e 	orr.w	r0, r0, lr, lsl #4
 8002966:	f000 f84d 	bl	8002a04 <uint_to_float(int, float, float, int)>
 800296a:	442f      	add	r7, r5
 800296c:	f8d6 30b8 	ldr.w	r3, [r6, #184]	; 0xb8
 8002970:	60b8      	str	r0, [r7, #8]
 8002972:	7a20      	ldrb	r0, [r4, #8]
 8002974:	7a64      	ldrb	r4, [r4, #9]
 8002976:	4a0a      	ldr	r2, [pc, #40]	; (80029a0 <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x78>)
 8002978:	490a      	ldr	r1, [pc, #40]	; (80029a4 <CAN_controller::unpack_reply(mbed::CANMessage const&)+0x7c>)
 800297a:	0200      	lsls	r0, r0, #8
 800297c:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
 8002980:	441d      	add	r5, r3
 8002982:	4320      	orrs	r0, r4
 8002984:	230c      	movs	r3, #12
 8002986:	f000 f83d 	bl	8002a04 <uint_to_float(int, float, float, int)>
 800298a:	6128      	str	r0, [r5, #16]
 800298c:	2001      	movs	r0, #1
 800298e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002990:	42bf0000 	.word	0x42bf0000
 8002994:	c2bf0000 	.word	0xc2bf0000
 8002998:	41f00000 	.word	0x41f00000
 800299c:	c1f00000 	.word	0xc1f00000
 80029a0:	41900000 	.word	0x41900000
 80029a4:	c1900000 	.word	0xc1900000

080029a8 <CAN_controller::can_Cb()>:
 80029a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80029aa:	4604      	mov	r4, r0
 80029ac:	4668      	mov	r0, sp
 80029ae:	f7ff fe62 	bl	8002676 <mbed::CANMessage::CANMessage()>
 80029b2:	2200      	movs	r2, #0
 80029b4:	4669      	mov	r1, sp
 80029b6:	4620      	mov	r0, r4
 80029b8:	f004 f981 	bl	8006cbe <mbed::CAN::read(mbed::CANMessage&, int)>
 80029bc:	b128      	cbz	r0, 80029ca <CAN_controller::can_Cb()+0x22>
 80029be:	9b00      	ldr	r3, [sp, #0]
 80029c0:	b91b      	cbnz	r3, 80029ca <CAN_controller::can_Cb()+0x22>
 80029c2:	4669      	mov	r1, sp
 80029c4:	4620      	mov	r0, r4
 80029c6:	f7ff ffaf 	bl	8002928 <CAN_controller::unpack_reply(mbed::CANMessage const&)>
 80029ca:	b004      	add	sp, #16
 80029cc:	bd10      	pop	{r4, pc}

080029ce <float_to_uint(float, float, float, int)>:
 80029ce:	ee07 1a10 	vmov	s14, r1
 80029d2:	2101      	movs	r1, #1
 80029d4:	fa01 f303 	lsl.w	r3, r1, r3
 80029d8:	3b01      	subs	r3, #1
 80029da:	ee07 3a90 	vmov	s15, r3
 80029de:	ee06 0a90 	vmov	s13, r0
 80029e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029e6:	ee76 6ac7 	vsub.f32	s13, s13, s14
 80029ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80029ee:	ee06 2a90 	vmov	s13, r2
 80029f2:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80029f6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80029fa:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80029fe:	ee17 0a90 	vmov	r0, s15
 8002a02:	4770      	bx	lr

08002a04 <uint_to_float(int, float, float, int)>:
 8002a04:	ee06 1a90 	vmov	s13, r1
 8002a08:	ee07 2a90 	vmov	s15, r2
 8002a0c:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8002a10:	ee07 0a90 	vmov	s15, r0
 8002a14:	2201      	movs	r2, #1
 8002a16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a1a:	fa02 f303 	lsl.w	r3, r2, r3
 8002a1e:	3b01      	subs	r3, #1
 8002a20:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002a24:	ee07 3a90 	vmov	s15, r3
 8002a28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a2c:	ee87 6a27 	vdiv.f32	s12, s14, s15
 8002a30:	ee76 7a26 	vadd.f32	s15, s12, s13
 8002a34:	ee17 0a90 	vmov	r0, s15
 8002a38:	4770      	bx	lr

08002a3a <_gpio_init_out.part.2>:
 8002a3a:	b538      	push	{r3, r4, r5, lr}
 8002a3c:	4604      	mov	r4, r0
 8002a3e:	460d      	mov	r5, r1
 8002a40:	6803      	ldr	r3, [r0, #0]
 8002a42:	b15a      	cbz	r2, 8002a5c <_gpio_init_out.part.2+0x22>
 8002a44:	6882      	ldr	r2, [r0, #8]
 8002a46:	6013      	str	r3, [r2, #0]
 8002a48:	4620      	mov	r0, r4
 8002a4a:	2101      	movs	r1, #1
 8002a4c:	f001 fd32 	bl	80044b4 <gpio_dir>
 8002a50:	4629      	mov	r1, r5
 8002a52:	4620      	mov	r0, r4
 8002a54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002a58:	f001 bd28 	b.w	80044ac <gpio_mode>
 8002a5c:	68c2      	ldr	r2, [r0, #12]
 8002a5e:	041b      	lsls	r3, r3, #16
 8002a60:	e7f1      	b.n	8002a46 <_gpio_init_out.part.2+0xc>

08002a62 <gpio_init_out_ex>:
 8002a62:	b570      	push	{r4, r5, r6, lr}
 8002a64:	460e      	mov	r6, r1
 8002a66:	4604      	mov	r4, r0
 8002a68:	4615      	mov	r5, r2
 8002a6a:	f001 fcff 	bl	800446c <gpio_init>
 8002a6e:	3601      	adds	r6, #1
 8002a70:	d006      	beq.n	8002a80 <gpio_init_out_ex+0x1e>
 8002a72:	462a      	mov	r2, r5
 8002a74:	4620      	mov	r0, r4
 8002a76:	2100      	movs	r1, #0
 8002a78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a7c:	f7ff bfdd 	b.w	8002a3a <_gpio_init_out.part.2>
 8002a80:	bd70      	pop	{r4, r5, r6, pc}

08002a82 <gpio_init_out>:
 8002a82:	2200      	movs	r2, #0
 8002a84:	f7ff bfed 	b.w	8002a62 <gpio_init_out_ex>

08002a88 <get_us_ticker_data>:
 8002a88:	4800      	ldr	r0, [pc, #0]	; (8002a8c <get_us_ticker_data+0x4>)
 8002a8a:	4770      	bx	lr
 8002a8c:	08008e10 	.word	0x08008e10

08002a90 <us_ticker_irq_handler>:
 8002a90:	4801      	ldr	r0, [pc, #4]	; (8002a98 <us_ticker_irq_handler+0x8>)
 8002a92:	f000 b803 	b.w	8002a9c <ticker_irq_handler>
 8002a96:	bf00      	nop
 8002a98:	08008e10 	.word	0x08008e10

08002a9c <ticker_irq_handler>:
 8002a9c:	6803      	ldr	r3, [r0, #0]
 8002a9e:	b570      	push	{r4, r5, r6, lr}
 8002aa0:	68db      	ldr	r3, [r3, #12]
 8002aa2:	4604      	mov	r4, r0
 8002aa4:	4798      	blx	r3
 8002aa6:	6863      	ldr	r3, [r4, #4]
 8002aa8:	685a      	ldr	r2, [r3, #4]
 8002aaa:	6823      	ldr	r3, [r4, #0]
 8002aac:	b91a      	cbnz	r2, 8002ab6 <ticker_irq_handler+0x1a>
 8002aae:	689b      	ldr	r3, [r3, #8]
 8002ab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002ab4:	4718      	bx	r3
 8002ab6:	685b      	ldr	r3, [r3, #4]
 8002ab8:	6815      	ldr	r5, [r2, #0]
 8002aba:	4798      	blx	r3
 8002abc:	6863      	ldr	r3, [r4, #4]
 8002abe:	1a28      	subs	r0, r5, r0
 8002ac0:	2800      	cmp	r0, #0
 8002ac2:	685a      	ldr	r2, [r3, #4]
 8002ac4:	dc07      	bgt.n	8002ad6 <ticker_irq_handler+0x3a>
 8002ac6:	6891      	ldr	r1, [r2, #8]
 8002ac8:	6059      	str	r1, [r3, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d0ea      	beq.n	8002aa6 <ticker_irq_handler+0xa>
 8002ad0:	6850      	ldr	r0, [r2, #4]
 8002ad2:	4798      	blx	r3
 8002ad4:	e7e7      	b.n	8002aa6 <ticker_irq_handler+0xa>
 8002ad6:	6823      	ldr	r3, [r4, #0]
 8002ad8:	6810      	ldr	r0, [r2, #0]
 8002ada:	691b      	ldr	r3, [r3, #16]
 8002adc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002ae0:	4718      	bx	r3

08002ae2 <ticker_read>:
 8002ae2:	6803      	ldr	r3, [r0, #0]
 8002ae4:	685b      	ldr	r3, [r3, #4]
 8002ae6:	4718      	bx	r3

08002ae8 <pinmap_pinout>:
 8002ae8:	b510      	push	{r4, lr}
 8002aea:	4604      	mov	r4, r0
 8002aec:	3001      	adds	r0, #1
 8002aee:	d10d      	bne.n	8002b0c <pinmap_pinout+0x24>
 8002af0:	bd10      	pop	{r4, pc}
 8002af2:	429c      	cmp	r4, r3
 8002af4:	d109      	bne.n	8002b0a <pinmap_pinout+0x22>
 8002af6:	4620      	mov	r0, r4
 8002af8:	6889      	ldr	r1, [r1, #8]
 8002afa:	f002 f86d 	bl	8004bd8 <pin_function>
 8002afe:	4620      	mov	r0, r4
 8002b00:	2100      	movs	r1, #0
 8002b02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b06:	f002 b8eb 	b.w	8004ce0 <pin_mode>
 8002b0a:	310c      	adds	r1, #12
 8002b0c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002b10:	1c5a      	adds	r2, r3, #1
 8002b12:	d1ee      	bne.n	8002af2 <pinmap_pinout+0xa>
 8002b14:	4802      	ldr	r0, [pc, #8]	; (8002b20 <pinmap_pinout+0x38>)
 8002b16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b1a:	f000 b877 	b.w	8002c0c <error>
 8002b1e:	bf00      	nop
 8002b20:	08008e5d 	.word	0x08008e5d

08002b24 <pinmap_merge>:
 8002b24:	4288      	cmp	r0, r1
 8002b26:	b508      	push	{r3, lr}
 8002b28:	d008      	beq.n	8002b3c <pinmap_merge+0x18>
 8002b2a:	1c43      	adds	r3, r0, #1
 8002b2c:	d006      	beq.n	8002b3c <pinmap_merge+0x18>
 8002b2e:	3101      	adds	r1, #1
 8002b30:	d006      	beq.n	8002b40 <pinmap_merge+0x1c>
 8002b32:	4804      	ldr	r0, [pc, #16]	; (8002b44 <pinmap_merge+0x20>)
 8002b34:	f000 f86a 	bl	8002c0c <error>
 8002b38:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b3c:	4608      	mov	r0, r1
 8002b3e:	bd08      	pop	{r3, pc}
 8002b40:	4601      	mov	r1, r0
 8002b42:	e7fb      	b.n	8002b3c <pinmap_merge+0x18>
 8002b44:	08008e2c 	.word	0x08008e2c

08002b48 <pinmap_find_peripheral>:
 8002b48:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002b4c:	1c5a      	adds	r2, r3, #1
 8002b4e:	d101      	bne.n	8002b54 <pinmap_find_peripheral+0xc>
 8002b50:	4618      	mov	r0, r3
 8002b52:	4770      	bx	lr
 8002b54:	4283      	cmp	r3, r0
 8002b56:	d101      	bne.n	8002b5c <pinmap_find_peripheral+0x14>
 8002b58:	6848      	ldr	r0, [r1, #4]
 8002b5a:	4770      	bx	lr
 8002b5c:	310c      	adds	r1, #12
 8002b5e:	e7f3      	b.n	8002b48 <pinmap_find_peripheral>

08002b60 <pinmap_peripheral>:
 8002b60:	1c42      	adds	r2, r0, #1
 8002b62:	b510      	push	{r4, lr}
 8002b64:	4604      	mov	r4, r0
 8002b66:	d007      	beq.n	8002b78 <pinmap_peripheral+0x18>
 8002b68:	f7ff ffee 	bl	8002b48 <pinmap_find_peripheral>
 8002b6c:	1c43      	adds	r3, r0, #1
 8002b6e:	4604      	mov	r4, r0
 8002b70:	d102      	bne.n	8002b78 <pinmap_peripheral+0x18>
 8002b72:	4802      	ldr	r0, [pc, #8]	; (8002b7c <pinmap_peripheral+0x1c>)
 8002b74:	f000 f84a 	bl	8002c0c <error>
 8002b78:	4620      	mov	r0, r4
 8002b7a:	bd10      	pop	{r4, pc}
 8002b7c:	08008e3d 	.word	0x08008e3d

08002b80 <mbed_die>:
 8002b80:	b500      	push	{lr}
 8002b82:	b089      	sub	sp, #36	; 0x24
 8002b84:	f000 f818 	bl	8002bb8 <core_util_critical_section_enter>
 8002b88:	2105      	movs	r1, #5
 8002b8a:	a801      	add	r0, sp, #4
 8002b8c:	f7ff ff79 	bl	8002a82 <gpio_init_out>
 8002b90:	9b03      	ldr	r3, [sp, #12]
 8002b92:	9a01      	ldr	r2, [sp, #4]
 8002b94:	601a      	str	r2, [r3, #0]
 8002b96:	2096      	movs	r0, #150	; 0x96
 8002b98:	f004 f994 	bl	8006ec4 <wait_ms>
 8002b9c:	9b01      	ldr	r3, [sp, #4]
 8002b9e:	9a04      	ldr	r2, [sp, #16]
 8002ba0:	041b      	lsls	r3, r3, #16
 8002ba2:	6013      	str	r3, [r2, #0]
 8002ba4:	2096      	movs	r0, #150	; 0x96
 8002ba6:	f004 f98d 	bl	8006ec4 <wait_ms>
 8002baa:	e7f1      	b.n	8002b90 <mbed_die+0x10>

08002bac <core_util_are_interrupts_enabled>:
 8002bac:	f3ef 8010 	mrs	r0, PRIMASK
 8002bb0:	43c0      	mvns	r0, r0
 8002bb2:	f000 0001 	and.w	r0, r0, #1
 8002bb6:	4770      	bx	lr

08002bb8 <core_util_critical_section_enter>:
 8002bb8:	b508      	push	{r3, lr}
 8002bba:	f7ff fff7 	bl	8002bac <core_util_are_interrupts_enabled>
 8002bbe:	b672      	cpsid	i
 8002bc0:	4b06      	ldr	r3, [pc, #24]	; (8002bdc <core_util_critical_section_enter+0x24>)
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	b922      	cbnz	r2, 8002bd0 <core_util_critical_section_enter+0x18>
 8002bc6:	f080 0001 	eor.w	r0, r0, #1
 8002bca:	4a05      	ldr	r2, [pc, #20]	; (8002be0 <core_util_critical_section_enter+0x28>)
 8002bcc:	b2c0      	uxtb	r0, r0
 8002bce:	7010      	strb	r0, [r2, #0]
 8002bd0:	681a      	ldr	r2, [r3, #0]
 8002bd2:	681a      	ldr	r2, [r3, #0]
 8002bd4:	3201      	adds	r2, #1
 8002bd6:	601a      	str	r2, [r3, #0]
 8002bd8:	bd08      	pop	{r3, pc}
 8002bda:	bf00      	nop
 8002bdc:	20000298 	.word	0x20000298
 8002be0:	20000294 	.word	0x20000294

08002be4 <core_util_critical_section_exit>:
 8002be4:	b508      	push	{r3, lr}
 8002be6:	4b07      	ldr	r3, [pc, #28]	; (8002c04 <core_util_critical_section_exit+0x20>)
 8002be8:	681a      	ldr	r2, [r3, #0]
 8002bea:	b152      	cbz	r2, 8002c02 <core_util_critical_section_exit+0x1e>
 8002bec:	f7ff ffde 	bl	8002bac <core_util_are_interrupts_enabled>
 8002bf0:	681a      	ldr	r2, [r3, #0]
 8002bf2:	3a01      	subs	r2, #1
 8002bf4:	601a      	str	r2, [r3, #0]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	b91b      	cbnz	r3, 8002c02 <core_util_critical_section_exit+0x1e>
 8002bfa:	4b03      	ldr	r3, [pc, #12]	; (8002c08 <core_util_critical_section_exit+0x24>)
 8002bfc:	781b      	ldrb	r3, [r3, #0]
 8002bfe:	b903      	cbnz	r3, 8002c02 <core_util_critical_section_exit+0x1e>
 8002c00:	b662      	cpsie	i
 8002c02:	bd08      	pop	{r3, pc}
 8002c04:	20000298 	.word	0x20000298
 8002c08:	20000294 	.word	0x20000294

08002c0c <error>:
 8002c0c:	b40f      	push	{r0, r1, r2, r3}
 8002c0e:	2001      	movs	r0, #1
 8002c10:	b508      	push	{r3, lr}
 8002c12:	f004 fa5b 	bl	80070cc <__wrap_exit>

08002c16 <default_idle_hook>:
 8002c16:	f001 bc76 	b.w	8004506 <hal_sleep>
	...

08002c1c <rtos_idle_loop>:
 8002c1c:	b508      	push	{r3, lr}
 8002c1e:	4c02      	ldr	r4, [pc, #8]	; (8002c28 <rtos_idle_loop+0xc>)
 8002c20:	6823      	ldr	r3, [r4, #0]
 8002c22:	4798      	blx	r3
 8002c24:	e7fc      	b.n	8002c20 <rtos_idle_loop+0x4>
 8002c26:	bf00      	nop
 8002c28:	200001c8 	.word	0x200001c8

08002c2c <rt_put_prio>:
 8002c2c:	b530      	push	{r4, r5, lr}
 8002c2e:	7802      	ldrb	r2, [r0, #0]
 8002c30:	788c      	ldrb	r4, [r1, #2]
 8002c32:	6843      	ldr	r3, [r0, #4]
 8002c34:	3a01      	subs	r2, #1
 8002c36:	b2d2      	uxtb	r2, r2
 8002c38:	b113      	cbz	r3, 8002c40 <rt_put_prio+0x14>
 8002c3a:	789d      	ldrb	r5, [r3, #2]
 8002c3c:	42a5      	cmp	r5, r4
 8002c3e:	d207      	bcs.n	8002c50 <rt_put_prio+0x24>
 8002c40:	2a02      	cmp	r2, #2
 8002c42:	604b      	str	r3, [r1, #4]
 8002c44:	6041      	str	r1, [r0, #4]
 8002c46:	d806      	bhi.n	8002c56 <rt_put_prio+0x2a>
 8002c48:	b103      	cbz	r3, 8002c4c <rt_put_prio+0x20>
 8002c4a:	6099      	str	r1, [r3, #8]
 8002c4c:	6088      	str	r0, [r1, #8]
 8002c4e:	bd30      	pop	{r4, r5, pc}
 8002c50:	4618      	mov	r0, r3
 8002c52:	685b      	ldr	r3, [r3, #4]
 8002c54:	e7f0      	b.n	8002c38 <rt_put_prio+0xc>
 8002c56:	2300      	movs	r3, #0
 8002c58:	608b      	str	r3, [r1, #8]
 8002c5a:	bd30      	pop	{r4, r5, pc}

08002c5c <rt_get_first>:
 8002c5c:	7802      	ldrb	r2, [r0, #0]
 8002c5e:	6843      	ldr	r3, [r0, #4]
 8002c60:	3a01      	subs	r2, #1
 8002c62:	6859      	ldr	r1, [r3, #4]
 8002c64:	6041      	str	r1, [r0, #4]
 8002c66:	2a02      	cmp	r2, #2
 8002c68:	f04f 0200 	mov.w	r2, #0
 8002c6c:	d805      	bhi.n	8002c7a <rt_get_first+0x1e>
 8002c6e:	b109      	cbz	r1, 8002c74 <rt_get_first+0x18>
 8002c70:	6088      	str	r0, [r1, #8]
 8002c72:	605a      	str	r2, [r3, #4]
 8002c74:	609a      	str	r2, [r3, #8]
 8002c76:	4618      	mov	r0, r3
 8002c78:	4770      	bx	lr
 8002c7a:	605a      	str	r2, [r3, #4]
 8002c7c:	e7fb      	b.n	8002c76 <rt_get_first+0x1a>
	...

08002c80 <rt_put_rdy_first>:
 8002c80:	4b03      	ldr	r3, [pc, #12]	; (8002c90 <rt_put_rdy_first+0x10>)
 8002c82:	685a      	ldr	r2, [r3, #4]
 8002c84:	6042      	str	r2, [r0, #4]
 8002c86:	2200      	movs	r2, #0
 8002c88:	6082      	str	r2, [r0, #8]
 8002c8a:	6058      	str	r0, [r3, #4]
 8002c8c:	4770      	bx	lr
 8002c8e:	bf00      	nop
 8002c90:	200017a8 	.word	0x200017a8

08002c94 <rt_put_dly>:
 8002c94:	4b10      	ldr	r3, [pc, #64]	; (8002cd8 <rt_put_dly+0x44>)
 8002c96:	68da      	ldr	r2, [r3, #12]
 8002c98:	b510      	push	{r4, lr}
 8002c9a:	b18a      	cbz	r2, 8002cc0 <rt_put_dly+0x2c>
 8002c9c:	8a9a      	ldrh	r2, [r3, #20]
 8002c9e:	68dc      	ldr	r4, [r3, #12]
 8002ca0:	428a      	cmp	r2, r1
 8002ca2:	d30c      	bcc.n	8002cbe <rt_put_dly+0x2a>
 8002ca4:	60c4      	str	r4, [r0, #12]
 8002ca6:	60d8      	str	r0, [r3, #12]
 8002ca8:	68c4      	ldr	r4, [r0, #12]
 8002caa:	6103      	str	r3, [r0, #16]
 8002cac:	b104      	cbz	r4, 8002cb0 <rt_put_dly+0x1c>
 8002cae:	6120      	str	r0, [r4, #16]
 8002cb0:	1a52      	subs	r2, r2, r1
 8002cb2:	b292      	uxth	r2, r2
 8002cb4:	8282      	strh	r2, [r0, #20]
 8002cb6:	8a99      	ldrh	r1, [r3, #20]
 8002cb8:	1a8a      	subs	r2, r1, r2
 8002cba:	829a      	strh	r2, [r3, #20]
 8002cbc:	bd10      	pop	{r4, pc}
 8002cbe:	b93c      	cbnz	r4, 8002cd0 <rt_put_dly+0x3c>
 8002cc0:	2400      	movs	r4, #0
 8002cc2:	1a8a      	subs	r2, r1, r2
 8002cc4:	60c4      	str	r4, [r0, #12]
 8002cc6:	60d8      	str	r0, [r3, #12]
 8002cc8:	6103      	str	r3, [r0, #16]
 8002cca:	829a      	strh	r2, [r3, #20]
 8002ccc:	8284      	strh	r4, [r0, #20]
 8002cce:	bd10      	pop	{r4, pc}
 8002cd0:	8aa3      	ldrh	r3, [r4, #20]
 8002cd2:	441a      	add	r2, r3
 8002cd4:	4623      	mov	r3, r4
 8002cd6:	e7e2      	b.n	8002c9e <rt_put_dly+0xa>
 8002cd8:	200017c0 	.word	0x200017c0

08002cdc <rt_dec_dly>:
 8002cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ce0:	4d17      	ldr	r5, [pc, #92]	; (8002d40 <rt_dec_dly+0x64>)
 8002ce2:	68eb      	ldr	r3, [r5, #12]
 8002ce4:	b153      	cbz	r3, 8002cfc <rt_dec_dly+0x20>
 8002ce6:	8aab      	ldrh	r3, [r5, #20]
 8002ce8:	4f16      	ldr	r7, [pc, #88]	; (8002d44 <rt_dec_dly+0x68>)
 8002cea:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002d48 <rt_dec_dly+0x6c>
 8002cee:	3b01      	subs	r3, #1
 8002cf0:	82ab      	strh	r3, [r5, #20]
 8002cf2:	2600      	movs	r6, #0
 8002cf4:	8aaa      	ldrh	r2, [r5, #20]
 8002cf6:	b90a      	cbnz	r2, 8002cfc <rt_dec_dly+0x20>
 8002cf8:	68ec      	ldr	r4, [r5, #12]
 8002cfa:	b90c      	cbnz	r4, 8002d00 <rt_dec_dly+0x24>
 8002cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d00:	68a3      	ldr	r3, [r4, #8]
 8002d02:	b133      	cbz	r3, 8002d12 <rt_dec_dly+0x36>
 8002d04:	6861      	ldr	r1, [r4, #4]
 8002d06:	6059      	str	r1, [r3, #4]
 8002d08:	6861      	ldr	r1, [r4, #4]
 8002d0a:	b109      	cbz	r1, 8002d10 <rt_dec_dly+0x34>
 8002d0c:	608b      	str	r3, [r1, #8]
 8002d0e:	6062      	str	r2, [r4, #4]
 8002d10:	60a6      	str	r6, [r4, #8]
 8002d12:	4621      	mov	r1, r4
 8002d14:	4638      	mov	r0, r7
 8002d16:	f7ff ff89 	bl	8002c2c <rt_put_prio>
 8002d1a:	8aa3      	ldrh	r3, [r4, #20]
 8002d1c:	82ab      	strh	r3, [r5, #20]
 8002d1e:	7863      	ldrb	r3, [r4, #1]
 8002d20:	2b04      	cmp	r3, #4
 8002d22:	bf01      	itttt	eq
 8002d24:	f8d8 3000 	ldreq.w	r3, [r8]
 8002d28:	8ae2      	ldrheq	r2, [r4, #22]
 8002d2a:	189b      	addeq	r3, r3, r2
 8002d2c:	82a3      	strheq	r3, [r4, #20]
 8002d2e:	2301      	movs	r3, #1
 8002d30:	7063      	strb	r3, [r4, #1]
 8002d32:	68e3      	ldr	r3, [r4, #12]
 8002d34:	60eb      	str	r3, [r5, #12]
 8002d36:	b10b      	cbz	r3, 8002d3c <rt_dec_dly+0x60>
 8002d38:	611d      	str	r5, [r3, #16]
 8002d3a:	60e6      	str	r6, [r4, #12]
 8002d3c:	6126      	str	r6, [r4, #16]
 8002d3e:	e7d9      	b.n	8002cf4 <rt_dec_dly+0x18>
 8002d40:	200017c0 	.word	0x200017c0
 8002d44:	200017a8 	.word	0x200017a8
 8002d48:	20002208 	.word	0x20002208

08002d4c <rt_rmv_list>:
 8002d4c:	6883      	ldr	r3, [r0, #8]
 8002d4e:	b12b      	cbz	r3, 8002d5c <rt_rmv_list+0x10>
 8002d50:	6842      	ldr	r2, [r0, #4]
 8002d52:	605a      	str	r2, [r3, #4]
 8002d54:	6842      	ldr	r2, [r0, #4]
 8002d56:	b15a      	cbz	r2, 8002d70 <rt_rmv_list+0x24>
 8002d58:	6093      	str	r3, [r2, #8]
 8002d5a:	4770      	bx	lr
 8002d5c:	4b05      	ldr	r3, [pc, #20]	; (8002d74 <rt_rmv_list+0x28>)
 8002d5e:	685a      	ldr	r2, [r3, #4]
 8002d60:	4290      	cmp	r0, r2
 8002d62:	d102      	bne.n	8002d6a <rt_rmv_list+0x1e>
 8002d64:	6842      	ldr	r2, [r0, #4]
 8002d66:	605a      	str	r2, [r3, #4]
 8002d68:	4770      	bx	lr
 8002d6a:	4613      	mov	r3, r2
 8002d6c:	2a00      	cmp	r2, #0
 8002d6e:	d1f6      	bne.n	8002d5e <rt_rmv_list+0x12>
 8002d70:	4770      	bx	lr
 8002d72:	bf00      	nop
 8002d74:	200017a8 	.word	0x200017a8

08002d78 <rt_resort_prio>:
 8002d78:	b510      	push	{r4, lr}
 8002d7a:	6884      	ldr	r4, [r0, #8]
 8002d7c:	4601      	mov	r1, r0
 8002d7e:	b92c      	cbnz	r4, 8002d8c <rt_resort_prio+0x14>
 8002d80:	7843      	ldrb	r3, [r0, #1]
 8002d82:	2b01      	cmp	r3, #1
 8002d84:	d10d      	bne.n	8002da2 <rt_resort_prio+0x2a>
 8002d86:	4c07      	ldr	r4, [pc, #28]	; (8002da4 <rt_resort_prio+0x2c>)
 8002d88:	e003      	b.n	8002d92 <rt_resort_prio+0x1a>
 8002d8a:	68a4      	ldr	r4, [r4, #8]
 8002d8c:	7823      	ldrb	r3, [r4, #0]
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d0fb      	beq.n	8002d8a <rt_resort_prio+0x12>
 8002d92:	4608      	mov	r0, r1
 8002d94:	f7ff ffda 	bl	8002d4c <rt_rmv_list>
 8002d98:	4620      	mov	r0, r4
 8002d9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d9e:	f7ff bf45 	b.w	8002c2c <rt_put_prio>
 8002da2:	bd10      	pop	{r4, pc}
 8002da4:	200017a8 	.word	0x200017a8

08002da8 <rt_rmv_dly>:
 8002da8:	6903      	ldr	r3, [r0, #16]
 8002daa:	b510      	push	{r4, lr}
 8002dac:	b163      	cbz	r3, 8002dc8 <rt_rmv_dly+0x20>
 8002dae:	68c2      	ldr	r2, [r0, #12]
 8002db0:	60da      	str	r2, [r3, #12]
 8002db2:	68c2      	ldr	r2, [r0, #12]
 8002db4:	b14a      	cbz	r2, 8002dca <rt_rmv_dly+0x22>
 8002db6:	8a99      	ldrh	r1, [r3, #20]
 8002db8:	8a84      	ldrh	r4, [r0, #20]
 8002dba:	4421      	add	r1, r4
 8002dbc:	8299      	strh	r1, [r3, #20]
 8002dbe:	6113      	str	r3, [r2, #16]
 8002dc0:	2300      	movs	r3, #0
 8002dc2:	60c3      	str	r3, [r0, #12]
 8002dc4:	2300      	movs	r3, #0
 8002dc6:	6103      	str	r3, [r0, #16]
 8002dc8:	bd10      	pop	{r4, pc}
 8002dca:	829a      	strh	r2, [r3, #20]
 8002dcc:	e7fa      	b.n	8002dc4 <rt_rmv_dly+0x1c>
	...

08002dd0 <rt_psq_enq>:
 8002dd0:	b470      	push	{r4, r5, r6}
 8002dd2:	4b11      	ldr	r3, [pc, #68]	; (8002e18 <rt_psq_enq+0x48>)
 8002dd4:	78dd      	ldrb	r5, [r3, #3]
 8002dd6:	f3ef 8610 	mrs	r6, PRIMASK
 8002dda:	f3ef 8210 	mrs	r2, PRIMASK
 8002dde:	b672      	cpsid	i
 8002de0:	789a      	ldrb	r2, [r3, #2]
 8002de2:	4295      	cmp	r5, r2
 8002de4:	d911      	bls.n	8002e0a <rt_psq_enq+0x3a>
 8002de6:	3201      	adds	r2, #1
 8002de8:	709a      	strb	r2, [r3, #2]
 8002dea:	781a      	ldrb	r2, [r3, #0]
 8002dec:	1c54      	adds	r4, r2, #1
 8002dee:	42a5      	cmp	r5, r4
 8002df0:	bf08      	it	eq
 8002df2:	2400      	moveq	r4, #0
 8002df4:	701c      	strb	r4, [r3, #0]
 8002df6:	b906      	cbnz	r6, 8002dfa <rt_psq_enq+0x2a>
 8002df8:	b662      	cpsie	i
 8002dfa:	4295      	cmp	r5, r2
 8002dfc:	d907      	bls.n	8002e0e <rt_psq_enq+0x3e>
 8002dfe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e02:	bc70      	pop	{r4, r5, r6}
 8002e04:	6058      	str	r0, [r3, #4]
 8002e06:	6099      	str	r1, [r3, #8]
 8002e08:	4770      	bx	lr
 8002e0a:	2e00      	cmp	r6, #0
 8002e0c:	d0f4      	beq.n	8002df8 <rt_psq_enq+0x28>
 8002e0e:	2002      	movs	r0, #2
 8002e10:	bc70      	pop	{r4, r5, r6}
 8002e12:	f000 b829 	b.w	8002e68 <os_error>
 8002e16:	bf00      	nop
 8002e18:	20001d48 	.word	0x20001d48

08002e1c <pre_main>:
 8002e1c:	b508      	push	{r3, lr}
 8002e1e:	480b      	ldr	r0, [pc, #44]	; (8002e4c <pre_main+0x30>)
 8002e20:	f000 fcb2 	bl	8003788 <osMutexCreate>
 8002e24:	4b0a      	ldr	r3, [pc, #40]	; (8002e50 <pre_main+0x34>)
 8002e26:	6018      	str	r0, [r3, #0]
 8002e28:	480a      	ldr	r0, [pc, #40]	; (8002e54 <pre_main+0x38>)
 8002e2a:	f000 fcad 	bl	8003788 <osMutexCreate>
 8002e2e:	4b0a      	ldr	r3, [pc, #40]	; (8002e58 <pre_main+0x3c>)
 8002e30:	6018      	str	r0, [r3, #0]
 8002e32:	480a      	ldr	r0, [pc, #40]	; (8002e5c <pre_main+0x40>)
 8002e34:	f000 fca8 	bl	8003788 <osMutexCreate>
 8002e38:	4b09      	ldr	r3, [pc, #36]	; (8002e60 <pre_main+0x44>)
 8002e3a:	6018      	str	r0, [r3, #0]
 8002e3c:	f004 ff6e 	bl	8007d1c <__libc_init_array>
 8002e40:	2100      	movs	r1, #0
 8002e42:	4608      	mov	r0, r1
 8002e44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002e48:	f004 b903 	b.w	8007052 <__wrap_main>
 8002e4c:	08008ebc 	.word	0x08008ebc
 8002e50:	2000219c 	.word	0x2000219c
 8002e54:	08008eb8 	.word	0x08008eb8
 8002e58:	200002a4 	.word	0x200002a4
 8002e5c:	08008eb4 	.word	0x08008eb4
 8002e60:	2000029c 	.word	0x2000029c

08002e64 <os_idle_demon>:
 8002e64:	f7ff beda 	b.w	8002c1c <rtos_idle_loop>

08002e68 <os_error>:
 8002e68:	b510      	push	{r4, lr}
 8002e6a:	4604      	mov	r4, r0
 8002e6c:	f000 fbec 	bl	8003648 <svcThreadGetId>
 8002e70:	4621      	mov	r1, r4
 8002e72:	4602      	mov	r2, r0
 8002e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e78:	4801      	ldr	r0, [pc, #4]	; (8002e80 <os_error+0x18>)
 8002e7a:	f7ff bec7 	b.w	8002c0c <error>
 8002e7e:	bf00      	nop
 8002e80:	08008e7c 	.word	0x08008e7c

08002e84 <sysThreadTerminate>:
 8002e84:	f004 b94c 	b.w	8007120 <thread_terminate_hook>

08002e88 <set_stack_heap>:
 8002e88:	4a0b      	ldr	r2, [pc, #44]	; (8002eb8 <set_stack_heap+0x30>)
 8002e8a:	4b0c      	ldr	r3, [pc, #48]	; (8002ebc <set_stack_heap+0x34>)
 8002e8c:	480c      	ldr	r0, [pc, #48]	; (8002ec0 <set_stack_heap+0x38>)
 8002e8e:	b430      	push	{r4, r5}
 8002e90:	601a      	str	r2, [r3, #0]
 8002e92:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8002e96:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8002e9a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002e9e:	4619      	mov	r1, r3
 8002ea0:	bf28      	it	cs
 8002ea2:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8002ea6:	4d07      	ldr	r5, [pc, #28]	; (8002ec4 <set_stack_heap+0x3c>)
 8002ea8:	4c07      	ldr	r4, [pc, #28]	; (8002ec8 <set_stack_heap+0x40>)
 8002eaa:	6001      	str	r1, [r0, #0]
 8002eac:	1a5b      	subs	r3, r3, r1
 8002eae:	441a      	add	r2, r3
 8002eb0:	602a      	str	r2, [r5, #0]
 8002eb2:	6023      	str	r3, [r4, #0]
 8002eb4:	bc30      	pop	{r4, r5}
 8002eb6:	4770      	bx	lr
 8002eb8:	2000229c 	.word	0x2000229c
 8002ebc:	200016f8 	.word	0x200016f8
 8002ec0:	200002a8 	.word	0x200002a8
 8002ec4:	200002ac 	.word	0x200002ac
 8002ec8:	200016f4 	.word	0x200016f4

08002ecc <software_init_hook_rtos>:
 8002ecc:	f000 fd40 	bl	8003950 <osKernelInitialize>
 8002ed0:	f7ff ffda 	bl	8002e88 <set_stack_heap>
 8002ed4:	4803      	ldr	r0, [pc, #12]	; (8002ee4 <software_init_hook_rtos+0x18>)
 8002ed6:	2100      	movs	r1, #0
 8002ed8:	f000 fcde 	bl	8003898 <osThreadCreate>
 8002edc:	f000 fb36 	bl	800354c <osKernelStart>
 8002ee0:	e7fe      	b.n	8002ee0 <software_init_hook_rtos+0x14>
 8002ee2:	0000      	.short	0x0000
 8002ee4:	200001cc 	.word	0x200001cc

08002ee8 <__rtos_malloc_lock>:
 8002ee8:	4b02      	ldr	r3, [pc, #8]	; (8002ef4 <__rtos_malloc_lock+0xc>)
 8002eea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002eee:	6818      	ldr	r0, [r3, #0]
 8002ef0:	f000 bc68 	b.w	80037c4 <osMutexWait>
 8002ef4:	200002a4 	.word	0x200002a4

08002ef8 <__rtos_malloc_unlock>:
 8002ef8:	4b01      	ldr	r3, [pc, #4]	; (8002f00 <__rtos_malloc_unlock+0x8>)
 8002efa:	6818      	ldr	r0, [r3, #0]
 8002efc:	f000 bc8a 	b.w	8003814 <osMutexRelease>
 8002f00:	200002a4 	.word	0x200002a4

08002f04 <rt_init_stack>:
 8002f04:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8002f06:	089b      	lsrs	r3, r3, #2
 8002f08:	bf04      	itt	eq
 8002f0a:	4b22      	ldreq	r3, [pc, #136]	; (8002f94 <rt_init_stack+0x90>)
 8002f0c:	881b      	ldrheq	r3, [r3, #0]
 8002f0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f10:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8002f12:	bf08      	it	eq
 8002f14:	089b      	lsreq	r3, r3, #2
 8002f16:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8002f1a:	0754      	lsls	r4, r2, #29
 8002f1c:	bf48      	it	mi
 8002f1e:	3a04      	submi	r2, #4
 8002f20:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8002f24:	e902 0042 	stmdb	r2, {r1, r6}
 8002f28:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8002f2c:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8002f30:	f1a2 070c 	sub.w	r7, r2, #12
 8002f34:	f04f 0e00 	mov.w	lr, #0
 8002f38:	f846 ef04 	str.w	lr, [r6, #4]!
 8002f3c:	42be      	cmp	r6, r7
 8002f3e:	d1fb      	bne.n	8002f38 <rt_init_stack+0x34>
 8002f40:	69c6      	ldr	r6, [r0, #28]
 8002f42:	f842 6c20 	str.w	r6, [r2, #-32]
 8002f46:	6341      	str	r1, [r0, #52]	; 0x34
 8002f48:	4912      	ldr	r1, [pc, #72]	; (8002f94 <rt_init_stack+0x90>)
 8002f4a:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002f4c:	6809      	ldr	r1, [r1, #0]
 8002f4e:	00c9      	lsls	r1, r1, #3
 8002f50:	d517      	bpl.n	8002f82 <rt_init_stack+0x7e>
 8002f52:	2b11      	cmp	r3, #17
 8002f54:	d915      	bls.n	8002f82 <rt_init_stack+0x7e>
 8002f56:	3b10      	subs	r3, #16
 8002f58:	f06f 0107 	mvn.w	r1, #7
 8002f5c:	085b      	lsrs	r3, r3, #1
 8002f5e:	434b      	muls	r3, r1
 8002f60:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8002f64:	440a      	add	r2, r1
 8002f66:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8002f6a:	4621      	mov	r1, r4
 8002f6c:	4291      	cmp	r1, r2
 8002f6e:	d10b      	bne.n	8002f88 <rt_init_stack+0x84>
 8002f70:	3308      	adds	r3, #8
 8002f72:	441c      	add	r4, r3
 8002f74:	1f23      	subs	r3, r4, #4
 8002f76:	429d      	cmp	r5, r3
 8002f78:	bf3c      	itt	cc
 8002f7a:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8002f7e:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8002f82:	4b05      	ldr	r3, [pc, #20]	; (8002f98 <rt_init_stack+0x94>)
 8002f84:	602b      	str	r3, [r5, #0]
 8002f86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f88:	f841 0c04 	str.w	r0, [r1, #-4]
 8002f8c:	f841 0d08 	str.w	r0, [r1, #-8]!
 8002f90:	e7ec      	b.n	8002f6c <rt_init_stack+0x68>
 8002f92:	bf00      	nop
 8002f94:	08008ec4 	.word	0x08008ec4
 8002f98:	e25a2ea5 	.word	0xe25a2ea5

08002f9c <rt_ret_val>:
 8002f9c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002fa0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002fa2:	b112      	cbz	r2, 8002faa <rt_ret_val+0xe>
 8002fa4:	3360      	adds	r3, #96	; 0x60
 8002fa6:	6019      	str	r1, [r3, #0]
 8002fa8:	4770      	bx	lr
 8002faa:	3320      	adds	r3, #32
 8002fac:	e7fb      	b.n	8002fa6 <rt_ret_val+0xa>

08002fae <rt_ret_val2>:
 8002fae:	b510      	push	{r4, lr}
 8002fb0:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002fb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002fb6:	b11c      	cbz	r4, 8002fc0 <rt_ret_val2+0x12>
 8002fb8:	3360      	adds	r3, #96	; 0x60
 8002fba:	e883 0006 	stmia.w	r3, {r1, r2}
 8002fbe:	bd10      	pop	{r4, pc}
 8002fc0:	3320      	adds	r3, #32
 8002fc2:	e7fa      	b.n	8002fba <rt_ret_val2+0xc>

08002fc4 <rt_psh_req>:
 8002fc4:	4b05      	ldr	r3, [pc, #20]	; (8002fdc <rt_psh_req+0x18>)
 8002fc6:	781b      	ldrb	r3, [r3, #0]
 8002fc8:	b923      	cbnz	r3, 8002fd4 <rt_psh_req+0x10>
 8002fca:	4b05      	ldr	r3, [pc, #20]	; (8002fe0 <rt_psh_req+0x1c>)
 8002fcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002fd0:	601a      	str	r2, [r3, #0]
 8002fd2:	4770      	bx	lr
 8002fd4:	4b03      	ldr	r3, [pc, #12]	; (8002fe4 <rt_psh_req+0x20>)
 8002fd6:	2201      	movs	r2, #1
 8002fd8:	701a      	strb	r2, [r3, #0]
 8002fda:	4770      	bx	lr
 8002fdc:	20001300 	.word	0x20001300
 8002fe0:	e000ed04 	.word	0xe000ed04
 8002fe4:	20001301 	.word	0x20001301

08002fe8 <rt_pop_req>:
 8002fe8:	b538      	push	{r3, r4, r5, lr}
 8002fea:	4b1a      	ldr	r3, [pc, #104]	; (8003054 <rt_pop_req+0x6c>)
 8002fec:	4c1a      	ldr	r4, [pc, #104]	; (8003058 <rt_pop_req+0x70>)
 8002fee:	6818      	ldr	r0, [r3, #0]
 8002ff0:	2301      	movs	r3, #1
 8002ff2:	7043      	strb	r3, [r0, #1]
 8002ff4:	f7ff fe44 	bl	8002c80 <rt_put_rdy_first>
 8002ff8:	7865      	ldrb	r5, [r4, #1]
 8002ffa:	78a3      	ldrb	r3, [r4, #2]
 8002ffc:	b93b      	cbnz	r3, 800300e <rt_pop_req+0x26>
 8002ffe:	4817      	ldr	r0, [pc, #92]	; (800305c <rt_pop_req+0x74>)
 8003000:	7065      	strb	r5, [r4, #1]
 8003002:	f7ff fe2b 	bl	8002c5c <rt_get_first>
 8003006:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800300a:	f000 bd7b 	b.w	8003b04 <rt_switch_req>
 800300e:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8003012:	6858      	ldr	r0, [r3, #4]
 8003014:	7802      	ldrb	r2, [r0, #0]
 8003016:	b99a      	cbnz	r2, 8003040 <rt_pop_req+0x58>
 8003018:	8919      	ldrh	r1, [r3, #8]
 800301a:	f000 f9bb 	bl	8003394 <rt_evt_psh>
 800301e:	78e3      	ldrb	r3, [r4, #3]
 8003020:	3501      	adds	r5, #1
 8003022:	429d      	cmp	r5, r3
 8003024:	bf08      	it	eq
 8003026:	2500      	moveq	r5, #0
 8003028:	f3ef 8310 	mrs	r3, PRIMASK
 800302c:	f3ef 8210 	mrs	r2, PRIMASK
 8003030:	b672      	cpsid	i
 8003032:	78a2      	ldrb	r2, [r4, #2]
 8003034:	3a01      	subs	r2, #1
 8003036:	70a2      	strb	r2, [r4, #2]
 8003038:	2b00      	cmp	r3, #0
 800303a:	d1de      	bne.n	8002ffa <rt_pop_req+0x12>
 800303c:	b662      	cpsie	i
 800303e:	e7dc      	b.n	8002ffa <rt_pop_req+0x12>
 8003040:	2a01      	cmp	r2, #1
 8003042:	d103      	bne.n	800304c <rt_pop_req+0x64>
 8003044:	6899      	ldr	r1, [r3, #8]
 8003046:	f000 f933 	bl	80032b0 <rt_mbx_psh>
 800304a:	e7e8      	b.n	800301e <rt_pop_req+0x36>
 800304c:	f001 f8b8 	bl	80041c0 <rt_sem_psh>
 8003050:	e7e5      	b.n	800301e <rt_pop_req+0x36>
 8003052:	bf00      	nop
 8003054:	200021c0 	.word	0x200021c0
 8003058:	20001d48 	.word	0x20001d48
 800305c:	200017a8 	.word	0x200017a8

08003060 <os_tick_init>:
 8003060:	4b08      	ldr	r3, [pc, #32]	; (8003084 <os_tick_init+0x24>)
 8003062:	681a      	ldr	r2, [r3, #0]
 8003064:	4b08      	ldr	r3, [pc, #32]	; (8003088 <os_tick_init+0x28>)
 8003066:	601a      	str	r2, [r3, #0]
 8003068:	2200      	movs	r2, #0
 800306a:	605a      	str	r2, [r3, #4]
 800306c:	2207      	movs	r2, #7
 800306e:	f843 2c04 	str.w	r2, [r3, #-4]
 8003072:	4a06      	ldr	r2, [pc, #24]	; (800308c <os_tick_init+0x2c>)
 8003074:	6813      	ldr	r3, [r2, #0]
 8003076:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800307a:	6013      	str	r3, [r2, #0]
 800307c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003080:	4770      	bx	lr
 8003082:	bf00      	nop
 8003084:	08008edc 	.word	0x08008edc
 8003088:	e000e014 	.word	0xe000e014
 800308c:	e000ed20 	.word	0xe000ed20

08003090 <os_tick_irqack>:
 8003090:	4770      	bx	lr
	...

08003094 <rt_systick>:
 8003094:	b508      	push	{r3, lr}
 8003096:	4b0b      	ldr	r3, [pc, #44]	; (80030c4 <rt_systick+0x30>)
 8003098:	6818      	ldr	r0, [r3, #0]
 800309a:	2301      	movs	r3, #1
 800309c:	7043      	strb	r3, [r0, #1]
 800309e:	f7ff fdef 	bl	8002c80 <rt_put_rdy_first>
 80030a2:	f000 f9ad 	bl	8003400 <rt_chk_robin>
 80030a6:	4a08      	ldr	r2, [pc, #32]	; (80030c8 <rt_systick+0x34>)
 80030a8:	6813      	ldr	r3, [r2, #0]
 80030aa:	3301      	adds	r3, #1
 80030ac:	6013      	str	r3, [r2, #0]
 80030ae:	f7ff fe15 	bl	8002cdc <rt_dec_dly>
 80030b2:	f000 fcaf 	bl	8003a14 <sysTimerTick>
 80030b6:	4805      	ldr	r0, [pc, #20]	; (80030cc <rt_systick+0x38>)
 80030b8:	f7ff fdd0 	bl	8002c5c <rt_get_first>
 80030bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80030c0:	f000 bd20 	b.w	8003b04 <rt_switch_req>
 80030c4:	200021c0 	.word	0x200021c0
 80030c8:	20002208 	.word	0x20002208
 80030cc:	200017a8 	.word	0x200017a8

080030d0 <rt_stk_check>:
 80030d0:	4b06      	ldr	r3, [pc, #24]	; (80030ec <rt_stk_check+0x1c>)
 80030d2:	681a      	ldr	r2, [r3, #0]
 80030d4:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80030d6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80030d8:	4293      	cmp	r3, r2
 80030da:	d803      	bhi.n	80030e4 <rt_stk_check+0x14>
 80030dc:	681a      	ldr	r2, [r3, #0]
 80030de:	4b04      	ldr	r3, [pc, #16]	; (80030f0 <rt_stk_check+0x20>)
 80030e0:	429a      	cmp	r2, r3
 80030e2:	d002      	beq.n	80030ea <rt_stk_check+0x1a>
 80030e4:	2001      	movs	r0, #1
 80030e6:	f7ff bebf 	b.w	8002e68 <os_error>
 80030ea:	4770      	bx	lr
 80030ec:	200021c0 	.word	0x200021c0
 80030f0:	e25a2ea5 	.word	0xe25a2ea5

080030f4 <_init_box>:
 80030f4:	2a00      	cmp	r2, #0
 80030f6:	bfbb      	ittet	lt
 80030f8:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80030fc:	3207      	addlt	r2, #7
 80030fe:	3203      	addge	r2, #3
 8003100:	f022 0207 	biclt.w	r2, r2, #7
 8003104:	bfa8      	it	ge
 8003106:	f022 0203 	bicge.w	r2, r2, #3
 800310a:	b510      	push	{r4, lr}
 800310c:	bfb4      	ite	lt
 800310e:	2310      	movlt	r3, #16
 8003110:	230c      	movge	r3, #12
 8003112:	b192      	cbz	r2, 800313a <_init_box+0x46>
 8003114:	18d4      	adds	r4, r2, r3
 8003116:	428c      	cmp	r4, r1
 8003118:	d80f      	bhi.n	800313a <_init_box+0x46>
 800311a:	4401      	add	r1, r0
 800311c:	4403      	add	r3, r0
 800311e:	4254      	negs	r4, r2
 8003120:	6041      	str	r1, [r0, #4]
 8003122:	6003      	str	r3, [r0, #0]
 8003124:	6082      	str	r2, [r0, #8]
 8003126:	4421      	add	r1, r4
 8003128:	1898      	adds	r0, r3, r2
 800312a:	4281      	cmp	r1, r0
 800312c:	d302      	bcc.n	8003134 <_init_box+0x40>
 800312e:	5100      	str	r0, [r0, r4]
 8003130:	4603      	mov	r3, r0
 8003132:	e7f9      	b.n	8003128 <_init_box+0x34>
 8003134:	2000      	movs	r0, #0
 8003136:	6018      	str	r0, [r3, #0]
 8003138:	bd10      	pop	{r4, pc}
 800313a:	2001      	movs	r0, #1
 800313c:	bd10      	pop	{r4, pc}

0800313e <rt_alloc_box>:
 800313e:	f3ef 8310 	mrs	r3, PRIMASK
 8003142:	b672      	cpsid	i
 8003144:	6802      	ldr	r2, [r0, #0]
 8003146:	f003 0301 	and.w	r3, r3, #1
 800314a:	b10a      	cbz	r2, 8003150 <rt_alloc_box+0x12>
 800314c:	6811      	ldr	r1, [r2, #0]
 800314e:	6001      	str	r1, [r0, #0]
 8003150:	b903      	cbnz	r3, 8003154 <rt_alloc_box+0x16>
 8003152:	b662      	cpsie	i
 8003154:	4610      	mov	r0, r2
 8003156:	4770      	bx	lr

08003158 <rt_free_box>:
 8003158:	4281      	cmp	r1, r0
 800315a:	d30d      	bcc.n	8003178 <rt_free_box+0x20>
 800315c:	6843      	ldr	r3, [r0, #4]
 800315e:	4299      	cmp	r1, r3
 8003160:	d20a      	bcs.n	8003178 <rt_free_box+0x20>
 8003162:	f3ef 8310 	mrs	r3, PRIMASK
 8003166:	b672      	cpsid	i
 8003168:	6802      	ldr	r2, [r0, #0]
 800316a:	600a      	str	r2, [r1, #0]
 800316c:	6001      	str	r1, [r0, #0]
 800316e:	f013 0001 	ands.w	r0, r3, #1
 8003172:	d103      	bne.n	800317c <rt_free_box+0x24>
 8003174:	b662      	cpsie	i
 8003176:	4770      	bx	lr
 8003178:	2001      	movs	r0, #1
 800317a:	4770      	bx	lr
 800317c:	2000      	movs	r0, #0
 800317e:	4770      	bx	lr

08003180 <rt_mbx_init>:
 8003180:	2301      	movs	r3, #1
 8003182:	3910      	subs	r1, #16
 8003184:	7003      	strb	r3, [r0, #0]
 8003186:	0889      	lsrs	r1, r1, #2
 8003188:	2300      	movs	r3, #0
 800318a:	7043      	strb	r3, [r0, #1]
 800318c:	7083      	strb	r3, [r0, #2]
 800318e:	6043      	str	r3, [r0, #4]
 8003190:	8103      	strh	r3, [r0, #8]
 8003192:	8143      	strh	r3, [r0, #10]
 8003194:	8183      	strh	r3, [r0, #12]
 8003196:	81c1      	strh	r1, [r0, #14]
 8003198:	4770      	bx	lr
	...

0800319c <rt_mbx_wait>:
 800319c:	b570      	push	{r4, r5, r6, lr}
 800319e:	8985      	ldrh	r5, [r0, #12]
 80031a0:	4604      	mov	r4, r0
 80031a2:	4616      	mov	r6, r2
 80031a4:	2d00      	cmp	r5, #0
 80031a6:	d038      	beq.n	800321a <rt_mbx_wait+0x7e>
 80031a8:	8943      	ldrh	r3, [r0, #10]
 80031aa:	1d1a      	adds	r2, r3, #4
 80031ac:	3301      	adds	r3, #1
 80031ae:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80031b2:	600a      	str	r2, [r1, #0]
 80031b4:	89c2      	ldrh	r2, [r0, #14]
 80031b6:	b29b      	uxth	r3, r3
 80031b8:	429a      	cmp	r2, r3
 80031ba:	8143      	strh	r3, [r0, #10]
 80031bc:	bf04      	itt	eq
 80031be:	2300      	moveq	r3, #0
 80031c0:	8143      	strheq	r3, [r0, #10]
 80031c2:	6843      	ldr	r3, [r0, #4]
 80031c4:	b1f3      	cbz	r3, 8003204 <rt_mbx_wait+0x68>
 80031c6:	7843      	ldrb	r3, [r0, #1]
 80031c8:	2b02      	cmp	r3, #2
 80031ca:	d11b      	bne.n	8003204 <rt_mbx_wait+0x68>
 80031cc:	f7ff fd46 	bl	8002c5c <rt_get_first>
 80031d0:	2100      	movs	r1, #0
 80031d2:	4605      	mov	r5, r0
 80031d4:	f7ff fee2 	bl	8002f9c <rt_ret_val>
 80031d8:	8923      	ldrh	r3, [r4, #8]
 80031da:	69e9      	ldr	r1, [r5, #28]
 80031dc:	1d1a      	adds	r2, r3, #4
 80031de:	3301      	adds	r3, #1
 80031e0:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80031e4:	89e2      	ldrh	r2, [r4, #14]
 80031e6:	b29b      	uxth	r3, r3
 80031e8:	429a      	cmp	r2, r3
 80031ea:	8123      	strh	r3, [r4, #8]
 80031ec:	bf08      	it	eq
 80031ee:	2300      	moveq	r3, #0
 80031f0:	4628      	mov	r0, r5
 80031f2:	bf08      	it	eq
 80031f4:	8123      	strheq	r3, [r4, #8]
 80031f6:	f7ff fdd7 	bl	8002da8 <rt_rmv_dly>
 80031fa:	4628      	mov	r0, r5
 80031fc:	f000 fc9c 	bl	8003b38 <rt_dispatch>
 8003200:	2000      	movs	r0, #0
 8003202:	bd70      	pop	{r4, r5, r6, pc}
 8003204:	f3ef 8010 	mrs	r0, PRIMASK
 8003208:	f3ef 8310 	mrs	r3, PRIMASK
 800320c:	b672      	cpsid	i
 800320e:	3d01      	subs	r5, #1
 8003210:	81a5      	strh	r5, [r4, #12]
 8003212:	2800      	cmp	r0, #0
 8003214:	d1f4      	bne.n	8003200 <rt_mbx_wait+0x64>
 8003216:	b662      	cpsie	i
 8003218:	bd70      	pop	{r4, r5, r6, pc}
 800321a:	b14a      	cbz	r2, 8003230 <rt_mbx_wait+0x94>
 800321c:	6842      	ldr	r2, [r0, #4]
 800321e:	4b09      	ldr	r3, [pc, #36]	; (8003244 <rt_mbx_wait+0xa8>)
 8003220:	b142      	cbz	r2, 8003234 <rt_mbx_wait+0x98>
 8003222:	6819      	ldr	r1, [r3, #0]
 8003224:	f7ff fd02 	bl	8002c2c <rt_put_prio>
 8003228:	2108      	movs	r1, #8
 800322a:	4630      	mov	r0, r6
 800322c:	f000 fca8 	bl	8003b80 <rt_block>
 8003230:	2001      	movs	r0, #1
 8003232:	bd70      	pop	{r4, r5, r6, pc}
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	6043      	str	r3, [r0, #4]
 8003238:	605a      	str	r2, [r3, #4]
 800323a:	6098      	str	r0, [r3, #8]
 800323c:	2301      	movs	r3, #1
 800323e:	7043      	strb	r3, [r0, #1]
 8003240:	e7f2      	b.n	8003228 <rt_mbx_wait+0x8c>
 8003242:	bf00      	nop
 8003244:	200021c0 	.word	0x200021c0

08003248 <rt_mbx_check>:
 8003248:	89c2      	ldrh	r2, [r0, #14]
 800324a:	8980      	ldrh	r0, [r0, #12]
 800324c:	1a10      	subs	r0, r2, r0
 800324e:	4770      	bx	lr

08003250 <isr_mbx_send>:
 8003250:	b508      	push	{r3, lr}
 8003252:	f7ff fdbd 	bl	8002dd0 <rt_psq_enq>
 8003256:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800325a:	f7ff beb3 	b.w	8002fc4 <rt_psh_req>

0800325e <isr_mbx_receive>:
 800325e:	8983      	ldrh	r3, [r0, #12]
 8003260:	b510      	push	{r4, lr}
 8003262:	4604      	mov	r4, r0
 8003264:	b30b      	cbz	r3, 80032aa <isr_mbx_receive+0x4c>
 8003266:	8943      	ldrh	r3, [r0, #10]
 8003268:	3304      	adds	r3, #4
 800326a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800326e:	600b      	str	r3, [r1, #0]
 8003270:	7843      	ldrb	r3, [r0, #1]
 8003272:	2b02      	cmp	r3, #2
 8003274:	d104      	bne.n	8003280 <isr_mbx_receive+0x22>
 8003276:	2100      	movs	r1, #0
 8003278:	f7ff fdaa 	bl	8002dd0 <rt_psq_enq>
 800327c:	f7ff fea2 	bl	8002fc4 <rt_psh_req>
 8003280:	f3ef 8310 	mrs	r3, PRIMASK
 8003284:	f3ef 8210 	mrs	r2, PRIMASK
 8003288:	b672      	cpsid	i
 800328a:	89a2      	ldrh	r2, [r4, #12]
 800328c:	3a01      	subs	r2, #1
 800328e:	81a2      	strh	r2, [r4, #12]
 8003290:	b903      	cbnz	r3, 8003294 <isr_mbx_receive+0x36>
 8003292:	b662      	cpsie	i
 8003294:	8963      	ldrh	r3, [r4, #10]
 8003296:	89e2      	ldrh	r2, [r4, #14]
 8003298:	3301      	adds	r3, #1
 800329a:	b29b      	uxth	r3, r3
 800329c:	429a      	cmp	r2, r3
 800329e:	8163      	strh	r3, [r4, #10]
 80032a0:	d101      	bne.n	80032a6 <isr_mbx_receive+0x48>
 80032a2:	2300      	movs	r3, #0
 80032a4:	8163      	strh	r3, [r4, #10]
 80032a6:	2004      	movs	r0, #4
 80032a8:	bd10      	pop	{r4, pc}
 80032aa:	4618      	mov	r0, r3
 80032ac:	bd10      	pop	{r4, pc}
	...

080032b0 <rt_mbx_psh>:
 80032b0:	6843      	ldr	r3, [r0, #4]
 80032b2:	b570      	push	{r4, r5, r6, lr}
 80032b4:	4604      	mov	r4, r0
 80032b6:	460e      	mov	r6, r1
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d04b      	beq.n	8003354 <rt_mbx_psh+0xa4>
 80032bc:	7845      	ldrb	r5, [r0, #1]
 80032be:	2d02      	cmp	r5, #2
 80032c0:	d020      	beq.n	8003304 <rt_mbx_psh+0x54>
 80032c2:	2d03      	cmp	r5, #3
 80032c4:	d00a      	beq.n	80032dc <rt_mbx_psh+0x2c>
 80032c6:	2d01      	cmp	r5, #1
 80032c8:	d161      	bne.n	800338e <rt_mbx_psh+0xde>
 80032ca:	f7ff fcc7 	bl	8002c5c <rt_get_first>
 80032ce:	4604      	mov	r4, r0
 80032d0:	4632      	mov	r2, r6
 80032d2:	2110      	movs	r1, #16
 80032d4:	f7ff fe6b 	bl	8002fae <rt_ret_val2>
 80032d8:	7065      	strb	r5, [r4, #1]
 80032da:	e00e      	b.n	80032fa <rt_mbx_psh+0x4a>
 80032dc:	4608      	mov	r0, r1
 80032de:	f7ff ff2e 	bl	800313e <rt_alloc_box>
 80032e2:	4605      	mov	r5, r0
 80032e4:	2800      	cmp	r0, #0
 80032e6:	d052      	beq.n	800338e <rt_mbx_psh+0xde>
 80032e8:	4620      	mov	r0, r4
 80032ea:	f7ff fcb7 	bl	8002c5c <rt_get_first>
 80032ee:	4629      	mov	r1, r5
 80032f0:	4604      	mov	r4, r0
 80032f2:	f7ff fe53 	bl	8002f9c <rt_ret_val>
 80032f6:	2301      	movs	r3, #1
 80032f8:	7063      	strb	r3, [r4, #1]
 80032fa:	4620      	mov	r0, r4
 80032fc:	f7ff fd54 	bl	8002da8 <rt_rmv_dly>
 8003300:	4621      	mov	r1, r4
 8003302:	e022      	b.n	800334a <rt_mbx_psh+0x9a>
 8003304:	f7ff fcaa 	bl	8002c5c <rt_get_first>
 8003308:	2100      	movs	r1, #0
 800330a:	4605      	mov	r5, r0
 800330c:	f7ff fe46 	bl	8002f9c <rt_ret_val>
 8003310:	8923      	ldrh	r3, [r4, #8]
 8003312:	69e9      	ldr	r1, [r5, #28]
 8003314:	1d1a      	adds	r2, r3, #4
 8003316:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 800331a:	f3ef 8210 	mrs	r2, PRIMASK
 800331e:	f3ef 8110 	mrs	r1, PRIMASK
 8003322:	b672      	cpsid	i
 8003324:	89a1      	ldrh	r1, [r4, #12]
 8003326:	3101      	adds	r1, #1
 8003328:	81a1      	strh	r1, [r4, #12]
 800332a:	b902      	cbnz	r2, 800332e <rt_mbx_psh+0x7e>
 800332c:	b662      	cpsie	i
 800332e:	89e2      	ldrh	r2, [r4, #14]
 8003330:	3301      	adds	r3, #1
 8003332:	b29b      	uxth	r3, r3
 8003334:	429a      	cmp	r2, r3
 8003336:	8123      	strh	r3, [r4, #8]
 8003338:	bf04      	itt	eq
 800333a:	2300      	moveq	r3, #0
 800333c:	8123      	strheq	r3, [r4, #8]
 800333e:	2301      	movs	r3, #1
 8003340:	706b      	strb	r3, [r5, #1]
 8003342:	4628      	mov	r0, r5
 8003344:	f7ff fd30 	bl	8002da8 <rt_rmv_dly>
 8003348:	4629      	mov	r1, r5
 800334a:	4811      	ldr	r0, [pc, #68]	; (8003390 <rt_mbx_psh+0xe0>)
 800334c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003350:	f7ff bc6c 	b.w	8002c2c <rt_put_prio>
 8003354:	8980      	ldrh	r0, [r0, #12]
 8003356:	89e1      	ldrh	r1, [r4, #14]
 8003358:	4288      	cmp	r0, r1
 800335a:	d213      	bcs.n	8003384 <rt_mbx_psh+0xd4>
 800335c:	8923      	ldrh	r3, [r4, #8]
 800335e:	1d1a      	adds	r2, r3, #4
 8003360:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8003364:	f3ef 8210 	mrs	r2, PRIMASK
 8003368:	f3ef 8510 	mrs	r5, PRIMASK
 800336c:	b672      	cpsid	i
 800336e:	3001      	adds	r0, #1
 8003370:	81a0      	strh	r0, [r4, #12]
 8003372:	b902      	cbnz	r2, 8003376 <rt_mbx_psh+0xc6>
 8003374:	b662      	cpsie	i
 8003376:	3301      	adds	r3, #1
 8003378:	b29b      	uxth	r3, r3
 800337a:	4299      	cmp	r1, r3
 800337c:	bf08      	it	eq
 800337e:	2300      	moveq	r3, #0
 8003380:	8123      	strh	r3, [r4, #8]
 8003382:	bd70      	pop	{r4, r5, r6, pc}
 8003384:	2003      	movs	r0, #3
 8003386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800338a:	f7ff bd6d 	b.w	8002e68 <os_error>
 800338e:	bd70      	pop	{r4, r5, r6, pc}
 8003390:	200017a8 	.word	0x200017a8

08003394 <rt_evt_psh>:
 8003394:	b510      	push	{r4, lr}
 8003396:	8b03      	ldrh	r3, [r0, #24]
 8003398:	7842      	ldrb	r2, [r0, #1]
 800339a:	4319      	orrs	r1, r3
 800339c:	2a06      	cmp	r2, #6
 800339e:	4604      	mov	r4, r0
 80033a0:	8301      	strh	r1, [r0, #24]
 80033a2:	8b43      	ldrh	r3, [r0, #26]
 80033a4:	d115      	bne.n	80033d2 <rt_evt_psh+0x3e>
 80033a6:	ea33 0201 	bics.w	r2, r3, r1
 80033aa:	d119      	bne.n	80033e0 <rt_evt_psh+0x4c>
 80033ac:	ea21 0103 	bic.w	r1, r1, r3
 80033b0:	8321      	strh	r1, [r4, #24]
 80033b2:	4620      	mov	r0, r4
 80033b4:	f7ff fcf8 	bl	8002da8 <rt_rmv_dly>
 80033b8:	2301      	movs	r3, #1
 80033ba:	4620      	mov	r0, r4
 80033bc:	7063      	strb	r3, [r4, #1]
 80033be:	8b62      	ldrh	r2, [r4, #26]
 80033c0:	2108      	movs	r1, #8
 80033c2:	f7ff fdf4 	bl	8002fae <rt_ret_val2>
 80033c6:	4621      	mov	r1, r4
 80033c8:	4806      	ldr	r0, [pc, #24]	; (80033e4 <rt_evt_psh+0x50>)
 80033ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033ce:	f7ff bc2d 	b.w	8002c2c <rt_put_prio>
 80033d2:	2a05      	cmp	r2, #5
 80033d4:	d104      	bne.n	80033e0 <rt_evt_psh+0x4c>
 80033d6:	ea11 0203 	ands.w	r2, r1, r3
 80033da:	d001      	beq.n	80033e0 <rt_evt_psh+0x4c>
 80033dc:	8342      	strh	r2, [r0, #26]
 80033de:	e7e5      	b.n	80033ac <rt_evt_psh+0x18>
 80033e0:	bd10      	pop	{r4, pc}
 80033e2:	bf00      	nop
 80033e4:	200017a8 	.word	0x200017a8

080033e8 <rt_init_robin>:
 80033e8:	4b03      	ldr	r3, [pc, #12]	; (80033f8 <rt_init_robin+0x10>)
 80033ea:	2200      	movs	r2, #0
 80033ec:	601a      	str	r2, [r3, #0]
 80033ee:	4a03      	ldr	r2, [pc, #12]	; (80033fc <rt_init_robin+0x14>)
 80033f0:	6812      	ldr	r2, [r2, #0]
 80033f2:	80da      	strh	r2, [r3, #6]
 80033f4:	4770      	bx	lr
 80033f6:	bf00      	nop
 80033f8:	200021a8 	.word	0x200021a8
 80033fc:	08008ec0 	.word	0x08008ec0

08003400 <rt_chk_robin>:
 8003400:	b508      	push	{r3, lr}
 8003402:	4b0e      	ldr	r3, [pc, #56]	; (800343c <rt_chk_robin+0x3c>)
 8003404:	685a      	ldr	r2, [r3, #4]
 8003406:	4b0e      	ldr	r3, [pc, #56]	; (8003440 <rt_chk_robin+0x40>)
 8003408:	6819      	ldr	r1, [r3, #0]
 800340a:	4291      	cmp	r1, r2
 800340c:	490d      	ldr	r1, [pc, #52]	; (8003444 <rt_chk_robin+0x44>)
 800340e:	d005      	beq.n	800341c <rt_chk_robin+0x1c>
 8003410:	601a      	str	r2, [r3, #0]
 8003412:	88da      	ldrh	r2, [r3, #6]
 8003414:	6808      	ldr	r0, [r1, #0]
 8003416:	3a01      	subs	r2, #1
 8003418:	4402      	add	r2, r0
 800341a:	809a      	strh	r2, [r3, #4]
 800341c:	8898      	ldrh	r0, [r3, #4]
 800341e:	880a      	ldrh	r2, [r1, #0]
 8003420:	4290      	cmp	r0, r2
 8003422:	d10a      	bne.n	800343a <rt_chk_robin+0x3a>
 8003424:	2200      	movs	r2, #0
 8003426:	4805      	ldr	r0, [pc, #20]	; (800343c <rt_chk_robin+0x3c>)
 8003428:	601a      	str	r2, [r3, #0]
 800342a:	f7ff fc17 	bl	8002c5c <rt_get_first>
 800342e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003432:	4601      	mov	r1, r0
 8003434:	4801      	ldr	r0, [pc, #4]	; (800343c <rt_chk_robin+0x3c>)
 8003436:	f7ff bbf9 	b.w	8002c2c <rt_put_prio>
 800343a:	bd08      	pop	{r3, pc}
 800343c:	200017a8 	.word	0x200017a8
 8003440:	200021a8 	.word	0x200021a8
 8003444:	20002208 	.word	0x20002208

08003448 <rt_timer_insert>:
 8003448:	4a0b      	ldr	r2, [pc, #44]	; (8003478 <rt_timer_insert+0x30>)
 800344a:	6813      	ldr	r3, [r2, #0]
 800344c:	b530      	push	{r4, r5, lr}
 800344e:	2400      	movs	r4, #0
 8003450:	b943      	cbnz	r3, 8003464 <rt_timer_insert+0x1c>
 8003452:	6003      	str	r3, [r0, #0]
 8003454:	6081      	str	r1, [r0, #8]
 8003456:	b113      	cbz	r3, 800345e <rt_timer_insert+0x16>
 8003458:	689d      	ldr	r5, [r3, #8]
 800345a:	1a69      	subs	r1, r5, r1
 800345c:	6099      	str	r1, [r3, #8]
 800345e:	b144      	cbz	r4, 8003472 <rt_timer_insert+0x2a>
 8003460:	6020      	str	r0, [r4, #0]
 8003462:	bd30      	pop	{r4, r5, pc}
 8003464:	689d      	ldr	r5, [r3, #8]
 8003466:	42a9      	cmp	r1, r5
 8003468:	d3f3      	bcc.n	8003452 <rt_timer_insert+0xa>
 800346a:	461c      	mov	r4, r3
 800346c:	1b49      	subs	r1, r1, r5
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	e7ee      	b.n	8003450 <rt_timer_insert+0x8>
 8003472:	6010      	str	r0, [r2, #0]
 8003474:	bd30      	pop	{r4, r5, pc}
 8003476:	bf00      	nop
 8003478:	200021b8 	.word	0x200021b8

0800347c <rt_ms2tick>:
 800347c:	b1c0      	cbz	r0, 80034b0 <rt_ms2tick+0x34>
 800347e:	1c43      	adds	r3, r0, #1
 8003480:	d011      	beq.n	80034a6 <rt_ms2tick+0x2a>
 8003482:	4b0c      	ldr	r3, [pc, #48]	; (80034b4 <rt_ms2tick+0x38>)
 8003484:	4298      	cmp	r0, r3
 8003486:	d811      	bhi.n	80034ac <rt_ms2tick+0x30>
 8003488:	4b0b      	ldr	r3, [pc, #44]	; (80034b8 <rt_ms2tick+0x3c>)
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003490:	1e5a      	subs	r2, r3, #1
 8003492:	fb01 2000 	mla	r0, r1, r0, r2
 8003496:	fbb0 f3f3 	udiv	r3, r0, r3
 800349a:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 800349e:	4283      	cmp	r3, r0
 80034a0:	d806      	bhi.n	80034b0 <rt_ms2tick+0x34>
 80034a2:	b298      	uxth	r0, r3
 80034a4:	4770      	bx	lr
 80034a6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80034aa:	4770      	bx	lr
 80034ac:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 80034b0:	4770      	bx	lr
 80034b2:	bf00      	nop
 80034b4:	003d0900 	.word	0x003d0900
 80034b8:	08008e78 	.word	0x08008e78

080034bc <rt_tid2ptcb>:
 80034bc:	b138      	cbz	r0, 80034ce <rt_tid2ptcb+0x12>
 80034be:	0783      	lsls	r3, r0, #30
 80034c0:	d104      	bne.n	80034cc <rt_tid2ptcb+0x10>
 80034c2:	7803      	ldrb	r3, [r0, #0]
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	bf18      	it	ne
 80034c8:	2000      	movne	r0, #0
 80034ca:	4770      	bx	lr
 80034cc:	2000      	movs	r0, #0
 80034ce:	4770      	bx	lr

080034d0 <svcKernelStart>:
 80034d0:	b5b0      	push	{r4, r5, r7, lr}
 80034d2:	4d0e      	ldr	r5, [pc, #56]	; (800350c <svcKernelStart+0x3c>)
 80034d4:	7828      	ldrb	r0, [r5, #0]
 80034d6:	af00      	add	r7, sp, #0
 80034d8:	b9a8      	cbnz	r0, 8003506 <svcKernelStart+0x36>
 80034da:	4c0d      	ldr	r4, [pc, #52]	; (8003510 <svcKernelStart+0x40>)
 80034dc:	6823      	ldr	r3, [r4, #0]
 80034de:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 80034e2:	f000 fb6f 	bl	8003bc4 <rt_tsk_prio>
 80034e6:	6823      	ldr	r3, [r4, #0]
 80034e8:	78da      	ldrb	r2, [r3, #3]
 80034ea:	2aff      	cmp	r2, #255	; 0xff
 80034ec:	d103      	bne.n	80034f6 <svcKernelStart+0x26>
 80034ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80034f0:	3220      	adds	r2, #32
 80034f2:	f382 8809 	msr	PSP, r2
 80034f6:	6862      	ldr	r2, [r4, #4]
 80034f8:	b90a      	cbnz	r2, 80034fe <svcKernelStart+0x2e>
 80034fa:	e884 000c 	stmia.w	r4, {r2, r3}
 80034fe:	f000 fd19 	bl	8003f34 <rt_sys_start>
 8003502:	2301      	movs	r3, #1
 8003504:	702b      	strb	r3, [r5, #0]
 8003506:	2000      	movs	r0, #0
 8003508:	bdb0      	pop	{r4, r5, r7, pc}
 800350a:	bf00      	nop
 800350c:	200021bc 	.word	0x200021bc
 8003510:	200021c0 	.word	0x200021c0

08003514 <svcKernelRunning>:
 8003514:	4b01      	ldr	r3, [pc, #4]	; (800351c <svcKernelRunning+0x8>)
 8003516:	7818      	ldrb	r0, [r3, #0]
 8003518:	4770      	bx	lr
 800351a:	bf00      	nop
 800351c:	200021bc 	.word	0x200021bc

08003520 <osKernelRunning>:
 8003520:	b510      	push	{r4, lr}
 8003522:	f3ef 8410 	mrs	r4, PRIMASK
 8003526:	b934      	cbnz	r4, 8003536 <osKernelRunning+0x16>
 8003528:	f3ef 8405 	mrs	r4, IPSR
 800352c:	b91c      	cbnz	r4, 8003536 <osKernelRunning+0x16>
 800352e:	f3ef 8414 	mrs	r4, CONTROL
 8003532:	07e4      	lsls	r4, r4, #31
 8003534:	d402      	bmi.n	800353c <osKernelRunning+0x1c>
 8003536:	4b03      	ldr	r3, [pc, #12]	; (8003544 <osKernelRunning+0x24>)
 8003538:	7818      	ldrb	r0, [r3, #0]
 800353a:	bd10      	pop	{r4, pc}
 800353c:	f8df c008 	ldr.w	r12, [pc, #8]	; 8003548 <osKernelRunning+0x28>
 8003540:	df00      	svc	0
 8003542:	bd10      	pop	{r4, pc}
 8003544:	200021bc 	.word	0x200021bc
 8003548:	08003515 	.word	0x08003515

0800354c <osKernelStart>:
 800354c:	b590      	push	{r4, r7, lr}
 800354e:	b089      	sub	sp, #36	; 0x24
 8003550:	af00      	add	r7, sp, #0
 8003552:	f3ef 8310 	mrs	r3, PRIMASK
 8003556:	2b00      	cmp	r3, #0
 8003558:	d137      	bne.n	80035ca <osKernelStart+0x7e>
 800355a:	f3ef 8305 	mrs	r3, IPSR
 800355e:	2b00      	cmp	r3, #0
 8003560:	d133      	bne.n	80035ca <osKernelStart+0x7e>
 8003562:	f7ff ffdd 	bl	8003520 <osKernelRunning>
 8003566:	b928      	cbnz	r0, 8003574 <osKernelStart+0x28>
 8003568:	4c19      	ldr	r4, [pc, #100]	; (80035d0 <osKernelStart+0x84>)
 800356a:	6824      	ldr	r4, [r4, #0]
 800356c:	b114      	cbz	r4, 8003574 <osKernelStart+0x28>
 800356e:	6864      	ldr	r4, [r4, #4]
 8003570:	b104      	cbz	r4, 8003574 <osKernelStart+0x28>
 8003572:	47a0      	blx	r4
 8003574:	f3ef 8414 	mrs	r4, CONTROL
 8003578:	f004 0403 	and.w	r4, r4, #3
 800357c:	2c02      	cmp	r4, #2
 800357e:	d018      	beq.n	80035b2 <osKernelStart+0x66>
 8003580:	2c03      	cmp	r4, #3
 8003582:	d01c      	beq.n	80035be <osKernelStart+0x72>
 8003584:	2c01      	cmp	r4, #1
 8003586:	d01e      	beq.n	80035c6 <osKernelStart+0x7a>
 8003588:	f107 0420 	add.w	r4, r7, #32
 800358c:	f384 8809 	msr	PSP, r4
 8003590:	4c10      	ldr	r4, [pc, #64]	; (80035d4 <osKernelStart+0x88>)
 8003592:	7824      	ldrb	r4, [r4, #0]
 8003594:	07e4      	lsls	r4, r4, #31
 8003596:	d510      	bpl.n	80035ba <osKernelStart+0x6e>
 8003598:	2402      	movs	r4, #2
 800359a:	f384 8814 	msr	CONTROL, r4
 800359e:	f3bf 8f4f 	dsb	sy
 80035a2:	f3bf 8f6f 	isb	sy
 80035a6:	f8df c030 	ldr.w	r12, [pc, #48]	; 80035d8 <osKernelStart+0x8c>
 80035aa:	df00      	svc	0
 80035ac:	3724      	adds	r7, #36	; 0x24
 80035ae:	46bd      	mov	sp, r7
 80035b0:	bd90      	pop	{r4, r7, pc}
 80035b2:	4c08      	ldr	r4, [pc, #32]	; (80035d4 <osKernelStart+0x88>)
 80035b4:	7824      	ldrb	r4, [r4, #0]
 80035b6:	07e4      	lsls	r4, r4, #31
 80035b8:	d4f5      	bmi.n	80035a6 <osKernelStart+0x5a>
 80035ba:	2403      	movs	r4, #3
 80035bc:	e7ed      	b.n	800359a <osKernelStart+0x4e>
 80035be:	4c05      	ldr	r4, [pc, #20]	; (80035d4 <osKernelStart+0x88>)
 80035c0:	7824      	ldrb	r4, [r4, #0]
 80035c2:	07e4      	lsls	r4, r4, #31
 80035c4:	d5ef      	bpl.n	80035a6 <osKernelStart+0x5a>
 80035c6:	20ff      	movs	r0, #255	; 0xff
 80035c8:	e7f0      	b.n	80035ac <osKernelStart+0x60>
 80035ca:	2082      	movs	r0, #130	; 0x82
 80035cc:	e7ee      	b.n	80035ac <osKernelStart+0x60>
 80035ce:	bf00      	nop
 80035d0:	200021a4 	.word	0x200021a4
 80035d4:	08008ea6 	.word	0x08008ea6
 80035d8:	080034d1 	.word	0x080034d1

080035dc <svcThreadCreate>:
 80035dc:	b570      	push	{r4, r5, r6, lr}
 80035de:	460b      	mov	r3, r1
 80035e0:	4616      	mov	r6, r2
 80035e2:	4602      	mov	r2, r0
 80035e4:	b910      	cbnz	r0, 80035ec <svcThreadCreate+0x10>
 80035e6:	2400      	movs	r4, #0
 80035e8:	4620      	mov	r0, r4
 80035ea:	bd70      	pop	{r4, r5, r6, pc}
 80035ec:	6800      	ldr	r0, [r0, #0]
 80035ee:	2800      	cmp	r0, #0
 80035f0:	d0f9      	beq.n	80035e6 <svcThreadCreate+0xa>
 80035f2:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80035f6:	1ce5      	adds	r5, r4, #3
 80035f8:	b2ad      	uxth	r5, r5
 80035fa:	2d06      	cmp	r5, #6
 80035fc:	d8f3      	bhi.n	80035e6 <svcThreadCreate+0xa>
 80035fe:	68d1      	ldr	r1, [r2, #12]
 8003600:	b1c1      	cbz	r1, 8003634 <svcThreadCreate+0x58>
 8003602:	6912      	ldr	r2, [r2, #16]
 8003604:	3404      	adds	r4, #4
 8003606:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 800360a:	f000 fb19 	bl	8003c40 <rt_tsk_create>
 800360e:	2800      	cmp	r0, #0
 8003610:	d0e9      	beq.n	80035e6 <svcThreadCreate+0xa>
 8003612:	4b0a      	ldr	r3, [pc, #40]	; (800363c <svcThreadCreate+0x60>)
 8003614:	4a0a      	ldr	r2, [pc, #40]	; (8003640 <svcThreadCreate+0x64>)
 8003616:	3801      	subs	r0, #1
 8003618:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800361c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800361e:	635a      	str	r2, [r3, #52]	; 0x34
 8003620:	4b08      	ldr	r3, [pc, #32]	; (8003644 <svcThreadCreate+0x68>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	b143      	cbz	r3, 8003638 <svcThreadCreate+0x5c>
 8003626:	689b      	ldr	r3, [r3, #8]
 8003628:	b133      	cbz	r3, 8003638 <svcThreadCreate+0x5c>
 800362a:	4631      	mov	r1, r6
 800362c:	78e0      	ldrb	r0, [r4, #3]
 800362e:	4798      	blx	r3
 8003630:	63e0      	str	r0, [r4, #60]	; 0x3c
 8003632:	e7d9      	b.n	80035e8 <svcThreadCreate+0xc>
 8003634:	460a      	mov	r2, r1
 8003636:	e7e5      	b.n	8003604 <svcThreadCreate+0x28>
 8003638:	63e6      	str	r6, [r4, #60]	; 0x3c
 800363a:	e7d5      	b.n	80035e8 <svcThreadCreate+0xc>
 800363c:	20001afc 	.word	0x20001afc
 8003640:	080037e5 	.word	0x080037e5
 8003644:	200021a4 	.word	0x200021a4

08003648 <svcThreadGetId>:
 8003648:	b508      	push	{r3, lr}
 800364a:	f000 fab3 	bl	8003bb4 <rt_tsk_self>
 800364e:	b118      	cbz	r0, 8003658 <svcThreadGetId+0x10>
 8003650:	3801      	subs	r0, #1
 8003652:	4b02      	ldr	r3, [pc, #8]	; (800365c <svcThreadGetId+0x14>)
 8003654:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003658:	bd08      	pop	{r3, pc}
 800365a:	bf00      	nop
 800365c:	20001afc 	.word	0x20001afc

08003660 <svcThreadTerminate>:
 8003660:	b510      	push	{r4, lr}
 8003662:	f7ff ff2b 	bl	80034bc <rt_tid2ptcb>
 8003666:	4604      	mov	r4, r0
 8003668:	b170      	cbz	r0, 8003688 <svcThreadTerminate+0x28>
 800366a:	4b08      	ldr	r3, [pc, #32]	; (800368c <svcThreadTerminate+0x2c>)
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	b11b      	cbz	r3, 8003678 <svcThreadTerminate+0x18>
 8003670:	68db      	ldr	r3, [r3, #12]
 8003672:	b10b      	cbz	r3, 8003678 <svcThreadTerminate+0x18>
 8003674:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003676:	4798      	blx	r3
 8003678:	78e0      	ldrb	r0, [r4, #3]
 800367a:	f000 fb37 	bl	8003cec <rt_tsk_delete>
 800367e:	28ff      	cmp	r0, #255	; 0xff
 8003680:	bf0c      	ite	eq
 8003682:	2081      	moveq	r0, #129	; 0x81
 8003684:	2000      	movne	r0, #0
 8003686:	bd10      	pop	{r4, pc}
 8003688:	2080      	movs	r0, #128	; 0x80
 800368a:	bd10      	pop	{r4, pc}
 800368c:	200021a4 	.word	0x200021a4

08003690 <svcDelay>:
 8003690:	b508      	push	{r3, lr}
 8003692:	b128      	cbz	r0, 80036a0 <svcDelay+0x10>
 8003694:	f7ff fef2 	bl	800347c <rt_ms2tick>
 8003698:	f000 fd8e 	bl	80041b8 <rt_dly_wait>
 800369c:	2040      	movs	r0, #64	; 0x40
 800369e:	bd08      	pop	{r3, pc}
 80036a0:	bd08      	pop	{r3, pc}
	...

080036a4 <osDelay>:
 80036a4:	b510      	push	{r4, lr}
 80036a6:	f3ef 8410 	mrs	r4, PRIMASK
 80036aa:	b934      	cbnz	r4, 80036ba <osDelay+0x16>
 80036ac:	f3ef 8405 	mrs	r4, IPSR
 80036b0:	b91c      	cbnz	r4, 80036ba <osDelay+0x16>
 80036b2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80036c0 <osDelay+0x1c>
 80036b6:	df00      	svc	0
 80036b8:	bd10      	pop	{r4, pc}
 80036ba:	2082      	movs	r0, #130	; 0x82
 80036bc:	bd10      	pop	{r4, pc}
 80036be:	0000      	.short	0x0000
 80036c0:	08003691 	.word	0x08003691

080036c4 <svcTimerCall>:
 80036c4:	0783      	lsls	r3, r0, #30
 80036c6:	d105      	bne.n	80036d4 <svcTimerCall+0x10>
 80036c8:	b138      	cbz	r0, 80036da <svcTimerCall+0x16>
 80036ca:	6943      	ldr	r3, [r0, #20]
 80036cc:	6901      	ldr	r1, [r0, #16]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	4618      	mov	r0, r3
 80036d2:	4770      	bx	lr
 80036d4:	2300      	movs	r3, #0
 80036d6:	4619      	mov	r1, r3
 80036d8:	e7fa      	b.n	80036d0 <svcTimerCall+0xc>
 80036da:	4603      	mov	r3, r0
 80036dc:	e7fb      	b.n	80036d6 <svcTimerCall+0x12>
	...

080036e0 <osTimerCall>:
 80036e0:	b510      	push	{r4, lr}
 80036e2:	4604      	mov	r4, r0
 80036e4:	4608      	mov	r0, r1
 80036e6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80036f4 <osTimerCall+0x14>
 80036ea:	df00      	svc	0
 80036ec:	e884 0003 	stmia.w	r4, {r0, r1}
 80036f0:	4620      	mov	r0, r4
 80036f2:	bd10      	pop	{r4, pc}
 80036f4:	080036c5 	.word	0x080036c5

080036f8 <svcMutexCreate>:
 80036f8:	b510      	push	{r4, lr}
 80036fa:	b148      	cbz	r0, 8003710 <svcMutexCreate+0x18>
 80036fc:	6804      	ldr	r4, [r0, #0]
 80036fe:	b124      	cbz	r4, 800370a <svcMutexCreate+0x12>
 8003700:	7823      	ldrb	r3, [r4, #0]
 8003702:	b923      	cbnz	r3, 800370e <svcMutexCreate+0x16>
 8003704:	4620      	mov	r0, r4
 8003706:	f000 fc5b 	bl	8003fc0 <rt_mut_init>
 800370a:	4620      	mov	r0, r4
 800370c:	bd10      	pop	{r4, pc}
 800370e:	2000      	movs	r0, #0
 8003710:	bd10      	pop	{r4, pc}

08003712 <svcMutexWait>:
 8003712:	b570      	push	{r4, r5, r6, lr}
 8003714:	f010 0403 	ands.w	r4, r0, #3
 8003718:	4605      	mov	r5, r0
 800371a:	460e      	mov	r6, r1
 800371c:	d111      	bne.n	8003742 <svcMutexWait+0x30>
 800371e:	b180      	cbz	r0, 8003742 <svcMutexWait+0x30>
 8003720:	7803      	ldrb	r3, [r0, #0]
 8003722:	2b03      	cmp	r3, #3
 8003724:	d10d      	bne.n	8003742 <svcMutexWait+0x30>
 8003726:	4608      	mov	r0, r1
 8003728:	f7ff fea8 	bl	800347c <rt_ms2tick>
 800372c:	4601      	mov	r1, r0
 800372e:	4628      	mov	r0, r5
 8003730:	f000 fd14 	bl	800415c <rt_mut_wait>
 8003734:	2801      	cmp	r0, #1
 8003736:	d106      	bne.n	8003746 <svcMutexWait+0x34>
 8003738:	2e00      	cmp	r6, #0
 800373a:	bf14      	ite	ne
 800373c:	20c1      	movne	r0, #193	; 0xc1
 800373e:	2081      	moveq	r0, #129	; 0x81
 8003740:	bd70      	pop	{r4, r5, r6, pc}
 8003742:	2080      	movs	r0, #128	; 0x80
 8003744:	bd70      	pop	{r4, r5, r6, pc}
 8003746:	4620      	mov	r0, r4
 8003748:	bd70      	pop	{r4, r5, r6, pc}

0800374a <svcMutexRelease>:
 800374a:	0782      	lsls	r2, r0, #30
 800374c:	b508      	push	{r3, lr}
 800374e:	d10a      	bne.n	8003766 <svcMutexRelease+0x1c>
 8003750:	b148      	cbz	r0, 8003766 <svcMutexRelease+0x1c>
 8003752:	7803      	ldrb	r3, [r0, #0]
 8003754:	2b03      	cmp	r3, #3
 8003756:	d106      	bne.n	8003766 <svcMutexRelease+0x1c>
 8003758:	f000 fc90 	bl	800407c <rt_mut_release>
 800375c:	28ff      	cmp	r0, #255	; 0xff
 800375e:	bf0c      	ite	eq
 8003760:	2081      	moveq	r0, #129	; 0x81
 8003762:	2000      	movne	r0, #0
 8003764:	bd08      	pop	{r3, pc}
 8003766:	2080      	movs	r0, #128	; 0x80
 8003768:	bd08      	pop	{r3, pc}

0800376a <svcMutexDelete>:
 800376a:	b510      	push	{r4, lr}
 800376c:	f010 0403 	ands.w	r4, r0, #3
 8003770:	d107      	bne.n	8003782 <svcMutexDelete+0x18>
 8003772:	b130      	cbz	r0, 8003782 <svcMutexDelete+0x18>
 8003774:	7803      	ldrb	r3, [r0, #0]
 8003776:	2b03      	cmp	r3, #3
 8003778:	d103      	bne.n	8003782 <svcMutexDelete+0x18>
 800377a:	f000 fc29 	bl	8003fd0 <rt_mut_delete>
 800377e:	4620      	mov	r0, r4
 8003780:	bd10      	pop	{r4, pc}
 8003782:	2080      	movs	r0, #128	; 0x80
 8003784:	bd10      	pop	{r4, pc}
	...

08003788 <osMutexCreate>:
 8003788:	b570      	push	{r4, r5, r6, lr}
 800378a:	4605      	mov	r5, r0
 800378c:	f3ef 8410 	mrs	r4, PRIMASK
 8003790:	b994      	cbnz	r4, 80037b8 <osMutexCreate+0x30>
 8003792:	f3ef 8605 	mrs	r6, IPSR
 8003796:	b97e      	cbnz	r6, 80037b8 <osMutexCreate+0x30>
 8003798:	f3ef 8414 	mrs	r4, CONTROL
 800379c:	07e4      	lsls	r4, r4, #31
 800379e:	d406      	bmi.n	80037ae <osMutexCreate+0x26>
 80037a0:	4c06      	ldr	r4, [pc, #24]	; (80037bc <osMutexCreate+0x34>)
 80037a2:	7824      	ldrb	r4, [r4, #0]
 80037a4:	b91c      	cbnz	r4, 80037ae <osMutexCreate+0x26>
 80037a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80037aa:	f7ff bfa5 	b.w	80036f8 <svcMutexCreate>
 80037ae:	4628      	mov	r0, r5
 80037b0:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80037c0 <osMutexCreate+0x38>
 80037b4:	df00      	svc	0
 80037b6:	bd70      	pop	{r4, r5, r6, pc}
 80037b8:	2000      	movs	r0, #0
 80037ba:	bd70      	pop	{r4, r5, r6, pc}
 80037bc:	200021bc 	.word	0x200021bc
 80037c0:	080036f9 	.word	0x080036f9

080037c4 <osMutexWait>:
 80037c4:	b510      	push	{r4, lr}
 80037c6:	f3ef 8410 	mrs	r4, PRIMASK
 80037ca:	b934      	cbnz	r4, 80037da <osMutexWait+0x16>
 80037cc:	f3ef 8405 	mrs	r4, IPSR
 80037d0:	b91c      	cbnz	r4, 80037da <osMutexWait+0x16>
 80037d2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80037e0 <osMutexWait+0x1c>
 80037d6:	df00      	svc	0
 80037d8:	bd10      	pop	{r4, pc}
 80037da:	2082      	movs	r0, #130	; 0x82
 80037dc:	bd10      	pop	{r4, pc}
 80037de:	0000      	.short	0x0000
 80037e0:	08003713 	.word	0x08003713

080037e4 <osThreadExit>:
 80037e4:	4808      	ldr	r0, [pc, #32]	; (8003808 <osThreadExit+0x24>)
 80037e6:	b508      	push	{r3, lr}
 80037e8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80037ec:	6800      	ldr	r0, [r0, #0]
 80037ee:	f7ff ffe9 	bl	80037c4 <osMutexWait>
 80037f2:	f8df c018 	ldr.w	r12, [pc, #24]	; 800380c <osThreadExit+0x28>
 80037f6:	df00      	svc	0
 80037f8:	4604      	mov	r4, r0
 80037fa:	f7ff fb43 	bl	8002e84 <sysThreadTerminate>
 80037fe:	4620      	mov	r0, r4
 8003800:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003810 <osThreadExit+0x2c>
 8003804:	df00      	svc	0
 8003806:	e7fe      	b.n	8003806 <osThreadExit+0x22>
 8003808:	200021b4 	.word	0x200021b4
 800380c:	08003649 	.word	0x08003649
 8003810:	08003661 	.word	0x08003661

08003814 <osMutexRelease>:
 8003814:	b510      	push	{r4, lr}
 8003816:	f3ef 8410 	mrs	r4, PRIMASK
 800381a:	b934      	cbnz	r4, 800382a <osMutexRelease+0x16>
 800381c:	f3ef 8405 	mrs	r4, IPSR
 8003820:	b91c      	cbnz	r4, 800382a <osMutexRelease+0x16>
 8003822:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003830 <osMutexRelease+0x1c>
 8003826:	df00      	svc	0
 8003828:	bd10      	pop	{r4, pc}
 800382a:	2082      	movs	r0, #130	; 0x82
 800382c:	bd10      	pop	{r4, pc}
 800382e:	0000      	.short	0x0000
 8003830:	0800374b 	.word	0x0800374b

08003834 <osThreadContextCreate>:
 8003834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003838:	4680      	mov	r8, r0
 800383a:	460f      	mov	r7, r1
 800383c:	4616      	mov	r6, r2
 800383e:	f3ef 8410 	mrs	r4, PRIMASK
 8003842:	bb04      	cbnz	r4, 8003886 <osThreadContextCreate+0x52>
 8003844:	f3ef 8305 	mrs	r3, IPSR
 8003848:	b9d3      	cbnz	r3, 8003880 <osThreadContextCreate+0x4c>
 800384a:	f3ef 8314 	mrs	r3, CONTROL
 800384e:	07db      	lsls	r3, r3, #31
 8003850:	d406      	bmi.n	8003860 <osThreadContextCreate+0x2c>
 8003852:	4b0e      	ldr	r3, [pc, #56]	; (800388c <osThreadContextCreate+0x58>)
 8003854:	781b      	ldrb	r3, [r3, #0]
 8003856:	b91b      	cbnz	r3, 8003860 <osThreadContextCreate+0x2c>
 8003858:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800385c:	f7ff bebe 	b.w	80035dc <svcThreadCreate>
 8003860:	4d0b      	ldr	r5, [pc, #44]	; (8003890 <osThreadContextCreate+0x5c>)
 8003862:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003866:	6828      	ldr	r0, [r5, #0]
 8003868:	f7ff ffac 	bl	80037c4 <osMutexWait>
 800386c:	4640      	mov	r0, r8
 800386e:	4639      	mov	r1, r7
 8003870:	4632      	mov	r2, r6
 8003872:	f8df c020 	ldr.w	r12, [pc, #32]	; 8003894 <osThreadContextCreate+0x60>
 8003876:	df00      	svc	0
 8003878:	4604      	mov	r4, r0
 800387a:	6828      	ldr	r0, [r5, #0]
 800387c:	f7ff ffca 	bl	8003814 <osMutexRelease>
 8003880:	4620      	mov	r0, r4
 8003882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003886:	2400      	movs	r4, #0
 8003888:	e7fa      	b.n	8003880 <osThreadContextCreate+0x4c>
 800388a:	bf00      	nop
 800388c:	200021bc 	.word	0x200021bc
 8003890:	200021b4 	.word	0x200021b4
 8003894:	080035dd 	.word	0x080035dd

08003898 <osThreadCreate>:
 8003898:	2200      	movs	r2, #0
 800389a:	f7ff bfcb 	b.w	8003834 <osThreadContextCreate>
	...

080038a0 <osMutexDelete>:
 80038a0:	b510      	push	{r4, lr}
 80038a2:	f3ef 8410 	mrs	r4, PRIMASK
 80038a6:	b934      	cbnz	r4, 80038b6 <osMutexDelete+0x16>
 80038a8:	f3ef 8405 	mrs	r4, IPSR
 80038ac:	b91c      	cbnz	r4, 80038b6 <osMutexDelete+0x16>
 80038ae:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80038bc <osMutexDelete+0x1c>
 80038b2:	df00      	svc	0
 80038b4:	bd10      	pop	{r4, pc}
 80038b6:	2082      	movs	r0, #130	; 0x82
 80038b8:	bd10      	pop	{r4, pc}
 80038ba:	0000      	.short	0x0000
 80038bc:	0800376b 	.word	0x0800376b

080038c0 <svcMessageCreate>:
 80038c0:	b510      	push	{r4, lr}
 80038c2:	4604      	mov	r4, r0
 80038c4:	b160      	cbz	r0, 80038e0 <svcMessageCreate+0x20>
 80038c6:	6801      	ldr	r1, [r0, #0]
 80038c8:	b151      	cbz	r1, 80038e0 <svcMessageCreate+0x20>
 80038ca:	6840      	ldr	r0, [r0, #4]
 80038cc:	b148      	cbz	r0, 80038e2 <svcMessageCreate+0x22>
 80038ce:	7803      	ldrb	r3, [r0, #0]
 80038d0:	b933      	cbnz	r3, 80038e0 <svcMessageCreate+0x20>
 80038d2:	3104      	adds	r1, #4
 80038d4:	0089      	lsls	r1, r1, #2
 80038d6:	b289      	uxth	r1, r1
 80038d8:	f7ff fc52 	bl	8003180 <rt_mbx_init>
 80038dc:	6860      	ldr	r0, [r4, #4]
 80038de:	bd10      	pop	{r4, pc}
 80038e0:	2000      	movs	r0, #0
 80038e2:	bd10      	pop	{r4, pc}

080038e4 <svcKernelInitialize>:
 80038e4:	b538      	push	{r3, r4, r5, lr}
 80038e6:	4c11      	ldr	r4, [pc, #68]	; (800392c <svcKernelInitialize+0x48>)
 80038e8:	7823      	ldrb	r3, [r4, #0]
 80038ea:	b90b      	cbnz	r3, 80038f0 <svcKernelInitialize+0xc>
 80038ec:	f000 faa8 	bl	8003e40 <rt_sys_init>
 80038f0:	4b0f      	ldr	r3, [pc, #60]	; (8003930 <svcKernelInitialize+0x4c>)
 80038f2:	7825      	ldrb	r5, [r4, #0]
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	22ff      	movs	r2, #255	; 0xff
 80038f8:	709a      	strb	r2, [r3, #2]
 80038fa:	b98d      	cbnz	r5, 8003920 <svcKernelInitialize+0x3c>
 80038fc:	4629      	mov	r1, r5
 80038fe:	480d      	ldr	r0, [pc, #52]	; (8003934 <svcKernelInitialize+0x50>)
 8003900:	f7ff ffde 	bl	80038c0 <svcMessageCreate>
 8003904:	4b0c      	ldr	r3, [pc, #48]	; (8003938 <svcKernelInitialize+0x54>)
 8003906:	462a      	mov	r2, r5
 8003908:	6018      	str	r0, [r3, #0]
 800390a:	4629      	mov	r1, r5
 800390c:	480b      	ldr	r0, [pc, #44]	; (800393c <svcKernelInitialize+0x58>)
 800390e:	f7ff fe65 	bl	80035dc <svcThreadCreate>
 8003912:	4b0b      	ldr	r3, [pc, #44]	; (8003940 <svcKernelInitialize+0x5c>)
 8003914:	6018      	str	r0, [r3, #0]
 8003916:	480b      	ldr	r0, [pc, #44]	; (8003944 <svcKernelInitialize+0x60>)
 8003918:	f7ff ff36 	bl	8003788 <osMutexCreate>
 800391c:	4b0a      	ldr	r3, [pc, #40]	; (8003948 <svcKernelInitialize+0x64>)
 800391e:	6018      	str	r0, [r3, #0]
 8003920:	2301      	movs	r3, #1
 8003922:	7023      	strb	r3, [r4, #0]
 8003924:	4b09      	ldr	r3, [pc, #36]	; (800394c <svcKernelInitialize+0x68>)
 8003926:	2000      	movs	r0, #0
 8003928:	7018      	strb	r0, [r3, #0]
 800392a:	bd38      	pop	{r3, r4, r5, pc}
 800392c:	200021b0 	.word	0x200021b0
 8003930:	200021c0 	.word	0x200021c0
 8003934:	08008eac 	.word	0x08008eac
 8003938:	20001af8 	.word	0x20001af8
 800393c:	08008ec8 	.word	0x08008ec8
 8003940:	20001dcc 	.word	0x20001dcc
 8003944:	08008ee0 	.word	0x08008ee0
 8003948:	200021b4 	.word	0x200021b4
 800394c:	200021bc 	.word	0x200021bc

08003950 <osKernelInitialize>:
 8003950:	b510      	push	{r4, lr}
 8003952:	f3ef 8410 	mrs	r4, PRIMASK
 8003956:	b974      	cbnz	r4, 8003976 <osKernelInitialize+0x26>
 8003958:	f3ef 8405 	mrs	r4, IPSR
 800395c:	b95c      	cbnz	r4, 8003976 <osKernelInitialize+0x26>
 800395e:	f3ef 8414 	mrs	r4, CONTROL
 8003962:	07e4      	lsls	r4, r4, #31
 8003964:	d403      	bmi.n	800396e <osKernelInitialize+0x1e>
 8003966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800396a:	f7ff bfbb 	b.w	80038e4 <svcKernelInitialize>
 800396e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800397c <osKernelInitialize+0x2c>
 8003972:	df00      	svc	0
 8003974:	bd10      	pop	{r4, pc}
 8003976:	2082      	movs	r0, #130	; 0x82
 8003978:	bd10      	pop	{r4, pc}
 800397a:	0000      	.short	0x0000
 800397c:	080038e5 	.word	0x080038e5

08003980 <svcMessageGet>:
 8003980:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003984:	460c      	mov	r4, r1
 8003986:	4680      	mov	r8, r0
 8003988:	b318      	cbz	r0, 80039d2 <svcMessageGet+0x52>
 800398a:	7803      	ldrb	r3, [r0, #0]
 800398c:	2b01      	cmp	r3, #1
 800398e:	d125      	bne.n	80039dc <svcMessageGet+0x5c>
 8003990:	4608      	mov	r0, r1
 8003992:	f7ff fd73 	bl	800347c <rt_ms2tick>
 8003996:	a902      	add	r1, sp, #8
 8003998:	4602      	mov	r2, r0
 800399a:	4640      	mov	r0, r8
 800399c:	f7ff fbfe 	bl	800319c <rt_mbx_wait>
 80039a0:	2801      	cmp	r0, #1
 80039a2:	d111      	bne.n	80039c8 <svcMessageGet+0x48>
 80039a4:	2000      	movs	r0, #0
 80039a6:	2c00      	cmp	r4, #0
 80039a8:	4602      	mov	r2, r0
 80039aa:	4603      	mov	r3, r0
 80039ac:	bf18      	it	ne
 80039ae:	2040      	movne	r0, #64	; 0x40
 80039b0:	9902      	ldr	r1, [sp, #8]
 80039b2:	4604      	mov	r4, r0
 80039b4:	460d      	mov	r5, r1
 80039b6:	4616      	mov	r6, r2
 80039b8:	461f      	mov	r7, r3
 80039ba:	4620      	mov	r0, r4
 80039bc:	4629      	mov	r1, r5
 80039be:	4632      	mov	r2, r6
 80039c0:	463b      	mov	r3, r7
 80039c2:	b004      	add	sp, #16
 80039c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80039c8:	2000      	movs	r0, #0
 80039ca:	4602      	mov	r2, r0
 80039cc:	4603      	mov	r3, r0
 80039ce:	2010      	movs	r0, #16
 80039d0:	e7ee      	b.n	80039b0 <svcMessageGet+0x30>
 80039d2:	2480      	movs	r4, #128	; 0x80
 80039d4:	4605      	mov	r5, r0
 80039d6:	4606      	mov	r6, r0
 80039d8:	4607      	mov	r7, r0
 80039da:	e7ee      	b.n	80039ba <svcMessageGet+0x3a>
 80039dc:	2500      	movs	r5, #0
 80039de:	2480      	movs	r4, #128	; 0x80
 80039e0:	462e      	mov	r6, r5
 80039e2:	462f      	mov	r7, r5
 80039e4:	e7e9      	b.n	80039ba <svcMessageGet+0x3a>

080039e6 <isrMessagePut>:
 80039e6:	b570      	push	{r4, r5, r6, lr}
 80039e8:	460e      	mov	r6, r1
 80039ea:	4614      	mov	r4, r2
 80039ec:	4605      	mov	r5, r0
 80039ee:	b160      	cbz	r0, 8003a0a <isrMessagePut+0x24>
 80039f0:	b95a      	cbnz	r2, 8003a0a <isrMessagePut+0x24>
 80039f2:	7803      	ldrb	r3, [r0, #0]
 80039f4:	2b01      	cmp	r3, #1
 80039f6:	d108      	bne.n	8003a0a <isrMessagePut+0x24>
 80039f8:	f7ff fc26 	bl	8003248 <rt_mbx_check>
 80039fc:	b138      	cbz	r0, 8003a0e <isrMessagePut+0x28>
 80039fe:	4628      	mov	r0, r5
 8003a00:	4631      	mov	r1, r6
 8003a02:	f7ff fc25 	bl	8003250 <isr_mbx_send>
 8003a06:	4620      	mov	r0, r4
 8003a08:	bd70      	pop	{r4, r5, r6, pc}
 8003a0a:	2080      	movs	r0, #128	; 0x80
 8003a0c:	bd70      	pop	{r4, r5, r6, pc}
 8003a0e:	2081      	movs	r0, #129	; 0x81
 8003a10:	bd70      	pop	{r4, r5, r6, pc}
	...

08003a14 <sysTimerTick>:
 8003a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a16:	4e11      	ldr	r6, [pc, #68]	; (8003a5c <sysTimerTick+0x48>)
 8003a18:	6834      	ldr	r4, [r6, #0]
 8003a1a:	b12c      	cbz	r4, 8003a28 <sysTimerTick+0x14>
 8003a1c:	68a3      	ldr	r3, [r4, #8]
 8003a1e:	4f10      	ldr	r7, [pc, #64]	; (8003a60 <sysTimerTick+0x4c>)
 8003a20:	3b01      	subs	r3, #1
 8003a22:	60a3      	str	r3, [r4, #8]
 8003a24:	68a2      	ldr	r2, [r4, #8]
 8003a26:	b102      	cbz	r2, 8003a2a <sysTimerTick+0x16>
 8003a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a2a:	6825      	ldr	r5, [r4, #0]
 8003a2c:	6838      	ldr	r0, [r7, #0]
 8003a2e:	6035      	str	r5, [r6, #0]
 8003a30:	4621      	mov	r1, r4
 8003a32:	f7ff ffd8 	bl	80039e6 <isrMessagePut>
 8003a36:	b110      	cbz	r0, 8003a3e <sysTimerTick+0x2a>
 8003a38:	2004      	movs	r0, #4
 8003a3a:	f7ff fa15 	bl	8002e68 <os_error>
 8003a3e:	7963      	ldrb	r3, [r4, #5]
 8003a40:	2b01      	cmp	r3, #1
 8003a42:	d107      	bne.n	8003a54 <sysTimerTick+0x40>
 8003a44:	68e1      	ldr	r1, [r4, #12]
 8003a46:	4620      	mov	r0, r4
 8003a48:	f7ff fcfe 	bl	8003448 <rt_timer_insert>
 8003a4c:	2d00      	cmp	r5, #0
 8003a4e:	d0eb      	beq.n	8003a28 <sysTimerTick+0x14>
 8003a50:	462c      	mov	r4, r5
 8003a52:	e7e7      	b.n	8003a24 <sysTimerTick+0x10>
 8003a54:	2301      	movs	r3, #1
 8003a56:	7123      	strb	r3, [r4, #4]
 8003a58:	e7f8      	b.n	8003a4c <sysTimerTick+0x38>
 8003a5a:	bf00      	nop
 8003a5c:	200021b8 	.word	0x200021b8
 8003a60:	20001af8 	.word	0x20001af8

08003a64 <isrMessageGet>:
 8003a64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003a66:	4604      	mov	r4, r0
 8003a68:	4616      	mov	r6, r2
 8003a6a:	4608      	mov	r0, r1
 8003a6c:	b101      	cbz	r1, 8003a70 <isrMessageGet+0xc>
 8003a6e:	b122      	cbz	r2, 8003a7a <isrMessageGet+0x16>
 8003a70:	2380      	movs	r3, #128	; 0x80
 8003a72:	6023      	str	r3, [r4, #0]
 8003a74:	4620      	mov	r0, r4
 8003a76:	b004      	add	sp, #16
 8003a78:	bd70      	pop	{r4, r5, r6, pc}
 8003a7a:	780b      	ldrb	r3, [r1, #0]
 8003a7c:	2b01      	cmp	r3, #1
 8003a7e:	d1f7      	bne.n	8003a70 <isrMessageGet+0xc>
 8003a80:	a902      	add	r1, sp, #8
 8003a82:	f7ff fbec 	bl	800325e <isr_mbx_receive>
 8003a86:	2804      	cmp	r0, #4
 8003a88:	bf08      	it	eq
 8003a8a:	2310      	moveq	r3, #16
 8003a8c:	ad01      	add	r5, sp, #4
 8003a8e:	bf14      	ite	ne
 8003a90:	9601      	strne	r6, [sp, #4]
 8003a92:	9301      	streq	r3, [sp, #4]
 8003a94:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a98:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8003a9c:	e7ea      	b.n	8003a74 <isrMessageGet+0x10>
	...

08003aa0 <osMessageGet>:
 8003aa0:	b538      	push	{r3, r4, r5, lr}
 8003aa2:	4604      	mov	r4, r0
 8003aa4:	4615      	mov	r5, r2
 8003aa6:	f3ef 8010 	mrs	r0, PRIMASK
 8003aaa:	b910      	cbnz	r0, 8003ab2 <osMessageGet+0x12>
 8003aac:	f3ef 8005 	mrs	r0, IPSR
 8003ab0:	b128      	cbz	r0, 8003abe <osMessageGet+0x1e>
 8003ab2:	462a      	mov	r2, r5
 8003ab4:	4620      	mov	r0, r4
 8003ab6:	f7ff ffd5 	bl	8003a64 <isrMessageGet>
 8003aba:	4620      	mov	r0, r4
 8003abc:	bd38      	pop	{r3, r4, r5, pc}
 8003abe:	4608      	mov	r0, r1
 8003ac0:	4611      	mov	r1, r2
 8003ac2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003ad0 <osMessageGet+0x30>
 8003ac6:	df00      	svc	0
 8003ac8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8003acc:	e7f5      	b.n	8003aba <osMessageGet+0x1a>
 8003ace:	0000      	.short	0x0000
 8003ad0:	08003981 	.word	0x08003981

08003ad4 <osTimerThread>:
 8003ad4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003ad6:	4c0a      	ldr	r4, [pc, #40]	; (8003b00 <osTimerThread+0x2c>)
 8003ad8:	6821      	ldr	r1, [r4, #0]
 8003ada:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ade:	a803      	add	r0, sp, #12
 8003ae0:	f7ff ffde 	bl	8003aa0 <osMessageGet>
 8003ae4:	9b03      	ldr	r3, [sp, #12]
 8003ae6:	2b10      	cmp	r3, #16
 8003ae8:	d1f6      	bne.n	8003ad8 <osTimerThread+0x4>
 8003aea:	9904      	ldr	r1, [sp, #16]
 8003aec:	a801      	add	r0, sp, #4
 8003aee:	f7ff fdf7 	bl	80036e0 <osTimerCall>
 8003af2:	9b01      	ldr	r3, [sp, #4]
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d0ef      	beq.n	8003ad8 <osTimerThread+0x4>
 8003af8:	9802      	ldr	r0, [sp, #8]
 8003afa:	4798      	blx	r3
 8003afc:	e7ec      	b.n	8003ad8 <osTimerThread+0x4>
 8003afe:	bf00      	nop
 8003b00:	20001af8 	.word	0x20001af8

08003b04 <rt_switch_req>:
 8003b04:	4b05      	ldr	r3, [pc, #20]	; (8003b1c <rt_switch_req+0x18>)
 8003b06:	6058      	str	r0, [r3, #4]
 8003b08:	2302      	movs	r3, #2
 8003b0a:	7043      	strb	r3, [r0, #1]
 8003b0c:	4b04      	ldr	r3, [pc, #16]	; (8003b20 <rt_switch_req+0x1c>)
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	b11b      	cbz	r3, 8003b1a <rt_switch_req+0x16>
 8003b12:	691b      	ldr	r3, [r3, #16]
 8003b14:	b10b      	cbz	r3, 8003b1a <rt_switch_req+0x16>
 8003b16:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003b18:	4718      	bx	r3
 8003b1a:	4770      	bx	lr
 8003b1c:	200021c0 	.word	0x200021c0
 8003b20:	200021a4 	.word	0x200021a4

08003b24 <rt_dispatch.part.0>:
 8003b24:	b508      	push	{r3, lr}
 8003b26:	4803      	ldr	r0, [pc, #12]	; (8003b34 <rt_dispatch.part.0+0x10>)
 8003b28:	f7ff f898 	bl	8002c5c <rt_get_first>
 8003b2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003b30:	f7ff bfe8 	b.w	8003b04 <rt_switch_req>
 8003b34:	200017a8 	.word	0x200017a8

08003b38 <rt_dispatch>:
 8003b38:	b570      	push	{r4, r5, r6, lr}
 8003b3a:	4604      	mov	r4, r0
 8003b3c:	b918      	cbnz	r0, 8003b46 <rt_dispatch+0xe>
 8003b3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b42:	f7ff bfef 	b.w	8003b24 <rt_dispatch.part.0>
 8003b46:	4e0c      	ldr	r6, [pc, #48]	; (8003b78 <rt_dispatch+0x40>)
 8003b48:	78a2      	ldrb	r2, [r4, #2]
 8003b4a:	6830      	ldr	r0, [r6, #0]
 8003b4c:	7883      	ldrb	r3, [r0, #2]
 8003b4e:	429a      	cmp	r2, r3
 8003b50:	f04f 0501 	mov.w	r5, #1
 8003b54:	d908      	bls.n	8003b68 <rt_dispatch+0x30>
 8003b56:	f7ff f893 	bl	8002c80 <rt_put_rdy_first>
 8003b5a:	6833      	ldr	r3, [r6, #0]
 8003b5c:	705d      	strb	r5, [r3, #1]
 8003b5e:	4620      	mov	r0, r4
 8003b60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b64:	f7ff bfce 	b.w	8003b04 <rt_switch_req>
 8003b68:	7065      	strb	r5, [r4, #1]
 8003b6a:	4621      	mov	r1, r4
 8003b6c:	4803      	ldr	r0, [pc, #12]	; (8003b7c <rt_dispatch+0x44>)
 8003b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b72:	f7ff b85b 	b.w	8002c2c <rt_put_prio>
 8003b76:	bf00      	nop
 8003b78:	200021c0 	.word	0x200021c0
 8003b7c:	200017a8 	.word	0x200017a8

08003b80 <rt_block>:
 8003b80:	b538      	push	{r3, r4, r5, lr}
 8003b82:	460d      	mov	r5, r1
 8003b84:	4601      	mov	r1, r0
 8003b86:	b180      	cbz	r0, 8003baa <rt_block+0x2a>
 8003b88:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003b8c:	4298      	cmp	r0, r3
 8003b8e:	4c07      	ldr	r4, [pc, #28]	; (8003bac <rt_block+0x2c>)
 8003b90:	d002      	beq.n	8003b98 <rt_block+0x18>
 8003b92:	6820      	ldr	r0, [r4, #0]
 8003b94:	f7ff f87e 	bl	8002c94 <rt_put_dly>
 8003b98:	6823      	ldr	r3, [r4, #0]
 8003b9a:	4805      	ldr	r0, [pc, #20]	; (8003bb0 <rt_block+0x30>)
 8003b9c:	705d      	strb	r5, [r3, #1]
 8003b9e:	f7ff f85d 	bl	8002c5c <rt_get_first>
 8003ba2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003ba6:	f7ff bfad 	b.w	8003b04 <rt_switch_req>
 8003baa:	bd38      	pop	{r3, r4, r5, pc}
 8003bac:	200021c0 	.word	0x200021c0
 8003bb0:	200017a8 	.word	0x200017a8

08003bb4 <rt_tsk_self>:
 8003bb4:	4b02      	ldr	r3, [pc, #8]	; (8003bc0 <rt_tsk_self+0xc>)
 8003bb6:	6818      	ldr	r0, [r3, #0]
 8003bb8:	b100      	cbz	r0, 8003bbc <rt_tsk_self+0x8>
 8003bba:	78c0      	ldrb	r0, [r0, #3]
 8003bbc:	4770      	bx	lr
 8003bbe:	bf00      	nop
 8003bc0:	200021c0 	.word	0x200021c0

08003bc4 <rt_tsk_prio>:
 8003bc4:	b510      	push	{r4, lr}
 8003bc6:	b9a8      	cbnz	r0, 8003bf4 <rt_tsk_prio+0x30>
 8003bc8:	4b19      	ldr	r3, [pc, #100]	; (8003c30 <rt_tsk_prio+0x6c>)
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	7099      	strb	r1, [r3, #2]
 8003bce:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8003bd2:	4818      	ldr	r0, [pc, #96]	; (8003c34 <rt_tsk_prio+0x70>)
 8003bd4:	6843      	ldr	r3, [r0, #4]
 8003bd6:	789b      	ldrb	r3, [r3, #2]
 8003bd8:	428b      	cmp	r3, r1
 8003bda:	d801      	bhi.n	8003be0 <rt_tsk_prio+0x1c>
 8003bdc:	2000      	movs	r0, #0
 8003bde:	bd10      	pop	{r4, pc}
 8003be0:	4c13      	ldr	r4, [pc, #76]	; (8003c30 <rt_tsk_prio+0x6c>)
 8003be2:	6821      	ldr	r1, [r4, #0]
 8003be4:	f7ff f822 	bl	8002c2c <rt_put_prio>
 8003be8:	6823      	ldr	r3, [r4, #0]
 8003bea:	2201      	movs	r2, #1
 8003bec:	705a      	strb	r2, [r3, #1]
 8003bee:	f7ff ff99 	bl	8003b24 <rt_dispatch.part.0>
 8003bf2:	e7f3      	b.n	8003bdc <rt_tsk_prio+0x18>
 8003bf4:	4b10      	ldr	r3, [pc, #64]	; (8003c38 <rt_tsk_prio+0x74>)
 8003bf6:	881b      	ldrh	r3, [r3, #0]
 8003bf8:	4298      	cmp	r0, r3
 8003bfa:	d817      	bhi.n	8003c2c <rt_tsk_prio+0x68>
 8003bfc:	3801      	subs	r0, #1
 8003bfe:	4b0f      	ldr	r3, [pc, #60]	; (8003c3c <rt_tsk_prio+0x78>)
 8003c00:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8003c04:	b194      	cbz	r4, 8003c2c <rt_tsk_prio+0x68>
 8003c06:	4b0a      	ldr	r3, [pc, #40]	; (8003c30 <rt_tsk_prio+0x6c>)
 8003c08:	70a1      	strb	r1, [r4, #2]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8003c10:	429c      	cmp	r4, r3
 8003c12:	d0de      	beq.n	8003bd2 <rt_tsk_prio+0xe>
 8003c14:	4620      	mov	r0, r4
 8003c16:	f7ff f8af 	bl	8002d78 <rt_resort_prio>
 8003c1a:	7863      	ldrb	r3, [r4, #1]
 8003c1c:	2b01      	cmp	r3, #1
 8003c1e:	d1dd      	bne.n	8003bdc <rt_tsk_prio+0x18>
 8003c20:	4804      	ldr	r0, [pc, #16]	; (8003c34 <rt_tsk_prio+0x70>)
 8003c22:	f7ff f81b 	bl	8002c5c <rt_get_first>
 8003c26:	f7ff ff87 	bl	8003b38 <rt_dispatch>
 8003c2a:	e7d7      	b.n	8003bdc <rt_tsk_prio+0x18>
 8003c2c:	20ff      	movs	r0, #255	; 0xff
 8003c2e:	bd10      	pop	{r4, pc}
 8003c30:	200021c0 	.word	0x200021c0
 8003c34:	200017a8 	.word	0x200017a8
 8003c38:	08008ea8 	.word	0x08008ea8
 8003c3c:	20001afc 	.word	0x20001afc

08003c40 <rt_tsk_create>:
 8003c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003c44:	f011 0fff 	tst.w	r1, #255	; 0xff
 8003c48:	460d      	mov	r5, r1
 8003c4a:	4680      	mov	r8, r0
 8003c4c:	4823      	ldr	r0, [pc, #140]	; (8003cdc <rt_tsk_create+0x9c>)
 8003c4e:	4616      	mov	r6, r2
 8003c50:	469a      	mov	r10, r3
 8003c52:	bf08      	it	eq
 8003c54:	3501      	addeq	r5, #1
 8003c56:	f7ff fa72 	bl	800313e <rt_alloc_box>
 8003c5a:	4604      	mov	r4, r0
 8003c5c:	b920      	cbnz	r0, 8003c68 <rt_tsk_create+0x28>
 8003c5e:	f04f 0900 	mov.w	r9, #0
 8003c62:	4648      	mov	r0, r9
 8003c64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003c68:	4b1d      	ldr	r3, [pc, #116]	; (8003ce0 <rt_tsk_create+0xa0>)
 8003c6a:	6306      	str	r6, [r0, #48]	; 0x30
 8003c6c:	881b      	ldrh	r3, [r3, #0]
 8003c6e:	4e1d      	ldr	r6, [pc, #116]	; (8003ce4 <rt_tsk_create+0xa4>)
 8003c70:	0a28      	lsrs	r0, r5, #8
 8003c72:	62a0      	str	r0, [r4, #40]	; 0x28
 8003c74:	2100      	movs	r1, #0
 8003c76:	428b      	cmp	r3, r1
 8003c78:	f101 0901 	add.w	r9, r1, #1
 8003c7c:	d0ef      	beq.n	8003c5e <rt_tsk_create+0x1e>
 8003c7e:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8003c82:	460f      	mov	r7, r1
 8003c84:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8003c88:	4649      	mov	r1, r9
 8003c8a:	2a00      	cmp	r2, #0
 8003c8c:	d1f3      	bne.n	8003c76 <rt_tsk_create+0x36>
 8003c8e:	b2ed      	uxtb	r5, r5
 8003c90:	2301      	movs	r3, #1
 8003c92:	f884 9003 	strb.w	r9, [r4, #3]
 8003c96:	f8c4 a01c 	str.w	r10, [r4, #28]
 8003c9a:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8003c9e:	7022      	strb	r2, [r4, #0]
 8003ca0:	7063      	strb	r3, [r4, #1]
 8003ca2:	70a5      	strb	r5, [r4, #2]
 8003ca4:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003ca8:	6062      	str	r2, [r4, #4]
 8003caa:	60a2      	str	r2, [r4, #8]
 8003cac:	60e2      	str	r2, [r4, #12]
 8003cae:	6122      	str	r2, [r4, #16]
 8003cb0:	6222      	str	r2, [r4, #32]
 8003cb2:	82a2      	strh	r2, [r4, #20]
 8003cb4:	82e2      	strh	r2, [r4, #22]
 8003cb6:	8322      	strh	r2, [r4, #24]
 8003cb8:	8362      	strh	r2, [r4, #26]
 8003cba:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8003cbe:	b918      	cbnz	r0, 8003cc8 <rt_tsk_create+0x88>
 8003cc0:	4809      	ldr	r0, [pc, #36]	; (8003ce8 <rt_tsk_create+0xa8>)
 8003cc2:	f7ff fa3c 	bl	800313e <rt_alloc_box>
 8003cc6:	6320      	str	r0, [r4, #48]	; 0x30
 8003cc8:	4620      	mov	r0, r4
 8003cca:	4641      	mov	r1, r8
 8003ccc:	f7ff f91a 	bl	8002f04 <rt_init_stack>
 8003cd0:	4620      	mov	r0, r4
 8003cd2:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8003cd6:	f7ff ff2f 	bl	8003b38 <rt_dispatch>
 8003cda:	e7c2      	b.n	8003c62 <rt_tsk_create+0x22>
 8003cdc:	20001dd0 	.word	0x20001dd0
 8003ce0:	08008ea8 	.word	0x08008ea8
 8003ce4:	20001afc 	.word	0x20001afc
 8003ce8:	20001b38 	.word	0x20001b38

08003cec <rt_tsk_delete>:
 8003cec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8003cf0:	4d4d      	ldr	r5, [pc, #308]	; (8003e28 <rt_tsk_delete+0x13c>)
 8003cf2:	b118      	cbz	r0, 8003cfc <rt_tsk_delete+0x10>
 8003cf4:	682b      	ldr	r3, [r5, #0]
 8003cf6:	78db      	ldrb	r3, [r3, #3]
 8003cf8:	4298      	cmp	r0, r3
 8003cfa:	d141      	bne.n	8003d80 <rt_tsk_delete+0x94>
 8003cfc:	682c      	ldr	r4, [r5, #0]
 8003cfe:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8003e3c <rt_tsk_delete+0x150>
 8003d02:	2300      	movs	r3, #0
 8003d04:	7063      	strb	r3, [r4, #1]
 8003d06:	f003 fa3e 	bl	8007186 <rt_get_PSP>
 8003d0a:	62e0      	str	r0, [r4, #44]	; 0x2c
 8003d0c:	f7ff f9e0 	bl	80030d0 <rt_stk_check>
 8003d10:	682b      	ldr	r3, [r5, #0]
 8003d12:	6a1c      	ldr	r4, [r3, #32]
 8003d14:	2701      	movs	r7, #1
 8003d16:	b9a4      	cbnz	r4, 8003d42 <rt_tsk_delete+0x56>
 8003d18:	682a      	ldr	r2, [r5, #0]
 8003d1a:	4944      	ldr	r1, [pc, #272]	; (8003e2c <rt_tsk_delete+0x140>)
 8003d1c:	78d3      	ldrb	r3, [r2, #3]
 8003d1e:	4844      	ldr	r0, [pc, #272]	; (8003e30 <rt_tsk_delete+0x144>)
 8003d20:	3b01      	subs	r3, #1
 8003d22:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8003d26:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003d28:	f7ff fa16 	bl	8003158 <rt_free_box>
 8003d2c:	6829      	ldr	r1, [r5, #0]
 8003d2e:	4841      	ldr	r0, [pc, #260]	; (8003e34 <rt_tsk_delete+0x148>)
 8003d30:	630c      	str	r4, [r1, #48]	; 0x30
 8003d32:	f7ff fa11 	bl	8003158 <rt_free_box>
 8003d36:	602c      	str	r4, [r5, #0]
 8003d38:	f7ff fef4 	bl	8003b24 <rt_dispatch.part.0>
 8003d3c:	4620      	mov	r0, r4
 8003d3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003d42:	6863      	ldr	r3, [r4, #4]
 8003d44:	b1b3      	cbz	r3, 8003d74 <rt_tsk_delete+0x88>
 8003d46:	4620      	mov	r0, r4
 8003d48:	f7fe ff88 	bl	8002c5c <rt_get_first>
 8003d4c:	2100      	movs	r1, #0
 8003d4e:	4606      	mov	r6, r0
 8003d50:	f7ff f924 	bl	8002f9c <rt_ret_val>
 8003d54:	4630      	mov	r0, r6
 8003d56:	f7ff f827 	bl	8002da8 <rt_rmv_dly>
 8003d5a:	7077      	strb	r7, [r6, #1]
 8003d5c:	4631      	mov	r1, r6
 8003d5e:	4640      	mov	r0, r8
 8003d60:	f7fe ff64 	bl	8002c2c <rt_put_prio>
 8003d64:	68e3      	ldr	r3, [r4, #12]
 8003d66:	6a32      	ldr	r2, [r6, #32]
 8003d68:	8067      	strh	r7, [r4, #2]
 8003d6a:	60a6      	str	r6, [r4, #8]
 8003d6c:	60e2      	str	r2, [r4, #12]
 8003d6e:	6234      	str	r4, [r6, #32]
 8003d70:	461c      	mov	r4, r3
 8003d72:	e7d0      	b.n	8003d16 <rt_tsk_delete+0x2a>
 8003d74:	68e2      	ldr	r2, [r4, #12]
 8003d76:	8063      	strh	r3, [r4, #2]
 8003d78:	60a3      	str	r3, [r4, #8]
 8003d7a:	60e3      	str	r3, [r4, #12]
 8003d7c:	4614      	mov	r4, r2
 8003d7e:	e7ca      	b.n	8003d16 <rt_tsk_delete+0x2a>
 8003d80:	4b2d      	ldr	r3, [pc, #180]	; (8003e38 <rt_tsk_delete+0x14c>)
 8003d82:	881b      	ldrh	r3, [r3, #0]
 8003d84:	4298      	cmp	r0, r3
 8003d86:	d84d      	bhi.n	8003e24 <rt_tsk_delete+0x138>
 8003d88:	4b28      	ldr	r3, [pc, #160]	; (8003e2c <rt_tsk_delete+0x140>)
 8003d8a:	1e47      	subs	r7, r0, #1
 8003d8c:	4699      	mov	r9, r3
 8003d8e:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8003d92:	2e00      	cmp	r6, #0
 8003d94:	d046      	beq.n	8003e24 <rt_tsk_delete+0x138>
 8003d96:	4630      	mov	r0, r6
 8003d98:	f7fe ffd8 	bl	8002d4c <rt_rmv_list>
 8003d9c:	4630      	mov	r0, r6
 8003d9e:	f7ff f803 	bl	8002da8 <rt_rmv_dly>
 8003da2:	f8df b098 	ldr.w	r11, [pc, #152]	; 8003e3c <rt_tsk_delete+0x150>
 8003da6:	6a34      	ldr	r4, [r6, #32]
 8003da8:	f04f 0a01 	mov.w	r10, #1
 8003dac:	b9b4      	cbnz	r4, 8003ddc <rt_tsk_delete+0xf0>
 8003dae:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8003db0:	481f      	ldr	r0, [pc, #124]	; (8003e30 <rt_tsk_delete+0x144>)
 8003db2:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8003db6:	f7ff f9cf 	bl	8003158 <rt_free_box>
 8003dba:	4631      	mov	r1, r6
 8003dbc:	6334      	str	r4, [r6, #48]	; 0x30
 8003dbe:	481d      	ldr	r0, [pc, #116]	; (8003e34 <rt_tsk_delete+0x148>)
 8003dc0:	f7ff f9ca 	bl	8003158 <rt_free_box>
 8003dc4:	481d      	ldr	r0, [pc, #116]	; (8003e3c <rt_tsk_delete+0x150>)
 8003dc6:	6829      	ldr	r1, [r5, #0]
 8003dc8:	6843      	ldr	r3, [r0, #4]
 8003dca:	789a      	ldrb	r2, [r3, #2]
 8003dcc:	788b      	ldrb	r3, [r1, #2]
 8003dce:	429a      	cmp	r2, r3
 8003dd0:	d9b4      	bls.n	8003d3c <rt_tsk_delete+0x50>
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	704b      	strb	r3, [r1, #1]
 8003dd6:	f7fe ff29 	bl	8002c2c <rt_put_prio>
 8003dda:	e7ad      	b.n	8003d38 <rt_tsk_delete+0x4c>
 8003ddc:	6863      	ldr	r3, [r4, #4]
 8003dde:	b1db      	cbz	r3, 8003e18 <rt_tsk_delete+0x12c>
 8003de0:	4620      	mov	r0, r4
 8003de2:	f7fe ff3b 	bl	8002c5c <rt_get_first>
 8003de6:	2100      	movs	r1, #0
 8003de8:	4680      	mov	r8, r0
 8003dea:	f7ff f8d7 	bl	8002f9c <rt_ret_val>
 8003dee:	4640      	mov	r0, r8
 8003df0:	f7fe ffda 	bl	8002da8 <rt_rmv_dly>
 8003df4:	f888 a001 	strb.w	r10, [r8, #1]
 8003df8:	4641      	mov	r1, r8
 8003dfa:	4658      	mov	r0, r11
 8003dfc:	f7fe ff16 	bl	8002c2c <rt_put_prio>
 8003e00:	68e3      	ldr	r3, [r4, #12]
 8003e02:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8003e06:	f8a4 a002 	strh.w	r10, [r4, #2]
 8003e0a:	f8c4 8008 	str.w	r8, [r4, #8]
 8003e0e:	60e2      	str	r2, [r4, #12]
 8003e10:	f8c8 4020 	str.w	r4, [r8, #32]
 8003e14:	461c      	mov	r4, r3
 8003e16:	e7c9      	b.n	8003dac <rt_tsk_delete+0xc0>
 8003e18:	68e2      	ldr	r2, [r4, #12]
 8003e1a:	8063      	strh	r3, [r4, #2]
 8003e1c:	60a3      	str	r3, [r4, #8]
 8003e1e:	60e3      	str	r3, [r4, #12]
 8003e20:	4614      	mov	r4, r2
 8003e22:	e7c3      	b.n	8003dac <rt_tsk_delete+0xc0>
 8003e24:	24ff      	movs	r4, #255	; 0xff
 8003e26:	e789      	b.n	8003d3c <rt_tsk_delete+0x50>
 8003e28:	200021c0 	.word	0x200021c0
 8003e2c:	20001afc 	.word	0x20001afc
 8003e30:	20001b38 	.word	0x20001b38
 8003e34:	20001dd0 	.word	0x20001dd0
 8003e38:	08008ea8 	.word	0x08008ea8
 8003e3c:	200017a8 	.word	0x200017a8

08003e40 <rt_sys_init>:
 8003e40:	b538      	push	{r3, r4, r5, lr}
 8003e42:	4b2c      	ldr	r3, [pc, #176]	; (8003ef4 <rt_sys_init+0xb4>)
 8003e44:	492c      	ldr	r1, [pc, #176]	; (8003ef8 <rt_sys_init+0xb8>)
 8003e46:	881a      	ldrh	r2, [r3, #0]
 8003e48:	2300      	movs	r3, #0
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	4293      	cmp	r3, r2
 8003e4e:	d34d      	bcc.n	8003eec <rt_sys_init+0xac>
 8003e50:	4b2a      	ldr	r3, [pc, #168]	; (8003efc <rt_sys_init+0xbc>)
 8003e52:	482b      	ldr	r0, [pc, #172]	; (8003f00 <rt_sys_init+0xc0>)
 8003e54:	8819      	ldrh	r1, [r3, #0]
 8003e56:	4c2b      	ldr	r4, [pc, #172]	; (8003f04 <rt_sys_init+0xc4>)
 8003e58:	2240      	movs	r2, #64	; 0x40
 8003e5a:	f7ff f94b 	bl	80030f4 <_init_box>
 8003e5e:	4b2a      	ldr	r3, [pc, #168]	; (8003f08 <rt_sys_init+0xc8>)
 8003e60:	482a      	ldr	r0, [pc, #168]	; (8003f0c <rt_sys_init+0xcc>)
 8003e62:	881a      	ldrh	r2, [r3, #0]
 8003e64:	4b2a      	ldr	r3, [pc, #168]	; (8003f10 <rt_sys_init+0xd0>)
 8003e66:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8003e6a:	6819      	ldr	r1, [r3, #0]
 8003e6c:	f7ff f942 	bl	80030f4 <_init_box>
 8003e70:	4b28      	ldr	r3, [pc, #160]	; (8003f14 <rt_sys_init+0xd4>)
 8003e72:	8819      	ldrh	r1, [r3, #0]
 8003e74:	4b28      	ldr	r3, [pc, #160]	; (8003f18 <rt_sys_init+0xd8>)
 8003e76:	2208      	movs	r2, #8
 8003e78:	6818      	ldr	r0, [r3, #0]
 8003e7a:	f7ff f93b 	bl	80030f4 <_init_box>
 8003e7e:	23ff      	movs	r3, #255	; 0xff
 8003e80:	2500      	movs	r5, #0
 8003e82:	70e3      	strb	r3, [r4, #3]
 8003e84:	4821      	ldr	r0, [pc, #132]	; (8003f0c <rt_sys_init+0xcc>)
 8003e86:	62a5      	str	r5, [r4, #40]	; 0x28
 8003e88:	2301      	movs	r3, #1
 8003e8a:	7063      	strb	r3, [r4, #1]
 8003e8c:	7025      	strb	r5, [r4, #0]
 8003e8e:	70a5      	strb	r5, [r4, #2]
 8003e90:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003e94:	6065      	str	r5, [r4, #4]
 8003e96:	60a5      	str	r5, [r4, #8]
 8003e98:	60e5      	str	r5, [r4, #12]
 8003e9a:	6125      	str	r5, [r4, #16]
 8003e9c:	6225      	str	r5, [r4, #32]
 8003e9e:	82a5      	strh	r5, [r4, #20]
 8003ea0:	82e5      	strh	r5, [r4, #22]
 8003ea2:	8325      	strh	r5, [r4, #24]
 8003ea4:	8365      	strh	r5, [r4, #26]
 8003ea6:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8003eaa:	f7ff f948 	bl	800313e <rt_alloc_box>
 8003eae:	491b      	ldr	r1, [pc, #108]	; (8003f1c <rt_sys_init+0xdc>)
 8003eb0:	6320      	str	r0, [r4, #48]	; 0x30
 8003eb2:	4620      	mov	r0, r4
 8003eb4:	f7ff f826 	bl	8002f04 <rt_init_stack>
 8003eb8:	4b19      	ldr	r3, [pc, #100]	; (8003f20 <rt_sys_init+0xe0>)
 8003eba:	2204      	movs	r2, #4
 8003ebc:	701a      	strb	r2, [r3, #0]
 8003ebe:	605d      	str	r5, [r3, #4]
 8003ec0:	4b18      	ldr	r3, [pc, #96]	; (8003f24 <rt_sys_init+0xe4>)
 8003ec2:	701a      	strb	r2, [r3, #0]
 8003ec4:	60dd      	str	r5, [r3, #12]
 8003ec6:	611d      	str	r5, [r3, #16]
 8003ec8:	829d      	strh	r5, [r3, #20]
 8003eca:	4b17      	ldr	r3, [pc, #92]	; (8003f28 <rt_sys_init+0xe8>)
 8003ecc:	4620      	mov	r0, r4
 8003ece:	601c      	str	r4, [r3, #0]
 8003ed0:	2302      	movs	r3, #2
 8003ed2:	7063      	strb	r3, [r4, #1]
 8003ed4:	f7ff fe16 	bl	8003b04 <rt_switch_req>
 8003ed8:	4a14      	ldr	r2, [pc, #80]	; (8003f2c <rt_sys_init+0xec>)
 8003eda:	4b15      	ldr	r3, [pc, #84]	; (8003f30 <rt_sys_init+0xf0>)
 8003edc:	7812      	ldrb	r2, [r2, #0]
 8003ede:	701d      	strb	r5, [r3, #0]
 8003ee0:	705d      	strb	r5, [r3, #1]
 8003ee2:	70da      	strb	r2, [r3, #3]
 8003ee4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003ee8:	f7ff ba7e 	b.w	80033e8 <rt_init_robin>
 8003eec:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8003ef0:	3301      	adds	r3, #1
 8003ef2:	e7ab      	b.n	8003e4c <rt_sys_init+0xc>
 8003ef4:	08008ea8 	.word	0x08008ea8
 8003ef8:	20001afc 	.word	0x20001afc
 8003efc:	08008e74 	.word	0x08008e74
 8003f00:	20001dd0 	.word	0x20001dd0
 8003f04:	200021c8 	.word	0x200021c8
 8003f08:	08008ec4 	.word	0x08008ec4
 8003f0c:	20001b38 	.word	0x20001b38
 8003f10:	08008e70 	.word	0x08008e70
 8003f14:	08008e76 	.word	0x08008e76
 8003f18:	200002a0 	.word	0x200002a0
 8003f1c:	08002e65 	.word	0x08002e65
 8003f20:	200017a8 	.word	0x200017a8
 8003f24:	200017c0 	.word	0x200017c0
 8003f28:	200021c0 	.word	0x200021c0
 8003f2c:	08008ea5 	.word	0x08008ea5
 8003f30:	20001d48 	.word	0x20001d48

08003f34 <rt_sys_start>:
 8003f34:	b508      	push	{r3, lr}
 8003f36:	4b1e      	ldr	r3, [pc, #120]	; (8003fb0 <rt_sys_start+0x7c>)
 8003f38:	681a      	ldr	r2, [r3, #0]
 8003f3a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8003f3e:	601a      	str	r2, [r3, #0]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	021b      	lsls	r3, r3, #8
 8003f44:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003f48:	43db      	mvns	r3, r3
 8003f4a:	fab3 f383 	clz	r3, r3
 8003f4e:	4a19      	ldr	r2, [pc, #100]	; (8003fb4 <rt_sys_start+0x80>)
 8003f50:	4819      	ldr	r0, [pc, #100]	; (8003fb8 <rt_sys_start+0x84>)
 8003f52:	6812      	ldr	r2, [r2, #0]
 8003f54:	6801      	ldr	r1, [r0, #0]
 8003f56:	b2db      	uxtb	r3, r3
 8003f58:	f1c3 0308 	rsb	r3, r3, #8
 8003f5c:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8003f60:	4293      	cmp	r3, r2
 8003f62:	bf98      	it	ls
 8003f64:	1c53      	addls	r3, r2, #1
 8003f66:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8003f6a:	fa02 f303 	lsl.w	r3, r2, r3
 8003f6e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003f72:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8003f76:	4313      	orrs	r3, r2
 8003f78:	6003      	str	r3, [r0, #0]
 8003f7a:	f7ff f871 	bl	8003060 <os_tick_init>
 8003f7e:	4b0f      	ldr	r3, [pc, #60]	; (8003fbc <rt_sys_start+0x88>)
 8003f80:	2800      	cmp	r0, #0
 8003f82:	6018      	str	r0, [r3, #0]
 8003f84:	db12      	blt.n	8003fac <rt_sys_start+0x78>
 8003f86:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8003f8a:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8003f8e:	22ff      	movs	r2, #255	; 0xff
 8003f90:	7002      	strb	r2, [r0, #0]
 8003f92:	681a      	ldr	r2, [r3, #0]
 8003f94:	0953      	lsrs	r3, r2, #5
 8003f96:	009b      	lsls	r3, r3, #2
 8003f98:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8003f9c:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8003fa0:	f002 021f 	and.w	r2, r2, #31
 8003fa4:	2101      	movs	r1, #1
 8003fa6:	fa01 f202 	lsl.w	r2, r1, r2
 8003faa:	601a      	str	r2, [r3, #0]
 8003fac:	bd08      	pop	{r3, pc}
 8003fae:	bf00      	nop
 8003fb0:	e000ed20 	.word	0xe000ed20
 8003fb4:	e000ed0c 	.word	0xe000ed0c
 8003fb8:	e000ed1c 	.word	0xe000ed1c
 8003fbc:	200021a0 	.word	0x200021a0

08003fc0 <rt_mut_init>:
 8003fc0:	2303      	movs	r3, #3
 8003fc2:	7003      	strb	r3, [r0, #0]
 8003fc4:	2300      	movs	r3, #0
 8003fc6:	8043      	strh	r3, [r0, #2]
 8003fc8:	6043      	str	r3, [r0, #4]
 8003fca:	6083      	str	r3, [r0, #8]
 8003fcc:	60c3      	str	r3, [r0, #12]
 8003fce:	4770      	bx	lr

08003fd0 <rt_mut_delete>:
 8003fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fd2:	8843      	ldrh	r3, [r0, #2]
 8003fd4:	4604      	mov	r4, r0
 8003fd6:	b19b      	cbz	r3, 8004000 <rt_mut_delete+0x30>
 8003fd8:	6880      	ldr	r0, [r0, #8]
 8003fda:	6a03      	ldr	r3, [r0, #32]
 8003fdc:	429c      	cmp	r4, r3
 8003fde:	d128      	bne.n	8004032 <rt_mut_delete+0x62>
 8003fe0:	68e3      	ldr	r3, [r4, #12]
 8003fe2:	6203      	str	r3, [r0, #32]
 8003fe4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8003fe8:	6a02      	ldr	r2, [r0, #32]
 8003fea:	bb52      	cbnz	r2, 8004042 <rt_mut_delete+0x72>
 8003fec:	7882      	ldrb	r2, [r0, #2]
 8003fee:	429a      	cmp	r2, r3
 8003ff0:	d006      	beq.n	8004000 <rt_mut_delete+0x30>
 8003ff2:	7083      	strb	r3, [r0, #2]
 8003ff4:	4b1f      	ldr	r3, [pc, #124]	; (8004074 <rt_mut_delete+0xa4>)
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	4298      	cmp	r0, r3
 8003ffa:	d001      	beq.n	8004000 <rt_mut_delete+0x30>
 8003ffc:	f7fe febc 	bl	8002d78 <rt_resort_prio>
 8004000:	4f1d      	ldr	r7, [pc, #116]	; (8004078 <rt_mut_delete+0xa8>)
 8004002:	2601      	movs	r6, #1
 8004004:	6865      	ldr	r5, [r4, #4]
 8004006:	bb25      	cbnz	r5, 8004052 <rt_mut_delete+0x82>
 8004008:	481b      	ldr	r0, [pc, #108]	; (8004078 <rt_mut_delete+0xa8>)
 800400a:	6843      	ldr	r3, [r0, #4]
 800400c:	b16b      	cbz	r3, 800402a <rt_mut_delete+0x5a>
 800400e:	4e19      	ldr	r6, [pc, #100]	; (8004074 <rt_mut_delete+0xa4>)
 8004010:	789a      	ldrb	r2, [r3, #2]
 8004012:	6831      	ldr	r1, [r6, #0]
 8004014:	788b      	ldrb	r3, [r1, #2]
 8004016:	429a      	cmp	r2, r3
 8004018:	d907      	bls.n	800402a <rt_mut_delete+0x5a>
 800401a:	f7fe fe07 	bl	8002c2c <rt_put_prio>
 800401e:	6833      	ldr	r3, [r6, #0]
 8004020:	2201      	movs	r2, #1
 8004022:	705a      	strb	r2, [r3, #1]
 8004024:	4628      	mov	r0, r5
 8004026:	f7ff fd87 	bl	8003b38 <rt_dispatch>
 800402a:	2000      	movs	r0, #0
 800402c:	7020      	strb	r0, [r4, #0]
 800402e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004030:	4613      	mov	r3, r2
 8004032:	2b00      	cmp	r3, #0
 8004034:	d0d6      	beq.n	8003fe4 <rt_mut_delete+0x14>
 8004036:	68da      	ldr	r2, [r3, #12]
 8004038:	4294      	cmp	r4, r2
 800403a:	d1f9      	bne.n	8004030 <rt_mut_delete+0x60>
 800403c:	68e2      	ldr	r2, [r4, #12]
 800403e:	60da      	str	r2, [r3, #12]
 8004040:	e7d0      	b.n	8003fe4 <rt_mut_delete+0x14>
 8004042:	6851      	ldr	r1, [r2, #4]
 8004044:	b119      	cbz	r1, 800404e <rt_mut_delete+0x7e>
 8004046:	7889      	ldrb	r1, [r1, #2]
 8004048:	428b      	cmp	r3, r1
 800404a:	bf38      	it	cc
 800404c:	460b      	movcc	r3, r1
 800404e:	68d2      	ldr	r2, [r2, #12]
 8004050:	e7cb      	b.n	8003fea <rt_mut_delete+0x1a>
 8004052:	4620      	mov	r0, r4
 8004054:	f7fe fe02 	bl	8002c5c <rt_get_first>
 8004058:	2100      	movs	r1, #0
 800405a:	4605      	mov	r5, r0
 800405c:	f7fe ff9e 	bl	8002f9c <rt_ret_val>
 8004060:	4628      	mov	r0, r5
 8004062:	f7fe fea1 	bl	8002da8 <rt_rmv_dly>
 8004066:	706e      	strb	r6, [r5, #1]
 8004068:	4629      	mov	r1, r5
 800406a:	4638      	mov	r0, r7
 800406c:	f7fe fdde 	bl	8002c2c <rt_put_prio>
 8004070:	e7c8      	b.n	8004004 <rt_mut_delete+0x34>
 8004072:	bf00      	nop
 8004074:	200021c0 	.word	0x200021c0
 8004078:	200017a8 	.word	0x200017a8

0800407c <rt_mut_release>:
 800407c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004080:	8843      	ldrh	r3, [r0, #2]
 8004082:	4605      	mov	r5, r0
 8004084:	2b00      	cmp	r3, #0
 8004086:	d063      	beq.n	8004150 <rt_mut_release+0xd4>
 8004088:	4f32      	ldr	r7, [pc, #200]	; (8004154 <rt_mut_release+0xd8>)
 800408a:	6881      	ldr	r1, [r0, #8]
 800408c:	683a      	ldr	r2, [r7, #0]
 800408e:	4291      	cmp	r1, r2
 8004090:	d15e      	bne.n	8004150 <rt_mut_release+0xd4>
 8004092:	3b01      	subs	r3, #1
 8004094:	b29b      	uxth	r3, r3
 8004096:	8043      	strh	r3, [r0, #2]
 8004098:	b11b      	cbz	r3, 80040a2 <rt_mut_release+0x26>
 800409a:	2400      	movs	r4, #0
 800409c:	4620      	mov	r0, r4
 800409e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80040a2:	6a0b      	ldr	r3, [r1, #32]
 80040a4:	4298      	cmp	r0, r3
 80040a6:	d129      	bne.n	80040fc <rt_mut_release+0x80>
 80040a8:	68c3      	ldr	r3, [r0, #12]
 80040aa:	620b      	str	r3, [r1, #32]
 80040ac:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80040b0:	6a0c      	ldr	r4, [r1, #32]
 80040b2:	bb5c      	cbnz	r4, 800410c <rt_mut_release+0x90>
 80040b4:	708b      	strb	r3, [r1, #2]
 80040b6:	686a      	ldr	r2, [r5, #4]
 80040b8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8004158 <rt_mut_release+0xdc>
 80040bc:	2a00      	cmp	r2, #0
 80040be:	d03b      	beq.n	8004138 <rt_mut_release+0xbc>
 80040c0:	4628      	mov	r0, r5
 80040c2:	f7fe fdcb 	bl	8002c5c <rt_get_first>
 80040c6:	4621      	mov	r1, r4
 80040c8:	4606      	mov	r6, r0
 80040ca:	f7fe ff67 	bl	8002f9c <rt_ret_val>
 80040ce:	4630      	mov	r0, r6
 80040d0:	f7fe fe6a 	bl	8002da8 <rt_rmv_dly>
 80040d4:	6a33      	ldr	r3, [r6, #32]
 80040d6:	60eb      	str	r3, [r5, #12]
 80040d8:	f04f 0901 	mov.w	r9, #1
 80040dc:	6839      	ldr	r1, [r7, #0]
 80040de:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80040e2:	f8a5 9002 	strh.w	r9, [r5, #2]
 80040e6:	60ae      	str	r6, [r5, #8]
 80040e8:	6235      	str	r5, [r6, #32]
 80040ea:	788a      	ldrb	r2, [r1, #2]
 80040ec:	789b      	ldrb	r3, [r3, #2]
 80040ee:	429a      	cmp	r2, r3
 80040f0:	d314      	bcc.n	800411c <rt_mut_release+0xa0>
 80040f2:	4630      	mov	r0, r6
 80040f4:	f7ff fd20 	bl	8003b38 <rt_dispatch>
 80040f8:	e7d0      	b.n	800409c <rt_mut_release+0x20>
 80040fa:	4613      	mov	r3, r2
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d0d5      	beq.n	80040ac <rt_mut_release+0x30>
 8004100:	68da      	ldr	r2, [r3, #12]
 8004102:	4295      	cmp	r5, r2
 8004104:	d1f9      	bne.n	80040fa <rt_mut_release+0x7e>
 8004106:	68ea      	ldr	r2, [r5, #12]
 8004108:	60da      	str	r2, [r3, #12]
 800410a:	e7cf      	b.n	80040ac <rt_mut_release+0x30>
 800410c:	6862      	ldr	r2, [r4, #4]
 800410e:	b11a      	cbz	r2, 8004118 <rt_mut_release+0x9c>
 8004110:	7892      	ldrb	r2, [r2, #2]
 8004112:	4293      	cmp	r3, r2
 8004114:	bf38      	it	cc
 8004116:	4613      	movcc	r3, r2
 8004118:	68e4      	ldr	r4, [r4, #12]
 800411a:	e7ca      	b.n	80040b2 <rt_mut_release+0x36>
 800411c:	4640      	mov	r0, r8
 800411e:	f7fe fd85 	bl	8002c2c <rt_put_prio>
 8004122:	4631      	mov	r1, r6
 8004124:	4640      	mov	r0, r8
 8004126:	f7fe fd81 	bl	8002c2c <rt_put_prio>
 800412a:	683b      	ldr	r3, [r7, #0]
 800412c:	f883 9001 	strb.w	r9, [r3, #1]
 8004130:	f886 9001 	strb.w	r9, [r6, #1]
 8004134:	4620      	mov	r0, r4
 8004136:	e7dd      	b.n	80040f4 <rt_mut_release+0x78>
 8004138:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800413c:	7892      	ldrb	r2, [r2, #2]
 800413e:	429a      	cmp	r2, r3
 8004140:	d9ab      	bls.n	800409a <rt_mut_release+0x1e>
 8004142:	4640      	mov	r0, r8
 8004144:	f7fe fd72 	bl	8002c2c <rt_put_prio>
 8004148:	683b      	ldr	r3, [r7, #0]
 800414a:	2201      	movs	r2, #1
 800414c:	705a      	strb	r2, [r3, #1]
 800414e:	e7f1      	b.n	8004134 <rt_mut_release+0xb8>
 8004150:	24ff      	movs	r4, #255	; 0xff
 8004152:	e7a3      	b.n	800409c <rt_mut_release+0x20>
 8004154:	200021c0 	.word	0x200021c0
 8004158:	200017a8 	.word	0x200017a8

0800415c <rt_mut_wait>:
 800415c:	8843      	ldrh	r3, [r0, #2]
 800415e:	b570      	push	{r4, r5, r6, lr}
 8004160:	4604      	mov	r4, r0
 8004162:	460e      	mov	r6, r1
 8004164:	4d13      	ldr	r5, [pc, #76]	; (80041b4 <rt_mut_wait+0x58>)
 8004166:	b943      	cbnz	r3, 800417a <rt_mut_wait+0x1e>
 8004168:	682a      	ldr	r2, [r5, #0]
 800416a:	6082      	str	r2, [r0, #8]
 800416c:	6a11      	ldr	r1, [r2, #32]
 800416e:	60c1      	str	r1, [r0, #12]
 8004170:	6210      	str	r0, [r2, #32]
 8004172:	3301      	adds	r3, #1
 8004174:	8063      	strh	r3, [r4, #2]
 8004176:	2000      	movs	r0, #0
 8004178:	bd70      	pop	{r4, r5, r6, pc}
 800417a:	6880      	ldr	r0, [r0, #8]
 800417c:	682a      	ldr	r2, [r5, #0]
 800417e:	4290      	cmp	r0, r2
 8004180:	d0f7      	beq.n	8004172 <rt_mut_wait+0x16>
 8004182:	b181      	cbz	r1, 80041a6 <rt_mut_wait+0x4a>
 8004184:	7893      	ldrb	r3, [r2, #2]
 8004186:	7882      	ldrb	r2, [r0, #2]
 8004188:	429a      	cmp	r2, r3
 800418a:	d202      	bcs.n	8004192 <rt_mut_wait+0x36>
 800418c:	7083      	strb	r3, [r0, #2]
 800418e:	f7fe fdf3 	bl	8002d78 <rt_resort_prio>
 8004192:	6862      	ldr	r2, [r4, #4]
 8004194:	b14a      	cbz	r2, 80041aa <rt_mut_wait+0x4e>
 8004196:	6829      	ldr	r1, [r5, #0]
 8004198:	4620      	mov	r0, r4
 800419a:	f7fe fd47 	bl	8002c2c <rt_put_prio>
 800419e:	2109      	movs	r1, #9
 80041a0:	4630      	mov	r0, r6
 80041a2:	f7ff fced 	bl	8003b80 <rt_block>
 80041a6:	2001      	movs	r0, #1
 80041a8:	bd70      	pop	{r4, r5, r6, pc}
 80041aa:	682b      	ldr	r3, [r5, #0]
 80041ac:	6063      	str	r3, [r4, #4]
 80041ae:	605a      	str	r2, [r3, #4]
 80041b0:	609c      	str	r4, [r3, #8]
 80041b2:	e7f4      	b.n	800419e <rt_mut_wait+0x42>
 80041b4:	200021c0 	.word	0x200021c0

080041b8 <rt_dly_wait>:
 80041b8:	2103      	movs	r1, #3
 80041ba:	f7ff bce1 	b.w	8003b80 <rt_block>
	...

080041c0 <rt_sem_psh>:
 80041c0:	6842      	ldr	r2, [r0, #4]
 80041c2:	b510      	push	{r4, lr}
 80041c4:	b17a      	cbz	r2, 80041e6 <rt_sem_psh+0x26>
 80041c6:	f7fe fd49 	bl	8002c5c <rt_get_first>
 80041ca:	4604      	mov	r4, r0
 80041cc:	f7fe fdec 	bl	8002da8 <rt_rmv_dly>
 80041d0:	2101      	movs	r1, #1
 80041d2:	7061      	strb	r1, [r4, #1]
 80041d4:	4620      	mov	r0, r4
 80041d6:	f7fe fee1 	bl	8002f9c <rt_ret_val>
 80041da:	4621      	mov	r1, r4
 80041dc:	4804      	ldr	r0, [pc, #16]	; (80041f0 <rt_sem_psh+0x30>)
 80041de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80041e2:	f7fe bd23 	b.w	8002c2c <rt_put_prio>
 80041e6:	8842      	ldrh	r2, [r0, #2]
 80041e8:	3201      	adds	r2, #1
 80041ea:	8042      	strh	r2, [r0, #2]
 80041ec:	bd10      	pop	{r4, pc}
 80041ee:	bf00      	nop
 80041f0:	200017a8 	.word	0x200017a8

080041f4 <timer_irq_handler>:
 80041f4:	b570      	push	{r4, r5, r6, lr}
 80041f6:	4c13      	ldr	r4, [pc, #76]	; (8004244 <timer_irq_handler+0x50>)
 80041f8:	6823      	ldr	r3, [r4, #0]
 80041fa:	691a      	ldr	r2, [r3, #16]
 80041fc:	0795      	lsls	r5, r2, #30
 80041fe:	d507      	bpl.n	8004210 <timer_irq_handler+0x1c>
 8004200:	68da      	ldr	r2, [r3, #12]
 8004202:	0790      	lsls	r0, r2, #30
 8004204:	d504      	bpl.n	8004210 <timer_irq_handler+0x1c>
 8004206:	f06f 0202 	mvn.w	r2, #2
 800420a:	611a      	str	r2, [r3, #16]
 800420c:	f7fe fc40 	bl	8002a90 <us_ticker_irq_handler>
 8004210:	6823      	ldr	r3, [r4, #0]
 8004212:	691a      	ldr	r2, [r3, #16]
 8004214:	0751      	lsls	r1, r2, #29
 8004216:	d513      	bpl.n	8004240 <timer_irq_handler+0x4c>
 8004218:	68da      	ldr	r2, [r3, #12]
 800421a:	0752      	lsls	r2, r2, #29
 800421c:	d510      	bpl.n	8004240 <timer_irq_handler+0x4c>
 800421e:	f06f 0204 	mvn.w	r2, #4
 8004222:	4e09      	ldr	r6, [pc, #36]	; (8004248 <timer_irq_handler+0x54>)
 8004224:	611a      	str	r2, [r3, #16]
 8004226:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004228:	6833      	ldr	r3, [r6, #0]
 800422a:	1aeb      	subs	r3, r5, r3
 800422c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004230:	d306      	bcc.n	8004240 <timer_irq_handler+0x4c>
 8004232:	f002 fb99 	bl	8006968 <HAL_IncTick>
 8004236:	6823      	ldr	r3, [r4, #0]
 8004238:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 800423c:	639a      	str	r2, [r3, #56]	; 0x38
 800423e:	6035      	str	r5, [r6, #0]
 8004240:	bd70      	pop	{r4, r5, r6, pc}
 8004242:	bf00      	nop
 8004244:	2000220c 	.word	0x2000220c
 8004248:	20001314 	.word	0x20001314

0800424c <HAL_InitTick>:
 800424c:	b530      	push	{r4, r5, lr}
 800424e:	b089      	sub	sp, #36	; 0x24
 8004250:	a901      	add	r1, sp, #4
 8004252:	a803      	add	r0, sp, #12
 8004254:	f002 fb04 	bl	8006860 <HAL_RCC_GetClockConfig>
 8004258:	f002 fad2 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 800425c:	2300      	movs	r3, #0
 800425e:	9302      	str	r3, [sp, #8]
 8004260:	4b24      	ldr	r3, [pc, #144]	; (80042f4 <HAL_InitTick+0xa8>)
 8004262:	9001      	str	r0, [sp, #4]
 8004264:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004266:	4c24      	ldr	r4, [pc, #144]	; (80042f8 <HAL_InitTick+0xac>)
 8004268:	f042 0208 	orr.w	r2, r2, #8
 800426c:	641a      	str	r2, [r3, #64]	; 0x40
 800426e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004270:	f002 0208 	and.w	r2, r2, #8
 8004274:	9202      	str	r2, [sp, #8]
 8004276:	9a02      	ldr	r2, [sp, #8]
 8004278:	6a1a      	ldr	r2, [r3, #32]
 800427a:	f042 0208 	orr.w	r2, r2, #8
 800427e:	621a      	str	r2, [r3, #32]
 8004280:	6a1a      	ldr	r2, [r3, #32]
 8004282:	f022 0208 	bic.w	r2, r2, #8
 8004286:	621a      	str	r2, [r3, #32]
 8004288:	9a06      	ldr	r2, [sp, #24]
 800428a:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 800428e:	6023      	str	r3, [r4, #0]
 8004290:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004294:	60e3      	str	r3, [r4, #12]
 8004296:	4b19      	ldr	r3, [pc, #100]	; (80042fc <HAL_InitTick+0xb0>)
 8004298:	bb4a      	cbnz	r2, 80042ee <HAL_InitTick+0xa2>
 800429a:	fbb0 f0f3 	udiv	r0, r0, r3
 800429e:	3801      	subs	r0, #1
 80042a0:	2500      	movs	r5, #0
 80042a2:	6060      	str	r0, [r4, #4]
 80042a4:	4814      	ldr	r0, [pc, #80]	; (80042f8 <HAL_InitTick+0xac>)
 80042a6:	6125      	str	r5, [r4, #16]
 80042a8:	60a5      	str	r5, [r4, #8]
 80042aa:	6165      	str	r5, [r4, #20]
 80042ac:	f002 f954 	bl	8006558 <HAL_TIM_OC_Init>
 80042b0:	4913      	ldr	r1, [pc, #76]	; (8004300 <HAL_InitTick+0xb4>)
 80042b2:	2032      	movs	r0, #50	; 0x32
 80042b4:	f001 f8b6 	bl	8005424 <__NVIC_SetVector>
 80042b8:	4b12      	ldr	r3, [pc, #72]	; (8004304 <HAL_InitTick+0xb8>)
 80042ba:	480f      	ldr	r0, [pc, #60]	; (80042f8 <HAL_InitTick+0xac>)
 80042bc:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80042c0:	605a      	str	r2, [r3, #4]
 80042c2:	4629      	mov	r1, r5
 80042c4:	f002 f988 	bl	80065d8 <HAL_TIM_OC_Start>
 80042c8:	2104      	movs	r1, #4
 80042ca:	480b      	ldr	r0, [pc, #44]	; (80042f8 <HAL_InitTick+0xac>)
 80042cc:	f002 f984 	bl	80065d8 <HAL_TIM_OC_Start>
 80042d0:	6823      	ldr	r3, [r4, #0]
 80042d2:	4a0d      	ldr	r2, [pc, #52]	; (8004308 <HAL_InitTick+0xbc>)
 80042d4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80042d6:	6011      	str	r1, [r2, #0]
 80042d8:	6812      	ldr	r2, [r2, #0]
 80042da:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80042de:	639a      	str	r2, [r3, #56]	; 0x38
 80042e0:	68da      	ldr	r2, [r3, #12]
 80042e2:	4628      	mov	r0, r5
 80042e4:	f042 0204 	orr.w	r2, r2, #4
 80042e8:	60da      	str	r2, [r3, #12]
 80042ea:	b009      	add	sp, #36	; 0x24
 80042ec:	bd30      	pop	{r4, r5, pc}
 80042ee:	0040      	lsls	r0, r0, #1
 80042f0:	e7d3      	b.n	800429a <HAL_InitTick+0x4e>
 80042f2:	bf00      	nop
 80042f4:	40023800 	.word	0x40023800
 80042f8:	2000220c 	.word	0x2000220c
 80042fc:	000f4240 	.word	0x000f4240
 8004300:	080041f5 	.word	0x080041f5
 8004304:	e000e100 	.word	0xe000e100
 8004308:	20001314 	.word	0x20001314

0800430c <HAL_SuspendTick>:
 800430c:	4b03      	ldr	r3, [pc, #12]	; (800431c <HAL_SuspendTick+0x10>)
 800430e:	4a04      	ldr	r2, [pc, #16]	; (8004320 <HAL_SuspendTick+0x14>)
 8004310:	6013      	str	r3, [r2, #0]
 8004312:	68da      	ldr	r2, [r3, #12]
 8004314:	f022 0204 	bic.w	r2, r2, #4
 8004318:	60da      	str	r2, [r3, #12]
 800431a:	4770      	bx	lr
 800431c:	40000c00 	.word	0x40000c00
 8004320:	2000220c 	.word	0x2000220c

08004324 <HAL_ResumeTick>:
 8004324:	4b03      	ldr	r3, [pc, #12]	; (8004334 <HAL_ResumeTick+0x10>)
 8004326:	4a04      	ldr	r2, [pc, #16]	; (8004338 <HAL_ResumeTick+0x14>)
 8004328:	6013      	str	r3, [r2, #0]
 800432a:	68da      	ldr	r2, [r3, #12]
 800432c:	f042 0204 	orr.w	r2, r2, #4
 8004330:	60da      	str	r2, [r3, #12]
 8004332:	4770      	bx	lr
 8004334:	40000c00 	.word	0x40000c00
 8004338:	2000220c 	.word	0x2000220c

0800433c <Set_GPIO_Clock>:
 800433c:	b500      	push	{lr}
 800433e:	2300      	movs	r3, #0
 8004340:	b089      	sub	sp, #36	; 0x24
 8004342:	2807      	cmp	r0, #7
 8004344:	d86f      	bhi.n	8004426 <Set_GPIO_Clock+0xea>
 8004346:	e8df f000 	tbb	[pc, r0]
 800434a:	1304      	.short	0x1304
 800434c:	473a2d20 	.word	0x473a2d20
 8004350:	6154      	.short	0x6154
 8004352:	9300      	str	r3, [sp, #0]
 8004354:	4b36      	ldr	r3, [pc, #216]	; (8004430 <Set_GPIO_Clock+0xf4>)
 8004356:	4837      	ldr	r0, [pc, #220]	; (8004434 <Set_GPIO_Clock+0xf8>)
 8004358:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800435a:	f042 0201 	orr.w	r2, r2, #1
 800435e:	631a      	str	r2, [r3, #48]	; 0x30
 8004360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004362:	f003 0301 	and.w	r3, r3, #1
 8004366:	9300      	str	r3, [sp, #0]
 8004368:	9b00      	ldr	r3, [sp, #0]
 800436a:	b009      	add	sp, #36	; 0x24
 800436c:	f85d fb04 	ldr.w	pc, [sp], #4
 8004370:	9301      	str	r3, [sp, #4]
 8004372:	4b2f      	ldr	r3, [pc, #188]	; (8004430 <Set_GPIO_Clock+0xf4>)
 8004374:	4830      	ldr	r0, [pc, #192]	; (8004438 <Set_GPIO_Clock+0xfc>)
 8004376:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004378:	f042 0202 	orr.w	r2, r2, #2
 800437c:	631a      	str	r2, [r3, #48]	; 0x30
 800437e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004380:	f003 0302 	and.w	r3, r3, #2
 8004384:	9301      	str	r3, [sp, #4]
 8004386:	9b01      	ldr	r3, [sp, #4]
 8004388:	e7ef      	b.n	800436a <Set_GPIO_Clock+0x2e>
 800438a:	9302      	str	r3, [sp, #8]
 800438c:	4b28      	ldr	r3, [pc, #160]	; (8004430 <Set_GPIO_Clock+0xf4>)
 800438e:	482b      	ldr	r0, [pc, #172]	; (800443c <Set_GPIO_Clock+0x100>)
 8004390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004392:	f042 0204 	orr.w	r2, r2, #4
 8004396:	631a      	str	r2, [r3, #48]	; 0x30
 8004398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800439a:	f003 0304 	and.w	r3, r3, #4
 800439e:	9302      	str	r3, [sp, #8]
 80043a0:	9b02      	ldr	r3, [sp, #8]
 80043a2:	e7e2      	b.n	800436a <Set_GPIO_Clock+0x2e>
 80043a4:	9303      	str	r3, [sp, #12]
 80043a6:	4b22      	ldr	r3, [pc, #136]	; (8004430 <Set_GPIO_Clock+0xf4>)
 80043a8:	4825      	ldr	r0, [pc, #148]	; (8004440 <Set_GPIO_Clock+0x104>)
 80043aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80043ac:	f042 0208 	orr.w	r2, r2, #8
 80043b0:	631a      	str	r2, [r3, #48]	; 0x30
 80043b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043b4:	f003 0308 	and.w	r3, r3, #8
 80043b8:	9303      	str	r3, [sp, #12]
 80043ba:	9b03      	ldr	r3, [sp, #12]
 80043bc:	e7d5      	b.n	800436a <Set_GPIO_Clock+0x2e>
 80043be:	9304      	str	r3, [sp, #16]
 80043c0:	4b1b      	ldr	r3, [pc, #108]	; (8004430 <Set_GPIO_Clock+0xf4>)
 80043c2:	4820      	ldr	r0, [pc, #128]	; (8004444 <Set_GPIO_Clock+0x108>)
 80043c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80043c6:	f042 0210 	orr.w	r2, r2, #16
 80043ca:	631a      	str	r2, [r3, #48]	; 0x30
 80043cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043ce:	f003 0310 	and.w	r3, r3, #16
 80043d2:	9304      	str	r3, [sp, #16]
 80043d4:	9b04      	ldr	r3, [sp, #16]
 80043d6:	e7c8      	b.n	800436a <Set_GPIO_Clock+0x2e>
 80043d8:	9305      	str	r3, [sp, #20]
 80043da:	4b15      	ldr	r3, [pc, #84]	; (8004430 <Set_GPIO_Clock+0xf4>)
 80043dc:	481a      	ldr	r0, [pc, #104]	; (8004448 <Set_GPIO_Clock+0x10c>)
 80043de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80043e0:	f042 0220 	orr.w	r2, r2, #32
 80043e4:	631a      	str	r2, [r3, #48]	; 0x30
 80043e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043e8:	f003 0320 	and.w	r3, r3, #32
 80043ec:	9305      	str	r3, [sp, #20]
 80043ee:	9b05      	ldr	r3, [sp, #20]
 80043f0:	e7bb      	b.n	800436a <Set_GPIO_Clock+0x2e>
 80043f2:	9306      	str	r3, [sp, #24]
 80043f4:	4b0e      	ldr	r3, [pc, #56]	; (8004430 <Set_GPIO_Clock+0xf4>)
 80043f6:	4815      	ldr	r0, [pc, #84]	; (800444c <Set_GPIO_Clock+0x110>)
 80043f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80043fa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80043fe:	631a      	str	r2, [r3, #48]	; 0x30
 8004400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004402:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004406:	9306      	str	r3, [sp, #24]
 8004408:	9b06      	ldr	r3, [sp, #24]
 800440a:	e7ae      	b.n	800436a <Set_GPIO_Clock+0x2e>
 800440c:	9307      	str	r3, [sp, #28]
 800440e:	4b08      	ldr	r3, [pc, #32]	; (8004430 <Set_GPIO_Clock+0xf4>)
 8004410:	480f      	ldr	r0, [pc, #60]	; (8004450 <Set_GPIO_Clock+0x114>)
 8004412:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004414:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004418:	631a      	str	r2, [r3, #48]	; 0x30
 800441a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800441c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004420:	9307      	str	r3, [sp, #28]
 8004422:	9b07      	ldr	r3, [sp, #28]
 8004424:	e7a1      	b.n	800436a <Set_GPIO_Clock+0x2e>
 8004426:	480b      	ldr	r0, [pc, #44]	; (8004454 <Set_GPIO_Clock+0x118>)
 8004428:	f7fe fbf0 	bl	8002c0c <error>
 800442c:	2000      	movs	r0, #0
 800442e:	e79c      	b.n	800436a <Set_GPIO_Clock+0x2e>
 8004430:	40023800 	.word	0x40023800
 8004434:	40020000 	.word	0x40020000
 8004438:	40020400 	.word	0x40020400
 800443c:	40020800 	.word	0x40020800
 8004440:	40020c00 	.word	0x40020c00
 8004444:	40021000 	.word	0x40021000
 8004448:	40021400 	.word	0x40021400
 800444c:	40021800 	.word	0x40021800
 8004450:	40021c00 	.word	0x40021c00
 8004454:	08008ee4 	.word	0x08008ee4

08004458 <gpio_set>:
 8004458:	b510      	push	{r4, lr}
 800445a:	2100      	movs	r1, #0
 800445c:	4604      	mov	r4, r0
 800445e:	f004 040f 	and.w	r4, r4, #15
 8004462:	f000 fbb9 	bl	8004bd8 <pin_function>
 8004466:	2001      	movs	r0, #1
 8004468:	40a0      	lsls	r0, r4
 800446a:	bd10      	pop	{r4, pc}

0800446c <gpio_init>:
 800446c:	b570      	push	{r4, r5, r6, lr}
 800446e:	4604      	mov	r4, r0
 8004470:	1c4b      	adds	r3, r1, #1
 8004472:	460e      	mov	r6, r1
 8004474:	8221      	strh	r1, [r4, #16]
 8004476:	d016      	beq.n	80044a6 <gpio_init+0x3a>
 8004478:	f3c1 1003 	ubfx	r0, r1, #4, #4
 800447c:	f7ff ff5e 	bl	800433c <Set_GPIO_Clock>
 8004480:	4605      	mov	r5, r0
 8004482:	4630      	mov	r0, r6
 8004484:	f7ff ffe8 	bl	8004458 <gpio_set>
 8004488:	8a23      	ldrh	r3, [r4, #16]
 800448a:	4a07      	ldr	r2, [pc, #28]	; (80044a8 <gpio_init+0x3c>)
 800448c:	6165      	str	r5, [r4, #20]
 800448e:	f003 030f 	and.w	r3, r3, #15
 8004492:	6020      	str	r0, [r4, #0]
 8004494:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004498:	61a3      	str	r3, [r4, #24]
 800449a:	f105 0310 	add.w	r3, r5, #16
 800449e:	3518      	adds	r5, #24
 80044a0:	6063      	str	r3, [r4, #4]
 80044a2:	60a5      	str	r5, [r4, #8]
 80044a4:	60e5      	str	r5, [r4, #12]
 80044a6:	bd70      	pop	{r4, r5, r6, pc}
 80044a8:	08008fd4 	.word	0x08008fd4

080044ac <gpio_mode>:
 80044ac:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 80044b0:	f000 bc16 	b.w	8004ce0 <pin_mode>

080044b4 <gpio_dir>:
 80044b4:	b510      	push	{r4, lr}
 80044b6:	6983      	ldr	r3, [r0, #24]
 80044b8:	6944      	ldr	r4, [r0, #20]
 80044ba:	b971      	cbnz	r1, 80044da <gpio_dir+0x26>
 80044bc:	6821      	ldr	r1, [r4, #0]
 80044be:	fa93 f2a3 	rbit	r2, r3
 80044c2:	fab2 f282 	clz	r2, r2
 80044c6:	2003      	movs	r0, #3
 80044c8:	0052      	lsls	r2, r2, #1
 80044ca:	fa00 f202 	lsl.w	r2, r0, r2
 80044ce:	ea21 0202 	bic.w	r2, r1, r2
 80044d2:	fa93 f3a3 	rbit	r3, r3
 80044d6:	6022      	str	r2, [r4, #0]
 80044d8:	bd10      	pop	{r4, pc}
 80044da:	6822      	ldr	r2, [r4, #0]
 80044dc:	fa93 f1a3 	rbit	r1, r3
 80044e0:	fab1 f181 	clz	r1, r1
 80044e4:	fa93 f3a3 	rbit	r3, r3
 80044e8:	2003      	movs	r0, #3
 80044ea:	0049      	lsls	r1, r1, #1
 80044ec:	fa00 f101 	lsl.w	r1, r0, r1
 80044f0:	fab3 f383 	clz	r3, r3
 80044f4:	ea22 0201 	bic.w	r2, r2, r1
 80044f8:	005b      	lsls	r3, r3, #1
 80044fa:	2101      	movs	r1, #1
 80044fc:	fa01 f303 	lsl.w	r3, r1, r3
 8004500:	4313      	orrs	r3, r2
 8004502:	6023      	str	r3, [r4, #0]
 8004504:	bd10      	pop	{r4, pc}

08004506 <hal_sleep>:
 8004506:	b508      	push	{r3, lr}
 8004508:	f7ff ff00 	bl	800430c <HAL_SuspendTick>
 800450c:	2101      	movs	r1, #1
 800450e:	2000      	movs	r0, #0
 8004510:	f002 f864 	bl	80065dc <HAL_PWR_EnterSLEEPMode>
 8004514:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004518:	f7ff bf04 	b.w	8004324 <HAL_ResumeTick>

0800451c <can_irq>:
 800451c:	6943      	ldr	r3, [r0, #20]
 800451e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004522:	4c3a      	ldr	r4, [pc, #232]	; (800460c <can_irq+0xf0>)
 8004524:	460d      	mov	r5, r1
 8004526:	07d9      	lsls	r1, r3, #31
 8004528:	6020      	str	r0, [r4, #0]
 800452a:	d52c      	bpl.n	8004586 <can_irq+0x6a>
 800452c:	6881      	ldr	r1, [r0, #8]
 800452e:	f8df e0e8 	ldr.w	lr, [pc, #232]	; 8004618 <can_irq+0xfc>
 8004532:	6882      	ldr	r2, [r0, #8]
 8004534:	4f36      	ldr	r7, [pc, #216]	; (8004610 <can_irq+0xf4>)
 8004536:	6883      	ldr	r3, [r0, #8]
 8004538:	4e36      	ldr	r6, [pc, #216]	; (8004614 <can_irq+0xf8>)
 800453a:	ea01 010e 	and.w	r1, r1, lr
 800453e:	4571      	cmp	r1, lr
 8004540:	ea02 0207 	and.w	r2, r2, r7
 8004544:	bf04      	itt	eq
 8004546:	f04f 0e01 	moveq.w	lr, #1
 800454a:	f8c0 e008 	streq.w	lr, [r0, #8]
 800454e:	42ba      	cmp	r2, r7
 8004550:	ea03 0306 	and.w	r3, r3, r6
 8004554:	bf04      	itt	eq
 8004556:	f44f 7780 	moveq.w	r7, #256	; 0x100
 800455a:	6087      	streq	r7, [r0, #8]
 800455c:	42b3      	cmp	r3, r6
 800455e:	bf04      	itt	eq
 8004560:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
 8004564:	6086      	streq	r6, [r0, #8]
 8004566:	482c      	ldr	r0, [pc, #176]	; (8004618 <can_irq+0xfc>)
 8004568:	4281      	cmp	r1, r0
 800456a:	d005      	beq.n	8004578 <can_irq+0x5c>
 800456c:	4928      	ldr	r1, [pc, #160]	; (8004610 <can_irq+0xf4>)
 800456e:	428a      	cmp	r2, r1
 8004570:	d002      	beq.n	8004578 <can_irq+0x5c>
 8004572:	4a28      	ldr	r2, [pc, #160]	; (8004614 <can_irq+0xf8>)
 8004574:	4293      	cmp	r3, r2
 8004576:	d106      	bne.n	8004586 <can_irq+0x6a>
 8004578:	4b28      	ldr	r3, [pc, #160]	; (800461c <can_irq+0x100>)
 800457a:	4a29      	ldr	r2, [pc, #164]	; (8004620 <can_irq+0x104>)
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8004582:	2101      	movs	r1, #1
 8004584:	4798      	blx	r3
 8004586:	6823      	ldr	r3, [r4, #0]
 8004588:	68da      	ldr	r2, [r3, #12]
 800458a:	695b      	ldr	r3, [r3, #20]
 800458c:	0792      	lsls	r2, r2, #30
 800458e:	d008      	beq.n	80045a2 <can_irq+0x86>
 8004590:	079f      	lsls	r7, r3, #30
 8004592:	d506      	bpl.n	80045a2 <can_irq+0x86>
 8004594:	4b21      	ldr	r3, [pc, #132]	; (800461c <can_irq+0x100>)
 8004596:	4a22      	ldr	r2, [pc, #136]	; (8004620 <can_irq+0x104>)
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 800459e:	2100      	movs	r1, #0
 80045a0:	4798      	blx	r3
 80045a2:	6823      	ldr	r3, [r4, #0]
 80045a4:	6999      	ldr	r1, [r3, #24]
 80045a6:	695a      	ldr	r2, [r3, #20]
 80045a8:	695b      	ldr	r3, [r3, #20]
 80045aa:	078e      	lsls	r6, r1, #30
 80045ac:	d50a      	bpl.n	80045c4 <can_irq+0xa8>
 80045ae:	0590      	lsls	r0, r2, #22
 80045b0:	d508      	bpl.n	80045c4 <can_irq+0xa8>
 80045b2:	0419      	lsls	r1, r3, #16
 80045b4:	d506      	bpl.n	80045c4 <can_irq+0xa8>
 80045b6:	4b19      	ldr	r3, [pc, #100]	; (800461c <can_irq+0x100>)
 80045b8:	4a19      	ldr	r2, [pc, #100]	; (8004620 <can_irq+0x104>)
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 80045c0:	2105      	movs	r1, #5
 80045c2:	4798      	blx	r3
 80045c4:	6822      	ldr	r2, [r4, #0]
 80045c6:	6997      	ldr	r7, [r2, #24]
 80045c8:	6956      	ldr	r6, [r2, #20]
 80045ca:	6952      	ldr	r2, [r2, #20]
 80045cc:	f017 0704 	ands.w	r7, r7, #4
 80045d0:	f406 6680 	and.w	r6, r6, #1024	; 0x400
 80045d4:	d009      	beq.n	80045ea <can_irq+0xce>
 80045d6:	b146      	cbz	r6, 80045ea <can_irq+0xce>
 80045d8:	0412      	lsls	r2, r2, #16
 80045da:	d506      	bpl.n	80045ea <can_irq+0xce>
 80045dc:	4b0f      	ldr	r3, [pc, #60]	; (800461c <can_irq+0x100>)
 80045de:	4a10      	ldr	r2, [pc, #64]	; (8004620 <can_irq+0x104>)
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 80045e6:	2107      	movs	r1, #7
 80045e8:	4798      	blx	r3
 80045ea:	6823      	ldr	r3, [r4, #0]
 80045ec:	695b      	ldr	r3, [r3, #20]
 80045ee:	b15f      	cbz	r7, 8004608 <can_irq+0xec>
 80045f0:	b156      	cbz	r6, 8004608 <can_irq+0xec>
 80045f2:	041b      	lsls	r3, r3, #16
 80045f4:	d508      	bpl.n	8004608 <can_irq+0xec>
 80045f6:	4b09      	ldr	r3, [pc, #36]	; (800461c <can_irq+0x100>)
 80045f8:	4a09      	ldr	r2, [pc, #36]	; (8004620 <can_irq+0x104>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8004600:	2102      	movs	r1, #2
 8004602:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004606:	4718      	bx	r3
 8004608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800460c:	20001318 	.word	0x20001318
 8004610:	08000300 	.word	0x08000300
 8004614:	10030000 	.word	0x10030000
 8004618:	04000003 	.word	0x04000003
 800461c:	20001360 	.word	0x20001360
 8004620:	20001358 	.word	0x20001358

08004624 <CAN1_SCE_IRQHandler>:
 8004624:	2100      	movs	r1, #0
 8004626:	4801      	ldr	r0, [pc, #4]	; (800462c <CAN1_SCE_IRQHandler+0x8>)
 8004628:	f7ff bf78 	b.w	800451c <can_irq>
 800462c:	40006400 	.word	0x40006400

08004630 <CAN1_TX_IRQHandler>:
 8004630:	f7ff bff8 	b.w	8004624 <CAN1_SCE_IRQHandler>

08004634 <CAN1_RX0_IRQHandler>:
 8004634:	f7ff bff6 	b.w	8004624 <CAN1_SCE_IRQHandler>

08004638 <CAN2_SCE_IRQHandler>:
 8004638:	2101      	movs	r1, #1
 800463a:	4801      	ldr	r0, [pc, #4]	; (8004640 <CAN2_SCE_IRQHandler+0x8>)
 800463c:	f7ff bf6e 	b.w	800451c <can_irq>
 8004640:	40006800 	.word	0x40006800

08004644 <CAN2_TX_IRQHandler>:
 8004644:	f7ff bff8 	b.w	8004638 <CAN2_SCE_IRQHandler>

08004648 <CAN2_RX0_IRQHandler>:
 8004648:	f7ff bff6 	b.w	8004638 <CAN2_SCE_IRQHandler>

0800464c <can_irq_init>:
 800464c:	4b03      	ldr	r3, [pc, #12]	; (800465c <can_irq_init+0x10>)
 800464e:	6019      	str	r1, [r3, #0]
 8004650:	6841      	ldr	r1, [r0, #4]
 8004652:	4b03      	ldr	r3, [pc, #12]	; (8004660 <can_irq_init+0x14>)
 8004654:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8004658:	4770      	bx	lr
 800465a:	bf00      	nop
 800465c:	20001360 	.word	0x20001360
 8004660:	20001358 	.word	0x20001358

08004664 <can_irq_free>:
 8004664:	6802      	ldr	r2, [r0, #0]
 8004666:	6953      	ldr	r3, [r2, #20]
 8004668:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 800466c:	f023 0313 	bic.w	r3, r3, #19
 8004670:	6153      	str	r3, [r2, #20]
 8004672:	4b02      	ldr	r3, [pc, #8]	; (800467c <can_irq_free+0x18>)
 8004674:	2100      	movs	r1, #0
 8004676:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800467a:	4770      	bx	lr
 800467c:	20001358 	.word	0x20001358

08004680 <can_free>:
 8004680:	6803      	ldr	r3, [r0, #0]
 8004682:	4a10      	ldr	r2, [pc, #64]	; (80046c4 <can_free+0x44>)
 8004684:	4293      	cmp	r3, r2
 8004686:	d10d      	bne.n	80046a4 <can_free+0x24>
 8004688:	4b0f      	ldr	r3, [pc, #60]	; (80046c8 <can_free+0x48>)
 800468a:	6a1a      	ldr	r2, [r3, #32]
 800468c:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8004690:	621a      	str	r2, [r3, #32]
 8004692:	6a1a      	ldr	r2, [r3, #32]
 8004694:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8004698:	621a      	str	r2, [r3, #32]
 800469a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800469c:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 80046a0:	641a      	str	r2, [r3, #64]	; 0x40
 80046a2:	4770      	bx	lr
 80046a4:	4a09      	ldr	r2, [pc, #36]	; (80046cc <can_free+0x4c>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d1fb      	bne.n	80046a2 <can_free+0x22>
 80046aa:	4b07      	ldr	r3, [pc, #28]	; (80046c8 <can_free+0x48>)
 80046ac:	6a1a      	ldr	r2, [r3, #32]
 80046ae:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80046b2:	621a      	str	r2, [r3, #32]
 80046b4:	6a1a      	ldr	r2, [r3, #32]
 80046b6:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80046ba:	621a      	str	r2, [r3, #32]
 80046bc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80046be:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80046c2:	e7ed      	b.n	80046a0 <can_free+0x20>
 80046c4:	40006400 	.word	0x40006400
 80046c8:	40023800 	.word	0x40023800
 80046cc:	40006800 	.word	0x40006800

080046d0 <can_frequency>:
 80046d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046d2:	460d      	mov	r5, r1
 80046d4:	4604      	mov	r4, r0
 80046d6:	f002 f893 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80046da:	2318      	movs	r3, #24
 80046dc:	fbb0 f0f5 	udiv	r0, r0, r5
 80046e0:	2119      	movs	r1, #25
 80046e2:	fbb0 f3f3 	udiv	r3, r0, r3
 80046e6:	0886      	lsrs	r6, r0, #2
 80046e8:	b29b      	uxth	r3, r3
 80046ea:	42b3      	cmp	r3, r6
 80046ec:	d315      	bcc.n	800471a <can_frequency+0x4a>
 80046ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	6822      	ldr	r2, [r4, #0]
 80046f6:	dd1c      	ble.n	8004732 <can_frequency+0x62>
 80046f8:	6811      	ldr	r1, [r2, #0]
 80046fa:	f041 0101 	orr.w	r1, r1, #1
 80046fe:	6011      	str	r1, [r2, #0]
 8004700:	6851      	ldr	r1, [r2, #4]
 8004702:	07c9      	lsls	r1, r1, #31
 8004704:	d5fc      	bpl.n	8004700 <can_frequency+0x30>
 8004706:	61d3      	str	r3, [r2, #28]
 8004708:	6813      	ldr	r3, [r2, #0]
 800470a:	f023 0301 	bic.w	r3, r3, #1
 800470e:	6013      	str	r3, [r2, #0]
 8004710:	6853      	ldr	r3, [r2, #4]
 8004712:	07db      	lsls	r3, r3, #31
 8004714:	d4fc      	bmi.n	8004710 <can_frequency+0x40>
 8004716:	2001      	movs	r0, #1
 8004718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800471a:	3301      	adds	r3, #1
 800471c:	b29b      	uxth	r3, r3
 800471e:	43df      	mvns	r7, r3
 8004720:	fb03 1201 	mla	r2, r3, r1, r1
 8004724:	2516      	movs	r5, #22
 8004726:	4290      	cmp	r0, r2
 8004728:	d005      	beq.n	8004736 <can_frequency+0x66>
 800472a:	3d01      	subs	r5, #1
 800472c:	443a      	add	r2, r7
 800472e:	d1fa      	bne.n	8004726 <can_frequency+0x56>
 8004730:	e7db      	b.n	80046ea <can_frequency+0x1a>
 8004732:	2000      	movs	r0, #0
 8004734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004736:	4908      	ldr	r1, [pc, #32]	; (8004758 <can_frequency+0x88>)
 8004738:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 800473c:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 8004740:	6852      	ldr	r2, [r2, #4]
 8004742:	0409      	lsls	r1, r1, #16
 8004744:	0512      	lsls	r2, r2, #20
 8004746:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 800474a:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 800474e:	430a      	orrs	r2, r1
 8004750:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004754:	4313      	orrs	r3, r2
 8004756:	e7cc      	b.n	80046f2 <can_frequency+0x22>
 8004758:	08008f1c 	.word	0x08008f1c

0800475c <can_write>:
 800475c:	b084      	sub	sp, #16
 800475e:	b530      	push	{r4, r5, lr}
 8004760:	ac04      	add	r4, sp, #16
 8004762:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8004766:	6804      	ldr	r4, [r0, #0]
 8004768:	f89d 201e 	ldrb.w	r2, [sp, #30]
 800476c:	68a3      	ldr	r3, [r4, #8]
 800476e:	0158      	lsls	r0, r3, #5
 8004770:	d43a      	bmi.n	80047e8 <can_write+0x8c>
 8004772:	68a3      	ldr	r3, [r4, #8]
 8004774:	011b      	lsls	r3, r3, #4
 8004776:	d439      	bmi.n	80047ec <can_write+0x90>
 8004778:	68a0      	ldr	r0, [r4, #8]
 800477a:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 800477e:	d02f      	beq.n	80047e0 <can_write+0x84>
 8004780:	2002      	movs	r0, #2
 8004782:	0100      	lsls	r0, r0, #4
 8004784:	1823      	adds	r3, r4, r0
 8004786:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 800478a:	f005 0501 	and.w	r5, r5, #1
 800478e:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 8004792:	f89d 501d 	ldrb.w	r5, [sp, #29]
 8004796:	bb5d      	cbnz	r5, 80047f0 <can_write+0x94>
 8004798:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 800479c:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 80047a0:	4329      	orrs	r1, r5
 80047a2:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 80047a6:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 80047aa:	f021 010f 	bic.w	r1, r1, #15
 80047ae:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 80047b2:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80047b6:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 80047ba:	f001 010f 	and.w	r1, r1, #15
 80047be:	4311      	orrs	r1, r2
 80047c0:	1822      	adds	r2, r4, r0
 80047c2:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 80047c6:	9905      	ldr	r1, [sp, #20]
 80047c8:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 80047cc:	9906      	ldr	r1, [sp, #24]
 80047ce:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 80047d2:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80047d6:	f042 0201 	orr.w	r2, r2, #1
 80047da:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 80047de:	2001      	movs	r0, #1
 80047e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80047e4:	b004      	add	sp, #16
 80047e6:	4770      	bx	lr
 80047e8:	2000      	movs	r0, #0
 80047ea:	e7ca      	b.n	8004782 <can_write+0x26>
 80047ec:	2001      	movs	r0, #1
 80047ee:	e7c8      	b.n	8004782 <can_write+0x26>
 80047f0:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 80047f4:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80047f8:	f041 0104 	orr.w	r1, r1, #4
 80047fc:	e7d0      	b.n	80047a0 <can_write+0x44>

080047fe <can_read>:
 80047fe:	b530      	push	{r4, r5, lr}
 8004800:	6804      	ldr	r4, [r0, #0]
 8004802:	68e0      	ldr	r0, [r4, #12]
 8004804:	f010 0003 	ands.w	r0, r0, #3
 8004808:	d03a      	beq.n	8004880 <can_read+0x82>
 800480a:	0113      	lsls	r3, r2, #4
 800480c:	18e0      	adds	r0, r4, r3
 800480e:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8004812:	f3c5 0580 	ubfx	r5, r5, #2, #1
 8004816:	734d      	strb	r5, [r1, #13]
 8004818:	bb9d      	cbnz	r5, 8004882 <can_read+0x84>
 800481a:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800481e:	0d6d      	lsrs	r5, r5, #21
 8004820:	600d      	str	r5, [r1, #0]
 8004822:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8004826:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 800482a:	4423      	add	r3, r4
 800482c:	f000 000f 	and.w	r0, r0, #15
 8004830:	7308      	strb	r0, [r1, #12]
 8004832:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8004836:	7108      	strb	r0, [r1, #4]
 8004838:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 800483c:	0a00      	lsrs	r0, r0, #8
 800483e:	7148      	strb	r0, [r1, #5]
 8004840:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8004844:	0c00      	lsrs	r0, r0, #16
 8004846:	7188      	strb	r0, [r1, #6]
 8004848:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 800484c:	0e00      	lsrs	r0, r0, #24
 800484e:	71c8      	strb	r0, [r1, #7]
 8004850:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8004854:	7208      	strb	r0, [r1, #8]
 8004856:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 800485a:	0a00      	lsrs	r0, r0, #8
 800485c:	7248      	strb	r0, [r1, #9]
 800485e:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8004862:	0c00      	lsrs	r0, r0, #16
 8004864:	7288      	strb	r0, [r1, #10]
 8004866:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 800486a:	f3c5 0540 	ubfx	r5, r5, #1, #1
 800486e:	0e1b      	lsrs	r3, r3, #24
 8004870:	738d      	strb	r5, [r1, #14]
 8004872:	72cb      	strb	r3, [r1, #11]
 8004874:	b94a      	cbnz	r2, 800488a <can_read+0x8c>
 8004876:	68e3      	ldr	r3, [r4, #12]
 8004878:	f043 0320 	orr.w	r3, r3, #32
 800487c:	60e3      	str	r3, [r4, #12]
 800487e:	2001      	movs	r0, #1
 8004880:	bd30      	pop	{r4, r5, pc}
 8004882:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8004886:	08ed      	lsrs	r5, r5, #3
 8004888:	e7ca      	b.n	8004820 <can_read+0x22>
 800488a:	6923      	ldr	r3, [r4, #16]
 800488c:	f043 0320 	orr.w	r3, r3, #32
 8004890:	6123      	str	r3, [r4, #16]
 8004892:	e7f4      	b.n	800487e <can_read+0x80>

08004894 <can_filter>:
 8004894:	b530      	push	{r4, r5, lr}
 8004896:	b08b      	sub	sp, #44	; 0x2c
 8004898:	2b01      	cmp	r3, #1
 800489a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800489c:	d82b      	bhi.n	80048f6 <can_filter+0x62>
 800489e:	6805      	ldr	r5, [r0, #0]
 80048a0:	4816      	ldr	r0, [pc, #88]	; (80048fc <can_filter+0x68>)
 80048a2:	9405      	str	r4, [sp, #20]
 80048a4:	6005      	str	r5, [r0, #0]
 80048a6:	2000      	movs	r0, #0
 80048a8:	9006      	str	r0, [sp, #24]
 80048aa:	2001      	movs	r0, #1
 80048ac:	9007      	str	r0, [sp, #28]
 80048ae:	b99b      	cbnz	r3, 80048d8 <can_filter+0x44>
 80048b0:	0149      	lsls	r1, r1, #5
 80048b2:	e88d 000a 	stmia.w	sp, {r1, r3}
 80048b6:	0152      	lsls	r2, r2, #5
 80048b8:	9202      	str	r2, [sp, #8]
 80048ba:	9303      	str	r3, [sp, #12]
 80048bc:	2300      	movs	r3, #0
 80048be:	9304      	str	r3, [sp, #16]
 80048c0:	2301      	movs	r3, #1
 80048c2:	9308      	str	r3, [sp, #32]
 80048c4:	4669      	mov	r1, sp
 80048c6:	f104 030e 	add.w	r3, r4, #14
 80048ca:	480c      	ldr	r0, [pc, #48]	; (80048fc <can_filter+0x68>)
 80048cc:	9309      	str	r3, [sp, #36]	; 0x24
 80048ce:	f001 fb7d 	bl	8005fcc <HAL_CAN_ConfigFilter>
 80048d2:	4620      	mov	r0, r4
 80048d4:	b00b      	add	sp, #44	; 0x2c
 80048d6:	bd30      	pop	{r4, r5, pc}
 80048d8:	0b4b      	lsrs	r3, r1, #13
 80048da:	9300      	str	r3, [sp, #0]
 80048dc:	00c9      	lsls	r1, r1, #3
 80048de:	0b53      	lsrs	r3, r2, #13
 80048e0:	00d2      	lsls	r2, r2, #3
 80048e2:	b2c9      	uxtb	r1, r1
 80048e4:	b2d2      	uxtb	r2, r2
 80048e6:	f041 0104 	orr.w	r1, r1, #4
 80048ea:	f042 0204 	orr.w	r2, r2, #4
 80048ee:	9101      	str	r1, [sp, #4]
 80048f0:	9302      	str	r3, [sp, #8]
 80048f2:	9203      	str	r2, [sp, #12]
 80048f4:	e7e2      	b.n	80048bc <can_filter+0x28>
 80048f6:	2000      	movs	r0, #0
 80048f8:	e7ec      	b.n	80048d4 <can_filter+0x40>
 80048fa:	bf00      	nop
 80048fc:	20001318 	.word	0x20001318

08004900 <can_init>:
 8004900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004902:	460e      	mov	r6, r1
 8004904:	b087      	sub	sp, #28
 8004906:	4604      	mov	r4, r0
 8004908:	493e      	ldr	r1, [pc, #248]	; (8004a04 <can_init+0x104>)
 800490a:	4630      	mov	r0, r6
 800490c:	4615      	mov	r5, r2
 800490e:	f7fe f927 	bl	8002b60 <pinmap_peripheral>
 8004912:	493d      	ldr	r1, [pc, #244]	; (8004a08 <can_init+0x108>)
 8004914:	4607      	mov	r7, r0
 8004916:	4628      	mov	r0, r5
 8004918:	f7fe f922 	bl	8002b60 <pinmap_peripheral>
 800491c:	4601      	mov	r1, r0
 800491e:	4638      	mov	r0, r7
 8004920:	f7fe f900 	bl	8002b24 <pinmap_merge>
 8004924:	4b39      	ldr	r3, [pc, #228]	; (8004a0c <can_init+0x10c>)
 8004926:	6020      	str	r0, [r4, #0]
 8004928:	4298      	cmp	r0, r3
 800492a:	d14e      	bne.n	80049ca <can_init+0xca>
 800492c:	f503 33ea 	add.w	r3, r3, #119808	; 0x1d400
 8004930:	2100      	movs	r1, #0
 8004932:	9103      	str	r1, [sp, #12]
 8004934:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004936:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 800493a:	641a      	str	r2, [r3, #64]	; 0x40
 800493c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800493e:	6061      	str	r1, [r4, #4]
 8004940:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004944:	9303      	str	r3, [sp, #12]
 8004946:	9b03      	ldr	r3, [sp, #12]
 8004948:	492e      	ldr	r1, [pc, #184]	; (8004a04 <can_init+0x104>)
 800494a:	4630      	mov	r0, r6
 800494c:	f7fe f8cc 	bl	8002ae8 <pinmap_pinout>
 8004950:	492d      	ldr	r1, [pc, #180]	; (8004a08 <can_init+0x108>)
 8004952:	4628      	mov	r0, r5
 8004954:	f7fe f8c8 	bl	8002ae8 <pinmap_pinout>
 8004958:	1c72      	adds	r2, r6, #1
 800495a:	d003      	beq.n	8004964 <can_init+0x64>
 800495c:	2101      	movs	r1, #1
 800495e:	4630      	mov	r0, r6
 8004960:	f000 f9be 	bl	8004ce0 <pin_mode>
 8004964:	1c6b      	adds	r3, r5, #1
 8004966:	d003      	beq.n	8004970 <can_init+0x70>
 8004968:	2101      	movs	r1, #1
 800496a:	4628      	mov	r0, r5
 800496c:	f000 f9b8 	bl	8004ce0 <pin_mode>
 8004970:	4827      	ldr	r0, [pc, #156]	; (8004a10 <can_init+0x110>)
 8004972:	6823      	ldr	r3, [r4, #0]
 8004974:	6003      	str	r3, [r0, #0]
 8004976:	2300      	movs	r3, #0
 8004978:	6183      	str	r3, [r0, #24]
 800497a:	61c3      	str	r3, [r0, #28]
 800497c:	6203      	str	r3, [r0, #32]
 800497e:	6243      	str	r3, [r0, #36]	; 0x24
 8004980:	6283      	str	r3, [r0, #40]	; 0x28
 8004982:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004984:	6083      	str	r3, [r0, #8]
 8004986:	60c3      	str	r3, [r0, #12]
 8004988:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 800498c:	6103      	str	r3, [r0, #16]
 800498e:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 8004992:	6143      	str	r3, [r0, #20]
 8004994:	2302      	movs	r3, #2
 8004996:	6043      	str	r3, [r0, #4]
 8004998:	f001 fb99 	bl	80060ce <HAL_CAN_Init>
 800499c:	b110      	cbz	r0, 80049a4 <can_init+0xa4>
 800499e:	481d      	ldr	r0, [pc, #116]	; (8004a14 <can_init+0x114>)
 80049a0:	f7fe f934 	bl	8002c0c <error>
 80049a4:	491c      	ldr	r1, [pc, #112]	; (8004a18 <can_init+0x118>)
 80049a6:	4620      	mov	r0, r4
 80049a8:	f7ff fe92 	bl	80046d0 <can_frequency>
 80049ac:	4a17      	ldr	r2, [pc, #92]	; (8004a0c <can_init+0x10c>)
 80049ae:	6823      	ldr	r3, [r4, #0]
 80049b0:	4293      	cmp	r3, r2
 80049b2:	bf14      	ite	ne
 80049b4:	230e      	movne	r3, #14
 80049b6:	2300      	moveq	r3, #0
 80049b8:	9300      	str	r3, [sp, #0]
 80049ba:	2300      	movs	r3, #0
 80049bc:	461a      	mov	r2, r3
 80049be:	4619      	mov	r1, r3
 80049c0:	4620      	mov	r0, r4
 80049c2:	f7ff ff67 	bl	8004894 <can_filter>
 80049c6:	b007      	add	sp, #28
 80049c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80049ca:	4b14      	ldr	r3, [pc, #80]	; (8004a1c <can_init+0x11c>)
 80049cc:	4298      	cmp	r0, r3
 80049ce:	d1fa      	bne.n	80049c6 <can_init+0xc6>
 80049d0:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
 80049d4:	2100      	movs	r1, #0
 80049d6:	9104      	str	r1, [sp, #16]
 80049d8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80049da:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80049de:	641a      	str	r2, [r3, #64]	; 0x40
 80049e0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80049e2:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 80049e6:	9204      	str	r2, [sp, #16]
 80049e8:	9a04      	ldr	r2, [sp, #16]
 80049ea:	9105      	str	r1, [sp, #20]
 80049ec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80049ee:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80049f2:	641a      	str	r2, [r3, #64]	; 0x40
 80049f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80049f6:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80049fa:	9305      	str	r3, [sp, #20]
 80049fc:	9b05      	ldr	r3, [sp, #20]
 80049fe:	2301      	movs	r3, #1
 8004a00:	6063      	str	r3, [r4, #4]
 8004a02:	e7a1      	b.n	8004948 <can_init+0x48>
 8004a04:	0800902c 	.word	0x0800902c
 8004a08:	08009068 	.word	0x08009068
 8004a0c:	40006400 	.word	0x40006400
 8004a10:	20001318 	.word	0x20001318
 8004a14:	08008f05 	.word	0x08008f05
 8004a18:	000186a0 	.word	0x000186a0
 8004a1c:	40006800 	.word	0x40006800

08004a20 <can_irq_set>:
 8004a20:	6800      	ldr	r0, [r0, #0]
 8004a22:	4b32      	ldr	r3, [pc, #200]	; (8004aec <can_irq_set+0xcc>)
 8004a24:	4298      	cmp	r0, r3
 8004a26:	b510      	push	{r4, lr}
 8004a28:	d12d      	bne.n	8004a86 <can_irq_set+0x66>
 8004a2a:	2907      	cmp	r1, #7
 8004a2c:	d819      	bhi.n	8004a62 <can_irq_set+0x42>
 8004a2e:	e8df f001 	tbb	[pc, r1]
 8004a32:	1904      	.short	0x1904
 8004a34:	2218181d 	.word	0x2218181d
 8004a38:	2618      	.short	0x2618
 8004a3a:	492d      	ldr	r1, [pc, #180]	; (8004af0 <can_irq_set+0xd0>)
 8004a3c:	2302      	movs	r3, #2
 8004a3e:	2414      	movs	r4, #20
 8004a40:	2a00      	cmp	r2, #0
 8004a42:	d04e      	beq.n	8004ae2 <can_irq_set+0xc2>
 8004a44:	6942      	ldr	r2, [r0, #20]
 8004a46:	4313      	orrs	r3, r2
 8004a48:	6143      	str	r3, [r0, #20]
 8004a4a:	4620      	mov	r0, r4
 8004a4c:	f000 fcea 	bl	8005424 <__NVIC_SetVector>
 8004a50:	0962      	lsrs	r2, r4, #5
 8004a52:	2301      	movs	r3, #1
 8004a54:	f004 041f 	and.w	r4, r4, #31
 8004a58:	fa03 f404 	lsl.w	r4, r3, r4
 8004a5c:	4b25      	ldr	r3, [pc, #148]	; (8004af4 <can_irq_set+0xd4>)
 8004a5e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004a62:	bd10      	pop	{r4, pc}
 8004a64:	4924      	ldr	r1, [pc, #144]	; (8004af8 <can_irq_set+0xd8>)
 8004a66:	2301      	movs	r3, #1
 8004a68:	2413      	movs	r4, #19
 8004a6a:	e7e9      	b.n	8004a40 <can_irq_set+0x20>
 8004a6c:	4923      	ldr	r1, [pc, #140]	; (8004afc <can_irq_set+0xdc>)
 8004a6e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004a72:	2416      	movs	r4, #22
 8004a74:	e7e4      	b.n	8004a40 <can_irq_set+0x20>
 8004a76:	4921      	ldr	r1, [pc, #132]	; (8004afc <can_irq_set+0xdc>)
 8004a78:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a7c:	e7f9      	b.n	8004a72 <can_irq_set+0x52>
 8004a7e:	491f      	ldr	r1, [pc, #124]	; (8004afc <can_irq_set+0xdc>)
 8004a80:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004a84:	e7f5      	b.n	8004a72 <can_irq_set+0x52>
 8004a86:	4b1e      	ldr	r3, [pc, #120]	; (8004b00 <can_irq_set+0xe0>)
 8004a88:	4298      	cmp	r0, r3
 8004a8a:	d1ea      	bne.n	8004a62 <can_irq_set+0x42>
 8004a8c:	2907      	cmp	r1, #7
 8004a8e:	d8e8      	bhi.n	8004a62 <can_irq_set+0x42>
 8004a90:	a301      	add	r3, pc, #4	; (adr r3, 8004a98 <can_irq_set+0x78>)
 8004a92:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8004a96:	bf00      	nop
 8004a98:	08004ab9 	.word	0x08004ab9
 8004a9c:	08004ac1 	.word	0x08004ac1
 8004aa0:	08004ac9 	.word	0x08004ac9
 8004aa4:	08004a63 	.word	0x08004a63
 8004aa8:	08004a63 	.word	0x08004a63
 8004aac:	08004ad3 	.word	0x08004ad3
 8004ab0:	08004a63 	.word	0x08004a63
 8004ab4:	08004adb 	.word	0x08004adb
 8004ab8:	4912      	ldr	r1, [pc, #72]	; (8004b04 <can_irq_set+0xe4>)
 8004aba:	2302      	movs	r3, #2
 8004abc:	2440      	movs	r4, #64	; 0x40
 8004abe:	e7bf      	b.n	8004a40 <can_irq_set+0x20>
 8004ac0:	4911      	ldr	r1, [pc, #68]	; (8004b08 <can_irq_set+0xe8>)
 8004ac2:	2301      	movs	r3, #1
 8004ac4:	243f      	movs	r4, #63	; 0x3f
 8004ac6:	e7bb      	b.n	8004a40 <can_irq_set+0x20>
 8004ac8:	4910      	ldr	r1, [pc, #64]	; (8004b0c <can_irq_set+0xec>)
 8004aca:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004ace:	2442      	movs	r4, #66	; 0x42
 8004ad0:	e7b6      	b.n	8004a40 <can_irq_set+0x20>
 8004ad2:	490e      	ldr	r1, [pc, #56]	; (8004b0c <can_irq_set+0xec>)
 8004ad4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004ad8:	e7f9      	b.n	8004ace <can_irq_set+0xae>
 8004ada:	490c      	ldr	r1, [pc, #48]	; (8004b0c <can_irq_set+0xec>)
 8004adc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004ae0:	e7f5      	b.n	8004ace <can_irq_set+0xae>
 8004ae2:	6942      	ldr	r2, [r0, #20]
 8004ae4:	ea22 0303 	bic.w	r3, r2, r3
 8004ae8:	e7ae      	b.n	8004a48 <can_irq_set+0x28>
 8004aea:	bf00      	nop
 8004aec:	40006400 	.word	0x40006400
 8004af0:	08004635 	.word	0x08004635
 8004af4:	e000e100 	.word	0xe000e100
 8004af8:	08004631 	.word	0x08004631
 8004afc:	08004625 	.word	0x08004625
 8004b00:	40006800 	.word	0x40006800
 8004b04:	08004649 	.word	0x08004649
 8004b08:	08004645 	.word	0x08004645
 8004b0c:	08004639 	.word	0x08004639

08004b10 <us_ticker_init>:
 8004b10:	4b05      	ldr	r3, [pc, #20]	; (8004b28 <us_ticker_init+0x18>)
 8004b12:	6818      	ldr	r0, [r3, #0]
 8004b14:	b930      	cbnz	r0, 8004b24 <us_ticker_init+0x14>
 8004b16:	2201      	movs	r2, #1
 8004b18:	601a      	str	r2, [r3, #0]
 8004b1a:	4b04      	ldr	r3, [pc, #16]	; (8004b2c <us_ticker_init+0x1c>)
 8004b1c:	4a04      	ldr	r2, [pc, #16]	; (8004b30 <us_ticker_init+0x20>)
 8004b1e:	601a      	str	r2, [r3, #0]
 8004b20:	f7ff bb94 	b.w	800424c <HAL_InitTick>
 8004b24:	4770      	bx	lr
 8004b26:	bf00      	nop
 8004b28:	20001364 	.word	0x20001364
 8004b2c:	2000220c 	.word	0x2000220c
 8004b30:	40000c00 	.word	0x40000c00

08004b34 <us_ticker_read>:
 8004b34:	b508      	push	{r3, lr}
 8004b36:	4b04      	ldr	r3, [pc, #16]	; (8004b48 <us_ticker_read+0x14>)
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	b90b      	cbnz	r3, 8004b40 <us_ticker_read+0xc>
 8004b3c:	f7ff ffe8 	bl	8004b10 <us_ticker_init>
 8004b40:	4b02      	ldr	r3, [pc, #8]	; (8004b4c <us_ticker_read+0x18>)
 8004b42:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8004b44:	bd08      	pop	{r3, pc}
 8004b46:	bf00      	nop
 8004b48:	20001364 	.word	0x20001364
 8004b4c:	40000c00 	.word	0x40000c00

08004b50 <us_ticker_set_interrupt>:
 8004b50:	4b04      	ldr	r3, [pc, #16]	; (8004b64 <us_ticker_set_interrupt+0x14>)
 8004b52:	4a05      	ldr	r2, [pc, #20]	; (8004b68 <us_ticker_set_interrupt+0x18>)
 8004b54:	6013      	str	r3, [r2, #0]
 8004b56:	6358      	str	r0, [r3, #52]	; 0x34
 8004b58:	68da      	ldr	r2, [r3, #12]
 8004b5a:	f042 0202 	orr.w	r2, r2, #2
 8004b5e:	60da      	str	r2, [r3, #12]
 8004b60:	4770      	bx	lr
 8004b62:	bf00      	nop
 8004b64:	40000c00 	.word	0x40000c00
 8004b68:	2000220c 	.word	0x2000220c

08004b6c <us_ticker_disable_interrupt>:
 8004b6c:	4b03      	ldr	r3, [pc, #12]	; (8004b7c <us_ticker_disable_interrupt+0x10>)
 8004b6e:	4a04      	ldr	r2, [pc, #16]	; (8004b80 <us_ticker_disable_interrupt+0x14>)
 8004b70:	6013      	str	r3, [r2, #0]
 8004b72:	68da      	ldr	r2, [r3, #12]
 8004b74:	f022 0202 	bic.w	r2, r2, #2
 8004b78:	60da      	str	r2, [r3, #12]
 8004b7a:	4770      	bx	lr
 8004b7c:	40000c00 	.word	0x40000c00
 8004b80:	2000220c 	.word	0x2000220c

08004b84 <us_ticker_clear_interrupt>:
 8004b84:	4a03      	ldr	r2, [pc, #12]	; (8004b94 <us_ticker_clear_interrupt+0x10>)
 8004b86:	4b04      	ldr	r3, [pc, #16]	; (8004b98 <us_ticker_clear_interrupt+0x14>)
 8004b88:	6013      	str	r3, [r2, #0]
 8004b8a:	f06f 0202 	mvn.w	r2, #2
 8004b8e:	611a      	str	r2, [r3, #16]
 8004b90:	4770      	bx	lr
 8004b92:	bf00      	nop
 8004b94:	2000220c 	.word	0x2000220c
 8004b98:	40000c00 	.word	0x40000c00

08004b9c <LL_GPIO_SetPinPull>:
 8004b9c:	b530      	push	{r4, r5, lr}
 8004b9e:	68c3      	ldr	r3, [r0, #12]
 8004ba0:	fa91 f4a1 	rbit	r4, r1
 8004ba4:	fab4 f484 	clz	r4, r4
 8004ba8:	fa91 f1a1 	rbit	r1, r1
 8004bac:	2503      	movs	r5, #3
 8004bae:	fab1 f181 	clz	r1, r1
 8004bb2:	0064      	lsls	r4, r4, #1
 8004bb4:	fa05 f404 	lsl.w	r4, r5, r4
 8004bb8:	0049      	lsls	r1, r1, #1
 8004bba:	ea23 0304 	bic.w	r3, r3, r4
 8004bbe:	fa02 f101 	lsl.w	r1, r2, r1
 8004bc2:	4319      	orrs	r1, r3
 8004bc4:	60c1      	str	r1, [r0, #12]
 8004bc6:	bd30      	pop	{r4, r5, pc}

08004bc8 <stm_pin_PullConfig>:
 8004bc8:	2a01      	cmp	r2, #1
 8004bca:	d002      	beq.n	8004bd2 <stm_pin_PullConfig+0xa>
 8004bcc:	2a02      	cmp	r2, #2
 8004bce:	bf18      	it	ne
 8004bd0:	2200      	movne	r2, #0
 8004bd2:	f7ff bfe3 	b.w	8004b9c <LL_GPIO_SetPinPull>
	...

08004bd8 <pin_function>:
 8004bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004bdc:	4b3f      	ldr	r3, [pc, #252]	; (8004cdc <pin_function+0x104>)
 8004bde:	f000 080f 	and.w	r8, r0, #15
 8004be2:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8004be6:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8004bea:	460e      	mov	r6, r1
 8004bec:	f001 0507 	and.w	r5, r1, #7
 8004bf0:	f7ff fba4 	bl	800433c <Set_GPIO_Clock>
 8004bf4:	6883      	ldr	r3, [r0, #8]
 8004bf6:	fa94 f1a4 	rbit	r1, r4
 8004bfa:	fab1 f181 	clz	r1, r1
 8004bfe:	fa94 f2a4 	rbit	r2, r4
 8004c02:	2703      	movs	r7, #3
 8004c04:	0049      	lsls	r1, r1, #1
 8004c06:	fa07 f101 	lsl.w	r1, r7, r1
 8004c0a:	fab2 f282 	clz	r2, r2
 8004c0e:	ea23 0301 	bic.w	r3, r3, r1
 8004c12:	0052      	lsls	r2, r2, #1
 8004c14:	2102      	movs	r1, #2
 8004c16:	fa01 f202 	lsl.w	r2, r1, r2
 8004c1a:	4313      	orrs	r3, r2
 8004c1c:	428d      	cmp	r5, r1
 8004c1e:	6083      	str	r3, [r0, #8]
 8004c20:	d028      	beq.n	8004c74 <pin_function+0x9c>
 8004c22:	42bd      	cmp	r5, r7
 8004c24:	d041      	beq.n	8004caa <pin_function+0xd2>
 8004c26:	2d01      	cmp	r5, #1
 8004c28:	d03f      	beq.n	8004caa <pin_function+0xd2>
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	6802      	ldr	r2, [r0, #0]
 8004c2e:	fa94 f7a4 	rbit	r7, r4
 8004c32:	fab7 f787 	clz	r7, r7
 8004c36:	fa94 f1a4 	rbit	r1, r4
 8004c3a:	f04f 0e03 	mov.w	lr, #3
 8004c3e:	fab1 f181 	clz	r1, r1
 8004c42:	007f      	lsls	r7, r7, #1
 8004c44:	fa0e f707 	lsl.w	r7, lr, r7
 8004c48:	0049      	lsls	r1, r1, #1
 8004c4a:	ea22 0207 	bic.w	r2, r2, r7
 8004c4e:	408b      	lsls	r3, r1
 8004c50:	3d01      	subs	r5, #1
 8004c52:	4313      	orrs	r3, r2
 8004c54:	2d01      	cmp	r5, #1
 8004c56:	6003      	str	r3, [r0, #0]
 8004c58:	d805      	bhi.n	8004c66 <pin_function+0x8e>
 8004c5a:	6843      	ldr	r3, [r0, #4]
 8004c5c:	0732      	lsls	r2, r6, #28
 8004c5e:	bf4c      	ite	mi
 8004c60:	4323      	orrmi	r3, r4
 8004c62:	43a3      	bicpl	r3, r4
 8004c64:	6043      	str	r3, [r0, #4]
 8004c66:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8004c6a:	4621      	mov	r1, r4
 8004c6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004c70:	f7ff bfaa 	b.w	8004bc8 <stm_pin_PullConfig>
 8004c74:	f1b8 0f07 	cmp.w	r8, #7
 8004c78:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8004c7c:	d917      	bls.n	8004cae <pin_function+0xd6>
 8004c7e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004c80:	0a23      	lsrs	r3, r4, #8
 8004c82:	fa93 f1a3 	rbit	r1, r3
 8004c86:	fab1 f181 	clz	r1, r1
 8004c8a:	fa93 f3a3 	rbit	r3, r3
 8004c8e:	f04f 0e0f 	mov.w	lr, #15
 8004c92:	fab3 f383 	clz	r3, r3
 8004c96:	0089      	lsls	r1, r1, #2
 8004c98:	fa0e f101 	lsl.w	r1, lr, r1
 8004c9c:	009b      	lsls	r3, r3, #2
 8004c9e:	ea22 0201 	bic.w	r2, r2, r1
 8004ca2:	fa07 f303 	lsl.w	r3, r7, r3
 8004ca6:	4313      	orrs	r3, r2
 8004ca8:	6243      	str	r3, [r0, #36]	; 0x24
 8004caa:	462b      	mov	r3, r5
 8004cac:	e7be      	b.n	8004c2c <pin_function+0x54>
 8004cae:	6a02      	ldr	r2, [r0, #32]
 8004cb0:	fa94 f3a4 	rbit	r3, r4
 8004cb4:	fab3 f383 	clz	r3, r3
 8004cb8:	fa94 f1a4 	rbit	r1, r4
 8004cbc:	f04f 0e0f 	mov.w	lr, #15
 8004cc0:	fab1 f181 	clz	r1, r1
 8004cc4:	009b      	lsls	r3, r3, #2
 8004cc6:	fa0e f303 	lsl.w	r3, lr, r3
 8004cca:	0089      	lsls	r1, r1, #2
 8004ccc:	ea22 0203 	bic.w	r2, r2, r3
 8004cd0:	fa07 f301 	lsl.w	r3, r7, r1
 8004cd4:	4313      	orrs	r3, r2
 8004cd6:	6203      	str	r3, [r0, #32]
 8004cd8:	e7e7      	b.n	8004caa <pin_function+0xd2>
 8004cda:	bf00      	nop
 8004cdc:	08008fd4 	.word	0x08008fd4

08004ce0 <pin_mode>:
 8004ce0:	b538      	push	{r3, r4, r5, lr}
 8004ce2:	f000 020f 	and.w	r2, r0, #15
 8004ce6:	4b19      	ldr	r3, [pc, #100]	; (8004d4c <pin_mode+0x6c>)
 8004ce8:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8004cec:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8004cf0:	460d      	mov	r5, r1
 8004cf2:	f7ff fb23 	bl	800433c <Set_GPIO_Clock>
 8004cf6:	fb04 f204 	mul.w	r2, r4, r4
 8004cfa:	6801      	ldr	r1, [r0, #0]
 8004cfc:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8004d00:	400b      	ands	r3, r1
 8004d02:	fbb3 f3f2 	udiv	r3, r3, r2
 8004d06:	3b01      	subs	r3, #1
 8004d08:	2b01      	cmp	r3, #1
 8004d0a:	d805      	bhi.n	8004d18 <pin_mode+0x38>
 8004d0c:	1eeb      	subs	r3, r5, #3
 8004d0e:	2b02      	cmp	r3, #2
 8004d10:	6843      	ldr	r3, [r0, #4]
 8004d12:	d809      	bhi.n	8004d28 <pin_mode+0x48>
 8004d14:	4323      	orrs	r3, r4
 8004d16:	6043      	str	r3, [r0, #4]
 8004d18:	2d03      	cmp	r5, #3
 8004d1a:	d108      	bne.n	8004d2e <pin_mode+0x4e>
 8004d1c:	2201      	movs	r2, #1
 8004d1e:	4621      	mov	r1, r4
 8004d20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d24:	f7ff bf50 	b.w	8004bc8 <stm_pin_PullConfig>
 8004d28:	ea23 0304 	bic.w	r3, r3, r4
 8004d2c:	6043      	str	r3, [r0, #4]
 8004d2e:	2d01      	cmp	r5, #1
 8004d30:	d0f4      	beq.n	8004d1c <pin_mode+0x3c>
 8004d32:	2d05      	cmp	r5, #5
 8004d34:	d001      	beq.n	8004d3a <pin_mode+0x5a>
 8004d36:	2d02      	cmp	r5, #2
 8004d38:	d101      	bne.n	8004d3e <pin_mode+0x5e>
 8004d3a:	2202      	movs	r2, #2
 8004d3c:	e7ef      	b.n	8004d1e <pin_mode+0x3e>
 8004d3e:	4621      	mov	r1, r4
 8004d40:	2200      	movs	r2, #0
 8004d42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d46:	f7ff bf29 	b.w	8004b9c <LL_GPIO_SetPinPull>
 8004d4a:	bf00      	nop
 8004d4c:	08008fd4 	.word	0x08008fd4

08004d50 <__NVIC_DisableIRQ>:
 8004d50:	0943      	lsrs	r3, r0, #5
 8004d52:	2201      	movs	r2, #1
 8004d54:	f000 001f 	and.w	r0, r0, #31
 8004d58:	fa02 f000 	lsl.w	r0, r2, r0
 8004d5c:	3320      	adds	r3, #32
 8004d5e:	4a04      	ldr	r2, [pc, #16]	; (8004d70 <__NVIC_DisableIRQ+0x20>)
 8004d60:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8004d64:	f3bf 8f4f 	dsb	sy
 8004d68:	f3bf 8f6f 	isb	sy
 8004d6c:	4770      	bx	lr
 8004d6e:	bf00      	nop
 8004d70:	e000e100 	.word	0xe000e100

08004d74 <init_uart>:
 8004d74:	6842      	ldr	r2, [r0, #4]
 8004d76:	4916      	ldr	r1, [pc, #88]	; (8004dd0 <init_uart+0x5c>)
 8004d78:	0192      	lsls	r2, r2, #6
 8004d7a:	b510      	push	{r4, lr}
 8004d7c:	188b      	adds	r3, r1, r2
 8004d7e:	6804      	ldr	r4, [r0, #0]
 8004d80:	508c      	str	r4, [r1, r2]
 8004d82:	6882      	ldr	r2, [r0, #8]
 8004d84:	605a      	str	r2, [r3, #4]
 8004d86:	68c2      	ldr	r2, [r0, #12]
 8004d88:	609a      	str	r2, [r3, #8]
 8004d8a:	6902      	ldr	r2, [r0, #16]
 8004d8c:	60da      	str	r2, [r3, #12]
 8004d8e:	6942      	ldr	r2, [r0, #20]
 8004d90:	611a      	str	r2, [r3, #16]
 8004d92:	6a02      	ldr	r2, [r0, #32]
 8004d94:	619a      	str	r2, [r3, #24]
 8004d96:	2200      	movs	r2, #0
 8004d98:	61da      	str	r2, [r3, #28]
 8004d9a:	84da      	strh	r2, [r3, #38]	; 0x26
 8004d9c:	849a      	strh	r2, [r3, #36]	; 0x24
 8004d9e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004da0:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004da2:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8004da6:	3201      	adds	r2, #1
 8004da8:	d10a      	bne.n	8004dc0 <init_uart+0x4c>
 8004daa:	2208      	movs	r2, #8
 8004dac:	615a      	str	r2, [r3, #20]
 8004dae:	4618      	mov	r0, r3
 8004db0:	f001 fb3f 	bl	8006432 <HAL_UART_Init>
 8004db4:	b158      	cbz	r0, 8004dce <init_uart+0x5a>
 8004db6:	4807      	ldr	r0, [pc, #28]	; (8004dd4 <init_uart+0x60>)
 8004db8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004dbc:	f7fd bf26 	b.w	8002c0c <error>
 8004dc0:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8004dc4:	3201      	adds	r2, #1
 8004dc6:	bf0c      	ite	eq
 8004dc8:	2204      	moveq	r2, #4
 8004dca:	220c      	movne	r2, #12
 8004dcc:	e7ee      	b.n	8004dac <init_uart+0x38>
 8004dce:	bd10      	pop	{r4, pc}
 8004dd0:	20001390 	.word	0x20001390
 8004dd4:	08009014 	.word	0x08009014

08004dd8 <uart_irq>:
 8004dd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004dda:	4e19      	ldr	r6, [pc, #100]	; (8004e40 <uart_irq+0x68>)
 8004ddc:	4607      	mov	r7, r0
 8004dde:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8004de2:	2800      	cmp	r0, #0
 8004de4:	d02a      	beq.n	8004e3c <uart_irq+0x64>
 8004de6:	4c17      	ldr	r4, [pc, #92]	; (8004e44 <uart_irq+0x6c>)
 8004de8:	01bd      	lsls	r5, r7, #6
 8004dea:	5963      	ldr	r3, [r4, r5]
 8004dec:	681a      	ldr	r2, [r3, #0]
 8004dee:	0652      	lsls	r2, r2, #25
 8004df0:	d50a      	bpl.n	8004e08 <uart_irq+0x30>
 8004df2:	68db      	ldr	r3, [r3, #12]
 8004df4:	0659      	lsls	r1, r3, #25
 8004df6:	d507      	bpl.n	8004e08 <uart_irq+0x30>
 8004df8:	4b13      	ldr	r3, [pc, #76]	; (8004e48 <uart_irq+0x70>)
 8004dfa:	2101      	movs	r1, #1
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	4798      	blx	r3
 8004e00:	5963      	ldr	r3, [r4, r5]
 8004e02:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004e06:	601a      	str	r2, [r3, #0]
 8004e08:	5963      	ldr	r3, [r4, r5]
 8004e0a:	681a      	ldr	r2, [r3, #0]
 8004e0c:	0692      	lsls	r2, r2, #26
 8004e0e:	d50c      	bpl.n	8004e2a <uart_irq+0x52>
 8004e10:	68db      	ldr	r3, [r3, #12]
 8004e12:	0698      	lsls	r0, r3, #26
 8004e14:	d509      	bpl.n	8004e2a <uart_irq+0x52>
 8004e16:	4b0c      	ldr	r3, [pc, #48]	; (8004e48 <uart_irq+0x70>)
 8004e18:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	2100      	movs	r1, #0
 8004e20:	4798      	blx	r3
 8004e22:	5963      	ldr	r3, [r4, r5]
 8004e24:	f06f 0220 	mvn.w	r2, #32
 8004e28:	601a      	str	r2, [r3, #0]
 8004e2a:	5963      	ldr	r3, [r4, r5]
 8004e2c:	681a      	ldr	r2, [r3, #0]
 8004e2e:	0711      	lsls	r1, r2, #28
 8004e30:	d504      	bpl.n	8004e3c <uart_irq+0x64>
 8004e32:	695a      	ldr	r2, [r3, #20]
 8004e34:	07d2      	lsls	r2, r2, #31
 8004e36:	bf44      	itt	mi
 8004e38:	685b      	ldrmi	r3, [r3, #4]
 8004e3a:	9301      	strmi	r3, [sp, #4]
 8004e3c:	b003      	add	sp, #12
 8004e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e40:	2000136c 	.word	0x2000136c
 8004e44:	20001390 	.word	0x20001390
 8004e48:	20001368 	.word	0x20001368

08004e4c <uart1_irq>:
 8004e4c:	2000      	movs	r0, #0
 8004e4e:	f7ff bfc3 	b.w	8004dd8 <uart_irq>

08004e52 <uart2_irq>:
 8004e52:	2001      	movs	r0, #1
 8004e54:	f7ff bfc0 	b.w	8004dd8 <uart_irq>

08004e58 <uart3_irq>:
 8004e58:	2002      	movs	r0, #2
 8004e5a:	f7ff bfbd 	b.w	8004dd8 <uart_irq>

08004e5e <uart4_irq>:
 8004e5e:	2003      	movs	r0, #3
 8004e60:	f7ff bfba 	b.w	8004dd8 <uart_irq>

08004e64 <uart5_irq>:
 8004e64:	2004      	movs	r0, #4
 8004e66:	f7ff bfb7 	b.w	8004dd8 <uart_irq>

08004e6a <uart6_irq>:
 8004e6a:	2005      	movs	r0, #5
 8004e6c:	f7ff bfb4 	b.w	8004dd8 <uart_irq>

08004e70 <serial_init>:
 8004e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e72:	460e      	mov	r6, r1
 8004e74:	b087      	sub	sp, #28
 8004e76:	4604      	mov	r4, r0
 8004e78:	496d      	ldr	r1, [pc, #436]	; (8005030 <serial_init+0x1c0>)
 8004e7a:	4630      	mov	r0, r6
 8004e7c:	4615      	mov	r5, r2
 8004e7e:	f7fd fe6f 	bl	8002b60 <pinmap_peripheral>
 8004e82:	496c      	ldr	r1, [pc, #432]	; (8005034 <serial_init+0x1c4>)
 8004e84:	4607      	mov	r7, r0
 8004e86:	4628      	mov	r0, r5
 8004e88:	f7fd fe6a 	bl	8002b60 <pinmap_peripheral>
 8004e8c:	4601      	mov	r1, r0
 8004e8e:	4638      	mov	r0, r7
 8004e90:	f7fd fe48 	bl	8002b24 <pinmap_merge>
 8004e94:	4b68      	ldr	r3, [pc, #416]	; (8005038 <serial_init+0x1c8>)
 8004e96:	6020      	str	r0, [r4, #0]
 8004e98:	4298      	cmp	r0, r3
 8004e9a:	f000 809c 	beq.w	8004fd6 <serial_init+0x166>
 8004e9e:	d836      	bhi.n	8004f0e <serial_init+0x9e>
 8004ea0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004ea4:	4298      	cmp	r0, r3
 8004ea6:	d069      	beq.n	8004f7c <serial_init+0x10c>
 8004ea8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004eac:	4298      	cmp	r0, r3
 8004eae:	d07c      	beq.n	8004faa <serial_init+0x13a>
 8004eb0:	495f      	ldr	r1, [pc, #380]	; (8005030 <serial_init+0x1c0>)
 8004eb2:	4630      	mov	r0, r6
 8004eb4:	f7fd fe18 	bl	8002ae8 <pinmap_pinout>
 8004eb8:	495e      	ldr	r1, [pc, #376]	; (8005034 <serial_init+0x1c4>)
 8004eba:	4628      	mov	r0, r5
 8004ebc:	f7fd fe14 	bl	8002ae8 <pinmap_pinout>
 8004ec0:	1c72      	adds	r2, r6, #1
 8004ec2:	d003      	beq.n	8004ecc <serial_init+0x5c>
 8004ec4:	2101      	movs	r1, #1
 8004ec6:	4630      	mov	r0, r6
 8004ec8:	f7ff ff0a 	bl	8004ce0 <pin_mode>
 8004ecc:	1c6b      	adds	r3, r5, #1
 8004ece:	d003      	beq.n	8004ed8 <serial_init+0x68>
 8004ed0:	2101      	movs	r1, #1
 8004ed2:	4628      	mov	r0, r5
 8004ed4:	f7ff ff04 	bl	8004ce0 <pin_mode>
 8004ed8:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8004edc:	60a3      	str	r3, [r4, #8]
 8004ede:	2300      	movs	r3, #0
 8004ee0:	60e3      	str	r3, [r4, #12]
 8004ee2:	6123      	str	r3, [r4, #16]
 8004ee4:	6163      	str	r3, [r4, #20]
 8004ee6:	6223      	str	r3, [r4, #32]
 8004ee8:	8326      	strh	r6, [r4, #24]
 8004eea:	8365      	strh	r5, [r4, #26]
 8004eec:	4620      	mov	r0, r4
 8004eee:	f7ff ff41 	bl	8004d74 <init_uart>
 8004ef2:	6822      	ldr	r2, [r4, #0]
 8004ef4:	4b51      	ldr	r3, [pc, #324]	; (800503c <serial_init+0x1cc>)
 8004ef6:	429a      	cmp	r2, r3
 8004ef8:	d107      	bne.n	8004f0a <serial_init+0x9a>
 8004efa:	4b51      	ldr	r3, [pc, #324]	; (8005040 <serial_init+0x1d0>)
 8004efc:	4851      	ldr	r0, [pc, #324]	; (8005044 <serial_init+0x1d4>)
 8004efe:	2201      	movs	r2, #1
 8004f00:	601a      	str	r2, [r3, #0]
 8004f02:	4621      	mov	r1, r4
 8004f04:	224c      	movs	r2, #76	; 0x4c
 8004f06:	f002 ff93 	bl	8007e30 <memcpy>
 8004f0a:	b007      	add	sp, #28
 8004f0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f0e:	4b4e      	ldr	r3, [pc, #312]	; (8005048 <serial_init+0x1d8>)
 8004f10:	4298      	cmp	r0, r3
 8004f12:	d01d      	beq.n	8004f50 <serial_init+0xe0>
 8004f14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f18:	4298      	cmp	r0, r3
 8004f1a:	d072      	beq.n	8005002 <serial_init+0x192>
 8004f1c:	f5a3 4344 	sub.w	r3, r3, #50176	; 0xc400
 8004f20:	4298      	cmp	r0, r3
 8004f22:	d1c5      	bne.n	8004eb0 <serial_init+0x40>
 8004f24:	4b49      	ldr	r3, [pc, #292]	; (800504c <serial_init+0x1dc>)
 8004f26:	6a1a      	ldr	r2, [r3, #32]
 8004f28:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8004f2c:	621a      	str	r2, [r3, #32]
 8004f2e:	6a1a      	ldr	r2, [r3, #32]
 8004f30:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004f34:	621a      	str	r2, [r3, #32]
 8004f36:	2200      	movs	r2, #0
 8004f38:	9204      	str	r2, [sp, #16]
 8004f3a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f3c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8004f40:	641a      	str	r2, [r3, #64]	; 0x40
 8004f42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f44:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004f48:	9304      	str	r3, [sp, #16]
 8004f4a:	9b04      	ldr	r3, [sp, #16]
 8004f4c:	2304      	movs	r3, #4
 8004f4e:	e02a      	b.n	8004fa6 <serial_init+0x136>
 8004f50:	4b3e      	ldr	r3, [pc, #248]	; (800504c <serial_init+0x1dc>)
 8004f52:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f54:	f042 0210 	orr.w	r2, r2, #16
 8004f58:	625a      	str	r2, [r3, #36]	; 0x24
 8004f5a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f5c:	2100      	movs	r1, #0
 8004f5e:	f022 0210 	bic.w	r2, r2, #16
 8004f62:	625a      	str	r2, [r3, #36]	; 0x24
 8004f64:	9100      	str	r1, [sp, #0]
 8004f66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004f68:	f042 0210 	orr.w	r2, r2, #16
 8004f6c:	645a      	str	r2, [r3, #68]	; 0x44
 8004f6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004f70:	6061      	str	r1, [r4, #4]
 8004f72:	f003 0310 	and.w	r3, r3, #16
 8004f76:	9300      	str	r3, [sp, #0]
 8004f78:	9b00      	ldr	r3, [sp, #0]
 8004f7a:	e799      	b.n	8004eb0 <serial_init+0x40>
 8004f7c:	4b33      	ldr	r3, [pc, #204]	; (800504c <serial_init+0x1dc>)
 8004f7e:	6a1a      	ldr	r2, [r3, #32]
 8004f80:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004f84:	621a      	str	r2, [r3, #32]
 8004f86:	6a1a      	ldr	r2, [r3, #32]
 8004f88:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004f8c:	621a      	str	r2, [r3, #32]
 8004f8e:	2200      	movs	r2, #0
 8004f90:	9201      	str	r2, [sp, #4]
 8004f92:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f94:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004f98:	641a      	str	r2, [r3, #64]	; 0x40
 8004f9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004fa0:	9301      	str	r3, [sp, #4]
 8004fa2:	9b01      	ldr	r3, [sp, #4]
 8004fa4:	2301      	movs	r3, #1
 8004fa6:	6063      	str	r3, [r4, #4]
 8004fa8:	e782      	b.n	8004eb0 <serial_init+0x40>
 8004faa:	4b28      	ldr	r3, [pc, #160]	; (800504c <serial_init+0x1dc>)
 8004fac:	6a1a      	ldr	r2, [r3, #32]
 8004fae:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8004fb2:	621a      	str	r2, [r3, #32]
 8004fb4:	6a1a      	ldr	r2, [r3, #32]
 8004fb6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004fba:	621a      	str	r2, [r3, #32]
 8004fbc:	2200      	movs	r2, #0
 8004fbe:	9202      	str	r2, [sp, #8]
 8004fc0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004fc2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8004fc6:	641a      	str	r2, [r3, #64]	; 0x40
 8004fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fca:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004fce:	9302      	str	r3, [sp, #8]
 8004fd0:	9b02      	ldr	r3, [sp, #8]
 8004fd2:	2302      	movs	r3, #2
 8004fd4:	e7e7      	b.n	8004fa6 <serial_init+0x136>
 8004fd6:	4b1d      	ldr	r3, [pc, #116]	; (800504c <serial_init+0x1dc>)
 8004fd8:	6a1a      	ldr	r2, [r3, #32]
 8004fda:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004fde:	621a      	str	r2, [r3, #32]
 8004fe0:	6a1a      	ldr	r2, [r3, #32]
 8004fe2:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8004fe6:	621a      	str	r2, [r3, #32]
 8004fe8:	2200      	movs	r2, #0
 8004fea:	9203      	str	r2, [sp, #12]
 8004fec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004fee:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004ff2:	641a      	str	r2, [r3, #64]	; 0x40
 8004ff4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ff6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004ffa:	9303      	str	r3, [sp, #12]
 8004ffc:	9b03      	ldr	r3, [sp, #12]
 8004ffe:	2303      	movs	r3, #3
 8005000:	e7d1      	b.n	8004fa6 <serial_init+0x136>
 8005002:	4b12      	ldr	r3, [pc, #72]	; (800504c <serial_init+0x1dc>)
 8005004:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005006:	f042 0220 	orr.w	r2, r2, #32
 800500a:	625a      	str	r2, [r3, #36]	; 0x24
 800500c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800500e:	f022 0220 	bic.w	r2, r2, #32
 8005012:	625a      	str	r2, [r3, #36]	; 0x24
 8005014:	2200      	movs	r2, #0
 8005016:	9205      	str	r2, [sp, #20]
 8005018:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800501a:	f042 0220 	orr.w	r2, r2, #32
 800501e:	645a      	str	r2, [r3, #68]	; 0x44
 8005020:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005022:	f003 0320 	and.w	r3, r3, #32
 8005026:	9305      	str	r3, [sp, #20]
 8005028:	9b05      	ldr	r3, [sp, #20]
 800502a:	2305      	movs	r3, #5
 800502c:	e7bb      	b.n	8004fa6 <serial_init+0x136>
 800502e:	bf00      	nop
 8005030:	08009110 	.word	0x08009110
 8005034:	080090a4 	.word	0x080090a4
 8005038:	40004c00 	.word	0x40004c00
 800503c:	40004400 	.word	0x40004400
 8005040:	2000138c 	.word	0x2000138c
 8005044:	20002248 	.word	0x20002248
 8005048:	40011000 	.word	0x40011000
 800504c:	40023800 	.word	0x40023800

08005050 <serial_baud>:
 8005050:	6081      	str	r1, [r0, #8]
 8005052:	f7ff be8f 	b.w	8004d74 <init_uart>
	...

08005058 <serial_irq_handler>:
 8005058:	4b03      	ldr	r3, [pc, #12]	; (8005068 <serial_irq_handler+0x10>)
 800505a:	6019      	str	r1, [r3, #0]
 800505c:	6841      	ldr	r1, [r0, #4]
 800505e:	4b03      	ldr	r3, [pc, #12]	; (800506c <serial_irq_handler+0x14>)
 8005060:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8005064:	4770      	bx	lr
 8005066:	bf00      	nop
 8005068:	20001368 	.word	0x20001368
 800506c:	2000136c 	.word	0x2000136c

08005070 <serial_irq_set>:
 8005070:	b538      	push	{r3, r4, r5, lr}
 8005072:	6843      	ldr	r3, [r0, #4]
 8005074:	460d      	mov	r5, r1
 8005076:	2b05      	cmp	r3, #5
 8005078:	d82b      	bhi.n	80050d2 <serial_irq_set+0x62>
 800507a:	e8df f003 	tbb	[pc, r3]
 800507e:	1b03      	.short	0x1b03
 8005080:	2724211e 	.word	0x2724211e
 8005084:	4921      	ldr	r1, [pc, #132]	; (800510c <serial_irq_set+0x9c>)
 8005086:	2425      	movs	r4, #37	; 0x25
 8005088:	4821      	ldr	r0, [pc, #132]	; (8005110 <serial_irq_set+0xa0>)
 800508a:	019b      	lsls	r3, r3, #6
 800508c:	b33a      	cbz	r2, 80050de <serial_irq_set+0x6e>
 800508e:	58c2      	ldr	r2, [r0, r3]
 8005090:	68d3      	ldr	r3, [r2, #12]
 8005092:	bb0d      	cbnz	r5, 80050d8 <serial_irq_set+0x68>
 8005094:	f043 0320 	orr.w	r3, r3, #32
 8005098:	60d3      	str	r3, [r2, #12]
 800509a:	4620      	mov	r0, r4
 800509c:	f000 f9c2 	bl	8005424 <__NVIC_SetVector>
 80050a0:	0962      	lsrs	r2, r4, #5
 80050a2:	2301      	movs	r3, #1
 80050a4:	f004 0417 	and.w	r4, r4, #23
 80050a8:	fa03 f404 	lsl.w	r4, r3, r4
 80050ac:	4b19      	ldr	r3, [pc, #100]	; (8005114 <serial_irq_set+0xa4>)
 80050ae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80050b2:	bd38      	pop	{r3, r4, r5, pc}
 80050b4:	4918      	ldr	r1, [pc, #96]	; (8005118 <serial_irq_set+0xa8>)
 80050b6:	2426      	movs	r4, #38	; 0x26
 80050b8:	e7e6      	b.n	8005088 <serial_irq_set+0x18>
 80050ba:	4918      	ldr	r1, [pc, #96]	; (800511c <serial_irq_set+0xac>)
 80050bc:	2427      	movs	r4, #39	; 0x27
 80050be:	e7e3      	b.n	8005088 <serial_irq_set+0x18>
 80050c0:	4917      	ldr	r1, [pc, #92]	; (8005120 <serial_irq_set+0xb0>)
 80050c2:	2434      	movs	r4, #52	; 0x34
 80050c4:	e7e0      	b.n	8005088 <serial_irq_set+0x18>
 80050c6:	4917      	ldr	r1, [pc, #92]	; (8005124 <serial_irq_set+0xb4>)
 80050c8:	2435      	movs	r4, #53	; 0x35
 80050ca:	e7dd      	b.n	8005088 <serial_irq_set+0x18>
 80050cc:	4916      	ldr	r1, [pc, #88]	; (8005128 <serial_irq_set+0xb8>)
 80050ce:	2447      	movs	r4, #71	; 0x47
 80050d0:	e7da      	b.n	8005088 <serial_irq_set+0x18>
 80050d2:	2100      	movs	r1, #0
 80050d4:	460c      	mov	r4, r1
 80050d6:	e7d7      	b.n	8005088 <serial_irq_set+0x18>
 80050d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80050dc:	e7dc      	b.n	8005098 <serial_irq_set+0x28>
 80050de:	58c3      	ldr	r3, [r0, r3]
 80050e0:	68da      	ldr	r2, [r3, #12]
 80050e2:	b935      	cbnz	r5, 80050f2 <serial_irq_set+0x82>
 80050e4:	f022 0220 	bic.w	r2, r2, #32
 80050e8:	60da      	str	r2, [r3, #12]
 80050ea:	68db      	ldr	r3, [r3, #12]
 80050ec:	061a      	lsls	r2, r3, #24
 80050ee:	d506      	bpl.n	80050fe <serial_irq_set+0x8e>
 80050f0:	bd38      	pop	{r3, r4, r5, pc}
 80050f2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80050f6:	60da      	str	r2, [r3, #12]
 80050f8:	68db      	ldr	r3, [r3, #12]
 80050fa:	069b      	lsls	r3, r3, #26
 80050fc:	d404      	bmi.n	8005108 <serial_irq_set+0x98>
 80050fe:	4620      	mov	r0, r4
 8005100:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005104:	f7ff be24 	b.w	8004d50 <__NVIC_DisableIRQ>
 8005108:	bd38      	pop	{r3, r4, r5, pc}
 800510a:	bf00      	nop
 800510c:	08004e4d 	.word	0x08004e4d
 8005110:	20001390 	.word	0x20001390
 8005114:	e000e100 	.word	0xe000e100
 8005118:	08004e53 	.word	0x08004e53
 800511c:	08004e59 	.word	0x08004e59
 8005120:	08004e5f 	.word	0x08004e5f
 8005124:	08004e65 	.word	0x08004e65
 8005128:	08004e6b 	.word	0x08004e6b

0800512c <serial_readable>:
 800512c:	6843      	ldr	r3, [r0, #4]
 800512e:	4a03      	ldr	r2, [pc, #12]	; (800513c <serial_readable+0x10>)
 8005130:	019b      	lsls	r3, r3, #6
 8005132:	58d3      	ldr	r3, [r2, r3]
 8005134:	6818      	ldr	r0, [r3, #0]
 8005136:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800513a:	4770      	bx	lr
 800513c:	20001390 	.word	0x20001390

08005140 <serial_getc>:
 8005140:	6841      	ldr	r1, [r0, #4]
 8005142:	b510      	push	{r4, lr}
 8005144:	4604      	mov	r4, r0
 8005146:	4620      	mov	r0, r4
 8005148:	f7ff fff0 	bl	800512c <serial_readable>
 800514c:	2800      	cmp	r0, #0
 800514e:	d0fa      	beq.n	8005146 <serial_getc+0x6>
 8005150:	0189      	lsls	r1, r1, #6
 8005152:	4b03      	ldr	r3, [pc, #12]	; (8005160 <serial_getc+0x20>)
 8005154:	585b      	ldr	r3, [r3, r1]
 8005156:	6858      	ldr	r0, [r3, #4]
 8005158:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800515c:	bd10      	pop	{r4, pc}
 800515e:	bf00      	nop
 8005160:	20001390 	.word	0x20001390

08005164 <serial_writable>:
 8005164:	6843      	ldr	r3, [r0, #4]
 8005166:	4a03      	ldr	r2, [pc, #12]	; (8005174 <serial_writable+0x10>)
 8005168:	019b      	lsls	r3, r3, #6
 800516a:	58d3      	ldr	r3, [r2, r3]
 800516c:	6818      	ldr	r0, [r3, #0]
 800516e:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8005172:	4770      	bx	lr
 8005174:	20001390 	.word	0x20001390

08005178 <serial_putc>:
 8005178:	b538      	push	{r3, r4, r5, lr}
 800517a:	6844      	ldr	r4, [r0, #4]
 800517c:	4605      	mov	r5, r0
 800517e:	4628      	mov	r0, r5
 8005180:	f7ff fff0 	bl	8005164 <serial_writable>
 8005184:	2800      	cmp	r0, #0
 8005186:	d0fa      	beq.n	800517e <serial_putc+0x6>
 8005188:	01a4      	lsls	r4, r4, #6
 800518a:	4b03      	ldr	r3, [pc, #12]	; (8005198 <serial_putc+0x20>)
 800518c:	591b      	ldr	r3, [r3, r4]
 800518e:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8005192:	6059      	str	r1, [r3, #4]
 8005194:	bd38      	pop	{r3, r4, r5, pc}
 8005196:	bf00      	nop
 8005198:	20001390 	.word	0x20001390

0800519c <mbed_sdk_init>:
 800519c:	b508      	push	{r3, lr}
 800519e:	f000 f805 	bl	80051ac <SystemCoreClockUpdate>
 80051a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80051a6:	f001 bbc7 	b.w	8006938 <HAL_Init>
	...

080051ac <SystemCoreClockUpdate>:
 80051ac:	4a17      	ldr	r2, [pc, #92]	; (800520c <SystemCoreClockUpdate+0x60>)
 80051ae:	4918      	ldr	r1, [pc, #96]	; (8005210 <SystemCoreClockUpdate+0x64>)
 80051b0:	6893      	ldr	r3, [r2, #8]
 80051b2:	f003 030c 	and.w	r3, r3, #12
 80051b6:	2b04      	cmp	r3, #4
 80051b8:	b510      	push	{r4, lr}
 80051ba:	d00d      	beq.n	80051d8 <SystemCoreClockUpdate+0x2c>
 80051bc:	2b08      	cmp	r3, #8
 80051be:	d00d      	beq.n	80051dc <SystemCoreClockUpdate+0x30>
 80051c0:	4b14      	ldr	r3, [pc, #80]	; (8005214 <SystemCoreClockUpdate+0x68>)
 80051c2:	600b      	str	r3, [r1, #0]
 80051c4:	4b11      	ldr	r3, [pc, #68]	; (800520c <SystemCoreClockUpdate+0x60>)
 80051c6:	4a14      	ldr	r2, [pc, #80]	; (8005218 <SystemCoreClockUpdate+0x6c>)
 80051c8:	689b      	ldr	r3, [r3, #8]
 80051ca:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80051ce:	5cd2      	ldrb	r2, [r2, r3]
 80051d0:	680b      	ldr	r3, [r1, #0]
 80051d2:	40d3      	lsrs	r3, r2
 80051d4:	600b      	str	r3, [r1, #0]
 80051d6:	bd10      	pop	{r4, pc}
 80051d8:	4b10      	ldr	r3, [pc, #64]	; (800521c <SystemCoreClockUpdate+0x70>)
 80051da:	e7f2      	b.n	80051c2 <SystemCoreClockUpdate+0x16>
 80051dc:	6854      	ldr	r4, [r2, #4]
 80051de:	6850      	ldr	r0, [r2, #4]
 80051e0:	6852      	ldr	r2, [r2, #4]
 80051e2:	0263      	lsls	r3, r4, #9
 80051e4:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80051e8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80051ec:	bf4c      	ite	mi
 80051ee:	4b0b      	ldrmi	r3, [pc, #44]	; (800521c <SystemCoreClockUpdate+0x70>)
 80051f0:	4b08      	ldrpl	r3, [pc, #32]	; (8005214 <SystemCoreClockUpdate+0x68>)
 80051f2:	fbb3 f3f0 	udiv	r3, r3, r0
 80051f6:	4353      	muls	r3, r2
 80051f8:	4a04      	ldr	r2, [pc, #16]	; (800520c <SystemCoreClockUpdate+0x60>)
 80051fa:	6852      	ldr	r2, [r2, #4]
 80051fc:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8005200:	3201      	adds	r2, #1
 8005202:	0052      	lsls	r2, r2, #1
 8005204:	fbb3 f3f2 	udiv	r3, r3, r2
 8005208:	e7db      	b.n	80051c2 <SystemCoreClockUpdate+0x16>
 800520a:	bf00      	nop
 800520c:	40023800 	.word	0x40023800
 8005210:	200001e0 	.word	0x200001e0
 8005214:	00f42400 	.word	0x00f42400
 8005218:	0800917c 	.word	0x0800917c
 800521c:	007a1200 	.word	0x007a1200

08005220 <SetSysClock_PLL_HSE>:
 8005220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005224:	b0ac      	sub	sp, #176	; 0xb0
 8005226:	4b30      	ldr	r3, [pc, #192]	; (80052e8 <SetSysClock_PLL_HSE+0xc8>)
 8005228:	2100      	movs	r1, #0
 800522a:	9101      	str	r1, [sp, #4]
 800522c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800522e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005232:	641a      	str	r2, [r3, #64]	; 0x40
 8005234:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005236:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800523a:	9301      	str	r3, [sp, #4]
 800523c:	9b01      	ldr	r3, [sp, #4]
 800523e:	4b2b      	ldr	r3, [pc, #172]	; (80052ec <SetSysClock_PLL_HSE+0xcc>)
 8005240:	9102      	str	r1, [sp, #8]
 8005242:	681a      	ldr	r2, [r3, #0]
 8005244:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8005248:	601a      	str	r2, [r3, #0]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005250:	9302      	str	r3, [sp, #8]
 8005252:	9b02      	ldr	r3, [sp, #8]
 8005254:	2301      	movs	r3, #1
 8005256:	9308      	str	r3, [sp, #32]
 8005258:	4607      	mov	r7, r0
 800525a:	b9c0      	cbnz	r0, 800528e <SetSysClock_PLL_HSE+0x6e>
 800525c:	9309      	str	r3, [sp, #36]	; 0x24
 800525e:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8005262:	2402      	movs	r4, #2
 8005264:	f44f 0580 	mov.w	r5, #4194304	; 0x400000
 8005268:	2608      	movs	r6, #8
 800526a:	9311      	str	r3, [sp, #68]	; 0x44
 800526c:	a808      	add	r0, sp, #32
 800526e:	2307      	movs	r3, #7
 8005270:	940e      	str	r4, [sp, #56]	; 0x38
 8005272:	950f      	str	r5, [sp, #60]	; 0x3c
 8005274:	9610      	str	r6, [sp, #64]	; 0x40
 8005276:	9412      	str	r4, [sp, #72]	; 0x48
 8005278:	9313      	str	r3, [sp, #76]	; 0x4c
 800527a:	9414      	str	r4, [sp, #80]	; 0x50
 800527c:	f000 fbe2 	bl	8005a44 <HAL_RCC_OscConfig>
 8005280:	b918      	cbnz	r0, 800528a <SetSysClock_PLL_HSE+0x6a>
 8005282:	f001 fb0d 	bl	80068a0 <HAL_PWREx_EnableOverDrive>
 8005286:	4680      	mov	r8, r0
 8005288:	b118      	cbz	r0, 8005292 <SetSysClock_PLL_HSE+0x72>
 800528a:	2000      	movs	r0, #0
 800528c:	e028      	b.n	80052e0 <SetSysClock_PLL_HSE+0xc0>
 800528e:	2305      	movs	r3, #5
 8005290:	e7e4      	b.n	800525c <SetSysClock_PLL_HSE+0x3c>
 8005292:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8005296:	931c      	str	r3, [sp, #112]	; 0x70
 8005298:	f44f 7380 	mov.w	r3, #256	; 0x100
 800529c:	9315      	str	r3, [sp, #84]	; 0x54
 800529e:	a815      	add	r0, sp, #84	; 0x54
 80052a0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80052a4:	932a      	str	r3, [sp, #168]	; 0xa8
 80052a6:	961b      	str	r6, [sp, #108]	; 0x6c
 80052a8:	961d      	str	r6, [sp, #116]	; 0x74
 80052aa:	f000 f8db 	bl	8005464 <HAL_RCCEx_PeriphCLKConfig>
 80052ae:	230f      	movs	r3, #15
 80052b0:	9303      	str	r3, [sp, #12]
 80052b2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80052b6:	9306      	str	r3, [sp, #24]
 80052b8:	2105      	movs	r1, #5
 80052ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80052be:	a803      	add	r0, sp, #12
 80052c0:	9404      	str	r4, [sp, #16]
 80052c2:	f8cd 8014 	str.w	r8, [sp, #20]
 80052c6:	9307      	str	r3, [sp, #28]
 80052c8:	f001 f9e4 	bl	8006694 <HAL_RCC_ClockConfig>
 80052cc:	4602      	mov	r2, r0
 80052ce:	2800      	cmp	r0, #0
 80052d0:	d1db      	bne.n	800528a <SetSysClock_PLL_HSE+0x6a>
 80052d2:	b90f      	cbnz	r7, 80052d8 <SetSysClock_PLL_HSE+0xb8>
 80052d4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80052d8:	4629      	mov	r1, r5
 80052da:	f001 f98f 	bl	80065fc <HAL_RCC_MCOConfig>
 80052de:	2001      	movs	r0, #1
 80052e0:	b02c      	add	sp, #176	; 0xb0
 80052e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052e6:	bf00      	nop
 80052e8:	40023800 	.word	0x40023800
 80052ec:	40007000 	.word	0x40007000

080052f0 <SetSysClock_PLL_HSI>:
 80052f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052f2:	b095      	sub	sp, #84	; 0x54
 80052f4:	2400      	movs	r4, #0
 80052f6:	4b23      	ldr	r3, [pc, #140]	; (8005384 <SetSysClock_PLL_HSI+0x94>)
 80052f8:	9400      	str	r4, [sp, #0]
 80052fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80052fc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005300:	641a      	str	r2, [r3, #64]	; 0x40
 8005302:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005304:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005308:	9300      	str	r3, [sp, #0]
 800530a:	9b00      	ldr	r3, [sp, #0]
 800530c:	4b1e      	ldr	r3, [pc, #120]	; (8005388 <SetSysClock_PLL_HSI+0x98>)
 800530e:	9401      	str	r4, [sp, #4]
 8005310:	681a      	ldr	r2, [r3, #0]
 8005312:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8005316:	601a      	str	r2, [r3, #0]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	9408      	str	r4, [sp, #32]
 800531c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005320:	9301      	str	r3, [sp, #4]
 8005322:	9b01      	ldr	r3, [sp, #4]
 8005324:	940e      	str	r4, [sp, #56]	; 0x38
 8005326:	2303      	movs	r3, #3
 8005328:	9307      	str	r3, [sp, #28]
 800532a:	2310      	movs	r3, #16
 800532c:	930b      	str	r3, [sp, #44]	; 0x2c
 800532e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005330:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8005334:	2602      	movs	r6, #2
 8005336:	9310      	str	r3, [sp, #64]	; 0x40
 8005338:	2701      	movs	r7, #1
 800533a:	2306      	movs	r3, #6
 800533c:	a807      	add	r0, sp, #28
 800533e:	970a      	str	r7, [sp, #40]	; 0x28
 8005340:	960d      	str	r6, [sp, #52]	; 0x34
 8005342:	9611      	str	r6, [sp, #68]	; 0x44
 8005344:	9312      	str	r3, [sp, #72]	; 0x48
 8005346:	f000 fb7d 	bl	8005a44 <HAL_RCC_OscConfig>
 800534a:	4605      	mov	r5, r0
 800534c:	b9b8      	cbnz	r0, 800537e <SetSysClock_PLL_HSI+0x8e>
 800534e:	230f      	movs	r3, #15
 8005350:	9302      	str	r3, [sp, #8]
 8005352:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8005356:	9004      	str	r0, [sp, #16]
 8005358:	9305      	str	r3, [sp, #20]
 800535a:	2105      	movs	r1, #5
 800535c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005360:	a802      	add	r0, sp, #8
 8005362:	9603      	str	r6, [sp, #12]
 8005364:	9306      	str	r3, [sp, #24]
 8005366:	f001 f995 	bl	8006694 <HAL_RCC_ClockConfig>
 800536a:	4602      	mov	r2, r0
 800536c:	b928      	cbnz	r0, 800537a <SetSysClock_PLL_HSI+0x8a>
 800536e:	4601      	mov	r1, r0
 8005370:	f001 f944 	bl	80065fc <HAL_RCC_MCOConfig>
 8005374:	4638      	mov	r0, r7
 8005376:	b015      	add	sp, #84	; 0x54
 8005378:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800537a:	4628      	mov	r0, r5
 800537c:	e7fb      	b.n	8005376 <SetSysClock_PLL_HSI+0x86>
 800537e:	4620      	mov	r0, r4
 8005380:	e7f9      	b.n	8005376 <SetSysClock_PLL_HSI+0x86>
 8005382:	bf00      	nop
 8005384:	40023800 	.word	0x40023800
 8005388:	40007000 	.word	0x40007000

0800538c <SetSysClock>:
 800538c:	b508      	push	{r3, lr}
 800538e:	2001      	movs	r0, #1
 8005390:	f7ff ff46 	bl	8005220 <SetSysClock_PLL_HSE>
 8005394:	b918      	cbnz	r0, 800539e <SetSysClock+0x12>
 8005396:	f7ff ffab 	bl	80052f0 <SetSysClock_PLL_HSI>
 800539a:	b900      	cbnz	r0, 800539e <SetSysClock+0x12>
 800539c:	e7fe      	b.n	800539c <SetSysClock+0x10>
 800539e:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80053a2:	2100      	movs	r1, #0
 80053a4:	2001      	movs	r0, #1
 80053a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80053aa:	f001 b927 	b.w	80065fc <HAL_RCC_MCOConfig>
	...

080053b0 <SystemInit>:
 80053b0:	4a17      	ldr	r2, [pc, #92]	; (8005410 <SystemInit+0x60>)
 80053b2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80053b6:	b510      	push	{r4, lr}
 80053b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80053bc:	4c15      	ldr	r4, [pc, #84]	; (8005414 <SystemInit+0x64>)
 80053be:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80053c2:	6823      	ldr	r3, [r4, #0]
 80053c4:	2100      	movs	r1, #0
 80053c6:	f043 0301 	orr.w	r3, r3, #1
 80053ca:	6023      	str	r3, [r4, #0]
 80053cc:	60a1      	str	r1, [r4, #8]
 80053ce:	6823      	ldr	r3, [r4, #0]
 80053d0:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80053d4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80053d8:	6023      	str	r3, [r4, #0]
 80053da:	4b0f      	ldr	r3, [pc, #60]	; (8005418 <SystemInit+0x68>)
 80053dc:	6063      	str	r3, [r4, #4]
 80053de:	6823      	ldr	r3, [r4, #0]
 80053e0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80053e4:	6023      	str	r3, [r4, #0]
 80053e6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80053ea:	60e1      	str	r1, [r4, #12]
 80053ec:	6093      	str	r3, [r2, #8]
 80053ee:	4b0b      	ldr	r3, [pc, #44]	; (800541c <SystemInit+0x6c>)
 80053f0:	4a0b      	ldr	r2, [pc, #44]	; (8005420 <SystemInit+0x70>)
 80053f2:	601a      	str	r2, [r3, #0]
 80053f4:	f001 faa0 	bl	8006938 <HAL_Init>
 80053f8:	f7ff ffc8 	bl	800538c <SetSysClock>
 80053fc:	6a23      	ldr	r3, [r4, #32]
 80053fe:	f043 0308 	orr.w	r3, r3, #8
 8005402:	6223      	str	r3, [r4, #32]
 8005404:	6a23      	ldr	r3, [r4, #32]
 8005406:	f023 0308 	bic.w	r3, r3, #8
 800540a:	6223      	str	r3, [r4, #32]
 800540c:	bd10      	pop	{r4, pc}
 800540e:	bf00      	nop
 8005410:	e000ed00 	.word	0xe000ed00
 8005414:	40023800 	.word	0x40023800
 8005418:	24003010 	.word	0x24003010
 800541c:	200001e0 	.word	0x200001e0
 8005420:	0112a880 	.word	0x0112a880

08005424 <__NVIC_SetVector>:
 8005424:	b530      	push	{r4, r5, lr}
 8005426:	4c0c      	ldr	r4, [pc, #48]	; (8005458 <__NVIC_SetVector+0x34>)
 8005428:	68a2      	ldr	r2, [r4, #8]
 800542a:	68a4      	ldr	r4, [r4, #8]
 800542c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8005430:	4613      	mov	r3, r2
 8005432:	d10c      	bne.n	800544e <__NVIC_SetVector+0x2a>
 8005434:	1f13      	subs	r3, r2, #4
 8005436:	4c09      	ldr	r4, [pc, #36]	; (800545c <__NVIC_SetVector+0x38>)
 8005438:	4a09      	ldr	r2, [pc, #36]	; (8005460 <__NVIC_SetVector+0x3c>)
 800543a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800543e:	f842 5f04 	str.w	r5, [r2, #4]!
 8005442:	42a2      	cmp	r2, r4
 8005444:	d1f9      	bne.n	800543a <__NVIC_SetVector+0x16>
 8005446:	4a04      	ldr	r2, [pc, #16]	; (8005458 <__NVIC_SetVector+0x34>)
 8005448:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800544c:	6093      	str	r3, [r2, #8]
 800544e:	3010      	adds	r0, #16
 8005450:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8005454:	bd30      	pop	{r4, r5, pc}
 8005456:	bf00      	nop
 8005458:	e000ed00 	.word	0xe000ed00
 800545c:	200001c0 	.word	0x200001c0
 8005460:	1ffffffc 	.word	0x1ffffffc

08005464 <HAL_RCCEx_PeriphCLKConfig>:
 8005464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8005468:	6803      	ldr	r3, [r0, #0]
 800546a:	f013 0601 	ands.w	r6, r3, #1
 800546e:	b085      	sub	sp, #20
 8005470:	4604      	mov	r4, r0
 8005472:	d00b      	beq.n	800548c <HAL_RCCEx_PeriphCLKConfig+0x28>
 8005474:	49c8      	ldr	r1, [pc, #800]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8005476:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8005478:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 800547c:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8005480:	4332      	orrs	r2, r6
 8005482:	fab6 f686 	clz	r6, r6
 8005486:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 800548a:	0976      	lsrs	r6, r6, #5
 800548c:	0799      	lsls	r1, r3, #30
 800548e:	d50b      	bpl.n	80054a8 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8005490:	48c1      	ldr	r0, [pc, #772]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8005492:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8005494:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8005498:	f022 52c0 	bic.w	r2, r2, #402653184	; 0x18000000
 800549c:	430a      	orrs	r2, r1
 800549e:	2900      	cmp	r1, #0
 80054a0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 80054a4:	bf08      	it	eq
 80054a6:	2601      	moveq	r6, #1
 80054a8:	f013 0504 	ands.w	r5, r3, #4
 80054ac:	d012      	beq.n	80054d4 <HAL_RCCEx_PeriphCLKConfig+0x70>
 80054ae:	49ba      	ldr	r1, [pc, #744]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80054b0:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80054b2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80054b6:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 80054ba:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80054be:	ea42 0205 	orr.w	r2, r2, r5
 80054c2:	bf18      	it	ne
 80054c4:	fab5 f585 	clzne	r5, r5
 80054c8:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 80054cc:	bf12      	itee	ne
 80054ce:	096d      	lsrne	r5, r5, #5
 80054d0:	2500      	moveq	r5, #0
 80054d2:	2601      	moveq	r6, #1
 80054d4:	071a      	lsls	r2, r3, #28
 80054d6:	d50f      	bpl.n	80054f8 <HAL_RCCEx_PeriphCLKConfig+0x94>
 80054d8:	48af      	ldr	r0, [pc, #700]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80054da:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80054dc:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80054e0:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80054e4:	430a      	orrs	r2, r1
 80054e6:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
 80054ea:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 80054ee:	f000 81bf 	beq.w	8005870 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 80054f2:	2900      	cmp	r1, #0
 80054f4:	bf08      	it	eq
 80054f6:	2501      	moveq	r5, #1
 80054f8:	069f      	lsls	r7, r3, #26
 80054fa:	d533      	bpl.n	8005564 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80054fc:	2300      	movs	r3, #0
 80054fe:	9303      	str	r3, [sp, #12]
 8005500:	4ba5      	ldr	r3, [pc, #660]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8005502:	4fa6      	ldr	r7, [pc, #664]	; (800579c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005504:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005506:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800550a:	641a      	str	r2, [r3, #64]	; 0x40
 800550c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800550e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005512:	9303      	str	r3, [sp, #12]
 8005514:	9b03      	ldr	r3, [sp, #12]
 8005516:	683b      	ldr	r3, [r7, #0]
 8005518:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800551c:	603b      	str	r3, [r7, #0]
 800551e:	f001 fa2b 	bl	8006978 <HAL_GetTick>
 8005522:	4680      	mov	r8, r0
 8005524:	683b      	ldr	r3, [r7, #0]
 8005526:	05d8      	lsls	r0, r3, #23
 8005528:	f140 81a4 	bpl.w	8005874 <HAL_RCCEx_PeriphCLKConfig+0x410>
 800552c:	4f9a      	ldr	r7, [pc, #616]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800552e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005530:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005534:	f040 81a9 	bne.w	800588a <HAL_RCCEx_PeriphCLKConfig+0x426>
 8005538:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800553a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800553e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005542:	4a95      	ldr	r2, [pc, #596]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8005544:	f040 81c4 	bne.w	80058d0 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 8005548:	6891      	ldr	r1, [r2, #8]
 800554a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800554e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005552:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005556:	4301      	orrs	r1, r0
 8005558:	6091      	str	r1, [r2, #8]
 800555a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800555c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005560:	430b      	orrs	r3, r1
 8005562:	6713      	str	r3, [r2, #112]	; 0x70
 8005564:	6823      	ldr	r3, [r4, #0]
 8005566:	06db      	lsls	r3, r3, #27
 8005568:	bf42      	ittt	mi
 800556a:	4b8d      	ldrmi	r3, [pc, #564]	; (80057a0 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 800556c:	f894 2058 	ldrbmi.w	r2, [r4, #88]	; 0x58
 8005570:	601a      	strmi	r2, [r3, #0]
 8005572:	6823      	ldr	r3, [r4, #0]
 8005574:	061f      	lsls	r7, r3, #24
 8005576:	d508      	bpl.n	800558a <HAL_RCCEx_PeriphCLKConfig+0x126>
 8005578:	4987      	ldr	r1, [pc, #540]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800557a:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800557c:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8005580:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005584:	4302      	orrs	r2, r0
 8005586:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 800558a:	0658      	lsls	r0, r3, #25
 800558c:	d508      	bpl.n	80055a0 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 800558e:	4982      	ldr	r1, [pc, #520]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8005590:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005592:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8005596:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800559a:	4302      	orrs	r2, r0
 800559c:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80055a0:	05d9      	lsls	r1, r3, #23
 80055a2:	d50c      	bpl.n	80055be <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80055a4:	487c      	ldr	r0, [pc, #496]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80055a6:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80055a8:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 80055ac:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 80055b0:	430a      	orrs	r2, r1
 80055b2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 80055b6:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 80055ba:	bf08      	it	eq
 80055bc:	2501      	moveq	r5, #1
 80055be:	059a      	lsls	r2, r3, #22
 80055c0:	d508      	bpl.n	80055d4 <HAL_RCCEx_PeriphCLKConfig+0x170>
 80055c2:	4975      	ldr	r1, [pc, #468]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80055c4:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80055c6:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80055ca:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80055ce:	4302      	orrs	r2, r0
 80055d0:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80055d4:	055f      	lsls	r7, r3, #21
 80055d6:	f100 817f 	bmi.w	80058d8 <HAL_RCCEx_PeriphCLKConfig+0x474>
 80055da:	2e01      	cmp	r6, #1
 80055dc:	f040 818a 	bne.w	80058f4 <HAL_RCCEx_PeriphCLKConfig+0x490>
 80055e0:	4e70      	ldr	r6, [pc, #448]	; (80057a4 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 80055e2:	4f6d      	ldr	r7, [pc, #436]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80055e4:	2300      	movs	r3, #0
 80055e6:	6033      	str	r3, [r6, #0]
 80055e8:	f001 f9c6 	bl	8006978 <HAL_GetTick>
 80055ec:	9601      	str	r6, [sp, #4]
 80055ee:	4680      	mov	r8, r0
 80055f0:	683b      	ldr	r3, [r7, #0]
 80055f2:	0118      	lsls	r0, r3, #4
 80055f4:	f100 820b 	bmi.w	8005a0e <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 80055f8:	6820      	ldr	r0, [r4, #0]
 80055fa:	07c1      	lsls	r1, r0, #31
 80055fc:	d501      	bpl.n	8005602 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80055fe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005600:	b123      	cbz	r3, 800560c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8005602:	0782      	lsls	r2, r0, #30
 8005604:	d546      	bpl.n	8005694 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8005606:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005608:	2b00      	cmp	r3, #0
 800560a:	d143      	bne.n	8005694 <HAL_RCCEx_PeriphCLKConfig+0x230>
 800560c:	4f62      	ldr	r7, [pc, #392]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800560e:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8005612:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8005616:	fa91 fea1 	rbit	lr, r1
 800561a:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 800561e:	fabe fe8e 	clz	lr, lr
 8005622:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8005626:	fa9c f8ac 	rbit	r8, r12
 800562a:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 800562e:	fab8 f888 	clz	r8, r8
 8005632:	fa9b fbab 	rbit	r11, r11
 8005636:	fabb fb8b 	clz	r11, r11
 800563a:	fa91 f1a1 	rbit	r1, r1
 800563e:	fab1 f181 	clz	r1, r1
 8005642:	fa9c fcac 	rbit	r12, r12
 8005646:	f04f 4ae0 	mov.w	r10, #1879048192	; 0x70000000
 800564a:	fabc fc8c 	clz	r12, r12
 800564e:	fa9a faaa 	rbit	r10, r10
 8005652:	68a6      	ldr	r6, [r4, #8]
 8005654:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8005658:	fa06 f90b 	lsl.w	r9, r6, r11
 800565c:	6966      	ldr	r6, [r4, #20]
 800565e:	faba fa8a 	clz	r10, r10
 8005662:	fa22 f20e 	lsr.w	r2, r2, lr
 8005666:	fa06 fa0a 	lsl.w	r10, r6, r10
 800566a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800566e:	6866      	ldr	r6, [r4, #4]
 8005670:	3201      	adds	r2, #1
 8005672:	ea49 090a 	orr.w	r9, r9, r10
 8005676:	fa23 f308 	lsr.w	r3, r3, r8
 800567a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800567e:	ea49 0906 	orr.w	r9, r9, r6
 8005682:	fa03 f30c 	lsl.w	r3, r3, r12
 8005686:	3a01      	subs	r2, #1
 8005688:	ea49 0303 	orr.w	r3, r9, r3
 800568c:	408a      	lsls	r2, r1
 800568e:	4313      	orrs	r3, r2
 8005690:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005694:	0743      	lsls	r3, r0, #29
 8005696:	d503      	bpl.n	80056a0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8005698:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800569a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800569e:	d005      	beq.n	80056ac <HAL_RCCEx_PeriphCLKConfig+0x248>
 80056a0:	0707      	lsls	r7, r0, #28
 80056a2:	d550      	bpl.n	8005746 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80056a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80056a6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80056aa:	d14c      	bne.n	8005746 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80056ac:	4f3a      	ldr	r7, [pc, #232]	; (8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80056ae:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 80056b2:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80056b6:	fa91 fea1 	rbit	lr, r1
 80056ba:	f04f 4ce0 	mov.w	r12, #1879048192	; 0x70000000
 80056be:	fabe fe8e 	clz	lr, lr
 80056c2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80056c6:	fa9c f8ac 	rbit	r8, r12
 80056ca:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 80056ce:	fab8 f888 	clz	r8, r8
 80056d2:	fa9b fbab 	rbit	r11, r11
 80056d6:	fabb fb8b 	clz	r11, r11
 80056da:	fa91 f1a1 	rbit	r1, r1
 80056de:	f04f 6a70 	mov.w	r10, #251658240	; 0xf000000
 80056e2:	fab1 f181 	clz	r1, r1
 80056e6:	fa9a faaa 	rbit	r10, r10
 80056ea:	faba fa8a 	clz	r10, r10
 80056ee:	fa9c fcac 	rbit	r12, r12
 80056f2:	68a6      	ldr	r6, [r4, #8]
 80056f4:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80056f8:	fa06 f90b 	lsl.w	r9, r6, r11
 80056fc:	6926      	ldr	r6, [r4, #16]
 80056fe:	fa22 f20e 	lsr.w	r2, r2, lr
 8005702:	fa06 fa0a 	lsl.w	r10, r6, r10
 8005706:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 800570a:	6866      	ldr	r6, [r4, #4]
 800570c:	3201      	adds	r2, #1
 800570e:	fabc fc8c 	clz	r12, r12
 8005712:	ea49 090a 	orr.w	r9, r9, r10
 8005716:	fa23 f308 	lsr.w	r3, r3, r8
 800571a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800571e:	ea49 0906 	orr.w	r9, r9, r6
 8005722:	fa03 f30c 	lsl.w	r3, r3, r12
 8005726:	3a01      	subs	r2, #1
 8005728:	408a      	lsls	r2, r1
 800572a:	ea49 0303 	orr.w	r3, r9, r3
 800572e:	4313      	orrs	r3, r2
 8005730:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005734:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8005738:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800573a:	f022 021f 	bic.w	r2, r2, #31
 800573e:	3b01      	subs	r3, #1
 8005740:	4313      	orrs	r3, r2
 8005742:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005746:	0546      	lsls	r6, r0, #21
 8005748:	d553      	bpl.n	80057f2 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 800574a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800574c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005750:	d14f      	bne.n	80057f2 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8005752:	f8df c044 	ldr.w	r12, [pc, #68]	; 8005798 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8005756:	f44f 3b40 	mov.w	r11, #196608	; 0x30000
 800575a:	f8dc 2084 	ldr.w	r2, [r12, #132]	; 0x84
 800575e:	fa9b f8ab 	rbit	r8, r11
 8005762:	f04f 47e0 	mov.w	r7, #1879048192	; 0x70000000
 8005766:	fab8 f888 	clz	r8, r8
 800576a:	f8dc 1084 	ldr.w	r1, [r12, #132]	; 0x84
 800576e:	fa97 f9a7 	rbit	r9, r7
 8005772:	f647 7ac0 	movw	r10, #32704	; 0x7fc0
 8005776:	fab9 f989 	clz	r9, r9
 800577a:	fa9a faaa 	rbit	r10, r10
 800577e:	faba fa8a 	clz	r10, r10
 8005782:	fa9b fbab 	rbit	r11, r11
 8005786:	f04f 6e70 	mov.w	lr, #251658240	; 0xf000000
 800578a:	fabb fb8b 	clz	r11, r11
 800578e:	fa9e feae 	rbit	lr, lr
 8005792:	fabe fe8e 	clz	lr, lr
 8005796:	e007      	b.n	80057a8 <HAL_RCCEx_PeriphCLKConfig+0x344>
 8005798:	40023800 	.word	0x40023800
 800579c:	40007000 	.word	0x40007000
 80057a0:	424711e0 	.word	0x424711e0
 80057a4:	42470068 	.word	0x42470068
 80057a8:	fa97 f7a7 	rbit	r7, r7
 80057ac:	68e3      	ldr	r3, [r4, #12]
 80057ae:	68a6      	ldr	r6, [r4, #8]
 80057b0:	085b      	lsrs	r3, r3, #1
 80057b2:	3b01      	subs	r3, #1
 80057b4:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80057b8:	fa06 fa0a 	lsl.w	r10, r6, r10
 80057bc:	fa03 f30b 	lsl.w	r3, r3, r11
 80057c0:	6866      	ldr	r6, [r4, #4]
 80057c2:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80057c6:	fa22 f808 	lsr.w	r8, r2, r8
 80057ca:	fab7 f787 	clz	r7, r7
 80057ce:	ea43 030a 	orr.w	r3, r3, r10
 80057d2:	fa21 f909 	lsr.w	r9, r1, r9
 80057d6:	f108 0801 	add.w	r8, r8, #1
 80057da:	4333      	orrs	r3, r6
 80057dc:	fa09 f707 	lsl.w	r7, r9, r7
 80057e0:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80057e4:	431f      	orrs	r7, r3
 80057e6:	fa08 fe0e 	lsl.w	lr, r8, lr
 80057ea:	ea47 070e 	orr.w	r7, r7, lr
 80057ee:	f8cc 7084 	str.w	r7, [r12, #132]	; 0x84
 80057f2:	0501      	lsls	r1, r0, #20
 80057f4:	d52c      	bpl.n	8005850 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 80057f6:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 80057fa:	fa97 f7a7 	rbit	r7, r7
 80057fe:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8005802:	fab7 f787 	clz	r7, r7
 8005806:	fa93 f3a3 	rbit	r3, r3
 800580a:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 800580e:	fab3 f283 	clz	r2, r3
 8005812:	fa90 f0a0 	rbit	r0, r0
 8005816:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 800581a:	fab0 f080 	clz	r0, r0
 800581e:	fa91 f1a1 	rbit	r1, r1
 8005822:	68e3      	ldr	r3, [r4, #12]
 8005824:	085b      	lsrs	r3, r3, #1
 8005826:	3b01      	subs	r3, #1
 8005828:	4093      	lsls	r3, r2
 800582a:	68a2      	ldr	r2, [r4, #8]
 800582c:	fa02 f707 	lsl.w	r7, r2, r7
 8005830:	6862      	ldr	r2, [r4, #4]
 8005832:	433b      	orrs	r3, r7
 8005834:	4313      	orrs	r3, r2
 8005836:	6922      	ldr	r2, [r4, #16]
 8005838:	fa02 f000 	lsl.w	r0, r2, r0
 800583c:	6962      	ldr	r2, [r4, #20]
 800583e:	fab1 f181 	clz	r1, r1
 8005842:	fa02 f101 	lsl.w	r1, r2, r1
 8005846:	4303      	orrs	r3, r0
 8005848:	4a7b      	ldr	r2, [pc, #492]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 800584a:	430b      	orrs	r3, r1
 800584c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8005850:	9a01      	ldr	r2, [sp, #4]
 8005852:	4e79      	ldr	r6, [pc, #484]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8005854:	2301      	movs	r3, #1
 8005856:	6013      	str	r3, [r2, #0]
 8005858:	f001 f88e 	bl	8006978 <HAL_GetTick>
 800585c:	4607      	mov	r7, r0
 800585e:	6833      	ldr	r3, [r6, #0]
 8005860:	011a      	lsls	r2, r3, #4
 8005862:	d44b      	bmi.n	80058fc <HAL_RCCEx_PeriphCLKConfig+0x498>
 8005864:	f001 f888 	bl	8006978 <HAL_GetTick>
 8005868:	1bc0      	subs	r0, r0, r7
 800586a:	2802      	cmp	r0, #2
 800586c:	d9f7      	bls.n	800585e <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 800586e:	e008      	b.n	8005882 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005870:	2601      	movs	r6, #1
 8005872:	e641      	b.n	80054f8 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8005874:	f001 f880 	bl	8006978 <HAL_GetTick>
 8005878:	eba0 0008 	sub.w	r0, r0, r8
 800587c:	2802      	cmp	r0, #2
 800587e:	f67f ae51 	bls.w	8005524 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8005882:	2003      	movs	r0, #3
 8005884:	b005      	add	sp, #20
 8005886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800588a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800588c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005890:	4293      	cmp	r3, r2
 8005892:	f43f ae51 	beq.w	8005538 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005896:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005898:	4a68      	ldr	r2, [pc, #416]	; (8005a3c <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 800589a:	2101      	movs	r1, #1
 800589c:	6011      	str	r1, [r2, #0]
 800589e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80058a2:	2100      	movs	r1, #0
 80058a4:	6011      	str	r1, [r2, #0]
 80058a6:	673b      	str	r3, [r7, #112]	; 0x70
 80058a8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80058aa:	07d9      	lsls	r1, r3, #31
 80058ac:	f57f ae44 	bpl.w	8005538 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80058b0:	f001 f862 	bl	8006978 <HAL_GetTick>
 80058b4:	f241 3988 	movw	r9, #5000	; 0x1388
 80058b8:	4680      	mov	r8, r0
 80058ba:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80058bc:	079a      	lsls	r2, r3, #30
 80058be:	f53f ae3b 	bmi.w	8005538 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80058c2:	f001 f859 	bl	8006978 <HAL_GetTick>
 80058c6:	eba0 0008 	sub.w	r0, r0, r8
 80058ca:	4548      	cmp	r0, r9
 80058cc:	d9f5      	bls.n	80058ba <HAL_RCCEx_PeriphCLKConfig+0x456>
 80058ce:	e7d8      	b.n	8005882 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 80058d0:	6891      	ldr	r1, [r2, #8]
 80058d2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80058d6:	e63f      	b.n	8005558 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80058d8:	4857      	ldr	r0, [pc, #348]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 80058da:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80058dc:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 80058e0:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 80058e4:	430a      	orrs	r2, r1
 80058e6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 80058ea:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 80058ee:	f47f ae74 	bne.w	80055da <HAL_RCCEx_PeriphCLKConfig+0x176>
 80058f2:	e675      	b.n	80055e0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 80058f4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80058f8:	f43f ae72 	beq.w	80055e0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 80058fc:	2d01      	cmp	r5, #1
 80058fe:	f040 8084 	bne.w	8005a0a <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8005902:	4d4f      	ldr	r5, [pc, #316]	; (8005a40 <HAL_RCCEx_PeriphCLKConfig+0x5dc>)
 8005904:	4e4c      	ldr	r6, [pc, #304]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8005906:	2300      	movs	r3, #0
 8005908:	602b      	str	r3, [r5, #0]
 800590a:	f001 f835 	bl	8006978 <HAL_GetTick>
 800590e:	4607      	mov	r7, r0
 8005910:	6833      	ldr	r3, [r6, #0]
 8005912:	009b      	lsls	r3, r3, #2
 8005914:	f100 8083 	bmi.w	8005a1e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8005918:	6820      	ldr	r0, [r4, #0]
 800591a:	0746      	lsls	r6, r0, #29
 800591c:	d501      	bpl.n	8005922 <HAL_RCCEx_PeriphCLKConfig+0x4be>
 800591e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005920:	b11b      	cbz	r3, 800592a <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 8005922:	0701      	lsls	r1, r0, #28
 8005924:	d538      	bpl.n	8005998 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8005926:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005928:	bbb3      	cbnz	r3, 8005998 <HAL_RCCEx_PeriphCLKConfig+0x534>
 800592a:	4943      	ldr	r1, [pc, #268]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 800592c:	f44f 3640 	mov.w	r6, #196608	; 0x30000
 8005930:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8005934:	fa96 fea6 	rbit	lr, r6
 8005938:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800593c:	fabe fe8e 	clz	lr, lr
 8005940:	fa92 f2a2 	rbit	r2, r2
 8005944:	fab2 f782 	clz	r7, r2
 8005948:	fa96 f6a6 	rbit	r6, r6
 800594c:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8005950:	fab6 f686 	clz	r6, r6
 8005954:	fa9c fcac 	rbit	r12, r12
 8005958:	69e2      	ldr	r2, [r4, #28]
 800595a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800595e:	40ba      	lsls	r2, r7
 8005960:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8005962:	fabc fc8c 	clz	r12, r12
 8005966:	fa23 f30e 	lsr.w	r3, r3, lr
 800596a:	fa07 f70c 	lsl.w	r7, r7, r12
 800596e:	3301      	adds	r3, #1
 8005970:	433a      	orrs	r2, r7
 8005972:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005976:	69a7      	ldr	r7, [r4, #24]
 8005978:	3b01      	subs	r3, #1
 800597a:	433a      	orrs	r2, r7
 800597c:	40b3      	lsls	r3, r6
 800597e:	4313      	orrs	r3, r2
 8005980:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005984:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005988:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800598a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800598e:	3a01      	subs	r2, #1
 8005990:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005994:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005998:	05c2      	lsls	r2, r0, #23
 800599a:	d52d      	bpl.n	80059f8 <HAL_RCCEx_PeriphCLKConfig+0x594>
 800599c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800599e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80059a2:	d129      	bne.n	80059f8 <HAL_RCCEx_PeriphCLKConfig+0x594>
 80059a4:	4924      	ldr	r1, [pc, #144]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 80059a6:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 80059aa:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 80059ae:	fa90 f6a0 	rbit	r6, r0
 80059b2:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 80059b6:	fab6 f686 	clz	r6, r6
 80059ba:	fa9e feae 	rbit	lr, lr
 80059be:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 80059c2:	fabe fe8e 	clz	lr, lr
 80059c6:	fa93 f3a3 	rbit	r3, r3
 80059ca:	fab3 f783 	clz	r7, r3
 80059ce:	fa90 f0a0 	rbit	r0, r0
 80059d2:	6a23      	ldr	r3, [r4, #32]
 80059d4:	085b      	lsrs	r3, r3, #1
 80059d6:	3b01      	subs	r3, #1
 80059d8:	40bb      	lsls	r3, r7
 80059da:	69e7      	ldr	r7, [r4, #28]
 80059dc:	69a4      	ldr	r4, [r4, #24]
 80059de:	fa07 f70e 	lsl.w	r7, r7, lr
 80059e2:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 80059e6:	fab0 f080 	clz	r0, r0
 80059ea:	433b      	orrs	r3, r7
 80059ec:	40f2      	lsrs	r2, r6
 80059ee:	4323      	orrs	r3, r4
 80059f0:	4082      	lsls	r2, r0
 80059f2:	4313      	orrs	r3, r2
 80059f4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80059f8:	2301      	movs	r3, #1
 80059fa:	602b      	str	r3, [r5, #0]
 80059fc:	f000 ffbc 	bl	8006978 <HAL_GetTick>
 8005a00:	4c0d      	ldr	r4, [pc, #52]	; (8005a38 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8005a02:	4605      	mov	r5, r0
 8005a04:	6823      	ldr	r3, [r4, #0]
 8005a06:	009b      	lsls	r3, r3, #2
 8005a08:	d510      	bpl.n	8005a2c <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8005a0a:	2000      	movs	r0, #0
 8005a0c:	e73a      	b.n	8005884 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8005a0e:	f000 ffb3 	bl	8006978 <HAL_GetTick>
 8005a12:	eba0 0008 	sub.w	r0, r0, r8
 8005a16:	2802      	cmp	r0, #2
 8005a18:	f67f adea 	bls.w	80055f0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8005a1c:	e731      	b.n	8005882 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005a1e:	f000 ffab 	bl	8006978 <HAL_GetTick>
 8005a22:	1bc0      	subs	r0, r0, r7
 8005a24:	2802      	cmp	r0, #2
 8005a26:	f67f af73 	bls.w	8005910 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 8005a2a:	e72a      	b.n	8005882 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005a2c:	f000 ffa4 	bl	8006978 <HAL_GetTick>
 8005a30:	1b40      	subs	r0, r0, r5
 8005a32:	2802      	cmp	r0, #2
 8005a34:	d9e6      	bls.n	8005a04 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8005a36:	e724      	b.n	8005882 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005a38:	40023800 	.word	0x40023800
 8005a3c:	42470e40 	.word	0x42470e40
 8005a40:	42470070 	.word	0x42470070

08005a44 <HAL_RCC_OscConfig>:
 8005a44:	6803      	ldr	r3, [r0, #0]
 8005a46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a48:	07df      	lsls	r7, r3, #31
 8005a4a:	4604      	mov	r4, r0
 8005a4c:	d438      	bmi.n	8005ac0 <HAL_RCC_OscConfig+0x7c>
 8005a4e:	6823      	ldr	r3, [r4, #0]
 8005a50:	079e      	lsls	r6, r3, #30
 8005a52:	d47a      	bmi.n	8005b4a <HAL_RCC_OscConfig+0x106>
 8005a54:	6823      	ldr	r3, [r4, #0]
 8005a56:	071e      	lsls	r6, r3, #28
 8005a58:	f100 80cf 	bmi.w	8005bfa <HAL_RCC_OscConfig+0x1b6>
 8005a5c:	6823      	ldr	r3, [r4, #0]
 8005a5e:	075d      	lsls	r5, r3, #29
 8005a60:	d528      	bpl.n	8005ab4 <HAL_RCC_OscConfig+0x70>
 8005a62:	2300      	movs	r3, #0
 8005a64:	9301      	str	r3, [sp, #4]
 8005a66:	4baf      	ldr	r3, [pc, #700]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005a68:	4daf      	ldr	r5, [pc, #700]	; (8005d28 <HAL_RCC_OscConfig+0x2e4>)
 8005a6a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005a6c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005a70:	641a      	str	r2, [r3, #64]	; 0x40
 8005a72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a74:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a78:	9301      	str	r3, [sp, #4]
 8005a7a:	9b01      	ldr	r3, [sp, #4]
 8005a7c:	682b      	ldr	r3, [r5, #0]
 8005a7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005a82:	602b      	str	r3, [r5, #0]
 8005a84:	f000 ff78 	bl	8006978 <HAL_GetTick>
 8005a88:	4606      	mov	r6, r0
 8005a8a:	682b      	ldr	r3, [r5, #0]
 8005a8c:	05da      	lsls	r2, r3, #23
 8005a8e:	f140 80d6 	bpl.w	8005c3e <HAL_RCC_OscConfig+0x1fa>
 8005a92:	4ba6      	ldr	r3, [pc, #664]	; (8005d2c <HAL_RCC_OscConfig+0x2e8>)
 8005a94:	7a22      	ldrb	r2, [r4, #8]
 8005a96:	701a      	strb	r2, [r3, #0]
 8005a98:	68a3      	ldr	r3, [r4, #8]
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	f000 80dd 	beq.w	8005c5a <HAL_RCC_OscConfig+0x216>
 8005aa0:	f000 ff6a 	bl	8006978 <HAL_GetTick>
 8005aa4:	4d9f      	ldr	r5, [pc, #636]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005aa6:	4606      	mov	r6, r0
 8005aa8:	f241 3788 	movw	r7, #5000	; 0x1388
 8005aac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005aae:	079b      	lsls	r3, r3, #30
 8005ab0:	f140 80cc 	bpl.w	8005c4c <HAL_RCC_OscConfig+0x208>
 8005ab4:	69a2      	ldr	r2, [r4, #24]
 8005ab6:	2a00      	cmp	r2, #0
 8005ab8:	f040 80df 	bne.w	8005c7a <HAL_RCC_OscConfig+0x236>
 8005abc:	2000      	movs	r0, #0
 8005abe:	e01e      	b.n	8005afe <HAL_RCC_OscConfig+0xba>
 8005ac0:	4b98      	ldr	r3, [pc, #608]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005ac2:	689a      	ldr	r2, [r3, #8]
 8005ac4:	f002 020c 	and.w	r2, r2, #12
 8005ac8:	2a04      	cmp	r2, #4
 8005aca:	d010      	beq.n	8005aee <HAL_RCC_OscConfig+0xaa>
 8005acc:	689a      	ldr	r2, [r3, #8]
 8005ace:	f002 020c 	and.w	r2, r2, #12
 8005ad2:	2a08      	cmp	r2, #8
 8005ad4:	d102      	bne.n	8005adc <HAL_RCC_OscConfig+0x98>
 8005ad6:	685b      	ldr	r3, [r3, #4]
 8005ad8:	025d      	lsls	r5, r3, #9
 8005ada:	d408      	bmi.n	8005aee <HAL_RCC_OscConfig+0xaa>
 8005adc:	4a91      	ldr	r2, [pc, #580]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005ade:	6893      	ldr	r3, [r2, #8]
 8005ae0:	f003 030c 	and.w	r3, r3, #12
 8005ae4:	2b0c      	cmp	r3, #12
 8005ae6:	d10c      	bne.n	8005b02 <HAL_RCC_OscConfig+0xbe>
 8005ae8:	6853      	ldr	r3, [r2, #4]
 8005aea:	0258      	lsls	r0, r3, #9
 8005aec:	d509      	bpl.n	8005b02 <HAL_RCC_OscConfig+0xbe>
 8005aee:	4b8d      	ldr	r3, [pc, #564]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	0399      	lsls	r1, r3, #14
 8005af4:	d5ab      	bpl.n	8005a4e <HAL_RCC_OscConfig+0xa>
 8005af6:	6863      	ldr	r3, [r4, #4]
 8005af8:	2b00      	cmp	r3, #0
 8005afa:	d1a8      	bne.n	8005a4e <HAL_RCC_OscConfig+0xa>
 8005afc:	2001      	movs	r0, #1
 8005afe:	b003      	add	sp, #12
 8005b00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005b02:	4b8b      	ldr	r3, [pc, #556]	; (8005d30 <HAL_RCC_OscConfig+0x2ec>)
 8005b04:	7922      	ldrb	r2, [r4, #4]
 8005b06:	701a      	strb	r2, [r3, #0]
 8005b08:	6863      	ldr	r3, [r4, #4]
 8005b0a:	b17b      	cbz	r3, 8005b2c <HAL_RCC_OscConfig+0xe8>
 8005b0c:	f000 ff34 	bl	8006978 <HAL_GetTick>
 8005b10:	4d84      	ldr	r5, [pc, #528]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005b12:	4606      	mov	r6, r0
 8005b14:	f241 3788 	movw	r7, #5000	; 0x1388
 8005b18:	682b      	ldr	r3, [r5, #0]
 8005b1a:	039a      	lsls	r2, r3, #14
 8005b1c:	d497      	bmi.n	8005a4e <HAL_RCC_OscConfig+0xa>
 8005b1e:	f000 ff2b 	bl	8006978 <HAL_GetTick>
 8005b22:	1b80      	subs	r0, r0, r6
 8005b24:	42b8      	cmp	r0, r7
 8005b26:	d9f7      	bls.n	8005b18 <HAL_RCC_OscConfig+0xd4>
 8005b28:	2003      	movs	r0, #3
 8005b2a:	e7e8      	b.n	8005afe <HAL_RCC_OscConfig+0xba>
 8005b2c:	f000 ff24 	bl	8006978 <HAL_GetTick>
 8005b30:	4d7c      	ldr	r5, [pc, #496]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005b32:	4606      	mov	r6, r0
 8005b34:	f241 3788 	movw	r7, #5000	; 0x1388
 8005b38:	682b      	ldr	r3, [r5, #0]
 8005b3a:	039b      	lsls	r3, r3, #14
 8005b3c:	d587      	bpl.n	8005a4e <HAL_RCC_OscConfig+0xa>
 8005b3e:	f000 ff1b 	bl	8006978 <HAL_GetTick>
 8005b42:	1b80      	subs	r0, r0, r6
 8005b44:	42b8      	cmp	r0, r7
 8005b46:	d9f7      	bls.n	8005b38 <HAL_RCC_OscConfig+0xf4>
 8005b48:	e7ee      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005b4a:	4b76      	ldr	r3, [pc, #472]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005b4c:	689a      	ldr	r2, [r3, #8]
 8005b4e:	f012 0f0c 	tst.w	r2, #12
 8005b52:	d010      	beq.n	8005b76 <HAL_RCC_OscConfig+0x132>
 8005b54:	689a      	ldr	r2, [r3, #8]
 8005b56:	f002 020c 	and.w	r2, r2, #12
 8005b5a:	2a08      	cmp	r2, #8
 8005b5c:	d102      	bne.n	8005b64 <HAL_RCC_OscConfig+0x120>
 8005b5e:	685b      	ldr	r3, [r3, #4]
 8005b60:	0258      	lsls	r0, r3, #9
 8005b62:	d508      	bpl.n	8005b76 <HAL_RCC_OscConfig+0x132>
 8005b64:	4a6f      	ldr	r2, [pc, #444]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005b66:	6893      	ldr	r3, [r2, #8]
 8005b68:	f003 030c 	and.w	r3, r3, #12
 8005b6c:	2b0c      	cmp	r3, #12
 8005b6e:	d116      	bne.n	8005b9e <HAL_RCC_OscConfig+0x15a>
 8005b70:	6853      	ldr	r3, [r2, #4]
 8005b72:	0259      	lsls	r1, r3, #9
 8005b74:	d413      	bmi.n	8005b9e <HAL_RCC_OscConfig+0x15a>
 8005b76:	4b6b      	ldr	r3, [pc, #428]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005b78:	681a      	ldr	r2, [r3, #0]
 8005b7a:	0792      	lsls	r2, r2, #30
 8005b7c:	d502      	bpl.n	8005b84 <HAL_RCC_OscConfig+0x140>
 8005b7e:	68e2      	ldr	r2, [r4, #12]
 8005b80:	2a01      	cmp	r2, #1
 8005b82:	d1bb      	bne.n	8005afc <HAL_RCC_OscConfig+0xb8>
 8005b84:	6818      	ldr	r0, [r3, #0]
 8005b86:	22f8      	movs	r2, #248	; 0xf8
 8005b88:	fa92 f2a2 	rbit	r2, r2
 8005b8c:	fab2 f182 	clz	r1, r2
 8005b90:	6922      	ldr	r2, [r4, #16]
 8005b92:	408a      	lsls	r2, r1
 8005b94:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8005b98:	430a      	orrs	r2, r1
 8005b9a:	601a      	str	r2, [r3, #0]
 8005b9c:	e75a      	b.n	8005a54 <HAL_RCC_OscConfig+0x10>
 8005b9e:	68e2      	ldr	r2, [r4, #12]
 8005ba0:	4b64      	ldr	r3, [pc, #400]	; (8005d34 <HAL_RCC_OscConfig+0x2f0>)
 8005ba2:	b1da      	cbz	r2, 8005bdc <HAL_RCC_OscConfig+0x198>
 8005ba4:	2201      	movs	r2, #1
 8005ba6:	601a      	str	r2, [r3, #0]
 8005ba8:	f000 fee6 	bl	8006978 <HAL_GetTick>
 8005bac:	4d5d      	ldr	r5, [pc, #372]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005bae:	4606      	mov	r6, r0
 8005bb0:	682b      	ldr	r3, [r5, #0]
 8005bb2:	079b      	lsls	r3, r3, #30
 8005bb4:	d50c      	bpl.n	8005bd0 <HAL_RCC_OscConfig+0x18c>
 8005bb6:	6829      	ldr	r1, [r5, #0]
 8005bb8:	23f8      	movs	r3, #248	; 0xf8
 8005bba:	fa93 f3a3 	rbit	r3, r3
 8005bbe:	fab3 f283 	clz	r2, r3
 8005bc2:	6923      	ldr	r3, [r4, #16]
 8005bc4:	4093      	lsls	r3, r2
 8005bc6:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8005bca:	4313      	orrs	r3, r2
 8005bcc:	602b      	str	r3, [r5, #0]
 8005bce:	e741      	b.n	8005a54 <HAL_RCC_OscConfig+0x10>
 8005bd0:	f000 fed2 	bl	8006978 <HAL_GetTick>
 8005bd4:	1b80      	subs	r0, r0, r6
 8005bd6:	2802      	cmp	r0, #2
 8005bd8:	d9ea      	bls.n	8005bb0 <HAL_RCC_OscConfig+0x16c>
 8005bda:	e7a5      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005bdc:	601a      	str	r2, [r3, #0]
 8005bde:	f000 fecb 	bl	8006978 <HAL_GetTick>
 8005be2:	4d50      	ldr	r5, [pc, #320]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005be4:	4606      	mov	r6, r0
 8005be6:	682b      	ldr	r3, [r5, #0]
 8005be8:	079f      	lsls	r7, r3, #30
 8005bea:	f57f af33 	bpl.w	8005a54 <HAL_RCC_OscConfig+0x10>
 8005bee:	f000 fec3 	bl	8006978 <HAL_GetTick>
 8005bf2:	1b80      	subs	r0, r0, r6
 8005bf4:	2802      	cmp	r0, #2
 8005bf6:	d9f6      	bls.n	8005be6 <HAL_RCC_OscConfig+0x1a2>
 8005bf8:	e796      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005bfa:	6962      	ldr	r2, [r4, #20]
 8005bfc:	4b4e      	ldr	r3, [pc, #312]	; (8005d38 <HAL_RCC_OscConfig+0x2f4>)
 8005bfe:	b17a      	cbz	r2, 8005c20 <HAL_RCC_OscConfig+0x1dc>
 8005c00:	2201      	movs	r2, #1
 8005c02:	601a      	str	r2, [r3, #0]
 8005c04:	f000 feb8 	bl	8006978 <HAL_GetTick>
 8005c08:	4d46      	ldr	r5, [pc, #280]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005c0a:	4606      	mov	r6, r0
 8005c0c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005c0e:	0798      	lsls	r0, r3, #30
 8005c10:	f53f af24 	bmi.w	8005a5c <HAL_RCC_OscConfig+0x18>
 8005c14:	f000 feb0 	bl	8006978 <HAL_GetTick>
 8005c18:	1b80      	subs	r0, r0, r6
 8005c1a:	2802      	cmp	r0, #2
 8005c1c:	d9f6      	bls.n	8005c0c <HAL_RCC_OscConfig+0x1c8>
 8005c1e:	e783      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005c20:	601a      	str	r2, [r3, #0]
 8005c22:	f000 fea9 	bl	8006978 <HAL_GetTick>
 8005c26:	4d3f      	ldr	r5, [pc, #252]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005c28:	4606      	mov	r6, r0
 8005c2a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005c2c:	0799      	lsls	r1, r3, #30
 8005c2e:	f57f af15 	bpl.w	8005a5c <HAL_RCC_OscConfig+0x18>
 8005c32:	f000 fea1 	bl	8006978 <HAL_GetTick>
 8005c36:	1b80      	subs	r0, r0, r6
 8005c38:	2802      	cmp	r0, #2
 8005c3a:	d9f6      	bls.n	8005c2a <HAL_RCC_OscConfig+0x1e6>
 8005c3c:	e774      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005c3e:	f000 fe9b 	bl	8006978 <HAL_GetTick>
 8005c42:	1b80      	subs	r0, r0, r6
 8005c44:	2802      	cmp	r0, #2
 8005c46:	f67f af20 	bls.w	8005a8a <HAL_RCC_OscConfig+0x46>
 8005c4a:	e76d      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005c4c:	f000 fe94 	bl	8006978 <HAL_GetTick>
 8005c50:	1b80      	subs	r0, r0, r6
 8005c52:	42b8      	cmp	r0, r7
 8005c54:	f67f af2a 	bls.w	8005aac <HAL_RCC_OscConfig+0x68>
 8005c58:	e766      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005c5a:	f000 fe8d 	bl	8006978 <HAL_GetTick>
 8005c5e:	4d31      	ldr	r5, [pc, #196]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005c60:	4606      	mov	r6, r0
 8005c62:	f241 3788 	movw	r7, #5000	; 0x1388
 8005c66:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005c68:	0798      	lsls	r0, r3, #30
 8005c6a:	f57f af23 	bpl.w	8005ab4 <HAL_RCC_OscConfig+0x70>
 8005c6e:	f000 fe83 	bl	8006978 <HAL_GetTick>
 8005c72:	1b80      	subs	r0, r0, r6
 8005c74:	42b8      	cmp	r0, r7
 8005c76:	d9f6      	bls.n	8005c66 <HAL_RCC_OscConfig+0x222>
 8005c78:	e756      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005c7a:	4d2a      	ldr	r5, [pc, #168]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005c7c:	68ab      	ldr	r3, [r5, #8]
 8005c7e:	f003 030c 	and.w	r3, r3, #12
 8005c82:	2b08      	cmp	r3, #8
 8005c84:	f43f af3a 	beq.w	8005afc <HAL_RCC_OscConfig+0xb8>
 8005c88:	4e2c      	ldr	r6, [pc, #176]	; (8005d3c <HAL_RCC_OscConfig+0x2f8>)
 8005c8a:	2300      	movs	r3, #0
 8005c8c:	2a02      	cmp	r2, #2
 8005c8e:	6033      	str	r3, [r6, #0]
 8005c90:	d156      	bne.n	8005d40 <HAL_RCC_OscConfig+0x2fc>
 8005c92:	f000 fe71 	bl	8006978 <HAL_GetTick>
 8005c96:	4607      	mov	r7, r0
 8005c98:	682b      	ldr	r3, [r5, #0]
 8005c9a:	0199      	lsls	r1, r3, #6
 8005c9c:	d43c      	bmi.n	8005d18 <HAL_RCC_OscConfig+0x2d4>
 8005c9e:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8005ca2:	fa9e feae 	rbit	lr, lr
 8005ca6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005caa:	fabe fe8e 	clz	lr, lr
 8005cae:	fa92 f2a2 	rbit	r2, r2
 8005cb2:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8005cb6:	fab2 f782 	clz	r7, r2
 8005cba:	fa90 f0a0 	rbit	r0, r0
 8005cbe:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8005cc2:	fab0 f080 	clz	r0, r0
 8005cc6:	fa91 f1a1 	rbit	r1, r1
 8005cca:	6a22      	ldr	r2, [r4, #32]
 8005ccc:	69e3      	ldr	r3, [r4, #28]
 8005cce:	4313      	orrs	r3, r2
 8005cd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005cd2:	fa02 f20e 	lsl.w	r2, r2, lr
 8005cd6:	4313      	orrs	r3, r2
 8005cd8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005cda:	0852      	lsrs	r2, r2, #1
 8005cdc:	3a01      	subs	r2, #1
 8005cde:	40ba      	lsls	r2, r7
 8005ce0:	4313      	orrs	r3, r2
 8005ce2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005ce4:	fa02 f000 	lsl.w	r0, r2, r0
 8005ce8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005cea:	4c0e      	ldr	r4, [pc, #56]	; (8005d24 <HAL_RCC_OscConfig+0x2e0>)
 8005cec:	fab1 f181 	clz	r1, r1
 8005cf0:	4303      	orrs	r3, r0
 8005cf2:	fa02 f101 	lsl.w	r1, r2, r1
 8005cf6:	430b      	orrs	r3, r1
 8005cf8:	606b      	str	r3, [r5, #4]
 8005cfa:	2301      	movs	r3, #1
 8005cfc:	6033      	str	r3, [r6, #0]
 8005cfe:	f000 fe3b 	bl	8006978 <HAL_GetTick>
 8005d02:	4605      	mov	r5, r0
 8005d04:	6823      	ldr	r3, [r4, #0]
 8005d06:	019a      	lsls	r2, r3, #6
 8005d08:	f53f aed8 	bmi.w	8005abc <HAL_RCC_OscConfig+0x78>
 8005d0c:	f000 fe34 	bl	8006978 <HAL_GetTick>
 8005d10:	1b40      	subs	r0, r0, r5
 8005d12:	2802      	cmp	r0, #2
 8005d14:	d9f6      	bls.n	8005d04 <HAL_RCC_OscConfig+0x2c0>
 8005d16:	e707      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005d18:	f000 fe2e 	bl	8006978 <HAL_GetTick>
 8005d1c:	1bc0      	subs	r0, r0, r7
 8005d1e:	2802      	cmp	r0, #2
 8005d20:	d9ba      	bls.n	8005c98 <HAL_RCC_OscConfig+0x254>
 8005d22:	e701      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005d24:	40023800 	.word	0x40023800
 8005d28:	40007000 	.word	0x40007000
 8005d2c:	40023870 	.word	0x40023870
 8005d30:	40023802 	.word	0x40023802
 8005d34:	42470000 	.word	0x42470000
 8005d38:	42470e80 	.word	0x42470e80
 8005d3c:	42470060 	.word	0x42470060
 8005d40:	f000 fe1a 	bl	8006978 <HAL_GetTick>
 8005d44:	4604      	mov	r4, r0
 8005d46:	682b      	ldr	r3, [r5, #0]
 8005d48:	019b      	lsls	r3, r3, #6
 8005d4a:	f57f aeb7 	bpl.w	8005abc <HAL_RCC_OscConfig+0x78>
 8005d4e:	f000 fe13 	bl	8006978 <HAL_GetTick>
 8005d52:	1b00      	subs	r0, r0, r4
 8005d54:	2802      	cmp	r0, #2
 8005d56:	d9f6      	bls.n	8005d46 <HAL_RCC_OscConfig+0x302>
 8005d58:	e6e6      	b.n	8005b28 <HAL_RCC_OscConfig+0xe4>
 8005d5a:	bf00      	nop

08005d5c <HAL_RCC_GetSysClockFreq>:
 8005d5c:	4b2b      	ldr	r3, [pc, #172]	; (8005e0c <HAL_RCC_GetSysClockFreq+0xb0>)
 8005d5e:	689a      	ldr	r2, [r3, #8]
 8005d60:	f002 020c 	and.w	r2, r2, #12
 8005d64:	2a08      	cmp	r2, #8
 8005d66:	d007      	beq.n	8005d78 <HAL_RCC_GetSysClockFreq+0x1c>
 8005d68:	2a0c      	cmp	r2, #12
 8005d6a:	d02c      	beq.n	8005dc6 <HAL_RCC_GetSysClockFreq+0x6a>
 8005d6c:	4b28      	ldr	r3, [pc, #160]	; (8005e10 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005d6e:	4829      	ldr	r0, [pc, #164]	; (8005e14 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005d70:	2a04      	cmp	r2, #4
 8005d72:	bf18      	it	ne
 8005d74:	4618      	movne	r0, r3
 8005d76:	4770      	bx	lr
 8005d78:	685a      	ldr	r2, [r3, #4]
 8005d7a:	6859      	ldr	r1, [r3, #4]
 8005d7c:	685b      	ldr	r3, [r3, #4]
 8005d7e:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8005d82:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8005d86:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8005d8a:	fa91 f0a1 	rbit	r0, r1
 8005d8e:	fab0 f080 	clz	r0, r0
 8005d92:	ea03 0301 	and.w	r3, r3, r1
 8005d96:	fa23 f300 	lsr.w	r3, r3, r0
 8005d9a:	bf14      	ite	ne
 8005d9c:	481d      	ldrne	r0, [pc, #116]	; (8005e14 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005d9e:	481c      	ldreq	r0, [pc, #112]	; (8005e10 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005da0:	fbb0 f0f2 	udiv	r0, r0, r2
 8005da4:	4358      	muls	r0, r3
 8005da6:	4b19      	ldr	r3, [pc, #100]	; (8005e0c <HAL_RCC_GetSysClockFreq+0xb0>)
 8005da8:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005dac:	685b      	ldr	r3, [r3, #4]
 8005dae:	fa92 f2a2 	rbit	r2, r2
 8005db2:	fab2 f282 	clz	r2, r2
 8005db6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005dba:	40d3      	lsrs	r3, r2
 8005dbc:	3301      	adds	r3, #1
 8005dbe:	005b      	lsls	r3, r3, #1
 8005dc0:	fbb0 f0f3 	udiv	r0, r0, r3
 8005dc4:	4770      	bx	lr
 8005dc6:	685a      	ldr	r2, [r3, #4]
 8005dc8:	6859      	ldr	r1, [r3, #4]
 8005dca:	685b      	ldr	r3, [r3, #4]
 8005dcc:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8005dd0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8005dd4:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8005dd8:	fa91 f0a1 	rbit	r0, r1
 8005ddc:	fab0 f080 	clz	r0, r0
 8005de0:	ea03 0301 	and.w	r3, r3, r1
 8005de4:	fa23 f300 	lsr.w	r3, r3, r0
 8005de8:	bf14      	ite	ne
 8005dea:	480a      	ldrne	r0, [pc, #40]	; (8005e14 <HAL_RCC_GetSysClockFreq+0xb8>)
 8005dec:	4808      	ldreq	r0, [pc, #32]	; (8005e10 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005dee:	fbb0 f0f2 	udiv	r0, r0, r2
 8005df2:	4358      	muls	r0, r3
 8005df4:	4b05      	ldr	r3, [pc, #20]	; (8005e0c <HAL_RCC_GetSysClockFreq+0xb0>)
 8005df6:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 8005dfa:	685b      	ldr	r3, [r3, #4]
 8005dfc:	fa92 f2a2 	rbit	r2, r2
 8005e00:	fab2 f282 	clz	r2, r2
 8005e04:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8005e08:	40d3      	lsrs	r3, r2
 8005e0a:	e7d9      	b.n	8005dc0 <HAL_RCC_GetSysClockFreq+0x64>
 8005e0c:	40023800 	.word	0x40023800
 8005e10:	00f42400 	.word	0x00f42400
 8005e14:	007a1200 	.word	0x007a1200

08005e18 <HAL_GPIO_Init>:
 8005e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8005e1c:	b085      	sub	sp, #20
 8005e1e:	680b      	ldr	r3, [r1, #0]
 8005e20:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 8005fc4 <HAL_GPIO_Init+0x1ac>
 8005e24:	4a65      	ldr	r2, [pc, #404]	; (8005fbc <HAL_GPIO_Init+0x1a4>)
 8005e26:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 8005fc8 <HAL_GPIO_Init+0x1b0>
 8005e2a:	9301      	str	r3, [sp, #4]
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	f04f 0e01 	mov.w	lr, #1
 8005e32:	9c01      	ldr	r4, [sp, #4]
 8005e34:	fa0e fe03 	lsl.w	lr, lr, r3
 8005e38:	ea0e 0604 	and.w	r6, lr, r4
 8005e3c:	45b6      	cmp	lr, r6
 8005e3e:	f040 80aa 	bne.w	8005f96 <HAL_GPIO_Init+0x17e>
 8005e42:	684c      	ldr	r4, [r1, #4]
 8005e44:	f024 0710 	bic.w	r7, r4, #16
 8005e48:	2f02      	cmp	r7, #2
 8005e4a:	d116      	bne.n	8005e7a <HAL_GPIO_Init+0x62>
 8005e4c:	ea4f 0ad3 	mov.w	r10, r3, lsr #3
 8005e50:	eb00 0a8a 	add.w	r10, r0, r10, lsl #2
 8005e54:	f003 0b07 	and.w	r11, r3, #7
 8005e58:	f8da 5020 	ldr.w	r5, [r10, #32]
 8005e5c:	ea4f 0b8b 	mov.w	r11, r11, lsl #2
 8005e60:	f04f 0c0f 	mov.w	r12, #15
 8005e64:	fa0c fc0b 	lsl.w	r12, r12, r11
 8005e68:	ea25 0c0c 	bic.w	r12, r5, r12
 8005e6c:	690d      	ldr	r5, [r1, #16]
 8005e6e:	fa05 f50b 	lsl.w	r5, r5, r11
 8005e72:	ea45 050c 	orr.w	r5, r5, r12
 8005e76:	f8ca 5020 	str.w	r5, [r10, #32]
 8005e7a:	ea4f 0a43 	mov.w	r10, r3, lsl #1
 8005e7e:	2503      	movs	r5, #3
 8005e80:	f8d0 b000 	ldr.w	r11, [r0]
 8005e84:	fa05 f50a 	lsl.w	r5, r5, r10
 8005e88:	43ed      	mvns	r5, r5
 8005e8a:	f004 0c03 	and.w	r12, r4, #3
 8005e8e:	ea0b 0b05 	and.w	r11, r11, r5
 8005e92:	fa0c fc0a 	lsl.w	r12, r12, r10
 8005e96:	3f01      	subs	r7, #1
 8005e98:	ea4c 0c0b 	orr.w	r12, r12, r11
 8005e9c:	2f01      	cmp	r7, #1
 8005e9e:	f8c0 c000 	str.w	r12, [r0]
 8005ea2:	d811      	bhi.n	8005ec8 <HAL_GPIO_Init+0xb0>
 8005ea4:	6887      	ldr	r7, [r0, #8]
 8005ea6:	ea07 0b05 	and.w	r11, r7, r5
 8005eaa:	68cf      	ldr	r7, [r1, #12]
 8005eac:	fa07 fc0a 	lsl.w	r12, r7, r10
 8005eb0:	ea4c 070b 	orr.w	r7, r12, r11
 8005eb4:	6087      	str	r7, [r0, #8]
 8005eb6:	6847      	ldr	r7, [r0, #4]
 8005eb8:	ea27 0e0e 	bic.w	lr, r7, lr
 8005ebc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8005ec0:	409f      	lsls	r7, r3
 8005ec2:	ea47 070e 	orr.w	r7, r7, lr
 8005ec6:	6047      	str	r7, [r0, #4]
 8005ec8:	68c7      	ldr	r7, [r0, #12]
 8005eca:	403d      	ands	r5, r7
 8005ecc:	688f      	ldr	r7, [r1, #8]
 8005ece:	fa07 f70a 	lsl.w	r7, r7, r10
 8005ed2:	433d      	orrs	r5, r7
 8005ed4:	60c5      	str	r5, [r0, #12]
 8005ed6:	00e5      	lsls	r5, r4, #3
 8005ed8:	d55d      	bpl.n	8005f96 <HAL_GPIO_Init+0x17e>
 8005eda:	f04f 0b00 	mov.w	r11, #0
 8005ede:	f8cd b00c 	str.w	r11, [sp, #12]
 8005ee2:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005ee6:	4d36      	ldr	r5, [pc, #216]	; (8005fc0 <HAL_GPIO_Init+0x1a8>)
 8005ee8:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005eec:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005ef0:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005ef4:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005ef8:	9703      	str	r7, [sp, #12]
 8005efa:	9f03      	ldr	r7, [sp, #12]
 8005efc:	f023 0703 	bic.w	r7, r3, #3
 8005f00:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005f04:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8005f08:	f003 0c03 	and.w	r12, r3, #3
 8005f0c:	f8d7 a008 	ldr.w	r10, [r7, #8]
 8005f10:	ea4f 0c8c 	mov.w	r12, r12, lsl #2
 8005f14:	f04f 0e0f 	mov.w	lr, #15
 8005f18:	fa0e fe0c 	lsl.w	lr, lr, r12
 8005f1c:	42a8      	cmp	r0, r5
 8005f1e:	ea2a 0e0e 	bic.w	lr, r10, lr
 8005f22:	d03f      	beq.n	8005fa4 <HAL_GPIO_Init+0x18c>
 8005f24:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005f28:	42a8      	cmp	r0, r5
 8005f2a:	d03d      	beq.n	8005fa8 <HAL_GPIO_Init+0x190>
 8005f2c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005f30:	42a8      	cmp	r0, r5
 8005f32:	d03b      	beq.n	8005fac <HAL_GPIO_Init+0x194>
 8005f34:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005f38:	42a8      	cmp	r0, r5
 8005f3a:	d039      	beq.n	8005fb0 <HAL_GPIO_Init+0x198>
 8005f3c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005f40:	42a8      	cmp	r0, r5
 8005f42:	d037      	beq.n	8005fb4 <HAL_GPIO_Init+0x19c>
 8005f44:	4548      	cmp	r0, r9
 8005f46:	d037      	beq.n	8005fb8 <HAL_GPIO_Init+0x1a0>
 8005f48:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8005f4c:	42a8      	cmp	r0, r5
 8005f4e:	bf14      	ite	ne
 8005f50:	2508      	movne	r5, #8
 8005f52:	2506      	moveq	r5, #6
 8005f54:	fa05 f50c 	lsl.w	r5, r5, r12
 8005f58:	ea45 050e 	orr.w	r5, r5, lr
 8005f5c:	60bd      	str	r5, [r7, #8]
 8005f5e:	6815      	ldr	r5, [r2, #0]
 8005f60:	43f7      	mvns	r7, r6
 8005f62:	f414 3f80 	tst.w	r4, #65536	; 0x10000
 8005f66:	bf0c      	ite	eq
 8005f68:	403d      	andeq	r5, r7
 8005f6a:	4335      	orrne	r5, r6
 8005f6c:	6015      	str	r5, [r2, #0]
 8005f6e:	6855      	ldr	r5, [r2, #4]
 8005f70:	f414 3f00 	tst.w	r4, #131072	; 0x20000
 8005f74:	bf0c      	ite	eq
 8005f76:	403d      	andeq	r5, r7
 8005f78:	4335      	orrne	r5, r6
 8005f7a:	6055      	str	r5, [r2, #4]
 8005f7c:	6895      	ldr	r5, [r2, #8]
 8005f7e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
 8005f82:	bf0c      	ite	eq
 8005f84:	403d      	andeq	r5, r7
 8005f86:	4335      	orrne	r5, r6
 8005f88:	6095      	str	r5, [r2, #8]
 8005f8a:	68d5      	ldr	r5, [r2, #12]
 8005f8c:	02a4      	lsls	r4, r4, #10
 8005f8e:	bf54      	ite	pl
 8005f90:	403d      	andpl	r5, r7
 8005f92:	4335      	orrmi	r5, r6
 8005f94:	60d5      	str	r5, [r2, #12]
 8005f96:	3301      	adds	r3, #1
 8005f98:	2b10      	cmp	r3, #16
 8005f9a:	f47f af48 	bne.w	8005e2e <HAL_GPIO_Init+0x16>
 8005f9e:	b005      	add	sp, #20
 8005fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8005fa4:	465d      	mov	r5, r11
 8005fa6:	e7d5      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fa8:	2501      	movs	r5, #1
 8005faa:	e7d3      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fac:	2502      	movs	r5, #2
 8005fae:	e7d1      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fb0:	2503      	movs	r5, #3
 8005fb2:	e7cf      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fb4:	2504      	movs	r5, #4
 8005fb6:	e7cd      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fb8:	2505      	movs	r5, #5
 8005fba:	e7cb      	b.n	8005f54 <HAL_GPIO_Init+0x13c>
 8005fbc:	40013c00 	.word	0x40013c00
 8005fc0:	40020000 	.word	0x40020000
 8005fc4:	40023800 	.word	0x40023800
 8005fc8:	40021400 	.word	0x40021400

08005fcc <HAL_CAN_ConfigFilter>:
 8005fcc:	694a      	ldr	r2, [r1, #20]
 8005fce:	2301      	movs	r3, #1
 8005fd0:	b530      	push	{r4, r5, lr}
 8005fd2:	fa03 f502 	lsl.w	r5, r3, r2
 8005fd6:	4b3c      	ldr	r3, [pc, #240]	; (80060c8 <HAL_CAN_ConfigFilter+0xfc>)
 8005fd8:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8005fdc:	f040 0001 	orr.w	r0, r0, #1
 8005fe0:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8005fe4:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8005fe8:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8005fec:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8005ff0:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8005ff4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8005ff6:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
 8005ffa:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8005ffe:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
 8006002:	43ec      	mvns	r4, r5
 8006004:	4020      	ands	r0, r4
 8006006:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
 800600a:	69c8      	ldr	r0, [r1, #28]
 800600c:	2800      	cmp	r0, #0
 800600e:	d136      	bne.n	800607e <HAL_CAN_ConfigFilter+0xb2>
 8006010:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8006014:	4020      	ands	r0, r4
 8006016:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
 800601a:	00d2      	lsls	r2, r2, #3
 800601c:	68c8      	ldr	r0, [r1, #12]
 800601e:	888b      	ldrh	r3, [r1, #4]
 8006020:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8006024:	f502 42c8 	add.w	r2, r2, #25600	; 0x6400
 8006028:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800602c:	f8c2 3240 	str.w	r3, [r2, #576]	; 0x240
 8006030:	6888      	ldr	r0, [r1, #8]
 8006032:	880b      	ldrh	r3, [r1, #0]
 8006034:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006038:	f8c2 3244 	str.w	r3, [r2, #580]	; 0x244
 800603c:	698b      	ldr	r3, [r1, #24]
 800603e:	4822      	ldr	r0, [pc, #136]	; (80060c8 <HAL_CAN_ConfigFilter+0xfc>)
 8006040:	2b00      	cmp	r3, #0
 8006042:	d135      	bne.n	80060b0 <HAL_CAN_ConfigFilter+0xe4>
 8006044:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 8006048:	4023      	ands	r3, r4
 800604a:	f8c0 3204 	str.w	r3, [r0, #516]	; 0x204
 800604e:	690b      	ldr	r3, [r1, #16]
 8006050:	4a1d      	ldr	r2, [pc, #116]	; (80060c8 <HAL_CAN_ConfigFilter+0xfc>)
 8006052:	bb8b      	cbnz	r3, 80060b8 <HAL_CAN_ConfigFilter+0xec>
 8006054:	f8d0 3214 	ldr.w	r3, [r0, #532]	; 0x214
 8006058:	401c      	ands	r4, r3
 800605a:	f8c0 4214 	str.w	r4, [r0, #532]	; 0x214
 800605e:	6a0b      	ldr	r3, [r1, #32]
 8006060:	2b01      	cmp	r3, #1
 8006062:	bf02      	ittt	eq
 8006064:	f8d2 321c 	ldreq.w	r3, [r2, #540]	; 0x21c
 8006068:	432b      	orreq	r3, r5
 800606a:	f8c2 321c 	streq.w	r3, [r2, #540]	; 0x21c
 800606e:	f8d2 3200 	ldr.w	r3, [r2, #512]	; 0x200
 8006072:	f023 0301 	bic.w	r3, r3, #1
 8006076:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
 800607a:	2000      	movs	r0, #0
 800607c:	bd30      	pop	{r4, r5, pc}
 800607e:	2801      	cmp	r0, #1
 8006080:	d1dc      	bne.n	800603c <HAL_CAN_ConfigFilter+0x70>
 8006082:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8006086:	4328      	orrs	r0, r5
 8006088:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
 800608c:	680b      	ldr	r3, [r1, #0]
 800608e:	8888      	ldrh	r0, [r1, #4]
 8006090:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8006094:	00d3      	lsls	r3, r2, #3
 8006096:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800609a:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400
 800609e:	898a      	ldrh	r2, [r1, #12]
 80060a0:	f8c3 0240 	str.w	r0, [r3, #576]	; 0x240
 80060a4:	6888      	ldr	r0, [r1, #8]
 80060a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80060aa:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 80060ae:	e7c5      	b.n	800603c <HAL_CAN_ConfigFilter+0x70>
 80060b0:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 80060b4:	432b      	orrs	r3, r5
 80060b6:	e7c8      	b.n	800604a <HAL_CAN_ConfigFilter+0x7e>
 80060b8:	2b01      	cmp	r3, #1
 80060ba:	bf02      	ittt	eq
 80060bc:	f8d2 3214 	ldreq.w	r3, [r2, #532]	; 0x214
 80060c0:	432b      	orreq	r3, r5
 80060c2:	f8c2 3214 	streq.w	r3, [r2, #532]	; 0x214
 80060c6:	e7ca      	b.n	800605e <HAL_CAN_ConfigFilter+0x92>
 80060c8:	40006400 	.word	0x40006400

080060cc <HAL_CAN_MspInit>:
 80060cc:	4770      	bx	lr

080060ce <HAL_CAN_Init>:
 80060ce:	b570      	push	{r4, r5, r6, lr}
 80060d0:	4604      	mov	r4, r0
 80060d2:	2800      	cmp	r0, #0
 80060d4:	f000 808f 	beq.w	80061f6 <HAL_CAN_Init+0x128>
 80060d8:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80060dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80060e0:	b91b      	cbnz	r3, 80060ea <HAL_CAN_Init+0x1c>
 80060e2:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 80060e6:	f7ff fff1 	bl	80060cc <HAL_CAN_MspInit>
 80060ea:	2302      	movs	r3, #2
 80060ec:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80060f0:	6823      	ldr	r3, [r4, #0]
 80060f2:	681a      	ldr	r2, [r3, #0]
 80060f4:	f022 0202 	bic.w	r2, r2, #2
 80060f8:	601a      	str	r2, [r3, #0]
 80060fa:	681a      	ldr	r2, [r3, #0]
 80060fc:	f042 0201 	orr.w	r2, r2, #1
 8006100:	601a      	str	r2, [r3, #0]
 8006102:	f000 fc39 	bl	8006978 <HAL_GetTick>
 8006106:	4606      	mov	r6, r0
 8006108:	6823      	ldr	r3, [r4, #0]
 800610a:	685d      	ldr	r5, [r3, #4]
 800610c:	f015 0501 	ands.w	r5, r5, #1
 8006110:	d057      	beq.n	80061c2 <HAL_CAN_Init+0xf4>
 8006112:	685a      	ldr	r2, [r3, #4]
 8006114:	07d1      	lsls	r1, r2, #31
 8006116:	d56b      	bpl.n	80061f0 <HAL_CAN_Init+0x122>
 8006118:	69a2      	ldr	r2, [r4, #24]
 800611a:	2a01      	cmp	r2, #1
 800611c:	681a      	ldr	r2, [r3, #0]
 800611e:	bf0c      	ite	eq
 8006120:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 8006124:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8006128:	601a      	str	r2, [r3, #0]
 800612a:	69e2      	ldr	r2, [r4, #28]
 800612c:	2a01      	cmp	r2, #1
 800612e:	681a      	ldr	r2, [r3, #0]
 8006130:	bf0c      	ite	eq
 8006132:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 8006136:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 800613a:	601a      	str	r2, [r3, #0]
 800613c:	6a22      	ldr	r2, [r4, #32]
 800613e:	2a01      	cmp	r2, #1
 8006140:	681a      	ldr	r2, [r3, #0]
 8006142:	bf0c      	ite	eq
 8006144:	f042 0220 	orreq.w	r2, r2, #32
 8006148:	f022 0220 	bicne.w	r2, r2, #32
 800614c:	601a      	str	r2, [r3, #0]
 800614e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006150:	2a01      	cmp	r2, #1
 8006152:	681a      	ldr	r2, [r3, #0]
 8006154:	bf0c      	ite	eq
 8006156:	f042 0210 	orreq.w	r2, r2, #16
 800615a:	f022 0210 	bicne.w	r2, r2, #16
 800615e:	601a      	str	r2, [r3, #0]
 8006160:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006162:	2a01      	cmp	r2, #1
 8006164:	681a      	ldr	r2, [r3, #0]
 8006166:	bf0c      	ite	eq
 8006168:	f042 0208 	orreq.w	r2, r2, #8
 800616c:	f022 0208 	bicne.w	r2, r2, #8
 8006170:	601a      	str	r2, [r3, #0]
 8006172:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006174:	2a01      	cmp	r2, #1
 8006176:	681a      	ldr	r2, [r3, #0]
 8006178:	bf0c      	ite	eq
 800617a:	f042 0204 	orreq.w	r2, r2, #4
 800617e:	f022 0204 	bicne.w	r2, r2, #4
 8006182:	601a      	str	r2, [r3, #0]
 8006184:	68e1      	ldr	r1, [r4, #12]
 8006186:	68a2      	ldr	r2, [r4, #8]
 8006188:	430a      	orrs	r2, r1
 800618a:	6921      	ldr	r1, [r4, #16]
 800618c:	430a      	orrs	r2, r1
 800618e:	6961      	ldr	r1, [r4, #20]
 8006190:	430a      	orrs	r2, r1
 8006192:	6861      	ldr	r1, [r4, #4]
 8006194:	3901      	subs	r1, #1
 8006196:	430a      	orrs	r2, r1
 8006198:	61da      	str	r2, [r3, #28]
 800619a:	681a      	ldr	r2, [r3, #0]
 800619c:	f022 0201 	bic.w	r2, r2, #1
 80061a0:	601a      	str	r2, [r3, #0]
 80061a2:	f000 fbe9 	bl	8006978 <HAL_GetTick>
 80061a6:	4605      	mov	r5, r0
 80061a8:	6823      	ldr	r3, [r4, #0]
 80061aa:	685a      	ldr	r2, [r3, #4]
 80061ac:	07d2      	lsls	r2, r2, #31
 80061ae:	d413      	bmi.n	80061d8 <HAL_CAN_Init+0x10a>
 80061b0:	6858      	ldr	r0, [r3, #4]
 80061b2:	f010 0001 	ands.w	r0, r0, #1
 80061b6:	d11b      	bne.n	80061f0 <HAL_CAN_Init+0x122>
 80061b8:	2301      	movs	r3, #1
 80061ba:	63e0      	str	r0, [r4, #60]	; 0x3c
 80061bc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80061c0:	bd70      	pop	{r4, r5, r6, pc}
 80061c2:	f000 fbd9 	bl	8006978 <HAL_GetTick>
 80061c6:	1b80      	subs	r0, r0, r6
 80061c8:	280a      	cmp	r0, #10
 80061ca:	d99d      	bls.n	8006108 <HAL_CAN_Init+0x3a>
 80061cc:	2003      	movs	r0, #3
 80061ce:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 80061d2:	f884 5039 	strb.w	r5, [r4, #57]	; 0x39
 80061d6:	bd70      	pop	{r4, r5, r6, pc}
 80061d8:	f000 fbce 	bl	8006978 <HAL_GetTick>
 80061dc:	1b40      	subs	r0, r0, r5
 80061de:	280a      	cmp	r0, #10
 80061e0:	d9e2      	bls.n	80061a8 <HAL_CAN_Init+0xda>
 80061e2:	2003      	movs	r0, #3
 80061e4:	2300      	movs	r3, #0
 80061e6:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 80061ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80061ee:	bd70      	pop	{r4, r5, r6, pc}
 80061f0:	2304      	movs	r3, #4
 80061f2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80061f6:	2001      	movs	r0, #1
 80061f8:	bd70      	pop	{r4, r5, r6, pc}
	...

080061fc <UART_SetConfig>:
 80061fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006200:	6806      	ldr	r6, [r0, #0]
 8006202:	68c2      	ldr	r2, [r0, #12]
 8006204:	6933      	ldr	r3, [r6, #16]
 8006206:	69c1      	ldr	r1, [r0, #28]
 8006208:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800620c:	4313      	orrs	r3, r2
 800620e:	6133      	str	r3, [r6, #16]
 8006210:	4604      	mov	r4, r0
 8006212:	6883      	ldr	r3, [r0, #8]
 8006214:	6900      	ldr	r0, [r0, #16]
 8006216:	68f2      	ldr	r2, [r6, #12]
 8006218:	4303      	orrs	r3, r0
 800621a:	6960      	ldr	r0, [r4, #20]
 800621c:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8006220:	4303      	orrs	r3, r0
 8006222:	f022 020c 	bic.w	r2, r2, #12
 8006226:	430b      	orrs	r3, r1
 8006228:	4313      	orrs	r3, r2
 800622a:	60f3      	str	r3, [r6, #12]
 800622c:	6973      	ldr	r3, [r6, #20]
 800622e:	69a2      	ldr	r2, [r4, #24]
 8006230:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006234:	4313      	orrs	r3, r2
 8006236:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 800623a:	6173      	str	r3, [r6, #20]
 800623c:	4b7a      	ldr	r3, [pc, #488]	; (8006428 <UART_SetConfig+0x22c>)
 800623e:	d17c      	bne.n	800633a <UART_SetConfig+0x13e>
 8006240:	429e      	cmp	r6, r3
 8006242:	d003      	beq.n	800624c <UART_SetConfig+0x50>
 8006244:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006248:	429e      	cmp	r6, r3
 800624a:	d144      	bne.n	80062d6 <UART_SetConfig+0xda>
 800624c:	f000 faf0 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 8006250:	2519      	movs	r5, #25
 8006252:	fb05 f300 	mul.w	r3, r5, r0
 8006256:	6860      	ldr	r0, [r4, #4]
 8006258:	f04f 0964 	mov.w	r9, #100	; 0x64
 800625c:	0040      	lsls	r0, r0, #1
 800625e:	fbb3 f3f0 	udiv	r3, r3, r0
 8006262:	fbb3 f3f9 	udiv	r3, r3, r9
 8006266:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800626a:	f000 fae1 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 800626e:	6863      	ldr	r3, [r4, #4]
 8006270:	4368      	muls	r0, r5
 8006272:	005b      	lsls	r3, r3, #1
 8006274:	fbb0 f7f3 	udiv	r7, r0, r3
 8006278:	f000 fada 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 800627c:	6863      	ldr	r3, [r4, #4]
 800627e:	4368      	muls	r0, r5
 8006280:	005b      	lsls	r3, r3, #1
 8006282:	fbb0 f3f3 	udiv	r3, r0, r3
 8006286:	fbb3 f3f9 	udiv	r3, r3, r9
 800628a:	fb09 7313 	mls	r3, r9, r3, r7
 800628e:	00db      	lsls	r3, r3, #3
 8006290:	3332      	adds	r3, #50	; 0x32
 8006292:	fbb3 f3f9 	udiv	r3, r3, r9
 8006296:	005b      	lsls	r3, r3, #1
 8006298:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800629c:	f000 fac8 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 80062a0:	6862      	ldr	r2, [r4, #4]
 80062a2:	4368      	muls	r0, r5
 80062a4:	0052      	lsls	r2, r2, #1
 80062a6:	fbb0 faf2 	udiv	r10, r0, r2
 80062aa:	f000 fac1 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 80062ae:	6863      	ldr	r3, [r4, #4]
 80062b0:	4368      	muls	r0, r5
 80062b2:	005b      	lsls	r3, r3, #1
 80062b4:	fbb0 f3f3 	udiv	r3, r0, r3
 80062b8:	fbb3 f3f9 	udiv	r3, r3, r9
 80062bc:	fb09 a313 	mls	r3, r9, r3, r10
 80062c0:	00db      	lsls	r3, r3, #3
 80062c2:	3332      	adds	r3, #50	; 0x32
 80062c4:	fbb3 f3f9 	udiv	r3, r3, r9
 80062c8:	f003 0307 	and.w	r3, r3, #7
 80062cc:	4443      	add	r3, r8
 80062ce:	443b      	add	r3, r7
 80062d0:	60b3      	str	r3, [r6, #8]
 80062d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80062d6:	f000 fa93 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80062da:	2519      	movs	r5, #25
 80062dc:	fb05 f300 	mul.w	r3, r5, r0
 80062e0:	6860      	ldr	r0, [r4, #4]
 80062e2:	f04f 0964 	mov.w	r9, #100	; 0x64
 80062e6:	0040      	lsls	r0, r0, #1
 80062e8:	fbb3 f3f0 	udiv	r3, r3, r0
 80062ec:	fbb3 f3f9 	udiv	r3, r3, r9
 80062f0:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80062f4:	f000 fa84 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80062f8:	6863      	ldr	r3, [r4, #4]
 80062fa:	4368      	muls	r0, r5
 80062fc:	005b      	lsls	r3, r3, #1
 80062fe:	fbb0 f7f3 	udiv	r7, r0, r3
 8006302:	f000 fa7d 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 8006306:	6863      	ldr	r3, [r4, #4]
 8006308:	4368      	muls	r0, r5
 800630a:	005b      	lsls	r3, r3, #1
 800630c:	fbb0 f3f3 	udiv	r3, r0, r3
 8006310:	fbb3 f3f9 	udiv	r3, r3, r9
 8006314:	fb09 7313 	mls	r3, r9, r3, r7
 8006318:	00db      	lsls	r3, r3, #3
 800631a:	3332      	adds	r3, #50	; 0x32
 800631c:	fbb3 f3f9 	udiv	r3, r3, r9
 8006320:	005b      	lsls	r3, r3, #1
 8006322:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8006326:	f000 fa6b 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 800632a:	6862      	ldr	r2, [r4, #4]
 800632c:	4368      	muls	r0, r5
 800632e:	0052      	lsls	r2, r2, #1
 8006330:	fbb0 faf2 	udiv	r10, r0, r2
 8006334:	f000 fa64 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 8006338:	e7b9      	b.n	80062ae <UART_SetConfig+0xb2>
 800633a:	429e      	cmp	r6, r3
 800633c:	d002      	beq.n	8006344 <UART_SetConfig+0x148>
 800633e:	4b3b      	ldr	r3, [pc, #236]	; (800642c <UART_SetConfig+0x230>)
 8006340:	429e      	cmp	r6, r3
 8006342:	d140      	bne.n	80063c6 <UART_SetConfig+0x1ca>
 8006344:	f000 fa74 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 8006348:	6867      	ldr	r7, [r4, #4]
 800634a:	2519      	movs	r5, #25
 800634c:	f04f 0964 	mov.w	r9, #100	; 0x64
 8006350:	fb05 f300 	mul.w	r3, r5, r0
 8006354:	00bf      	lsls	r7, r7, #2
 8006356:	fbb3 f3f7 	udiv	r3, r3, r7
 800635a:	fbb3 f3f9 	udiv	r3, r3, r9
 800635e:	011f      	lsls	r7, r3, #4
 8006360:	f000 fa66 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 8006364:	6863      	ldr	r3, [r4, #4]
 8006366:	4368      	muls	r0, r5
 8006368:	009b      	lsls	r3, r3, #2
 800636a:	fbb0 f8f3 	udiv	r8, r0, r3
 800636e:	f000 fa5f 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 8006372:	6863      	ldr	r3, [r4, #4]
 8006374:	4368      	muls	r0, r5
 8006376:	009b      	lsls	r3, r3, #2
 8006378:	fbb0 f3f3 	udiv	r3, r0, r3
 800637c:	fbb3 f3f9 	udiv	r3, r3, r9
 8006380:	fb09 8313 	mls	r3, r9, r3, r8
 8006384:	011b      	lsls	r3, r3, #4
 8006386:	3332      	adds	r3, #50	; 0x32
 8006388:	fbb3 f3f9 	udiv	r3, r3, r9
 800638c:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8006390:	f000 fa4e 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 8006394:	6862      	ldr	r2, [r4, #4]
 8006396:	4368      	muls	r0, r5
 8006398:	0092      	lsls	r2, r2, #2
 800639a:	fbb0 faf2 	udiv	r10, r0, r2
 800639e:	f000 fa47 	bl	8006830 <HAL_RCC_GetPCLK2Freq>
 80063a2:	6863      	ldr	r3, [r4, #4]
 80063a4:	4368      	muls	r0, r5
 80063a6:	009b      	lsls	r3, r3, #2
 80063a8:	fbb0 f3f3 	udiv	r3, r0, r3
 80063ac:	fbb3 f3f9 	udiv	r3, r3, r9
 80063b0:	fb09 a313 	mls	r3, r9, r3, r10
 80063b4:	011b      	lsls	r3, r3, #4
 80063b6:	3332      	adds	r3, #50	; 0x32
 80063b8:	fbb3 f3f9 	udiv	r3, r3, r9
 80063bc:	f003 030f 	and.w	r3, r3, #15
 80063c0:	ea43 0308 	orr.w	r3, r3, r8
 80063c4:	e783      	b.n	80062ce <UART_SetConfig+0xd2>
 80063c6:	f000 fa1b 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80063ca:	6867      	ldr	r7, [r4, #4]
 80063cc:	2519      	movs	r5, #25
 80063ce:	f04f 0964 	mov.w	r9, #100	; 0x64
 80063d2:	fb05 f300 	mul.w	r3, r5, r0
 80063d6:	00bf      	lsls	r7, r7, #2
 80063d8:	fbb3 f3f7 	udiv	r3, r3, r7
 80063dc:	fbb3 f3f9 	udiv	r3, r3, r9
 80063e0:	011f      	lsls	r7, r3, #4
 80063e2:	f000 fa0d 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80063e6:	6863      	ldr	r3, [r4, #4]
 80063e8:	4368      	muls	r0, r5
 80063ea:	009b      	lsls	r3, r3, #2
 80063ec:	fbb0 f8f3 	udiv	r8, r0, r3
 80063f0:	f000 fa06 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 80063f4:	6863      	ldr	r3, [r4, #4]
 80063f6:	4368      	muls	r0, r5
 80063f8:	009b      	lsls	r3, r3, #2
 80063fa:	fbb0 f3f3 	udiv	r3, r0, r3
 80063fe:	fbb3 f3f9 	udiv	r3, r3, r9
 8006402:	fb09 8313 	mls	r3, r9, r3, r8
 8006406:	011b      	lsls	r3, r3, #4
 8006408:	3332      	adds	r3, #50	; 0x32
 800640a:	fbb3 f3f9 	udiv	r3, r3, r9
 800640e:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8006412:	f000 f9f5 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 8006416:	6862      	ldr	r2, [r4, #4]
 8006418:	4368      	muls	r0, r5
 800641a:	0092      	lsls	r2, r2, #2
 800641c:	fbb0 faf2 	udiv	r10, r0, r2
 8006420:	f000 f9ee 	bl	8006800 <HAL_RCC_GetPCLK1Freq>
 8006424:	e7bd      	b.n	80063a2 <UART_SetConfig+0x1a6>
 8006426:	bf00      	nop
 8006428:	40011000 	.word	0x40011000
 800642c:	40011400 	.word	0x40011400

08006430 <HAL_UART_MspInit>:
 8006430:	4770      	bx	lr

08006432 <HAL_UART_Init>:
 8006432:	b510      	push	{r4, lr}
 8006434:	4604      	mov	r4, r0
 8006436:	b340      	cbz	r0, 800648a <HAL_UART_Init+0x58>
 8006438:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800643c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006440:	b91b      	cbnz	r3, 800644a <HAL_UART_Init+0x18>
 8006442:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8006446:	f7ff fff3 	bl	8006430 <HAL_UART_MspInit>
 800644a:	6822      	ldr	r2, [r4, #0]
 800644c:	2324      	movs	r3, #36	; 0x24
 800644e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8006452:	68d3      	ldr	r3, [r2, #12]
 8006454:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006458:	60d3      	str	r3, [r2, #12]
 800645a:	4620      	mov	r0, r4
 800645c:	f7ff fece 	bl	80061fc <UART_SetConfig>
 8006460:	6823      	ldr	r3, [r4, #0]
 8006462:	691a      	ldr	r2, [r3, #16]
 8006464:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006468:	611a      	str	r2, [r3, #16]
 800646a:	695a      	ldr	r2, [r3, #20]
 800646c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006470:	615a      	str	r2, [r3, #20]
 8006472:	68da      	ldr	r2, [r3, #12]
 8006474:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006478:	60da      	str	r2, [r3, #12]
 800647a:	2000      	movs	r0, #0
 800647c:	2320      	movs	r3, #32
 800647e:	63e0      	str	r0, [r4, #60]	; 0x3c
 8006480:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8006484:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8006488:	bd10      	pop	{r4, pc}
 800648a:	2001      	movs	r0, #1
 800648c:	bd10      	pop	{r4, pc}

0800648e <HAL_TIM_OC_MspInit>:
 800648e:	4770      	bx	lr

08006490 <TIM_Base_SetConfig>:
 8006490:	4a2e      	ldr	r2, [pc, #184]	; (800654c <TIM_Base_SetConfig+0xbc>)
 8006492:	6803      	ldr	r3, [r0, #0]
 8006494:	4290      	cmp	r0, r2
 8006496:	d012      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 8006498:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800649c:	d00f      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 800649e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80064a2:	4290      	cmp	r0, r2
 80064a4:	d00b      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064aa:	4290      	cmp	r0, r2
 80064ac:	d007      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064b2:	4290      	cmp	r0, r2
 80064b4:	d003      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064b6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80064ba:	4290      	cmp	r0, r2
 80064bc:	d11d      	bne.n	80064fa <TIM_Base_SetConfig+0x6a>
 80064be:	684a      	ldr	r2, [r1, #4]
 80064c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80064c4:	4313      	orrs	r3, r2
 80064c6:	4a21      	ldr	r2, [pc, #132]	; (800654c <TIM_Base_SetConfig+0xbc>)
 80064c8:	4290      	cmp	r0, r2
 80064ca:	d104      	bne.n	80064d6 <TIM_Base_SetConfig+0x46>
 80064cc:	68ca      	ldr	r2, [r1, #12]
 80064ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80064d2:	4313      	orrs	r3, r2
 80064d4:	e028      	b.n	8006528 <TIM_Base_SetConfig+0x98>
 80064d6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80064da:	d0f7      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 80064dc:	4a1c      	ldr	r2, [pc, #112]	; (8006550 <TIM_Base_SetConfig+0xc0>)
 80064de:	4290      	cmp	r0, r2
 80064e0:	d0f4      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 80064e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064e6:	4290      	cmp	r0, r2
 80064e8:	d0f0      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 80064ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064ee:	4290      	cmp	r0, r2
 80064f0:	d0ec      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 80064f2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80064f6:	4290      	cmp	r0, r2
 80064f8:	d0e8      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 80064fa:	4a16      	ldr	r2, [pc, #88]	; (8006554 <TIM_Base_SetConfig+0xc4>)
 80064fc:	4290      	cmp	r0, r2
 80064fe:	d0e5      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006500:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006504:	4290      	cmp	r0, r2
 8006506:	d0e1      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006508:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800650c:	4290      	cmp	r0, r2
 800650e:	d0dd      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006510:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006514:	4290      	cmp	r0, r2
 8006516:	d0d9      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006518:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800651c:	4290      	cmp	r0, r2
 800651e:	d0d5      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006520:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006524:	4290      	cmp	r0, r2
 8006526:	d0d1      	beq.n	80064cc <TIM_Base_SetConfig+0x3c>
 8006528:	6003      	str	r3, [r0, #0]
 800652a:	688b      	ldr	r3, [r1, #8]
 800652c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800652e:	680b      	ldr	r3, [r1, #0]
 8006530:	6283      	str	r3, [r0, #40]	; 0x28
 8006532:	4b06      	ldr	r3, [pc, #24]	; (800654c <TIM_Base_SetConfig+0xbc>)
 8006534:	4298      	cmp	r0, r3
 8006536:	d006      	beq.n	8006546 <TIM_Base_SetConfig+0xb6>
 8006538:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800653c:	4298      	cmp	r0, r3
 800653e:	d002      	beq.n	8006546 <TIM_Base_SetConfig+0xb6>
 8006540:	2301      	movs	r3, #1
 8006542:	6143      	str	r3, [r0, #20]
 8006544:	4770      	bx	lr
 8006546:	690b      	ldr	r3, [r1, #16]
 8006548:	6303      	str	r3, [r0, #48]	; 0x30
 800654a:	e7f9      	b.n	8006540 <TIM_Base_SetConfig+0xb0>
 800654c:	40010000 	.word	0x40010000
 8006550:	40000400 	.word	0x40000400
 8006554:	40014000 	.word	0x40014000

08006558 <HAL_TIM_OC_Init>:
 8006558:	b510      	push	{r4, lr}
 800655a:	4604      	mov	r4, r0
 800655c:	b1a0      	cbz	r0, 8006588 <HAL_TIM_OC_Init+0x30>
 800655e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006562:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006566:	b91b      	cbnz	r3, 8006570 <HAL_TIM_OC_Init+0x18>
 8006568:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800656c:	f7ff ff8f 	bl	800648e <HAL_TIM_OC_MspInit>
 8006570:	2302      	movs	r3, #2
 8006572:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8006576:	6820      	ldr	r0, [r4, #0]
 8006578:	1d21      	adds	r1, r4, #4
 800657a:	f7ff ff89 	bl	8006490 <TIM_Base_SetConfig>
 800657e:	2301      	movs	r3, #1
 8006580:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8006584:	2000      	movs	r0, #0
 8006586:	bd10      	pop	{r4, pc}
 8006588:	2001      	movs	r0, #1
 800658a:	bd10      	pop	{r4, pc}

0800658c <TIM_CCxChannelCmd>:
 800658c:	6a03      	ldr	r3, [r0, #32]
 800658e:	b510      	push	{r4, lr}
 8006590:	2401      	movs	r4, #1
 8006592:	408c      	lsls	r4, r1
 8006594:	ea23 0304 	bic.w	r3, r3, r4
 8006598:	6203      	str	r3, [r0, #32]
 800659a:	6a03      	ldr	r3, [r0, #32]
 800659c:	408a      	lsls	r2, r1
 800659e:	431a      	orrs	r2, r3
 80065a0:	6202      	str	r2, [r0, #32]
 80065a2:	bd10      	pop	{r4, pc}

080065a4 <HAL_TIM_PWM_Start>:
 80065a4:	b510      	push	{r4, lr}
 80065a6:	4604      	mov	r4, r0
 80065a8:	2201      	movs	r2, #1
 80065aa:	6800      	ldr	r0, [r0, #0]
 80065ac:	f7ff ffee 	bl	800658c <TIM_CCxChannelCmd>
 80065b0:	6823      	ldr	r3, [r4, #0]
 80065b2:	4a08      	ldr	r2, [pc, #32]	; (80065d4 <HAL_TIM_PWM_Start+0x30>)
 80065b4:	4293      	cmp	r3, r2
 80065b6:	d003      	beq.n	80065c0 <HAL_TIM_PWM_Start+0x1c>
 80065b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80065bc:	4293      	cmp	r3, r2
 80065be:	d103      	bne.n	80065c8 <HAL_TIM_PWM_Start+0x24>
 80065c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80065c2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80065c6:	645a      	str	r2, [r3, #68]	; 0x44
 80065c8:	681a      	ldr	r2, [r3, #0]
 80065ca:	f042 0201 	orr.w	r2, r2, #1
 80065ce:	601a      	str	r2, [r3, #0]
 80065d0:	2000      	movs	r0, #0
 80065d2:	bd10      	pop	{r4, pc}
 80065d4:	40010000 	.word	0x40010000

080065d8 <HAL_TIM_OC_Start>:
 80065d8:	f7ff bfe4 	b.w	80065a4 <HAL_TIM_PWM_Start>

080065dc <HAL_PWR_EnterSLEEPMode>:
 80065dc:	4a06      	ldr	r2, [pc, #24]	; (80065f8 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80065de:	6913      	ldr	r3, [r2, #16]
 80065e0:	2901      	cmp	r1, #1
 80065e2:	f023 0304 	bic.w	r3, r3, #4
 80065e6:	6113      	str	r3, [r2, #16]
 80065e8:	d101      	bne.n	80065ee <HAL_PWR_EnterSLEEPMode+0x12>
 80065ea:	bf30      	wfi
 80065ec:	4770      	bx	lr
 80065ee:	bf40      	sev
 80065f0:	bf20      	wfe
 80065f2:	bf20      	wfe
 80065f4:	4770      	bx	lr
 80065f6:	bf00      	nop
 80065f8:	e000ed00 	.word	0xe000ed00

080065fc <HAL_RCC_MCOConfig>:
 80065fc:	b570      	push	{r4, r5, r6, lr}
 80065fe:	460d      	mov	r5, r1
 8006600:	b088      	sub	sp, #32
 8006602:	4616      	mov	r6, r2
 8006604:	4c20      	ldr	r4, [pc, #128]	; (8006688 <HAL_RCC_MCOConfig+0x8c>)
 8006606:	b9f0      	cbnz	r0, 8006646 <HAL_RCC_MCOConfig+0x4a>
 8006608:	9001      	str	r0, [sp, #4]
 800660a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800660c:	f043 0301 	orr.w	r3, r3, #1
 8006610:	6323      	str	r3, [r4, #48]	; 0x30
 8006612:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006614:	9005      	str	r0, [sp, #20]
 8006616:	f003 0301 	and.w	r3, r3, #1
 800661a:	9301      	str	r3, [sp, #4]
 800661c:	9b01      	ldr	r3, [sp, #4]
 800661e:	9007      	str	r0, [sp, #28]
 8006620:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006624:	9303      	str	r3, [sp, #12]
 8006626:	2302      	movs	r3, #2
 8006628:	9304      	str	r3, [sp, #16]
 800662a:	a903      	add	r1, sp, #12
 800662c:	2303      	movs	r3, #3
 800662e:	4817      	ldr	r0, [pc, #92]	; (800668c <HAL_RCC_MCOConfig+0x90>)
 8006630:	9306      	str	r3, [sp, #24]
 8006632:	f7ff fbf1 	bl	8005e18 <HAL_GPIO_Init>
 8006636:	68a1      	ldr	r1, [r4, #8]
 8006638:	f021 61ec 	bic.w	r1, r1, #123731968	; 0x7600000
 800663c:	4331      	orrs	r1, r6
 800663e:	4329      	orrs	r1, r5
 8006640:	60a1      	str	r1, [r4, #8]
 8006642:	b008      	add	sp, #32
 8006644:	bd70      	pop	{r4, r5, r6, pc}
 8006646:	2300      	movs	r3, #0
 8006648:	9302      	str	r3, [sp, #8]
 800664a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800664c:	4810      	ldr	r0, [pc, #64]	; (8006690 <HAL_RCC_MCOConfig+0x94>)
 800664e:	f042 0204 	orr.w	r2, r2, #4
 8006652:	6322      	str	r2, [r4, #48]	; 0x30
 8006654:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006656:	9305      	str	r3, [sp, #20]
 8006658:	f002 0204 	and.w	r2, r2, #4
 800665c:	9202      	str	r2, [sp, #8]
 800665e:	9a02      	ldr	r2, [sp, #8]
 8006660:	9307      	str	r3, [sp, #28]
 8006662:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006666:	9203      	str	r2, [sp, #12]
 8006668:	2202      	movs	r2, #2
 800666a:	9204      	str	r2, [sp, #16]
 800666c:	a903      	add	r1, sp, #12
 800666e:	2203      	movs	r2, #3
 8006670:	9206      	str	r2, [sp, #24]
 8006672:	f7ff fbd1 	bl	8005e18 <HAL_GPIO_Init>
 8006676:	68a3      	ldr	r3, [r4, #8]
 8006678:	ea45 01c6 	orr.w	r1, r5, r6, lsl #3
 800667c:	f023 4578 	bic.w	r5, r3, #4160749568	; 0xf8000000
 8006680:	430d      	orrs	r5, r1
 8006682:	60a5      	str	r5, [r4, #8]
 8006684:	e7dd      	b.n	8006642 <HAL_RCC_MCOConfig+0x46>
 8006686:	bf00      	nop
 8006688:	40023800 	.word	0x40023800
 800668c:	40020000 	.word	0x40020000
 8006690:	40020800 	.word	0x40020800

08006694 <HAL_RCC_ClockConfig>:
 8006694:	4b56      	ldr	r3, [pc, #344]	; (80067f0 <HAL_RCC_ClockConfig+0x15c>)
 8006696:	681a      	ldr	r2, [r3, #0]
 8006698:	f002 020f 	and.w	r2, r2, #15
 800669c:	428a      	cmp	r2, r1
 800669e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066a2:	4605      	mov	r5, r0
 80066a4:	460e      	mov	r6, r1
 80066a6:	d330      	bcc.n	800670a <HAL_RCC_ClockConfig+0x76>
 80066a8:	682a      	ldr	r2, [r5, #0]
 80066aa:	0794      	lsls	r4, r2, #30
 80066ac:	d437      	bmi.n	800671e <HAL_RCC_ClockConfig+0x8a>
 80066ae:	07d0      	lsls	r0, r2, #31
 80066b0:	d43d      	bmi.n	800672e <HAL_RCC_ClockConfig+0x9a>
 80066b2:	4b4f      	ldr	r3, [pc, #316]	; (80067f0 <HAL_RCC_ClockConfig+0x15c>)
 80066b4:	681a      	ldr	r2, [r3, #0]
 80066b6:	f002 020f 	and.w	r2, r2, #15
 80066ba:	4296      	cmp	r6, r2
 80066bc:	f0c0 8088 	bcc.w	80067d0 <HAL_RCC_ClockConfig+0x13c>
 80066c0:	682a      	ldr	r2, [r5, #0]
 80066c2:	0751      	lsls	r1, r2, #29
 80066c4:	f100 808c 	bmi.w	80067e0 <HAL_RCC_ClockConfig+0x14c>
 80066c8:	0713      	lsls	r3, r2, #28
 80066ca:	d507      	bpl.n	80066dc <HAL_RCC_ClockConfig+0x48>
 80066cc:	4a49      	ldr	r2, [pc, #292]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 80066ce:	6929      	ldr	r1, [r5, #16]
 80066d0:	6893      	ldr	r3, [r2, #8]
 80066d2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80066d6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80066da:	6093      	str	r3, [r2, #8]
 80066dc:	f7ff fb3e 	bl	8005d5c <HAL_RCC_GetSysClockFreq>
 80066e0:	4b44      	ldr	r3, [pc, #272]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 80066e2:	22f0      	movs	r2, #240	; 0xf0
 80066e4:	689b      	ldr	r3, [r3, #8]
 80066e6:	fa92 f2a2 	rbit	r2, r2
 80066ea:	fab2 f282 	clz	r2, r2
 80066ee:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80066f2:	40d3      	lsrs	r3, r2
 80066f4:	4a40      	ldr	r2, [pc, #256]	; (80067f8 <HAL_RCC_ClockConfig+0x164>)
 80066f6:	5cd3      	ldrb	r3, [r2, r3]
 80066f8:	40d8      	lsrs	r0, r3
 80066fa:	4b40      	ldr	r3, [pc, #256]	; (80067fc <HAL_RCC_ClockConfig+0x168>)
 80066fc:	6018      	str	r0, [r3, #0]
 80066fe:	200f      	movs	r0, #15
 8006700:	f7fd fda4 	bl	800424c <HAL_InitTick>
 8006704:	2000      	movs	r0, #0
 8006706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800670a:	b2ca      	uxtb	r2, r1
 800670c:	701a      	strb	r2, [r3, #0]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	f003 030f 	and.w	r3, r3, #15
 8006714:	4299      	cmp	r1, r3
 8006716:	d0c7      	beq.n	80066a8 <HAL_RCC_ClockConfig+0x14>
 8006718:	2001      	movs	r0, #1
 800671a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800671e:	4935      	ldr	r1, [pc, #212]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 8006720:	68a8      	ldr	r0, [r5, #8]
 8006722:	688b      	ldr	r3, [r1, #8]
 8006724:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006728:	4303      	orrs	r3, r0
 800672a:	608b      	str	r3, [r1, #8]
 800672c:	e7bf      	b.n	80066ae <HAL_RCC_ClockConfig+0x1a>
 800672e:	686a      	ldr	r2, [r5, #4]
 8006730:	4b30      	ldr	r3, [pc, #192]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 8006732:	2a01      	cmp	r2, #1
 8006734:	d11e      	bne.n	8006774 <HAL_RCC_ClockConfig+0xe0>
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 800673c:	d0ec      	beq.n	8006718 <HAL_RCC_ClockConfig+0x84>
 800673e:	4c2d      	ldr	r4, [pc, #180]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 8006740:	68a3      	ldr	r3, [r4, #8]
 8006742:	f023 0303 	bic.w	r3, r3, #3
 8006746:	4313      	orrs	r3, r2
 8006748:	60a3      	str	r3, [r4, #8]
 800674a:	f000 f915 	bl	8006978 <HAL_GetTick>
 800674e:	686b      	ldr	r3, [r5, #4]
 8006750:	2b01      	cmp	r3, #1
 8006752:	4607      	mov	r7, r0
 8006754:	f241 3888 	movw	r8, #5000	; 0x1388
 8006758:	d116      	bne.n	8006788 <HAL_RCC_ClockConfig+0xf4>
 800675a:	68a3      	ldr	r3, [r4, #8]
 800675c:	f003 030c 	and.w	r3, r3, #12
 8006760:	2b04      	cmp	r3, #4
 8006762:	d0a6      	beq.n	80066b2 <HAL_RCC_ClockConfig+0x1e>
 8006764:	f000 f908 	bl	8006978 <HAL_GetTick>
 8006768:	1bc0      	subs	r0, r0, r7
 800676a:	4540      	cmp	r0, r8
 800676c:	d9f5      	bls.n	800675a <HAL_RCC_ClockConfig+0xc6>
 800676e:	2003      	movs	r0, #3
 8006770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006774:	1e91      	subs	r1, r2, #2
 8006776:	2901      	cmp	r1, #1
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	d802      	bhi.n	8006782 <HAL_RCC_ClockConfig+0xee>
 800677c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006780:	e7dc      	b.n	800673c <HAL_RCC_ClockConfig+0xa8>
 8006782:	f013 0f02 	tst.w	r3, #2
 8006786:	e7d9      	b.n	800673c <HAL_RCC_ClockConfig+0xa8>
 8006788:	2b02      	cmp	r3, #2
 800678a:	d10a      	bne.n	80067a2 <HAL_RCC_ClockConfig+0x10e>
 800678c:	68a3      	ldr	r3, [r4, #8]
 800678e:	f003 030c 	and.w	r3, r3, #12
 8006792:	2b08      	cmp	r3, #8
 8006794:	d08d      	beq.n	80066b2 <HAL_RCC_ClockConfig+0x1e>
 8006796:	f000 f8ef 	bl	8006978 <HAL_GetTick>
 800679a:	1bc0      	subs	r0, r0, r7
 800679c:	4540      	cmp	r0, r8
 800679e:	d9f5      	bls.n	800678c <HAL_RCC_ClockConfig+0xf8>
 80067a0:	e7e5      	b.n	800676e <HAL_RCC_ClockConfig+0xda>
 80067a2:	2b03      	cmp	r3, #3
 80067a4:	d10f      	bne.n	80067c6 <HAL_RCC_ClockConfig+0x132>
 80067a6:	68a3      	ldr	r3, [r4, #8]
 80067a8:	f003 030c 	and.w	r3, r3, #12
 80067ac:	2b0c      	cmp	r3, #12
 80067ae:	d080      	beq.n	80066b2 <HAL_RCC_ClockConfig+0x1e>
 80067b0:	f000 f8e2 	bl	8006978 <HAL_GetTick>
 80067b4:	1bc0      	subs	r0, r0, r7
 80067b6:	4540      	cmp	r0, r8
 80067b8:	d9f5      	bls.n	80067a6 <HAL_RCC_ClockConfig+0x112>
 80067ba:	e7d8      	b.n	800676e <HAL_RCC_ClockConfig+0xda>
 80067bc:	f000 f8dc 	bl	8006978 <HAL_GetTick>
 80067c0:	1bc0      	subs	r0, r0, r7
 80067c2:	4540      	cmp	r0, r8
 80067c4:	d8d3      	bhi.n	800676e <HAL_RCC_ClockConfig+0xda>
 80067c6:	68a3      	ldr	r3, [r4, #8]
 80067c8:	f013 0f0c 	tst.w	r3, #12
 80067cc:	d1f6      	bne.n	80067bc <HAL_RCC_ClockConfig+0x128>
 80067ce:	e770      	b.n	80066b2 <HAL_RCC_ClockConfig+0x1e>
 80067d0:	b2f2      	uxtb	r2, r6
 80067d2:	701a      	strb	r2, [r3, #0]
 80067d4:	681b      	ldr	r3, [r3, #0]
 80067d6:	f003 030f 	and.w	r3, r3, #15
 80067da:	429e      	cmp	r6, r3
 80067dc:	d19c      	bne.n	8006718 <HAL_RCC_ClockConfig+0x84>
 80067de:	e76f      	b.n	80066c0 <HAL_RCC_ClockConfig+0x2c>
 80067e0:	4904      	ldr	r1, [pc, #16]	; (80067f4 <HAL_RCC_ClockConfig+0x160>)
 80067e2:	68e8      	ldr	r0, [r5, #12]
 80067e4:	688b      	ldr	r3, [r1, #8]
 80067e6:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80067ea:	4303      	orrs	r3, r0
 80067ec:	608b      	str	r3, [r1, #8]
 80067ee:	e76b      	b.n	80066c8 <HAL_RCC_ClockConfig+0x34>
 80067f0:	40023c00 	.word	0x40023c00
 80067f4:	40023800 	.word	0x40023800
 80067f8:	0800918c 	.word	0x0800918c
 80067fc:	200001e0 	.word	0x200001e0

08006800 <HAL_RCC_GetPCLK1Freq>:
 8006800:	4b08      	ldr	r3, [pc, #32]	; (8006824 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006802:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8006806:	689b      	ldr	r3, [r3, #8]
 8006808:	fa92 f2a2 	rbit	r2, r2
 800680c:	fab2 f282 	clz	r2, r2
 8006810:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006814:	40d3      	lsrs	r3, r2
 8006816:	4a04      	ldr	r2, [pc, #16]	; (8006828 <HAL_RCC_GetPCLK1Freq+0x28>)
 8006818:	5cd3      	ldrb	r3, [r2, r3]
 800681a:	4a04      	ldr	r2, [pc, #16]	; (800682c <HAL_RCC_GetPCLK1Freq+0x2c>)
 800681c:	6810      	ldr	r0, [r2, #0]
 800681e:	40d8      	lsrs	r0, r3
 8006820:	4770      	bx	lr
 8006822:	bf00      	nop
 8006824:	40023800 	.word	0x40023800
 8006828:	0800918c 	.word	0x0800918c
 800682c:	200001e0 	.word	0x200001e0

08006830 <HAL_RCC_GetPCLK2Freq>:
 8006830:	4b08      	ldr	r3, [pc, #32]	; (8006854 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006832:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8006836:	689b      	ldr	r3, [r3, #8]
 8006838:	fa92 f2a2 	rbit	r2, r2
 800683c:	fab2 f282 	clz	r2, r2
 8006840:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8006844:	40d3      	lsrs	r3, r2
 8006846:	4a04      	ldr	r2, [pc, #16]	; (8006858 <HAL_RCC_GetPCLK2Freq+0x28>)
 8006848:	5cd3      	ldrb	r3, [r2, r3]
 800684a:	4a04      	ldr	r2, [pc, #16]	; (800685c <HAL_RCC_GetPCLK2Freq+0x2c>)
 800684c:	6810      	ldr	r0, [r2, #0]
 800684e:	40d8      	lsrs	r0, r3
 8006850:	4770      	bx	lr
 8006852:	bf00      	nop
 8006854:	40023800 	.word	0x40023800
 8006858:	0800918c 	.word	0x0800918c
 800685c:	200001e0 	.word	0x200001e0

08006860 <HAL_RCC_GetClockConfig>:
 8006860:	230f      	movs	r3, #15
 8006862:	6003      	str	r3, [r0, #0]
 8006864:	4b0b      	ldr	r3, [pc, #44]	; (8006894 <HAL_RCC_GetClockConfig+0x34>)
 8006866:	689a      	ldr	r2, [r3, #8]
 8006868:	f002 0203 	and.w	r2, r2, #3
 800686c:	6042      	str	r2, [r0, #4]
 800686e:	689a      	ldr	r2, [r3, #8]
 8006870:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006874:	6082      	str	r2, [r0, #8]
 8006876:	689a      	ldr	r2, [r3, #8]
 8006878:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800687c:	60c2      	str	r2, [r0, #12]
 800687e:	689b      	ldr	r3, [r3, #8]
 8006880:	08db      	lsrs	r3, r3, #3
 8006882:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006886:	6103      	str	r3, [r0, #16]
 8006888:	4b03      	ldr	r3, [pc, #12]	; (8006898 <HAL_RCC_GetClockConfig+0x38>)
 800688a:	681b      	ldr	r3, [r3, #0]
 800688c:	f003 030f 	and.w	r3, r3, #15
 8006890:	600b      	str	r3, [r1, #0]
 8006892:	4770      	bx	lr
 8006894:	40023800 	.word	0x40023800
 8006898:	40023c00 	.word	0x40023c00

0800689c <HAL_MspInit>:
 800689c:	4770      	bx	lr
	...

080068a0 <HAL_PWREx_EnableOverDrive>:
 80068a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80068a2:	2300      	movs	r3, #0
 80068a4:	9301      	str	r3, [sp, #4]
 80068a6:	4b22      	ldr	r3, [pc, #136]	; (8006930 <HAL_PWREx_EnableOverDrive+0x90>)
 80068a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80068aa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80068ae:	641a      	str	r2, [r3, #64]	; 0x40
 80068b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80068b6:	9301      	str	r3, [sp, #4]
 80068b8:	9b01      	ldr	r3, [sp, #4]
 80068ba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80068be:	fa93 f3a3 	rbit	r3, r3
 80068c2:	fab3 f383 	clz	r3, r3
 80068c6:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80068ca:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80068ce:	009b      	lsls	r3, r3, #2
 80068d0:	2201      	movs	r2, #1
 80068d2:	601a      	str	r2, [r3, #0]
 80068d4:	f000 f850 	bl	8006978 <HAL_GetTick>
 80068d8:	4c16      	ldr	r4, [pc, #88]	; (8006934 <HAL_PWREx_EnableOverDrive+0x94>)
 80068da:	4605      	mov	r5, r0
 80068dc:	6863      	ldr	r3, [r4, #4]
 80068de:	03da      	lsls	r2, r3, #15
 80068e0:	d515      	bpl.n	800690e <HAL_PWREx_EnableOverDrive+0x6e>
 80068e2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80068e6:	fa93 f3a3 	rbit	r3, r3
 80068ea:	fab3 f383 	clz	r3, r3
 80068ee:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80068f2:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80068f6:	009b      	lsls	r3, r3, #2
 80068f8:	2201      	movs	r2, #1
 80068fa:	601a      	str	r2, [r3, #0]
 80068fc:	f000 f83c 	bl	8006978 <HAL_GetTick>
 8006900:	4c0c      	ldr	r4, [pc, #48]	; (8006934 <HAL_PWREx_EnableOverDrive+0x94>)
 8006902:	4605      	mov	r5, r0
 8006904:	6863      	ldr	r3, [r4, #4]
 8006906:	039b      	lsls	r3, r3, #14
 8006908:	d50a      	bpl.n	8006920 <HAL_PWREx_EnableOverDrive+0x80>
 800690a:	2000      	movs	r0, #0
 800690c:	e006      	b.n	800691c <HAL_PWREx_EnableOverDrive+0x7c>
 800690e:	f000 f833 	bl	8006978 <HAL_GetTick>
 8006912:	1b40      	subs	r0, r0, r5
 8006914:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006918:	d9e0      	bls.n	80068dc <HAL_PWREx_EnableOverDrive+0x3c>
 800691a:	2003      	movs	r0, #3
 800691c:	b003      	add	sp, #12
 800691e:	bd30      	pop	{r4, r5, pc}
 8006920:	f000 f82a 	bl	8006978 <HAL_GetTick>
 8006924:	1b40      	subs	r0, r0, r5
 8006926:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800692a:	d9eb      	bls.n	8006904 <HAL_PWREx_EnableOverDrive+0x64>
 800692c:	e7f5      	b.n	800691a <HAL_PWREx_EnableOverDrive+0x7a>
 800692e:	bf00      	nop
 8006930:	40023800 	.word	0x40023800
 8006934:	40007000 	.word	0x40007000

08006938 <HAL_Init>:
 8006938:	b508      	push	{r3, lr}
 800693a:	4b0a      	ldr	r3, [pc, #40]	; (8006964 <HAL_Init+0x2c>)
 800693c:	681a      	ldr	r2, [r3, #0]
 800693e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006942:	601a      	str	r2, [r3, #0]
 8006944:	681a      	ldr	r2, [r3, #0]
 8006946:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800694a:	601a      	str	r2, [r3, #0]
 800694c:	681a      	ldr	r2, [r3, #0]
 800694e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006952:	601a      	str	r2, [r3, #0]
 8006954:	200f      	movs	r0, #15
 8006956:	f7fd fc79 	bl	800424c <HAL_InitTick>
 800695a:	f7ff ff9f 	bl	800689c <HAL_MspInit>
 800695e:	2000      	movs	r0, #0
 8006960:	bd08      	pop	{r3, pc}
 8006962:	bf00      	nop
 8006964:	40023c00 	.word	0x40023c00

08006968 <HAL_IncTick>:
 8006968:	4a02      	ldr	r2, [pc, #8]	; (8006974 <HAL_IncTick+0xc>)
 800696a:	6813      	ldr	r3, [r2, #0]
 800696c:	3301      	adds	r3, #1
 800696e:	6013      	str	r3, [r2, #0]
 8006970:	4770      	bx	lr
 8006972:	bf00      	nop
 8006974:	20002294 	.word	0x20002294

08006978 <HAL_GetTick>:
 8006978:	4b01      	ldr	r3, [pc, #4]	; (8006980 <HAL_GetTick+0x8>)
 800697a:	6818      	ldr	r0, [r3, #0]
 800697c:	4770      	bx	lr
 800697e:	bf00      	nop
 8006980:	20002294 	.word	0x20002294

08006984 <mbed::donothing()>:
 8006984:	4770      	bx	lr

08006986 <mbed::SerialBase::lock()>:
 8006986:	4770      	bx	lr

08006988 <mbed::SerialBase::unlock()>:
 8006988:	4770      	bx	lr

0800698a <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 800698a:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 800698e:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8006992:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	4718      	bx	r3

0800699a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 800699a:	b410      	push	{r4}
 800699c:	b180      	cbz	r0, 80069c0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 800699e:	6814      	ldr	r4, [r2, #0]
 80069a0:	6853      	ldr	r3, [r2, #4]
 80069a2:	b90c      	cbnz	r4, 80069a8 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 80069a4:	07da      	lsls	r2, r3, #31
 80069a6:	d50b      	bpl.n	80069c0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80069a8:	f013 0f01 	tst.w	r3, #1
 80069ac:	ea4f 0363 	mov.w	r3, r3, asr #1
 80069b0:	bf1c      	itt	ne
 80069b2:	58c2      	ldrne	r2, [r0, r3]
 80069b4:	5914      	ldrne	r4, [r2, r4]
 80069b6:	4418      	add	r0, r3
 80069b8:	4623      	mov	r3, r4
 80069ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80069be:	4718      	bx	r3
 80069c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80069c4:	4770      	bx	lr

080069c6 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 80069c6:	6803      	ldr	r3, [r0, #0]
 80069c8:	4718      	bx	r3

080069ca <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80069ca:	b108      	cbz	r0, 80069d0 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80069cc:	680b      	ldr	r3, [r1, #0]
 80069ce:	6003      	str	r3, [r0, #0]
 80069d0:	4770      	bx	lr

080069d2 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80069d2:	4770      	bx	lr

080069d4 <mbed::SerialBase::baud(int)>:
 80069d4:	b570      	push	{r4, r5, r6, lr}
 80069d6:	4605      	mov	r5, r0
 80069d8:	4604      	mov	r4, r0
 80069da:	f855 3b4c 	ldr.w	r3, [r5], #76
 80069de:	460e      	mov	r6, r1
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	4798      	blx	r3
 80069e4:	4628      	mov	r0, r5
 80069e6:	4631      	mov	r1, r6
 80069e8:	f7fe fb32 	bl	8005050 <serial_baud>
 80069ec:	6823      	ldr	r3, [r4, #0]
 80069ee:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80069f2:	4620      	mov	r0, r4
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80069fa:	4718      	bx	r3

080069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 80069fc:	4288      	cmp	r0, r1
 80069fe:	b538      	push	{r3, r4, r5, lr}
 8006a00:	4604      	mov	r4, r0
 8006a02:	460d      	mov	r5, r1
 8006a04:	d00a      	beq.n	8006a1c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8006a06:	f7fa f968 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006a0a:	b13c      	cbz	r4, 8006a1c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8006a0c:	68eb      	ldr	r3, [r5, #12]
 8006a0e:	b11b      	cbz	r3, 8006a18 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8006a10:	685b      	ldr	r3, [r3, #4]
 8006a12:	4629      	mov	r1, r5
 8006a14:	4620      	mov	r0, r4
 8006a16:	4798      	blx	r3
 8006a18:	68eb      	ldr	r3, [r5, #12]
 8006a1a:	60e3      	str	r3, [r4, #12]
 8006a1c:	4620      	mov	r0, r4
 8006a1e:	bd38      	pop	{r3, r4, r5, pc}

08006a20 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8006a20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006a24:	b087      	sub	sp, #28
 8006a26:	2500      	movs	r5, #0
 8006a28:	4691      	mov	r9, r2
 8006a2a:	9500      	str	r5, [sp, #0]
 8006a2c:	4602      	mov	r2, r0
 8006a2e:	9501      	str	r5, [sp, #4]
 8006a30:	4604      	mov	r4, r0
 8006a32:	4688      	mov	r8, r1
 8006a34:	461f      	mov	r7, r3
 8006a36:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8006a3a:	4b27      	ldr	r3, [pc, #156]	; (8006ad8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8006a3c:	f842 3b08 	str.w	r3, [r2], #8
 8006a40:	4b26      	ldr	r3, [pc, #152]	; (8006adc <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8006a42:	e882 0003 	stmia.w	r2, {r0, r1}
 8006a46:	6123      	str	r3, [r4, #16]
 8006a48:	f248 0307 	movw	r3, #32775	; 0x8007
 8006a4c:	6163      	str	r3, [r4, #20]
 8006a4e:	4b24      	ldr	r3, [pc, #144]	; (8006ae0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8006a50:	61e5      	str	r5, [r4, #28]
 8006a52:	61a4      	str	r4, [r4, #24]
 8006a54:	6222      	str	r2, [r4, #32]
 8006a56:	6263      	str	r3, [r4, #36]	; 0x24
 8006a58:	f3bf 8f6f 	isb	sy
 8006a5c:	f3bf 8f4f 	dsb	sy
 8006a60:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8006a64:	224c      	movs	r2, #76	; 0x4c
 8006a66:	6365      	str	r5, [r4, #52]	; 0x34
 8006a68:	6465      	str	r5, [r4, #68]	; 0x44
 8006a6a:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8006a6e:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8006a72:	4630      	mov	r0, r6
 8006a74:	f001 fa01 	bl	8007e7a <memset>
 8006a78:	a902      	add	r1, sp, #8
 8006a7a:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8006a7e:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8006a82:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8006a86:	4d17      	ldr	r5, [pc, #92]	; (8006ae4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8006a88:	4f17      	ldr	r7, [pc, #92]	; (8006ae8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8006a8a:	9702      	str	r7, [sp, #8]
 8006a8c:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8006a90:	9505      	str	r5, [sp, #20]
 8006a92:	f7ff ffb3 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006a96:	a802      	add	r0, sp, #8
 8006a98:	f7fa f91f 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006a9c:	a902      	add	r1, sp, #8
 8006a9e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8006aa2:	9702      	str	r7, [sp, #8]
 8006aa4:	9505      	str	r5, [sp, #20]
 8006aa6:	f7ff ffa9 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006aaa:	a802      	add	r0, sp, #8
 8006aac:	f7fa f915 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006ab0:	464a      	mov	r2, r9
 8006ab2:	4641      	mov	r1, r8
 8006ab4:	4630      	mov	r0, r6
 8006ab6:	f7fe f9db 	bl	8004e70 <serial_init>
 8006aba:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8006abe:	4630      	mov	r0, r6
 8006ac0:	f7fe fac6 	bl	8005050 <serial_baud>
 8006ac4:	4630      	mov	r0, r6
 8006ac6:	4622      	mov	r2, r4
 8006ac8:	4908      	ldr	r1, [pc, #32]	; (8006aec <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8006aca:	f7fe fac5 	bl	8005058 <serial_irq_handler>
 8006ace:	4620      	mov	r0, r4
 8006ad0:	b007      	add	sp, #28
 8006ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006ad6:	bf00      	nop
 8006ad8:	080091b0 	.word	0x080091b0
 8006adc:	e890a001 	.word	0xe890a001
 8006ae0:	0800699b 	.word	0x0800699b
 8006ae4:	0800919c 	.word	0x0800919c
 8006ae8:	08006985 	.word	0x08006985
 8006aec:	0800698b 	.word	0x0800698b

08006af0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8006af0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006af4:	4605      	mov	r5, r0
 8006af6:	4688      	mov	r8, r1
 8006af8:	f855 3b4c 	ldr.w	r3, [r5], #76
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4604      	mov	r4, r0
 8006b00:	4616      	mov	r6, r2
 8006b02:	4798      	blx	r3
 8006b04:	f7fc f858 	bl	8002bb8 <core_util_critical_section_enter>
 8006b08:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8006b0c:	0130      	lsls	r0, r6, #4
 8006b0e:	b197      	cbz	r7, 8006b36 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8006b10:	3098      	adds	r0, #152	; 0x98
 8006b12:	4641      	mov	r1, r8
 8006b14:	4420      	add	r0, r4
 8006b16:	f7ff ff71 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006b1a:	2201      	movs	r2, #1
 8006b1c:	4631      	mov	r1, r6
 8006b1e:	4628      	mov	r0, r5
 8006b20:	f7fe faa6 	bl	8005070 <serial_irq_set>
 8006b24:	f7fc f85e 	bl	8002be4 <core_util_critical_section_exit>
 8006b28:	6823      	ldr	r3, [r4, #0]
 8006b2a:	4620      	mov	r0, r4
 8006b2c:	685b      	ldr	r3, [r3, #4]
 8006b2e:	4798      	blx	r3
 8006b30:	b004      	add	sp, #16
 8006b32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b36:	4b07      	ldr	r3, [pc, #28]	; (8006b54 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8006b38:	9300      	str	r3, [sp, #0]
 8006b3a:	3098      	adds	r0, #152	; 0x98
 8006b3c:	4b06      	ldr	r3, [pc, #24]	; (8006b58 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8006b3e:	9303      	str	r3, [sp, #12]
 8006b40:	4669      	mov	r1, sp
 8006b42:	4420      	add	r0, r4
 8006b44:	f7ff ff5a 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006b48:	4668      	mov	r0, sp
 8006b4a:	f7fa f8c6 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006b4e:	463a      	mov	r2, r7
 8006b50:	e7e4      	b.n	8006b1c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8006b52:	bf00      	nop
 8006b54:	08006985 	.word	0x08006985
 8006b58:	0800919c 	.word	0x0800919c

08006b5c <mbed::RawSerial::lock()>:
 8006b5c:	4770      	bx	lr
	...

08006b60 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8006b60:	b510      	push	{r4, lr}
 8006b62:	4604      	mov	r4, r0
 8006b64:	f7ff ff5c 	bl	8006a20 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8006b68:	4b01      	ldr	r3, [pc, #4]	; (8006b70 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8006b6a:	6023      	str	r3, [r4, #0]
 8006b6c:	4620      	mov	r0, r4
 8006b6e:	bd10      	pop	{r4, pc}
 8006b70:	080091c8 	.word	0x080091c8

08006b74 <mbed::RawSerial::~RawSerial()>:
 8006b74:	b510      	push	{r4, lr}
 8006b76:	4b03      	ldr	r3, [pc, #12]	; (8006b84 <mbed::RawSerial::~RawSerial()+0x10>)
 8006b78:	6003      	str	r3, [r0, #0]
 8006b7a:	4604      	mov	r4, r0
 8006b7c:	f7fa f8f0 	bl	8000d60 <mbed::SerialBase::~SerialBase()>
 8006b80:	4620      	mov	r0, r4
 8006b82:	bd10      	pop	{r4, pc}
 8006b84:	080091c8 	.word	0x080091c8

08006b88 <mbed::RawSerial::~RawSerial()>:
 8006b88:	b510      	push	{r4, lr}
 8006b8a:	4604      	mov	r4, r0
 8006b8c:	f7ff fff2 	bl	8006b74 <mbed::RawSerial::~RawSerial()>
 8006b90:	4620      	mov	r0, r4
 8006b92:	f000 fac3 	bl	800711c <operator delete(void*)>
 8006b96:	4620      	mov	r0, r4
 8006b98:	bd10      	pop	{r4, pc}

08006b9a <mbed::Timer::start()>:
 8006b9a:	b510      	push	{r4, lr}
 8006b9c:	4604      	mov	r4, r0
 8006b9e:	f7fc f80b 	bl	8002bb8 <core_util_critical_section_enter>
 8006ba2:	6823      	ldr	r3, [r4, #0]
 8006ba4:	b92b      	cbnz	r3, 8006bb2 <mbed::Timer::start()+0x18>
 8006ba6:	68e0      	ldr	r0, [r4, #12]
 8006ba8:	f7fb ff9b 	bl	8002ae2 <ticker_read>
 8006bac:	2301      	movs	r3, #1
 8006bae:	6060      	str	r0, [r4, #4]
 8006bb0:	6023      	str	r3, [r4, #0]
 8006bb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006bb6:	f7fc b815 	b.w	8002be4 <core_util_critical_section_exit>

08006bba <mbed::Timer::slicetime()>:
 8006bba:	b538      	push	{r3, r4, r5, lr}
 8006bbc:	4605      	mov	r5, r0
 8006bbe:	f7fb fffb 	bl	8002bb8 <core_util_critical_section_enter>
 8006bc2:	682c      	ldr	r4, [r5, #0]
 8006bc4:	b124      	cbz	r4, 8006bd0 <mbed::Timer::slicetime()+0x16>
 8006bc6:	68e8      	ldr	r0, [r5, #12]
 8006bc8:	f7fb ff8b 	bl	8002ae2 <ticker_read>
 8006bcc:	686c      	ldr	r4, [r5, #4]
 8006bce:	1b04      	subs	r4, r0, r4
 8006bd0:	f7fc f808 	bl	8002be4 <core_util_critical_section_exit>
 8006bd4:	4620      	mov	r0, r4
 8006bd6:	bd38      	pop	{r3, r4, r5, pc}

08006bd8 <mbed::Timer::read_us()>:
 8006bd8:	b538      	push	{r3, r4, r5, lr}
 8006bda:	4605      	mov	r5, r0
 8006bdc:	f7fb ffec 	bl	8002bb8 <core_util_critical_section_enter>
 8006be0:	4628      	mov	r0, r5
 8006be2:	68ac      	ldr	r4, [r5, #8]
 8006be4:	f7ff ffe9 	bl	8006bba <mbed::Timer::slicetime()>
 8006be8:	4404      	add	r4, r0
 8006bea:	f7fb fffb 	bl	8002be4 <core_util_critical_section_exit>
 8006bee:	4620      	mov	r0, r4
 8006bf0:	bd38      	pop	{r3, r4, r5, pc}

08006bf2 <mbed::Timer::read_ms()>:
 8006bf2:	b508      	push	{r3, lr}
 8006bf4:	f7ff fff0 	bl	8006bd8 <mbed::Timer::read_us()>
 8006bf8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006bfc:	fb90 f0f3 	sdiv	r0, r0, r3
 8006c00:	bd08      	pop	{r3, pc}

08006c02 <mbed::Timer::reset()>:
 8006c02:	b510      	push	{r4, lr}
 8006c04:	4604      	mov	r4, r0
 8006c06:	f7fb ffd7 	bl	8002bb8 <core_util_critical_section_enter>
 8006c0a:	68e0      	ldr	r0, [r4, #12]
 8006c0c:	f7fb ff69 	bl	8002ae2 <ticker_read>
 8006c10:	2300      	movs	r3, #0
 8006c12:	6060      	str	r0, [r4, #4]
 8006c14:	60a3      	str	r3, [r4, #8]
 8006c16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c1a:	f7fb bfe3 	b.w	8002be4 <core_util_critical_section_exit>

08006c1e <mbed::Timer::Timer()>:
 8006c1e:	2300      	movs	r3, #0
 8006c20:	b510      	push	{r4, lr}
 8006c22:	6003      	str	r3, [r0, #0]
 8006c24:	6043      	str	r3, [r0, #4]
 8006c26:	6083      	str	r3, [r0, #8]
 8006c28:	4604      	mov	r4, r0
 8006c2a:	f7fb ff2d 	bl	8002a88 <get_us_ticker_data>
 8006c2e:	60e0      	str	r0, [r4, #12]
 8006c30:	4620      	mov	r0, r4
 8006c32:	f7ff ffe6 	bl	8006c02 <mbed::Timer::reset()>
 8006c36:	4620      	mov	r0, r4
 8006c38:	bd10      	pop	{r4, pc}

08006c3a <mbed::donothing()>:
 8006c3a:	4770      	bx	lr

08006c3c <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8006c3c:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8006c40:	f102 000c 	add.w	r0, r2, #12
 8006c44:	6993      	ldr	r3, [r2, #24]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	4718      	bx	r3

08006c4a <mbed::CAN::lock()>:
 8006c4a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006c4e:	309c      	adds	r0, #156	; 0x9c
 8006c50:	f000 ba88 	b.w	8007164 <rtos::Mutex::lock(unsigned long)>

08006c54 <mbed::CAN::unlock()>:
 8006c54:	309c      	adds	r0, #156	; 0x9c
 8006c56:	f000 ba88 	b.w	800716a <rtos::Mutex::unlock()>

08006c5a <mbed::CAN::frequency(int)>:
 8006c5a:	b570      	push	{r4, r5, r6, lr}
 8006c5c:	4605      	mov	r5, r0
 8006c5e:	460e      	mov	r6, r1
 8006c60:	f855 3b04 	ldr.w	r3, [r5], #4
 8006c64:	689b      	ldr	r3, [r3, #8]
 8006c66:	4604      	mov	r4, r0
 8006c68:	4798      	blx	r3
 8006c6a:	4631      	mov	r1, r6
 8006c6c:	4628      	mov	r0, r5
 8006c6e:	f7fd fd2f 	bl	80046d0 <can_frequency>
 8006c72:	6823      	ldr	r3, [r4, #0]
 8006c74:	4605      	mov	r5, r0
 8006c76:	68db      	ldr	r3, [r3, #12]
 8006c78:	4620      	mov	r0, r4
 8006c7a:	4798      	blx	r3
 8006c7c:	4628      	mov	r0, r5
 8006c7e:	bd70      	pop	{r4, r5, r6, pc}

08006c80 <mbed::CAN::write(mbed::CANMessage)>:
 8006c80:	b084      	sub	sp, #16
 8006c82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006c84:	4606      	mov	r6, r0
 8006c86:	ac07      	add	r4, sp, #28
 8006c88:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8006c8c:	f856 3b04 	ldr.w	r3, [r6], #4
 8006c90:	689b      	ldr	r3, [r3, #8]
 8006c92:	4605      	mov	r5, r0
 8006c94:	4798      	blx	r3
 8006c96:	2300      	movs	r3, #0
 8006c98:	9301      	str	r3, [sp, #4]
 8006c9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006c9c:	9300      	str	r3, [sp, #0]
 8006c9e:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8006ca2:	4630      	mov	r0, r6
 8006ca4:	f7fd fd5a 	bl	800475c <can_write>
 8006ca8:	682b      	ldr	r3, [r5, #0]
 8006caa:	4604      	mov	r4, r0
 8006cac:	68db      	ldr	r3, [r3, #12]
 8006cae:	4628      	mov	r0, r5
 8006cb0:	4798      	blx	r3
 8006cb2:	4620      	mov	r0, r4
 8006cb4:	b002      	add	sp, #8
 8006cb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006cba:	b004      	add	sp, #16
 8006cbc:	4770      	bx	lr

08006cbe <mbed::CAN::read(mbed::CANMessage&, int)>:
 8006cbe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cc0:	4605      	mov	r5, r0
 8006cc2:	460e      	mov	r6, r1
 8006cc4:	f855 3b04 	ldr.w	r3, [r5], #4
 8006cc8:	4617      	mov	r7, r2
 8006cca:	689b      	ldr	r3, [r3, #8]
 8006ccc:	4604      	mov	r4, r0
 8006cce:	4798      	blx	r3
 8006cd0:	463a      	mov	r2, r7
 8006cd2:	4631      	mov	r1, r6
 8006cd4:	4628      	mov	r0, r5
 8006cd6:	f7fd fd92 	bl	80047fe <can_read>
 8006cda:	6823      	ldr	r3, [r4, #0]
 8006cdc:	4605      	mov	r5, r0
 8006cde:	68db      	ldr	r3, [r3, #12]
 8006ce0:	4620      	mov	r0, r4
 8006ce2:	4798      	blx	r3
 8006ce4:	4628      	mov	r0, r5
 8006ce6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006ce8 <mbed::CAN::~CAN()>:
 8006ce8:	b570      	push	{r4, r5, r6, lr}
 8006cea:	4604      	mov	r4, r0
 8006cec:	4b0d      	ldr	r3, [pc, #52]	; (8006d24 <mbed::CAN::~CAN()+0x3c>)
 8006cee:	f844 3b04 	str.w	r3, [r4], #4
 8006cf2:	4605      	mov	r5, r0
 8006cf4:	4620      	mov	r0, r4
 8006cf6:	f7fd fcb5 	bl	8004664 <can_irq_free>
 8006cfa:	4620      	mov	r0, r4
 8006cfc:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 8006d00:	f7fd fcbe 	bl	8004680 <can_free>
 8006d04:	4620      	mov	r0, r4
 8006d06:	f000 fa33 	bl	8007170 <rtos::Mutex::~Mutex()>
 8006d0a:	f115 060c 	adds.w	r6, r5, #12
 8006d0e:	d006      	beq.n	8006d1e <mbed::CAN::~CAN()+0x36>
 8006d10:	42b4      	cmp	r4, r6
 8006d12:	d004      	beq.n	8006d1e <mbed::CAN::~CAN()+0x36>
 8006d14:	3c10      	subs	r4, #16
 8006d16:	4620      	mov	r0, r4
 8006d18:	f7f9 ffdf 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006d1c:	e7f8      	b.n	8006d10 <mbed::CAN::~CAN()+0x28>
 8006d1e:	4628      	mov	r0, r5
 8006d20:	bd70      	pop	{r4, r5, r6, pc}
 8006d22:	bf00      	nop
 8006d24:	080091e0 	.word	0x080091e0

08006d28 <mbed::CAN::~CAN()>:
 8006d28:	b510      	push	{r4, lr}
 8006d2a:	4604      	mov	r4, r0
 8006d2c:	f7ff ffdc 	bl	8006ce8 <mbed::CAN::~CAN()>
 8006d30:	4620      	mov	r0, r4
 8006d32:	f000 f9f3 	bl	800711c <operator delete(void*)>
 8006d36:	4620      	mov	r0, r4
 8006d38:	bd10      	pop	{r4, pc}
	...

08006d3c <mbed::CAN::CAN(PinName, PinName)>:
 8006d3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8006d40:	4b1a      	ldr	r3, [pc, #104]	; (8006dac <mbed::CAN::CAN(PinName, PinName)+0x70>)
 8006d42:	6003      	str	r3, [r0, #0]
 8006d44:	4617      	mov	r7, r2
 8006d46:	f100 030c 	add.w	r3, r0, #12
 8006d4a:	2200      	movs	r2, #0
 8006d4c:	4604      	mov	r4, r0
 8006d4e:	460e      	mov	r6, r1
 8006d50:	6042      	str	r2, [r0, #4]
 8006d52:	6082      	str	r2, [r0, #8]
 8006d54:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8006d58:	461d      	mov	r5, r3
 8006d5a:	60da      	str	r2, [r3, #12]
 8006d5c:	3310      	adds	r3, #16
 8006d5e:	4543      	cmp	r3, r8
 8006d60:	d1fb      	bne.n	8006d5a <mbed::CAN::CAN(PinName, PinName)+0x1e>
 8006d62:	4640      	mov	r0, r8
 8006d64:	f000 f9e6 	bl	8007134 <rtos::Mutex::Mutex()>
 8006d68:	f8df a048 	ldr.w	r10, [pc, #72]	; 8006db4 <mbed::CAN::CAN(PinName, PinName)+0x78>
 8006d6c:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8006db8 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8006d70:	4545      	cmp	r5, r8
 8006d72:	d00c      	beq.n	8006d8e <mbed::CAN::CAN(PinName, PinName)+0x52>
 8006d74:	4669      	mov	r1, sp
 8006d76:	4628      	mov	r0, r5
 8006d78:	f8cd a000 	str.w	r10, [sp]
 8006d7c:	f8cd 900c 	str.w	r9, [sp, #12]
 8006d80:	f7ff fe3c 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006d84:	4668      	mov	r0, sp
 8006d86:	f7f9 ffa8 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006d8a:	3510      	adds	r5, #16
 8006d8c:	e7f0      	b.n	8006d70 <mbed::CAN::CAN(PinName, PinName)+0x34>
 8006d8e:	1d25      	adds	r5, r4, #4
 8006d90:	463a      	mov	r2, r7
 8006d92:	4631      	mov	r1, r6
 8006d94:	4628      	mov	r0, r5
 8006d96:	f7fd fdb3 	bl	8004900 <can_init>
 8006d9a:	4628      	mov	r0, r5
 8006d9c:	4622      	mov	r2, r4
 8006d9e:	4904      	ldr	r1, [pc, #16]	; (8006db0 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 8006da0:	f7fd fc54 	bl	800464c <can_irq_init>
 8006da4:	4620      	mov	r0, r4
 8006da6:	b004      	add	sp, #16
 8006da8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006dac:	080091e0 	.word	0x080091e0
 8006db0:	08006c3d 	.word	0x08006c3d
 8006db4:	08006c3b 	.word	0x08006c3b
 8006db8:	0800919c 	.word	0x0800919c

08006dbc <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>:
 8006dbc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006dc0:	4605      	mov	r5, r0
 8006dc2:	4688      	mov	r8, r1
 8006dc4:	f855 3b04 	ldr.w	r3, [r5], #4
 8006dc8:	689b      	ldr	r3, [r3, #8]
 8006dca:	4604      	mov	r4, r0
 8006dcc:	4616      	mov	r6, r2
 8006dce:	4798      	blx	r3
 8006dd0:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8006dd4:	0130      	lsls	r0, r6, #4
 8006dd6:	b187      	cbz	r7, 8006dfa <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x3e>
 8006dd8:	300c      	adds	r0, #12
 8006dda:	4641      	mov	r1, r8
 8006ddc:	4420      	add	r0, r4
 8006dde:	f7ff fe0d 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006de2:	2201      	movs	r2, #1
 8006de4:	4631      	mov	r1, r6
 8006de6:	4628      	mov	r0, r5
 8006de8:	f7fd fe1a 	bl	8004a20 <can_irq_set>
 8006dec:	6823      	ldr	r3, [r4, #0]
 8006dee:	4620      	mov	r0, r4
 8006df0:	68db      	ldr	r3, [r3, #12]
 8006df2:	4798      	blx	r3
 8006df4:	b004      	add	sp, #16
 8006df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006dfa:	4b07      	ldr	r3, [pc, #28]	; (8006e18 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x5c>)
 8006dfc:	9300      	str	r3, [sp, #0]
 8006dfe:	300c      	adds	r0, #12
 8006e00:	4b06      	ldr	r3, [pc, #24]	; (8006e1c <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x60>)
 8006e02:	9303      	str	r3, [sp, #12]
 8006e04:	4669      	mov	r1, sp
 8006e06:	4420      	add	r0, r4
 8006e08:	f7ff fdf8 	bl	80069fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8006e0c:	4668      	mov	r0, sp
 8006e0e:	f7f9 ff64 	bl	8000cda <mbed::Callback<void ()>::~Callback()>
 8006e12:	463a      	mov	r2, r7
 8006e14:	e7e6      	b.n	8006de4 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x28>
 8006e16:	bf00      	nop
 8006e18:	08006c3b 	.word	0x08006c3b
 8006e1c:	0800919c 	.word	0x0800919c

08006e20 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8006e20:	b538      	push	{r3, r4, r5, lr}
 8006e22:	4604      	mov	r4, r0
 8006e24:	b148      	cbz	r0, 8006e3a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8006e26:	3058      	adds	r0, #88	; 0x58
 8006e28:	42a0      	cmp	r0, r4
 8006e2a:	d006      	beq.n	8006e3a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8006e2c:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8006e30:	3814      	subs	r0, #20
 8006e32:	f7f9 ff8c 	bl	8000d4e <mbed::Callback<void (int)>::~Callback()>
 8006e36:	4628      	mov	r0, r5
 8006e38:	e7f6      	b.n	8006e28 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8006e3a:	4620      	mov	r0, r4
 8006e3c:	bd38      	pop	{r3, r4, r5, pc}
	...

08006e40 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8006e40:	b570      	push	{r4, r5, r6, lr}
 8006e42:	4c0e      	ldr	r4, [pc, #56]	; (8006e7c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8006e44:	4620      	mov	r0, r4
 8006e46:	2500      	movs	r5, #0
 8006e48:	2628      	movs	r6, #40	; 0x28
 8006e4a:	4632      	mov	r2, r6
 8006e4c:	4629      	mov	r1, r5
 8006e4e:	f840 5b04 	str.w	r5, [r0], #4
 8006e52:	f001 f812 	bl	8007e7a <memset>
 8006e56:	4632      	mov	r2, r6
 8006e58:	4629      	mov	r1, r5
 8006e5a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8006e5e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8006e60:	f001 f80b 	bl	8007e7a <memset>
 8006e64:	65a5      	str	r5, [r4, #88]	; 0x58
 8006e66:	4620      	mov	r0, r4
 8006e68:	65e5      	str	r5, [r4, #92]	; 0x5c
 8006e6a:	4a05      	ldr	r2, [pc, #20]	; (8006e80 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8006e6c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8006e70:	4904      	ldr	r1, [pc, #16]	; (8006e84 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8006e72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006e76:	f000 b927 	b.w	80070c8 <__aeabi_atexit>
 8006e7a:	bf00      	nop
 8006e7c:	20001590 	.word	0x20001590
 8006e80:	200001c4 	.word	0x200001c4
 8006e84:	08006e21 	.word	0x08006e21

08006e88 <__wrap__malloc_r>:
 8006e88:	f001 b84e 	b.w	8007f28 <_malloc_r>

08006e8c <__wrap__realloc_r>:
 8006e8c:	f001 b8aa 	b.w	8007fe4 <_realloc_r>

08006e90 <__wrap__free_r>:
 8006e90:	f000 bffc 	b.w	8007e8c <_free_r>

08006e94 <wait_us>:
 8006e94:	b570      	push	{r4, r5, r6, lr}
 8006e96:	4605      	mov	r5, r0
 8006e98:	f7fd fe4c 	bl	8004b34 <us_ticker_read>
 8006e9c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8006ea0:	fb95 f4f4 	sdiv	r4, r5, r4
 8006ea4:	2c00      	cmp	r4, #0
 8006ea6:	4606      	mov	r6, r0
 8006ea8:	dd02      	ble.n	8006eb0 <wait_us+0x1c>
 8006eaa:	f7fb fe7f 	bl	8002bac <core_util_are_interrupts_enabled>
 8006eae:	b928      	cbnz	r0, 8006ebc <wait_us+0x28>
 8006eb0:	f7fd fe40 	bl	8004b34 <us_ticker_read>
 8006eb4:	1b80      	subs	r0, r0, r6
 8006eb6:	42a8      	cmp	r0, r5
 8006eb8:	d3fa      	bcc.n	8006eb0 <wait_us+0x1c>
 8006eba:	bd70      	pop	{r4, r5, r6, pc}
 8006ebc:	4620      	mov	r0, r4
 8006ebe:	f000 f937 	bl	8007130 <rtos::Thread::wait(unsigned long)>
 8006ec2:	e7f5      	b.n	8006eb0 <wait_us+0x1c>

08006ec4 <wait_ms>:
 8006ec4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006ec8:	4358      	muls	r0, r3
 8006eca:	f7ff bfe3 	b.w	8006e94 <wait_us>
	...

08006ed0 <init_serial()>:
 8006ed0:	b508      	push	{r3, lr}
 8006ed2:	4b08      	ldr	r3, [pc, #32]	; (8006ef4 <init_serial()+0x24>)
 8006ed4:	681b      	ldr	r3, [r3, #0]
 8006ed6:	b95b      	cbnz	r3, 8006ef0 <init_serial()+0x20>
 8006ed8:	2102      	movs	r1, #2
 8006eda:	4807      	ldr	r0, [pc, #28]	; (8006ef8 <init_serial()+0x28>)
 8006edc:	2203      	movs	r2, #3
 8006ede:	f7fd ffc7 	bl	8004e70 <serial_init>
 8006ee2:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8006ee6:	4804      	ldr	r0, [pc, #16]	; (8006ef8 <init_serial()+0x28>)
 8006ee8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006eec:	f7fe b8b0 	b.w	8005050 <serial_baud>
 8006ef0:	bd08      	pop	{r3, pc}
 8006ef2:	bf00      	nop
 8006ef4:	2000138c 	.word	0x2000138c
 8006ef8:	20002248 	.word	0x20002248

08006efc <_close>:
 8006efc:	2802      	cmp	r0, #2
 8006efe:	b510      	push	{r4, lr}
 8006f00:	4604      	mov	r4, r0
 8006f02:	dc01      	bgt.n	8006f08 <_close+0xc>
 8006f04:	2000      	movs	r0, #0
 8006f06:	bd10      	pop	{r4, pc}
 8006f08:	f000 fd74 	bl	80079f4 <__errno>
 8006f0c:	2309      	movs	r3, #9
 8006f0e:	6003      	str	r3, [r0, #0]
 8006f10:	3c03      	subs	r4, #3
 8006f12:	4b09      	ldr	r3, [pc, #36]	; (8006f38 <_close+0x3c>)
 8006f14:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006f18:	2200      	movs	r2, #0
 8006f1a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8006f1e:	b140      	cbz	r0, 8006f32 <_close+0x36>
 8006f20:	6803      	ldr	r3, [r0, #0]
 8006f22:	691b      	ldr	r3, [r3, #16]
 8006f24:	4798      	blx	r3
 8006f26:	1e04      	subs	r4, r0, #0
 8006f28:	daec      	bge.n	8006f04 <_close+0x8>
 8006f2a:	f000 fd63 	bl	80079f4 <__errno>
 8006f2e:	4264      	negs	r4, r4
 8006f30:	6004      	str	r4, [r0, #0]
 8006f32:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006f36:	bd10      	pop	{r4, pc}
 8006f38:	200015f4 	.word	0x200015f4

08006f3c <_write>:
 8006f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f3e:	4605      	mov	r5, r0
 8006f40:	460e      	mov	r6, r1
 8006f42:	4614      	mov	r4, r2
 8006f44:	f000 fd56 	bl	80079f4 <__errno>
 8006f48:	2309      	movs	r3, #9
 8006f4a:	2d02      	cmp	r5, #2
 8006f4c:	6003      	str	r3, [r0, #0]
 8006f4e:	dc0f      	bgt.n	8006f70 <_write+0x34>
 8006f50:	4b12      	ldr	r3, [pc, #72]	; (8006f9c <_write+0x60>)
 8006f52:	681b      	ldr	r3, [r3, #0]
 8006f54:	b90b      	cbnz	r3, 8006f5a <_write+0x1e>
 8006f56:	f7ff ffbb 	bl	8006ed0 <init_serial()>
 8006f5a:	4635      	mov	r5, r6
 8006f5c:	1937      	adds	r7, r6, r4
 8006f5e:	4e10      	ldr	r6, [pc, #64]	; (8006fa0 <_write+0x64>)
 8006f60:	42bd      	cmp	r5, r7
 8006f62:	d015      	beq.n	8006f90 <_write+0x54>
 8006f64:	f815 1b01 	ldrb.w	r1, [r5], #1
 8006f68:	4630      	mov	r0, r6
 8006f6a:	f7fe f905 	bl	8005178 <serial_putc>
 8006f6e:	e7f7      	b.n	8006f60 <_write+0x24>
 8006f70:	3d03      	subs	r5, #3
 8006f72:	4b0c      	ldr	r3, [pc, #48]	; (8006fa4 <_write+0x68>)
 8006f74:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006f78:	b160      	cbz	r0, 8006f94 <_write+0x58>
 8006f7a:	6803      	ldr	r3, [r0, #0]
 8006f7c:	4622      	mov	r2, r4
 8006f7e:	68db      	ldr	r3, [r3, #12]
 8006f80:	4631      	mov	r1, r6
 8006f82:	4798      	blx	r3
 8006f84:	1e04      	subs	r4, r0, #0
 8006f86:	da03      	bge.n	8006f90 <_write+0x54>
 8006f88:	f000 fd34 	bl	80079f4 <__errno>
 8006f8c:	4263      	negs	r3, r4
 8006f8e:	6003      	str	r3, [r0, #0]
 8006f90:	4620      	mov	r0, r4
 8006f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006f94:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8006f98:	e7fa      	b.n	8006f90 <_write+0x54>
 8006f9a:	bf00      	nop
 8006f9c:	2000138c 	.word	0x2000138c
 8006fa0:	20002248 	.word	0x20002248
 8006fa4:	200015f4 	.word	0x200015f4

08006fa8 <_read>:
 8006fa8:	b570      	push	{r4, r5, r6, lr}
 8006faa:	4604      	mov	r4, r0
 8006fac:	460d      	mov	r5, r1
 8006fae:	4616      	mov	r6, r2
 8006fb0:	f000 fd20 	bl	80079f4 <__errno>
 8006fb4:	2309      	movs	r3, #9
 8006fb6:	2c02      	cmp	r4, #2
 8006fb8:	6003      	str	r3, [r0, #0]
 8006fba:	dc0b      	bgt.n	8006fd4 <_read+0x2c>
 8006fbc:	4b0f      	ldr	r3, [pc, #60]	; (8006ffc <_read+0x54>)
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	b90b      	cbnz	r3, 8006fc6 <_read+0x1e>
 8006fc2:	f7ff ff85 	bl	8006ed0 <init_serial()>
 8006fc6:	480e      	ldr	r0, [pc, #56]	; (8007000 <_read+0x58>)
 8006fc8:	f7fe f8ba 	bl	8005140 <serial_getc>
 8006fcc:	2401      	movs	r4, #1
 8006fce:	7028      	strb	r0, [r5, #0]
 8006fd0:	4620      	mov	r0, r4
 8006fd2:	bd70      	pop	{r4, r5, r6, pc}
 8006fd4:	3c03      	subs	r4, #3
 8006fd6:	4b0b      	ldr	r3, [pc, #44]	; (8007004 <_read+0x5c>)
 8006fd8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006fdc:	b158      	cbz	r0, 8006ff6 <_read+0x4e>
 8006fde:	6803      	ldr	r3, [r0, #0]
 8006fe0:	4632      	mov	r2, r6
 8006fe2:	689b      	ldr	r3, [r3, #8]
 8006fe4:	4629      	mov	r1, r5
 8006fe6:	4798      	blx	r3
 8006fe8:	1e04      	subs	r4, r0, #0
 8006fea:	daf1      	bge.n	8006fd0 <_read+0x28>
 8006fec:	f000 fd02 	bl	80079f4 <__errno>
 8006ff0:	4263      	negs	r3, r4
 8006ff2:	6003      	str	r3, [r0, #0]
 8006ff4:	e7ec      	b.n	8006fd0 <_read+0x28>
 8006ff6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8006ffa:	e7e9      	b.n	8006fd0 <_read+0x28>
 8006ffc:	2000138c 	.word	0x2000138c
 8007000:	20002248 	.word	0x20002248
 8007004:	200015f4 	.word	0x200015f4

08007008 <_lseek>:
 8007008:	b570      	push	{r4, r5, r6, lr}
 800700a:	4604      	mov	r4, r0
 800700c:	460d      	mov	r5, r1
 800700e:	4616      	mov	r6, r2
 8007010:	f000 fcf0 	bl	80079f4 <__errno>
 8007014:	2309      	movs	r3, #9
 8007016:	2c02      	cmp	r4, #2
 8007018:	6003      	str	r3, [r0, #0]
 800701a:	dd0b      	ble.n	8007034 <_lseek+0x2c>
 800701c:	3c03      	subs	r4, #3
 800701e:	4b08      	ldr	r3, [pc, #32]	; (8007040 <_lseek+0x38>)
 8007020:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8007024:	b140      	cbz	r0, 8007038 <_lseek+0x30>
 8007026:	6803      	ldr	r3, [r0, #0]
 8007028:	4632      	mov	r2, r6
 800702a:	4629      	mov	r1, r5
 800702c:	69db      	ldr	r3, [r3, #28]
 800702e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007032:	4718      	bx	r3
 8007034:	2000      	movs	r0, #0
 8007036:	bd70      	pop	{r4, r5, r6, pc}
 8007038:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800703c:	bd70      	pop	{r4, r5, r6, pc}
 800703e:	bf00      	nop
 8007040:	200015f4 	.word	0x200015f4

08007044 <software_init_hook>:
 8007044:	b508      	push	{r3, lr}
 8007046:	f7fe f8a9 	bl	800519c <mbed_sdk_init>
 800704a:	f7fb ff3f 	bl	8002ecc <software_init_hook_rtos>
 800704e:	bd08      	pop	{r3, pc}

08007050 <mbed_main>:
 8007050:	4770      	bx	lr

08007052 <__wrap_main>:
 8007052:	b508      	push	{r3, lr}
 8007054:	f7ff fffc 	bl	8007050 <mbed_main>
 8007058:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800705c:	f7f9 bd5e 	b.w	8000b1c <main>

08007060 <_sbrk>:
 8007060:	4a0c      	ldr	r2, [pc, #48]	; (8007094 <_sbrk+0x34>)
 8007062:	6813      	ldr	r3, [r2, #0]
 8007064:	b510      	push	{r4, lr}
 8007066:	4418      	add	r0, r3
 8007068:	f3ef 8108 	mrs	r1, MSP
 800706c:	4288      	cmp	r0, r1
 800706e:	d305      	bcc.n	800707c <_sbrk+0x1c>
 8007070:	4b09      	ldr	r3, [pc, #36]	; (8007098 <_sbrk+0x38>)
 8007072:	220c      	movs	r2, #12
 8007074:	601a      	str	r2, [r3, #0]
 8007076:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800707a:	bd10      	pop	{r4, pc}
 800707c:	4907      	ldr	r1, [pc, #28]	; (800709c <_sbrk+0x3c>)
 800707e:	680c      	ldr	r4, [r1, #0]
 8007080:	b124      	cbz	r4, 800708c <_sbrk+0x2c>
 8007082:	4907      	ldr	r1, [pc, #28]	; (80070a0 <_sbrk+0x40>)
 8007084:	6809      	ldr	r1, [r1, #0]
 8007086:	4421      	add	r1, r4
 8007088:	4288      	cmp	r0, r1
 800708a:	d2f1      	bcs.n	8007070 <_sbrk+0x10>
 800708c:	6010      	str	r0, [r2, #0]
 800708e:	4618      	mov	r0, r3
 8007090:	bd10      	pop	{r4, pc}
 8007092:	bf00      	nop
 8007094:	200001e4 	.word	0x200001e4
 8007098:	20002298 	.word	0x20002298
 800709c:	200016f4 	.word	0x200016f4
 80070a0:	200016f8 	.word	0x200016f8

080070a4 <_exit>:
 80070a4:	4c07      	ldr	r4, [pc, #28]	; (80070c4 <_exit+0x20>)
 80070a6:	b508      	push	{r3, lr}
 80070a8:	6823      	ldr	r3, [r4, #0]
 80070aa:	4605      	mov	r5, r0
 80070ac:	6898      	ldr	r0, [r3, #8]
 80070ae:	f000 fd59 	bl	8007b64 <fflush>
 80070b2:	6823      	ldr	r3, [r4, #0]
 80070b4:	68d8      	ldr	r0, [r3, #12]
 80070b6:	f000 fd55 	bl	8007b64 <fflush>
 80070ba:	b10d      	cbz	r5, 80070c0 <_exit+0x1c>
 80070bc:	f7fb fd60 	bl	8002b80 <mbed_die>
 80070c0:	e7fe      	b.n	80070c0 <_exit+0x1c>
 80070c2:	bf00      	nop
 80070c4:	200001e8 	.word	0x200001e8

080070c8 <__aeabi_atexit>:
 80070c8:	2001      	movs	r0, #1
 80070ca:	4770      	bx	lr

080070cc <__wrap_exit>:
 80070cc:	b508      	push	{r3, lr}
 80070ce:	f7ff ffe9 	bl	80070a4 <_exit>

080070d2 <__malloc_lock>:
 80070d2:	b508      	push	{r3, lr}
 80070d4:	f7fb ff08 	bl	8002ee8 <__rtos_malloc_lock>
 80070d8:	bd08      	pop	{r3, pc}

080070da <__malloc_unlock>:
 80070da:	b508      	push	{r3, lr}
 80070dc:	f7fb ff0c 	bl	8002ef8 <__rtos_malloc_unlock>
 80070e0:	bd08      	pop	{r3, pc}
	...

080070e4 <operator new(unsigned int)>:
 80070e4:	b510      	push	{r4, lr}
 80070e6:	f000 fe3d 	bl	8007d64 <malloc>
 80070ea:	4604      	mov	r4, r0
 80070ec:	b910      	cbnz	r0, 80070f4 <operator new(unsigned int)+0x10>
 80070ee:	4802      	ldr	r0, [pc, #8]	; (80070f8 <operator new(unsigned int)+0x14>)
 80070f0:	f7fb fd8c 	bl	8002c0c <error>
 80070f4:	4620      	mov	r0, r4
 80070f6:	bd10      	pop	{r4, pc}
 80070f8:	0800920f 	.word	0x0800920f

080070fc <operator new[](unsigned int)>:
 80070fc:	b510      	push	{r4, lr}
 80070fe:	f000 fe31 	bl	8007d64 <malloc>
 8007102:	4604      	mov	r4, r0
 8007104:	b910      	cbnz	r0, 800710c <operator new[](unsigned int)+0x10>
 8007106:	4802      	ldr	r0, [pc, #8]	; (8007110 <operator new[](unsigned int)+0x14>)
 8007108:	f7fb fd80 	bl	8002c0c <error>
 800710c:	4620      	mov	r0, r4
 800710e:	bd10      	pop	{r4, pc}
 8007110:	080091f0 	.word	0x080091f0

08007114 <operator delete[](void*)>:
 8007114:	b108      	cbz	r0, 800711a <operator delete[](void*)+0x6>
 8007116:	f000 be2d 	b.w	8007d74 <free>
 800711a:	4770      	bx	lr

0800711c <operator delete(void*)>:
 800711c:	f7ff bffa 	b.w	8007114 <operator delete[](void*)>

08007120 <thread_terminate_hook>:
 8007120:	4b02      	ldr	r3, [pc, #8]	; (800712c <thread_terminate_hook+0xc>)
 8007122:	681b      	ldr	r3, [r3, #0]
 8007124:	b103      	cbz	r3, 8007128 <thread_terminate_hook+0x8>
 8007126:	4718      	bx	r3
 8007128:	4770      	bx	lr
 800712a:	bf00      	nop
 800712c:	200016fc 	.word	0x200016fc

08007130 <rtos::Thread::wait(unsigned long)>:
 8007130:	f7fc bab8 	b.w	80036a4 <osDelay>

08007134 <rtos::Mutex::Mutex()>:
 8007134:	b538      	push	{r3, r4, r5, lr}
 8007136:	f100 0508 	add.w	r5, r0, #8
 800713a:	4604      	mov	r4, r0
 800713c:	2210      	movs	r2, #16
 800713e:	2100      	movs	r1, #0
 8007140:	4628      	mov	r0, r5
 8007142:	f000 fe9a 	bl	8007e7a <memset>
 8007146:	4620      	mov	r0, r4
 8007148:	f840 5f04 	str.w	r5, [r0, #4]!
 800714c:	f7fc fb1c 	bl	8003788 <osMutexCreate>
 8007150:	6020      	str	r0, [r4, #0]
 8007152:	b910      	cbnz	r0, 800715a <rtos::Mutex::Mutex()+0x26>
 8007154:	4802      	ldr	r0, [pc, #8]	; (8007160 <rtos::Mutex::Mutex()+0x2c>)
 8007156:	f7fb fd59 	bl	8002c0c <error>
 800715a:	4620      	mov	r0, r4
 800715c:	bd38      	pop	{r3, r4, r5, pc}
 800715e:	bf00      	nop
 8007160:	0800922c 	.word	0x0800922c

08007164 <rtos::Mutex::lock(unsigned long)>:
 8007164:	6800      	ldr	r0, [r0, #0]
 8007166:	f7fc bb2d 	b.w	80037c4 <osMutexWait>

0800716a <rtos::Mutex::unlock()>:
 800716a:	6800      	ldr	r0, [r0, #0]
 800716c:	f7fc bb52 	b.w	8003814 <osMutexRelease>

08007170 <rtos::Mutex::~Mutex()>:
 8007170:	b510      	push	{r4, lr}
 8007172:	4604      	mov	r4, r0
 8007174:	6800      	ldr	r0, [r0, #0]
 8007176:	f7fc fb93 	bl	80038a0 <osMutexDelete>
 800717a:	4620      	mov	r0, r4
 800717c:	bd10      	pop	{r4, pc}
	...

08007180 <rt_set_PSP>:
 8007180:	f380 8809 	msr	PSP, r0
 8007184:	4770      	bx	lr

08007186 <rt_get_PSP>:
 8007186:	f3ef 8009 	mrs	r0, PSP
 800718a:	4770      	bx	lr

0800718c <os_set_env>:
 800718c:	4668      	mov	r0, sp
 800718e:	f380 8809 	msr	PSP, r0
 8007192:	485a      	ldr	r0, [pc, #360]	; (80072fc <OS_Tick_Handler+0x10>)
 8007194:	7800      	ldrb	r0, [r0, #0]
 8007196:	07c0      	lsls	r0, r0, #31
 8007198:	bf14      	ite	ne
 800719a:	2002      	movne	r0, #2
 800719c:	2003      	moveq	r0, #3
 800719e:	f380 8814 	msr	CONTROL, r0
 80071a2:	4770      	bx	lr

080071a4 <_alloc_box>:
 80071a4:	f8df c158 	ldr.w	r12, [pc, #344]	; 8007300 <OS_Tick_Handler+0x14>
 80071a8:	f3ef 8305 	mrs	r3, IPSR
 80071ac:	061b      	lsls	r3, r3, #24
 80071ae:	bf18      	it	ne
 80071b0:	4760      	bxne	r12
 80071b2:	f3ef 8314 	mrs	r3, CONTROL
 80071b6:	07db      	lsls	r3, r3, #31
 80071b8:	bf08      	it	eq
 80071ba:	4760      	bxeq	r12
 80071bc:	df00      	svc	0
 80071be:	4770      	bx	lr

080071c0 <_free_box>:
 80071c0:	f8df c140 	ldr.w	r12, [pc, #320]	; 8007304 <OS_Tick_Handler+0x18>
 80071c4:	f3ef 8305 	mrs	r3, IPSR
 80071c8:	061b      	lsls	r3, r3, #24
 80071ca:	bf18      	it	ne
 80071cc:	4760      	bxne	r12
 80071ce:	f3ef 8314 	mrs	r3, CONTROL
 80071d2:	07db      	lsls	r3, r3, #31
 80071d4:	bf08      	it	eq
 80071d6:	4760      	bxeq	r12
 80071d8:	df00      	svc	0
 80071da:	4770      	bx	lr

080071dc <SVC_Handler>:
 80071dc:	f3ef 8009 	mrs	r0, PSP
 80071e0:	6981      	ldr	r1, [r0, #24]
 80071e2:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 80071e6:	bbe1      	cbnz	r1, 8007262 <SVC_User>
 80071e8:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80071ec:	b510      	push	{r4, lr}
 80071ee:	47e0      	blx	r12
 80071f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80071f4:	f3ef 8c09 	mrs	r12, PSP
 80071f8:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80071fc:	4b42      	ldr	r3, [pc, #264]	; (8007308 <OS_Tick_Handler+0x1c>)
 80071fe:	e893 0006 	ldmia.w	r3, {r1, r2}
 8007202:	4291      	cmp	r1, r2
 8007204:	bf08      	it	eq
 8007206:	4770      	bxeq	lr
 8007208:	b941      	cbnz	r1, 800721c <SVC_ContextSave>
 800720a:	f01e 0f10 	tst.w	lr, #16
 800720e:	d116      	bne.n	800723e <SVC_ContextRestore>
 8007210:	493e      	ldr	r1, [pc, #248]	; (800730c <OS_Tick_Handler+0x20>)
 8007212:	6808      	ldr	r0, [r1, #0]
 8007214:	f020 0001 	bic.w	r0, r0, #1
 8007218:	6008      	str	r0, [r1, #0]
 800721a:	e010      	b.n	800723e <SVC_ContextRestore>

0800721c <SVC_ContextSave>:
 800721c:	f01e 0f10 	tst.w	lr, #16
 8007220:	bf06      	itte	eq
 8007222:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8007226:	2001      	moveq	r0, #1
 8007228:	2000      	movne	r0, #0
 800722a:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800722e:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8007232:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8007236:	b40c      	push	{r2, r3}
 8007238:	f7fb ff4a 	bl	80030d0 <rt_stk_check>
 800723c:	bc0c      	pop	{r2, r3}

0800723e <SVC_ContextRestore>:
 800723e:	601a      	str	r2, [r3, #0]
 8007240:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8007244:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8007248:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 800724c:	2800      	cmp	r0, #0
 800724e:	bf0e      	itee	eq
 8007250:	f06f 0e02 	mvneq.w	lr, #2
 8007254:	f06f 0e12 	mvnne.w	lr, #18
 8007258:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 800725c:	f38c 8809 	msr	PSP, r12

08007260 <SVC_Exit>:
 8007260:	4770      	bx	lr

08007262 <SVC_User>:
 8007262:	b510      	push	{r4, lr}
 8007264:	4a2a      	ldr	r2, [pc, #168]	; (8007310 <OS_Tick_Handler+0x24>)
 8007266:	6812      	ldr	r2, [r2, #0]
 8007268:	4291      	cmp	r1, r2
 800726a:	d809      	bhi.n	8007280 <SVC_Done>
 800726c:	4c29      	ldr	r4, [pc, #164]	; (8007314 <OS_Tick_Handler+0x28>)
 800726e:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8007272:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8007276:	47a0      	blx	r4
 8007278:	f3ef 8c09 	mrs	r12, PSP
 800727c:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08007280 <SVC_Done>:
 8007280:	bd10      	pop	{r4, pc}

08007282 <PendSV_Handler>:
 8007282:	b510      	push	{r4, lr}
 8007284:	f7fb feb0 	bl	8002fe8 <rt_pop_req>

08007288 <Sys_Switch>:
 8007288:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800728c:	4b1e      	ldr	r3, [pc, #120]	; (8007308 <OS_Tick_Handler+0x1c>)
 800728e:	e893 0006 	ldmia.w	r3, {r1, r2}
 8007292:	4291      	cmp	r1, r2
 8007294:	bf08      	it	eq
 8007296:	4770      	bxeq	lr
 8007298:	f3ef 8c09 	mrs	r12, PSP
 800729c:	f01e 0f10 	tst.w	lr, #16
 80072a0:	bf06      	itte	eq
 80072a2:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80072a6:	2001      	moveq	r0, #1
 80072a8:	2000      	movne	r0, #0
 80072aa:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80072ae:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80072b2:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80072b6:	b40c      	push	{r2, r3}
 80072b8:	f7fb ff0a 	bl	80030d0 <rt_stk_check>
 80072bc:	bc0c      	pop	{r2, r3}
 80072be:	601a      	str	r2, [r3, #0]
 80072c0:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80072c4:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80072c8:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80072cc:	2800      	cmp	r0, #0
 80072ce:	bf0e      	itee	eq
 80072d0:	f06f 0e02 	mvneq.w	lr, #2
 80072d4:	f06f 0e12 	mvnne.w	lr, #18
 80072d8:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80072dc:	f38c 8809 	msr	PSP, r12

080072e0 <Sys_Exit>:
 80072e0:	4770      	bx	lr

080072e2 <SysTick_Handler>:
 80072e2:	b510      	push	{r4, lr}
 80072e4:	f7fb fed6 	bl	8003094 <rt_systick>
 80072e8:	f7ff bfce 	b.w	8007288 <Sys_Switch>

080072ec <OS_Tick_Handler>:
 80072ec:	b510      	push	{r4, lr}
 80072ee:	f7fb fecf 	bl	8003090 <os_tick_irqack>
 80072f2:	f7fb fecf 	bl	8003094 <rt_systick>
 80072f6:	f7ff bfc7 	b.w	8007288 <Sys_Switch>
 80072fa:	0000      	.short	0x0000
 80072fc:	08008ea6 	.word	0x08008ea6
 8007300:	0800313f 	.word	0x0800313f
 8007304:	08003159 	.word	0x08003159
 8007308:	200021c0 	.word	0x200021c0
 800730c:	e000ef34 	.word	0xe000ef34
 8007310:	00000000 	.word	0x00000000
 8007314:	fffffffc 	.word	0xfffffffc

08007318 <Reset_Handler>:
 8007318:	f8df d020 	ldr.w	sp, [pc, #32]	; 800733c <LoopCopyDataInit+0x14>
 800731c:	2100      	movs	r1, #0
 800731e:	e003      	b.n	8007328 <LoopCopyDataInit>

08007320 <CopyDataInit>:
 8007320:	4b07      	ldr	r3, [pc, #28]	; (8007340 <LoopCopyDataInit+0x18>)
 8007322:	585b      	ldr	r3, [r3, r1]
 8007324:	5043      	str	r3, [r0, r1]
 8007326:	3104      	adds	r1, #4

08007328 <LoopCopyDataInit>:
 8007328:	4806      	ldr	r0, [pc, #24]	; (8007344 <LoopCopyDataInit+0x1c>)
 800732a:	4b07      	ldr	r3, [pc, #28]	; (8007348 <LoopCopyDataInit+0x20>)
 800732c:	1842      	adds	r2, r0, r1
 800732e:	429a      	cmp	r2, r3
 8007330:	d3f6      	bcc.n	8007320 <CopyDataInit>
 8007332:	f7fe f83d 	bl	80053b0 <SystemInit>
 8007336:	f7f9 fc77 	bl	8000c28 <_start>
 800733a:	4770      	bx	lr
 800733c:	20020000 	.word	0x20020000
 8007340:	080092f8 	.word	0x080092f8
 8007344:	200001c4 	.word	0x200001c4
 8007348:	2000026c 	.word	0x2000026c

0800734c <ADC_IRQHandler>:
 800734c:	e7fe      	b.n	800734c <ADC_IRQHandler>

0800734e <std::__throw_length_error(char const*)>:
 800734e:	b508      	push	{r3, lr}
 8007350:	f7f9 fc7e 	bl	8000c50 <abort>

08007354 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
 8007354:	4b24      	ldr	r3, [pc, #144]	; (80073e8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x94>)
 8007356:	681a      	ldr	r2, [r3, #0]
 8007358:	07d0      	lsls	r0, r2, #31
 800735a:	bf5c      	itt	pl
 800735c:	2201      	movpl	r2, #1
 800735e:	601a      	strpl	r2, [r3, #0]
 8007360:	4b22      	ldr	r3, [pc, #136]	; (80073ec <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>)
 8007362:	681a      	ldr	r2, [r3, #0]
 8007364:	07d1      	lsls	r1, r2, #31
 8007366:	bf5c      	itt	pl
 8007368:	2201      	movpl	r2, #1
 800736a:	601a      	strpl	r2, [r3, #0]
 800736c:	4b20      	ldr	r3, [pc, #128]	; (80073f0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x9c>)
 800736e:	681a      	ldr	r2, [r3, #0]
 8007370:	07d2      	lsls	r2, r2, #31
 8007372:	bf5c      	itt	pl
 8007374:	2201      	movpl	r2, #1
 8007376:	601a      	strpl	r2, [r3, #0]
 8007378:	4b1e      	ldr	r3, [pc, #120]	; (80073f4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa0>)
 800737a:	681a      	ldr	r2, [r3, #0]
 800737c:	07d0      	lsls	r0, r2, #31
 800737e:	bf5c      	itt	pl
 8007380:	2201      	movpl	r2, #1
 8007382:	601a      	strpl	r2, [r3, #0]
 8007384:	4b1c      	ldr	r3, [pc, #112]	; (80073f8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa4>)
 8007386:	681a      	ldr	r2, [r3, #0]
 8007388:	07d1      	lsls	r1, r2, #31
 800738a:	bf5c      	itt	pl
 800738c:	2201      	movpl	r2, #1
 800738e:	601a      	strpl	r2, [r3, #0]
 8007390:	4b1a      	ldr	r3, [pc, #104]	; (80073fc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa8>)
 8007392:	681a      	ldr	r2, [r3, #0]
 8007394:	07d2      	lsls	r2, r2, #31
 8007396:	bf5c      	itt	pl
 8007398:	2201      	movpl	r2, #1
 800739a:	601a      	strpl	r2, [r3, #0]
 800739c:	4b18      	ldr	r3, [pc, #96]	; (8007400 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xac>)
 800739e:	681a      	ldr	r2, [r3, #0]
 80073a0:	07d0      	lsls	r0, r2, #31
 80073a2:	bf5c      	itt	pl
 80073a4:	2201      	movpl	r2, #1
 80073a6:	601a      	strpl	r2, [r3, #0]
 80073a8:	4b16      	ldr	r3, [pc, #88]	; (8007404 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb0>)
 80073aa:	681a      	ldr	r2, [r3, #0]
 80073ac:	07d1      	lsls	r1, r2, #31
 80073ae:	bf5c      	itt	pl
 80073b0:	2201      	movpl	r2, #1
 80073b2:	601a      	strpl	r2, [r3, #0]
 80073b4:	4b14      	ldr	r3, [pc, #80]	; (8007408 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb4>)
 80073b6:	681a      	ldr	r2, [r3, #0]
 80073b8:	07d2      	lsls	r2, r2, #31
 80073ba:	bf5c      	itt	pl
 80073bc:	2201      	movpl	r2, #1
 80073be:	601a      	strpl	r2, [r3, #0]
 80073c0:	4b12      	ldr	r3, [pc, #72]	; (800740c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb8>)
 80073c2:	681a      	ldr	r2, [r3, #0]
 80073c4:	07d0      	lsls	r0, r2, #31
 80073c6:	bf5c      	itt	pl
 80073c8:	2201      	movpl	r2, #1
 80073ca:	601a      	strpl	r2, [r3, #0]
 80073cc:	4b10      	ldr	r3, [pc, #64]	; (8007410 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xbc>)
 80073ce:	681a      	ldr	r2, [r3, #0]
 80073d0:	07d1      	lsls	r1, r2, #31
 80073d2:	bf5c      	itt	pl
 80073d4:	2201      	movpl	r2, #1
 80073d6:	601a      	strpl	r2, [r3, #0]
 80073d8:	4b0e      	ldr	r3, [pc, #56]	; (8007414 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc0>)
 80073da:	681a      	ldr	r2, [r3, #0]
 80073dc:	07d2      	lsls	r2, r2, #31
 80073de:	bf5c      	itt	pl
 80073e0:	2201      	movpl	r2, #1
 80073e2:	601a      	strpl	r2, [r3, #0]
 80073e4:	4770      	bx	lr
 80073e6:	bf00      	nop
 80073e8:	2000172c 	.word	0x2000172c
 80073ec:	20001728 	.word	0x20001728
 80073f0:	20001724 	.word	0x20001724
 80073f4:	20001720 	.word	0x20001720
 80073f8:	2000171c 	.word	0x2000171c
 80073fc:	20001718 	.word	0x20001718
 8007400:	20001714 	.word	0x20001714
 8007404:	20001710 	.word	0x20001710
 8007408:	2000170c 	.word	0x2000170c
 800740c:	20001708 	.word	0x20001708
 8007410:	20001704 	.word	0x20001704
 8007414:	20001700 	.word	0x20001700

08007418 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
 8007418:	4b24      	ldr	r3, [pc, #144]	; (80074ac <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x94>)
 800741a:	681a      	ldr	r2, [r3, #0]
 800741c:	07d0      	lsls	r0, r2, #31
 800741e:	bf5c      	itt	pl
 8007420:	2201      	movpl	r2, #1
 8007422:	601a      	strpl	r2, [r3, #0]
 8007424:	4b22      	ldr	r3, [pc, #136]	; (80074b0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>)
 8007426:	681a      	ldr	r2, [r3, #0]
 8007428:	07d1      	lsls	r1, r2, #31
 800742a:	bf5c      	itt	pl
 800742c:	2201      	movpl	r2, #1
 800742e:	601a      	strpl	r2, [r3, #0]
 8007430:	4b20      	ldr	r3, [pc, #128]	; (80074b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x9c>)
 8007432:	681a      	ldr	r2, [r3, #0]
 8007434:	07d2      	lsls	r2, r2, #31
 8007436:	bf5c      	itt	pl
 8007438:	2201      	movpl	r2, #1
 800743a:	601a      	strpl	r2, [r3, #0]
 800743c:	4b1e      	ldr	r3, [pc, #120]	; (80074b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa0>)
 800743e:	681a      	ldr	r2, [r3, #0]
 8007440:	07d0      	lsls	r0, r2, #31
 8007442:	bf5c      	itt	pl
 8007444:	2201      	movpl	r2, #1
 8007446:	601a      	strpl	r2, [r3, #0]
 8007448:	4b1c      	ldr	r3, [pc, #112]	; (80074bc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa4>)
 800744a:	681a      	ldr	r2, [r3, #0]
 800744c:	07d1      	lsls	r1, r2, #31
 800744e:	bf5c      	itt	pl
 8007450:	2201      	movpl	r2, #1
 8007452:	601a      	strpl	r2, [r3, #0]
 8007454:	4b1a      	ldr	r3, [pc, #104]	; (80074c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa8>)
 8007456:	681a      	ldr	r2, [r3, #0]
 8007458:	07d2      	lsls	r2, r2, #31
 800745a:	bf5c      	itt	pl
 800745c:	2201      	movpl	r2, #1
 800745e:	601a      	strpl	r2, [r3, #0]
 8007460:	4b18      	ldr	r3, [pc, #96]	; (80074c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xac>)
 8007462:	681a      	ldr	r2, [r3, #0]
 8007464:	07d0      	lsls	r0, r2, #31
 8007466:	bf5c      	itt	pl
 8007468:	2201      	movpl	r2, #1
 800746a:	601a      	strpl	r2, [r3, #0]
 800746c:	4b16      	ldr	r3, [pc, #88]	; (80074c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb0>)
 800746e:	681a      	ldr	r2, [r3, #0]
 8007470:	07d1      	lsls	r1, r2, #31
 8007472:	bf5c      	itt	pl
 8007474:	2201      	movpl	r2, #1
 8007476:	601a      	strpl	r2, [r3, #0]
 8007478:	4b14      	ldr	r3, [pc, #80]	; (80074cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb4>)
 800747a:	681a      	ldr	r2, [r3, #0]
 800747c:	07d2      	lsls	r2, r2, #31
 800747e:	bf5c      	itt	pl
 8007480:	2201      	movpl	r2, #1
 8007482:	601a      	strpl	r2, [r3, #0]
 8007484:	4b12      	ldr	r3, [pc, #72]	; (80074d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb8>)
 8007486:	681a      	ldr	r2, [r3, #0]
 8007488:	07d0      	lsls	r0, r2, #31
 800748a:	bf5c      	itt	pl
 800748c:	2201      	movpl	r2, #1
 800748e:	601a      	strpl	r2, [r3, #0]
 8007490:	4b10      	ldr	r3, [pc, #64]	; (80074d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xbc>)
 8007492:	681a      	ldr	r2, [r3, #0]
 8007494:	07d1      	lsls	r1, r2, #31
 8007496:	bf5c      	itt	pl
 8007498:	2201      	movpl	r2, #1
 800749a:	601a      	strpl	r2, [r3, #0]
 800749c:	4b0e      	ldr	r3, [pc, #56]	; (80074d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc0>)
 800749e:	681a      	ldr	r2, [r3, #0]
 80074a0:	07d2      	lsls	r2, r2, #31
 80074a2:	bf5c      	itt	pl
 80074a4:	2201      	movpl	r2, #1
 80074a6:	601a      	strpl	r2, [r3, #0]
 80074a8:	4770      	bx	lr
 80074aa:	bf00      	nop
 80074ac:	2000175c 	.word	0x2000175c
 80074b0:	20001758 	.word	0x20001758
 80074b4:	20001754 	.word	0x20001754
 80074b8:	20001750 	.word	0x20001750
 80074bc:	2000174c 	.word	0x2000174c
 80074c0:	20001748 	.word	0x20001748
 80074c4:	20001744 	.word	0x20001744
 80074c8:	20001740 	.word	0x20001740
 80074cc:	2000173c 	.word	0x2000173c
 80074d0:	20001738 	.word	0x20001738
 80074d4:	20001734 	.word	0x20001734
 80074d8:	20001730 	.word	0x20001730

080074dc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 80074dc:	4b18      	ldr	r3, [pc, #96]	; (8007540 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 80074de:	681a      	ldr	r2, [r3, #0]
 80074e0:	07d1      	lsls	r1, r2, #31
 80074e2:	bf5c      	itt	pl
 80074e4:	2201      	movpl	r2, #1
 80074e6:	601a      	strpl	r2, [r3, #0]
 80074e8:	4b16      	ldr	r3, [pc, #88]	; (8007544 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 80074ea:	681a      	ldr	r2, [r3, #0]
 80074ec:	07d2      	lsls	r2, r2, #31
 80074ee:	bf5c      	itt	pl
 80074f0:	2201      	movpl	r2, #1
 80074f2:	601a      	strpl	r2, [r3, #0]
 80074f4:	4b14      	ldr	r3, [pc, #80]	; (8007548 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 80074f6:	681a      	ldr	r2, [r3, #0]
 80074f8:	07d0      	lsls	r0, r2, #31
 80074fa:	bf5c      	itt	pl
 80074fc:	2201      	movpl	r2, #1
 80074fe:	601a      	strpl	r2, [r3, #0]
 8007500:	4b12      	ldr	r3, [pc, #72]	; (800754c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 8007502:	681a      	ldr	r2, [r3, #0]
 8007504:	07d1      	lsls	r1, r2, #31
 8007506:	bf5c      	itt	pl
 8007508:	2201      	movpl	r2, #1
 800750a:	601a      	strpl	r2, [r3, #0]
 800750c:	4b10      	ldr	r3, [pc, #64]	; (8007550 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 800750e:	681a      	ldr	r2, [r3, #0]
 8007510:	07d2      	lsls	r2, r2, #31
 8007512:	bf5c      	itt	pl
 8007514:	2201      	movpl	r2, #1
 8007516:	601a      	strpl	r2, [r3, #0]
 8007518:	4b0e      	ldr	r3, [pc, #56]	; (8007554 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 800751a:	681a      	ldr	r2, [r3, #0]
 800751c:	07d0      	lsls	r0, r2, #31
 800751e:	bf5c      	itt	pl
 8007520:	2201      	movpl	r2, #1
 8007522:	601a      	strpl	r2, [r3, #0]
 8007524:	4b0c      	ldr	r3, [pc, #48]	; (8007558 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 8007526:	681a      	ldr	r2, [r3, #0]
 8007528:	07d1      	lsls	r1, r2, #31
 800752a:	bf5c      	itt	pl
 800752c:	2201      	movpl	r2, #1
 800752e:	601a      	strpl	r2, [r3, #0]
 8007530:	4b0a      	ldr	r3, [pc, #40]	; (800755c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 8007532:	681a      	ldr	r2, [r3, #0]
 8007534:	07d2      	lsls	r2, r2, #31
 8007536:	bf5c      	itt	pl
 8007538:	2201      	movpl	r2, #1
 800753a:	601a      	strpl	r2, [r3, #0]
 800753c:	4770      	bx	lr
 800753e:	bf00      	nop
 8007540:	2000177c 	.word	0x2000177c
 8007544:	20001778 	.word	0x20001778
 8007548:	20001774 	.word	0x20001774
 800754c:	20001770 	.word	0x20001770
 8007550:	2000176c 	.word	0x2000176c
 8007554:	20001768 	.word	0x20001768
 8007558:	20001764 	.word	0x20001764
 800755c:	20001760 	.word	0x20001760

08007560 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 8007560:	4b18      	ldr	r3, [pc, #96]	; (80075c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 8007562:	681a      	ldr	r2, [r3, #0]
 8007564:	07d1      	lsls	r1, r2, #31
 8007566:	bf5c      	itt	pl
 8007568:	2201      	movpl	r2, #1
 800756a:	601a      	strpl	r2, [r3, #0]
 800756c:	4b16      	ldr	r3, [pc, #88]	; (80075c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 800756e:	681a      	ldr	r2, [r3, #0]
 8007570:	07d2      	lsls	r2, r2, #31
 8007572:	bf5c      	itt	pl
 8007574:	2201      	movpl	r2, #1
 8007576:	601a      	strpl	r2, [r3, #0]
 8007578:	4b14      	ldr	r3, [pc, #80]	; (80075cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 800757a:	681a      	ldr	r2, [r3, #0]
 800757c:	07d0      	lsls	r0, r2, #31
 800757e:	bf5c      	itt	pl
 8007580:	2201      	movpl	r2, #1
 8007582:	601a      	strpl	r2, [r3, #0]
 8007584:	4b12      	ldr	r3, [pc, #72]	; (80075d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 8007586:	681a      	ldr	r2, [r3, #0]
 8007588:	07d1      	lsls	r1, r2, #31
 800758a:	bf5c      	itt	pl
 800758c:	2201      	movpl	r2, #1
 800758e:	601a      	strpl	r2, [r3, #0]
 8007590:	4b10      	ldr	r3, [pc, #64]	; (80075d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 8007592:	681a      	ldr	r2, [r3, #0]
 8007594:	07d2      	lsls	r2, r2, #31
 8007596:	bf5c      	itt	pl
 8007598:	2201      	movpl	r2, #1
 800759a:	601a      	strpl	r2, [r3, #0]
 800759c:	4b0e      	ldr	r3, [pc, #56]	; (80075d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 800759e:	681a      	ldr	r2, [r3, #0]
 80075a0:	07d0      	lsls	r0, r2, #31
 80075a2:	bf5c      	itt	pl
 80075a4:	2201      	movpl	r2, #1
 80075a6:	601a      	strpl	r2, [r3, #0]
 80075a8:	4b0c      	ldr	r3, [pc, #48]	; (80075dc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 80075aa:	681a      	ldr	r2, [r3, #0]
 80075ac:	07d1      	lsls	r1, r2, #31
 80075ae:	bf5c      	itt	pl
 80075b0:	2201      	movpl	r2, #1
 80075b2:	601a      	strpl	r2, [r3, #0]
 80075b4:	4b0a      	ldr	r3, [pc, #40]	; (80075e0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 80075b6:	681a      	ldr	r2, [r3, #0]
 80075b8:	07d2      	lsls	r2, r2, #31
 80075ba:	bf5c      	itt	pl
 80075bc:	2201      	movpl	r2, #1
 80075be:	601a      	strpl	r2, [r3, #0]
 80075c0:	4770      	bx	lr
 80075c2:	bf00      	nop
 80075c4:	2000179c 	.word	0x2000179c
 80075c8:	20001798 	.word	0x20001798
 80075cc:	20001794 	.word	0x20001794
 80075d0:	20001790 	.word	0x20001790
 80075d4:	2000178c 	.word	0x2000178c
 80075d8:	20001788 	.word	0x20001788
 80075dc:	20001784 	.word	0x20001784
 80075e0:	20001780 	.word	0x20001780

080075e4 <__aeabi_drsub>:
 80075e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80075e8:	e002      	b.n	80075f0 <__adddf3>
 80075ea:	bf00      	nop

080075ec <__aeabi_dsub>:
 80075ec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080075f0 <__adddf3>:
 80075f0:	b530      	push	{r4, r5, lr}
 80075f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80075f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80075fa:	ea94 0f05 	teq	r4, r5
 80075fe:	bf08      	it	eq
 8007600:	ea90 0f02 	teqeq	r0, r2
 8007604:	bf1f      	itttt	ne
 8007606:	ea54 0c00 	orrsne.w	r12, r4, r0
 800760a:	ea55 0c02 	orrsne.w	r12, r5, r2
 800760e:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8007612:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8007616:	f000 80e2 	beq.w	80077de <__adddf3+0x1ee>
 800761a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800761e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007622:	bfb8      	it	lt
 8007624:	426d      	neglt	r5, r5
 8007626:	dd0c      	ble.n	8007642 <__adddf3+0x52>
 8007628:	442c      	add	r4, r5
 800762a:	ea80 0202 	eor.w	r2, r0, r2
 800762e:	ea81 0303 	eor.w	r3, r1, r3
 8007632:	ea82 0000 	eor.w	r0, r2, r0
 8007636:	ea83 0101 	eor.w	r1, r3, r1
 800763a:	ea80 0202 	eor.w	r2, r0, r2
 800763e:	ea81 0303 	eor.w	r3, r1, r3
 8007642:	2d36      	cmp	r5, #54	; 0x36
 8007644:	bf88      	it	hi
 8007646:	bd30      	pophi	{r4, r5, pc}
 8007648:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800764c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007650:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8007654:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 8007658:	d002      	beq.n	8007660 <__adddf3+0x70>
 800765a:	4240      	negs	r0, r0
 800765c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007660:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007664:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007668:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 800766c:	d002      	beq.n	8007674 <__adddf3+0x84>
 800766e:	4252      	negs	r2, r2
 8007670:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007674:	ea94 0f05 	teq	r4, r5
 8007678:	f000 80a7 	beq.w	80077ca <__adddf3+0x1da>
 800767c:	f1a4 0401 	sub.w	r4, r4, #1
 8007680:	f1d5 0e20 	rsbs	lr, r5, #32
 8007684:	db0d      	blt.n	80076a2 <__adddf3+0xb2>
 8007686:	fa02 fc0e 	lsl.w	r12, r2, lr
 800768a:	fa22 f205 	lsr.w	r2, r2, r5
 800768e:	1880      	adds	r0, r0, r2
 8007690:	f141 0100 	adc.w	r1, r1, #0
 8007694:	fa03 f20e 	lsl.w	r2, r3, lr
 8007698:	1880      	adds	r0, r0, r2
 800769a:	fa43 f305 	asr.w	r3, r3, r5
 800769e:	4159      	adcs	r1, r3
 80076a0:	e00e      	b.n	80076c0 <__adddf3+0xd0>
 80076a2:	f1a5 0520 	sub.w	r5, r5, #32
 80076a6:	f10e 0e20 	add.w	lr, lr, #32
 80076aa:	2a01      	cmp	r2, #1
 80076ac:	fa03 fc0e 	lsl.w	r12, r3, lr
 80076b0:	bf28      	it	cs
 80076b2:	f04c 0c02 	orrcs.w	r12, r12, #2
 80076b6:	fa43 f305 	asr.w	r3, r3, r5
 80076ba:	18c0      	adds	r0, r0, r3
 80076bc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80076c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80076c4:	d507      	bpl.n	80076d6 <__adddf3+0xe6>
 80076c6:	f04f 0e00 	mov.w	lr, #0
 80076ca:	f1dc 0c00 	rsbs	r12, r12, #0
 80076ce:	eb7e 0000 	sbcs.w	r0, lr, r0
 80076d2:	eb6e 0101 	sbc.w	r1, lr, r1
 80076d6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80076da:	d31b      	bcc.n	8007714 <__adddf3+0x124>
 80076dc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80076e0:	d30c      	bcc.n	80076fc <__adddf3+0x10c>
 80076e2:	0849      	lsrs	r1, r1, #1
 80076e4:	ea5f 0030 	movs.w	r0, r0, rrx
 80076e8:	ea4f 0c3c 	mov.w	r12, r12, rrx
 80076ec:	f104 0401 	add.w	r4, r4, #1
 80076f0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80076f4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80076f8:	f080 809a 	bcs.w	8007830 <__adddf3+0x240>
 80076fc:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8007700:	bf08      	it	eq
 8007702:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8007706:	f150 0000 	adcs.w	r0, r0, #0
 800770a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800770e:	ea41 0105 	orr.w	r1, r1, r5
 8007712:	bd30      	pop	{r4, r5, pc}
 8007714:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8007718:	4140      	adcs	r0, r0
 800771a:	eb41 0101 	adc.w	r1, r1, r1
 800771e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007722:	f1a4 0401 	sub.w	r4, r4, #1
 8007726:	d1e9      	bne.n	80076fc <__adddf3+0x10c>
 8007728:	f091 0f00 	teq	r1, #0
 800772c:	bf04      	itt	eq
 800772e:	4601      	moveq	r1, r0
 8007730:	2000      	moveq	r0, #0
 8007732:	fab1 f381 	clz	r3, r1
 8007736:	bf08      	it	eq
 8007738:	3320      	addeq	r3, #32
 800773a:	f1a3 030b 	sub.w	r3, r3, #11
 800773e:	f1b3 0220 	subs.w	r2, r3, #32
 8007742:	da0c      	bge.n	800775e <__adddf3+0x16e>
 8007744:	320c      	adds	r2, #12
 8007746:	dd08      	ble.n	800775a <__adddf3+0x16a>
 8007748:	f102 0c14 	add.w	r12, r2, #20
 800774c:	f1c2 020c 	rsb	r2, r2, #12
 8007750:	fa01 f00c 	lsl.w	r0, r1, r12
 8007754:	fa21 f102 	lsr.w	r1, r1, r2
 8007758:	e00c      	b.n	8007774 <__adddf3+0x184>
 800775a:	f102 0214 	add.w	r2, r2, #20
 800775e:	bfd8      	it	le
 8007760:	f1c2 0c20 	rsble	r12, r2, #32
 8007764:	fa01 f102 	lsl.w	r1, r1, r2
 8007768:	fa20 fc0c 	lsr.w	r12, r0, r12
 800776c:	bfdc      	itt	le
 800776e:	ea41 010c 	orrle.w	r1, r1, r12
 8007772:	4090      	lslle	r0, r2
 8007774:	1ae4      	subs	r4, r4, r3
 8007776:	bfa2      	ittt	ge
 8007778:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800777c:	4329      	orrge	r1, r5
 800777e:	bd30      	popge	{r4, r5, pc}
 8007780:	ea6f 0404 	mvn.w	r4, r4
 8007784:	3c1f      	subs	r4, #31
 8007786:	da1c      	bge.n	80077c2 <__adddf3+0x1d2>
 8007788:	340c      	adds	r4, #12
 800778a:	dc0e      	bgt.n	80077aa <__adddf3+0x1ba>
 800778c:	f104 0414 	add.w	r4, r4, #20
 8007790:	f1c4 0220 	rsb	r2, r4, #32
 8007794:	fa20 f004 	lsr.w	r0, r0, r4
 8007798:	fa01 f302 	lsl.w	r3, r1, r2
 800779c:	ea40 0003 	orr.w	r0, r0, r3
 80077a0:	fa21 f304 	lsr.w	r3, r1, r4
 80077a4:	ea45 0103 	orr.w	r1, r5, r3
 80077a8:	bd30      	pop	{r4, r5, pc}
 80077aa:	f1c4 040c 	rsb	r4, r4, #12
 80077ae:	f1c4 0220 	rsb	r2, r4, #32
 80077b2:	fa20 f002 	lsr.w	r0, r0, r2
 80077b6:	fa01 f304 	lsl.w	r3, r1, r4
 80077ba:	ea40 0003 	orr.w	r0, r0, r3
 80077be:	4629      	mov	r1, r5
 80077c0:	bd30      	pop	{r4, r5, pc}
 80077c2:	fa21 f004 	lsr.w	r0, r1, r4
 80077c6:	4629      	mov	r1, r5
 80077c8:	bd30      	pop	{r4, r5, pc}
 80077ca:	f094 0f00 	teq	r4, #0
 80077ce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80077d2:	bf06      	itte	eq
 80077d4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80077d8:	3401      	addeq	r4, #1
 80077da:	3d01      	subne	r5, #1
 80077dc:	e74e      	b.n	800767c <__adddf3+0x8c>
 80077de:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80077e2:	bf18      	it	ne
 80077e4:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 80077e8:	d029      	beq.n	800783e <__adddf3+0x24e>
 80077ea:	ea94 0f05 	teq	r4, r5
 80077ee:	bf08      	it	eq
 80077f0:	ea90 0f02 	teqeq	r0, r2
 80077f4:	d005      	beq.n	8007802 <__adddf3+0x212>
 80077f6:	ea54 0c00 	orrs.w	r12, r4, r0
 80077fa:	bf04      	itt	eq
 80077fc:	4619      	moveq	r1, r3
 80077fe:	4610      	moveq	r0, r2
 8007800:	bd30      	pop	{r4, r5, pc}
 8007802:	ea91 0f03 	teq	r1, r3
 8007806:	bf1e      	ittt	ne
 8007808:	2100      	movne	r1, #0
 800780a:	2000      	movne	r0, #0
 800780c:	bd30      	popne	{r4, r5, pc}
 800780e:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8007812:	d105      	bne.n	8007820 <__adddf3+0x230>
 8007814:	0040      	lsls	r0, r0, #1
 8007816:	4149      	adcs	r1, r1
 8007818:	bf28      	it	cs
 800781a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800781e:	bd30      	pop	{r4, r5, pc}
 8007820:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007824:	bf3c      	itt	cc
 8007826:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800782a:	bd30      	popcc	{r4, r5, pc}
 800782c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007830:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007834:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007838:	f04f 0000 	mov.w	r0, #0
 800783c:	bd30      	pop	{r4, r5, pc}
 800783e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8007842:	bf1a      	itte	ne
 8007844:	4619      	movne	r1, r3
 8007846:	4610      	movne	r0, r2
 8007848:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 800784c:	bf1c      	itt	ne
 800784e:	460b      	movne	r3, r1
 8007850:	4602      	movne	r2, r0
 8007852:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007856:	bf06      	itte	eq
 8007858:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800785c:	ea91 0f03 	teqeq	r1, r3
 8007860:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007864:	bd30      	pop	{r4, r5, pc}
 8007866:	bf00      	nop

08007868 <__aeabi_ui2d>:
 8007868:	f090 0f00 	teq	r0, #0
 800786c:	bf04      	itt	eq
 800786e:	2100      	moveq	r1, #0
 8007870:	4770      	bxeq	lr
 8007872:	b530      	push	{r4, r5, lr}
 8007874:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007878:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800787c:	f04f 0500 	mov.w	r5, #0
 8007880:	f04f 0100 	mov.w	r1, #0
 8007884:	e750      	b.n	8007728 <__adddf3+0x138>
 8007886:	bf00      	nop

08007888 <__aeabi_i2d>:
 8007888:	f090 0f00 	teq	r0, #0
 800788c:	bf04      	itt	eq
 800788e:	2100      	moveq	r1, #0
 8007890:	4770      	bxeq	lr
 8007892:	b530      	push	{r4, r5, lr}
 8007894:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007898:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800789c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80078a0:	bf48      	it	mi
 80078a2:	4240      	negmi	r0, r0
 80078a4:	f04f 0100 	mov.w	r1, #0
 80078a8:	e73e      	b.n	8007728 <__adddf3+0x138>
 80078aa:	bf00      	nop

080078ac <__aeabi_f2d>:
 80078ac:	0042      	lsls	r2, r0, #1
 80078ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80078b2:	ea4f 0131 	mov.w	r1, r1, rrx
 80078b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80078ba:	bf1f      	itttt	ne
 80078bc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80078c0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80078c4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80078c8:	4770      	bxne	lr
 80078ca:	f092 0f00 	teq	r2, #0
 80078ce:	bf14      	ite	ne
 80078d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80078d4:	4770      	bxeq	lr
 80078d6:	b530      	push	{r4, r5, lr}
 80078d8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80078dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80078e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80078e4:	e720      	b.n	8007728 <__adddf3+0x138>
 80078e6:	bf00      	nop

080078e8 <__aeabi_ul2d>:
 80078e8:	ea50 0201 	orrs.w	r2, r0, r1
 80078ec:	bf08      	it	eq
 80078ee:	4770      	bxeq	lr
 80078f0:	b530      	push	{r4, r5, lr}
 80078f2:	f04f 0500 	mov.w	r5, #0
 80078f6:	e00a      	b.n	800790e <__aeabi_l2d+0x16>

080078f8 <__aeabi_l2d>:
 80078f8:	ea50 0201 	orrs.w	r2, r0, r1
 80078fc:	bf08      	it	eq
 80078fe:	4770      	bxeq	lr
 8007900:	b530      	push	{r4, r5, lr}
 8007902:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007906:	d502      	bpl.n	800790e <__aeabi_l2d+0x16>
 8007908:	4240      	negs	r0, r0
 800790a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800790e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007912:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007916:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800791a:	f43f aedc 	beq.w	80076d6 <__adddf3+0xe6>
 800791e:	f04f 0203 	mov.w	r2, #3
 8007922:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8007926:	bf18      	it	ne
 8007928:	3203      	addne	r2, #3
 800792a:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800792e:	bf18      	it	ne
 8007930:	3203      	addne	r2, #3
 8007932:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8007936:	f1c2 0320 	rsb	r3, r2, #32
 800793a:	fa00 fc03 	lsl.w	r12, r0, r3
 800793e:	fa20 f002 	lsr.w	r0, r0, r2
 8007942:	fa01 fe03 	lsl.w	lr, r1, r3
 8007946:	ea40 000e 	orr.w	r0, r0, lr
 800794a:	fa21 f102 	lsr.w	r1, r1, r2
 800794e:	4414      	add	r4, r2
 8007950:	e6c1      	b.n	80076d6 <__adddf3+0xe6>
 8007952:	bf00      	nop

08007954 <__aeabi_d2f>:
 8007954:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007958:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 800795c:	bf24      	itt	cs
 800795e:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 8007962:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 8007966:	d90d      	bls.n	8007984 <__aeabi_d2f+0x30>
 8007968:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 800796c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007970:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 8007974:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007978:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 800797c:	bf08      	it	eq
 800797e:	f020 0001 	biceq.w	r0, r0, #1
 8007982:	4770      	bx	lr
 8007984:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007988:	d121      	bne.n	80079ce <__aeabi_d2f+0x7a>
 800798a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800798e:	bfbc      	itt	lt
 8007990:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007994:	4770      	bxlt	lr
 8007996:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800799a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 800799e:	f1c2 0218 	rsb	r2, r2, #24
 80079a2:	f1c2 0c20 	rsb	r12, r2, #32
 80079a6:	fa10 f30c 	lsls.w	r3, r0, r12
 80079aa:	fa20 f002 	lsr.w	r0, r0, r2
 80079ae:	bf18      	it	ne
 80079b0:	f040 0001 	orrne.w	r0, r0, #1
 80079b4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80079b8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80079bc:	fa03 fc0c 	lsl.w	r12, r3, r12
 80079c0:	ea40 000c 	orr.w	r0, r0, r12
 80079c4:	fa23 f302 	lsr.w	r3, r3, r2
 80079c8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80079cc:	e7cc      	b.n	8007968 <__aeabi_d2f+0x14>
 80079ce:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80079d2:	d107      	bne.n	80079e4 <__aeabi_d2f+0x90>
 80079d4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80079d8:	bf1e      	ittt	ne
 80079da:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80079de:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80079e2:	4770      	bxne	lr
 80079e4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80079e8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80079ec:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80079f0:	4770      	bx	lr
 80079f2:	bf00      	nop

080079f4 <__errno>:
 80079f4:	4b01      	ldr	r3, [pc, #4]	; (80079fc <__errno+0x8>)
 80079f6:	6818      	ldr	r0, [r3, #0]
 80079f8:	4770      	bx	lr
 80079fa:	bf00      	nop
 80079fc:	200001e8 	.word	0x200001e8

08007a00 <__sflush_r>:
 8007a00:	898a      	ldrh	r2, [r1, #12]
 8007a02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007a06:	4605      	mov	r5, r0
 8007a08:	0710      	lsls	r0, r2, #28
 8007a0a:	460c      	mov	r4, r1
 8007a0c:	d45a      	bmi.n	8007ac4 <__sflush_r+0xc4>
 8007a0e:	684b      	ldr	r3, [r1, #4]
 8007a10:	2b00      	cmp	r3, #0
 8007a12:	dc05      	bgt.n	8007a20 <__sflush_r+0x20>
 8007a14:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8007a16:	2b00      	cmp	r3, #0
 8007a18:	dc02      	bgt.n	8007a20 <__sflush_r+0x20>
 8007a1a:	2000      	movs	r0, #0
 8007a1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007a22:	2e00      	cmp	r6, #0
 8007a24:	d0f9      	beq.n	8007a1a <__sflush_r+0x1a>
 8007a26:	2300      	movs	r3, #0
 8007a28:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007a2c:	682f      	ldr	r7, [r5, #0]
 8007a2e:	602b      	str	r3, [r5, #0]
 8007a30:	d033      	beq.n	8007a9a <__sflush_r+0x9a>
 8007a32:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007a34:	89a3      	ldrh	r3, [r4, #12]
 8007a36:	075a      	lsls	r2, r3, #29
 8007a38:	d505      	bpl.n	8007a46 <__sflush_r+0x46>
 8007a3a:	6863      	ldr	r3, [r4, #4]
 8007a3c:	1ac0      	subs	r0, r0, r3
 8007a3e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007a40:	b10b      	cbz	r3, 8007a46 <__sflush_r+0x46>
 8007a42:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007a44:	1ac0      	subs	r0, r0, r3
 8007a46:	2300      	movs	r3, #0
 8007a48:	4602      	mov	r2, r0
 8007a4a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007a4c:	6a21      	ldr	r1, [r4, #32]
 8007a4e:	4628      	mov	r0, r5
 8007a50:	47b0      	blx	r6
 8007a52:	1c43      	adds	r3, r0, #1
 8007a54:	89a3      	ldrh	r3, [r4, #12]
 8007a56:	d106      	bne.n	8007a66 <__sflush_r+0x66>
 8007a58:	6829      	ldr	r1, [r5, #0]
 8007a5a:	291d      	cmp	r1, #29
 8007a5c:	d84b      	bhi.n	8007af6 <__sflush_r+0xf6>
 8007a5e:	4a2b      	ldr	r2, [pc, #172]	; (8007b0c <__sflush_r+0x10c>)
 8007a60:	40ca      	lsrs	r2, r1
 8007a62:	07d6      	lsls	r6, r2, #31
 8007a64:	d547      	bpl.n	8007af6 <__sflush_r+0xf6>
 8007a66:	2200      	movs	r2, #0
 8007a68:	6062      	str	r2, [r4, #4]
 8007a6a:	04d9      	lsls	r1, r3, #19
 8007a6c:	6922      	ldr	r2, [r4, #16]
 8007a6e:	6022      	str	r2, [r4, #0]
 8007a70:	d504      	bpl.n	8007a7c <__sflush_r+0x7c>
 8007a72:	1c42      	adds	r2, r0, #1
 8007a74:	d101      	bne.n	8007a7a <__sflush_r+0x7a>
 8007a76:	682b      	ldr	r3, [r5, #0]
 8007a78:	b903      	cbnz	r3, 8007a7c <__sflush_r+0x7c>
 8007a7a:	6560      	str	r0, [r4, #84]	; 0x54
 8007a7c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007a7e:	602f      	str	r7, [r5, #0]
 8007a80:	2900      	cmp	r1, #0
 8007a82:	d0ca      	beq.n	8007a1a <__sflush_r+0x1a>
 8007a84:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007a88:	4299      	cmp	r1, r3
 8007a8a:	d002      	beq.n	8007a92 <__sflush_r+0x92>
 8007a8c:	4628      	mov	r0, r5
 8007a8e:	f7ff f9ff 	bl	8006e90 <__wrap__free_r>
 8007a92:	2000      	movs	r0, #0
 8007a94:	6360      	str	r0, [r4, #52]	; 0x34
 8007a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a9a:	6a21      	ldr	r1, [r4, #32]
 8007a9c:	2301      	movs	r3, #1
 8007a9e:	4628      	mov	r0, r5
 8007aa0:	47b0      	blx	r6
 8007aa2:	1c41      	adds	r1, r0, #1
 8007aa4:	d1c6      	bne.n	8007a34 <__sflush_r+0x34>
 8007aa6:	682b      	ldr	r3, [r5, #0]
 8007aa8:	2b00      	cmp	r3, #0
 8007aaa:	d0c3      	beq.n	8007a34 <__sflush_r+0x34>
 8007aac:	2b1d      	cmp	r3, #29
 8007aae:	d001      	beq.n	8007ab4 <__sflush_r+0xb4>
 8007ab0:	2b16      	cmp	r3, #22
 8007ab2:	d101      	bne.n	8007ab8 <__sflush_r+0xb8>
 8007ab4:	602f      	str	r7, [r5, #0]
 8007ab6:	e7b0      	b.n	8007a1a <__sflush_r+0x1a>
 8007ab8:	89a3      	ldrh	r3, [r4, #12]
 8007aba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007abe:	81a3      	strh	r3, [r4, #12]
 8007ac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ac4:	690f      	ldr	r7, [r1, #16]
 8007ac6:	2f00      	cmp	r7, #0
 8007ac8:	d0a7      	beq.n	8007a1a <__sflush_r+0x1a>
 8007aca:	0793      	lsls	r3, r2, #30
 8007acc:	680e      	ldr	r6, [r1, #0]
 8007ace:	bf08      	it	eq
 8007ad0:	694b      	ldreq	r3, [r1, #20]
 8007ad2:	600f      	str	r7, [r1, #0]
 8007ad4:	bf18      	it	ne
 8007ad6:	2300      	movne	r3, #0
 8007ad8:	eba6 0807 	sub.w	r8, r6, r7
 8007adc:	608b      	str	r3, [r1, #8]
 8007ade:	f1b8 0f00 	cmp.w	r8, #0
 8007ae2:	dd9a      	ble.n	8007a1a <__sflush_r+0x1a>
 8007ae4:	4643      	mov	r3, r8
 8007ae6:	463a      	mov	r2, r7
 8007ae8:	6a21      	ldr	r1, [r4, #32]
 8007aea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007aec:	4628      	mov	r0, r5
 8007aee:	47b0      	blx	r6
 8007af0:	2800      	cmp	r0, #0
 8007af2:	dc07      	bgt.n	8007b04 <__sflush_r+0x104>
 8007af4:	89a3      	ldrh	r3, [r4, #12]
 8007af6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007afa:	81a3      	strh	r3, [r4, #12]
 8007afc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b04:	4407      	add	r7, r0
 8007b06:	eba8 0800 	sub.w	r8, r8, r0
 8007b0a:	e7e8      	b.n	8007ade <__sflush_r+0xde>
 8007b0c:	20400001 	.word	0x20400001

08007b10 <_fflush_r>:
 8007b10:	b538      	push	{r3, r4, r5, lr}
 8007b12:	690b      	ldr	r3, [r1, #16]
 8007b14:	4605      	mov	r5, r0
 8007b16:	460c      	mov	r4, r1
 8007b18:	b1db      	cbz	r3, 8007b52 <_fflush_r+0x42>
 8007b1a:	b118      	cbz	r0, 8007b24 <_fflush_r+0x14>
 8007b1c:	6983      	ldr	r3, [r0, #24]
 8007b1e:	b90b      	cbnz	r3, 8007b24 <_fflush_r+0x14>
 8007b20:	f000 f872 	bl	8007c08 <__sinit>
 8007b24:	4b0c      	ldr	r3, [pc, #48]	; (8007b58 <_fflush_r+0x48>)
 8007b26:	429c      	cmp	r4, r3
 8007b28:	d109      	bne.n	8007b3e <_fflush_r+0x2e>
 8007b2a:	686c      	ldr	r4, [r5, #4]
 8007b2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007b30:	b17b      	cbz	r3, 8007b52 <_fflush_r+0x42>
 8007b32:	4621      	mov	r1, r4
 8007b34:	4628      	mov	r0, r5
 8007b36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007b3a:	f7ff bf61 	b.w	8007a00 <__sflush_r>
 8007b3e:	4b07      	ldr	r3, [pc, #28]	; (8007b5c <_fflush_r+0x4c>)
 8007b40:	429c      	cmp	r4, r3
 8007b42:	d101      	bne.n	8007b48 <_fflush_r+0x38>
 8007b44:	68ac      	ldr	r4, [r5, #8]
 8007b46:	e7f1      	b.n	8007b2c <_fflush_r+0x1c>
 8007b48:	4b05      	ldr	r3, [pc, #20]	; (8007b60 <_fflush_r+0x50>)
 8007b4a:	429c      	cmp	r4, r3
 8007b4c:	bf08      	it	eq
 8007b4e:	68ec      	ldreq	r4, [r5, #12]
 8007b50:	e7ec      	b.n	8007b2c <_fflush_r+0x1c>
 8007b52:	2000      	movs	r0, #0
 8007b54:	bd38      	pop	{r3, r4, r5, pc}
 8007b56:	bf00      	nop
 8007b58:	08009274 	.word	0x08009274
 8007b5c:	08009294 	.word	0x08009294
 8007b60:	08009254 	.word	0x08009254

08007b64 <fflush>:
 8007b64:	4601      	mov	r1, r0
 8007b66:	b920      	cbnz	r0, 8007b72 <fflush+0xe>
 8007b68:	4b04      	ldr	r3, [pc, #16]	; (8007b7c <fflush+0x18>)
 8007b6a:	4905      	ldr	r1, [pc, #20]	; (8007b80 <fflush+0x1c>)
 8007b6c:	6818      	ldr	r0, [r3, #0]
 8007b6e:	f000 b8b7 	b.w	8007ce0 <_fwalk_reent>
 8007b72:	4b04      	ldr	r3, [pc, #16]	; (8007b84 <fflush+0x20>)
 8007b74:	6818      	ldr	r0, [r3, #0]
 8007b76:	f7ff bfcb 	b.w	8007b10 <_fflush_r>
 8007b7a:	bf00      	nop
 8007b7c:	080092b4 	.word	0x080092b4
 8007b80:	08007b11 	.word	0x08007b11
 8007b84:	200001e8 	.word	0x200001e8

08007b88 <_cleanup_r>:
 8007b88:	4901      	ldr	r1, [pc, #4]	; (8007b90 <_cleanup_r+0x8>)
 8007b8a:	f000 b8a9 	b.w	8007ce0 <_fwalk_reent>
 8007b8e:	bf00      	nop
 8007b90:	08007b11 	.word	0x08007b11

08007b94 <std.isra.0>:
 8007b94:	2300      	movs	r3, #0
 8007b96:	b510      	push	{r4, lr}
 8007b98:	4604      	mov	r4, r0
 8007b9a:	6003      	str	r3, [r0, #0]
 8007b9c:	6043      	str	r3, [r0, #4]
 8007b9e:	6083      	str	r3, [r0, #8]
 8007ba0:	8181      	strh	r1, [r0, #12]
 8007ba2:	6643      	str	r3, [r0, #100]	; 0x64
 8007ba4:	81c2      	strh	r2, [r0, #14]
 8007ba6:	6103      	str	r3, [r0, #16]
 8007ba8:	6143      	str	r3, [r0, #20]
 8007baa:	6183      	str	r3, [r0, #24]
 8007bac:	4619      	mov	r1, r3
 8007bae:	2208      	movs	r2, #8
 8007bb0:	305c      	adds	r0, #92	; 0x5c
 8007bb2:	f000 f962 	bl	8007e7a <memset>
 8007bb6:	4b05      	ldr	r3, [pc, #20]	; (8007bcc <std.isra.0+0x38>)
 8007bb8:	6263      	str	r3, [r4, #36]	; 0x24
 8007bba:	4b05      	ldr	r3, [pc, #20]	; (8007bd0 <std.isra.0+0x3c>)
 8007bbc:	62a3      	str	r3, [r4, #40]	; 0x28
 8007bbe:	4b05      	ldr	r3, [pc, #20]	; (8007bd4 <std.isra.0+0x40>)
 8007bc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007bc2:	4b05      	ldr	r3, [pc, #20]	; (8007bd8 <std.isra.0+0x44>)
 8007bc4:	6224      	str	r4, [r4, #32]
 8007bc6:	6323      	str	r3, [r4, #48]	; 0x30
 8007bc8:	bd10      	pop	{r4, pc}
 8007bca:	bf00      	nop
 8007bcc:	0800838d 	.word	0x0800838d
 8007bd0:	080083af 	.word	0x080083af
 8007bd4:	080083e7 	.word	0x080083e7
 8007bd8:	0800840b 	.word	0x0800840b

08007bdc <__sfmoreglue>:
 8007bdc:	b570      	push	{r4, r5, r6, lr}
 8007bde:	1e4a      	subs	r2, r1, #1
 8007be0:	2568      	movs	r5, #104	; 0x68
 8007be2:	4355      	muls	r5, r2
 8007be4:	460e      	mov	r6, r1
 8007be6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8007bea:	f7ff f94d 	bl	8006e88 <__wrap__malloc_r>
 8007bee:	4604      	mov	r4, r0
 8007bf0:	b140      	cbz	r0, 8007c04 <__sfmoreglue+0x28>
 8007bf2:	2100      	movs	r1, #0
 8007bf4:	e880 0042 	stmia.w	r0, {r1, r6}
 8007bf8:	300c      	adds	r0, #12
 8007bfa:	60a0      	str	r0, [r4, #8]
 8007bfc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007c00:	f000 f93b 	bl	8007e7a <memset>
 8007c04:	4620      	mov	r0, r4
 8007c06:	bd70      	pop	{r4, r5, r6, pc}

08007c08 <__sinit>:
 8007c08:	6983      	ldr	r3, [r0, #24]
 8007c0a:	b510      	push	{r4, lr}
 8007c0c:	4604      	mov	r4, r0
 8007c0e:	bb33      	cbnz	r3, 8007c5e <__sinit+0x56>
 8007c10:	6483      	str	r3, [r0, #72]	; 0x48
 8007c12:	64c3      	str	r3, [r0, #76]	; 0x4c
 8007c14:	6503      	str	r3, [r0, #80]	; 0x50
 8007c16:	4b12      	ldr	r3, [pc, #72]	; (8007c60 <__sinit+0x58>)
 8007c18:	4a12      	ldr	r2, [pc, #72]	; (8007c64 <__sinit+0x5c>)
 8007c1a:	681b      	ldr	r3, [r3, #0]
 8007c1c:	6282      	str	r2, [r0, #40]	; 0x28
 8007c1e:	4298      	cmp	r0, r3
 8007c20:	bf04      	itt	eq
 8007c22:	2301      	moveq	r3, #1
 8007c24:	6183      	streq	r3, [r0, #24]
 8007c26:	f000 f81f 	bl	8007c68 <__sfp>
 8007c2a:	6060      	str	r0, [r4, #4]
 8007c2c:	4620      	mov	r0, r4
 8007c2e:	f000 f81b 	bl	8007c68 <__sfp>
 8007c32:	60a0      	str	r0, [r4, #8]
 8007c34:	4620      	mov	r0, r4
 8007c36:	f000 f817 	bl	8007c68 <__sfp>
 8007c3a:	2200      	movs	r2, #0
 8007c3c:	60e0      	str	r0, [r4, #12]
 8007c3e:	2104      	movs	r1, #4
 8007c40:	6860      	ldr	r0, [r4, #4]
 8007c42:	f7ff ffa7 	bl	8007b94 <std.isra.0>
 8007c46:	2201      	movs	r2, #1
 8007c48:	2109      	movs	r1, #9
 8007c4a:	68a0      	ldr	r0, [r4, #8]
 8007c4c:	f7ff ffa2 	bl	8007b94 <std.isra.0>
 8007c50:	2202      	movs	r2, #2
 8007c52:	2112      	movs	r1, #18
 8007c54:	68e0      	ldr	r0, [r4, #12]
 8007c56:	f7ff ff9d 	bl	8007b94 <std.isra.0>
 8007c5a:	2301      	movs	r3, #1
 8007c5c:	61a3      	str	r3, [r4, #24]
 8007c5e:	bd10      	pop	{r4, pc}
 8007c60:	080092b4 	.word	0x080092b4
 8007c64:	08007b89 	.word	0x08007b89

08007c68 <__sfp>:
 8007c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c6a:	4b1c      	ldr	r3, [pc, #112]	; (8007cdc <__sfp+0x74>)
 8007c6c:	681e      	ldr	r6, [r3, #0]
 8007c6e:	69b3      	ldr	r3, [r6, #24]
 8007c70:	4607      	mov	r7, r0
 8007c72:	b913      	cbnz	r3, 8007c7a <__sfp+0x12>
 8007c74:	4630      	mov	r0, r6
 8007c76:	f7ff ffc7 	bl	8007c08 <__sinit>
 8007c7a:	3648      	adds	r6, #72	; 0x48
 8007c7c:	68b4      	ldr	r4, [r6, #8]
 8007c7e:	6873      	ldr	r3, [r6, #4]
 8007c80:	3b01      	subs	r3, #1
 8007c82:	d503      	bpl.n	8007c8c <__sfp+0x24>
 8007c84:	6833      	ldr	r3, [r6, #0]
 8007c86:	b133      	cbz	r3, 8007c96 <__sfp+0x2e>
 8007c88:	6836      	ldr	r6, [r6, #0]
 8007c8a:	e7f7      	b.n	8007c7c <__sfp+0x14>
 8007c8c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007c90:	b16d      	cbz	r5, 8007cae <__sfp+0x46>
 8007c92:	3468      	adds	r4, #104	; 0x68
 8007c94:	e7f4      	b.n	8007c80 <__sfp+0x18>
 8007c96:	2104      	movs	r1, #4
 8007c98:	4638      	mov	r0, r7
 8007c9a:	f7ff ff9f 	bl	8007bdc <__sfmoreglue>
 8007c9e:	6030      	str	r0, [r6, #0]
 8007ca0:	2800      	cmp	r0, #0
 8007ca2:	d1f1      	bne.n	8007c88 <__sfp+0x20>
 8007ca4:	230c      	movs	r3, #12
 8007ca6:	603b      	str	r3, [r7, #0]
 8007ca8:	4604      	mov	r4, r0
 8007caa:	4620      	mov	r0, r4
 8007cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007cae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007cb2:	81e3      	strh	r3, [r4, #14]
 8007cb4:	2301      	movs	r3, #1
 8007cb6:	81a3      	strh	r3, [r4, #12]
 8007cb8:	6665      	str	r5, [r4, #100]	; 0x64
 8007cba:	6025      	str	r5, [r4, #0]
 8007cbc:	60a5      	str	r5, [r4, #8]
 8007cbe:	6065      	str	r5, [r4, #4]
 8007cc0:	6125      	str	r5, [r4, #16]
 8007cc2:	6165      	str	r5, [r4, #20]
 8007cc4:	61a5      	str	r5, [r4, #24]
 8007cc6:	2208      	movs	r2, #8
 8007cc8:	4629      	mov	r1, r5
 8007cca:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007cce:	f000 f8d4 	bl	8007e7a <memset>
 8007cd2:	6365      	str	r5, [r4, #52]	; 0x34
 8007cd4:	63a5      	str	r5, [r4, #56]	; 0x38
 8007cd6:	64a5      	str	r5, [r4, #72]	; 0x48
 8007cd8:	64e5      	str	r5, [r4, #76]	; 0x4c
 8007cda:	e7e6      	b.n	8007caa <__sfp+0x42>
 8007cdc:	080092b4 	.word	0x080092b4

08007ce0 <_fwalk_reent>:
 8007ce0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007ce4:	4680      	mov	r8, r0
 8007ce6:	4689      	mov	r9, r1
 8007ce8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8007cec:	2600      	movs	r6, #0
 8007cee:	b914      	cbnz	r4, 8007cf6 <_fwalk_reent+0x16>
 8007cf0:	4630      	mov	r0, r6
 8007cf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007cf6:	68a5      	ldr	r5, [r4, #8]
 8007cf8:	6867      	ldr	r7, [r4, #4]
 8007cfa:	3f01      	subs	r7, #1
 8007cfc:	d501      	bpl.n	8007d02 <_fwalk_reent+0x22>
 8007cfe:	6824      	ldr	r4, [r4, #0]
 8007d00:	e7f5      	b.n	8007cee <_fwalk_reent+0xe>
 8007d02:	89ab      	ldrh	r3, [r5, #12]
 8007d04:	2b01      	cmp	r3, #1
 8007d06:	d907      	bls.n	8007d18 <_fwalk_reent+0x38>
 8007d08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007d0c:	3301      	adds	r3, #1
 8007d0e:	d003      	beq.n	8007d18 <_fwalk_reent+0x38>
 8007d10:	4629      	mov	r1, r5
 8007d12:	4640      	mov	r0, r8
 8007d14:	47c8      	blx	r9
 8007d16:	4306      	orrs	r6, r0
 8007d18:	3568      	adds	r5, #104	; 0x68
 8007d1a:	e7ee      	b.n	8007cfa <_fwalk_reent+0x1a>

08007d1c <__libc_init_array>:
 8007d1c:	b570      	push	{r4, r5, r6, lr}
 8007d1e:	4e0d      	ldr	r6, [pc, #52]	; (8007d54 <__libc_init_array+0x38>)
 8007d20:	4c0d      	ldr	r4, [pc, #52]	; (8007d58 <__libc_init_array+0x3c>)
 8007d22:	1ba4      	subs	r4, r4, r6
 8007d24:	10a4      	asrs	r4, r4, #2
 8007d26:	2500      	movs	r5, #0
 8007d28:	42a5      	cmp	r5, r4
 8007d2a:	d109      	bne.n	8007d40 <__libc_init_array+0x24>
 8007d2c:	4e0b      	ldr	r6, [pc, #44]	; (8007d5c <__libc_init_array+0x40>)
 8007d2e:	4c0c      	ldr	r4, [pc, #48]	; (8007d60 <__libc_init_array+0x44>)
 8007d30:	f000 fd8e 	bl	8008850 <_init>
 8007d34:	1ba4      	subs	r4, r4, r6
 8007d36:	10a4      	asrs	r4, r4, #2
 8007d38:	2500      	movs	r5, #0
 8007d3a:	42a5      	cmp	r5, r4
 8007d3c:	d105      	bne.n	8007d4a <__libc_init_array+0x2e>
 8007d3e:	bd70      	pop	{r4, r5, r6, pc}
 8007d40:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8007d44:	4798      	blx	r3
 8007d46:	3501      	adds	r5, #1
 8007d48:	e7ee      	b.n	8007d28 <__libc_init_array+0xc>
 8007d4a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8007d4e:	4798      	blx	r3
 8007d50:	3501      	adds	r5, #1
 8007d52:	e7f2      	b.n	8007d3a <__libc_init_array+0x1e>
 8007d54:	2000024c 	.word	0x2000024c
 8007d58:	2000024c 	.word	0x2000024c
 8007d5c:	2000024c 	.word	0x2000024c
 8007d60:	20000264 	.word	0x20000264

08007d64 <malloc>:
 8007d64:	4b02      	ldr	r3, [pc, #8]	; (8007d70 <malloc+0xc>)
 8007d66:	4601      	mov	r1, r0
 8007d68:	6818      	ldr	r0, [r3, #0]
 8007d6a:	f7ff b88d 	b.w	8006e88 <__wrap__malloc_r>
 8007d6e:	bf00      	nop
 8007d70:	200001e8 	.word	0x200001e8

08007d74 <free>:
 8007d74:	4b02      	ldr	r3, [pc, #8]	; (8007d80 <free+0xc>)
 8007d76:	4601      	mov	r1, r0
 8007d78:	6818      	ldr	r0, [r3, #0]
 8007d7a:	f7ff b889 	b.w	8006e90 <__wrap__free_r>
 8007d7e:	bf00      	nop
 8007d80:	200001e8 	.word	0x200001e8
	...

08007d90 <memchr>:
 8007d90:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007d94:	2a10      	cmp	r2, #16
 8007d96:	db2b      	blt.n	8007df0 <memchr+0x60>
 8007d98:	f010 0f07 	tst.w	r0, #7
 8007d9c:	d008      	beq.n	8007db0 <memchr+0x20>
 8007d9e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007da2:	3a01      	subs	r2, #1
 8007da4:	428b      	cmp	r3, r1
 8007da6:	d02d      	beq.n	8007e04 <memchr+0x74>
 8007da8:	f010 0f07 	tst.w	r0, #7
 8007dac:	b342      	cbz	r2, 8007e00 <memchr+0x70>
 8007dae:	d1f6      	bne.n	8007d9e <memchr+0xe>
 8007db0:	b4f0      	push	{r4, r5, r6, r7}
 8007db2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8007db6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8007dba:	f022 0407 	bic.w	r4, r2, #7
 8007dbe:	f07f 0700 	mvns.w	r7, #0
 8007dc2:	2300      	movs	r3, #0
 8007dc4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8007dc8:	3c08      	subs	r4, #8
 8007dca:	ea85 0501 	eor.w	r5, r5, r1
 8007dce:	ea86 0601 	eor.w	r6, r6, r1
 8007dd2:	fa85 f547 	uadd8	r5, r5, r7
 8007dd6:	faa3 f587 	sel	r5, r3, r7
 8007dda:	fa86 f647 	uadd8	r6, r6, r7
 8007dde:	faa5 f687 	sel	r6, r5, r7
 8007de2:	b98e      	cbnz	r6, 8007e08 <memchr+0x78>
 8007de4:	d1ee      	bne.n	8007dc4 <memchr+0x34>
 8007de6:	bcf0      	pop	{r4, r5, r6, r7}
 8007de8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007dec:	f002 0207 	and.w	r2, r2, #7
 8007df0:	b132      	cbz	r2, 8007e00 <memchr+0x70>
 8007df2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007df6:	3a01      	subs	r2, #1
 8007df8:	ea83 0301 	eor.w	r3, r3, r1
 8007dfc:	b113      	cbz	r3, 8007e04 <memchr+0x74>
 8007dfe:	d1f8      	bne.n	8007df2 <memchr+0x62>
 8007e00:	2000      	movs	r0, #0
 8007e02:	4770      	bx	lr
 8007e04:	3801      	subs	r0, #1
 8007e06:	4770      	bx	lr
 8007e08:	2d00      	cmp	r5, #0
 8007e0a:	bf06      	itte	eq
 8007e0c:	4635      	moveq	r5, r6
 8007e0e:	3803      	subeq	r0, #3
 8007e10:	3807      	subne	r0, #7
 8007e12:	f015 0f01 	tst.w	r5, #1
 8007e16:	d107      	bne.n	8007e28 <memchr+0x98>
 8007e18:	3001      	adds	r0, #1
 8007e1a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8007e1e:	bf02      	ittt	eq
 8007e20:	3001      	addeq	r0, #1
 8007e22:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8007e26:	3001      	addeq	r0, #1
 8007e28:	bcf0      	pop	{r4, r5, r6, r7}
 8007e2a:	3801      	subs	r0, #1
 8007e2c:	4770      	bx	lr
 8007e2e:	bf00      	nop

08007e30 <memcpy>:
 8007e30:	b510      	push	{r4, lr}
 8007e32:	1e43      	subs	r3, r0, #1
 8007e34:	440a      	add	r2, r1
 8007e36:	4291      	cmp	r1, r2
 8007e38:	d100      	bne.n	8007e3c <memcpy+0xc>
 8007e3a:	bd10      	pop	{r4, pc}
 8007e3c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007e40:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007e44:	e7f7      	b.n	8007e36 <memcpy+0x6>

08007e46 <memmove>:
 8007e46:	4288      	cmp	r0, r1
 8007e48:	b510      	push	{r4, lr}
 8007e4a:	eb01 0302 	add.w	r3, r1, r2
 8007e4e:	d803      	bhi.n	8007e58 <memmove+0x12>
 8007e50:	1e42      	subs	r2, r0, #1
 8007e52:	4299      	cmp	r1, r3
 8007e54:	d10c      	bne.n	8007e70 <memmove+0x2a>
 8007e56:	bd10      	pop	{r4, pc}
 8007e58:	4298      	cmp	r0, r3
 8007e5a:	d2f9      	bcs.n	8007e50 <memmove+0xa>
 8007e5c:	1881      	adds	r1, r0, r2
 8007e5e:	1ad2      	subs	r2, r2, r3
 8007e60:	42d3      	cmn	r3, r2
 8007e62:	d100      	bne.n	8007e66 <memmove+0x20>
 8007e64:	bd10      	pop	{r4, pc}
 8007e66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007e6a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8007e6e:	e7f7      	b.n	8007e60 <memmove+0x1a>
 8007e70:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007e74:	f802 4f01 	strb.w	r4, [r2, #1]!
 8007e78:	e7eb      	b.n	8007e52 <memmove+0xc>

08007e7a <memset>:
 8007e7a:	4402      	add	r2, r0
 8007e7c:	4603      	mov	r3, r0
 8007e7e:	4293      	cmp	r3, r2
 8007e80:	d100      	bne.n	8007e84 <memset+0xa>
 8007e82:	4770      	bx	lr
 8007e84:	f803 1b01 	strb.w	r1, [r3], #1
 8007e88:	e7f9      	b.n	8007e7e <memset+0x4>
	...

08007e8c <_free_r>:
 8007e8c:	b538      	push	{r3, r4, r5, lr}
 8007e8e:	4605      	mov	r5, r0
 8007e90:	2900      	cmp	r1, #0
 8007e92:	d045      	beq.n	8007f20 <_free_r+0x94>
 8007e94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007e98:	1f0c      	subs	r4, r1, #4
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	bfb8      	it	lt
 8007e9e:	18e4      	addlt	r4, r4, r3
 8007ea0:	f7ff f917 	bl	80070d2 <__malloc_lock>
 8007ea4:	4a1f      	ldr	r2, [pc, #124]	; (8007f24 <_free_r+0x98>)
 8007ea6:	6813      	ldr	r3, [r2, #0]
 8007ea8:	4610      	mov	r0, r2
 8007eaa:	b933      	cbnz	r3, 8007eba <_free_r+0x2e>
 8007eac:	6063      	str	r3, [r4, #4]
 8007eae:	6014      	str	r4, [r2, #0]
 8007eb0:	4628      	mov	r0, r5
 8007eb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007eb6:	f7ff b910 	b.w	80070da <__malloc_unlock>
 8007eba:	42a3      	cmp	r3, r4
 8007ebc:	d90c      	bls.n	8007ed8 <_free_r+0x4c>
 8007ebe:	6821      	ldr	r1, [r4, #0]
 8007ec0:	1862      	adds	r2, r4, r1
 8007ec2:	4293      	cmp	r3, r2
 8007ec4:	bf04      	itt	eq
 8007ec6:	681a      	ldreq	r2, [r3, #0]
 8007ec8:	685b      	ldreq	r3, [r3, #4]
 8007eca:	6063      	str	r3, [r4, #4]
 8007ecc:	bf04      	itt	eq
 8007ece:	1852      	addeq	r2, r2, r1
 8007ed0:	6022      	streq	r2, [r4, #0]
 8007ed2:	6004      	str	r4, [r0, #0]
 8007ed4:	e7ec      	b.n	8007eb0 <_free_r+0x24>
 8007ed6:	4613      	mov	r3, r2
 8007ed8:	685a      	ldr	r2, [r3, #4]
 8007eda:	b10a      	cbz	r2, 8007ee0 <_free_r+0x54>
 8007edc:	42a2      	cmp	r2, r4
 8007ede:	d9fa      	bls.n	8007ed6 <_free_r+0x4a>
 8007ee0:	6819      	ldr	r1, [r3, #0]
 8007ee2:	1858      	adds	r0, r3, r1
 8007ee4:	42a0      	cmp	r0, r4
 8007ee6:	d10b      	bne.n	8007f00 <_free_r+0x74>
 8007ee8:	6820      	ldr	r0, [r4, #0]
 8007eea:	4401      	add	r1, r0
 8007eec:	1858      	adds	r0, r3, r1
 8007eee:	4282      	cmp	r2, r0
 8007ef0:	6019      	str	r1, [r3, #0]
 8007ef2:	d1dd      	bne.n	8007eb0 <_free_r+0x24>
 8007ef4:	6810      	ldr	r0, [r2, #0]
 8007ef6:	6852      	ldr	r2, [r2, #4]
 8007ef8:	605a      	str	r2, [r3, #4]
 8007efa:	4401      	add	r1, r0
 8007efc:	6019      	str	r1, [r3, #0]
 8007efe:	e7d7      	b.n	8007eb0 <_free_r+0x24>
 8007f00:	d902      	bls.n	8007f08 <_free_r+0x7c>
 8007f02:	230c      	movs	r3, #12
 8007f04:	602b      	str	r3, [r5, #0]
 8007f06:	e7d3      	b.n	8007eb0 <_free_r+0x24>
 8007f08:	6820      	ldr	r0, [r4, #0]
 8007f0a:	1821      	adds	r1, r4, r0
 8007f0c:	428a      	cmp	r2, r1
 8007f0e:	bf04      	itt	eq
 8007f10:	6811      	ldreq	r1, [r2, #0]
 8007f12:	6852      	ldreq	r2, [r2, #4]
 8007f14:	6062      	str	r2, [r4, #4]
 8007f16:	bf04      	itt	eq
 8007f18:	1809      	addeq	r1, r1, r0
 8007f1a:	6021      	streq	r1, [r4, #0]
 8007f1c:	605c      	str	r4, [r3, #4]
 8007f1e:	e7c7      	b.n	8007eb0 <_free_r+0x24>
 8007f20:	bd38      	pop	{r3, r4, r5, pc}
 8007f22:	bf00      	nop
 8007f24:	200017a0 	.word	0x200017a0

08007f28 <_malloc_r>:
 8007f28:	b570      	push	{r4, r5, r6, lr}
 8007f2a:	1ccd      	adds	r5, r1, #3
 8007f2c:	f025 0503 	bic.w	r5, r5, #3
 8007f30:	3508      	adds	r5, #8
 8007f32:	2d0c      	cmp	r5, #12
 8007f34:	bf38      	it	cc
 8007f36:	250c      	movcc	r5, #12
 8007f38:	2d00      	cmp	r5, #0
 8007f3a:	4606      	mov	r6, r0
 8007f3c:	db01      	blt.n	8007f42 <_malloc_r+0x1a>
 8007f3e:	42a9      	cmp	r1, r5
 8007f40:	d903      	bls.n	8007f4a <_malloc_r+0x22>
 8007f42:	230c      	movs	r3, #12
 8007f44:	6033      	str	r3, [r6, #0]
 8007f46:	2000      	movs	r0, #0
 8007f48:	bd70      	pop	{r4, r5, r6, pc}
 8007f4a:	f7ff f8c2 	bl	80070d2 <__malloc_lock>
 8007f4e:	4a23      	ldr	r2, [pc, #140]	; (8007fdc <_malloc_r+0xb4>)
 8007f50:	6814      	ldr	r4, [r2, #0]
 8007f52:	4621      	mov	r1, r4
 8007f54:	b991      	cbnz	r1, 8007f7c <_malloc_r+0x54>
 8007f56:	4c22      	ldr	r4, [pc, #136]	; (8007fe0 <_malloc_r+0xb8>)
 8007f58:	6823      	ldr	r3, [r4, #0]
 8007f5a:	b91b      	cbnz	r3, 8007f64 <_malloc_r+0x3c>
 8007f5c:	4630      	mov	r0, r6
 8007f5e:	f000 fa05 	bl	800836c <_sbrk_r>
 8007f62:	6020      	str	r0, [r4, #0]
 8007f64:	4629      	mov	r1, r5
 8007f66:	4630      	mov	r0, r6
 8007f68:	f000 fa00 	bl	800836c <_sbrk_r>
 8007f6c:	1c43      	adds	r3, r0, #1
 8007f6e:	d126      	bne.n	8007fbe <_malloc_r+0x96>
 8007f70:	230c      	movs	r3, #12
 8007f72:	6033      	str	r3, [r6, #0]
 8007f74:	4630      	mov	r0, r6
 8007f76:	f7ff f8b0 	bl	80070da <__malloc_unlock>
 8007f7a:	e7e4      	b.n	8007f46 <_malloc_r+0x1e>
 8007f7c:	680b      	ldr	r3, [r1, #0]
 8007f7e:	1b5b      	subs	r3, r3, r5
 8007f80:	d41a      	bmi.n	8007fb8 <_malloc_r+0x90>
 8007f82:	2b0b      	cmp	r3, #11
 8007f84:	d90f      	bls.n	8007fa6 <_malloc_r+0x7e>
 8007f86:	600b      	str	r3, [r1, #0]
 8007f88:	50cd      	str	r5, [r1, r3]
 8007f8a:	18cc      	adds	r4, r1, r3
 8007f8c:	4630      	mov	r0, r6
 8007f8e:	f7ff f8a4 	bl	80070da <__malloc_unlock>
 8007f92:	f104 000b 	add.w	r0, r4, #11
 8007f96:	1d23      	adds	r3, r4, #4
 8007f98:	f020 0007 	bic.w	r0, r0, #7
 8007f9c:	1ac3      	subs	r3, r0, r3
 8007f9e:	d01b      	beq.n	8007fd8 <_malloc_r+0xb0>
 8007fa0:	425a      	negs	r2, r3
 8007fa2:	50e2      	str	r2, [r4, r3]
 8007fa4:	bd70      	pop	{r4, r5, r6, pc}
 8007fa6:	428c      	cmp	r4, r1
 8007fa8:	bf0d      	iteet	eq
 8007faa:	6863      	ldreq	r3, [r4, #4]
 8007fac:	684b      	ldrne	r3, [r1, #4]
 8007fae:	6063      	strne	r3, [r4, #4]
 8007fb0:	6013      	streq	r3, [r2, #0]
 8007fb2:	bf18      	it	ne
 8007fb4:	460c      	movne	r4, r1
 8007fb6:	e7e9      	b.n	8007f8c <_malloc_r+0x64>
 8007fb8:	460c      	mov	r4, r1
 8007fba:	6849      	ldr	r1, [r1, #4]
 8007fbc:	e7ca      	b.n	8007f54 <_malloc_r+0x2c>
 8007fbe:	1cc4      	adds	r4, r0, #3
 8007fc0:	f024 0403 	bic.w	r4, r4, #3
 8007fc4:	42a0      	cmp	r0, r4
 8007fc6:	d005      	beq.n	8007fd4 <_malloc_r+0xac>
 8007fc8:	1a21      	subs	r1, r4, r0
 8007fca:	4630      	mov	r0, r6
 8007fcc:	f000 f9ce 	bl	800836c <_sbrk_r>
 8007fd0:	3001      	adds	r0, #1
 8007fd2:	d0cd      	beq.n	8007f70 <_malloc_r+0x48>
 8007fd4:	6025      	str	r5, [r4, #0]
 8007fd6:	e7d9      	b.n	8007f8c <_malloc_r+0x64>
 8007fd8:	bd70      	pop	{r4, r5, r6, pc}
 8007fda:	bf00      	nop
 8007fdc:	200017a0 	.word	0x200017a0
 8007fe0:	200017a4 	.word	0x200017a4

08007fe4 <_realloc_r>:
 8007fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007fe6:	4607      	mov	r7, r0
 8007fe8:	4614      	mov	r4, r2
 8007fea:	460e      	mov	r6, r1
 8007fec:	b921      	cbnz	r1, 8007ff8 <_realloc_r+0x14>
 8007fee:	4611      	mov	r1, r2
 8007ff0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007ff4:	f7fe bf48 	b.w	8006e88 <__wrap__malloc_r>
 8007ff8:	b922      	cbnz	r2, 8008004 <_realloc_r+0x20>
 8007ffa:	f7fe ff49 	bl	8006e90 <__wrap__free_r>
 8007ffe:	4625      	mov	r5, r4
 8008000:	4628      	mov	r0, r5
 8008002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008004:	f000 fa64 	bl	80084d0 <_malloc_usable_size_r>
 8008008:	4284      	cmp	r4, r0
 800800a:	d90f      	bls.n	800802c <_realloc_r+0x48>
 800800c:	4621      	mov	r1, r4
 800800e:	4638      	mov	r0, r7
 8008010:	f7fe ff3a 	bl	8006e88 <__wrap__malloc_r>
 8008014:	4605      	mov	r5, r0
 8008016:	2800      	cmp	r0, #0
 8008018:	d0f2      	beq.n	8008000 <_realloc_r+0x1c>
 800801a:	4631      	mov	r1, r6
 800801c:	4622      	mov	r2, r4
 800801e:	f7ff ff07 	bl	8007e30 <memcpy>
 8008022:	4631      	mov	r1, r6
 8008024:	4638      	mov	r0, r7
 8008026:	f7fe ff33 	bl	8006e90 <__wrap__free_r>
 800802a:	e7e9      	b.n	8008000 <_realloc_r+0x1c>
 800802c:	4635      	mov	r5, r6
 800802e:	e7e7      	b.n	8008000 <_realloc_r+0x1c>

08008030 <_printf_common>:
 8008030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8008034:	4691      	mov	r9, r2
 8008036:	461f      	mov	r7, r3
 8008038:	688a      	ldr	r2, [r1, #8]
 800803a:	690b      	ldr	r3, [r1, #16]
 800803c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8008040:	4293      	cmp	r3, r2
 8008042:	bfb8      	it	lt
 8008044:	4613      	movlt	r3, r2
 8008046:	f8c9 3000 	str.w	r3, [r9]
 800804a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800804e:	4606      	mov	r6, r0
 8008050:	460c      	mov	r4, r1
 8008052:	b112      	cbz	r2, 800805a <_printf_common+0x2a>
 8008054:	3301      	adds	r3, #1
 8008056:	f8c9 3000 	str.w	r3, [r9]
 800805a:	6823      	ldr	r3, [r4, #0]
 800805c:	0699      	lsls	r1, r3, #26
 800805e:	bf42      	ittt	mi
 8008060:	f8d9 3000 	ldrmi.w	r3, [r9]
 8008064:	3302      	addmi	r3, #2
 8008066:	f8c9 3000 	strmi.w	r3, [r9]
 800806a:	6825      	ldr	r5, [r4, #0]
 800806c:	f015 0506 	ands.w	r5, r5, #6
 8008070:	d107      	bne.n	8008082 <_printf_common+0x52>
 8008072:	f104 0a19 	add.w	r10, r4, #25
 8008076:	68e3      	ldr	r3, [r4, #12]
 8008078:	f8d9 2000 	ldr.w	r2, [r9]
 800807c:	1a9b      	subs	r3, r3, r2
 800807e:	429d      	cmp	r5, r3
 8008080:	db29      	blt.n	80080d6 <_printf_common+0xa6>
 8008082:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8008086:	6822      	ldr	r2, [r4, #0]
 8008088:	3300      	adds	r3, #0
 800808a:	bf18      	it	ne
 800808c:	2301      	movne	r3, #1
 800808e:	0692      	lsls	r2, r2, #26
 8008090:	d42e      	bmi.n	80080f0 <_printf_common+0xc0>
 8008092:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8008096:	4639      	mov	r1, r7
 8008098:	4630      	mov	r0, r6
 800809a:	47c0      	blx	r8
 800809c:	3001      	adds	r0, #1
 800809e:	d021      	beq.n	80080e4 <_printf_common+0xb4>
 80080a0:	6823      	ldr	r3, [r4, #0]
 80080a2:	68e5      	ldr	r5, [r4, #12]
 80080a4:	f8d9 2000 	ldr.w	r2, [r9]
 80080a8:	f003 0306 	and.w	r3, r3, #6
 80080ac:	2b04      	cmp	r3, #4
 80080ae:	bf08      	it	eq
 80080b0:	1aad      	subeq	r5, r5, r2
 80080b2:	68a3      	ldr	r3, [r4, #8]
 80080b4:	6922      	ldr	r2, [r4, #16]
 80080b6:	bf0c      	ite	eq
 80080b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80080bc:	2500      	movne	r5, #0
 80080be:	4293      	cmp	r3, r2
 80080c0:	bfc4      	itt	gt
 80080c2:	1a9b      	subgt	r3, r3, r2
 80080c4:	18ed      	addgt	r5, r5, r3
 80080c6:	f04f 0900 	mov.w	r9, #0
 80080ca:	341a      	adds	r4, #26
 80080cc:	454d      	cmp	r5, r9
 80080ce:	d11b      	bne.n	8008108 <_printf_common+0xd8>
 80080d0:	2000      	movs	r0, #0
 80080d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80080d6:	2301      	movs	r3, #1
 80080d8:	4652      	mov	r2, r10
 80080da:	4639      	mov	r1, r7
 80080dc:	4630      	mov	r0, r6
 80080de:	47c0      	blx	r8
 80080e0:	3001      	adds	r0, #1
 80080e2:	d103      	bne.n	80080ec <_printf_common+0xbc>
 80080e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80080e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80080ec:	3501      	adds	r5, #1
 80080ee:	e7c2      	b.n	8008076 <_printf_common+0x46>
 80080f0:	18e1      	adds	r1, r4, r3
 80080f2:	1c5a      	adds	r2, r3, #1
 80080f4:	2030      	movs	r0, #48	; 0x30
 80080f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80080fa:	4422      	add	r2, r4
 80080fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8008100:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8008104:	3302      	adds	r3, #2
 8008106:	e7c4      	b.n	8008092 <_printf_common+0x62>
 8008108:	2301      	movs	r3, #1
 800810a:	4622      	mov	r2, r4
 800810c:	4639      	mov	r1, r7
 800810e:	4630      	mov	r0, r6
 8008110:	47c0      	blx	r8
 8008112:	3001      	adds	r0, #1
 8008114:	d0e6      	beq.n	80080e4 <_printf_common+0xb4>
 8008116:	f109 0901 	add.w	r9, r9, #1
 800811a:	e7d7      	b.n	80080cc <_printf_common+0x9c>

0800811c <_printf_i>:
 800811c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008120:	4617      	mov	r7, r2
 8008122:	7e0a      	ldrb	r2, [r1, #24]
 8008124:	b085      	sub	sp, #20
 8008126:	2a6e      	cmp	r2, #110	; 0x6e
 8008128:	4698      	mov	r8, r3
 800812a:	4606      	mov	r6, r0
 800812c:	460c      	mov	r4, r1
 800812e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008130:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8008134:	f000 80bc 	beq.w	80082b0 <_printf_i+0x194>
 8008138:	d81a      	bhi.n	8008170 <_printf_i+0x54>
 800813a:	2a63      	cmp	r2, #99	; 0x63
 800813c:	d02e      	beq.n	800819c <_printf_i+0x80>
 800813e:	d80a      	bhi.n	8008156 <_printf_i+0x3a>
 8008140:	2a00      	cmp	r2, #0
 8008142:	f000 80c8 	beq.w	80082d6 <_printf_i+0x1ba>
 8008146:	2a58      	cmp	r2, #88	; 0x58
 8008148:	f000 808a 	beq.w	8008260 <_printf_i+0x144>
 800814c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008150:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8008154:	e02a      	b.n	80081ac <_printf_i+0x90>
 8008156:	2a64      	cmp	r2, #100	; 0x64
 8008158:	d001      	beq.n	800815e <_printf_i+0x42>
 800815a:	2a69      	cmp	r2, #105	; 0x69
 800815c:	d1f6      	bne.n	800814c <_printf_i+0x30>
 800815e:	6821      	ldr	r1, [r4, #0]
 8008160:	681a      	ldr	r2, [r3, #0]
 8008162:	f011 0f80 	tst.w	r1, #128	; 0x80
 8008166:	d023      	beq.n	80081b0 <_printf_i+0x94>
 8008168:	1d11      	adds	r1, r2, #4
 800816a:	6019      	str	r1, [r3, #0]
 800816c:	6813      	ldr	r3, [r2, #0]
 800816e:	e027      	b.n	80081c0 <_printf_i+0xa4>
 8008170:	2a73      	cmp	r2, #115	; 0x73
 8008172:	f000 80b4 	beq.w	80082de <_printf_i+0x1c2>
 8008176:	d808      	bhi.n	800818a <_printf_i+0x6e>
 8008178:	2a6f      	cmp	r2, #111	; 0x6f
 800817a:	d02a      	beq.n	80081d2 <_printf_i+0xb6>
 800817c:	2a70      	cmp	r2, #112	; 0x70
 800817e:	d1e5      	bne.n	800814c <_printf_i+0x30>
 8008180:	680a      	ldr	r2, [r1, #0]
 8008182:	f042 0220 	orr.w	r2, r2, #32
 8008186:	600a      	str	r2, [r1, #0]
 8008188:	e003      	b.n	8008192 <_printf_i+0x76>
 800818a:	2a75      	cmp	r2, #117	; 0x75
 800818c:	d021      	beq.n	80081d2 <_printf_i+0xb6>
 800818e:	2a78      	cmp	r2, #120	; 0x78
 8008190:	d1dc      	bne.n	800814c <_printf_i+0x30>
 8008192:	2278      	movs	r2, #120	; 0x78
 8008194:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8008198:	496e      	ldr	r1, [pc, #440]	; (8008354 <_printf_i+0x238>)
 800819a:	e064      	b.n	8008266 <_printf_i+0x14a>
 800819c:	681a      	ldr	r2, [r3, #0]
 800819e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80081a2:	1d11      	adds	r1, r2, #4
 80081a4:	6019      	str	r1, [r3, #0]
 80081a6:	6813      	ldr	r3, [r2, #0]
 80081a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80081ac:	2301      	movs	r3, #1
 80081ae:	e0a3      	b.n	80082f8 <_printf_i+0x1dc>
 80081b0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80081b4:	f102 0104 	add.w	r1, r2, #4
 80081b8:	6019      	str	r1, [r3, #0]
 80081ba:	d0d7      	beq.n	800816c <_printf_i+0x50>
 80081bc:	f9b2 3000 	ldrsh.w	r3, [r2]
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	da03      	bge.n	80081cc <_printf_i+0xb0>
 80081c4:	222d      	movs	r2, #45	; 0x2d
 80081c6:	425b      	negs	r3, r3
 80081c8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80081cc:	4962      	ldr	r1, [pc, #392]	; (8008358 <_printf_i+0x23c>)
 80081ce:	220a      	movs	r2, #10
 80081d0:	e017      	b.n	8008202 <_printf_i+0xe6>
 80081d2:	6820      	ldr	r0, [r4, #0]
 80081d4:	6819      	ldr	r1, [r3, #0]
 80081d6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80081da:	d003      	beq.n	80081e4 <_printf_i+0xc8>
 80081dc:	1d08      	adds	r0, r1, #4
 80081de:	6018      	str	r0, [r3, #0]
 80081e0:	680b      	ldr	r3, [r1, #0]
 80081e2:	e006      	b.n	80081f2 <_printf_i+0xd6>
 80081e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80081e8:	f101 0004 	add.w	r0, r1, #4
 80081ec:	6018      	str	r0, [r3, #0]
 80081ee:	d0f7      	beq.n	80081e0 <_printf_i+0xc4>
 80081f0:	880b      	ldrh	r3, [r1, #0]
 80081f2:	4959      	ldr	r1, [pc, #356]	; (8008358 <_printf_i+0x23c>)
 80081f4:	2a6f      	cmp	r2, #111	; 0x6f
 80081f6:	bf14      	ite	ne
 80081f8:	220a      	movne	r2, #10
 80081fa:	2208      	moveq	r2, #8
 80081fc:	2000      	movs	r0, #0
 80081fe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8008202:	6865      	ldr	r5, [r4, #4]
 8008204:	60a5      	str	r5, [r4, #8]
 8008206:	2d00      	cmp	r5, #0
 8008208:	f2c0 809c 	blt.w	8008344 <_printf_i+0x228>
 800820c:	6820      	ldr	r0, [r4, #0]
 800820e:	f020 0004 	bic.w	r0, r0, #4
 8008212:	6020      	str	r0, [r4, #0]
 8008214:	2b00      	cmp	r3, #0
 8008216:	d13f      	bne.n	8008298 <_printf_i+0x17c>
 8008218:	2d00      	cmp	r5, #0
 800821a:	f040 8095 	bne.w	8008348 <_printf_i+0x22c>
 800821e:	4675      	mov	r5, lr
 8008220:	2a08      	cmp	r2, #8
 8008222:	d10b      	bne.n	800823c <_printf_i+0x120>
 8008224:	6823      	ldr	r3, [r4, #0]
 8008226:	07da      	lsls	r2, r3, #31
 8008228:	d508      	bpl.n	800823c <_printf_i+0x120>
 800822a:	6923      	ldr	r3, [r4, #16]
 800822c:	6862      	ldr	r2, [r4, #4]
 800822e:	429a      	cmp	r2, r3
 8008230:	bfde      	ittt	le
 8008232:	2330      	movle	r3, #48	; 0x30
 8008234:	f805 3c01 	strble.w	r3, [r5, #-1]
 8008238:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800823c:	ebae 0305 	sub.w	r3, lr, r5
 8008240:	6123      	str	r3, [r4, #16]
 8008242:	f8cd 8000 	str.w	r8, [sp]
 8008246:	463b      	mov	r3, r7
 8008248:	aa03      	add	r2, sp, #12
 800824a:	4621      	mov	r1, r4
 800824c:	4630      	mov	r0, r6
 800824e:	f7ff feef 	bl	8008030 <_printf_common>
 8008252:	3001      	adds	r0, #1
 8008254:	d155      	bne.n	8008302 <_printf_i+0x1e6>
 8008256:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800825a:	b005      	add	sp, #20
 800825c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008260:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8008264:	493c      	ldr	r1, [pc, #240]	; (8008358 <_printf_i+0x23c>)
 8008266:	6822      	ldr	r2, [r4, #0]
 8008268:	6818      	ldr	r0, [r3, #0]
 800826a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800826e:	f100 0504 	add.w	r5, r0, #4
 8008272:	601d      	str	r5, [r3, #0]
 8008274:	d001      	beq.n	800827a <_printf_i+0x15e>
 8008276:	6803      	ldr	r3, [r0, #0]
 8008278:	e002      	b.n	8008280 <_printf_i+0x164>
 800827a:	0655      	lsls	r5, r2, #25
 800827c:	d5fb      	bpl.n	8008276 <_printf_i+0x15a>
 800827e:	8803      	ldrh	r3, [r0, #0]
 8008280:	07d0      	lsls	r0, r2, #31
 8008282:	bf44      	itt	mi
 8008284:	f042 0220 	orrmi.w	r2, r2, #32
 8008288:	6022      	strmi	r2, [r4, #0]
 800828a:	b91b      	cbnz	r3, 8008294 <_printf_i+0x178>
 800828c:	6822      	ldr	r2, [r4, #0]
 800828e:	f022 0220 	bic.w	r2, r2, #32
 8008292:	6022      	str	r2, [r4, #0]
 8008294:	2210      	movs	r2, #16
 8008296:	e7b1      	b.n	80081fc <_printf_i+0xe0>
 8008298:	4675      	mov	r5, lr
 800829a:	fbb3 f0f2 	udiv	r0, r3, r2
 800829e:	fb02 3310 	mls	r3, r2, r0, r3
 80082a2:	5ccb      	ldrb	r3, [r1, r3]
 80082a4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80082a8:	4603      	mov	r3, r0
 80082aa:	2800      	cmp	r0, #0
 80082ac:	d1f5      	bne.n	800829a <_printf_i+0x17e>
 80082ae:	e7b7      	b.n	8008220 <_printf_i+0x104>
 80082b0:	6808      	ldr	r0, [r1, #0]
 80082b2:	681a      	ldr	r2, [r3, #0]
 80082b4:	6949      	ldr	r1, [r1, #20]
 80082b6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80082ba:	d004      	beq.n	80082c6 <_printf_i+0x1aa>
 80082bc:	1d10      	adds	r0, r2, #4
 80082be:	6018      	str	r0, [r3, #0]
 80082c0:	6813      	ldr	r3, [r2, #0]
 80082c2:	6019      	str	r1, [r3, #0]
 80082c4:	e007      	b.n	80082d6 <_printf_i+0x1ba>
 80082c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80082ca:	f102 0004 	add.w	r0, r2, #4
 80082ce:	6018      	str	r0, [r3, #0]
 80082d0:	6813      	ldr	r3, [r2, #0]
 80082d2:	d0f6      	beq.n	80082c2 <_printf_i+0x1a6>
 80082d4:	8019      	strh	r1, [r3, #0]
 80082d6:	2300      	movs	r3, #0
 80082d8:	6123      	str	r3, [r4, #16]
 80082da:	4675      	mov	r5, lr
 80082dc:	e7b1      	b.n	8008242 <_printf_i+0x126>
 80082de:	681a      	ldr	r2, [r3, #0]
 80082e0:	1d11      	adds	r1, r2, #4
 80082e2:	6019      	str	r1, [r3, #0]
 80082e4:	6815      	ldr	r5, [r2, #0]
 80082e6:	6862      	ldr	r2, [r4, #4]
 80082e8:	2100      	movs	r1, #0
 80082ea:	4628      	mov	r0, r5
 80082ec:	f7ff fd50 	bl	8007d90 <memchr>
 80082f0:	b108      	cbz	r0, 80082f6 <_printf_i+0x1da>
 80082f2:	1b40      	subs	r0, r0, r5
 80082f4:	6060      	str	r0, [r4, #4]
 80082f6:	6863      	ldr	r3, [r4, #4]
 80082f8:	6123      	str	r3, [r4, #16]
 80082fa:	2300      	movs	r3, #0
 80082fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008300:	e79f      	b.n	8008242 <_printf_i+0x126>
 8008302:	6923      	ldr	r3, [r4, #16]
 8008304:	462a      	mov	r2, r5
 8008306:	4639      	mov	r1, r7
 8008308:	4630      	mov	r0, r6
 800830a:	47c0      	blx	r8
 800830c:	3001      	adds	r0, #1
 800830e:	d0a2      	beq.n	8008256 <_printf_i+0x13a>
 8008310:	6823      	ldr	r3, [r4, #0]
 8008312:	079b      	lsls	r3, r3, #30
 8008314:	d507      	bpl.n	8008326 <_printf_i+0x20a>
 8008316:	2500      	movs	r5, #0
 8008318:	f104 0919 	add.w	r9, r4, #25
 800831c:	68e3      	ldr	r3, [r4, #12]
 800831e:	9a03      	ldr	r2, [sp, #12]
 8008320:	1a9b      	subs	r3, r3, r2
 8008322:	429d      	cmp	r5, r3
 8008324:	db05      	blt.n	8008332 <_printf_i+0x216>
 8008326:	68e0      	ldr	r0, [r4, #12]
 8008328:	9b03      	ldr	r3, [sp, #12]
 800832a:	4298      	cmp	r0, r3
 800832c:	bfb8      	it	lt
 800832e:	4618      	movlt	r0, r3
 8008330:	e793      	b.n	800825a <_printf_i+0x13e>
 8008332:	2301      	movs	r3, #1
 8008334:	464a      	mov	r2, r9
 8008336:	4639      	mov	r1, r7
 8008338:	4630      	mov	r0, r6
 800833a:	47c0      	blx	r8
 800833c:	3001      	adds	r0, #1
 800833e:	d08a      	beq.n	8008256 <_printf_i+0x13a>
 8008340:	3501      	adds	r5, #1
 8008342:	e7eb      	b.n	800831c <_printf_i+0x200>
 8008344:	2b00      	cmp	r3, #0
 8008346:	d1a7      	bne.n	8008298 <_printf_i+0x17c>
 8008348:	780b      	ldrb	r3, [r1, #0]
 800834a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800834e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008352:	e765      	b.n	8008220 <_printf_i+0x104>
 8008354:	080092c9 	.word	0x080092c9
 8008358:	080092b8 	.word	0x080092b8

0800835c <realloc>:
 800835c:	4b02      	ldr	r3, [pc, #8]	; (8008368 <realloc+0xc>)
 800835e:	460a      	mov	r2, r1
 8008360:	4601      	mov	r1, r0
 8008362:	6818      	ldr	r0, [r3, #0]
 8008364:	f7fe bd92 	b.w	8006e8c <__wrap__realloc_r>
 8008368:	200001e8 	.word	0x200001e8

0800836c <_sbrk_r>:
 800836c:	b538      	push	{r3, r4, r5, lr}
 800836e:	4c06      	ldr	r4, [pc, #24]	; (8008388 <_sbrk_r+0x1c>)
 8008370:	2300      	movs	r3, #0
 8008372:	4605      	mov	r5, r0
 8008374:	4608      	mov	r0, r1
 8008376:	6023      	str	r3, [r4, #0]
 8008378:	f7fe fe72 	bl	8007060 <_sbrk>
 800837c:	1c43      	adds	r3, r0, #1
 800837e:	d102      	bne.n	8008386 <_sbrk_r+0x1a>
 8008380:	6823      	ldr	r3, [r4, #0]
 8008382:	b103      	cbz	r3, 8008386 <_sbrk_r+0x1a>
 8008384:	602b      	str	r3, [r5, #0]
 8008386:	bd38      	pop	{r3, r4, r5, pc}
 8008388:	20002298 	.word	0x20002298

0800838c <__sread>:
 800838c:	b510      	push	{r4, lr}
 800838e:	460c      	mov	r4, r1
 8008390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008394:	f000 f9f4 	bl	8008780 <_read_r>
 8008398:	2800      	cmp	r0, #0
 800839a:	bfab      	itete	ge
 800839c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800839e:	89a3      	ldrhlt	r3, [r4, #12]
 80083a0:	181b      	addge	r3, r3, r0
 80083a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80083a6:	bfac      	ite	ge
 80083a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80083aa:	81a3      	strhlt	r3, [r4, #12]
 80083ac:	bd10      	pop	{r4, pc}

080083ae <__swrite>:
 80083ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083b2:	461f      	mov	r7, r3
 80083b4:	898b      	ldrh	r3, [r1, #12]
 80083b6:	05db      	lsls	r3, r3, #23
 80083b8:	4605      	mov	r5, r0
 80083ba:	460c      	mov	r4, r1
 80083bc:	4616      	mov	r6, r2
 80083be:	d505      	bpl.n	80083cc <__swrite+0x1e>
 80083c0:	2302      	movs	r3, #2
 80083c2:	2200      	movs	r2, #0
 80083c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083c8:	f000 f870 	bl	80084ac <_lseek_r>
 80083cc:	89a3      	ldrh	r3, [r4, #12]
 80083ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80083d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80083d6:	81a3      	strh	r3, [r4, #12]
 80083d8:	4632      	mov	r2, r6
 80083da:	463b      	mov	r3, r7
 80083dc:	4628      	mov	r0, r5
 80083de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80083e2:	f000 b841 	b.w	8008468 <_write_r>

080083e6 <__sseek>:
 80083e6:	b510      	push	{r4, lr}
 80083e8:	460c      	mov	r4, r1
 80083ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083ee:	f000 f85d 	bl	80084ac <_lseek_r>
 80083f2:	1c43      	adds	r3, r0, #1
 80083f4:	89a3      	ldrh	r3, [r4, #12]
 80083f6:	bf15      	itete	ne
 80083f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80083fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80083fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8008402:	81a3      	strheq	r3, [r4, #12]
 8008404:	bf18      	it	ne
 8008406:	81a3      	strhne	r3, [r4, #12]
 8008408:	bd10      	pop	{r4, pc}

0800840a <__sclose>:
 800840a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800840e:	f000 b83d 	b.w	800848c <_close_r>

08008412 <strlen>:
 8008412:	4603      	mov	r3, r0
 8008414:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008418:	2a00      	cmp	r2, #0
 800841a:	d1fb      	bne.n	8008414 <strlen+0x2>
 800841c:	1a18      	subs	r0, r3, r0
 800841e:	3801      	subs	r0, #1
 8008420:	4770      	bx	lr

08008422 <_vsiprintf_r>:
 8008422:	b510      	push	{r4, lr}
 8008424:	b09a      	sub	sp, #104	; 0x68
 8008426:	f44f 7402 	mov.w	r4, #520	; 0x208
 800842a:	9100      	str	r1, [sp, #0]
 800842c:	9104      	str	r1, [sp, #16]
 800842e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8008432:	9102      	str	r1, [sp, #8]
 8008434:	9105      	str	r1, [sp, #20]
 8008436:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800843a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800843e:	4669      	mov	r1, sp
 8008440:	f8ad 400c 	strh.w	r4, [sp, #12]
 8008444:	f000 f8a8 	bl	8008598 <_svfiprintf_r>
 8008448:	9b00      	ldr	r3, [sp, #0]
 800844a:	2200      	movs	r2, #0
 800844c:	701a      	strb	r2, [r3, #0]
 800844e:	b01a      	add	sp, #104	; 0x68
 8008450:	bd10      	pop	{r4, pc}
	...

08008454 <vsiprintf>:
 8008454:	4613      	mov	r3, r2
 8008456:	460a      	mov	r2, r1
 8008458:	4601      	mov	r1, r0
 800845a:	4802      	ldr	r0, [pc, #8]	; (8008464 <vsiprintf+0x10>)
 800845c:	6800      	ldr	r0, [r0, #0]
 800845e:	f7ff bfe0 	b.w	8008422 <_vsiprintf_r>
 8008462:	bf00      	nop
 8008464:	200001e8 	.word	0x200001e8

08008468 <_write_r>:
 8008468:	b538      	push	{r3, r4, r5, lr}
 800846a:	4c07      	ldr	r4, [pc, #28]	; (8008488 <_write_r+0x20>)
 800846c:	4605      	mov	r5, r0
 800846e:	4608      	mov	r0, r1
 8008470:	4611      	mov	r1, r2
 8008472:	2200      	movs	r2, #0
 8008474:	6022      	str	r2, [r4, #0]
 8008476:	461a      	mov	r2, r3
 8008478:	f7fe fd60 	bl	8006f3c <_write>
 800847c:	1c43      	adds	r3, r0, #1
 800847e:	d102      	bne.n	8008486 <_write_r+0x1e>
 8008480:	6823      	ldr	r3, [r4, #0]
 8008482:	b103      	cbz	r3, 8008486 <_write_r+0x1e>
 8008484:	602b      	str	r3, [r5, #0]
 8008486:	bd38      	pop	{r3, r4, r5, pc}
 8008488:	20002298 	.word	0x20002298

0800848c <_close_r>:
 800848c:	b538      	push	{r3, r4, r5, lr}
 800848e:	4c06      	ldr	r4, [pc, #24]	; (80084a8 <_close_r+0x1c>)
 8008490:	2300      	movs	r3, #0
 8008492:	4605      	mov	r5, r0
 8008494:	4608      	mov	r0, r1
 8008496:	6023      	str	r3, [r4, #0]
 8008498:	f7fe fd30 	bl	8006efc <_close>
 800849c:	1c43      	adds	r3, r0, #1
 800849e:	d102      	bne.n	80084a6 <_close_r+0x1a>
 80084a0:	6823      	ldr	r3, [r4, #0]
 80084a2:	b103      	cbz	r3, 80084a6 <_close_r+0x1a>
 80084a4:	602b      	str	r3, [r5, #0]
 80084a6:	bd38      	pop	{r3, r4, r5, pc}
 80084a8:	20002298 	.word	0x20002298

080084ac <_lseek_r>:
 80084ac:	b538      	push	{r3, r4, r5, lr}
 80084ae:	4c07      	ldr	r4, [pc, #28]	; (80084cc <_lseek_r+0x20>)
 80084b0:	4605      	mov	r5, r0
 80084b2:	4608      	mov	r0, r1
 80084b4:	4611      	mov	r1, r2
 80084b6:	2200      	movs	r2, #0
 80084b8:	6022      	str	r2, [r4, #0]
 80084ba:	461a      	mov	r2, r3
 80084bc:	f7fe fda4 	bl	8007008 <_lseek>
 80084c0:	1c43      	adds	r3, r0, #1
 80084c2:	d102      	bne.n	80084ca <_lseek_r+0x1e>
 80084c4:	6823      	ldr	r3, [r4, #0]
 80084c6:	b103      	cbz	r3, 80084ca <_lseek_r+0x1e>
 80084c8:	602b      	str	r3, [r5, #0]
 80084ca:	bd38      	pop	{r3, r4, r5, pc}
 80084cc:	20002298 	.word	0x20002298

080084d0 <_malloc_usable_size_r>:
 80084d0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80084d4:	2800      	cmp	r0, #0
 80084d6:	f1a0 0004 	sub.w	r0, r0, #4
 80084da:	bfbc      	itt	lt
 80084dc:	580b      	ldrlt	r3, [r1, r0]
 80084de:	18c0      	addlt	r0, r0, r3
 80084e0:	4770      	bx	lr

080084e2 <__ssputs_r>:
 80084e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80084e6:	688e      	ldr	r6, [r1, #8]
 80084e8:	429e      	cmp	r6, r3
 80084ea:	4682      	mov	r10, r0
 80084ec:	460c      	mov	r4, r1
 80084ee:	4691      	mov	r9, r2
 80084f0:	4698      	mov	r8, r3
 80084f2:	d835      	bhi.n	8008560 <__ssputs_r+0x7e>
 80084f4:	898a      	ldrh	r2, [r1, #12]
 80084f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80084fa:	d031      	beq.n	8008560 <__ssputs_r+0x7e>
 80084fc:	6825      	ldr	r5, [r4, #0]
 80084fe:	6909      	ldr	r1, [r1, #16]
 8008500:	1a6f      	subs	r7, r5, r1
 8008502:	6965      	ldr	r5, [r4, #20]
 8008504:	2302      	movs	r3, #2
 8008506:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800850a:	fb95 f5f3 	sdiv	r5, r5, r3
 800850e:	f108 0301 	add.w	r3, r8, #1
 8008512:	443b      	add	r3, r7
 8008514:	429d      	cmp	r5, r3
 8008516:	bf38      	it	cc
 8008518:	461d      	movcc	r5, r3
 800851a:	0553      	lsls	r3, r2, #21
 800851c:	d531      	bpl.n	8008582 <__ssputs_r+0xa0>
 800851e:	4629      	mov	r1, r5
 8008520:	f7fe fcb2 	bl	8006e88 <__wrap__malloc_r>
 8008524:	4606      	mov	r6, r0
 8008526:	b950      	cbnz	r0, 800853e <__ssputs_r+0x5c>
 8008528:	230c      	movs	r3, #12
 800852a:	f8ca 3000 	str.w	r3, [r10]
 800852e:	89a3      	ldrh	r3, [r4, #12]
 8008530:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008534:	81a3      	strh	r3, [r4, #12]
 8008536:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800853a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800853e:	463a      	mov	r2, r7
 8008540:	6921      	ldr	r1, [r4, #16]
 8008542:	f7ff fc75 	bl	8007e30 <memcpy>
 8008546:	89a3      	ldrh	r3, [r4, #12]
 8008548:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800854c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008550:	81a3      	strh	r3, [r4, #12]
 8008552:	6126      	str	r6, [r4, #16]
 8008554:	6165      	str	r5, [r4, #20]
 8008556:	443e      	add	r6, r7
 8008558:	1bed      	subs	r5, r5, r7
 800855a:	6026      	str	r6, [r4, #0]
 800855c:	60a5      	str	r5, [r4, #8]
 800855e:	4646      	mov	r6, r8
 8008560:	4546      	cmp	r6, r8
 8008562:	bf28      	it	cs
 8008564:	4646      	movcs	r6, r8
 8008566:	4632      	mov	r2, r6
 8008568:	4649      	mov	r1, r9
 800856a:	6820      	ldr	r0, [r4, #0]
 800856c:	f7ff fc6b 	bl	8007e46 <memmove>
 8008570:	68a3      	ldr	r3, [r4, #8]
 8008572:	1b9b      	subs	r3, r3, r6
 8008574:	60a3      	str	r3, [r4, #8]
 8008576:	6823      	ldr	r3, [r4, #0]
 8008578:	441e      	add	r6, r3
 800857a:	6026      	str	r6, [r4, #0]
 800857c:	2000      	movs	r0, #0
 800857e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8008582:	462a      	mov	r2, r5
 8008584:	f7fe fc82 	bl	8006e8c <__wrap__realloc_r>
 8008588:	4606      	mov	r6, r0
 800858a:	2800      	cmp	r0, #0
 800858c:	d1e1      	bne.n	8008552 <__ssputs_r+0x70>
 800858e:	6921      	ldr	r1, [r4, #16]
 8008590:	4650      	mov	r0, r10
 8008592:	f7fe fc7d 	bl	8006e90 <__wrap__free_r>
 8008596:	e7c7      	b.n	8008528 <__ssputs_r+0x46>

08008598 <_svfiprintf_r>:
 8008598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800859c:	b09d      	sub	sp, #116	; 0x74
 800859e:	4680      	mov	r8, r0
 80085a0:	9303      	str	r3, [sp, #12]
 80085a2:	898b      	ldrh	r3, [r1, #12]
 80085a4:	061c      	lsls	r4, r3, #24
 80085a6:	460d      	mov	r5, r1
 80085a8:	4616      	mov	r6, r2
 80085aa:	d50f      	bpl.n	80085cc <_svfiprintf_r+0x34>
 80085ac:	690b      	ldr	r3, [r1, #16]
 80085ae:	b96b      	cbnz	r3, 80085cc <_svfiprintf_r+0x34>
 80085b0:	2140      	movs	r1, #64	; 0x40
 80085b2:	f7fe fc69 	bl	8006e88 <__wrap__malloc_r>
 80085b6:	6028      	str	r0, [r5, #0]
 80085b8:	6128      	str	r0, [r5, #16]
 80085ba:	b928      	cbnz	r0, 80085c8 <_svfiprintf_r+0x30>
 80085bc:	230c      	movs	r3, #12
 80085be:	f8c8 3000 	str.w	r3, [r8]
 80085c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80085c6:	e0c5      	b.n	8008754 <_svfiprintf_r+0x1bc>
 80085c8:	2340      	movs	r3, #64	; 0x40
 80085ca:	616b      	str	r3, [r5, #20]
 80085cc:	2300      	movs	r3, #0
 80085ce:	9309      	str	r3, [sp, #36]	; 0x24
 80085d0:	2320      	movs	r3, #32
 80085d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80085d6:	2330      	movs	r3, #48	; 0x30
 80085d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80085dc:	f04f 0b01 	mov.w	r11, #1
 80085e0:	4637      	mov	r7, r6
 80085e2:	463c      	mov	r4, r7
 80085e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d13c      	bne.n	8008666 <_svfiprintf_r+0xce>
 80085ec:	ebb7 0a06 	subs.w	r10, r7, r6
 80085f0:	d00b      	beq.n	800860a <_svfiprintf_r+0x72>
 80085f2:	4653      	mov	r3, r10
 80085f4:	4632      	mov	r2, r6
 80085f6:	4629      	mov	r1, r5
 80085f8:	4640      	mov	r0, r8
 80085fa:	f7ff ff72 	bl	80084e2 <__ssputs_r>
 80085fe:	3001      	adds	r0, #1
 8008600:	f000 80a3 	beq.w	800874a <_svfiprintf_r+0x1b2>
 8008604:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008606:	4453      	add	r3, r10
 8008608:	9309      	str	r3, [sp, #36]	; 0x24
 800860a:	783b      	ldrb	r3, [r7, #0]
 800860c:	2b00      	cmp	r3, #0
 800860e:	f000 809c 	beq.w	800874a <_svfiprintf_r+0x1b2>
 8008612:	2300      	movs	r3, #0
 8008614:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008618:	9304      	str	r3, [sp, #16]
 800861a:	9307      	str	r3, [sp, #28]
 800861c:	9205      	str	r2, [sp, #20]
 800861e:	9306      	str	r3, [sp, #24]
 8008620:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008624:	931a      	str	r3, [sp, #104]	; 0x68
 8008626:	2205      	movs	r2, #5
 8008628:	7821      	ldrb	r1, [r4, #0]
 800862a:	4850      	ldr	r0, [pc, #320]	; (800876c <_svfiprintf_r+0x1d4>)
 800862c:	f7ff fbb0 	bl	8007d90 <memchr>
 8008630:	1c67      	adds	r7, r4, #1
 8008632:	9b04      	ldr	r3, [sp, #16]
 8008634:	b9d8      	cbnz	r0, 800866e <_svfiprintf_r+0xd6>
 8008636:	06d9      	lsls	r1, r3, #27
 8008638:	bf44      	itt	mi
 800863a:	2220      	movmi	r2, #32
 800863c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8008640:	071a      	lsls	r2, r3, #28
 8008642:	bf44      	itt	mi
 8008644:	222b      	movmi	r2, #43	; 0x2b
 8008646:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800864a:	7822      	ldrb	r2, [r4, #0]
 800864c:	2a2a      	cmp	r2, #42	; 0x2a
 800864e:	d016      	beq.n	800867e <_svfiprintf_r+0xe6>
 8008650:	9a07      	ldr	r2, [sp, #28]
 8008652:	2100      	movs	r1, #0
 8008654:	200a      	movs	r0, #10
 8008656:	4627      	mov	r7, r4
 8008658:	3401      	adds	r4, #1
 800865a:	783b      	ldrb	r3, [r7, #0]
 800865c:	3b30      	subs	r3, #48	; 0x30
 800865e:	2b09      	cmp	r3, #9
 8008660:	d951      	bls.n	8008706 <_svfiprintf_r+0x16e>
 8008662:	b1c9      	cbz	r1, 8008698 <_svfiprintf_r+0x100>
 8008664:	e011      	b.n	800868a <_svfiprintf_r+0xf2>
 8008666:	2b25      	cmp	r3, #37	; 0x25
 8008668:	d0c0      	beq.n	80085ec <_svfiprintf_r+0x54>
 800866a:	4627      	mov	r7, r4
 800866c:	e7b9      	b.n	80085e2 <_svfiprintf_r+0x4a>
 800866e:	4a3f      	ldr	r2, [pc, #252]	; (800876c <_svfiprintf_r+0x1d4>)
 8008670:	1a80      	subs	r0, r0, r2
 8008672:	fa0b f000 	lsl.w	r0, r11, r0
 8008676:	4318      	orrs	r0, r3
 8008678:	9004      	str	r0, [sp, #16]
 800867a:	463c      	mov	r4, r7
 800867c:	e7d3      	b.n	8008626 <_svfiprintf_r+0x8e>
 800867e:	9a03      	ldr	r2, [sp, #12]
 8008680:	1d11      	adds	r1, r2, #4
 8008682:	6812      	ldr	r2, [r2, #0]
 8008684:	9103      	str	r1, [sp, #12]
 8008686:	2a00      	cmp	r2, #0
 8008688:	db01      	blt.n	800868e <_svfiprintf_r+0xf6>
 800868a:	9207      	str	r2, [sp, #28]
 800868c:	e004      	b.n	8008698 <_svfiprintf_r+0x100>
 800868e:	4252      	negs	r2, r2
 8008690:	f043 0302 	orr.w	r3, r3, #2
 8008694:	9207      	str	r2, [sp, #28]
 8008696:	9304      	str	r3, [sp, #16]
 8008698:	783b      	ldrb	r3, [r7, #0]
 800869a:	2b2e      	cmp	r3, #46	; 0x2e
 800869c:	d10e      	bne.n	80086bc <_svfiprintf_r+0x124>
 800869e:	787b      	ldrb	r3, [r7, #1]
 80086a0:	2b2a      	cmp	r3, #42	; 0x2a
 80086a2:	f107 0101 	add.w	r1, r7, #1
 80086a6:	d132      	bne.n	800870e <_svfiprintf_r+0x176>
 80086a8:	9b03      	ldr	r3, [sp, #12]
 80086aa:	1d1a      	adds	r2, r3, #4
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	9203      	str	r2, [sp, #12]
 80086b0:	2b00      	cmp	r3, #0
 80086b2:	bfb8      	it	lt
 80086b4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80086b8:	3702      	adds	r7, #2
 80086ba:	9305      	str	r3, [sp, #20]
 80086bc:	4c2c      	ldr	r4, [pc, #176]	; (8008770 <_svfiprintf_r+0x1d8>)
 80086be:	7839      	ldrb	r1, [r7, #0]
 80086c0:	2203      	movs	r2, #3
 80086c2:	4620      	mov	r0, r4
 80086c4:	f7ff fb64 	bl	8007d90 <memchr>
 80086c8:	b138      	cbz	r0, 80086da <_svfiprintf_r+0x142>
 80086ca:	2340      	movs	r3, #64	; 0x40
 80086cc:	1b00      	subs	r0, r0, r4
 80086ce:	fa03 f000 	lsl.w	r0, r3, r0
 80086d2:	9b04      	ldr	r3, [sp, #16]
 80086d4:	4303      	orrs	r3, r0
 80086d6:	9304      	str	r3, [sp, #16]
 80086d8:	3701      	adds	r7, #1
 80086da:	7839      	ldrb	r1, [r7, #0]
 80086dc:	4825      	ldr	r0, [pc, #148]	; (8008774 <_svfiprintf_r+0x1dc>)
 80086de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80086e2:	2206      	movs	r2, #6
 80086e4:	1c7e      	adds	r6, r7, #1
 80086e6:	f7ff fb53 	bl	8007d90 <memchr>
 80086ea:	2800      	cmp	r0, #0
 80086ec:	d035      	beq.n	800875a <_svfiprintf_r+0x1c2>
 80086ee:	4b22      	ldr	r3, [pc, #136]	; (8008778 <_svfiprintf_r+0x1e0>)
 80086f0:	b9fb      	cbnz	r3, 8008732 <_svfiprintf_r+0x19a>
 80086f2:	9b03      	ldr	r3, [sp, #12]
 80086f4:	3307      	adds	r3, #7
 80086f6:	f023 0307 	bic.w	r3, r3, #7
 80086fa:	3308      	adds	r3, #8
 80086fc:	9303      	str	r3, [sp, #12]
 80086fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008700:	444b      	add	r3, r9
 8008702:	9309      	str	r3, [sp, #36]	; 0x24
 8008704:	e76c      	b.n	80085e0 <_svfiprintf_r+0x48>
 8008706:	fb00 3202 	mla	r2, r0, r2, r3
 800870a:	2101      	movs	r1, #1
 800870c:	e7a3      	b.n	8008656 <_svfiprintf_r+0xbe>
 800870e:	2300      	movs	r3, #0
 8008710:	9305      	str	r3, [sp, #20]
 8008712:	4618      	mov	r0, r3
 8008714:	240a      	movs	r4, #10
 8008716:	460f      	mov	r7, r1
 8008718:	3101      	adds	r1, #1
 800871a:	783a      	ldrb	r2, [r7, #0]
 800871c:	3a30      	subs	r2, #48	; 0x30
 800871e:	2a09      	cmp	r2, #9
 8008720:	d903      	bls.n	800872a <_svfiprintf_r+0x192>
 8008722:	2b00      	cmp	r3, #0
 8008724:	d0ca      	beq.n	80086bc <_svfiprintf_r+0x124>
 8008726:	9005      	str	r0, [sp, #20]
 8008728:	e7c8      	b.n	80086bc <_svfiprintf_r+0x124>
 800872a:	fb04 2000 	mla	r0, r4, r0, r2
 800872e:	2301      	movs	r3, #1
 8008730:	e7f1      	b.n	8008716 <_svfiprintf_r+0x17e>
 8008732:	ab03      	add	r3, sp, #12
 8008734:	9300      	str	r3, [sp, #0]
 8008736:	462a      	mov	r2, r5
 8008738:	4b10      	ldr	r3, [pc, #64]	; (800877c <_svfiprintf_r+0x1e4>)
 800873a:	a904      	add	r1, sp, #16
 800873c:	4640      	mov	r0, r8
 800873e:	f3af 8000 	nop.w
 8008742:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8008746:	4681      	mov	r9, r0
 8008748:	d1d9      	bne.n	80086fe <_svfiprintf_r+0x166>
 800874a:	89ab      	ldrh	r3, [r5, #12]
 800874c:	065b      	lsls	r3, r3, #25
 800874e:	f53f af38 	bmi.w	80085c2 <_svfiprintf_r+0x2a>
 8008752:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008754:	b01d      	add	sp, #116	; 0x74
 8008756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800875a:	ab03      	add	r3, sp, #12
 800875c:	9300      	str	r3, [sp, #0]
 800875e:	462a      	mov	r2, r5
 8008760:	4b06      	ldr	r3, [pc, #24]	; (800877c <_svfiprintf_r+0x1e4>)
 8008762:	a904      	add	r1, sp, #16
 8008764:	4640      	mov	r0, r8
 8008766:	f7ff fcd9 	bl	800811c <_printf_i>
 800876a:	e7ea      	b.n	8008742 <_svfiprintf_r+0x1aa>
 800876c:	080092da 	.word	0x080092da
 8008770:	080092e0 	.word	0x080092e0
 8008774:	080092e4 	.word	0x080092e4
 8008778:	00000000 	.word	0x00000000
 800877c:	080084e3 	.word	0x080084e3

08008780 <_read_r>:
 8008780:	b538      	push	{r3, r4, r5, lr}
 8008782:	4c07      	ldr	r4, [pc, #28]	; (80087a0 <_read_r+0x20>)
 8008784:	4605      	mov	r5, r0
 8008786:	4608      	mov	r0, r1
 8008788:	4611      	mov	r1, r2
 800878a:	2200      	movs	r2, #0
 800878c:	6022      	str	r2, [r4, #0]
 800878e:	461a      	mov	r2, r3
 8008790:	f7fe fc0a 	bl	8006fa8 <_read>
 8008794:	1c43      	adds	r3, r0, #1
 8008796:	d102      	bne.n	800879e <_read_r+0x1e>
 8008798:	6823      	ldr	r3, [r4, #0]
 800879a:	b103      	cbz	r3, 800879e <_read_r+0x1e>
 800879c:	602b      	str	r3, [r5, #0]
 800879e:	bd38      	pop	{r3, r4, r5, pc}
 80087a0:	20002298 	.word	0x20002298

080087a4 <fmaxf>:
 80087a4:	b508      	push	{r3, lr}
 80087a6:	ed2d 8b02 	vpush	{d8}
 80087aa:	ee08 0a90 	vmov	s17, r0
 80087ae:	ee08 1a10 	vmov	s16, r1
 80087b2:	f000 f833 	bl	800881c <__fpclassifyf>
 80087b6:	b920      	cbnz	r0, 80087c2 <fmaxf+0x1e>
 80087b8:	ee18 0a10 	vmov	r0, s16
 80087bc:	ecbd 8b02 	vpop	{d8}
 80087c0:	bd08      	pop	{r3, pc}
 80087c2:	ee18 0a10 	vmov	r0, s16
 80087c6:	f000 f829 	bl	800881c <__fpclassifyf>
 80087ca:	b120      	cbz	r0, 80087d6 <fmaxf+0x32>
 80087cc:	eef4 8ac8 	vcmpe.f32	s17, s16
 80087d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087d4:	ddf0      	ble.n	80087b8 <fmaxf+0x14>
 80087d6:	ee18 0a90 	vmov	r0, s17
 80087da:	ecbd 8b02 	vpop	{d8}
 80087de:	bd08      	pop	{r3, pc}

080087e0 <fminf>:
 80087e0:	b508      	push	{r3, lr}
 80087e2:	ed2d 8b02 	vpush	{d8}
 80087e6:	ee08 0a90 	vmov	s17, r0
 80087ea:	ee08 1a10 	vmov	s16, r1
 80087ee:	f000 f815 	bl	800881c <__fpclassifyf>
 80087f2:	b920      	cbnz	r0, 80087fe <fminf+0x1e>
 80087f4:	ee18 0a10 	vmov	r0, s16
 80087f8:	ecbd 8b02 	vpop	{d8}
 80087fc:	bd08      	pop	{r3, pc}
 80087fe:	ee18 0a10 	vmov	r0, s16
 8008802:	f000 f80b 	bl	800881c <__fpclassifyf>
 8008806:	b120      	cbz	r0, 8008812 <fminf+0x32>
 8008808:	eef4 8ac8 	vcmpe.f32	s17, s16
 800880c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008810:	d5f0      	bpl.n	80087f4 <fminf+0x14>
 8008812:	ee18 0a90 	vmov	r0, s17
 8008816:	ecbd 8b02 	vpop	{d8}
 800881a:	bd08      	pop	{r3, pc}

0800881c <__fpclassifyf>:
 800881c:	f030 4000 	bics.w	r0, r0, #2147483648	; 0x80000000
 8008820:	d101      	bne.n	8008826 <__fpclassifyf+0xa>
 8008822:	2002      	movs	r0, #2
 8008824:	4770      	bx	lr
 8008826:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
 800882a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 800882e:	d201      	bcs.n	8008834 <__fpclassifyf+0x18>
 8008830:	2004      	movs	r0, #4
 8008832:	4770      	bx	lr
 8008834:	4b05      	ldr	r3, [pc, #20]	; (800884c <__fpclassifyf+0x30>)
 8008836:	1e42      	subs	r2, r0, #1
 8008838:	429a      	cmp	r2, r3
 800883a:	d801      	bhi.n	8008840 <__fpclassifyf+0x24>
 800883c:	2003      	movs	r0, #3
 800883e:	4770      	bx	lr
 8008840:	f1a0 40ff 	sub.w	r0, r0, #2139095040	; 0x7f800000
 8008844:	fab0 f080 	clz	r0, r0
 8008848:	0940      	lsrs	r0, r0, #5
 800884a:	4770      	bx	lr
 800884c:	007ffffe 	.word	0x007ffffe

08008850 <_init>:
 8008850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008852:	bf00      	nop
 8008854:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008856:	bc08      	pop	{r3}
 8008858:	469e      	mov	lr, r3
 800885a:	4770      	bx	lr

0800885c <_fini>:
 800885c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800885e:	bf00      	nop
 8008860:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008862:	bc08      	pop	{r3}
 8008864:	469e      	mov	lr, r3
 8008866:	4770      	bx	lr

08008868 <vtable for std_msgs::Time>:
	...
 8008870:	0231 0800 0259 0800 0295 0800 029d 0800     1...Y...........

08008880 <vtable for rosserial_msgs::TopicInfo>:
	...
 8008888:	03fd 0800 0605 0800 02a5 0800 02ad 0800     ................

08008898 <vtable for rosserial_msgs::Log>:
	...
 80088a0:	03d1 0800 04a1 0800 02b5 0800 02bd 0800     ................

080088b0 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80088b8:	02ef 0800 04d7 0800 02c5 0800 02cd 0800     ................

080088c8 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 80088d0:	083d 0800 08fd 0800 02d5 0800 6639 6530     =...........9f0e
 80088e0:	3839 6462 3661 3935 3138 3839 6436 6664     98bda65981986ddf
 80088f0:	3335 6661 3761 3461 6530 3934 3100 6131     53afa7a40e49.11a
 8008900:	6462 3337 6331 3532 3339 3233 3136 6463     bd731c25933261cd
 8008910:	3136 3338 6462 3231 3664 3932 0035 6f72     6183bd12d6295.ro
 8008920:	7373 7265 6169 5f6c 736d 7367 4c2f 676f     sserial_msgs/Log
 8008930:	3000 6461 3135 3866 6638 3463 3834 3239     .0ad51f88fc44892
 8008940:	3866 3163 3630 3438 3730 3637 3634 3030     f8c1068407764600
 8008950:	0035 6f72 7373 7265 6169 5f6c 736d 7367     5.rosserial_msgs
 8008960:	542f 706f 6369 6e49 6f66 7200                    /TopicInfo.

0800896b <rosserial_msgs::REQUESTPARAM>:
 800896b:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 800897b:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 800898b:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 800899b:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80089ab:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 80089bb:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 80089cb:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 80089db:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 80089eb:	6d69 0065 c300                                   ime..

080089f0 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 80089f0:	0cc3 0800 0cb5 0800 0cc1 0800 682f 6d6f     ............/hom
 8008a00:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8008a10:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8008a20:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8008a30:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8008a40:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 8008a50:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 8008a60:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 8008a70:	6425 2129 0a0d 0000                         %d)!....

08008a78 <vtable for BufferedSerial>:
	...
 8008a80:	6b5d 0800 6b5d 0800 0dad 0800 0e05 0800     ]k..]k..........
 8008a90:	0c75 0800 0c85 0800 0c89 0800 0f25 0800     u...........%...
 8008aa0:	0f3d 0800 0fb9 0800 0f7b 0800               =.......{...

08008aac <vtable for std_srvs::EmptyRequest>:
	...
 8008ab4:	1061 0800 1065 0800 1069 0800 1071 0800     a...e...i...q...

08008ac4 <vtable for std_srvs::EmptyResponse>:
	...
 8008acc:	1079 0800 107d 0800 1081 0800 1089 0800     y...}...........

08008adc <vtable for trajectory_msgs::JointTrajectoryPoint>:
	...
 8008ae4:	1091 0800 1429 0800 1259 0800 1261 0800     ....)...Y...a...

08008af4 <vtable for AKROS_bridge_msgs::motor_cmd>:
	...
 8008afc:	1269 0800 1869 0800 1311 0800 1319 0800     i...i...........

08008b0c <vtable for std_msgs::Header>:
	...
 8008b14:	1975 0800 1ce7 0800 1321 0800 1329 0800     u.......!...)...

08008b24 <vtable for sensor_msgs::JointState>:
	...
 8008b2c:	1a35 0800 1d71 0800 1331 0800 1339 0800     5...q...1...9...

08008b3c <vtable for AKROS_bridge_msgs::motor_reply>:
	...
 8008b44:	1bd5 0800 2101 0800 1341 0800 1349 0800     .....!..A...I...

08008b54 <vtable for AKROS_bridge_msgs::InitializeRequest>:
	...
 8008b5c:	1351 0800 1359 0800 1361 0800 1369 0800     Q...Y...a...i...

08008b6c <vtable for AKROS_bridge_msgs::InitializeResponse>:
	...
 8008b74:	1bdf 0800 210b 0800 1371 0800 1379 0800     .....!..q...y...

08008b84 <vtable for ros::Subscriber<AKROS_bridge_msgs::motor_cmd, AKROS_bridge>>:
	...
 8008b8c:	1941 0800 1411 0800 1419 0800 1421 0800     A...........!...

08008b9c <vtable for ros::ServiceServer<AKROS_bridge_msgs::InitializeRequest, AKROS_bridge_msgs::InitializeResponse, AKROS_bridge>>:
	...
 8008ba4:	1bff 0800 13fd 0800 1401 0800 1409 0800     ................

08008bb4 <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, AKROS_bridge>>:
	...
 8008bbc:	1c3d 0800 13e9 0800 13ed 0800 13f5 0800     =...............
 8008bcc:	3033 3636 6364 3764 6136 6336 6166 6665     3066dcd76a6cfaef
 8008bdc:	3735 6239 3064 3366 3134 3337 3965 6466     579bd0f34173e9fd
 8008bec:	7300 6e65 6f73 5f72 736d 7367 4a2f 696f     .sensor_msgs/Joi
 8008bfc:	746e 7453 7461 0065 722f 7065 796c 6d2f     ntState./reply/m
 8008c0c:	746f 726f 735f 6174 7574 0073 632f 646d     otor_status./cmd
 8008c1c:	6d2f 746f 726f 635f 646d 2f00 6d63 2f64     /motor_cmd./cmd/
 8008c2c:	6e65 6574 5f72 6f63 746e 6f72 5f6c 6f6d     enter_control_mo
 8008c3c:	6564 2f00 6d63 2f64 7865 7469 635f 6e6f     de./cmd/exit_con
 8008c4c:	7274 6c6f 6d5f 646f 0065 632f 646d 732f     trol_mode./cmd/s
 8008c5c:	7465 7a5f 7265 5f6f 6f70 0073 3366 6463     et_zero_pos.f3cd
 8008c6c:	6531 6331 6434 3233 6330 3937 3664 3839     1e1c4d320c79d698
 8008c7c:	6335 3039 6134 3565 6364 3364 7400 6172     5c904ae5dcd3.tra
 8008c8c:	656a 7463 726f 5f79 736d 7367 4a2f 696f     jectory_msgs/Joi
 8008c9c:	746e 7254 6a61 6365 6f74 7972 6f50 6e69     ntTrajectoryPoin
 8008cac:	0074 3862 3936 3865 3666 3166 3064 3133     t.b869e8f6f1d031
 8008cbc:	3730 6164 6630 3564 6537 3266 6334 6339     07da0fd57ef24c9c
 8008ccc:	6431 4100 524b 534f 625f 6972 6764 5f65     1d.AKROS_bridge_
 8008cdc:	736d 7367 6d2f 746f 726f 725f 7065 796c     msgs/motor_reply
 8008cec:	3000 6634 3565 3830 3436 6332 3136 6134     .04fe508642c614a
 8008cfc:	3339 3737 6261 3962 6464 3461 6366 3332     9377abb9dda4fc23
 8008d0c:	0063 3461 6565 3461 3031 3365 3437 3038     c.a4eea410e37480
 8008d1c:	6539 3962 6663 3033 3633 6361 6262 6333     9eb9cf3036acbb3c
 8008d2c:	3439 3400 3362 3361 3963 6632 6632 3931     94.4b3a3c92f2f19
 8008d3c:	3738 3838 6262 3661 3531 3164 3935 3730     8788bba615d15907
 8008d4c:	3732 0035 4b41 4f52 5f53 7262 6469 6567     275.AKROS_bridge
 8008d5c:	6d5f 6773 2f73 6f6d 6f74 5f72 6d63 0064     _msgs/motor_cmd.

08008d6c <AKROS_bridge_msgs::INITIALIZE>:
 8008d6c:	4b41 4f52 5f53 7262 6469 6567 6d5f 6773     AKROS_bridge_msg
 8008d7c:	2f73 6e49 7469 6169 696c 657a 3200 3731     s/Initialize.217
 8008d8c:	6436 6365 6561 6263 6563 3837 6261 3363     6decaecbce78abc3
 8008d9c:	3962 6536 3066 3934 6166 6562 0064 7473     b96ef049fabed.st
 8008dac:	5f64 736d 7367 482f 6165 6564 0072 3464     d_msgs/Header.d4
 8008dbc:	6431 6338 3964 6638 3030 3262 3430 3965     1d8cd98f00b204e9
 8008dcc:	3038 3930 3839 6365 3866 3234 6537 7300          800998ecf8427e.

08008ddb <std_srvs::EMPTY>:
 8008ddb:	7473 5f64 7273 7376 452f 706d 7974 7600     std_srvs/Empty.v
 8008deb:	6365 6f74 3a72 5f3a 5f4d 6564 6166 6c75     ector::_M_defaul
 8008dfb:	5f74 7061 6570 646e 5f00                         t_append.

08008e04 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> >(mbed::Callback<void ()>::method_context<CAN_controller, void (CAN_controller::*)()> const&)::ops>:
 8008e04:	265f 0800 2651 0800 265d 0800               _&..Q&..]&..

08008e10 <us_data>:
 8008e10:	8e18 0800 028c 2000                         ....... 

08008e18 <us_interface>:
 8008e18:	4b11 0800 4b35 0800 4b6d 0800 4b85 0800     .K..5K..mK...K..
 8008e28:	4b51 0800 6970 6d6e 7061 6d20 7369 6d2d     QK..pinmap mis-m
 8008e38:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8008e48:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8008e58:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8008e68:	6e69 756f 0074 0000                         inout...

08008e70 <mp_stk_size>:
 8008e70:	0210 0000                                   ....

08008e74 <mp_tcb_size>:
 8008e74:	03cc                                        ..

08008e76 <mp_tmr_size>:
	...

08008e78 <os_clockrate>:
 8008e78:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8008e88:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8008e98:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08008ea5 <os_fifo_size>:
 8008ea5:	0110                                             .

08008ea6 <os_flags>:
 8008ea6:	0001                                        ..

08008ea8 <os_maxtaskrun>:
 8008ea8:	000f 0000                                   ....

08008eac <os_messageQ_def_osTimerMessageQ>:
 8008eac:	0004 0000 02b0 2000                         ....... 

08008eb4 <os_mutex_def_env_mutex>:
 8008eb4:	02d0 2000                                   ... 

08008eb8 <os_mutex_def_malloc_mutex>:
 8008eb8:	02e0 2000                                   ... 

08008ebc <os_mutex_def_singleton_mutex>:
 8008ebc:	02f0 2000                                   ... 

08008ec0 <os_rrobin>:
 8008ec0:	0005 0001                                   ....

08008ec4 <os_stackinfo>:
 8008ec4:	0200 0100                                   ....

08008ec8 <os_thread_def_osTimerThread>:
 8008ec8:	3ad5 0800 0002 0000 0001 0000 0320 0000     .:.......... ...
 8008ed8:	17d8 2000                                   ... 

08008edc <os_trv>:
 8008edc:	bf1f 0002                                   ....

08008ee0 <os_mutex_def_osThreadMutex>:
 8008ee0:	1304 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 8008ef0:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8008f00:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8008f10:	6169 696c 657a 4320 4e41 0000               ialize CAN..

08008f1c <timing_pts>:
	...
 8008f24:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 8008f34:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 8008f44:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 8008f54:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 8008f64:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 8008f74:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 8008f84:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 8008f94:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 8008fa4:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 8008fb4:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 8008fc4:	000f 0000 0006 0000 000f 0000 0007 0000     ................

08008fd4 <ll_pin_defines>:
 8008fd4:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8008fe4:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8008ff4:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8009004:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8009014:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8009024:	2065 4155 5452 000a                         e UART..

0800902c <PinMap_CAN_RD>:
 800902c:	0018 0000 6400 4000 0902 0000 001c 0000     .....d.@........
 800903c:	6800 4000 0902 0000 0015 0000 6800 4000     .h.@.........h.@
 800904c:	0902 0000 000b 0000 6400 4000 0902 0000     .........d.@....
 800905c:	ffff 0000 ffff ffff 0000 0000               ............

08009068 <PinMap_CAN_TD>:
 8009068:	0019 0000 6400 4000 0902 0000 001d 0000     .....d.@........
 8009078:	6800 4000 0902 0000 0016 0000 6800 4000     .h.@.........h.@
 8009088:	0902 0000 000c 0000 6400 4000 0902 0000     .........d.@....
 8009098:	ffff 0000 ffff ffff 0000 0000               ............

080090a4 <PinMap_UART_RX>:
 80090a4:	0001 0000 4c00 4000 0812 0000 0003 0000     .....L.@........
 80090b4:	4400 4000 0712 0000 000a 0000 1000 4001     .D.@...........@
 80090c4:	0712 0000 0017 0000 1000 4001 0712 0000     ...........@....
 80090d4:	0025 0000 4800 4000 0712 0000 0027 0000     %....H.@....'...
 80090e4:	1400 4001 0812 0000 002b 0000 4800 4000     ...@....+....H.@
 80090f4:	0712 0000 0032 0000 5000 4000 0812 0000     ....2....P.@....
 8009104:	ffff 0000 ffff ffff 0000 0000               ............

08009110 <PinMap_UART_TX>:
 8009110:	0000 0000 4c00 4000 0812 0000 0002 0000     .....L.@........
 8009120:	4400 4000 0712 0000 0009 0000 1000 4001     .D.@...........@
 8009130:	0712 0000 0016 0000 1000 4001 0712 0000     ...........@....
 8009140:	001a 0000 4800 4000 0712 0000 0026 0000     .....H.@....&...
 8009150:	1400 4001 0812 0000 002a 0000 4800 4000     ...@....*....H.@
 8009160:	0712 0000 002c 0000 5000 4000 0812 0000     ....,....P.@....
 8009170:	ffff 0000 ffff ffff 0000 0000               ............

0800917c <AHBPrescTable>:
	...
 8009184:	0201 0403 0706 0908                         ........

0800918c <APBAHBPrescTable>:
 800918c:	0000 0000 0201 0403 0201 0403 0706 0908     ................

0800919c <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 800919c:	69c7 0800 69cb 0800 69d3 0800               .i...i...i..

080091a8 <vtable for mbed::SerialBase>:
	...
 80091b0:	6987 0800 6989 0800 0d61 0800 0d99 0800     .i...i..a.......

080091c0 <vtable for mbed::RawSerial>:
	...
 80091c8:	6b5d 0800 6b5d 0800 6b75 0800 6b89 0800     ]k..]k..uk...k..

080091d8 <vtable for mbed::CAN>:
	...
 80091e0:	6ce9 0800 6d29 0800 6c4b 0800 6c55 0800     .l..)m..Kl..Ul..
 80091f0:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8009200:	7475 6f20 2066 656d 6f6d 7972 0a0d 4f00     ut of memory...O
 8009210:	6570 6172 6f74 2072 656e 2077 756f 2074     perator new out 
 8009220:	666f 6d20 6d65 726f 0d79 000a 7245 6f72     of memory...Erro
 8009230:	2072 6e69 7469 6169 696c 697a 676e 7420     r initializing t
 8009240:	6568 6d20 7475 7865 6f20 6a62 6365 0a74     he mutex object.
 8009250:	0000 0000                                   ....

08009254 <__sf_fake_stderr>:
	...

08009274 <__sf_fake_stdin>:
	...

08009294 <__sf_fake_stdout>:
	...

080092b4 <_global_impure_ptr>:
 80092b4:	01ec 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80092c4:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80092d4:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 80092e4:	6665 4567 4746 0000                         efgEFG..

080092ec <__EH_FRAME_BEGIN__>:
 80092ec:	0000 0000                                   ....
