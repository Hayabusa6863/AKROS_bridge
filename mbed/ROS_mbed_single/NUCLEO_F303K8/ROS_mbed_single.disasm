
NUCLEO_F303K8/ROS_mbed_single.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080057bd


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 30 00 20 bd 57 00 08 f1 57 00 08 f1 57 00 08     .0. .W...W...W..
 8000010:	f1 57 00 08 f1 57 00 08 f1 57 00 08 00 00 00 00     .W...W...W......
	...
 800002c:	81 56 00 08 f1 57 00 08 00 00 00 00 27 57 00 08     .V...W......'W..
 800003c:	87 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 800004c:	f1 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 800005c:	f1 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 800006c:	f1 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 800007c:	f1 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 800008c:	bd 35 00 08 c1 35 00 08 f1 57 00 08 bd 34 00 08     .5...5...W...4..
 800009c:	f1 57 00 08 f1 57 00 08 f1 57 00 08 f1 57 00 08     .W...W...W...W..
 80000ac:	f1 57 00 08 f1 57 00 08 f1 57 00 08 00 00 00 00     .W...W...W......
 80000bc:	f1 57 00 08 f1 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
 80000cc:	f1 57 00 08 00 00 00 00 f1 57 00 08 f1 57 00 08     .W.......W...W..
 80000dc:	f1 57 00 08 f1 57 00 08 f1 57 00 08 00 00 00 00     .W...W...W......
	...
 8000118:	f1 57 00 08 f1 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000140:	f1 57 00 08 f1 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000184:	f1 57 00 08                                         .W..

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000238 	.word	0x20000238
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08007544 	.word	0x08007544

080001ac <frame_dummy>:
 80001ac:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <frame_dummy+0x34>)
 80001ae:	b143      	cbz	r3, 80001c2 <frame_dummy+0x16>
 80001b0:	480c      	ldr	r0, [pc, #48]	; (80001e4 <frame_dummy+0x38>)
 80001b2:	490d      	ldr	r1, [pc, #52]	; (80001e8 <frame_dummy+0x3c>)
 80001b4:	b510      	push	{r4, lr}
 80001b6:	f3af 8000 	nop.w
 80001ba:	480c      	ldr	r0, [pc, #48]	; (80001ec <frame_dummy+0x40>)
 80001bc:	6803      	ldr	r3, [r0, #0]
 80001be:	b923      	cbnz	r3, 80001ca <frame_dummy+0x1e>
 80001c0:	bd10      	pop	{r4, pc}
 80001c2:	480a      	ldr	r0, [pc, #40]	; (80001ec <frame_dummy+0x40>)
 80001c4:	6803      	ldr	r3, [r0, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <frame_dummy+0x2a>
 80001c8:	4770      	bx	lr
 80001ca:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <frame_dummy+0x44>)
 80001cc:	2b00      	cmp	r3, #0
 80001ce:	d0f7      	beq.n	80001c0 <frame_dummy+0x14>
 80001d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001d4:	4718      	bx	r3
 80001d6:	4b06      	ldr	r3, [pc, #24]	; (80001f0 <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f5      	beq.n	80001c8 <frame_dummy+0x1c>
 80001dc:	4718      	bx	r3
 80001de:	bf00      	nop
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08007544 	.word	0x08007544
 80001e8:	2000023c 	.word	0x2000023c
 80001ec:	20000230 	.word	0x20000230
 80001f0:	00000000 	.word	0x00000000

080001f4 <std_msgs::Time::serialize(unsigned char*) const>:
 80001f4:	6843      	ldr	r3, [r0, #4]
 80001f6:	700b      	strb	r3, [r1, #0]
 80001f8:	6843      	ldr	r3, [r0, #4]
 80001fa:	0a1b      	lsrs	r3, r3, #8
 80001fc:	704b      	strb	r3, [r1, #1]
 80001fe:	88c3      	ldrh	r3, [r0, #6]
 8000200:	708b      	strb	r3, [r1, #2]
 8000202:	79c3      	ldrb	r3, [r0, #7]
 8000204:	70cb      	strb	r3, [r1, #3]
 8000206:	6883      	ldr	r3, [r0, #8]
 8000208:	710b      	strb	r3, [r1, #4]
 800020a:	6883      	ldr	r3, [r0, #8]
 800020c:	0a1b      	lsrs	r3, r3, #8
 800020e:	714b      	strb	r3, [r1, #5]
 8000210:	8943      	ldrh	r3, [r0, #10]
 8000212:	718b      	strb	r3, [r1, #6]
 8000214:	7ac3      	ldrb	r3, [r0, #11]
 8000216:	71cb      	strb	r3, [r1, #7]
 8000218:	2008      	movs	r0, #8
 800021a:	4770      	bx	lr

0800021c <std_msgs::Time::deserialize(unsigned char*)>:
 800021c:	780b      	ldrb	r3, [r1, #0]
 800021e:	6043      	str	r3, [r0, #4]
 8000220:	784a      	ldrb	r2, [r1, #1]
 8000222:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000226:	6043      	str	r3, [r0, #4]
 8000228:	788a      	ldrb	r2, [r1, #2]
 800022a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	78ca      	ldrb	r2, [r1, #3]
 8000232:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	790b      	ldrb	r3, [r1, #4]
 800023a:	6083      	str	r3, [r0, #8]
 800023c:	794a      	ldrb	r2, [r1, #5]
 800023e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000242:	6083      	str	r3, [r0, #8]
 8000244:	798a      	ldrb	r2, [r1, #6]
 8000246:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	79ca      	ldrb	r2, [r1, #7]
 800024e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::getType()>:
 8000258:	4800      	ldr	r0, [pc, #0]	; (800025c <std_msgs::Time::getType()+0x4>)
 800025a:	4770      	bx	lr
 800025c:	08006fc6 	.word	0x08006fc6

08000260 <std_msgs::Time::getMD5()>:
 8000260:	4800      	ldr	r0, [pc, #0]	; (8000264 <std_msgs::Time::getMD5()+0x4>)
 8000262:	4770      	bx	lr
 8000264:	08006fa5 	.word	0x08006fa5

08000268 <rosserial_msgs::TopicInfo::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08006f37 	.word	0x08006f37

08000270 <rosserial_msgs::TopicInfo::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08006f16 	.word	0x08006f16

08000278 <rosserial_msgs::Log::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::Log::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08006f03 	.word	0x08006f03

08000280 <rosserial_msgs::Log::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::Log::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08006ee2 	.word	0x08006ee2

08000288 <rosserial_msgs::RequestParamResponse::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08006f50 	.word	0x08006f50

08000290 <rosserial_msgs::RequestParamResponse::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08006ec1 	.word	0x08006ec1

08000298 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8000298:	2000      	movs	r0, #0
 800029a:	4770      	bx	lr

0800029c <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 800029c:	2000      	movs	r0, #0
 800029e:	4770      	bx	lr

080002a0 <std_srvs::EmptyRequest::getType()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <std_srvs::EmptyRequest::getType()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08006ff5 	.word	0x08006ff5

080002a8 <std_srvs::EmptyRequest::getMD5()>:
 80002a8:	4800      	ldr	r0, [pc, #0]	; (80002ac <std_srvs::EmptyRequest::getMD5()+0x4>)
 80002aa:	4770      	bx	lr
 80002ac:	08006fd4 	.word	0x08006fd4

080002b0 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr

080002b4 <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 80002b4:	2000      	movs	r0, #0
 80002b6:	4770      	bx	lr

080002b8 <std_srvs::EmptyResponse::getType()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_srvs::EmptyResponse::getType()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08006ff5 	.word	0x08006ff5

080002c0 <std_srvs::EmptyResponse::getMD5()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_srvs::EmptyResponse::getMD5()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	08006fd4 	.word	0x08006fd4

080002c8 <AKROS_bridge::Initialize_singleRequest::serialize(unsigned char*) const>:
 80002c8:	2000      	movs	r0, #0
 80002ca:	4770      	bx	lr

080002cc <AKROS_bridge::Initialize_singleRequest::deserialize(unsigned char*)>:
 80002cc:	2000      	movs	r0, #0
 80002ce:	4770      	bx	lr

080002d0 <AKROS_bridge::Initialize_singleRequest::getType()>:
 80002d0:	4800      	ldr	r0, [pc, #0]	; (80002d4 <AKROS_bridge::Initialize_singleRequest::getType()+0x4>)
 80002d2:	4770      	bx	lr
 80002d4:	08006ea2 	.word	0x08006ea2

080002d8 <AKROS_bridge::Initialize_singleRequest::getMD5()>:
 80002d8:	4800      	ldr	r0, [pc, #0]	; (80002dc <AKROS_bridge::Initialize_singleRequest::getMD5()+0x4>)
 80002da:	4770      	bx	lr
 80002dc:	08006fd4 	.word	0x08006fd4

080002e0 <AKROS_bridge::Initialize_singleResponse::serialize(unsigned char*) const>:
 80002e0:	6882      	ldr	r2, [r0, #8]
 80002e2:	68c3      	ldr	r3, [r0, #12]
 80002e4:	700a      	strb	r2, [r1, #0]
 80002e6:	b510      	push	{r4, lr}
 80002e8:	0a14      	lsrs	r4, r2, #8
 80002ea:	704c      	strb	r4, [r1, #1]
 80002ec:	0c14      	lsrs	r4, r2, #16
 80002ee:	0e12      	lsrs	r2, r2, #24
 80002f0:	70ca      	strb	r2, [r1, #3]
 80002f2:	0a1a      	lsrs	r2, r3, #8
 80002f4:	710b      	strb	r3, [r1, #4]
 80002f6:	714a      	strb	r2, [r1, #5]
 80002f8:	0c1a      	lsrs	r2, r3, #16
 80002fa:	0e1b      	lsrs	r3, r3, #24
 80002fc:	708c      	strb	r4, [r1, #2]
 80002fe:	718a      	strb	r2, [r1, #6]
 8000300:	71cb      	strb	r3, [r1, #7]
 8000302:	6902      	ldr	r2, [r0, #16]
 8000304:	6943      	ldr	r3, [r0, #20]
 8000306:	720a      	strb	r2, [r1, #8]
 8000308:	0a14      	lsrs	r4, r2, #8
 800030a:	724c      	strb	r4, [r1, #9]
 800030c:	0c14      	lsrs	r4, r2, #16
 800030e:	0e12      	lsrs	r2, r2, #24
 8000310:	72ca      	strb	r2, [r1, #11]
 8000312:	0a1a      	lsrs	r2, r3, #8
 8000314:	730b      	strb	r3, [r1, #12]
 8000316:	734a      	strb	r2, [r1, #13]
 8000318:	0c1a      	lsrs	r2, r3, #16
 800031a:	0e1b      	lsrs	r3, r3, #24
 800031c:	728c      	strb	r4, [r1, #10]
 800031e:	738a      	strb	r2, [r1, #14]
 8000320:	73cb      	strb	r3, [r1, #15]
 8000322:	6982      	ldr	r2, [r0, #24]
 8000324:	69c3      	ldr	r3, [r0, #28]
 8000326:	740a      	strb	r2, [r1, #16]
 8000328:	0a10      	lsrs	r0, r2, #8
 800032a:	7448      	strb	r0, [r1, #17]
 800032c:	0c10      	lsrs	r0, r2, #16
 800032e:	0e12      	lsrs	r2, r2, #24
 8000330:	74ca      	strb	r2, [r1, #19]
 8000332:	0a1a      	lsrs	r2, r3, #8
 8000334:	750b      	strb	r3, [r1, #20]
 8000336:	754a      	strb	r2, [r1, #21]
 8000338:	0c1a      	lsrs	r2, r3, #16
 800033a:	0e1b      	lsrs	r3, r3, #24
 800033c:	7488      	strb	r0, [r1, #18]
 800033e:	758a      	strb	r2, [r1, #22]
 8000340:	75cb      	strb	r3, [r1, #23]
 8000342:	2018      	movs	r0, #24
 8000344:	bd10      	pop	{r4, pc}

08000346 <AKROS_bridge::Initialize_singleResponse::deserialize(unsigned char*)>:
 8000346:	680a      	ldr	r2, [r1, #0]
 8000348:	684b      	ldr	r3, [r1, #4]
 800034a:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800034e:	688a      	ldr	r2, [r1, #8]
 8000350:	68cb      	ldr	r3, [r1, #12]
 8000352:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000356:	690a      	ldr	r2, [r1, #16]
 8000358:	694b      	ldr	r3, [r1, #20]
 800035a:	e9c0 2306 	strd	r2, r3, [r0, #24]
 800035e:	2018      	movs	r0, #24
 8000360:	4770      	bx	lr
	...

08000364 <AKROS_bridge::Initialize_singleResponse::getType()>:
 8000364:	4800      	ldr	r0, [pc, #0]	; (8000368 <AKROS_bridge::Initialize_singleResponse::getType()+0x4>)
 8000366:	4770      	bx	lr
 8000368:	08006ea2 	.word	0x08006ea2

0800036c <AKROS_bridge::Initialize_singleResponse::getMD5()>:
 800036c:	4800      	ldr	r0, [pc, #0]	; (8000370 <AKROS_bridge::Initialize_singleResponse::getMD5()+0x4>)
 800036e:	4770      	bx	lr
 8000370:	08006e81 	.word	0x08006e81

08000374 <AKROS_bridge::motor_cmd_single::serialize(unsigned char*) const>:
 8000374:	7903      	ldrb	r3, [r0, #4]
 8000376:	700b      	strb	r3, [r1, #0]
 8000378:	6883      	ldr	r3, [r0, #8]
 800037a:	704b      	strb	r3, [r1, #1]
 800037c:	0a1a      	lsrs	r2, r3, #8
 800037e:	708a      	strb	r2, [r1, #2]
 8000380:	0c1a      	lsrs	r2, r3, #16
 8000382:	0e1b      	lsrs	r3, r3, #24
 8000384:	70ca      	strb	r2, [r1, #3]
 8000386:	710b      	strb	r3, [r1, #4]
 8000388:	68c3      	ldr	r3, [r0, #12]
 800038a:	714b      	strb	r3, [r1, #5]
 800038c:	0a1a      	lsrs	r2, r3, #8
 800038e:	718a      	strb	r2, [r1, #6]
 8000390:	0c1a      	lsrs	r2, r3, #16
 8000392:	0e1b      	lsrs	r3, r3, #24
 8000394:	71ca      	strb	r2, [r1, #7]
 8000396:	720b      	strb	r3, [r1, #8]
 8000398:	6903      	ldr	r3, [r0, #16]
 800039a:	724b      	strb	r3, [r1, #9]
 800039c:	0a1a      	lsrs	r2, r3, #8
 800039e:	728a      	strb	r2, [r1, #10]
 80003a0:	0c1a      	lsrs	r2, r3, #16
 80003a2:	0e1b      	lsrs	r3, r3, #24
 80003a4:	72ca      	strb	r2, [r1, #11]
 80003a6:	730b      	strb	r3, [r1, #12]
 80003a8:	6943      	ldr	r3, [r0, #20]
 80003aa:	734b      	strb	r3, [r1, #13]
 80003ac:	0a1a      	lsrs	r2, r3, #8
 80003ae:	738a      	strb	r2, [r1, #14]
 80003b0:	0c1a      	lsrs	r2, r3, #16
 80003b2:	0e1b      	lsrs	r3, r3, #24
 80003b4:	73ca      	strb	r2, [r1, #15]
 80003b6:	740b      	strb	r3, [r1, #16]
 80003b8:	6983      	ldr	r3, [r0, #24]
 80003ba:	744b      	strb	r3, [r1, #17]
 80003bc:	0a1a      	lsrs	r2, r3, #8
 80003be:	748a      	strb	r2, [r1, #18]
 80003c0:	0c1a      	lsrs	r2, r3, #16
 80003c2:	0e1b      	lsrs	r3, r3, #24
 80003c4:	74ca      	strb	r2, [r1, #19]
 80003c6:	750b      	strb	r3, [r1, #20]
 80003c8:	2015      	movs	r0, #21
 80003ca:	4770      	bx	lr

080003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>:
 80003cc:	780b      	ldrb	r3, [r1, #0]
 80003ce:	7103      	strb	r3, [r0, #4]
 80003d0:	f8d1 3001 	ldr.w	r3, [r1, #1]
 80003d4:	6083      	str	r3, [r0, #8]
 80003d6:	f8d1 3005 	ldr.w	r3, [r1, #5]
 80003da:	60c3      	str	r3, [r0, #12]
 80003dc:	f8d1 3009 	ldr.w	r3, [r1, #9]
 80003e0:	6103      	str	r3, [r0, #16]
 80003e2:	f8d1 300d 	ldr.w	r3, [r1, #13]
 80003e6:	6143      	str	r3, [r0, #20]
 80003e8:	f8d1 3011 	ldr.w	r3, [r1, #17]
 80003ec:	6183      	str	r3, [r0, #24]
 80003ee:	2015      	movs	r0, #21
 80003f0:	4770      	bx	lr
	...

080003f4 <AKROS_bridge::motor_cmd_single::getType()>:
 80003f4:	4800      	ldr	r0, [pc, #0]	; (80003f8 <AKROS_bridge::motor_cmd_single::getType()+0x4>)
 80003f6:	4770      	bx	lr
 80003f8:	08006e22 	.word	0x08006e22

080003fc <AKROS_bridge::motor_cmd_single::getMD5()>:
 80003fc:	4800      	ldr	r0, [pc, #0]	; (8000400 <AKROS_bridge::motor_cmd_single::getMD5()+0x4>)
 80003fe:	4770      	bx	lr
 8000400:	08006e01 	.word	0x08006e01

08000404 <AKROS_bridge::motor_reply_single::serialize(unsigned char*) const>:
 8000404:	7903      	ldrb	r3, [r0, #4]
 8000406:	700b      	strb	r3, [r1, #0]
 8000408:	6883      	ldr	r3, [r0, #8]
 800040a:	704b      	strb	r3, [r1, #1]
 800040c:	0a1a      	lsrs	r2, r3, #8
 800040e:	708a      	strb	r2, [r1, #2]
 8000410:	0c1a      	lsrs	r2, r3, #16
 8000412:	0e1b      	lsrs	r3, r3, #24
 8000414:	70ca      	strb	r2, [r1, #3]
 8000416:	710b      	strb	r3, [r1, #4]
 8000418:	68c3      	ldr	r3, [r0, #12]
 800041a:	714b      	strb	r3, [r1, #5]
 800041c:	0a1a      	lsrs	r2, r3, #8
 800041e:	718a      	strb	r2, [r1, #6]
 8000420:	0c1a      	lsrs	r2, r3, #16
 8000422:	0e1b      	lsrs	r3, r3, #24
 8000424:	71ca      	strb	r2, [r1, #7]
 8000426:	720b      	strb	r3, [r1, #8]
 8000428:	6903      	ldr	r3, [r0, #16]
 800042a:	724b      	strb	r3, [r1, #9]
 800042c:	0a1a      	lsrs	r2, r3, #8
 800042e:	728a      	strb	r2, [r1, #10]
 8000430:	0c1a      	lsrs	r2, r3, #16
 8000432:	0e1b      	lsrs	r3, r3, #24
 8000434:	72ca      	strb	r2, [r1, #11]
 8000436:	730b      	strb	r3, [r1, #12]
 8000438:	200d      	movs	r0, #13
 800043a:	4770      	bx	lr

0800043c <AKROS_bridge::motor_reply_single::deserialize(unsigned char*)>:
 800043c:	780b      	ldrb	r3, [r1, #0]
 800043e:	7103      	strb	r3, [r0, #4]
 8000440:	f8d1 3001 	ldr.w	r3, [r1, #1]
 8000444:	6083      	str	r3, [r0, #8]
 8000446:	f8d1 3005 	ldr.w	r3, [r1, #5]
 800044a:	60c3      	str	r3, [r0, #12]
 800044c:	f8d1 3009 	ldr.w	r3, [r1, #9]
 8000450:	6103      	str	r3, [r0, #16]
 8000452:	200d      	movs	r0, #13
 8000454:	4770      	bx	lr
	...

08000458 <AKROS_bridge::motor_reply_single::getType()>:
 8000458:	4800      	ldr	r0, [pc, #0]	; (800045c <AKROS_bridge::motor_reply_single::getType()+0x4>)
 800045a:	4770      	bx	lr
 800045c:	08006e61 	.word	0x08006e61

08000460 <AKROS_bridge::motor_reply_single::getMD5()>:
 8000460:	4800      	ldr	r0, [pc, #0]	; (8000464 <AKROS_bridge::motor_reply_single::getMD5()+0x4>)
 8000462:	4770      	bx	lr
 8000464:	08006e40 	.word	0x08006e40

08000468 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getEndpointType()>:
 8000468:	2003      	movs	r0, #3
 800046a:	4770      	bx	lr

0800046c <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()>:
 800046c:	4800      	ldr	r0, [pc, #0]	; (8000470 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()+0x4>)
 800046e:	4770      	bx	lr
 8000470:	08006ff5 	.word	0x08006ff5

08000474 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()>:
 8000474:	4800      	ldr	r0, [pc, #0]	; (8000478 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()+0x4>)
 8000476:	4770      	bx	lr
 8000478:	08006fd4 	.word	0x08006fd4

0800047c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getEndpointType()>:
 800047c:	2003      	movs	r0, #3
 800047e:	4770      	bx	lr

08000480 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()>:
 8000480:	4800      	ldr	r0, [pc, #0]	; (8000484 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()+0x4>)
 8000482:	4770      	bx	lr
 8000484:	08006ea2 	.word	0x08006ea2

08000488 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()>:
 8000488:	4800      	ldr	r0, [pc, #0]	; (800048c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()+0x4>)
 800048a:	4770      	bx	lr
 800048c:	08006fd4 	.word	0x08006fd4

08000490 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::callback(unsigned char*)>:
 8000490:	b570      	push	{r4, r5, r6, lr}
 8000492:	4605      	mov	r5, r0
 8000494:	f100 040c 	add.w	r4, r0, #12
 8000498:	4620      	mov	r0, r4
 800049a:	f7ff ff97 	bl	80003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>
 800049e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80004a0:	4620      	mov	r0, r4
 80004a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004a6:	4718      	bx	r3

080004a8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getEndpointType()>:
 80004a8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80004aa:	4770      	bx	lr

080004ac <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()>:
 80004ac:	4800      	ldr	r0, [pc, #0]	; (80004b0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()+0x4>)
 80004ae:	4770      	bx	lr
 80004b0:	08006e22 	.word	0x08006e22

080004b4 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()>:
 80004b4:	4800      	ldr	r0, [pc, #0]	; (80004b8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()+0x4>)
 80004b6:	4770      	bx	lr
 80004b8:	08006e01 	.word	0x08006e01

080004bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80004bc:	f890 0578 	ldrb.w	r0, [r0, #1400]	; 0x578
 80004c0:	4770      	bx	lr
	...

080004c4 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 80004c4:	2101      	movs	r1, #1
 80004c6:	4801      	ldr	r0, [pc, #4]	; (80004cc <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 80004c8:	f001 b914 	b.w	80016f4 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>
 80004cc:	20000254 	.word	0x20000254

080004d0 <ros::Publisher::publish(ros::Msg const*)>:
 80004d0:	68c3      	ldr	r3, [r0, #12]
 80004d2:	681a      	ldr	r2, [r3, #0]
 80004d4:	b410      	push	{r4}
 80004d6:	6814      	ldr	r4, [r2, #0]
 80004d8:	460a      	mov	r2, r1
 80004da:	6881      	ldr	r1, [r0, #8]
 80004dc:	4618      	mov	r0, r3
 80004de:	4623      	mov	r3, r4
 80004e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80004e4:	4718      	bx	r3

080004e6 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::callback(unsigned char*)>:
 80004e6:	b538      	push	{r3, r4, r5, lr}
 80004e8:	f100 0510 	add.w	r5, r0, #16
 80004ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80004ee:	4604      	mov	r4, r0
 80004f0:	4629      	mov	r1, r5
 80004f2:	300c      	adds	r0, #12
 80004f4:	4798      	blx	r3
 80004f6:	4629      	mov	r1, r5
 80004f8:	f104 0014 	add.w	r0, r4, #20
 80004fc:	f7ff ffe8 	bl	80004d0 <ros::Publisher::publish(ros::Msg const*)>
 8000500:	bd38      	pop	{r3, r4, r5, pc}

08000502 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::callback(unsigned char*)>:
 8000502:	b538      	push	{r3, r4, r5, lr}
 8000504:	f100 0510 	add.w	r5, r0, #16
 8000508:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800050a:	4604      	mov	r4, r0
 800050c:	4629      	mov	r1, r5
 800050e:	300c      	adds	r0, #12
 8000510:	4798      	blx	r3
 8000512:	4629      	mov	r1, r5
 8000514:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8000518:	f7ff ffda 	bl	80004d0 <ros::Publisher::publish(ros::Msg const*)>
 800051c:	bd38      	pop	{r3, r4, r5, pc}

0800051e <mbed::CANMessage::CANMessage()>:
 800051e:	b510      	push	{r4, lr}
 8000520:	2210      	movs	r2, #16
 8000522:	4604      	mov	r4, r0
 8000524:	2100      	movs	r1, #0
 8000526:	f005 fea8 	bl	800627a <memset>
 800052a:	2308      	movs	r3, #8
 800052c:	7323      	strb	r3, [r4, #12]
 800052e:	2300      	movs	r3, #0
 8000530:	6063      	str	r3, [r4, #4]
 8000532:	60a3      	str	r3, [r4, #8]
 8000534:	4620      	mov	r0, r4
 8000536:	bd10      	pop	{r4, pc}

08000538 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)>:
 8000538:	b530      	push	{r4, r5, lr}
 800053a:	b087      	sub	sp, #28
 800053c:	4604      	mov	r4, r0
 800053e:	ad02      	add	r5, sp, #8
 8000540:	4628      	mov	r0, r5
 8000542:	f7ff ffec 	bl	800051e <mbed::CANMessage::CANMessage()>
 8000546:	7923      	ldrb	r3, [r4, #4]
 8000548:	68e2      	ldr	r2, [r4, #12]
 800054a:	68a1      	ldr	r1, [r4, #8]
 800054c:	3301      	adds	r3, #1
 800054e:	9302      	str	r3, [sp, #8]
 8000550:	69a3      	ldr	r3, [r4, #24]
 8000552:	9301      	str	r3, [sp, #4]
 8000554:	6963      	ldr	r3, [r4, #20]
 8000556:	9300      	str	r3, [sp, #0]
 8000558:	4628      	mov	r0, r5
 800055a:	6923      	ldr	r3, [r4, #16]
 800055c:	f001 f8f2 	bl	8001744 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>
 8000560:	9b05      	ldr	r3, [sp, #20]
 8000562:	9300      	str	r3, [sp, #0]
 8000564:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8000568:	4802      	ldr	r0, [pc, #8]	; (8000574 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)+0x3c>)
 800056a:	f004 fe0c 	bl	8005186 <mbed::CAN::write(mbed::CANMessage)>
 800056e:	b007      	add	sp, #28
 8000570:	bd30      	pop	{r4, r5, pc}
 8000572:	bf00      	nop
 8000574:	20000254 	.word	0x20000254

08000578 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)>:
 8000578:	b530      	push	{r4, r5, lr}
 800057a:	b08d      	sub	sp, #52	; 0x34
 800057c:	ac08      	add	r4, sp, #32
 800057e:	4620      	mov	r0, r4
 8000580:	460d      	mov	r5, r1
 8000582:	f7ff ffcc 	bl	800051e <mbed::CANMessage::CANMessage()>
 8000586:	2101      	movs	r1, #1
 8000588:	4815      	ldr	r0, [pc, #84]	; (80005e0 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x68>)
 800058a:	f001 f88c 	bl	80016a6 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>
 800058e:	200a      	movs	r0, #10
 8000590:	f004 feea 	bl	8005368 <wait_ms>
 8000594:	2200      	movs	r2, #0
 8000596:	4621      	mov	r1, r4
 8000598:	4811      	ldr	r0, [pc, #68]	; (80005e0 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x68>)
 800059a:	f004 fe13 	bl	80051c4 <mbed::CAN::read(mbed::CANMessage&, int)>
 800059e:	b1e8      	cbz	r0, 80005dc <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 80005a0:	9b08      	ldr	r3, [sp, #32]
 80005a2:	b9db      	cbnz	r3, 80005dc <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 80005a4:	ab07      	add	r3, sp, #28
 80005a6:	9303      	str	r3, [sp, #12]
 80005a8:	ab06      	add	r3, sp, #24
 80005aa:	9302      	str	r3, [sp, #8]
 80005ac:	ab05      	add	r3, sp, #20
 80005ae:	9301      	str	r3, [sp, #4]
 80005b0:	f10d 0313 	add.w	r3, sp, #19
 80005b4:	9300      	str	r3, [sp, #0]
 80005b6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80005ba:	f001 f93d 	bl	8001838 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 80005be:	9805      	ldr	r0, [sp, #20]
 80005c0:	f005 fbc6 	bl	8005d50 <__aeabi_f2d>
 80005c4:	e9c5 0102 	strd	r0, r1, [r5, #8]
 80005c8:	9806      	ldr	r0, [sp, #24]
 80005ca:	f005 fbc1 	bl	8005d50 <__aeabi_f2d>
 80005ce:	e9c5 0104 	strd	r0, r1, [r5, #16]
 80005d2:	9807      	ldr	r0, [sp, #28]
 80005d4:	f005 fbbc 	bl	8005d50 <__aeabi_f2d>
 80005d8:	e9c5 0106 	strd	r0, r1, [r5, #24]
 80005dc:	b00d      	add	sp, #52	; 0x34
 80005de:	bd30      	pop	{r4, r5, pc}
 80005e0:	20000254 	.word	0x20000254

080005e4 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)>:
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	b08d      	sub	sp, #52	; 0x34
 80005e8:	ac08      	add	r4, sp, #32
 80005ea:	4620      	mov	r0, r4
 80005ec:	460d      	mov	r5, r1
 80005ee:	f7ff ff96 	bl	800051e <mbed::CANMessage::CANMessage()>
 80005f2:	2101      	movs	r1, #1
 80005f4:	481b      	ldr	r0, [pc, #108]	; (8000664 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x80>)
 80005f6:	f001 f82f 	bl	8001658 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>
 80005fa:	200a      	movs	r0, #10
 80005fc:	f004 feb4 	bl	8005368 <wait_ms>
 8000600:	2200      	movs	r2, #0
 8000602:	4621      	mov	r1, r4
 8000604:	4817      	ldr	r0, [pc, #92]	; (8000664 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x80>)
 8000606:	f004 fddd 	bl	80051c4 <mbed::CAN::read(mbed::CANMessage&, int)>
 800060a:	2800      	cmp	r0, #0
 800060c:	d027      	beq.n	800065e <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x7a>
 800060e:	9b08      	ldr	r3, [sp, #32]
 8000610:	bb2b      	cbnz	r3, 800065e <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x7a>
 8000612:	ab07      	add	r3, sp, #28
 8000614:	9303      	str	r3, [sp, #12]
 8000616:	ab06      	add	r3, sp, #24
 8000618:	9302      	str	r3, [sp, #8]
 800061a:	ab05      	add	r3, sp, #20
 800061c:	9301      	str	r3, [sp, #4]
 800061e:	f10d 0313 	add.w	r3, sp, #19
 8000622:	9300      	str	r3, [sp, #0]
 8000624:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000628:	f001 f906 	bl	8001838 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 800062c:	9c05      	ldr	r4, [sp, #20]
 800062e:	4620      	mov	r0, r4
 8000630:	f005 fb8e 	bl	8005d50 <__aeabi_f2d>
 8000634:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8000638:	9806      	ldr	r0, [sp, #24]
 800063a:	f005 fb89 	bl	8005d50 <__aeabi_f2d>
 800063e:	e9c5 0104 	strd	r0, r1, [r5, #16]
 8000642:	9807      	ldr	r0, [sp, #28]
 8000644:	f005 fb84 	bl	8005d50 <__aeabi_f2d>
 8000648:	4b07      	ldr	r3, [pc, #28]	; (8000668 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 800064a:	685a      	ldr	r2, [r3, #4]
 800064c:	e9c5 0106 	strd	r0, r1, [r5, #24]
 8000650:	6014      	str	r4, [r2, #0]
 8000652:	69da      	ldr	r2, [r3, #28]
 8000654:	9906      	ldr	r1, [sp, #24]
 8000656:	6011      	str	r1, [r2, #0]
 8000658:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800065a:	9a07      	ldr	r2, [sp, #28]
 800065c:	601a      	str	r2, [r3, #0]
 800065e:	b00d      	add	sp, #52	; 0x34
 8000660:	bd30      	pop	{r4, r5, pc}
 8000662:	bf00      	nop
 8000664:	20000254 	.word	0x20000254
 8000668:	20000398 	.word	0x20000398

0800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 800066c:	3801      	subs	r0, #1
 800066e:	2300      	movs	r3, #0
 8000670:	fa21 f203 	lsr.w	r2, r1, r3
 8000674:	3308      	adds	r3, #8
 8000676:	2b20      	cmp	r3, #32
 8000678:	f800 2f01 	strb.w	r2, [r0, #1]!
 800067c:	d1f8      	bne.n	8000670 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800067e:	4770      	bx	lr

08000680 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000680:	6843      	ldr	r3, [r0, #4]
 8000682:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000686:	700b      	strb	r3, [r1, #0]
 8000688:	6843      	ldr	r3, [r0, #4]
 800068a:	0a1b      	lsrs	r3, r3, #8
 800068c:	704b      	strb	r3, [r1, #1]
 800068e:	88c3      	ldrh	r3, [r0, #6]
 8000690:	708b      	strb	r3, [r1, #2]
 8000692:	79c3      	ldrb	r3, [r0, #7]
 8000694:	70cb      	strb	r3, [r1, #3]
 8000696:	460d      	mov	r5, r1
 8000698:	1d0a      	adds	r2, r1, #4
 800069a:	4604      	mov	r4, r0
 800069c:	2100      	movs	r1, #0
 800069e:	6860      	ldr	r0, [r4, #4]
 80006a0:	4281      	cmp	r1, r0
 80006a2:	eba2 0305 	sub.w	r3, r2, r5
 80006a6:	f102 0204 	add.w	r2, r2, #4
 80006aa:	d20f      	bcs.n	80006cc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 80006ac:	68e3      	ldr	r3, [r4, #12]
 80006ae:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80006b2:	f802 3c04 	strb.w	r3, [r2, #-4]
 80006b6:	0a18      	lsrs	r0, r3, #8
 80006b8:	f802 0c03 	strb.w	r0, [r2, #-3]
 80006bc:	0c18      	lsrs	r0, r3, #16
 80006be:	0e1b      	lsrs	r3, r3, #24
 80006c0:	f802 0c02 	strb.w	r0, [r2, #-2]
 80006c4:	f802 3c01 	strb.w	r3, [r2, #-1]
 80006c8:	3101      	adds	r1, #1
 80006ca:	e7e8      	b.n	800069e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 80006cc:	6922      	ldr	r2, [r4, #16]
 80006ce:	54ea      	strb	r2, [r5, r3]
 80006d0:	6921      	ldr	r1, [r4, #16]
 80006d2:	18ea      	adds	r2, r5, r3
 80006d4:	0a09      	lsrs	r1, r1, #8
 80006d6:	7051      	strb	r1, [r2, #1]
 80006d8:	8a61      	ldrh	r1, [r4, #18]
 80006da:	7091      	strb	r1, [r2, #2]
 80006dc:	7ce1      	ldrb	r1, [r4, #19]
 80006de:	70d1      	strb	r1, [r2, #3]
 80006e0:	3304      	adds	r3, #4
 80006e2:	442b      	add	r3, r5
 80006e4:	2100      	movs	r1, #0
 80006e6:	6922      	ldr	r2, [r4, #16]
 80006e8:	4291      	cmp	r1, r2
 80006ea:	eba3 0605 	sub.w	r6, r3, r5
 80006ee:	f103 0304 	add.w	r3, r3, #4
 80006f2:	d20f      	bcs.n	8000714 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80006f4:	69a2      	ldr	r2, [r4, #24]
 80006f6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80006fa:	f803 2c04 	strb.w	r2, [r3, #-4]
 80006fe:	0a10      	lsrs	r0, r2, #8
 8000700:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000704:	0c10      	lsrs	r0, r2, #16
 8000706:	0e12      	lsrs	r2, r2, #24
 8000708:	f803 0c02 	strb.w	r0, [r3, #-2]
 800070c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000710:	3101      	adds	r1, #1
 8000712:	e7e8      	b.n	80006e6 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000714:	69e3      	ldr	r3, [r4, #28]
 8000716:	55ab      	strb	r3, [r5, r6]
 8000718:	69e2      	ldr	r2, [r4, #28]
 800071a:	19ab      	adds	r3, r5, r6
 800071c:	0a12      	lsrs	r2, r2, #8
 800071e:	705a      	strb	r2, [r3, #1]
 8000720:	8be2      	ldrh	r2, [r4, #30]
 8000722:	709a      	strb	r2, [r3, #2]
 8000724:	7fe2      	ldrb	r2, [r4, #31]
 8000726:	70da      	strb	r2, [r3, #3]
 8000728:	3604      	adds	r6, #4
 800072a:	2700      	movs	r7, #0
 800072c:	69e3      	ldr	r3, [r4, #28]
 800072e:	429f      	cmp	r7, r3
 8000730:	d214      	bcs.n	800075c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 8000732:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000734:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000738:	f006 f86b 	bl	8006812 <strlen>
 800073c:	4680      	mov	r8, r0
 800073e:	4601      	mov	r1, r0
 8000740:	19a8      	adds	r0, r5, r6
 8000742:	f7ff ff93 	bl	800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000746:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000748:	3604      	adds	r6, #4
 800074a:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800074e:	19a8      	adds	r0, r5, r6
 8000750:	4642      	mov	r2, r8
 8000752:	f005 fd6d 	bl	8006230 <memcpy>
 8000756:	4446      	add	r6, r8
 8000758:	3701      	adds	r7, #1
 800075a:	e7e7      	b.n	800072c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 800075c:	4630      	mov	r0, r6
 800075e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000762 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000762:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000764:	460e      	mov	r6, r1
 8000766:	7903      	ldrb	r3, [r0, #4]
 8000768:	f806 3b01 	strb.w	r3, [r6], #1
 800076c:	4605      	mov	r5, r0
 800076e:	6880      	ldr	r0, [r0, #8]
 8000770:	460f      	mov	r7, r1
 8000772:	f006 f84e 	bl	8006812 <strlen>
 8000776:	4604      	mov	r4, r0
 8000778:	4601      	mov	r1, r0
 800077a:	4630      	mov	r0, r6
 800077c:	f7ff ff76 	bl	800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000780:	4622      	mov	r2, r4
 8000782:	68a9      	ldr	r1, [r5, #8]
 8000784:	1d78      	adds	r0, r7, #5
 8000786:	f005 fd53 	bl	8006230 <memcpy>
 800078a:	1d60      	adds	r0, r4, #5
 800078c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800078e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800078e:	8883      	ldrh	r3, [r0, #4]
 8000790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000794:	700b      	strb	r3, [r1, #0]
 8000796:	8883      	ldrh	r3, [r0, #4]
 8000798:	0a1b      	lsrs	r3, r3, #8
 800079a:	704b      	strb	r3, [r1, #1]
 800079c:	4605      	mov	r5, r0
 800079e:	6880      	ldr	r0, [r0, #8]
 80007a0:	460c      	mov	r4, r1
 80007a2:	f006 f836 	bl	8006812 <strlen>
 80007a6:	4607      	mov	r7, r0
 80007a8:	4601      	mov	r1, r0
 80007aa:	1ca0      	adds	r0, r4, #2
 80007ac:	f7ff ff5e 	bl	800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007b0:	463a      	mov	r2, r7
 80007b2:	68a9      	ldr	r1, [r5, #8]
 80007b4:	1da0      	adds	r0, r4, #6
 80007b6:	f005 fd3b 	bl	8006230 <memcpy>
 80007ba:	68e8      	ldr	r0, [r5, #12]
 80007bc:	f006 f829 	bl	8006812 <strlen>
 80007c0:	f107 0806 	add.w	r8, r7, #6
 80007c4:	4606      	mov	r6, r0
 80007c6:	4601      	mov	r1, r0
 80007c8:	370a      	adds	r7, #10
 80007ca:	eb04 0008 	add.w	r0, r4, r8
 80007ce:	f7ff ff4d 	bl	800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007d2:	4632      	mov	r2, r6
 80007d4:	68e9      	ldr	r1, [r5, #12]
 80007d6:	19e0      	adds	r0, r4, r7
 80007d8:	f005 fd2a 	bl	8006230 <memcpy>
 80007dc:	6928      	ldr	r0, [r5, #16]
 80007de:	f006 f818 	bl	8006812 <strlen>
 80007e2:	443e      	add	r6, r7
 80007e4:	4601      	mov	r1, r0
 80007e6:	4607      	mov	r7, r0
 80007e8:	19a0      	adds	r0, r4, r6
 80007ea:	3604      	adds	r6, #4
 80007ec:	f7ff ff3e 	bl	800066c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007f0:	463a      	mov	r2, r7
 80007f2:	19a0      	adds	r0, r4, r6
 80007f4:	6929      	ldr	r1, [r5, #16]
 80007f6:	443e      	add	r6, r7
 80007f8:	f005 fd1a 	bl	8006230 <memcpy>
 80007fc:	696b      	ldr	r3, [r5, #20]
 80007fe:	55a3      	strb	r3, [r4, r6]
 8000800:	4434      	add	r4, r6
 8000802:	0a1a      	lsrs	r2, r3, #8
 8000804:	7062      	strb	r2, [r4, #1]
 8000806:	0c1a      	lsrs	r2, r3, #16
 8000808:	0e1b      	lsrs	r3, r3, #24
 800080a:	70a2      	strb	r2, [r4, #2]
 800080c:	70e3      	strb	r3, [r4, #3]
 800080e:	1d30      	adds	r0, r6, #4
 8000810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000814:	b510      	push	{r4, lr}
 8000816:	2300      	movs	r3, #0
 8000818:	6003      	str	r3, [r0, #0]
 800081a:	3901      	subs	r1, #1
 800081c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8000820:	fa02 f403 	lsl.w	r4, r2, r3
 8000824:	6802      	ldr	r2, [r0, #0]
 8000826:	3308      	adds	r3, #8
 8000828:	4322      	orrs	r2, r4
 800082a:	2b20      	cmp	r3, #32
 800082c:	6002      	str	r2, [r0, #0]
 800082e:	d1f5      	bne.n	800081c <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000830:	bd10      	pop	{r4, pc}

08000832 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000832:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000834:	460c      	mov	r4, r1
 8000836:	f811 3b01 	ldrb.w	r3, [r1], #1
 800083a:	7103      	strb	r3, [r0, #4]
 800083c:	4605      	mov	r5, r0
 800083e:	a801      	add	r0, sp, #4
 8000840:	f7ff ffe8 	bl	8000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000844:	9b01      	ldr	r3, [sp, #4]
 8000846:	1d62      	adds	r2, r4, #5
 8000848:	1d58      	adds	r0, r3, #5
 800084a:	1b11      	subs	r1, r2, r4
 800084c:	4288      	cmp	r0, r1
 800084e:	d904      	bls.n	800085a <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000850:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000854:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000858:	e7f7      	b.n	800084a <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 800085a:	4423      	add	r3, r4
 800085c:	2200      	movs	r2, #0
 800085e:	3404      	adds	r4, #4
 8000860:	711a      	strb	r2, [r3, #4]
 8000862:	60ac      	str	r4, [r5, #8]
 8000864:	b003      	add	sp, #12
 8000866:	bd30      	pop	{r4, r5, pc}

08000868 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000868:	b5f0      	push	{r4, r5, r6, r7, lr}
 800086a:	780b      	ldrb	r3, [r1, #0]
 800086c:	8083      	strh	r3, [r0, #4]
 800086e:	784a      	ldrb	r2, [r1, #1]
 8000870:	b085      	sub	sp, #20
 8000872:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000876:	8083      	strh	r3, [r0, #4]
 8000878:	460c      	mov	r4, r1
 800087a:	4606      	mov	r6, r0
 800087c:	3102      	adds	r1, #2
 800087e:	a801      	add	r0, sp, #4
 8000880:	f7ff ffc8 	bl	8000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000884:	9f01      	ldr	r7, [sp, #4]
 8000886:	1da3      	adds	r3, r4, #6
 8000888:	1dbd      	adds	r5, r7, #6
 800088a:	1b1a      	subs	r2, r3, r4
 800088c:	4295      	cmp	r5, r2
 800088e:	d904      	bls.n	800089a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000890:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000894:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000898:	e7f7      	b.n	800088a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800089a:	19e3      	adds	r3, r4, r7
 800089c:	2200      	movs	r2, #0
 800089e:	715a      	strb	r2, [r3, #5]
 80008a0:	1d63      	adds	r3, r4, #5
 80008a2:	60b3      	str	r3, [r6, #8]
 80008a4:	1961      	adds	r1, r4, r5
 80008a6:	a802      	add	r0, sp, #8
 80008a8:	f7ff ffb4 	bl	8000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008ac:	1d2b      	adds	r3, r5, #4
 80008ae:	9d02      	ldr	r5, [sp, #8]
 80008b0:	f107 020a 	add.w	r2, r7, #10
 80008b4:	441d      	add	r5, r3
 80008b6:	4422      	add	r2, r4
 80008b8:	1b11      	subs	r1, r2, r4
 80008ba:	428d      	cmp	r5, r1
 80008bc:	d904      	bls.n	80008c8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 80008be:	f812 1b01 	ldrb.w	r1, [r2], #1
 80008c2:	f802 1c02 	strb.w	r1, [r2, #-2]
 80008c6:	e7f7      	b.n	80008b8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 80008c8:	1961      	adds	r1, r4, r5
 80008ca:	3b01      	subs	r3, #1
 80008cc:	4423      	add	r3, r4
 80008ce:	2200      	movs	r2, #0
 80008d0:	f801 2c01 	strb.w	r2, [r1, #-1]
 80008d4:	a803      	add	r0, sp, #12
 80008d6:	60f3      	str	r3, [r6, #12]
 80008d8:	f7ff ff9c 	bl	8000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008dc:	9803      	ldr	r0, [sp, #12]
 80008de:	3504      	adds	r5, #4
 80008e0:	4428      	add	r0, r5
 80008e2:	1963      	adds	r3, r4, r5
 80008e4:	1b1a      	subs	r2, r3, r4
 80008e6:	4290      	cmp	r0, r2
 80008e8:	d904      	bls.n	80008f4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 80008ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008ee:	f803 2c02 	strb.w	r2, [r3, #-2]
 80008f2:	e7f7      	b.n	80008e4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80008f4:	1822      	adds	r2, r4, r0
 80008f6:	3d01      	subs	r5, #1
 80008f8:	2300      	movs	r3, #0
 80008fa:	4425      	add	r5, r4
 80008fc:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000900:	6135      	str	r5, [r6, #16]
 8000902:	7893      	ldrb	r3, [r2, #2]
 8000904:	7851      	ldrb	r1, [r2, #1]
 8000906:	78d2      	ldrb	r2, [r2, #3]
 8000908:	041b      	lsls	r3, r3, #16
 800090a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800090e:	5c21      	ldrb	r1, [r4, r0]
 8000910:	430b      	orrs	r3, r1
 8000912:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000916:	3004      	adds	r0, #4
 8000918:	6173      	str	r3, [r6, #20]
 800091a:	b005      	add	sp, #20
 800091c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800091e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 800091e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000922:	6843      	ldr	r3, [r0, #4]
 8000924:	680d      	ldr	r5, [r1, #0]
 8000926:	429d      	cmp	r5, r3
 8000928:	4604      	mov	r4, r0
 800092a:	460e      	mov	r6, r1
 800092c:	d904      	bls.n	8000938 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 800092e:	00a9      	lsls	r1, r5, #2
 8000930:	68c0      	ldr	r0, [r0, #12]
 8000932:	f005 ff13 	bl	800675c <realloc>
 8000936:	60e0      	str	r0, [r4, #12]
 8000938:	6065      	str	r5, [r4, #4]
 800093a:	1d32      	adds	r2, r6, #4
 800093c:	2100      	movs	r1, #0
 800093e:	6860      	ldr	r0, [r4, #4]
 8000940:	4281      	cmp	r1, r0
 8000942:	eba2 0306 	sub.w	r3, r2, r6
 8000946:	f102 0204 	add.w	r2, r2, #4
 800094a:	d213      	bcs.n	8000974 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 800094c:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000950:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000954:	041b      	lsls	r3, r3, #16
 8000956:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800095a:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 800095e:	4303      	orrs	r3, r0
 8000960:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000964:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000968:	68e0      	ldr	r0, [r4, #12]
 800096a:	60a3      	str	r3, [r4, #8]
 800096c:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000970:	3101      	adds	r1, #1
 8000972:	e7e4      	b.n	800093e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000974:	18f2      	adds	r2, r6, r3
 8000976:	5cf1      	ldrb	r1, [r6, r3]
 8000978:	7895      	ldrb	r5, [r2, #2]
 800097a:	7850      	ldrb	r0, [r2, #1]
 800097c:	78d2      	ldrb	r2, [r2, #3]
 800097e:	042d      	lsls	r5, r5, #16
 8000980:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000984:	430d      	orrs	r5, r1
 8000986:	1d1f      	adds	r7, r3, #4
 8000988:	6923      	ldr	r3, [r4, #16]
 800098a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800098e:	429d      	cmp	r5, r3
 8000990:	d904      	bls.n	800099c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000992:	00a9      	lsls	r1, r5, #2
 8000994:	69a0      	ldr	r0, [r4, #24]
 8000996:	f005 fee1 	bl	800675c <realloc>
 800099a:	61a0      	str	r0, [r4, #24]
 800099c:	6125      	str	r5, [r4, #16]
 800099e:	19f3      	adds	r3, r6, r7
 80009a0:	2100      	movs	r1, #0
 80009a2:	6922      	ldr	r2, [r4, #16]
 80009a4:	4291      	cmp	r1, r2
 80009a6:	eba3 0506 	sub.w	r5, r3, r6
 80009aa:	f103 0304 	add.w	r3, r3, #4
 80009ae:	d213      	bcs.n	80009d8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 80009b0:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 80009b4:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 80009b8:	0412      	lsls	r2, r2, #16
 80009ba:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80009be:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 80009c2:	4302      	orrs	r2, r0
 80009c4:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 80009c8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80009cc:	69a0      	ldr	r0, [r4, #24]
 80009ce:	6162      	str	r2, [r4, #20]
 80009d0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 80009d4:	3101      	adds	r1, #1
 80009d6:	e7e4      	b.n	80009a2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 80009d8:	1973      	adds	r3, r6, r5
 80009da:	5d72      	ldrb	r2, [r6, r5]
 80009dc:	789f      	ldrb	r7, [r3, #2]
 80009de:	7859      	ldrb	r1, [r3, #1]
 80009e0:	78db      	ldrb	r3, [r3, #3]
 80009e2:	043f      	lsls	r7, r7, #16
 80009e4:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80009e8:	4317      	orrs	r7, r2
 80009ea:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80009ee:	69e3      	ldr	r3, [r4, #28]
 80009f0:	429f      	cmp	r7, r3
 80009f2:	f105 0504 	add.w	r5, r5, #4
 80009f6:	d904      	bls.n	8000a02 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80009f8:	00b9      	lsls	r1, r7, #2
 80009fa:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80009fc:	f005 feae 	bl	800675c <realloc>
 8000a00:	6260      	str	r0, [r4, #36]	; 0x24
 8000a02:	61e7      	str	r7, [r4, #28]
 8000a04:	2700      	movs	r7, #0
 8000a06:	46b8      	mov	r8, r7
 8000a08:	69e3      	ldr	r3, [r4, #28]
 8000a0a:	429f      	cmp	r7, r3
 8000a0c:	d21a      	bcs.n	8000a44 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000a0e:	1971      	adds	r1, r6, r5
 8000a10:	a801      	add	r0, sp, #4
 8000a12:	f7ff feff 	bl	8000814 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000a16:	1d2b      	adds	r3, r5, #4
 8000a18:	9d01      	ldr	r5, [sp, #4]
 8000a1a:	18f2      	adds	r2, r6, r3
 8000a1c:	441d      	add	r5, r3
 8000a1e:	1b91      	subs	r1, r2, r6
 8000a20:	42a9      	cmp	r1, r5
 8000a22:	d204      	bcs.n	8000a2e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000a24:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000a28:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000a2c:	e7f7      	b.n	8000a1e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000a2e:	1972      	adds	r2, r6, r5
 8000a30:	3b01      	subs	r3, #1
 8000a32:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000a36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000a38:	4433      	add	r3, r6
 8000a3a:	6223      	str	r3, [r4, #32]
 8000a3c:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000a40:	3701      	adds	r7, #1
 8000a42:	e7e1      	b.n	8000a08 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000a44:	4628      	mov	r0, r5
 8000a46:	b002      	add	sp, #8
 8000a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000a4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>:
 8000a4c:	b510      	push	{r4, lr}
 8000a4e:	f200 429c 	addw	r2, r0, #1180	; 0x49c
 8000a52:	2300      	movs	r3, #0
 8000a54:	f852 4b04 	ldr.w	r4, [r2], #4
 8000a58:	b944      	cbnz	r4, 8000a6c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x20>
 8000a5a:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8000a5e:	337d      	adds	r3, #125	; 0x7d
 8000a60:	f8c2 149c 	str.w	r1, [r2, #1180]	; 0x49c
 8000a64:	60c8      	str	r0, [r1, #12]
 8000a66:	608b      	str	r3, [r1, #8]
 8000a68:	2001      	movs	r0, #1
 8000a6a:	bd10      	pop	{r4, pc}
 8000a6c:	3301      	adds	r3, #1
 8000a6e:	2b19      	cmp	r3, #25
 8000a70:	d1f0      	bne.n	8000a54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x8>
 8000a72:	2000      	movs	r0, #0
 8000a74:	bd10      	pop	{r4, pc}

08000a76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000a76:	b510      	push	{r4, lr}
 8000a78:	f500 62a0 	add.w	r2, r0, #1280	; 0x500
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	f852 4b04 	ldr.w	r4, [r2], #4
 8000a82:	b93c      	cbnz	r4, 8000a94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000a84:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 8000a88:	3364      	adds	r3, #100	; 0x64
 8000a8a:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000a8e:	604b      	str	r3, [r1, #4]
 8000a90:	2001      	movs	r0, #1
 8000a92:	bd10      	pop	{r4, pc}
 8000a94:	3301      	adds	r3, #1
 8000a96:	2b19      	cmp	r3, #25
 8000a98:	d1f1      	bne.n	8000a7e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000a9a:	2000      	movs	r0, #0
 8000a9c:	bd10      	pop	{r4, pc}

08000a9e <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>:
 8000a9e:	b570      	push	{r4, r5, r6, lr}
 8000aa0:	460c      	mov	r4, r1
 8000aa2:	3130      	adds	r1, #48	; 0x30
 8000aa4:	4606      	mov	r6, r0
 8000aa6:	f7ff ffd1 	bl	8000a4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000aaa:	4621      	mov	r1, r4
 8000aac:	4605      	mov	r5, r0
 8000aae:	4630      	mov	r0, r6
 8000ab0:	f7ff ffe1 	bl	8000a76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000ab4:	2d00      	cmp	r5, #0
 8000ab6:	bf08      	it	eq
 8000ab8:	2000      	moveq	r0, #0
 8000aba:	bd70      	pop	{r4, r5, r6, pc}

08000abc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000abc:	b530      	push	{r4, r5, lr}
 8000abe:	b085      	sub	sp, #20
 8000ac0:	4604      	mov	r4, r0
 8000ac2:	4b09      	ldr	r3, [pc, #36]	; (8000ae8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000ac4:	9301      	str	r3, [sp, #4]
 8000ac6:	2300      	movs	r3, #0
 8000ac8:	9302      	str	r3, [sp, #8]
 8000aca:	9303      	str	r3, [sp, #12]
 8000acc:	f854 3b7c 	ldr.w	r3, [r4], #124
 8000ad0:	aa01      	add	r2, sp, #4
 8000ad2:	681b      	ldr	r3, [r3, #0]
 8000ad4:	210a      	movs	r1, #10
 8000ad6:	4605      	mov	r5, r0
 8000ad8:	4798      	blx	r3
 8000ada:	4620      	mov	r0, r4
 8000adc:	f004 fb0c 	bl	80050f8 <mbed::Timer::read_ms()>
 8000ae0:	f8c5 008c 	str.w	r0, [r5, #140]	; 0x8c
 8000ae4:	b005      	add	sp, #20
 8000ae6:	bd30      	pop	{r4, r5, pc}
 8000ae8:	08006c70 	.word	0x08006c70

08000aec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000aec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000af0:	b086      	sub	sp, #24
 8000af2:	4b2b      	ldr	r3, [pc, #172]	; (8000ba0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000af4:	9300      	str	r3, [sp, #0]
 8000af6:	2200      	movs	r2, #0
 8000af8:	4b2a      	ldr	r3, [pc, #168]	; (8000ba4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000afa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000afe:	4605      	mov	r5, r0
 8000b00:	9302      	str	r3, [sp, #8]
 8000b02:	9303      	str	r3, [sp, #12]
 8000b04:	9304      	str	r3, [sp, #16]
 8000b06:	9205      	str	r2, [sp, #20]
 8000b08:	f200 449c 	addw	r4, r0, #1180	; 0x49c
 8000b0c:	f500 66a0 	add.w	r6, r0, #1280	; 0x500
 8000b10:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b14:	6823      	ldr	r3, [r4, #0]
 8000b16:	b1bb      	cbz	r3, 8000b48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000b18:	6858      	ldr	r0, [r3, #4]
 8000b1a:	689a      	ldr	r2, [r3, #8]
 8000b1c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b20:	681a      	ldr	r2, [r3, #0]
 8000b22:	6803      	ldr	r3, [r0, #0]
 8000b24:	9202      	str	r2, [sp, #8]
 8000b26:	689b      	ldr	r3, [r3, #8]
 8000b28:	4798      	blx	r3
 8000b2a:	6823      	ldr	r3, [r4, #0]
 8000b2c:	9003      	str	r0, [sp, #12]
 8000b2e:	6858      	ldr	r0, [r3, #4]
 8000b30:	6803      	ldr	r3, [r0, #0]
 8000b32:	68db      	ldr	r3, [r3, #12]
 8000b34:	4798      	blx	r3
 8000b36:	6821      	ldr	r1, [r4, #0]
 8000b38:	682b      	ldr	r3, [r5, #0]
 8000b3a:	9004      	str	r0, [sp, #16]
 8000b3c:	9705      	str	r7, [sp, #20]
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	6909      	ldr	r1, [r1, #16]
 8000b42:	466a      	mov	r2, sp
 8000b44:	4628      	mov	r0, r5
 8000b46:	4798      	blx	r3
 8000b48:	3404      	adds	r4, #4
 8000b4a:	42b4      	cmp	r4, r6
 8000b4c:	d1e2      	bne.n	8000b14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000b4e:	f205 5664 	addw	r6, r5, #1380	; 0x564
 8000b52:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b56:	6820      	ldr	r0, [r4, #0]
 8000b58:	b1c8      	cbz	r0, 8000b8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000b5a:	6843      	ldr	r3, [r0, #4]
 8000b5c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000b60:	6883      	ldr	r3, [r0, #8]
 8000b62:	9302      	str	r3, [sp, #8]
 8000b64:	6803      	ldr	r3, [r0, #0]
 8000b66:	689b      	ldr	r3, [r3, #8]
 8000b68:	4798      	blx	r3
 8000b6a:	9003      	str	r0, [sp, #12]
 8000b6c:	6820      	ldr	r0, [r4, #0]
 8000b6e:	6803      	ldr	r3, [r0, #0]
 8000b70:	68db      	ldr	r3, [r3, #12]
 8000b72:	4798      	blx	r3
 8000b74:	682b      	ldr	r3, [r5, #0]
 8000b76:	9004      	str	r0, [sp, #16]
 8000b78:	6820      	ldr	r0, [r4, #0]
 8000b7a:	f8d3 8000 	ldr.w	r8, [r3]
 8000b7e:	6803      	ldr	r3, [r0, #0]
 8000b80:	9705      	str	r7, [sp, #20]
 8000b82:	685b      	ldr	r3, [r3, #4]
 8000b84:	4798      	blx	r3
 8000b86:	466a      	mov	r2, sp
 8000b88:	4601      	mov	r1, r0
 8000b8a:	4628      	mov	r0, r5
 8000b8c:	47c0      	blx	r8
 8000b8e:	3404      	adds	r4, #4
 8000b90:	42a6      	cmp	r6, r4
 8000b92:	d1e0      	bne.n	8000b56 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000b94:	2301      	movs	r3, #1
 8000b96:	f885 3578 	strb.w	r3, [r5, #1400]	; 0x578
 8000b9a:	b006      	add	sp, #24
 8000b9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ba0:	08006c88 	.word	0x08006c88
 8000ba4:	0800708a 	.word	0x0800708a

08000ba8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000ba8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000baa:	b085      	sub	sp, #20
 8000bac:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8000bb0:	4b1e      	ldr	r3, [pc, #120]	; (8000c2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
 8000bb2:	9301      	str	r3, [sp, #4]
 8000bb4:	4604      	mov	r4, r0
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	4628      	mov	r0, r5
 8000bba:	9302      	str	r3, [sp, #8]
 8000bbc:	9303      	str	r3, [sp, #12]
 8000bbe:	460e      	mov	r6, r1
 8000bc0:	f004 fa9a 	bl	80050f8 <mbed::Timer::read_ms()>
 8000bc4:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8000bc8:	4631      	mov	r1, r6
 8000bca:	1a87      	subs	r7, r0, r2
 8000bcc:	a801      	add	r0, sp, #4
 8000bce:	f7ff fb25 	bl	800021c <std_msgs::Time::deserialize(unsigned char*)>
 8000bd2:	9b02      	ldr	r3, [sp, #8]
 8000bd4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000bd8:	fbb7 f2f6 	udiv	r2, r7, r6
 8000bdc:	4413      	add	r3, r2
 8000bde:	9302      	str	r3, [sp, #8]
 8000be0:	fb06 7212 	mls	r2, r6, r2, r7
 8000be4:	9b03      	ldr	r3, [sp, #12]
 8000be6:	4f12      	ldr	r7, [pc, #72]	; (8000c30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000be8:	4628      	mov	r0, r5
 8000bea:	fb07 3202 	mla	r2, r7, r2, r3
 8000bee:	9203      	str	r2, [sp, #12]
 8000bf0:	f004 fa82 	bl	80050f8 <mbed::Timer::read_ms()>
 8000bf4:	9a02      	ldr	r2, [sp, #8]
 8000bf6:	fbb0 f3f6 	udiv	r3, r0, r6
 8000bfa:	3a01      	subs	r2, #1
 8000bfc:	1ad2      	subs	r2, r2, r3
 8000bfe:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8000c02:	9903      	ldr	r1, [sp, #12]
 8000c04:	4a0b      	ldr	r2, [pc, #44]	; (8000c34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000c06:	fb06 0313 	mls	r3, r6, r3, r0
 8000c0a:	440a      	add	r2, r1
 8000c0c:	4621      	mov	r1, r4
 8000c0e:	fb07 2313 	mls	r3, r7, r3, r2
 8000c12:	f841 3f94 	str.w	r3, [r1, #148]!
 8000c16:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000c1a:	f000 fb41 	bl	80012a0 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000c1e:	4628      	mov	r0, r5
 8000c20:	f004 fa6a 	bl	80050f8 <mbed::Timer::read_ms()>
 8000c24:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8000c28:	b005      	add	sp, #20
 8000c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c2c:	08006c70 	.word	0x08006c70
 8000c30:	000f4240 	.word	0x000f4240
 8000c34:	3b9aca00 	.word	0x3b9aca00

08000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>:
 8000c38:	b510      	push	{r4, lr}
 8000c3a:	4604      	mov	r4, r0
 8000c3c:	6800      	ldr	r0, [r0, #0]
 8000c3e:	b108      	cbz	r0, 8000c44 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()+0xc>
 8000c40:	f004 fcbe 	bl	80055c0 <operator delete(void*)>
 8000c44:	4620      	mov	r0, r4
 8000c46:	bd10      	pop	{r4, pc}

08000c48 <motor_status::~motor_status()>:
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4604      	mov	r4, r0
 8000c4c:	3040      	adds	r0, #64	; 0x40
 8000c4e:	f7ff fff3 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c52:	f104 0034 	add.w	r0, r4, #52	; 0x34
 8000c56:	f7ff ffef 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c5a:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000c5e:	f7ff ffeb 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c62:	f104 001c 	add.w	r0, r4, #28
 8000c66:	f7ff ffe7 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c6a:	f104 0010 	add.w	r0, r4, #16
 8000c6e:	f7ff ffe3 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c72:	1d20      	adds	r0, r4, #4
 8000c74:	f7ff ffe0 	bl	8000c38 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	bd10      	pop	{r4, pc}

08000c7c <_GLOBAL__sub_I_can>:
 8000c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c7e:	4c73      	ldr	r4, [pc, #460]	; (8000e4c <_GLOBAL__sub_I_can+0x1d0>)
 8000c80:	4f73      	ldr	r7, [pc, #460]	; (8000e50 <_GLOBAL__sub_I_can+0x1d4>)
 8000c82:	220c      	movs	r2, #12
 8000c84:	210b      	movs	r1, #11
 8000c86:	4620      	mov	r0, r4
 8000c88:	f004 fadc 	bl	8005244 <mbed::CAN::CAN(PinName, PinName)>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	4c71      	ldr	r4, [pc, #452]	; (8000e54 <_GLOBAL__sub_I_can+0x1d8>)
 8000c90:	4971      	ldr	r1, [pc, #452]	; (8000e58 <_GLOBAL__sub_I_can+0x1dc>)
 8000c92:	463a      	mov	r2, r7
 8000c94:	f004 fc6a 	bl	800556c <__aeabi_atexit>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	f000 fe45 	bl	8001928 <motor_status::motor_status()>
 8000c9e:	4620      	mov	r0, r4
 8000ca0:	4c6e      	ldr	r4, [pc, #440]	; (8000e5c <_GLOBAL__sub_I_can+0x1e0>)
 8000ca2:	496f      	ldr	r1, [pc, #444]	; (8000e60 <_GLOBAL__sub_I_can+0x1e4>)
 8000ca4:	463a      	mov	r2, r7
 8000ca6:	f004 fc61 	bl	800556c <__aeabi_atexit>
 8000caa:	221c      	movs	r2, #28
 8000cac:	2100      	movs	r1, #0
 8000cae:	4620      	mov	r0, r4
 8000cb0:	f005 fae3 	bl	800627a <memset>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	4c6b      	ldr	r4, [pc, #428]	; (8000e64 <_GLOBAL__sub_I_can+0x1e8>)
 8000cb8:	2113      	movs	r1, #19
 8000cba:	f000 fef4 	bl	8001aa6 <gpio_init_out>
 8000cbe:	4620      	mov	r0, r4
 8000cc0:	4b69      	ldr	r3, [pc, #420]	; (8000e68 <_GLOBAL__sub_I_can+0x1ec>)
 8000cc2:	f840 3b04 	str.w	r3, [r0], #4
 8000cc6:	2500      	movs	r5, #0
 8000cc8:	2304      	movs	r3, #4
 8000cca:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000cce:	220f      	movs	r2, #15
 8000cd0:	2102      	movs	r1, #2
 8000cd2:	f104 067c 	add.w	r6, r4, #124	; 0x7c
 8000cd6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000cda:	f000 fbb5 	bl	8001448 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000cde:	4630      	mov	r0, r6
 8000ce0:	f004 fa20 	bl	8005124 <mbed::Timer::Timer()>
 8000ce4:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000ce8:	67a3      	str	r3, [r4, #120]	; 0x78
 8000cea:	4630      	mov	r0, r6
 8000cec:	f44f 7600 	mov.w	r6, #512	; 0x200
 8000cf0:	f004 f9d6 	bl	80050a0 <mbed::Timer::start()>
 8000cf4:	4632      	mov	r2, r6
 8000cf6:	4629      	mov	r1, r5
 8000cf8:	f104 009c 	add.w	r0, r4, #156	; 0x9c
 8000cfc:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8000d00:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
 8000d04:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8000d08:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8000d0c:	f005 fab5 	bl	800627a <memset>
 8000d10:	4632      	mov	r2, r6
 8000d12:	4629      	mov	r1, r5
 8000d14:	2664      	movs	r6, #100	; 0x64
 8000d16:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8000d1a:	f005 faae 	bl	800627a <memset>
 8000d1e:	4632      	mov	r2, r6
 8000d20:	4629      	mov	r1, r5
 8000d22:	f204 409c 	addw	r0, r4, #1180	; 0x49c
 8000d26:	f005 faa8 	bl	800627a <memset>
 8000d2a:	4632      	mov	r2, r6
 8000d2c:	4629      	mov	r1, r5
 8000d2e:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 8000d32:	f005 faa2 	bl	800627a <memset>
 8000d36:	4b4d      	ldr	r3, [pc, #308]	; (8000e6c <_GLOBAL__sub_I_can+0x1f0>)
 8000d38:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8000d3c:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
 8000d40:	2600      	movs	r6, #0
 8000d42:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 8000d46:	f8c4 5594 	str.w	r5, [r4, #1428]	; 0x594
 8000d4a:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8000d4e:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8000d52:	601e      	str	r6, [r3, #0]
 8000d54:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8000d58:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 8000d5c:	f8c4 55ac 	str.w	r5, [r4, #1452]	; 0x5ac
 8000d60:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 8000d64:	463a      	mov	r2, r7
 8000d66:	4942      	ldr	r1, [pc, #264]	; (8000e70 <_GLOBAL__sub_I_can+0x1f4>)
 8000d68:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	f8c4 5568 	str.w	r5, [r4, #1384]	; 0x568
 8000d72:	f8c4 556c 	str.w	r5, [r4, #1388]	; 0x56c
 8000d76:	f8c4 5570 	str.w	r5, [r4, #1392]	; 0x570
 8000d7a:	f8c4 5574 	str.w	r5, [r4, #1396]	; 0x574
 8000d7e:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8000d82:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000d86:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000d8a:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8000d8e:	f884 5588 	strb.w	r5, [r4, #1416]	; 0x588
 8000d92:	f004 fbeb 	bl	800556c <__aeabi_atexit>
 8000d96:	4b37      	ldr	r3, [pc, #220]	; (8000e74 <_GLOBAL__sub_I_can+0x1f8>)
 8000d98:	4a37      	ldr	r2, [pc, #220]	; (8000e78 <_GLOBAL__sub_I_can+0x1fc>)
 8000d9a:	601a      	str	r2, [r3, #0]
 8000d9c:	4937      	ldr	r1, [pc, #220]	; (8000e7c <_GLOBAL__sub_I_can+0x200>)
 8000d9e:	4a38      	ldr	r2, [pc, #224]	; (8000e80 <_GLOBAL__sub_I_can+0x204>)
 8000da0:	60de      	str	r6, [r3, #12]
 8000da2:	609e      	str	r6, [r3, #8]
 8000da4:	611e      	str	r6, [r3, #16]
 8000da6:	e882 000a 	stmia.w	r2, {r1, r3}
 8000daa:	711d      	strb	r5, [r3, #4]
 8000dac:	4b35      	ldr	r3, [pc, #212]	; (8000e84 <_GLOBAL__sub_I_can+0x208>)
 8000dae:	6115      	str	r5, [r2, #16]
 8000db0:	4a35      	ldr	r2, [pc, #212]	; (8000e88 <_GLOBAL__sub_I_can+0x20c>)
 8000db2:	601a      	str	r2, [r3, #0]
 8000db4:	4a35      	ldr	r2, [pc, #212]	; (8000e8c <_GLOBAL__sub_I_can+0x210>)
 8000db6:	60da      	str	r2, [r3, #12]
 8000db8:	4a35      	ldr	r2, [pc, #212]	; (8000e90 <_GLOBAL__sub_I_can+0x214>)
 8000dba:	629a      	str	r2, [r3, #40]	; 0x28
 8000dbc:	2201      	movs	r2, #1
 8000dbe:	62da      	str	r2, [r3, #44]	; 0x2c
 8000dc0:	4a34      	ldr	r2, [pc, #208]	; (8000e94 <_GLOBAL__sub_I_can+0x218>)
 8000dc2:	741d      	strb	r5, [r3, #16]
 8000dc4:	619e      	str	r6, [r3, #24]
 8000dc6:	61de      	str	r6, [r3, #28]
 8000dc8:	621e      	str	r6, [r3, #32]
 8000dca:	625e      	str	r6, [r3, #36]	; 0x24
 8000dcc:	609a      	str	r2, [r3, #8]
 8000dce:	615e      	str	r6, [r3, #20]
 8000dd0:	4b31      	ldr	r3, [pc, #196]	; (8000e98 <_GLOBAL__sub_I_can+0x21c>)
 8000dd2:	4f32      	ldr	r7, [pc, #200]	; (8000e9c <_GLOBAL__sub_I_can+0x220>)
 8000dd4:	4e32      	ldr	r6, [pc, #200]	; (8000ea0 <_GLOBAL__sub_I_can+0x224>)
 8000dd6:	4d33      	ldr	r5, [pc, #204]	; (8000ea4 <_GLOBAL__sub_I_can+0x228>)
 8000dd8:	4c33      	ldr	r4, [pc, #204]	; (8000ea8 <_GLOBAL__sub_I_can+0x22c>)
 8000dda:	631f      	str	r7, [r3, #48]	; 0x30
 8000ddc:	f103 0210 	add.w	r2, r3, #16
 8000de0:	2000      	movs	r0, #0
 8000de2:	2100      	movs	r1, #0
 8000de4:	635a      	str	r2, [r3, #52]	; 0x34
 8000de6:	609f      	str	r7, [r3, #8]
 8000de8:	2202      	movs	r2, #2
 8000dea:	4f30      	ldr	r7, [pc, #192]	; (8000eac <_GLOBAL__sub_I_can+0x230>)
 8000dec:	601e      	str	r6, [r3, #0]
 8000dee:	60dd      	str	r5, [r3, #12]
 8000df0:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000df4:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000df8:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000dfc:	611c      	str	r4, [r3, #16]
 8000dfe:	641a      	str	r2, [r3, #64]	; 0x40
 8000e00:	645f      	str	r7, [r3, #68]	; 0x44
 8000e02:	4b2b      	ldr	r3, [pc, #172]	; (8000eb0 <_GLOBAL__sub_I_can+0x234>)
 8000e04:	601e      	str	r6, [r3, #0]
 8000e06:	60dd      	str	r5, [r3, #12]
 8000e08:	611c      	str	r4, [r3, #16]
 8000e0a:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000e0e:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000e12:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000e16:	4927      	ldr	r1, [pc, #156]	; (8000eb4 <_GLOBAL__sub_I_can+0x238>)
 8000e18:	6099      	str	r1, [r3, #8]
 8000e1a:	6319      	str	r1, [r3, #48]	; 0x30
 8000e1c:	f103 0010 	add.w	r0, r3, #16
 8000e20:	4925      	ldr	r1, [pc, #148]	; (8000eb8 <_GLOBAL__sub_I_can+0x23c>)
 8000e22:	6358      	str	r0, [r3, #52]	; 0x34
 8000e24:	641a      	str	r2, [r3, #64]	; 0x40
 8000e26:	6459      	str	r1, [r3, #68]	; 0x44
 8000e28:	4b24      	ldr	r3, [pc, #144]	; (8000ebc <_GLOBAL__sub_I_can+0x240>)
 8000e2a:	4925      	ldr	r1, [pc, #148]	; (8000ec0 <_GLOBAL__sub_I_can+0x244>)
 8000e2c:	6019      	str	r1, [r3, #0]
 8000e2e:	4925      	ldr	r1, [pc, #148]	; (8000ec4 <_GLOBAL__sub_I_can+0x248>)
 8000e30:	60d9      	str	r1, [r3, #12]
 8000e32:	4925      	ldr	r1, [pc, #148]	; (8000ec8 <_GLOBAL__sub_I_can+0x24c>)
 8000e34:	6119      	str	r1, [r3, #16]
 8000e36:	625a      	str	r2, [r3, #36]	; 0x24
 8000e38:	4924      	ldr	r1, [pc, #144]	; (8000ecc <_GLOBAL__sub_I_can+0x250>)
 8000e3a:	4a25      	ldr	r2, [pc, #148]	; (8000ed0 <_GLOBAL__sub_I_can+0x254>)
 8000e3c:	6159      	str	r1, [r3, #20]
 8000e3e:	f103 0010 	add.w	r0, r3, #16
 8000e42:	6198      	str	r0, [r3, #24]
 8000e44:	6099      	str	r1, [r3, #8]
 8000e46:	629a      	str	r2, [r3, #40]	; 0x28
 8000e48:	b003      	add	sp, #12
 8000e4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e4c:	20000254 	.word	0x20000254
 8000e50:	20000188 	.word	0x20000188
 8000e54:	20000398 	.word	0x20000398
 8000e58:	080051f1 	.word	0x080051f1
 8000e5c:	2000043c 	.word	0x2000043c
 8000e60:	08000c49 	.word	0x08000c49
 8000e64:	20000458 	.word	0x20000458
 8000e68:	08006d60 	.word	0x08006d60
 8000e6c:	08006cb8 	.word	0x08006cb8
 8000e70:	08001259 	.word	0x08001259
 8000e74:	20000414 	.word	0x20000414
 8000e78:	08006d48 	.word	0x08006d48
 8000e7c:	08006db4 	.word	0x08006db4
 8000e80:	20000428 	.word	0x20000428
 8000e84:	200003e4 	.word	0x200003e4
 8000e88:	08006d74 	.word	0x08006d74
 8000e8c:	08006d30 	.word	0x08006d30
 8000e90:	08000539 	.word	0x08000539
 8000e94:	08006dc0 	.word	0x08006dc0
 8000e98:	20000308 	.word	0x20000308
 8000e9c:	08006dca 	.word	0x08006dca
 8000ea0:	08006d8c 	.word	0x08006d8c
 8000ea4:	08006d00 	.word	0x08006d00
 8000ea8:	08006d18 	.word	0x08006d18
 8000eac:	080005e5 	.word	0x080005e5
 8000eb0:	20000350 	.word	0x20000350
 8000eb4:	08006ddd 	.word	0x08006ddd
 8000eb8:	08000579 	.word	0x08000579
 8000ebc:	20000a0c 	.word	0x20000a0c
 8000ec0:	08006da4 	.word	0x08006da4
 8000ec4:	08006cd0 	.word	0x08006cd0
 8000ec8:	08006ce8 	.word	0x08006ce8
 8000ecc:	08006def 	.word	0x08006def
 8000ed0:	080004c5 	.word	0x080004c5

08000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ed6:	2963      	cmp	r1, #99	; 0x63
 8000ed8:	b085      	sub	sp, #20
 8000eda:	4604      	mov	r4, r0
 8000edc:	460e      	mov	r6, r1
 8000ede:	dd03      	ble.n	8000ee8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000ee0:	f890 5578 	ldrb.w	r5, [r0, #1400]	; 0x578
 8000ee4:	2d00      	cmp	r5, #0
 8000ee6:	d04d      	beq.n	8000f84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000ee8:	6813      	ldr	r3, [r2, #0]
 8000eea:	f204 21a3 	addw	r1, r4, #675	; 0x2a3
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4610      	mov	r0, r2
 8000ef2:	4798      	blx	r3
 8000ef4:	23ff      	movs	r3, #255	; 0xff
 8000ef6:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8000efa:	23fe      	movs	r3, #254	; 0xfe
 8000efc:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000f00:	f884 329d 	strb.w	r3, [r4, #669]	; 0x29d
 8000f04:	b2c3      	uxtb	r3, r0
 8000f06:	f884 329e 	strb.w	r3, [r4, #670]	; 0x29e
 8000f0a:	4413      	add	r3, r2
 8000f0c:	43db      	mvns	r3, r3
 8000f0e:	f884 62a1 	strb.w	r6, [r4, #673]	; 0x2a1
 8000f12:	f346 2607 	sbfx	r6, r6, #8, #8
 8000f16:	f884 229f 	strb.w	r2, [r4, #671]	; 0x29f
 8000f1a:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 8000f1e:	f884 62a2 	strb.w	r6, [r4, #674]	; 0x2a2
 8000f22:	f204 21a1 	addw	r1, r4, #673	; 0x2a1
 8000f26:	2205      	movs	r2, #5
 8000f28:	2300      	movs	r3, #0
 8000f2a:	1d86      	adds	r6, r0, #6
 8000f2c:	42b2      	cmp	r2, r6
 8000f2e:	dc04      	bgt.n	8000f3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000f30:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000f34:	3201      	adds	r2, #1
 8000f36:	442b      	add	r3, r5
 8000f38:	e7f8      	b.n	8000f2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000f3a:	f100 0508 	add.w	r5, r0, #8
 8000f3e:	4420      	add	r0, r4
 8000f40:	43db      	mvns	r3, r3
 8000f42:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000f46:	f880 32a3 	strb.w	r3, [r0, #675]	; 0x2a3
 8000f4a:	dc0c      	bgt.n	8000f66 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000f4c:	f504 7727 	add.w	r7, r4, #668	; 0x29c
 8000f50:	463e      	mov	r6, r7
 8000f52:	3404      	adds	r4, #4
 8000f54:	1bf3      	subs	r3, r6, r7
 8000f56:	429d      	cmp	r5, r3
 8000f58:	dd14      	ble.n	8000f84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000f5a:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000f5e:	4620      	mov	r0, r4
 8000f60:	f000 fadf 	bl	8001522 <BufferedSerial::putc(int)>
 8000f64:	e7f6      	b.n	8000f54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000f66:	4b09      	ldr	r3, [pc, #36]	; (8000f8c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000f68:	9301      	str	r3, [sp, #4]
 8000f6a:	2303      	movs	r3, #3
 8000f6c:	f88d 3008 	strb.w	r3, [sp, #8]
 8000f70:	4b07      	ldr	r3, [pc, #28]	; (8000f90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000f72:	9303      	str	r3, [sp, #12]
 8000f74:	6823      	ldr	r3, [r4, #0]
 8000f76:	aa01      	add	r2, sp, #4
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	2107      	movs	r1, #7
 8000f7c:	4620      	mov	r0, r4
 8000f7e:	4798      	blx	r3
 8000f80:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000f84:	4628      	mov	r0, r5
 8000f86:	b005      	add	sp, #20
 8000f88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f8a:	bf00      	nop
 8000f8c:	08006ca0 	.word	0x08006ca0
 8000f90:	08006f6c 	.word	0x08006f6c

08000f94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000f98:	f100 087c 	add.w	r8, r0, #124	; 0x7c
 8000f9c:	4604      	mov	r4, r0
 8000f9e:	4640      	mov	r0, r8
 8000fa0:	f004 f8aa 	bl	80050f8 <mbed::Timer::read_ms()>
 8000fa4:	f8d4 3580 	ldr.w	r3, [r4, #1408]	; 0x580
 8000fa8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000fac:	1ac3      	subs	r3, r0, r3
 8000fae:	4293      	cmp	r3, r2
 8000fb0:	bf84      	itt	hi
 8000fb2:	2300      	movhi	r3, #0
 8000fb4:	f884 3578 	strbhi.w	r3, [r4, #1400]	; 0x578
 8000fb8:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
 8000fbc:	4605      	mov	r5, r0
 8000fbe:	b133      	cbz	r3, 8000fce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000fc0:	f8d4 3584 	ldr.w	r3, [r4, #1412]	; 0x584
 8000fc4:	4283      	cmp	r3, r0
 8000fc6:	bf3c      	itt	cc
 8000fc8:	2300      	movcc	r3, #0
 8000fca:	f8c4 3564 	strcc.w	r3, [r4, #1380]	; 0x564
 8000fce:	f104 0904 	add.w	r9, r4, #4
 8000fd2:	2600      	movs	r6, #0
 8000fd4:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8000fd8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000fdc:	b9ab      	cbnz	r3, 800100a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000fde:	4648      	mov	r0, r9
 8000fe0:	f000 f96c 	bl	80012bc <BufferedSerial::readable()>
 8000fe4:	b9e8      	cbnz	r0, 8001022 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000fe6:	f894 0578 	ldrb.w	r0, [r4, #1400]	; 0x578
 8000fea:	b160      	cbz	r0, 8001006 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000fec:	f8d4 357c 	ldr.w	r3, [r4, #1404]	; 0x57c
 8000ff0:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000ff4:	1aeb      	subs	r3, r5, r3
 8000ff6:	4293      	cmp	r3, r2
 8000ff8:	d904      	bls.n	8001004 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	f7ff fd5e 	bl	8000abc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001000:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8001004:	2000      	movs	r0, #0
 8001006:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800100a:	4640      	mov	r0, r8
 800100c:	f004 f874 	bl	80050f8 <mbed::Timer::read_ms()>
 8001010:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8001014:	1b40      	subs	r0, r0, r5
 8001016:	4298      	cmp	r0, r3
 8001018:	d9e1      	bls.n	8000fde <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 800101a:	f06f 0001 	mvn.w	r0, #1
 800101e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001022:	4648      	mov	r0, r9
 8001024:	f000 f952 	bl	80012cc <BufferedSerial::getc()>
 8001028:	2800      	cmp	r0, #0
 800102a:	dbdc      	blt.n	8000fe6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 800102c:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
 8001030:	f8d4 a564 	ldr.w	r10, [r4, #1380]	; 0x564
 8001034:	4403      	add	r3, r0
 8001036:	f1ba 0f07 	cmp.w	r10, #7
 800103a:	f8c4 3574 	str.w	r3, [r4, #1396]	; 0x574
 800103e:	d112      	bne.n	8001066 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8001040:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 8001044:	1c5a      	adds	r2, r3, #1
 8001046:	4423      	add	r3, r4
 8001048:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
 800104c:	f883 009c 	strb.w	r0, [r3, #156]	; 0x9c
 8001050:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8001054:	3b01      	subs	r3, #1
 8001056:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 800105a:	2b00      	cmp	r3, #0
 800105c:	d1bc      	bne.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800105e:	2308      	movs	r3, #8
 8001060:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001064:	e7b8      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001066:	f1ba 0f00 	cmp.w	r10, #0
 800106a:	d114      	bne.n	8001096 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 800106c:	28ff      	cmp	r0, #255	; 0xff
 800106e:	d107      	bne.n	8001080 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8001070:	2301      	movs	r3, #1
 8001072:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001076:	f105 0314 	add.w	r3, r5, #20
 800107a:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 800107e:	e7ab      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001080:	4640      	mov	r0, r8
 8001082:	f004 f839 	bl	80050f8 <mbed::Timer::read_ms()>
 8001086:	f241 3388 	movw	r3, #5000	; 0x1388
 800108a:	1b40      	subs	r0, r0, r5
 800108c:	4298      	cmp	r0, r3
 800108e:	d9a3      	bls.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001090:	f884 a578 	strb.w	r10, [r4, #1400]	; 0x578
 8001094:	e7c1      	b.n	800101a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8001096:	f1ba 0f01 	cmp.w	r10, #1
 800109a:	d10d      	bne.n	80010b8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 800109c:	28fe      	cmp	r0, #254	; 0xfe
 800109e:	d101      	bne.n	80010a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 80010a0:	2302      	movs	r3, #2
 80010a2:	e7dd      	b.n	8001060 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 80010a4:	f894 3578 	ldrb.w	r3, [r4, #1400]	; 0x578
 80010a8:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d193      	bne.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010b0:	4620      	mov	r0, r4
 80010b2:	f7ff fd03 	bl	8000abc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80010b6:	e78f      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010b8:	f1ba 0f02 	cmp.w	r10, #2
 80010bc:	d109      	bne.n	80010d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 80010be:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 80010c2:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
 80010c6:	2303      	movs	r3, #3
 80010c8:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80010cc:	f8c4 0574 	str.w	r0, [r4, #1396]	; 0x574
 80010d0:	e782      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010d2:	f1ba 0f03 	cmp.w	r10, #3
 80010d6:	d107      	bne.n	80010e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 80010d8:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 80010dc:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 80010e0:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 80010e4:	2304      	movs	r3, #4
 80010e6:	e7bb      	b.n	8001060 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 80010e8:	f1ba 0f04 	cmp.w	r10, #4
 80010ec:	d10b      	bne.n	8001106 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 80010ee:	425a      	negs	r2, r3
 80010f0:	b2d2      	uxtb	r2, r2
 80010f2:	b2db      	uxtb	r3, r3
 80010f4:	bf58      	it	pl
 80010f6:	4253      	negpl	r3, r2
 80010f8:	2bff      	cmp	r3, #255	; 0xff
 80010fa:	d101      	bne.n	8001100 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 80010fc:	2305      	movs	r3, #5
 80010fe:	e7af      	b.n	8001060 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001100:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8001104:	e768      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001106:	f1ba 0f05 	cmp.w	r10, #5
 800110a:	d103      	bne.n	8001114 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 800110c:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8001110:	2306      	movs	r3, #6
 8001112:	e7d9      	b.n	80010c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8001114:	f1ba 0f06 	cmp.w	r10, #6
 8001118:	d10b      	bne.n	8001132 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 800111a:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 800111e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001122:	2307      	movs	r3, #7
 8001124:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001128:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 800112c:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8001130:	e793      	b.n	800105a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8001132:	f1ba 0f08 	cmp.w	r10, #8
 8001136:	f47f af4f 	bne.w	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800113a:	425a      	negs	r2, r3
 800113c:	b2d2      	uxtb	r2, r2
 800113e:	b2db      	uxtb	r3, r3
 8001140:	bf58      	it	pl
 8001142:	4253      	negpl	r3, r2
 8001144:	2bff      	cmp	r3, #255	; 0xff
 8001146:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 800114a:	f47f af45 	bne.w	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800114e:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8001152:	b96b      	cbnz	r3, 8001170 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8001154:	4620      	mov	r0, r4
 8001156:	f7ff fcb1 	bl	8000abc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800115a:	4620      	mov	r0, r4
 800115c:	f7ff fcc6 	bl	8000aec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001160:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8001164:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8001168:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800116c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001170:	2b0a      	cmp	r3, #10
 8001172:	d104      	bne.n	800117e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8001174:	4639      	mov	r1, r7
 8001176:	4620      	mov	r0, r4
 8001178:	f7ff fd16 	bl	8000ba8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 800117c:	e72c      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800117e:	2b06      	cmp	r3, #6
 8001180:	d108      	bne.n	8001194 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8001182:	4639      	mov	r1, r7
 8001184:	f204 508c 	addw	r0, r4, #1420	; 0x58c
 8001188:	f7ff fbc9 	bl	800091e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 800118c:	2301      	movs	r3, #1
 800118e:	f884 3588 	strb.w	r3, [r4, #1416]	; 0x588
 8001192:	e721      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001194:	2b0b      	cmp	r3, #11
 8001196:	d102      	bne.n	800119e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8001198:	f884 6578 	strb.w	r6, [r4, #1400]	; 0x578
 800119c:	e71c      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800119e:	33dc      	adds	r3, #220	; 0xdc
 80011a0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80011a4:	2800      	cmp	r0, #0
 80011a6:	f43f af17 	beq.w	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80011aa:	6803      	ldr	r3, [r0, #0]
 80011ac:	4639      	mov	r1, r7
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	4798      	blx	r3
 80011b2:	e711      	b.n	8000fd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

080011b4 <main>:
 80011b4:	b508      	push	{r3, lr}
 80011b6:	4b1d      	ldr	r3, [pc, #116]	; (800122c <main+0x78>)
 80011b8:	4c1d      	ldr	r4, [pc, #116]	; (8001230 <main+0x7c>)
 80011ba:	68da      	ldr	r2, [r3, #12]
 80011bc:	681b      	ldr	r3, [r3, #0]
 80011be:	6013      	str	r3, [r2, #0]
 80011c0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80011c4:	1d20      	adds	r0, r4, #4
 80011c6:	67a1      	str	r1, [r4, #120]	; 0x78
 80011c8:	f003 feab 	bl	8004f22 <mbed::SerialBase::baud(int)>
 80011cc:	2300      	movs	r3, #0
 80011ce:	2101      	movs	r1, #1
 80011d0:	4818      	ldr	r0, [pc, #96]	; (8001234 <main+0x80>)
 80011d2:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80011d6:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 80011da:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 80011de:	f8c4 356c 	str.w	r3, [r4, #1388]	; 0x56c
 80011e2:	f000 fc1d 	bl	8001a20 <motor_status::initialize(unsigned char)>
 80011e6:	4914      	ldr	r1, [pc, #80]	; (8001238 <main+0x84>)
 80011e8:	4620      	mov	r0, r4
 80011ea:	f7ff fc58 	bl	8000a9e <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>
 80011ee:	4913      	ldr	r1, [pc, #76]	; (800123c <main+0x88>)
 80011f0:	4620      	mov	r0, r4
 80011f2:	f7ff fc54 	bl	8000a9e <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>
 80011f6:	4912      	ldr	r1, [pc, #72]	; (8001240 <main+0x8c>)
 80011f8:	4620      	mov	r0, r4
 80011fa:	f7ff fc27 	bl	8000a4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 80011fe:	4911      	ldr	r1, [pc, #68]	; (8001244 <main+0x90>)
 8001200:	4620      	mov	r0, r4
 8001202:	f7ff fc38 	bl	8000a76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8001206:	4910      	ldr	r1, [pc, #64]	; (8001248 <main+0x94>)
 8001208:	4620      	mov	r0, r4
 800120a:	f7ff fc1f 	bl	8000a4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 800120e:	490f      	ldr	r1, [pc, #60]	; (800124c <main+0x98>)
 8001210:	4620      	mov	r0, r4
 8001212:	f7ff fc30 	bl	8000a76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8001216:	490e      	ldr	r1, [pc, #56]	; (8001250 <main+0x9c>)
 8001218:	480e      	ldr	r0, [pc, #56]	; (8001254 <main+0xa0>)
 800121a:	f003 ffa1 	bl	8005160 <mbed::CAN::frequency(int)>
 800121e:	4620      	mov	r0, r4
 8001220:	f7ff feb8 	bl	8000f94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001224:	200a      	movs	r0, #10
 8001226:	f004 f89f 	bl	8005368 <wait_ms>
 800122a:	e7f8      	b.n	800121e <main+0x6a>
 800122c:	2000043c 	.word	0x2000043c
 8001230:	20000458 	.word	0x20000458
 8001234:	20000398 	.word	0x20000398
 8001238:	20000308 	.word	0x20000308
 800123c:	20000350 	.word	0x20000350
 8001240:	20000a20 	.word	0x20000a20
 8001244:	20000a0c 	.word	0x20000a0c
 8001248:	20000428 	.word	0x20000428
 800124c:	200003e4 	.word	0x200003e4
 8001250:	000f4240 	.word	0x000f4240
 8001254:	20000254 	.word	0x20000254

08001258 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001258:	b510      	push	{r4, lr}
 800125a:	4b04      	ldr	r3, [pc, #16]	; (800126c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 800125c:	4604      	mov	r4, r0
 800125e:	f840 3b04 	str.w	r3, [r0], #4
 8001262:	f000 f87d 	bl	8001360 <BufferedSerial::~BufferedSerial()>
 8001266:	4620      	mov	r0, r4
 8001268:	bd10      	pop	{r4, pc}
 800126a:	bf00      	nop
 800126c:	08006d60 	.word	0x08006d60

08001270 <_start>:
 8001270:	4807      	ldr	r0, [pc, #28]	; (8001290 <_start+0x20>)
 8001272:	4a08      	ldr	r2, [pc, #32]	; (8001294 <_start+0x24>)
 8001274:	b508      	push	{r3, lr}
 8001276:	1a12      	subs	r2, r2, r0
 8001278:	2100      	movs	r1, #0
 800127a:	f004 fffe 	bl	800627a <memset>
 800127e:	f004 f933 	bl	80054e8 <software_init_hook>
 8001282:	f004 ff4d 	bl	8006120 <__libc_init_array>
 8001286:	f004 f936 	bl	80054f6 <__wrap_main>
 800128a:	f004 f971 	bl	8005570 <__wrap_exit>
 800128e:	bf00      	nop
 8001290:	20000238 	.word	0x20000238
 8001294:	20002028 	.word	0x20002028

08001298 <abort>:
 8001298:	b508      	push	{r3, lr}
 800129a:	2001      	movs	r0, #1
 800129c:	f004 f968 	bl	8005570 <__wrap_exit>

080012a0 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 80012a0:	b530      	push	{r4, r5, lr}
 80012a2:	6802      	ldr	r2, [r0, #0]
 80012a4:	680d      	ldr	r5, [r1, #0]
 80012a6:	4c04      	ldr	r4, [pc, #16]	; (80012b8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 80012a8:	fbb5 f3f4 	udiv	r3, r5, r4
 80012ac:	441a      	add	r2, r3
 80012ae:	fb04 5313 	mls	r3, r4, r3, r5
 80012b2:	6002      	str	r2, [r0, #0]
 80012b4:	600b      	str	r3, [r1, #0]
 80012b6:	bd30      	pop	{r4, r5, pc}
 80012b8:	3b9aca00 	.word	0x3b9aca00

080012bc <BufferedSerial::readable()>:
 80012bc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80012be:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80012c0:	1a10      	subs	r0, r2, r0
 80012c2:	bf18      	it	ne
 80012c4:	2001      	movne	r0, #1
 80012c6:	4770      	bx	lr

080012c8 <BufferedSerial::writeable()>:
 80012c8:	2001      	movs	r0, #1
 80012ca:	4770      	bx	lr

080012cc <BufferedSerial::getc()>:
 80012cc:	b510      	push	{r4, lr}
 80012ce:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80012d0:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 80012d2:	4603      	mov	r3, r0
 80012d4:	1c50      	adds	r0, r2, #1
 80012d6:	6558      	str	r0, [r3, #84]	; 0x54
 80012d8:	5c88      	ldrb	r0, [r1, r2]
 80012da:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80012dc:	6d5c      	ldr	r4, [r3, #84]	; 0x54
 80012de:	3a01      	subs	r2, #1
 80012e0:	fbb4 f1f2 	udiv	r1, r4, r2
 80012e4:	fb02 4211 	mls	r2, r2, r1, r4
 80012e8:	655a      	str	r2, [r3, #84]	; 0x54
 80012ea:	bd10      	pop	{r4, pc}

080012ec <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 80012ec:	4603      	mov	r3, r0
 80012ee:	b110      	cbz	r0, 80012f6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 80012f0:	c907      	ldmia	r1, {r0, r1, r2}
 80012f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80012f6:	4770      	bx	lr

080012f8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 80012f8:	4770      	bx	lr

080012fa <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 80012fa:	6842      	ldr	r2, [r0, #4]
 80012fc:	6881      	ldr	r1, [r0, #8]
 80012fe:	6803      	ldr	r3, [r0, #0]
 8001300:	f012 0f01 	tst.w	r2, #1
 8001304:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001308:	bf1c      	itt	ne
 800130a:	5888      	ldrne	r0, [r1, r2]
 800130c:	58c3      	ldrne	r3, [r0, r3]
 800130e:	1888      	adds	r0, r1, r2
 8001310:	4718      	bx	r3

08001312 <mbed::Callback<void ()>::~Callback()>:
 8001312:	68c3      	ldr	r3, [r0, #12]
 8001314:	b510      	push	{r4, lr}
 8001316:	4604      	mov	r4, r0
 8001318:	b10b      	cbz	r3, 800131e <mbed::Callback<void ()>::~Callback()+0xc>
 800131a:	689b      	ldr	r3, [r3, #8]
 800131c:	4798      	blx	r3
 800131e:	4620      	mov	r0, r4
 8001320:	bd10      	pop	{r4, pc}
	...

08001324 <mbed::SerialBase::~SerialBase()>:
 8001324:	b570      	push	{r4, r5, r6, lr}
 8001326:	4605      	mov	r5, r0
 8001328:	4b07      	ldr	r3, [pc, #28]	; (8001348 <mbed::SerialBase::~SerialBase()+0x24>)
 800132a:	f845 3b28 	str.w	r3, [r5], #40
 800132e:	4606      	mov	r6, r0
 8001330:	b145      	cbz	r5, 8001344 <mbed::SerialBase::~SerialBase()+0x20>
 8001332:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001336:	42ac      	cmp	r4, r5
 8001338:	d004      	beq.n	8001344 <mbed::SerialBase::~SerialBase()+0x20>
 800133a:	3c10      	subs	r4, #16
 800133c:	4620      	mov	r0, r4
 800133e:	f7ff ffe8 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8001342:	e7f8      	b.n	8001336 <mbed::SerialBase::~SerialBase()+0x12>
 8001344:	4630      	mov	r0, r6
 8001346:	bd70      	pop	{r4, r5, r6, pc}
 8001348:	08007408 	.word	0x08007408

0800134c <mbed::SerialBase::~SerialBase()>:
 800134c:	b510      	push	{r4, lr}
 800134e:	4604      	mov	r4, r0
 8001350:	f7ff ffe8 	bl	8001324 <mbed::SerialBase::~SerialBase()>
 8001354:	4620      	mov	r0, r4
 8001356:	f004 f933 	bl	80055c0 <operator delete(void*)>
 800135a:	4620      	mov	r0, r4
 800135c:	bd10      	pop	{r4, pc}
	...

08001360 <BufferedSerial::~BufferedSerial()>:
 8001360:	b530      	push	{r4, r5, lr}
 8001362:	4b13      	ldr	r3, [pc, #76]	; (80013b0 <BufferedSerial::~BufferedSerial()+0x50>)
 8001364:	6003      	str	r3, [r0, #0]
 8001366:	b085      	sub	sp, #20
 8001368:	2500      	movs	r5, #0
 800136a:	462a      	mov	r2, r5
 800136c:	4669      	mov	r1, sp
 800136e:	4604      	mov	r4, r0
 8001370:	9503      	str	r5, [sp, #12]
 8001372:	f003 fe3f 	bl	8004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001376:	4668      	mov	r0, sp
 8001378:	f7ff ffcb 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 800137c:	2201      	movs	r2, #1
 800137e:	4669      	mov	r1, sp
 8001380:	4620      	mov	r0, r4
 8001382:	9503      	str	r5, [sp, #12]
 8001384:	f003 fe36 	bl	8004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001388:	4668      	mov	r0, sp
 800138a:	f7ff ffc2 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 800138e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001392:	f000 f945 	bl	8001620 <Buffer<char>::~Buffer()>
 8001396:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 800139a:	f000 f941 	bl	8001620 <Buffer<char>::~Buffer()>
 800139e:	4b05      	ldr	r3, [pc, #20]	; (80013b4 <BufferedSerial::~BufferedSerial()+0x54>)
 80013a0:	6023      	str	r3, [r4, #0]
 80013a2:	4620      	mov	r0, r4
 80013a4:	f7ff ffbe 	bl	8001324 <mbed::SerialBase::~SerialBase()>
 80013a8:	4620      	mov	r0, r4
 80013aa:	b005      	add	sp, #20
 80013ac:	bd30      	pop	{r4, r5, pc}
 80013ae:	bf00      	nop
 80013b0:	08007094 	.word	0x08007094
 80013b4:	08007420 	.word	0x08007420

080013b8 <BufferedSerial::~BufferedSerial()>:
 80013b8:	b510      	push	{r4, lr}
 80013ba:	4604      	mov	r4, r0
 80013bc:	f7ff ffd0 	bl	8001360 <BufferedSerial::~BufferedSerial()>
 80013c0:	4620      	mov	r0, r4
 80013c2:	f004 f8fd 	bl	80055c0 <operator delete(void*)>
 80013c6:	4620      	mov	r0, r4
 80013c8:	bd10      	pop	{r4, pc}

080013ca <BufferedSerial::txIrq()>:
 80013ca:	b530      	push	{r4, r5, lr}
 80013cc:	4604      	mov	r4, r0
 80013ce:	b085      	sub	sp, #20
 80013d0:	1d05      	adds	r5, r0, #4
 80013d2:	4628      	mov	r0, r5
 80013d4:	f002 fd82 	bl	8003edc <serial_writable>
 80013d8:	b1f0      	cbz	r0, 8001418 <BufferedSerial::txIrq()+0x4e>
 80013da:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80013dc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013de:	429a      	cmp	r2, r3
 80013e0:	d010      	beq.n	8001404 <BufferedSerial::txIrq()+0x3a>
 80013e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013e4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80013e6:	1c59      	adds	r1, r3, #1
 80013e8:	6661      	str	r1, [r4, #100]	; 0x64
 80013ea:	5cd1      	ldrb	r1, [r2, r3]
 80013ec:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80013ee:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80013f0:	3b01      	subs	r3, #1
 80013f2:	fbb0 f2f3 	udiv	r2, r0, r3
 80013f6:	fb03 0312 	mls	r3, r3, r2, r0
 80013fa:	6663      	str	r3, [r4, #100]	; 0x64
 80013fc:	4628      	mov	r0, r5
 80013fe:	f002 fd79 	bl	8003ef4 <serial_putc>
 8001402:	e7e6      	b.n	80013d2 <BufferedSerial::txIrq()+0x8>
 8001404:	2300      	movs	r3, #0
 8001406:	4620      	mov	r0, r4
 8001408:	2201      	movs	r2, #1
 800140a:	4669      	mov	r1, sp
 800140c:	9303      	str	r3, [sp, #12]
 800140e:	f003 fdf1 	bl	8004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001412:	4668      	mov	r0, sp
 8001414:	f7ff ff7d 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8001418:	b005      	add	sp, #20
 800141a:	bd30      	pop	{r4, r5, pc}

0800141c <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 800141c:	b510      	push	{r4, lr}
 800141e:	b086      	sub	sp, #24
 8001420:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001424:	9b01      	ldr	r3, [sp, #4]
 8001426:	9202      	str	r2, [sp, #8]
 8001428:	9303      	str	r3, [sp, #12]
 800142a:	9104      	str	r1, [sp, #16]
 800142c:	4b05      	ldr	r3, [pc, #20]	; (8001444 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 800142e:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001432:	9305      	str	r3, [sp, #20]
 8001434:	a902      	add	r1, sp, #8
 8001436:	f003 fddd 	bl	8004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800143a:	a802      	add	r0, sp, #8
 800143c:	f7ff ff69 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8001440:	b006      	add	sp, #24
 8001442:	bd10      	pop	{r4, pc}
 8001444:	08007004 	.word	0x08007004

08001448 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001448:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800144a:	4604      	mov	r4, r0
 800144c:	461d      	mov	r5, r3
 800144e:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001452:	9e08      	ldr	r6, [sp, #32]
 8001454:	f003 fe1a 	bl	800508c <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001458:	4620      	mov	r0, r4
 800145a:	4b0e      	ldr	r3, [pc, #56]	; (8001494 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
 800145c:	f840 3b4c 	str.w	r3, [r0], #76
 8001460:	4629      	mov	r1, r5
 8001462:	f000 f8ec 	bl	800163e <Buffer<char>::Buffer(unsigned long)>
 8001466:	fb06 f105 	mul.w	r1, r6, r5
 800146a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800146e:	f000 f8e6 	bl	800163e <Buffer<char>::Buffer(unsigned long)>
 8001472:	4b09      	ldr	r3, [pc, #36]	; (8001498 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001474:	9302      	str	r3, [sp, #8]
 8001476:	2300      	movs	r3, #0
 8001478:	9303      	str	r3, [sp, #12]
 800147a:	9300      	str	r3, [sp, #0]
 800147c:	ab04      	add	r3, sp, #16
 800147e:	4620      	mov	r0, r4
 8001480:	e913 000c 	ldmdb	r3, {r2, r3}
 8001484:	4621      	mov	r1, r4
 8001486:	f7ff ffc9 	bl	800141c <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 800148a:	4620      	mov	r0, r4
 800148c:	66e5      	str	r5, [r4, #108]	; 0x6c
 800148e:	6726      	str	r6, [r4, #112]	; 0x70
 8001490:	b004      	add	sp, #16
 8001492:	bd70      	pop	{r4, r5, r6, pc}
 8001494:	08007094 	.word	0x08007094
 8001498:	08001503 	.word	0x08001503

0800149c <BufferedSerial::prime()>:
 800149c:	b570      	push	{r4, r5, r6, lr}
 800149e:	4604      	mov	r4, r0
 80014a0:	b086      	sub	sp, #24
 80014a2:	3004      	adds	r0, #4
 80014a4:	f002 fd1a 	bl	8003edc <serial_writable>
 80014a8:	b1c0      	cbz	r0, 80014dc <BufferedSerial::prime()+0x40>
 80014aa:	ad02      	add	r5, sp, #8
 80014ac:	2201      	movs	r2, #1
 80014ae:	4629      	mov	r1, r5
 80014b0:	2600      	movs	r6, #0
 80014b2:	4620      	mov	r0, r4
 80014b4:	9605      	str	r6, [sp, #20]
 80014b6:	f003 fd9d 	bl	8004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80014ba:	4628      	mov	r0, r5
 80014bc:	f7ff ff29 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 80014c0:	4620      	mov	r0, r4
 80014c2:	f7ff ff82 	bl	80013ca <BufferedSerial::txIrq()>
 80014c6:	4b06      	ldr	r3, [pc, #24]	; (80014e0 <BufferedSerial::prime()+0x44>)
 80014c8:	9302      	str	r3, [sp, #8]
 80014ca:	2301      	movs	r3, #1
 80014cc:	9603      	str	r6, [sp, #12]
 80014ce:	9300      	str	r3, [sp, #0]
 80014d0:	e895 000c 	ldmia.w	r5, {r2, r3}
 80014d4:	4621      	mov	r1, r4
 80014d6:	4620      	mov	r0, r4
 80014d8:	f7ff ffa0 	bl	800141c <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80014dc:	b006      	add	sp, #24
 80014de:	bd70      	pop	{r4, r5, r6, pc}
 80014e0:	080013cb 	.word	0x080013cb

080014e4 <Buffer<char>::put(char)>:
 80014e4:	6843      	ldr	r3, [r0, #4]
 80014e6:	6802      	ldr	r2, [r0, #0]
 80014e8:	b510      	push	{r4, lr}
 80014ea:	1c5c      	adds	r4, r3, #1
 80014ec:	6044      	str	r4, [r0, #4]
 80014ee:	54d1      	strb	r1, [r2, r3]
 80014f0:	68c3      	ldr	r3, [r0, #12]
 80014f2:	6841      	ldr	r1, [r0, #4]
 80014f4:	3b01      	subs	r3, #1
 80014f6:	fbb1 f2f3 	udiv	r2, r1, r3
 80014fa:	fb03 1312 	mls	r3, r3, r2, r1
 80014fe:	6043      	str	r3, [r0, #4]
 8001500:	bd10      	pop	{r4, pc}

08001502 <BufferedSerial::rxIrq()>:
 8001502:	b538      	push	{r3, r4, r5, lr}
 8001504:	1d05      	adds	r5, r0, #4
 8001506:	4604      	mov	r4, r0
 8001508:	4628      	mov	r0, r5
 800150a:	f002 fcc5 	bl	8003e98 <serial_readable>
 800150e:	b138      	cbz	r0, 8001520 <BufferedSerial::rxIrq()+0x1e>
 8001510:	4628      	mov	r0, r5
 8001512:	f002 fccd 	bl	8003eb0 <serial_getc>
 8001516:	b2c1      	uxtb	r1, r0
 8001518:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 800151c:	f7ff ffe2 	bl	80014e4 <Buffer<char>::put(char)>
 8001520:	bd38      	pop	{r3, r4, r5, pc}

08001522 <BufferedSerial::putc(int)>:
 8001522:	b538      	push	{r3, r4, r5, lr}
 8001524:	4605      	mov	r5, r0
 8001526:	460c      	mov	r4, r1
 8001528:	305c      	adds	r0, #92	; 0x5c
 800152a:	b2c9      	uxtb	r1, r1
 800152c:	f7ff ffda 	bl	80014e4 <Buffer<char>::put(char)>
 8001530:	4628      	mov	r0, r5
 8001532:	f7ff ffb3 	bl	800149c <BufferedSerial::prime()>
 8001536:	4620      	mov	r0, r4
 8001538:	bd38      	pop	{r3, r4, r5, pc}

0800153a <BufferedSerial::puts(char const*)>:
 800153a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800153e:	4607      	mov	r7, r0
 8001540:	460c      	mov	r4, r1
 8001542:	b1b1      	cbz	r1, 8001572 <BufferedSerial::puts(char const*)+0x38>
 8001544:	460d      	mov	r5, r1
 8001546:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 800154a:	462e      	mov	r6, r5
 800154c:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001550:	b121      	cbz	r1, 800155c <BufferedSerial::puts(char const*)+0x22>
 8001552:	4640      	mov	r0, r8
 8001554:	f7ff ffc6 	bl	80014e4 <Buffer<char>::put(char)>
 8001558:	4635      	mov	r5, r6
 800155a:	e7f6      	b.n	800154a <BufferedSerial::puts(char const*)+0x10>
 800155c:	210a      	movs	r1, #10
 800155e:	4640      	mov	r0, r8
 8001560:	f7ff ffc0 	bl	80014e4 <Buffer<char>::put(char)>
 8001564:	1b2c      	subs	r4, r5, r4
 8001566:	4638      	mov	r0, r7
 8001568:	f7ff ff98 	bl	800149c <BufferedSerial::prime()>
 800156c:	1c60      	adds	r0, r4, #1
 800156e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001572:	4608      	mov	r0, r1
 8001574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001578 <BufferedSerial::write(void const*, unsigned int)>:
 8001578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800157c:	4607      	mov	r7, r0
 800157e:	460d      	mov	r5, r1
 8001580:	b191      	cbz	r1, 80015a8 <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001582:	b1a2      	cbz	r2, 80015ae <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001584:	188c      	adds	r4, r1, r2
 8001586:	460e      	mov	r6, r1
 8001588:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 800158c:	42b4      	cmp	r4, r6
 800158e:	d005      	beq.n	800159c <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001590:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001594:	4640      	mov	r0, r8
 8001596:	f7ff ffa5 	bl	80014e4 <Buffer<char>::put(char)>
 800159a:	e7f7      	b.n	800158c <BufferedSerial::write(void const*, unsigned int)+0x14>
 800159c:	4638      	mov	r0, r7
 800159e:	f7ff ff7d 	bl	800149c <BufferedSerial::prime()>
 80015a2:	1b60      	subs	r0, r4, r5
 80015a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015a8:	4608      	mov	r0, r1
 80015aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015ae:	4610      	mov	r0, r2
 80015b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080015b4 <BufferedSerial::printf(char const*, ...)>:
 80015b4:	b40e      	push	{r1, r2, r3}
 80015b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015ba:	b085      	sub	sp, #20
 80015bc:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 80015be:	af02      	add	r7, sp, #8
 80015c0:	1dd3      	adds	r3, r2, #7
 80015c2:	f023 0307 	bic.w	r3, r3, #7
 80015c6:	f107 0424 	add.w	r4, r7, #36	; 0x24
 80015ca:	ebad 0d03 	sub.w	sp, sp, r3
 80015ce:	f854 8b04 	ldr.w	r8, [r4], #4
 80015d2:	ae02      	add	r6, sp, #8
 80015d4:	4605      	mov	r5, r0
 80015d6:	2100      	movs	r1, #0
 80015d8:	4630      	mov	r0, r6
 80015da:	f004 fe4e 	bl	800627a <memset>
 80015de:	4622      	mov	r2, r4
 80015e0:	4641      	mov	r1, r8
 80015e2:	4630      	mov	r0, r6
 80015e4:	607c      	str	r4, [r7, #4]
 80015e6:	f005 f935 	bl	8006854 <vsiprintf>
 80015ea:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 80015ec:	4283      	cmp	r3, r0
 80015ee:	4602      	mov	r2, r0
 80015f0:	d20c      	bcs.n	800160c <BufferedSerial::printf(char const*, ...)+0x58>
 80015f2:	9000      	str	r0, [sp, #0]
 80015f4:	225d      	movs	r2, #93	; 0x5d
 80015f6:	4808      	ldr	r0, [pc, #32]	; (8001618 <BufferedSerial::printf(char const*, ...)+0x64>)
 80015f8:	4908      	ldr	r1, [pc, #32]	; (800161c <BufferedSerial::printf(char const*, ...)+0x68>)
 80015fa:	f000 fb0d 	bl	8001c18 <error>
 80015fe:	2000      	movs	r0, #0
 8001600:	370c      	adds	r7, #12
 8001602:	46bd      	mov	sp, r7
 8001604:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001608:	b003      	add	sp, #12
 800160a:	4770      	bx	lr
 800160c:	4631      	mov	r1, r6
 800160e:	4628      	mov	r0, r5
 8001610:	f7ff ffb2 	bl	8001578 <BufferedSerial::write(void const*, unsigned int)>
 8001614:	e7f4      	b.n	8001600 <BufferedSerial::printf(char const*, ...)+0x4c>
 8001616:	bf00      	nop
 8001618:	08007051 	.word	0x08007051
 800161c:	08007010 	.word	0x08007010

08001620 <Buffer<char>::~Buffer()>:
 8001620:	b510      	push	{r4, lr}
 8001622:	4604      	mov	r4, r0
 8001624:	6800      	ldr	r0, [r0, #0]
 8001626:	b108      	cbz	r0, 800162c <Buffer<char>::~Buffer()+0xc>
 8001628:	f003 ffc6 	bl	80055b8 <operator delete[](void*)>
 800162c:	4620      	mov	r0, r4
 800162e:	bd10      	pop	{r4, pc}

08001630 <Buffer<char>::clear()>:
 8001630:	2100      	movs	r1, #0
 8001632:	6041      	str	r1, [r0, #4]
 8001634:	68c2      	ldr	r2, [r0, #12]
 8001636:	6081      	str	r1, [r0, #8]
 8001638:	6800      	ldr	r0, [r0, #0]
 800163a:	f004 be1e 	b.w	800627a <memset>

0800163e <Buffer<char>::Buffer(unsigned long)>:
 800163e:	b538      	push	{r3, r4, r5, lr}
 8001640:	4604      	mov	r4, r0
 8001642:	4608      	mov	r0, r1
 8001644:	460d      	mov	r5, r1
 8001646:	f003 ffab 	bl	80055a0 <operator new[](unsigned int)>
 800164a:	60e5      	str	r5, [r4, #12]
 800164c:	6020      	str	r0, [r4, #0]
 800164e:	4620      	mov	r0, r4
 8001650:	f7ff ffee 	bl	8001630 <Buffer<char>::clear()>
 8001654:	4620      	mov	r0, r4
 8001656:	bd38      	pop	{r3, r4, r5, pc}

08001658 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>:
 8001658:	b570      	push	{r4, r5, r6, lr}
 800165a:	b086      	sub	sp, #24
 800165c:	ac02      	add	r4, sp, #8
 800165e:	4605      	mov	r5, r0
 8001660:	4620      	mov	r0, r4
 8001662:	460e      	mov	r6, r1
 8001664:	f7fe ff5b 	bl	800051e <mbed::CANMessage::CANMessage()>
 8001668:	2308      	movs	r3, #8
 800166a:	f88d 3014 	strb.w	r3, [sp, #20]
 800166e:	23ff      	movs	r3, #255	; 0xff
 8001670:	f88d 300c 	strb.w	r3, [sp, #12]
 8001674:	f88d 300d 	strb.w	r3, [sp, #13]
 8001678:	f88d 300e 	strb.w	r3, [sp, #14]
 800167c:	f88d 300f 	strb.w	r3, [sp, #15]
 8001680:	f88d 3010 	strb.w	r3, [sp, #16]
 8001684:	f88d 3011 	strb.w	r3, [sp, #17]
 8001688:	f88d 3012 	strb.w	r3, [sp, #18]
 800168c:	23fc      	movs	r3, #252	; 0xfc
 800168e:	f88d 3013 	strb.w	r3, [sp, #19]
 8001692:	9b05      	ldr	r3, [sp, #20]
 8001694:	9602      	str	r6, [sp, #8]
 8001696:	9300      	str	r3, [sp, #0]
 8001698:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800169c:	4628      	mov	r0, r5
 800169e:	f003 fd72 	bl	8005186 <mbed::CAN::write(mbed::CANMessage)>
 80016a2:	b006      	add	sp, #24
 80016a4:	bd70      	pop	{r4, r5, r6, pc}

080016a6 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>:
 80016a6:	b570      	push	{r4, r5, r6, lr}
 80016a8:	b086      	sub	sp, #24
 80016aa:	ac02      	add	r4, sp, #8
 80016ac:	4605      	mov	r5, r0
 80016ae:	4620      	mov	r0, r4
 80016b0:	460e      	mov	r6, r1
 80016b2:	f7fe ff34 	bl	800051e <mbed::CANMessage::CANMessage()>
 80016b6:	2308      	movs	r3, #8
 80016b8:	f88d 3014 	strb.w	r3, [sp, #20]
 80016bc:	23ff      	movs	r3, #255	; 0xff
 80016be:	f88d 300c 	strb.w	r3, [sp, #12]
 80016c2:	f88d 300d 	strb.w	r3, [sp, #13]
 80016c6:	f88d 300e 	strb.w	r3, [sp, #14]
 80016ca:	f88d 300f 	strb.w	r3, [sp, #15]
 80016ce:	f88d 3010 	strb.w	r3, [sp, #16]
 80016d2:	f88d 3011 	strb.w	r3, [sp, #17]
 80016d6:	f88d 3012 	strb.w	r3, [sp, #18]
 80016da:	23fd      	movs	r3, #253	; 0xfd
 80016dc:	f88d 3013 	strb.w	r3, [sp, #19]
 80016e0:	9b05      	ldr	r3, [sp, #20]
 80016e2:	9602      	str	r6, [sp, #8]
 80016e4:	9300      	str	r3, [sp, #0]
 80016e6:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80016ea:	4628      	mov	r0, r5
 80016ec:	f003 fd4b 	bl	8005186 <mbed::CAN::write(mbed::CANMessage)>
 80016f0:	b006      	add	sp, #24
 80016f2:	bd70      	pop	{r4, r5, r6, pc}

080016f4 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>:
 80016f4:	b570      	push	{r4, r5, r6, lr}
 80016f6:	b086      	sub	sp, #24
 80016f8:	ac02      	add	r4, sp, #8
 80016fa:	4605      	mov	r5, r0
 80016fc:	4620      	mov	r0, r4
 80016fe:	460e      	mov	r6, r1
 8001700:	f7fe ff0d 	bl	800051e <mbed::CANMessage::CANMessage()>
 8001704:	2308      	movs	r3, #8
 8001706:	f88d 3014 	strb.w	r3, [sp, #20]
 800170a:	23ff      	movs	r3, #255	; 0xff
 800170c:	f88d 300c 	strb.w	r3, [sp, #12]
 8001710:	f88d 300d 	strb.w	r3, [sp, #13]
 8001714:	f88d 300e 	strb.w	r3, [sp, #14]
 8001718:	f88d 300f 	strb.w	r3, [sp, #15]
 800171c:	f88d 3010 	strb.w	r3, [sp, #16]
 8001720:	f88d 3011 	strb.w	r3, [sp, #17]
 8001724:	f88d 3012 	strb.w	r3, [sp, #18]
 8001728:	23fe      	movs	r3, #254	; 0xfe
 800172a:	f88d 3013 	strb.w	r3, [sp, #19]
 800172e:	9b05      	ldr	r3, [sp, #20]
 8001730:	9602      	str	r6, [sp, #8]
 8001732:	9300      	str	r3, [sp, #0]
 8001734:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8001738:	4628      	mov	r0, r5
 800173a:	f003 fd24 	bl	8005186 <mbed::CAN::write(mbed::CANMessage)>
 800173e:	b006      	add	sp, #24
 8001740:	bd70      	pop	{r4, r5, r6, pc}
	...

08001744 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>:
 8001744:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8001748:	4f33      	ldr	r7, [pc, #204]	; (8001818 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd4>)
 800174a:	4604      	mov	r4, r0
 800174c:	4638      	mov	r0, r7
 800174e:	461e      	mov	r6, r3
 8001750:	4615      	mov	r5, r2
 8001752:	f005 fa27 	bl	8006ba4 <fmaxf>
 8001756:	4a31      	ldr	r2, [pc, #196]	; (800181c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd8>)
 8001758:	9201      	str	r2, [sp, #4]
 800175a:	4611      	mov	r1, r2
 800175c:	f005 fa40 	bl	8006be0 <fminf>
 8001760:	4629      	mov	r1, r5
 8001762:	4683      	mov	r11, r0
 8001764:	482e      	ldr	r0, [pc, #184]	; (8001820 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 8001766:	f005 fa1d 	bl	8006ba4 <fmaxf>
 800176a:	492e      	ldr	r1, [pc, #184]	; (8001824 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 800176c:	f005 fa38 	bl	8006be0 <fminf>
 8001770:	2500      	movs	r5, #0
 8001772:	4631      	mov	r1, r6
 8001774:	4e2c      	ldr	r6, [pc, #176]	; (8001828 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe4>)
 8001776:	4682      	mov	r10, r0
 8001778:	4628      	mov	r0, r5
 800177a:	f005 fa13 	bl	8006ba4 <fmaxf>
 800177e:	4631      	mov	r1, r6
 8001780:	f005 fa2e 	bl	8006be0 <fminf>
 8001784:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001786:	4681      	mov	r9, r0
 8001788:	4628      	mov	r0, r5
 800178a:	f005 fa0b 	bl	8006ba4 <fmaxf>
 800178e:	4927      	ldr	r1, [pc, #156]	; (800182c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 8001790:	f005 fa26 	bl	8006be0 <fminf>
 8001794:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001796:	4680      	mov	r8, r0
 8001798:	4825      	ldr	r0, [pc, #148]	; (8001830 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 800179a:	f005 fa03 	bl	8006ba4 <fmaxf>
 800179e:	4925      	ldr	r1, [pc, #148]	; (8001834 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 80017a0:	f005 fa1e 	bl	8006be0 <fminf>
 80017a4:	9a01      	ldr	r2, [sp, #4]
 80017a6:	9000      	str	r0, [sp, #0]
 80017a8:	4639      	mov	r1, r7
 80017aa:	2310      	movs	r3, #16
 80017ac:	4658      	mov	r0, r11
 80017ae:	f000 f885 	bl	80018bc <float_to_uint(float, float, float, int)>
 80017b2:	230c      	movs	r3, #12
 80017b4:	4607      	mov	r7, r0
 80017b6:	4a1b      	ldr	r2, [pc, #108]	; (8001824 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 80017b8:	4919      	ldr	r1, [pc, #100]	; (8001820 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 80017ba:	4650      	mov	r0, r10
 80017bc:	f000 f87e 	bl	80018bc <float_to_uint(float, float, float, int)>
 80017c0:	4632      	mov	r2, r6
 80017c2:	4682      	mov	r10, r0
 80017c4:	4629      	mov	r1, r5
 80017c6:	230c      	movs	r3, #12
 80017c8:	4648      	mov	r0, r9
 80017ca:	f000 f877 	bl	80018bc <float_to_uint(float, float, float, int)>
 80017ce:	4629      	mov	r1, r5
 80017d0:	4606      	mov	r6, r0
 80017d2:	230c      	movs	r3, #12
 80017d4:	4a15      	ldr	r2, [pc, #84]	; (800182c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 80017d6:	4640      	mov	r0, r8
 80017d8:	f000 f870 	bl	80018bc <float_to_uint(float, float, float, int)>
 80017dc:	230c      	movs	r3, #12
 80017de:	4605      	mov	r5, r0
 80017e0:	4a14      	ldr	r2, [pc, #80]	; (8001834 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 80017e2:	4913      	ldr	r1, [pc, #76]	; (8001830 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 80017e4:	9800      	ldr	r0, [sp, #0]
 80017e6:	f000 f869 	bl	80018bc <float_to_uint(float, float, float, int)>
 80017ea:	123b      	asrs	r3, r7, #8
 80017ec:	7123      	strb	r3, [r4, #4]
 80017ee:	ea4f 132a 	mov.w	r3, r10, asr #4
 80017f2:	71a3      	strb	r3, [r4, #6]
 80017f4:	1233      	asrs	r3, r6, #8
 80017f6:	ea43 130a 	orr.w	r3, r3, r10, lsl #4
 80017fa:	71e3      	strb	r3, [r4, #7]
 80017fc:	112b      	asrs	r3, r5, #4
 80017fe:	7263      	strb	r3, [r4, #9]
 8001800:	1203      	asrs	r3, r0, #8
 8001802:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8001806:	72e0      	strb	r0, [r4, #11]
 8001808:	2001      	movs	r0, #1
 800180a:	7167      	strb	r7, [r4, #5]
 800180c:	7226      	strb	r6, [r4, #8]
 800180e:	72a3      	strb	r3, [r4, #10]
 8001810:	b003      	add	sp, #12
 8001812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8001816:	bf00      	nop
 8001818:	c2bf0000 	.word	0xc2bf0000
 800181c:	42bf0000 	.word	0x42bf0000
 8001820:	c1f00000 	.word	0xc1f00000
 8001824:	41f00000 	.word	0x41f00000
 8001828:	43fa0000 	.word	0x43fa0000
 800182c:	40a00000 	.word	0x40a00000
 8001830:	c1900000 	.word	0xc1900000
 8001834:	41900000 	.word	0x41900000

08001838 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>:
 8001838:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800183a:	ac04      	add	r4, sp, #16
 800183c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8001840:	9a08      	ldr	r2, [sp, #32]
 8001842:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001846:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800184a:	7011      	strb	r1, [r2, #0]
 800184c:	f89d 6005 	ldrb.w	r6, [sp, #5]
 8001850:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8001854:	f89d 0006 	ldrb.w	r0, [sp, #6]
 8001858:	4912      	ldr	r1, [pc, #72]	; (80018a4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x6c>)
 800185a:	111d      	asrs	r5, r3, #4
 800185c:	021c      	lsls	r4, r3, #8
 800185e:	f89d 3009 	ldrb.w	r3, [sp, #9]
 8001862:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
 8001866:	ea45 1502 	orr.w	r5, r5, r2, lsl #4
 800186a:	431c      	orrs	r4, r3
 800186c:	4a0e      	ldr	r2, [pc, #56]	; (80018a8 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x70>)
 800186e:	2310      	movs	r3, #16
 8001870:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
 8001874:	f000 f83d 	bl	80018f2 <uint_to_float(int, float, float, int)>
 8001878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800187a:	4a0c      	ldr	r2, [pc, #48]	; (80018ac <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x74>)
 800187c:	6018      	str	r0, [r3, #0]
 800187e:	490c      	ldr	r1, [pc, #48]	; (80018b0 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x78>)
 8001880:	230c      	movs	r3, #12
 8001882:	4628      	mov	r0, r5
 8001884:	f000 f835 	bl	80018f2 <uint_to_float(int, float, float, int)>
 8001888:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800188a:	4a0a      	ldr	r2, [pc, #40]	; (80018b4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x7c>)
 800188c:	6018      	str	r0, [r3, #0]
 800188e:	490a      	ldr	r1, [pc, #40]	; (80018b8 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x80>)
 8001890:	230c      	movs	r3, #12
 8001892:	4620      	mov	r0, r4
 8001894:	f000 f82d 	bl	80018f2 <uint_to_float(int, float, float, int)>
 8001898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800189a:	6018      	str	r0, [r3, #0]
 800189c:	2001      	movs	r0, #1
 800189e:	b004      	add	sp, #16
 80018a0:	bd70      	pop	{r4, r5, r6, pc}
 80018a2:	bf00      	nop
 80018a4:	c2bf0000 	.word	0xc2bf0000
 80018a8:	42bf0000 	.word	0x42bf0000
 80018ac:	41f00000 	.word	0x41f00000
 80018b0:	c1f00000 	.word	0xc1f00000
 80018b4:	41900000 	.word	0x41900000
 80018b8:	c1900000 	.word	0xc1900000

080018bc <float_to_uint(float, float, float, int)>:
 80018bc:	ee07 1a10 	vmov	s14, r1
 80018c0:	2101      	movs	r1, #1
 80018c2:	fa01 f303 	lsl.w	r3, r1, r3
 80018c6:	3b01      	subs	r3, #1
 80018c8:	ee07 3a90 	vmov	s15, r3
 80018cc:	ee06 0a90 	vmov	s13, r0
 80018d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018d4:	ee76 6ac7 	vsub.f32	s13, s13, s14
 80018d8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80018dc:	ee06 2a90 	vmov	s13, r2
 80018e0:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80018e4:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80018e8:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80018ec:	ee17 0a90 	vmov	r0, s15
 80018f0:	4770      	bx	lr

080018f2 <uint_to_float(int, float, float, int)>:
 80018f2:	ee06 1a90 	vmov	s13, r1
 80018f6:	ee07 2a90 	vmov	s15, r2
 80018fa:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80018fe:	ee07 0a90 	vmov	s15, r0
 8001902:	2201      	movs	r2, #1
 8001904:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001908:	fa02 f303 	lsl.w	r3, r2, r3
 800190c:	3b01      	subs	r3, #1
 800190e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001912:	ee07 3a90 	vmov	s15, r3
 8001916:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800191a:	ee87 6a27 	vdiv.f32	s12, s14, s15
 800191e:	ee76 7a26 	vadd.f32	s15, s12, s13
 8001922:	ee17 0a90 	vmov	r0, s15
 8001926:	4770      	bx	lr

08001928 <motor_status::motor_status()>:
 8001928:	2200      	movs	r2, #0
 800192a:	6042      	str	r2, [r0, #4]
 800192c:	6082      	str	r2, [r0, #8]
 800192e:	60c2      	str	r2, [r0, #12]
 8001930:	6102      	str	r2, [r0, #16]
 8001932:	6142      	str	r2, [r0, #20]
 8001934:	6182      	str	r2, [r0, #24]
 8001936:	61c2      	str	r2, [r0, #28]
 8001938:	6202      	str	r2, [r0, #32]
 800193a:	6242      	str	r2, [r0, #36]	; 0x24
 800193c:	6282      	str	r2, [r0, #40]	; 0x28
 800193e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8001940:	6302      	str	r2, [r0, #48]	; 0x30
 8001942:	6342      	str	r2, [r0, #52]	; 0x34
 8001944:	6382      	str	r2, [r0, #56]	; 0x38
 8001946:	63c2      	str	r2, [r0, #60]	; 0x3c
 8001948:	6402      	str	r2, [r0, #64]	; 0x40
 800194a:	6442      	str	r2, [r0, #68]	; 0x44
 800194c:	6482      	str	r2, [r0, #72]	; 0x48
 800194e:	4770      	bx	lr

08001950 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)>:
 8001950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001954:	4605      	mov	r5, r0
 8001956:	460f      	mov	r7, r1
 8001958:	2900      	cmp	r1, #0
 800195a:	d04d      	beq.n	80019f8 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0xa8>
 800195c:	6843      	ldr	r3, [r0, #4]
 800195e:	6882      	ldr	r2, [r0, #8]
 8001960:	1ad2      	subs	r2, r2, r3
 8001962:	ebb1 0fa2 	cmp.w	r1, r2, asr #2
 8001966:	f04f 0900 	mov.w	r9, #0
 800196a:	d80a      	bhi.n	8001982 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x32>
 800196c:	4619      	mov	r1, r3
 800196e:	463a      	mov	r2, r7
 8001970:	3a01      	subs	r2, #1
 8001972:	f841 9b04 	str.w	r9, [r1], #4
 8001976:	d1fb      	bne.n	8001970 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x20>
 8001978:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 800197c:	606b      	str	r3, [r5, #4]
 800197e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001982:	6802      	ldr	r2, [r0, #0]
 8001984:	1a9b      	subs	r3, r3, r2
 8001986:	109b      	asrs	r3, r3, #2
 8001988:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
 800198c:	1ad1      	subs	r1, r2, r3
 800198e:	428f      	cmp	r7, r1
 8001990:	d902      	bls.n	8001998 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x48>
 8001992:	481a      	ldr	r0, [pc, #104]	; (80019fc <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0xac>)
 8001994:	f003 ff2d 	bl	80057f2 <std::__throw_length_error(char const*)>
 8001998:	429f      	cmp	r7, r3
 800199a:	bf2c      	ite	cs
 800199c:	19dc      	addcs	r4, r3, r7
 800199e:	18dc      	addcc	r4, r3, r3
 80019a0:	42a3      	cmp	r3, r4
 80019a2:	d802      	bhi.n	80019aa <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x5a>
 80019a4:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 80019a8:	d322      	bcc.n	80019f0 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0xa0>
 80019aa:	4614      	mov	r4, r2
 80019ac:	00a0      	lsls	r0, r4, #2
 80019ae:	f003 fdeb 	bl	8005588 <operator new(unsigned int)>
 80019b2:	4680      	mov	r8, r0
 80019b4:	e895 0042 	ldmia.w	r5, {r1, r6}
 80019b8:	1a76      	subs	r6, r6, r1
 80019ba:	08b3      	lsrs	r3, r6, #2
 80019bc:	d003      	beq.n	80019c6 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x76>
 80019be:	4632      	mov	r2, r6
 80019c0:	4640      	mov	r0, r8
 80019c2:	f004 fc40 	bl	8006246 <memmove>
 80019c6:	4446      	add	r6, r8
 80019c8:	4632      	mov	r2, r6
 80019ca:	463b      	mov	r3, r7
 80019cc:	3b01      	subs	r3, #1
 80019ce:	f842 9b04 	str.w	r9, [r2], #4
 80019d2:	d1fb      	bne.n	80019cc <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x7c>
 80019d4:	6828      	ldr	r0, [r5, #0]
 80019d6:	eb06 0687 	add.w	r6, r6, r7, lsl #2
 80019da:	b108      	cbz	r0, 80019e0 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x90>
 80019dc:	f003 fdf0 	bl	80055c0 <operator delete(void*)>
 80019e0:	eb08 0484 	add.w	r4, r8, r4, lsl #2
 80019e4:	f8c5 8000 	str.w	r8, [r5]
 80019e8:	606e      	str	r6, [r5, #4]
 80019ea:	60ac      	str	r4, [r5, #8]
 80019ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80019f0:	2c00      	cmp	r4, #0
 80019f2:	d1db      	bne.n	80019ac <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x5c>
 80019f4:	46a0      	mov	r8, r4
 80019f6:	e7dd      	b.n	80019b4 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)+0x64>
 80019f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80019fc:	080070c0 	.word	0x080070c0

08001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>:
 8001a00:	e890 000c 	ldmia.w	r0, {r2, r3}
 8001a04:	1a9b      	subs	r3, r3, r2
 8001a06:	109b      	asrs	r3, r3, #2
 8001a08:	4299      	cmp	r1, r3
 8001a0a:	b510      	push	{r4, lr}
 8001a0c:	d903      	bls.n	8001a16 <std::vector<float, std::allocator<float> >::resize(unsigned int)+0x16>
 8001a0e:	1ac9      	subs	r1, r1, r3
 8001a10:	f7ff ff9e 	bl	8001950 <std::vector<float, std::allocator<float> >::_M_default_append(unsigned int)>
 8001a14:	bd10      	pop	{r4, pc}
 8001a16:	bf3c      	itt	cc
 8001a18:	eb02 0281 	addcc.w	r2, r2, r1, lsl #2
 8001a1c:	6042      	strcc	r2, [r0, #4]
 8001a1e:	bd10      	pop	{r4, pc}

08001a20 <motor_status::initialize(unsigned char)>:
 8001a20:	b510      	push	{r4, lr}
 8001a22:	4604      	mov	r4, r0
 8001a24:	f800 1b04 	strb.w	r1, [r0], #4
 8001a28:	f7ff ffea 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a2c:	4620      	mov	r0, r4
 8001a2e:	f810 1b10 	ldrb.w	r1, [r0], #16
 8001a32:	f7ff ffe5 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a36:	4620      	mov	r0, r4
 8001a38:	f810 1b1c 	ldrb.w	r1, [r0], #28
 8001a3c:	f7ff ffe0 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a40:	4620      	mov	r0, r4
 8001a42:	f810 1b28 	ldrb.w	r1, [r0], #40
 8001a46:	f7ff ffdb 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	f810 1b34 	ldrb.w	r1, [r0], #52
 8001a50:	f7ff ffd6 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a54:	4620      	mov	r0, r4
 8001a56:	f810 1b40 	ldrb.w	r1, [r0], #64
 8001a5a:	f7ff ffd1 	bl	8001a00 <std::vector<float, std::allocator<float> >::resize(unsigned int)>
 8001a5e:	bd10      	pop	{r4, pc}

08001a60 <_gpio_init_out.part.1>:
 8001a60:	b538      	push	{r3, r4, r5, lr}
 8001a62:	4604      	mov	r4, r0
 8001a64:	460d      	mov	r5, r1
 8001a66:	6803      	ldr	r3, [r0, #0]
 8001a68:	b15a      	cbz	r2, 8001a82 <_gpio_init_out.part.1+0x22>
 8001a6a:	6882      	ldr	r2, [r0, #8]
 8001a6c:	6013      	str	r3, [r2, #0]
 8001a6e:	4620      	mov	r0, r4
 8001a70:	2101      	movs	r1, #1
 8001a72:	f001 fcef 	bl	8003454 <gpio_dir>
 8001a76:	4629      	mov	r1, r5
 8001a78:	4620      	mov	r0, r4
 8001a7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001a7e:	f001 bce5 	b.w	800344c <gpio_mode>
 8001a82:	68c2      	ldr	r2, [r0, #12]
 8001a84:	e7f2      	b.n	8001a6c <_gpio_init_out.part.1+0xc>

08001a86 <gpio_init_out_ex>:
 8001a86:	b570      	push	{r4, r5, r6, lr}
 8001a88:	460e      	mov	r6, r1
 8001a8a:	4604      	mov	r4, r0
 8001a8c:	4615      	mov	r5, r2
 8001a8e:	f001 fcbb 	bl	8003408 <gpio_init>
 8001a92:	3601      	adds	r6, #1
 8001a94:	d006      	beq.n	8001aa4 <gpio_init_out_ex+0x1e>
 8001a96:	462a      	mov	r2, r5
 8001a98:	4620      	mov	r0, r4
 8001a9a:	2100      	movs	r1, #0
 8001a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001aa0:	f7ff bfde 	b.w	8001a60 <_gpio_init_out.part.1>
 8001aa4:	bd70      	pop	{r4, r5, r6, pc}

08001aa6 <gpio_init_out>:
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	f7ff bfed 	b.w	8001a86 <gpio_init_out_ex>

08001aac <get_us_ticker_data>:
 8001aac:	4800      	ldr	r0, [pc, #0]	; (8001ab0 <get_us_ticker_data+0x4>)
 8001aae:	4770      	bx	lr
 8001ab0:	080070dc 	.word	0x080070dc

08001ab4 <us_ticker_irq_handler>:
 8001ab4:	4801      	ldr	r0, [pc, #4]	; (8001abc <us_ticker_irq_handler+0x8>)
 8001ab6:	f000 b803 	b.w	8001ac0 <ticker_irq_handler>
 8001aba:	bf00      	nop
 8001abc:	080070dc 	.word	0x080070dc

08001ac0 <ticker_irq_handler>:
 8001ac0:	6803      	ldr	r3, [r0, #0]
 8001ac2:	b570      	push	{r4, r5, r6, lr}
 8001ac4:	68db      	ldr	r3, [r3, #12]
 8001ac6:	4604      	mov	r4, r0
 8001ac8:	4798      	blx	r3
 8001aca:	6863      	ldr	r3, [r4, #4]
 8001acc:	685a      	ldr	r2, [r3, #4]
 8001ace:	6823      	ldr	r3, [r4, #0]
 8001ad0:	b91a      	cbnz	r2, 8001ada <ticker_irq_handler+0x1a>
 8001ad2:	689b      	ldr	r3, [r3, #8]
 8001ad4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001ad8:	4718      	bx	r3
 8001ada:	685b      	ldr	r3, [r3, #4]
 8001adc:	6815      	ldr	r5, [r2, #0]
 8001ade:	4798      	blx	r3
 8001ae0:	6863      	ldr	r3, [r4, #4]
 8001ae2:	1a28      	subs	r0, r5, r0
 8001ae4:	2800      	cmp	r0, #0
 8001ae6:	685a      	ldr	r2, [r3, #4]
 8001ae8:	dc07      	bgt.n	8001afa <ticker_irq_handler+0x3a>
 8001aea:	6891      	ldr	r1, [r2, #8]
 8001aec:	6059      	str	r1, [r3, #4]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d0ea      	beq.n	8001aca <ticker_irq_handler+0xa>
 8001af4:	6850      	ldr	r0, [r2, #4]
 8001af6:	4798      	blx	r3
 8001af8:	e7e7      	b.n	8001aca <ticker_irq_handler+0xa>
 8001afa:	6823      	ldr	r3, [r4, #0]
 8001afc:	6810      	ldr	r0, [r2, #0]
 8001afe:	691b      	ldr	r3, [r3, #16]
 8001b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001b04:	4718      	bx	r3

08001b06 <ticker_read>:
 8001b06:	6803      	ldr	r3, [r0, #0]
 8001b08:	685b      	ldr	r3, [r3, #4]
 8001b0a:	4718      	bx	r3

08001b0c <pinmap_pinout>:
 8001b0c:	b510      	push	{r4, lr}
 8001b0e:	4604      	mov	r4, r0
 8001b10:	3001      	adds	r0, #1
 8001b12:	d10d      	bne.n	8001b30 <pinmap_pinout+0x24>
 8001b14:	bd10      	pop	{r4, pc}
 8001b16:	429c      	cmp	r4, r3
 8001b18:	d109      	bne.n	8001b2e <pinmap_pinout+0x22>
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	6889      	ldr	r1, [r1, #8]
 8001b1e:	f001 ff65 	bl	80039ec <pin_function>
 8001b22:	4620      	mov	r0, r4
 8001b24:	2100      	movs	r1, #0
 8001b26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b2a:	f001 bfe1 	b.w	8003af0 <pin_mode>
 8001b2e:	310c      	adds	r1, #12
 8001b30:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001b34:	1c5a      	adds	r2, r3, #1
 8001b36:	d1ee      	bne.n	8001b16 <pinmap_pinout+0xa>
 8001b38:	4802      	ldr	r0, [pc, #8]	; (8001b44 <pinmap_pinout+0x38>)
 8001b3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b3e:	f000 b86b 	b.w	8001c18 <error>
 8001b42:	bf00      	nop
 8001b44:	08007129 	.word	0x08007129

08001b48 <pinmap_merge>:
 8001b48:	4288      	cmp	r0, r1
 8001b4a:	b508      	push	{r3, lr}
 8001b4c:	d008      	beq.n	8001b60 <pinmap_merge+0x18>
 8001b4e:	1c43      	adds	r3, r0, #1
 8001b50:	d006      	beq.n	8001b60 <pinmap_merge+0x18>
 8001b52:	3101      	adds	r1, #1
 8001b54:	d006      	beq.n	8001b64 <pinmap_merge+0x1c>
 8001b56:	4804      	ldr	r0, [pc, #16]	; (8001b68 <pinmap_merge+0x20>)
 8001b58:	f000 f85e 	bl	8001c18 <error>
 8001b5c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001b60:	4608      	mov	r0, r1
 8001b62:	bd08      	pop	{r3, pc}
 8001b64:	4601      	mov	r1, r0
 8001b66:	e7fb      	b.n	8001b60 <pinmap_merge+0x18>
 8001b68:	080070f8 	.word	0x080070f8

08001b6c <pinmap_find_peripheral>:
 8001b6c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001b70:	1c5a      	adds	r2, r3, #1
 8001b72:	d101      	bne.n	8001b78 <pinmap_find_peripheral+0xc>
 8001b74:	4618      	mov	r0, r3
 8001b76:	4770      	bx	lr
 8001b78:	4283      	cmp	r3, r0
 8001b7a:	d101      	bne.n	8001b80 <pinmap_find_peripheral+0x14>
 8001b7c:	6848      	ldr	r0, [r1, #4]
 8001b7e:	4770      	bx	lr
 8001b80:	310c      	adds	r1, #12
 8001b82:	e7f3      	b.n	8001b6c <pinmap_find_peripheral>

08001b84 <pinmap_peripheral>:
 8001b84:	1c42      	adds	r2, r0, #1
 8001b86:	b510      	push	{r4, lr}
 8001b88:	4604      	mov	r4, r0
 8001b8a:	d007      	beq.n	8001b9c <pinmap_peripheral+0x18>
 8001b8c:	f7ff ffee 	bl	8001b6c <pinmap_find_peripheral>
 8001b90:	1c43      	adds	r3, r0, #1
 8001b92:	4604      	mov	r4, r0
 8001b94:	d102      	bne.n	8001b9c <pinmap_peripheral+0x18>
 8001b96:	4802      	ldr	r0, [pc, #8]	; (8001ba0 <pinmap_peripheral+0x1c>)
 8001b98:	f000 f83e 	bl	8001c18 <error>
 8001b9c:	4620      	mov	r0, r4
 8001b9e:	bd10      	pop	{r4, pc}
 8001ba0:	08007109 	.word	0x08007109

08001ba4 <mbed_die>:
 8001ba4:	b508      	push	{r3, lr}
 8001ba6:	f000 f80d 	bl	8001bc4 <core_util_critical_section_enter>
 8001baa:	2096      	movs	r0, #150	; 0x96
 8001bac:	f003 fbdc 	bl	8005368 <wait_ms>
 8001bb0:	2096      	movs	r0, #150	; 0x96
 8001bb2:	f003 fbd9 	bl	8005368 <wait_ms>
 8001bb6:	e7f8      	b.n	8001baa <mbed_die+0x6>

08001bb8 <core_util_are_interrupts_enabled>:
 8001bb8:	f3ef 8010 	mrs	r0, PRIMASK
 8001bbc:	43c0      	mvns	r0, r0
 8001bbe:	f000 0001 	and.w	r0, r0, #1
 8001bc2:	4770      	bx	lr

08001bc4 <core_util_critical_section_enter>:
 8001bc4:	b508      	push	{r3, lr}
 8001bc6:	f7ff fff7 	bl	8001bb8 <core_util_are_interrupts_enabled>
 8001bca:	b672      	cpsid	i
 8001bcc:	4b06      	ldr	r3, [pc, #24]	; (8001be8 <core_util_critical_section_enter+0x24>)
 8001bce:	681a      	ldr	r2, [r3, #0]
 8001bd0:	b922      	cbnz	r2, 8001bdc <core_util_critical_section_enter+0x18>
 8001bd2:	f080 0001 	eor.w	r0, r0, #1
 8001bd6:	4a05      	ldr	r2, [pc, #20]	; (8001bec <core_util_critical_section_enter+0x28>)
 8001bd8:	b2c0      	uxtb	r0, r0
 8001bda:	7010      	strb	r0, [r2, #0]
 8001bdc:	681a      	ldr	r2, [r3, #0]
 8001bde:	681a      	ldr	r2, [r3, #0]
 8001be0:	3201      	adds	r2, #1
 8001be2:	601a      	str	r2, [r3, #0]
 8001be4:	bd08      	pop	{r3, pc}
 8001be6:	bf00      	nop
 8001be8:	20000a44 	.word	0x20000a44
 8001bec:	20000a40 	.word	0x20000a40

08001bf0 <core_util_critical_section_exit>:
 8001bf0:	b508      	push	{r3, lr}
 8001bf2:	4b07      	ldr	r3, [pc, #28]	; (8001c10 <core_util_critical_section_exit+0x20>)
 8001bf4:	681a      	ldr	r2, [r3, #0]
 8001bf6:	b152      	cbz	r2, 8001c0e <core_util_critical_section_exit+0x1e>
 8001bf8:	f7ff ffde 	bl	8001bb8 <core_util_are_interrupts_enabled>
 8001bfc:	681a      	ldr	r2, [r3, #0]
 8001bfe:	3a01      	subs	r2, #1
 8001c00:	601a      	str	r2, [r3, #0]
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	b91b      	cbnz	r3, 8001c0e <core_util_critical_section_exit+0x1e>
 8001c06:	4b03      	ldr	r3, [pc, #12]	; (8001c14 <core_util_critical_section_exit+0x24>)
 8001c08:	781b      	ldrb	r3, [r3, #0]
 8001c0a:	b903      	cbnz	r3, 8001c0e <core_util_critical_section_exit+0x1e>
 8001c0c:	b662      	cpsie	i
 8001c0e:	bd08      	pop	{r3, pc}
 8001c10:	20000a44 	.word	0x20000a44
 8001c14:	20000a40 	.word	0x20000a40

08001c18 <error>:
 8001c18:	b40f      	push	{r0, r1, r2, r3}
 8001c1a:	2001      	movs	r0, #1
 8001c1c:	b508      	push	{r3, lr}
 8001c1e:	f003 fca7 	bl	8005570 <__wrap_exit>

08001c22 <default_idle_hook>:
 8001c22:	f001 bc40 	b.w	80034a6 <hal_sleep>
	...

08001c28 <rtos_idle_loop>:
 8001c28:	b508      	push	{r3, lr}
 8001c2a:	4c02      	ldr	r4, [pc, #8]	; (8001c34 <rtos_idle_loop+0xc>)
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	4798      	blx	r3
 8001c30:	e7fc      	b.n	8001c2c <rtos_idle_loop+0x4>
 8001c32:	bf00      	nop
 8001c34:	2000018c 	.word	0x2000018c

08001c38 <rt_put_prio>:
 8001c38:	b530      	push	{r4, r5, lr}
 8001c3a:	7802      	ldrb	r2, [r0, #0]
 8001c3c:	788c      	ldrb	r4, [r1, #2]
 8001c3e:	6843      	ldr	r3, [r0, #4]
 8001c40:	3a01      	subs	r2, #1
 8001c42:	b2d2      	uxtb	r2, r2
 8001c44:	b113      	cbz	r3, 8001c4c <rt_put_prio+0x14>
 8001c46:	789d      	ldrb	r5, [r3, #2]
 8001c48:	42a5      	cmp	r5, r4
 8001c4a:	d207      	bcs.n	8001c5c <rt_put_prio+0x24>
 8001c4c:	2a02      	cmp	r2, #2
 8001c4e:	604b      	str	r3, [r1, #4]
 8001c50:	6041      	str	r1, [r0, #4]
 8001c52:	d806      	bhi.n	8001c62 <rt_put_prio+0x2a>
 8001c54:	b103      	cbz	r3, 8001c58 <rt_put_prio+0x20>
 8001c56:	6099      	str	r1, [r3, #8]
 8001c58:	6088      	str	r0, [r1, #8]
 8001c5a:	bd30      	pop	{r4, r5, pc}
 8001c5c:	4618      	mov	r0, r3
 8001c5e:	685b      	ldr	r3, [r3, #4]
 8001c60:	e7f0      	b.n	8001c44 <rt_put_prio+0xc>
 8001c62:	2300      	movs	r3, #0
 8001c64:	608b      	str	r3, [r1, #8]
 8001c66:	bd30      	pop	{r4, r5, pc}

08001c68 <rt_get_first>:
 8001c68:	7802      	ldrb	r2, [r0, #0]
 8001c6a:	6843      	ldr	r3, [r0, #4]
 8001c6c:	3a01      	subs	r2, #1
 8001c6e:	6859      	ldr	r1, [r3, #4]
 8001c70:	6041      	str	r1, [r0, #4]
 8001c72:	2a02      	cmp	r2, #2
 8001c74:	f04f 0200 	mov.w	r2, #0
 8001c78:	d805      	bhi.n	8001c86 <rt_get_first+0x1e>
 8001c7a:	b109      	cbz	r1, 8001c80 <rt_get_first+0x18>
 8001c7c:	6088      	str	r0, [r1, #8]
 8001c7e:	605a      	str	r2, [r3, #4]
 8001c80:	609a      	str	r2, [r3, #8]
 8001c82:	4618      	mov	r0, r3
 8001c84:	4770      	bx	lr
 8001c86:	605a      	str	r2, [r3, #4]
 8001c88:	e7fb      	b.n	8001c82 <rt_get_first+0x1a>
	...

08001c8c <rt_put_rdy_first>:
 8001c8c:	4b03      	ldr	r3, [pc, #12]	; (8001c9c <rt_put_rdy_first+0x10>)
 8001c8e:	685a      	ldr	r2, [r3, #4]
 8001c90:	6042      	str	r2, [r0, #4]
 8001c92:	2200      	movs	r2, #0
 8001c94:	6082      	str	r2, [r0, #8]
 8001c96:	6058      	str	r0, [r3, #4]
 8001c98:	4770      	bx	lr
 8001c9a:	bf00      	nop
 8001c9c:	20001774 	.word	0x20001774

08001ca0 <rt_put_dly>:
 8001ca0:	4b10      	ldr	r3, [pc, #64]	; (8001ce4 <rt_put_dly+0x44>)
 8001ca2:	68da      	ldr	r2, [r3, #12]
 8001ca4:	b510      	push	{r4, lr}
 8001ca6:	b18a      	cbz	r2, 8001ccc <rt_put_dly+0x2c>
 8001ca8:	8a9a      	ldrh	r2, [r3, #20]
 8001caa:	68dc      	ldr	r4, [r3, #12]
 8001cac:	428a      	cmp	r2, r1
 8001cae:	d30c      	bcc.n	8001cca <rt_put_dly+0x2a>
 8001cb0:	60c4      	str	r4, [r0, #12]
 8001cb2:	60d8      	str	r0, [r3, #12]
 8001cb4:	68c4      	ldr	r4, [r0, #12]
 8001cb6:	6103      	str	r3, [r0, #16]
 8001cb8:	b104      	cbz	r4, 8001cbc <rt_put_dly+0x1c>
 8001cba:	6120      	str	r0, [r4, #16]
 8001cbc:	1a52      	subs	r2, r2, r1
 8001cbe:	b292      	uxth	r2, r2
 8001cc0:	8282      	strh	r2, [r0, #20]
 8001cc2:	8a99      	ldrh	r1, [r3, #20]
 8001cc4:	1a8a      	subs	r2, r1, r2
 8001cc6:	829a      	strh	r2, [r3, #20]
 8001cc8:	bd10      	pop	{r4, pc}
 8001cca:	b93c      	cbnz	r4, 8001cdc <rt_put_dly+0x3c>
 8001ccc:	2400      	movs	r4, #0
 8001cce:	1a8a      	subs	r2, r1, r2
 8001cd0:	60c4      	str	r4, [r0, #12]
 8001cd2:	60d8      	str	r0, [r3, #12]
 8001cd4:	6103      	str	r3, [r0, #16]
 8001cd6:	829a      	strh	r2, [r3, #20]
 8001cd8:	8284      	strh	r4, [r0, #20]
 8001cda:	bd10      	pop	{r4, pc}
 8001cdc:	8aa3      	ldrh	r3, [r4, #20]
 8001cde:	441a      	add	r2, r3
 8001ce0:	4623      	mov	r3, r4
 8001ce2:	e7e2      	b.n	8001caa <rt_put_dly+0xa>
 8001ce4:	2000178c 	.word	0x2000178c

08001ce8 <rt_dec_dly>:
 8001ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cec:	4d17      	ldr	r5, [pc, #92]	; (8001d4c <rt_dec_dly+0x64>)
 8001cee:	68eb      	ldr	r3, [r5, #12]
 8001cf0:	b153      	cbz	r3, 8001d08 <rt_dec_dly+0x20>
 8001cf2:	8aab      	ldrh	r3, [r5, #20]
 8001cf4:	4f16      	ldr	r7, [pc, #88]	; (8001d50 <rt_dec_dly+0x68>)
 8001cf6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001d54 <rt_dec_dly+0x6c>
 8001cfa:	3b01      	subs	r3, #1
 8001cfc:	82ab      	strh	r3, [r5, #20]
 8001cfe:	2600      	movs	r6, #0
 8001d00:	8aaa      	ldrh	r2, [r5, #20]
 8001d02:	b90a      	cbnz	r2, 8001d08 <rt_dec_dly+0x20>
 8001d04:	68ec      	ldr	r4, [r5, #12]
 8001d06:	b90c      	cbnz	r4, 8001d0c <rt_dec_dly+0x24>
 8001d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001d0c:	68a3      	ldr	r3, [r4, #8]
 8001d0e:	b133      	cbz	r3, 8001d1e <rt_dec_dly+0x36>
 8001d10:	6861      	ldr	r1, [r4, #4]
 8001d12:	6059      	str	r1, [r3, #4]
 8001d14:	6861      	ldr	r1, [r4, #4]
 8001d16:	b109      	cbz	r1, 8001d1c <rt_dec_dly+0x34>
 8001d18:	608b      	str	r3, [r1, #8]
 8001d1a:	6062      	str	r2, [r4, #4]
 8001d1c:	60a6      	str	r6, [r4, #8]
 8001d1e:	4621      	mov	r1, r4
 8001d20:	4638      	mov	r0, r7
 8001d22:	f7ff ff89 	bl	8001c38 <rt_put_prio>
 8001d26:	8aa3      	ldrh	r3, [r4, #20]
 8001d28:	82ab      	strh	r3, [r5, #20]
 8001d2a:	7863      	ldrb	r3, [r4, #1]
 8001d2c:	2b04      	cmp	r3, #4
 8001d2e:	bf01      	itttt	eq
 8001d30:	f8d8 3000 	ldreq.w	r3, [r8]
 8001d34:	8ae2      	ldrheq	r2, [r4, #22]
 8001d36:	189b      	addeq	r3, r3, r2
 8001d38:	82a3      	strheq	r3, [r4, #20]
 8001d3a:	2301      	movs	r3, #1
 8001d3c:	7063      	strb	r3, [r4, #1]
 8001d3e:	68e3      	ldr	r3, [r4, #12]
 8001d40:	60eb      	str	r3, [r5, #12]
 8001d42:	b10b      	cbz	r3, 8001d48 <rt_dec_dly+0x60>
 8001d44:	611d      	str	r5, [r3, #16]
 8001d46:	60e6      	str	r6, [r4, #12]
 8001d48:	6126      	str	r6, [r4, #16]
 8001d4a:	e7d9      	b.n	8001d00 <rt_dec_dly+0x18>
 8001d4c:	2000178c 	.word	0x2000178c
 8001d50:	20001774 	.word	0x20001774
 8001d54:	20001fb8 	.word	0x20001fb8

08001d58 <rt_rmv_list>:
 8001d58:	6883      	ldr	r3, [r0, #8]
 8001d5a:	b12b      	cbz	r3, 8001d68 <rt_rmv_list+0x10>
 8001d5c:	6842      	ldr	r2, [r0, #4]
 8001d5e:	605a      	str	r2, [r3, #4]
 8001d60:	6842      	ldr	r2, [r0, #4]
 8001d62:	b15a      	cbz	r2, 8001d7c <rt_rmv_list+0x24>
 8001d64:	6093      	str	r3, [r2, #8]
 8001d66:	4770      	bx	lr
 8001d68:	4b05      	ldr	r3, [pc, #20]	; (8001d80 <rt_rmv_list+0x28>)
 8001d6a:	685a      	ldr	r2, [r3, #4]
 8001d6c:	4290      	cmp	r0, r2
 8001d6e:	d102      	bne.n	8001d76 <rt_rmv_list+0x1e>
 8001d70:	6842      	ldr	r2, [r0, #4]
 8001d72:	605a      	str	r2, [r3, #4]
 8001d74:	4770      	bx	lr
 8001d76:	4613      	mov	r3, r2
 8001d78:	2a00      	cmp	r2, #0
 8001d7a:	d1f6      	bne.n	8001d6a <rt_rmv_list+0x12>
 8001d7c:	4770      	bx	lr
 8001d7e:	bf00      	nop
 8001d80:	20001774 	.word	0x20001774

08001d84 <rt_resort_prio>:
 8001d84:	b510      	push	{r4, lr}
 8001d86:	6884      	ldr	r4, [r0, #8]
 8001d88:	4601      	mov	r1, r0
 8001d8a:	b92c      	cbnz	r4, 8001d98 <rt_resort_prio+0x14>
 8001d8c:	7843      	ldrb	r3, [r0, #1]
 8001d8e:	2b01      	cmp	r3, #1
 8001d90:	d10d      	bne.n	8001dae <rt_resort_prio+0x2a>
 8001d92:	4c07      	ldr	r4, [pc, #28]	; (8001db0 <rt_resort_prio+0x2c>)
 8001d94:	e003      	b.n	8001d9e <rt_resort_prio+0x1a>
 8001d96:	68a4      	ldr	r4, [r4, #8]
 8001d98:	7823      	ldrb	r3, [r4, #0]
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d0fb      	beq.n	8001d96 <rt_resort_prio+0x12>
 8001d9e:	4608      	mov	r0, r1
 8001da0:	f7ff ffda 	bl	8001d58 <rt_rmv_list>
 8001da4:	4620      	mov	r0, r4
 8001da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001daa:	f7ff bf45 	b.w	8001c38 <rt_put_prio>
 8001dae:	bd10      	pop	{r4, pc}
 8001db0:	20001774 	.word	0x20001774

08001db4 <rt_rmv_dly>:
 8001db4:	6903      	ldr	r3, [r0, #16]
 8001db6:	b510      	push	{r4, lr}
 8001db8:	b163      	cbz	r3, 8001dd4 <rt_rmv_dly+0x20>
 8001dba:	68c2      	ldr	r2, [r0, #12]
 8001dbc:	60da      	str	r2, [r3, #12]
 8001dbe:	68c2      	ldr	r2, [r0, #12]
 8001dc0:	b14a      	cbz	r2, 8001dd6 <rt_rmv_dly+0x22>
 8001dc2:	8a99      	ldrh	r1, [r3, #20]
 8001dc4:	8a84      	ldrh	r4, [r0, #20]
 8001dc6:	4421      	add	r1, r4
 8001dc8:	8299      	strh	r1, [r3, #20]
 8001dca:	6113      	str	r3, [r2, #16]
 8001dcc:	2300      	movs	r3, #0
 8001dce:	60c3      	str	r3, [r0, #12]
 8001dd0:	2300      	movs	r3, #0
 8001dd2:	6103      	str	r3, [r0, #16]
 8001dd4:	bd10      	pop	{r4, pc}
 8001dd6:	829a      	strh	r2, [r3, #20]
 8001dd8:	e7fa      	b.n	8001dd0 <rt_rmv_dly+0x1c>
	...

08001ddc <rt_psq_enq>:
 8001ddc:	b470      	push	{r4, r5, r6}
 8001dde:	4b11      	ldr	r3, [pc, #68]	; (8001e24 <rt_psq_enq+0x48>)
 8001de0:	78dd      	ldrb	r5, [r3, #3]
 8001de2:	f3ef 8610 	mrs	r6, PRIMASK
 8001de6:	f3ef 8210 	mrs	r2, PRIMASK
 8001dea:	b672      	cpsid	i
 8001dec:	789a      	ldrb	r2, [r3, #2]
 8001dee:	4295      	cmp	r5, r2
 8001df0:	d911      	bls.n	8001e16 <rt_psq_enq+0x3a>
 8001df2:	3201      	adds	r2, #1
 8001df4:	709a      	strb	r2, [r3, #2]
 8001df6:	781a      	ldrb	r2, [r3, #0]
 8001df8:	1c54      	adds	r4, r2, #1
 8001dfa:	42a5      	cmp	r5, r4
 8001dfc:	bf08      	it	eq
 8001dfe:	2400      	moveq	r4, #0
 8001e00:	701c      	strb	r4, [r3, #0]
 8001e02:	b906      	cbnz	r6, 8001e06 <rt_psq_enq+0x2a>
 8001e04:	b662      	cpsie	i
 8001e06:	4295      	cmp	r5, r2
 8001e08:	d907      	bls.n	8001e1a <rt_psq_enq+0x3e>
 8001e0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001e0e:	bc70      	pop	{r4, r5, r6}
 8001e10:	6058      	str	r0, [r3, #4]
 8001e12:	6099      	str	r1, [r3, #8]
 8001e14:	4770      	bx	lr
 8001e16:	2e00      	cmp	r6, #0
 8001e18:	d0f4      	beq.n	8001e04 <rt_psq_enq+0x28>
 8001e1a:	2002      	movs	r0, #2
 8001e1c:	bc70      	pop	{r4, r5, r6}
 8001e1e:	f000 b829 	b.w	8001e74 <os_error>
 8001e22:	bf00      	nop
 8001e24:	20001cf8 	.word	0x20001cf8

08001e28 <pre_main>:
 8001e28:	b508      	push	{r3, lr}
 8001e2a:	480b      	ldr	r0, [pc, #44]	; (8001e58 <pre_main+0x30>)
 8001e2c:	f000 fcb2 	bl	8002794 <osMutexCreate>
 8001e30:	4b0a      	ldr	r3, [pc, #40]	; (8001e5c <pre_main+0x34>)
 8001e32:	6018      	str	r0, [r3, #0]
 8001e34:	480a      	ldr	r0, [pc, #40]	; (8001e60 <pre_main+0x38>)
 8001e36:	f000 fcad 	bl	8002794 <osMutexCreate>
 8001e3a:	4b0a      	ldr	r3, [pc, #40]	; (8001e64 <pre_main+0x3c>)
 8001e3c:	6018      	str	r0, [r3, #0]
 8001e3e:	480a      	ldr	r0, [pc, #40]	; (8001e68 <pre_main+0x40>)
 8001e40:	f000 fca8 	bl	8002794 <osMutexCreate>
 8001e44:	4b09      	ldr	r3, [pc, #36]	; (8001e6c <pre_main+0x44>)
 8001e46:	6018      	str	r0, [r3, #0]
 8001e48:	f004 f96a 	bl	8006120 <__libc_init_array>
 8001e4c:	2100      	movs	r1, #0
 8001e4e:	4608      	mov	r0, r1
 8001e50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001e54:	f003 bb4f 	b.w	80054f6 <__wrap_main>
 8001e58:	08007188 	.word	0x08007188
 8001e5c:	20001f4c 	.word	0x20001f4c
 8001e60:	08007184 	.word	0x08007184
 8001e64:	20000a50 	.word	0x20000a50
 8001e68:	08007180 	.word	0x08007180
 8001e6c:	20000a48 	.word	0x20000a48

08001e70 <os_idle_demon>:
 8001e70:	f7ff beda 	b.w	8001c28 <rtos_idle_loop>

08001e74 <os_error>:
 8001e74:	b510      	push	{r4, lr}
 8001e76:	4604      	mov	r4, r0
 8001e78:	f000 fbec 	bl	8002654 <svcThreadGetId>
 8001e7c:	4621      	mov	r1, r4
 8001e7e:	4602      	mov	r2, r0
 8001e80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e84:	4801      	ldr	r0, [pc, #4]	; (8001e8c <os_error+0x18>)
 8001e86:	f7ff bec7 	b.w	8001c18 <error>
 8001e8a:	bf00      	nop
 8001e8c:	08007148 	.word	0x08007148

08001e90 <sysThreadTerminate>:
 8001e90:	f003 bb98 	b.w	80055c4 <thread_terminate_hook>

08001e94 <set_stack_heap>:
 8001e94:	4a0b      	ldr	r2, [pc, #44]	; (8001ec4 <set_stack_heap+0x30>)
 8001e96:	4b0c      	ldr	r3, [pc, #48]	; (8001ec8 <set_stack_heap+0x34>)
 8001e98:	480c      	ldr	r0, [pc, #48]	; (8001ecc <set_stack_heap+0x38>)
 8001e9a:	b430      	push	{r4, r5}
 8001e9c:	601a      	str	r2, [r3, #0]
 8001e9e:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001ea2:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8001ea6:	f5b3 7fe0 	cmp.w	r3, #448	; 0x1c0
 8001eaa:	4619      	mov	r1, r3
 8001eac:	bf28      	it	cs
 8001eae:	f44f 71e0 	movcs.w	r1, #448	; 0x1c0
 8001eb2:	4d07      	ldr	r5, [pc, #28]	; (8001ed0 <set_stack_heap+0x3c>)
 8001eb4:	4c07      	ldr	r4, [pc, #28]	; (8001ed4 <set_stack_heap+0x40>)
 8001eb6:	6001      	str	r1, [r0, #0]
 8001eb8:	1a5b      	subs	r3, r3, r1
 8001eba:	441a      	add	r2, r3
 8001ebc:	602a      	str	r2, [r5, #0]
 8001ebe:	6023      	str	r3, [r4, #0]
 8001ec0:	bc30      	pop	{r4, r5}
 8001ec2:	4770      	bx	lr
 8001ec4:	20002028 	.word	0x20002028
 8001ec8:	200016c4 	.word	0x200016c4
 8001ecc:	20000a54 	.word	0x20000a54
 8001ed0:	20000a58 	.word	0x20000a58
 8001ed4:	200016c0 	.word	0x200016c0

08001ed8 <software_init_hook_rtos>:
 8001ed8:	f000 fd40 	bl	800295c <osKernelInitialize>
 8001edc:	f7ff ffda 	bl	8001e94 <set_stack_heap>
 8001ee0:	4803      	ldr	r0, [pc, #12]	; (8001ef0 <software_init_hook_rtos+0x18>)
 8001ee2:	2100      	movs	r1, #0
 8001ee4:	f000 fcde 	bl	80028a4 <osThreadCreate>
 8001ee8:	f000 fb36 	bl	8002558 <osKernelStart>
 8001eec:	e7fe      	b.n	8001eec <software_init_hook_rtos+0x14>
 8001eee:	0000      	.short	0x0000
 8001ef0:	20000190 	.word	0x20000190

08001ef4 <__rtos_malloc_lock>:
 8001ef4:	4b02      	ldr	r3, [pc, #8]	; (8001f00 <__rtos_malloc_lock+0xc>)
 8001ef6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001efa:	6818      	ldr	r0, [r3, #0]
 8001efc:	f000 bc68 	b.w	80027d0 <osMutexWait>
 8001f00:	20000a50 	.word	0x20000a50

08001f04 <__rtos_malloc_unlock>:
 8001f04:	4b01      	ldr	r3, [pc, #4]	; (8001f0c <__rtos_malloc_unlock+0x8>)
 8001f06:	6818      	ldr	r0, [r3, #0]
 8001f08:	f000 bc8a 	b.w	8002820 <osMutexRelease>
 8001f0c:	20000a50 	.word	0x20000a50

08001f10 <rt_init_stack>:
 8001f10:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001f12:	089b      	lsrs	r3, r3, #2
 8001f14:	bf04      	itt	eq
 8001f16:	4b22      	ldreq	r3, [pc, #136]	; (8001fa0 <rt_init_stack+0x90>)
 8001f18:	881b      	ldrheq	r3, [r3, #0]
 8001f1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f1c:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001f1e:	bf08      	it	eq
 8001f20:	089b      	lsreq	r3, r3, #2
 8001f22:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001f26:	0754      	lsls	r4, r2, #29
 8001f28:	bf48      	it	mi
 8001f2a:	3a04      	submi	r2, #4
 8001f2c:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001f30:	e902 0042 	stmdb	r2, {r1, r6}
 8001f34:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001f38:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001f3c:	f1a2 070c 	sub.w	r7, r2, #12
 8001f40:	f04f 0e00 	mov.w	lr, #0
 8001f44:	f846 ef04 	str.w	lr, [r6, #4]!
 8001f48:	42be      	cmp	r6, r7
 8001f4a:	d1fb      	bne.n	8001f44 <rt_init_stack+0x34>
 8001f4c:	69c6      	ldr	r6, [r0, #28]
 8001f4e:	f842 6c20 	str.w	r6, [r2, #-32]
 8001f52:	6341      	str	r1, [r0, #52]	; 0x34
 8001f54:	4912      	ldr	r1, [pc, #72]	; (8001fa0 <rt_init_stack+0x90>)
 8001f56:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001f58:	6809      	ldr	r1, [r1, #0]
 8001f5a:	00c9      	lsls	r1, r1, #3
 8001f5c:	d517      	bpl.n	8001f8e <rt_init_stack+0x7e>
 8001f5e:	2b11      	cmp	r3, #17
 8001f60:	d915      	bls.n	8001f8e <rt_init_stack+0x7e>
 8001f62:	3b10      	subs	r3, #16
 8001f64:	f06f 0107 	mvn.w	r1, #7
 8001f68:	085b      	lsrs	r3, r3, #1
 8001f6a:	434b      	muls	r3, r1
 8001f6c:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001f70:	440a      	add	r2, r1
 8001f72:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001f76:	4621      	mov	r1, r4
 8001f78:	4291      	cmp	r1, r2
 8001f7a:	d10b      	bne.n	8001f94 <rt_init_stack+0x84>
 8001f7c:	3308      	adds	r3, #8
 8001f7e:	441c      	add	r4, r3
 8001f80:	1f23      	subs	r3, r4, #4
 8001f82:	429d      	cmp	r5, r3
 8001f84:	bf3c      	itt	cc
 8001f86:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001f8a:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001f8e:	4b05      	ldr	r3, [pc, #20]	; (8001fa4 <rt_init_stack+0x94>)
 8001f90:	602b      	str	r3, [r5, #0]
 8001f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f94:	f841 0c04 	str.w	r0, [r1, #-4]
 8001f98:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001f9c:	e7ec      	b.n	8001f78 <rt_init_stack+0x68>
 8001f9e:	bf00      	nop
 8001fa0:	08007190 	.word	0x08007190
 8001fa4:	e25a2ea5 	.word	0xe25a2ea5

08001fa8 <rt_ret_val>:
 8001fa8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001fac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001fae:	b112      	cbz	r2, 8001fb6 <rt_ret_val+0xe>
 8001fb0:	3360      	adds	r3, #96	; 0x60
 8001fb2:	6019      	str	r1, [r3, #0]
 8001fb4:	4770      	bx	lr
 8001fb6:	3320      	adds	r3, #32
 8001fb8:	e7fb      	b.n	8001fb2 <rt_ret_val+0xa>

08001fba <rt_ret_val2>:
 8001fba:	b510      	push	{r4, lr}
 8001fbc:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001fc0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001fc2:	b11c      	cbz	r4, 8001fcc <rt_ret_val2+0x12>
 8001fc4:	3360      	adds	r3, #96	; 0x60
 8001fc6:	e883 0006 	stmia.w	r3, {r1, r2}
 8001fca:	bd10      	pop	{r4, pc}
 8001fcc:	3320      	adds	r3, #32
 8001fce:	e7fa      	b.n	8001fc6 <rt_ret_val2+0xc>

08001fd0 <rt_psh_req>:
 8001fd0:	4b05      	ldr	r3, [pc, #20]	; (8001fe8 <rt_psh_req+0x18>)
 8001fd2:	781b      	ldrb	r3, [r3, #0]
 8001fd4:	b923      	cbnz	r3, 8001fe0 <rt_psh_req+0x10>
 8001fd6:	4b05      	ldr	r3, [pc, #20]	; (8001fec <rt_psh_req+0x1c>)
 8001fd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001fdc:	601a      	str	r2, [r3, #0]
 8001fde:	4770      	bx	lr
 8001fe0:	4b03      	ldr	r3, [pc, #12]	; (8001ff0 <rt_psh_req+0x20>)
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	701a      	strb	r2, [r3, #0]
 8001fe6:	4770      	bx	lr
 8001fe8:	200012ac 	.word	0x200012ac
 8001fec:	e000ed04 	.word	0xe000ed04
 8001ff0:	200012ad 	.word	0x200012ad

08001ff4 <rt_pop_req>:
 8001ff4:	b538      	push	{r3, r4, r5, lr}
 8001ff6:	4b1a      	ldr	r3, [pc, #104]	; (8002060 <rt_pop_req+0x6c>)
 8001ff8:	4c1a      	ldr	r4, [pc, #104]	; (8002064 <rt_pop_req+0x70>)
 8001ffa:	6818      	ldr	r0, [r3, #0]
 8001ffc:	2301      	movs	r3, #1
 8001ffe:	7043      	strb	r3, [r0, #1]
 8002000:	f7ff fe44 	bl	8001c8c <rt_put_rdy_first>
 8002004:	7865      	ldrb	r5, [r4, #1]
 8002006:	78a3      	ldrb	r3, [r4, #2]
 8002008:	b93b      	cbnz	r3, 800201a <rt_pop_req+0x26>
 800200a:	4817      	ldr	r0, [pc, #92]	; (8002068 <rt_pop_req+0x74>)
 800200c:	7065      	strb	r5, [r4, #1]
 800200e:	f7ff fe2b 	bl	8001c68 <rt_get_first>
 8002012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002016:	f000 bd7b 	b.w	8002b10 <rt_switch_req>
 800201a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800201e:	6858      	ldr	r0, [r3, #4]
 8002020:	7802      	ldrb	r2, [r0, #0]
 8002022:	b99a      	cbnz	r2, 800204c <rt_pop_req+0x58>
 8002024:	8919      	ldrh	r1, [r3, #8]
 8002026:	f000 f9bb 	bl	80023a0 <rt_evt_psh>
 800202a:	78e3      	ldrb	r3, [r4, #3]
 800202c:	3501      	adds	r5, #1
 800202e:	429d      	cmp	r5, r3
 8002030:	bf08      	it	eq
 8002032:	2500      	moveq	r5, #0
 8002034:	f3ef 8310 	mrs	r3, PRIMASK
 8002038:	f3ef 8210 	mrs	r2, PRIMASK
 800203c:	b672      	cpsid	i
 800203e:	78a2      	ldrb	r2, [r4, #2]
 8002040:	3a01      	subs	r2, #1
 8002042:	70a2      	strb	r2, [r4, #2]
 8002044:	2b00      	cmp	r3, #0
 8002046:	d1de      	bne.n	8002006 <rt_pop_req+0x12>
 8002048:	b662      	cpsie	i
 800204a:	e7dc      	b.n	8002006 <rt_pop_req+0x12>
 800204c:	2a01      	cmp	r2, #1
 800204e:	d103      	bne.n	8002058 <rt_pop_req+0x64>
 8002050:	6899      	ldr	r1, [r3, #8]
 8002052:	f000 f933 	bl	80022bc <rt_mbx_psh>
 8002056:	e7e8      	b.n	800202a <rt_pop_req+0x36>
 8002058:	f001 f8b8 	bl	80031cc <rt_sem_psh>
 800205c:	e7e5      	b.n	800202a <rt_pop_req+0x36>
 800205e:	bf00      	nop
 8002060:	20001f70 	.word	0x20001f70
 8002064:	20001cf8 	.word	0x20001cf8
 8002068:	20001774 	.word	0x20001774

0800206c <os_tick_init>:
 800206c:	4b08      	ldr	r3, [pc, #32]	; (8002090 <os_tick_init+0x24>)
 800206e:	681a      	ldr	r2, [r3, #0]
 8002070:	4b08      	ldr	r3, [pc, #32]	; (8002094 <os_tick_init+0x28>)
 8002072:	601a      	str	r2, [r3, #0]
 8002074:	2200      	movs	r2, #0
 8002076:	605a      	str	r2, [r3, #4]
 8002078:	2207      	movs	r2, #7
 800207a:	f843 2c04 	str.w	r2, [r3, #-4]
 800207e:	4a06      	ldr	r2, [pc, #24]	; (8002098 <os_tick_init+0x2c>)
 8002080:	6813      	ldr	r3, [r2, #0]
 8002082:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002086:	6013      	str	r3, [r2, #0]
 8002088:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800208c:	4770      	bx	lr
 800208e:	bf00      	nop
 8002090:	080071a8 	.word	0x080071a8
 8002094:	e000e014 	.word	0xe000e014
 8002098:	e000ed20 	.word	0xe000ed20

0800209c <os_tick_irqack>:
 800209c:	4770      	bx	lr
	...

080020a0 <rt_systick>:
 80020a0:	b508      	push	{r3, lr}
 80020a2:	4b0b      	ldr	r3, [pc, #44]	; (80020d0 <rt_systick+0x30>)
 80020a4:	6818      	ldr	r0, [r3, #0]
 80020a6:	2301      	movs	r3, #1
 80020a8:	7043      	strb	r3, [r0, #1]
 80020aa:	f7ff fdef 	bl	8001c8c <rt_put_rdy_first>
 80020ae:	f000 f9ad 	bl	800240c <rt_chk_robin>
 80020b2:	4a08      	ldr	r2, [pc, #32]	; (80020d4 <rt_systick+0x34>)
 80020b4:	6813      	ldr	r3, [r2, #0]
 80020b6:	3301      	adds	r3, #1
 80020b8:	6013      	str	r3, [r2, #0]
 80020ba:	f7ff fe15 	bl	8001ce8 <rt_dec_dly>
 80020be:	f000 fcaf 	bl	8002a20 <sysTimerTick>
 80020c2:	4805      	ldr	r0, [pc, #20]	; (80020d8 <rt_systick+0x38>)
 80020c4:	f7ff fdd0 	bl	8001c68 <rt_get_first>
 80020c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80020cc:	f000 bd20 	b.w	8002b10 <rt_switch_req>
 80020d0:	20001f70 	.word	0x20001f70
 80020d4:	20001fb8 	.word	0x20001fb8
 80020d8:	20001774 	.word	0x20001774

080020dc <rt_stk_check>:
 80020dc:	4b06      	ldr	r3, [pc, #24]	; (80020f8 <rt_stk_check+0x1c>)
 80020de:	681a      	ldr	r2, [r3, #0]
 80020e0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80020e2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80020e4:	4293      	cmp	r3, r2
 80020e6:	d803      	bhi.n	80020f0 <rt_stk_check+0x14>
 80020e8:	681a      	ldr	r2, [r3, #0]
 80020ea:	4b04      	ldr	r3, [pc, #16]	; (80020fc <rt_stk_check+0x20>)
 80020ec:	429a      	cmp	r2, r3
 80020ee:	d002      	beq.n	80020f6 <rt_stk_check+0x1a>
 80020f0:	2001      	movs	r0, #1
 80020f2:	f7ff bebf 	b.w	8001e74 <os_error>
 80020f6:	4770      	bx	lr
 80020f8:	20001f70 	.word	0x20001f70
 80020fc:	e25a2ea5 	.word	0xe25a2ea5

08002100 <_init_box>:
 8002100:	2a00      	cmp	r2, #0
 8002102:	bfbb      	ittet	lt
 8002104:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8002108:	3207      	addlt	r2, #7
 800210a:	3203      	addge	r2, #3
 800210c:	f022 0207 	biclt.w	r2, r2, #7
 8002110:	bfa8      	it	ge
 8002112:	f022 0203 	bicge.w	r2, r2, #3
 8002116:	b510      	push	{r4, lr}
 8002118:	bfb4      	ite	lt
 800211a:	2310      	movlt	r3, #16
 800211c:	230c      	movge	r3, #12
 800211e:	b192      	cbz	r2, 8002146 <_init_box+0x46>
 8002120:	18d4      	adds	r4, r2, r3
 8002122:	428c      	cmp	r4, r1
 8002124:	d80f      	bhi.n	8002146 <_init_box+0x46>
 8002126:	4401      	add	r1, r0
 8002128:	4403      	add	r3, r0
 800212a:	4254      	negs	r4, r2
 800212c:	6041      	str	r1, [r0, #4]
 800212e:	6003      	str	r3, [r0, #0]
 8002130:	6082      	str	r2, [r0, #8]
 8002132:	4421      	add	r1, r4
 8002134:	1898      	adds	r0, r3, r2
 8002136:	4281      	cmp	r1, r0
 8002138:	d302      	bcc.n	8002140 <_init_box+0x40>
 800213a:	5100      	str	r0, [r0, r4]
 800213c:	4603      	mov	r3, r0
 800213e:	e7f9      	b.n	8002134 <_init_box+0x34>
 8002140:	2000      	movs	r0, #0
 8002142:	6018      	str	r0, [r3, #0]
 8002144:	bd10      	pop	{r4, pc}
 8002146:	2001      	movs	r0, #1
 8002148:	bd10      	pop	{r4, pc}

0800214a <rt_alloc_box>:
 800214a:	f3ef 8310 	mrs	r3, PRIMASK
 800214e:	b672      	cpsid	i
 8002150:	6802      	ldr	r2, [r0, #0]
 8002152:	f003 0301 	and.w	r3, r3, #1
 8002156:	b10a      	cbz	r2, 800215c <rt_alloc_box+0x12>
 8002158:	6811      	ldr	r1, [r2, #0]
 800215a:	6001      	str	r1, [r0, #0]
 800215c:	b903      	cbnz	r3, 8002160 <rt_alloc_box+0x16>
 800215e:	b662      	cpsie	i
 8002160:	4610      	mov	r0, r2
 8002162:	4770      	bx	lr

08002164 <rt_free_box>:
 8002164:	4281      	cmp	r1, r0
 8002166:	d30d      	bcc.n	8002184 <rt_free_box+0x20>
 8002168:	6843      	ldr	r3, [r0, #4]
 800216a:	4299      	cmp	r1, r3
 800216c:	d20a      	bcs.n	8002184 <rt_free_box+0x20>
 800216e:	f3ef 8310 	mrs	r3, PRIMASK
 8002172:	b672      	cpsid	i
 8002174:	6802      	ldr	r2, [r0, #0]
 8002176:	600a      	str	r2, [r1, #0]
 8002178:	6001      	str	r1, [r0, #0]
 800217a:	f013 0001 	ands.w	r0, r3, #1
 800217e:	d103      	bne.n	8002188 <rt_free_box+0x24>
 8002180:	b662      	cpsie	i
 8002182:	4770      	bx	lr
 8002184:	2001      	movs	r0, #1
 8002186:	4770      	bx	lr
 8002188:	2000      	movs	r0, #0
 800218a:	4770      	bx	lr

0800218c <rt_mbx_init>:
 800218c:	2301      	movs	r3, #1
 800218e:	3910      	subs	r1, #16
 8002190:	7003      	strb	r3, [r0, #0]
 8002192:	0889      	lsrs	r1, r1, #2
 8002194:	2300      	movs	r3, #0
 8002196:	7043      	strb	r3, [r0, #1]
 8002198:	7083      	strb	r3, [r0, #2]
 800219a:	6043      	str	r3, [r0, #4]
 800219c:	8103      	strh	r3, [r0, #8]
 800219e:	8143      	strh	r3, [r0, #10]
 80021a0:	8183      	strh	r3, [r0, #12]
 80021a2:	81c1      	strh	r1, [r0, #14]
 80021a4:	4770      	bx	lr
	...

080021a8 <rt_mbx_wait>:
 80021a8:	b570      	push	{r4, r5, r6, lr}
 80021aa:	8985      	ldrh	r5, [r0, #12]
 80021ac:	4604      	mov	r4, r0
 80021ae:	4616      	mov	r6, r2
 80021b0:	2d00      	cmp	r5, #0
 80021b2:	d038      	beq.n	8002226 <rt_mbx_wait+0x7e>
 80021b4:	8943      	ldrh	r3, [r0, #10]
 80021b6:	1d1a      	adds	r2, r3, #4
 80021b8:	3301      	adds	r3, #1
 80021ba:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80021be:	600a      	str	r2, [r1, #0]
 80021c0:	89c2      	ldrh	r2, [r0, #14]
 80021c2:	b29b      	uxth	r3, r3
 80021c4:	429a      	cmp	r2, r3
 80021c6:	8143      	strh	r3, [r0, #10]
 80021c8:	bf04      	itt	eq
 80021ca:	2300      	moveq	r3, #0
 80021cc:	8143      	strheq	r3, [r0, #10]
 80021ce:	6843      	ldr	r3, [r0, #4]
 80021d0:	b1f3      	cbz	r3, 8002210 <rt_mbx_wait+0x68>
 80021d2:	7843      	ldrb	r3, [r0, #1]
 80021d4:	2b02      	cmp	r3, #2
 80021d6:	d11b      	bne.n	8002210 <rt_mbx_wait+0x68>
 80021d8:	f7ff fd46 	bl	8001c68 <rt_get_first>
 80021dc:	2100      	movs	r1, #0
 80021de:	4605      	mov	r5, r0
 80021e0:	f7ff fee2 	bl	8001fa8 <rt_ret_val>
 80021e4:	8923      	ldrh	r3, [r4, #8]
 80021e6:	69e9      	ldr	r1, [r5, #28]
 80021e8:	1d1a      	adds	r2, r3, #4
 80021ea:	3301      	adds	r3, #1
 80021ec:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80021f0:	89e2      	ldrh	r2, [r4, #14]
 80021f2:	b29b      	uxth	r3, r3
 80021f4:	429a      	cmp	r2, r3
 80021f6:	8123      	strh	r3, [r4, #8]
 80021f8:	bf08      	it	eq
 80021fa:	2300      	moveq	r3, #0
 80021fc:	4628      	mov	r0, r5
 80021fe:	bf08      	it	eq
 8002200:	8123      	strheq	r3, [r4, #8]
 8002202:	f7ff fdd7 	bl	8001db4 <rt_rmv_dly>
 8002206:	4628      	mov	r0, r5
 8002208:	f000 fc9c 	bl	8002b44 <rt_dispatch>
 800220c:	2000      	movs	r0, #0
 800220e:	bd70      	pop	{r4, r5, r6, pc}
 8002210:	f3ef 8010 	mrs	r0, PRIMASK
 8002214:	f3ef 8310 	mrs	r3, PRIMASK
 8002218:	b672      	cpsid	i
 800221a:	3d01      	subs	r5, #1
 800221c:	81a5      	strh	r5, [r4, #12]
 800221e:	2800      	cmp	r0, #0
 8002220:	d1f4      	bne.n	800220c <rt_mbx_wait+0x64>
 8002222:	b662      	cpsie	i
 8002224:	bd70      	pop	{r4, r5, r6, pc}
 8002226:	b14a      	cbz	r2, 800223c <rt_mbx_wait+0x94>
 8002228:	6842      	ldr	r2, [r0, #4]
 800222a:	4b09      	ldr	r3, [pc, #36]	; (8002250 <rt_mbx_wait+0xa8>)
 800222c:	b142      	cbz	r2, 8002240 <rt_mbx_wait+0x98>
 800222e:	6819      	ldr	r1, [r3, #0]
 8002230:	f7ff fd02 	bl	8001c38 <rt_put_prio>
 8002234:	2108      	movs	r1, #8
 8002236:	4630      	mov	r0, r6
 8002238:	f000 fca8 	bl	8002b8c <rt_block>
 800223c:	2001      	movs	r0, #1
 800223e:	bd70      	pop	{r4, r5, r6, pc}
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	6043      	str	r3, [r0, #4]
 8002244:	605a      	str	r2, [r3, #4]
 8002246:	6098      	str	r0, [r3, #8]
 8002248:	2301      	movs	r3, #1
 800224a:	7043      	strb	r3, [r0, #1]
 800224c:	e7f2      	b.n	8002234 <rt_mbx_wait+0x8c>
 800224e:	bf00      	nop
 8002250:	20001f70 	.word	0x20001f70

08002254 <rt_mbx_check>:
 8002254:	89c2      	ldrh	r2, [r0, #14]
 8002256:	8980      	ldrh	r0, [r0, #12]
 8002258:	1a10      	subs	r0, r2, r0
 800225a:	4770      	bx	lr

0800225c <isr_mbx_send>:
 800225c:	b508      	push	{r3, lr}
 800225e:	f7ff fdbd 	bl	8001ddc <rt_psq_enq>
 8002262:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002266:	f7ff beb3 	b.w	8001fd0 <rt_psh_req>

0800226a <isr_mbx_receive>:
 800226a:	8983      	ldrh	r3, [r0, #12]
 800226c:	b510      	push	{r4, lr}
 800226e:	4604      	mov	r4, r0
 8002270:	b30b      	cbz	r3, 80022b6 <isr_mbx_receive+0x4c>
 8002272:	8943      	ldrh	r3, [r0, #10]
 8002274:	3304      	adds	r3, #4
 8002276:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800227a:	600b      	str	r3, [r1, #0]
 800227c:	7843      	ldrb	r3, [r0, #1]
 800227e:	2b02      	cmp	r3, #2
 8002280:	d104      	bne.n	800228c <isr_mbx_receive+0x22>
 8002282:	2100      	movs	r1, #0
 8002284:	f7ff fdaa 	bl	8001ddc <rt_psq_enq>
 8002288:	f7ff fea2 	bl	8001fd0 <rt_psh_req>
 800228c:	f3ef 8310 	mrs	r3, PRIMASK
 8002290:	f3ef 8210 	mrs	r2, PRIMASK
 8002294:	b672      	cpsid	i
 8002296:	89a2      	ldrh	r2, [r4, #12]
 8002298:	3a01      	subs	r2, #1
 800229a:	81a2      	strh	r2, [r4, #12]
 800229c:	b903      	cbnz	r3, 80022a0 <isr_mbx_receive+0x36>
 800229e:	b662      	cpsie	i
 80022a0:	8963      	ldrh	r3, [r4, #10]
 80022a2:	89e2      	ldrh	r2, [r4, #14]
 80022a4:	3301      	adds	r3, #1
 80022a6:	b29b      	uxth	r3, r3
 80022a8:	429a      	cmp	r2, r3
 80022aa:	8163      	strh	r3, [r4, #10]
 80022ac:	d101      	bne.n	80022b2 <isr_mbx_receive+0x48>
 80022ae:	2300      	movs	r3, #0
 80022b0:	8163      	strh	r3, [r4, #10]
 80022b2:	2004      	movs	r0, #4
 80022b4:	bd10      	pop	{r4, pc}
 80022b6:	4618      	mov	r0, r3
 80022b8:	bd10      	pop	{r4, pc}
	...

080022bc <rt_mbx_psh>:
 80022bc:	6843      	ldr	r3, [r0, #4]
 80022be:	b570      	push	{r4, r5, r6, lr}
 80022c0:	4604      	mov	r4, r0
 80022c2:	460e      	mov	r6, r1
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d04b      	beq.n	8002360 <rt_mbx_psh+0xa4>
 80022c8:	7845      	ldrb	r5, [r0, #1]
 80022ca:	2d02      	cmp	r5, #2
 80022cc:	d020      	beq.n	8002310 <rt_mbx_psh+0x54>
 80022ce:	2d03      	cmp	r5, #3
 80022d0:	d00a      	beq.n	80022e8 <rt_mbx_psh+0x2c>
 80022d2:	2d01      	cmp	r5, #1
 80022d4:	d161      	bne.n	800239a <rt_mbx_psh+0xde>
 80022d6:	f7ff fcc7 	bl	8001c68 <rt_get_first>
 80022da:	4604      	mov	r4, r0
 80022dc:	4632      	mov	r2, r6
 80022de:	2110      	movs	r1, #16
 80022e0:	f7ff fe6b 	bl	8001fba <rt_ret_val2>
 80022e4:	7065      	strb	r5, [r4, #1]
 80022e6:	e00e      	b.n	8002306 <rt_mbx_psh+0x4a>
 80022e8:	4608      	mov	r0, r1
 80022ea:	f7ff ff2e 	bl	800214a <rt_alloc_box>
 80022ee:	4605      	mov	r5, r0
 80022f0:	2800      	cmp	r0, #0
 80022f2:	d052      	beq.n	800239a <rt_mbx_psh+0xde>
 80022f4:	4620      	mov	r0, r4
 80022f6:	f7ff fcb7 	bl	8001c68 <rt_get_first>
 80022fa:	4629      	mov	r1, r5
 80022fc:	4604      	mov	r4, r0
 80022fe:	f7ff fe53 	bl	8001fa8 <rt_ret_val>
 8002302:	2301      	movs	r3, #1
 8002304:	7063      	strb	r3, [r4, #1]
 8002306:	4620      	mov	r0, r4
 8002308:	f7ff fd54 	bl	8001db4 <rt_rmv_dly>
 800230c:	4621      	mov	r1, r4
 800230e:	e022      	b.n	8002356 <rt_mbx_psh+0x9a>
 8002310:	f7ff fcaa 	bl	8001c68 <rt_get_first>
 8002314:	2100      	movs	r1, #0
 8002316:	4605      	mov	r5, r0
 8002318:	f7ff fe46 	bl	8001fa8 <rt_ret_val>
 800231c:	8923      	ldrh	r3, [r4, #8]
 800231e:	69e9      	ldr	r1, [r5, #28]
 8002320:	1d1a      	adds	r2, r3, #4
 8002322:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002326:	f3ef 8210 	mrs	r2, PRIMASK
 800232a:	f3ef 8110 	mrs	r1, PRIMASK
 800232e:	b672      	cpsid	i
 8002330:	89a1      	ldrh	r1, [r4, #12]
 8002332:	3101      	adds	r1, #1
 8002334:	81a1      	strh	r1, [r4, #12]
 8002336:	b902      	cbnz	r2, 800233a <rt_mbx_psh+0x7e>
 8002338:	b662      	cpsie	i
 800233a:	89e2      	ldrh	r2, [r4, #14]
 800233c:	3301      	adds	r3, #1
 800233e:	b29b      	uxth	r3, r3
 8002340:	429a      	cmp	r2, r3
 8002342:	8123      	strh	r3, [r4, #8]
 8002344:	bf04      	itt	eq
 8002346:	2300      	moveq	r3, #0
 8002348:	8123      	strheq	r3, [r4, #8]
 800234a:	2301      	movs	r3, #1
 800234c:	706b      	strb	r3, [r5, #1]
 800234e:	4628      	mov	r0, r5
 8002350:	f7ff fd30 	bl	8001db4 <rt_rmv_dly>
 8002354:	4629      	mov	r1, r5
 8002356:	4811      	ldr	r0, [pc, #68]	; (800239c <rt_mbx_psh+0xe0>)
 8002358:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800235c:	f7ff bc6c 	b.w	8001c38 <rt_put_prio>
 8002360:	8980      	ldrh	r0, [r0, #12]
 8002362:	89e1      	ldrh	r1, [r4, #14]
 8002364:	4288      	cmp	r0, r1
 8002366:	d213      	bcs.n	8002390 <rt_mbx_psh+0xd4>
 8002368:	8923      	ldrh	r3, [r4, #8]
 800236a:	1d1a      	adds	r2, r3, #4
 800236c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002370:	f3ef 8210 	mrs	r2, PRIMASK
 8002374:	f3ef 8510 	mrs	r5, PRIMASK
 8002378:	b672      	cpsid	i
 800237a:	3001      	adds	r0, #1
 800237c:	81a0      	strh	r0, [r4, #12]
 800237e:	b902      	cbnz	r2, 8002382 <rt_mbx_psh+0xc6>
 8002380:	b662      	cpsie	i
 8002382:	3301      	adds	r3, #1
 8002384:	b29b      	uxth	r3, r3
 8002386:	4299      	cmp	r1, r3
 8002388:	bf08      	it	eq
 800238a:	2300      	moveq	r3, #0
 800238c:	8123      	strh	r3, [r4, #8]
 800238e:	bd70      	pop	{r4, r5, r6, pc}
 8002390:	2003      	movs	r0, #3
 8002392:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002396:	f7ff bd6d 	b.w	8001e74 <os_error>
 800239a:	bd70      	pop	{r4, r5, r6, pc}
 800239c:	20001774 	.word	0x20001774

080023a0 <rt_evt_psh>:
 80023a0:	b510      	push	{r4, lr}
 80023a2:	8b03      	ldrh	r3, [r0, #24]
 80023a4:	7842      	ldrb	r2, [r0, #1]
 80023a6:	4319      	orrs	r1, r3
 80023a8:	2a06      	cmp	r2, #6
 80023aa:	4604      	mov	r4, r0
 80023ac:	8301      	strh	r1, [r0, #24]
 80023ae:	8b43      	ldrh	r3, [r0, #26]
 80023b0:	d115      	bne.n	80023de <rt_evt_psh+0x3e>
 80023b2:	ea33 0201 	bics.w	r2, r3, r1
 80023b6:	d119      	bne.n	80023ec <rt_evt_psh+0x4c>
 80023b8:	ea21 0103 	bic.w	r1, r1, r3
 80023bc:	8321      	strh	r1, [r4, #24]
 80023be:	4620      	mov	r0, r4
 80023c0:	f7ff fcf8 	bl	8001db4 <rt_rmv_dly>
 80023c4:	2301      	movs	r3, #1
 80023c6:	4620      	mov	r0, r4
 80023c8:	7063      	strb	r3, [r4, #1]
 80023ca:	8b62      	ldrh	r2, [r4, #26]
 80023cc:	2108      	movs	r1, #8
 80023ce:	f7ff fdf4 	bl	8001fba <rt_ret_val2>
 80023d2:	4621      	mov	r1, r4
 80023d4:	4806      	ldr	r0, [pc, #24]	; (80023f0 <rt_evt_psh+0x50>)
 80023d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023da:	f7ff bc2d 	b.w	8001c38 <rt_put_prio>
 80023de:	2a05      	cmp	r2, #5
 80023e0:	d104      	bne.n	80023ec <rt_evt_psh+0x4c>
 80023e2:	ea11 0203 	ands.w	r2, r1, r3
 80023e6:	d001      	beq.n	80023ec <rt_evt_psh+0x4c>
 80023e8:	8342      	strh	r2, [r0, #26]
 80023ea:	e7e5      	b.n	80023b8 <rt_evt_psh+0x18>
 80023ec:	bd10      	pop	{r4, pc}
 80023ee:	bf00      	nop
 80023f0:	20001774 	.word	0x20001774

080023f4 <rt_init_robin>:
 80023f4:	4b03      	ldr	r3, [pc, #12]	; (8002404 <rt_init_robin+0x10>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	601a      	str	r2, [r3, #0]
 80023fa:	4a03      	ldr	r2, [pc, #12]	; (8002408 <rt_init_robin+0x14>)
 80023fc:	6812      	ldr	r2, [r2, #0]
 80023fe:	80da      	strh	r2, [r3, #6]
 8002400:	4770      	bx	lr
 8002402:	bf00      	nop
 8002404:	20001f58 	.word	0x20001f58
 8002408:	0800718c 	.word	0x0800718c

0800240c <rt_chk_robin>:
 800240c:	b508      	push	{r3, lr}
 800240e:	4b0e      	ldr	r3, [pc, #56]	; (8002448 <rt_chk_robin+0x3c>)
 8002410:	685a      	ldr	r2, [r3, #4]
 8002412:	4b0e      	ldr	r3, [pc, #56]	; (800244c <rt_chk_robin+0x40>)
 8002414:	6819      	ldr	r1, [r3, #0]
 8002416:	4291      	cmp	r1, r2
 8002418:	490d      	ldr	r1, [pc, #52]	; (8002450 <rt_chk_robin+0x44>)
 800241a:	d005      	beq.n	8002428 <rt_chk_robin+0x1c>
 800241c:	601a      	str	r2, [r3, #0]
 800241e:	88da      	ldrh	r2, [r3, #6]
 8002420:	6808      	ldr	r0, [r1, #0]
 8002422:	3a01      	subs	r2, #1
 8002424:	4402      	add	r2, r0
 8002426:	809a      	strh	r2, [r3, #4]
 8002428:	8898      	ldrh	r0, [r3, #4]
 800242a:	880a      	ldrh	r2, [r1, #0]
 800242c:	4290      	cmp	r0, r2
 800242e:	d10a      	bne.n	8002446 <rt_chk_robin+0x3a>
 8002430:	2200      	movs	r2, #0
 8002432:	4805      	ldr	r0, [pc, #20]	; (8002448 <rt_chk_robin+0x3c>)
 8002434:	601a      	str	r2, [r3, #0]
 8002436:	f7ff fc17 	bl	8001c68 <rt_get_first>
 800243a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800243e:	4601      	mov	r1, r0
 8002440:	4801      	ldr	r0, [pc, #4]	; (8002448 <rt_chk_robin+0x3c>)
 8002442:	f7ff bbf9 	b.w	8001c38 <rt_put_prio>
 8002446:	bd08      	pop	{r3, pc}
 8002448:	20001774 	.word	0x20001774
 800244c:	20001f58 	.word	0x20001f58
 8002450:	20001fb8 	.word	0x20001fb8

08002454 <rt_timer_insert>:
 8002454:	4a0b      	ldr	r2, [pc, #44]	; (8002484 <rt_timer_insert+0x30>)
 8002456:	6813      	ldr	r3, [r2, #0]
 8002458:	b530      	push	{r4, r5, lr}
 800245a:	2400      	movs	r4, #0
 800245c:	b943      	cbnz	r3, 8002470 <rt_timer_insert+0x1c>
 800245e:	6003      	str	r3, [r0, #0]
 8002460:	6081      	str	r1, [r0, #8]
 8002462:	b113      	cbz	r3, 800246a <rt_timer_insert+0x16>
 8002464:	689d      	ldr	r5, [r3, #8]
 8002466:	1a69      	subs	r1, r5, r1
 8002468:	6099      	str	r1, [r3, #8]
 800246a:	b144      	cbz	r4, 800247e <rt_timer_insert+0x2a>
 800246c:	6020      	str	r0, [r4, #0]
 800246e:	bd30      	pop	{r4, r5, pc}
 8002470:	689d      	ldr	r5, [r3, #8]
 8002472:	42a9      	cmp	r1, r5
 8002474:	d3f3      	bcc.n	800245e <rt_timer_insert+0xa>
 8002476:	461c      	mov	r4, r3
 8002478:	1b49      	subs	r1, r1, r5
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	e7ee      	b.n	800245c <rt_timer_insert+0x8>
 800247e:	6010      	str	r0, [r2, #0]
 8002480:	bd30      	pop	{r4, r5, pc}
 8002482:	bf00      	nop
 8002484:	20001f68 	.word	0x20001f68

08002488 <rt_ms2tick>:
 8002488:	b1c0      	cbz	r0, 80024bc <rt_ms2tick+0x34>
 800248a:	1c43      	adds	r3, r0, #1
 800248c:	d011      	beq.n	80024b2 <rt_ms2tick+0x2a>
 800248e:	4b0c      	ldr	r3, [pc, #48]	; (80024c0 <rt_ms2tick+0x38>)
 8002490:	4298      	cmp	r0, r3
 8002492:	d811      	bhi.n	80024b8 <rt_ms2tick+0x30>
 8002494:	4b0b      	ldr	r3, [pc, #44]	; (80024c4 <rt_ms2tick+0x3c>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800249c:	1e5a      	subs	r2, r3, #1
 800249e:	fb01 2000 	mla	r0, r1, r0, r2
 80024a2:	fbb0 f3f3 	udiv	r3, r0, r3
 80024a6:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 80024aa:	4283      	cmp	r3, r0
 80024ac:	d806      	bhi.n	80024bc <rt_ms2tick+0x34>
 80024ae:	b298      	uxth	r0, r3
 80024b0:	4770      	bx	lr
 80024b2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80024b6:	4770      	bx	lr
 80024b8:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 80024bc:	4770      	bx	lr
 80024be:	bf00      	nop
 80024c0:	003d0900 	.word	0x003d0900
 80024c4:	08007144 	.word	0x08007144

080024c8 <rt_tid2ptcb>:
 80024c8:	b138      	cbz	r0, 80024da <rt_tid2ptcb+0x12>
 80024ca:	0783      	lsls	r3, r0, #30
 80024cc:	d104      	bne.n	80024d8 <rt_tid2ptcb+0x10>
 80024ce:	7803      	ldrb	r3, [r0, #0]
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	bf18      	it	ne
 80024d4:	2000      	movne	r0, #0
 80024d6:	4770      	bx	lr
 80024d8:	2000      	movs	r0, #0
 80024da:	4770      	bx	lr

080024dc <svcKernelStart>:
 80024dc:	b5b0      	push	{r4, r5, r7, lr}
 80024de:	4d0e      	ldr	r5, [pc, #56]	; (8002518 <svcKernelStart+0x3c>)
 80024e0:	7828      	ldrb	r0, [r5, #0]
 80024e2:	af00      	add	r7, sp, #0
 80024e4:	b9a8      	cbnz	r0, 8002512 <svcKernelStart+0x36>
 80024e6:	4c0d      	ldr	r4, [pc, #52]	; (800251c <svcKernelStart+0x40>)
 80024e8:	6823      	ldr	r3, [r4, #0]
 80024ea:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 80024ee:	f000 fb6f 	bl	8002bd0 <rt_tsk_prio>
 80024f2:	6823      	ldr	r3, [r4, #0]
 80024f4:	78da      	ldrb	r2, [r3, #3]
 80024f6:	2aff      	cmp	r2, #255	; 0xff
 80024f8:	d103      	bne.n	8002502 <svcKernelStart+0x26>
 80024fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80024fc:	3220      	adds	r2, #32
 80024fe:	f382 8809 	msr	PSP, r2
 8002502:	6862      	ldr	r2, [r4, #4]
 8002504:	b90a      	cbnz	r2, 800250a <svcKernelStart+0x2e>
 8002506:	e884 000c 	stmia.w	r4, {r2, r3}
 800250a:	f000 fd19 	bl	8002f40 <rt_sys_start>
 800250e:	2301      	movs	r3, #1
 8002510:	702b      	strb	r3, [r5, #0]
 8002512:	2000      	movs	r0, #0
 8002514:	bdb0      	pop	{r4, r5, r7, pc}
 8002516:	bf00      	nop
 8002518:	20001f6c 	.word	0x20001f6c
 800251c:	20001f70 	.word	0x20001f70

08002520 <svcKernelRunning>:
 8002520:	4b01      	ldr	r3, [pc, #4]	; (8002528 <svcKernelRunning+0x8>)
 8002522:	7818      	ldrb	r0, [r3, #0]
 8002524:	4770      	bx	lr
 8002526:	bf00      	nop
 8002528:	20001f6c 	.word	0x20001f6c

0800252c <osKernelRunning>:
 800252c:	b510      	push	{r4, lr}
 800252e:	f3ef 8410 	mrs	r4, PRIMASK
 8002532:	b934      	cbnz	r4, 8002542 <osKernelRunning+0x16>
 8002534:	f3ef 8405 	mrs	r4, IPSR
 8002538:	b91c      	cbnz	r4, 8002542 <osKernelRunning+0x16>
 800253a:	f3ef 8414 	mrs	r4, CONTROL
 800253e:	07e4      	lsls	r4, r4, #31
 8002540:	d402      	bmi.n	8002548 <osKernelRunning+0x1c>
 8002542:	4b03      	ldr	r3, [pc, #12]	; (8002550 <osKernelRunning+0x24>)
 8002544:	7818      	ldrb	r0, [r3, #0]
 8002546:	bd10      	pop	{r4, pc}
 8002548:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002554 <osKernelRunning+0x28>
 800254c:	df00      	svc	0
 800254e:	bd10      	pop	{r4, pc}
 8002550:	20001f6c 	.word	0x20001f6c
 8002554:	08002521 	.word	0x08002521

08002558 <osKernelStart>:
 8002558:	b590      	push	{r4, r7, lr}
 800255a:	b089      	sub	sp, #36	; 0x24
 800255c:	af00      	add	r7, sp, #0
 800255e:	f3ef 8310 	mrs	r3, PRIMASK
 8002562:	2b00      	cmp	r3, #0
 8002564:	d137      	bne.n	80025d6 <osKernelStart+0x7e>
 8002566:	f3ef 8305 	mrs	r3, IPSR
 800256a:	2b00      	cmp	r3, #0
 800256c:	d133      	bne.n	80025d6 <osKernelStart+0x7e>
 800256e:	f7ff ffdd 	bl	800252c <osKernelRunning>
 8002572:	b928      	cbnz	r0, 8002580 <osKernelStart+0x28>
 8002574:	4c19      	ldr	r4, [pc, #100]	; (80025dc <osKernelStart+0x84>)
 8002576:	6824      	ldr	r4, [r4, #0]
 8002578:	b114      	cbz	r4, 8002580 <osKernelStart+0x28>
 800257a:	6864      	ldr	r4, [r4, #4]
 800257c:	b104      	cbz	r4, 8002580 <osKernelStart+0x28>
 800257e:	47a0      	blx	r4
 8002580:	f3ef 8414 	mrs	r4, CONTROL
 8002584:	f004 0403 	and.w	r4, r4, #3
 8002588:	2c02      	cmp	r4, #2
 800258a:	d018      	beq.n	80025be <osKernelStart+0x66>
 800258c:	2c03      	cmp	r4, #3
 800258e:	d01c      	beq.n	80025ca <osKernelStart+0x72>
 8002590:	2c01      	cmp	r4, #1
 8002592:	d01e      	beq.n	80025d2 <osKernelStart+0x7a>
 8002594:	f107 0420 	add.w	r4, r7, #32
 8002598:	f384 8809 	msr	PSP, r4
 800259c:	4c10      	ldr	r4, [pc, #64]	; (80025e0 <osKernelStart+0x88>)
 800259e:	7824      	ldrb	r4, [r4, #0]
 80025a0:	07e4      	lsls	r4, r4, #31
 80025a2:	d510      	bpl.n	80025c6 <osKernelStart+0x6e>
 80025a4:	2402      	movs	r4, #2
 80025a6:	f384 8814 	msr	CONTROL, r4
 80025aa:	f3bf 8f4f 	dsb	sy
 80025ae:	f3bf 8f6f 	isb	sy
 80025b2:	f8df c030 	ldr.w	r12, [pc, #48]	; 80025e4 <osKernelStart+0x8c>
 80025b6:	df00      	svc	0
 80025b8:	3724      	adds	r7, #36	; 0x24
 80025ba:	46bd      	mov	sp, r7
 80025bc:	bd90      	pop	{r4, r7, pc}
 80025be:	4c08      	ldr	r4, [pc, #32]	; (80025e0 <osKernelStart+0x88>)
 80025c0:	7824      	ldrb	r4, [r4, #0]
 80025c2:	07e4      	lsls	r4, r4, #31
 80025c4:	d4f5      	bmi.n	80025b2 <osKernelStart+0x5a>
 80025c6:	2403      	movs	r4, #3
 80025c8:	e7ed      	b.n	80025a6 <osKernelStart+0x4e>
 80025ca:	4c05      	ldr	r4, [pc, #20]	; (80025e0 <osKernelStart+0x88>)
 80025cc:	7824      	ldrb	r4, [r4, #0]
 80025ce:	07e4      	lsls	r4, r4, #31
 80025d0:	d5ef      	bpl.n	80025b2 <osKernelStart+0x5a>
 80025d2:	20ff      	movs	r0, #255	; 0xff
 80025d4:	e7f0      	b.n	80025b8 <osKernelStart+0x60>
 80025d6:	2082      	movs	r0, #130	; 0x82
 80025d8:	e7ee      	b.n	80025b8 <osKernelStart+0x60>
 80025da:	bf00      	nop
 80025dc:	20001f54 	.word	0x20001f54
 80025e0:	08007172 	.word	0x08007172
 80025e4:	080024dd 	.word	0x080024dd

080025e8 <svcThreadCreate>:
 80025e8:	b570      	push	{r4, r5, r6, lr}
 80025ea:	460b      	mov	r3, r1
 80025ec:	4616      	mov	r6, r2
 80025ee:	4602      	mov	r2, r0
 80025f0:	b910      	cbnz	r0, 80025f8 <svcThreadCreate+0x10>
 80025f2:	2400      	movs	r4, #0
 80025f4:	4620      	mov	r0, r4
 80025f6:	bd70      	pop	{r4, r5, r6, pc}
 80025f8:	6800      	ldr	r0, [r0, #0]
 80025fa:	2800      	cmp	r0, #0
 80025fc:	d0f9      	beq.n	80025f2 <svcThreadCreate+0xa>
 80025fe:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8002602:	1ce5      	adds	r5, r4, #3
 8002604:	b2ad      	uxth	r5, r5
 8002606:	2d06      	cmp	r5, #6
 8002608:	d8f3      	bhi.n	80025f2 <svcThreadCreate+0xa>
 800260a:	68d1      	ldr	r1, [r2, #12]
 800260c:	b1c1      	cbz	r1, 8002640 <svcThreadCreate+0x58>
 800260e:	6912      	ldr	r2, [r2, #16]
 8002610:	3404      	adds	r4, #4
 8002612:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8002616:	f000 fb19 	bl	8002c4c <rt_tsk_create>
 800261a:	2800      	cmp	r0, #0
 800261c:	d0e9      	beq.n	80025f2 <svcThreadCreate+0xa>
 800261e:	4b0a      	ldr	r3, [pc, #40]	; (8002648 <svcThreadCreate+0x60>)
 8002620:	4a0a      	ldr	r2, [pc, #40]	; (800264c <svcThreadCreate+0x64>)
 8002622:	3801      	subs	r0, #1
 8002624:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002628:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800262a:	635a      	str	r2, [r3, #52]	; 0x34
 800262c:	4b08      	ldr	r3, [pc, #32]	; (8002650 <svcThreadCreate+0x68>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	b143      	cbz	r3, 8002644 <svcThreadCreate+0x5c>
 8002632:	689b      	ldr	r3, [r3, #8]
 8002634:	b133      	cbz	r3, 8002644 <svcThreadCreate+0x5c>
 8002636:	4631      	mov	r1, r6
 8002638:	78e0      	ldrb	r0, [r4, #3]
 800263a:	4798      	blx	r3
 800263c:	63e0      	str	r0, [r4, #60]	; 0x3c
 800263e:	e7d9      	b.n	80025f4 <svcThreadCreate+0xc>
 8002640:	460a      	mov	r2, r1
 8002642:	e7e5      	b.n	8002610 <svcThreadCreate+0x28>
 8002644:	63e6      	str	r6, [r4, #60]	; 0x3c
 8002646:	e7d5      	b.n	80025f4 <svcThreadCreate+0xc>
 8002648:	20001acc 	.word	0x20001acc
 800264c:	080027f1 	.word	0x080027f1
 8002650:	20001f54 	.word	0x20001f54

08002654 <svcThreadGetId>:
 8002654:	b508      	push	{r3, lr}
 8002656:	f000 fab3 	bl	8002bc0 <rt_tsk_self>
 800265a:	b118      	cbz	r0, 8002664 <svcThreadGetId+0x10>
 800265c:	3801      	subs	r0, #1
 800265e:	4b02      	ldr	r3, [pc, #8]	; (8002668 <svcThreadGetId+0x14>)
 8002660:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002664:	bd08      	pop	{r3, pc}
 8002666:	bf00      	nop
 8002668:	20001acc 	.word	0x20001acc

0800266c <svcThreadTerminate>:
 800266c:	b510      	push	{r4, lr}
 800266e:	f7ff ff2b 	bl	80024c8 <rt_tid2ptcb>
 8002672:	4604      	mov	r4, r0
 8002674:	b170      	cbz	r0, 8002694 <svcThreadTerminate+0x28>
 8002676:	4b08      	ldr	r3, [pc, #32]	; (8002698 <svcThreadTerminate+0x2c>)
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	b11b      	cbz	r3, 8002684 <svcThreadTerminate+0x18>
 800267c:	68db      	ldr	r3, [r3, #12]
 800267e:	b10b      	cbz	r3, 8002684 <svcThreadTerminate+0x18>
 8002680:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002682:	4798      	blx	r3
 8002684:	78e0      	ldrb	r0, [r4, #3]
 8002686:	f000 fb37 	bl	8002cf8 <rt_tsk_delete>
 800268a:	28ff      	cmp	r0, #255	; 0xff
 800268c:	bf0c      	ite	eq
 800268e:	2081      	moveq	r0, #129	; 0x81
 8002690:	2000      	movne	r0, #0
 8002692:	bd10      	pop	{r4, pc}
 8002694:	2080      	movs	r0, #128	; 0x80
 8002696:	bd10      	pop	{r4, pc}
 8002698:	20001f54 	.word	0x20001f54

0800269c <svcDelay>:
 800269c:	b508      	push	{r3, lr}
 800269e:	b128      	cbz	r0, 80026ac <svcDelay+0x10>
 80026a0:	f7ff fef2 	bl	8002488 <rt_ms2tick>
 80026a4:	f000 fd8e 	bl	80031c4 <rt_dly_wait>
 80026a8:	2040      	movs	r0, #64	; 0x40
 80026aa:	bd08      	pop	{r3, pc}
 80026ac:	bd08      	pop	{r3, pc}
	...

080026b0 <osDelay>:
 80026b0:	b510      	push	{r4, lr}
 80026b2:	f3ef 8410 	mrs	r4, PRIMASK
 80026b6:	b934      	cbnz	r4, 80026c6 <osDelay+0x16>
 80026b8:	f3ef 8405 	mrs	r4, IPSR
 80026bc:	b91c      	cbnz	r4, 80026c6 <osDelay+0x16>
 80026be:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80026cc <osDelay+0x1c>
 80026c2:	df00      	svc	0
 80026c4:	bd10      	pop	{r4, pc}
 80026c6:	2082      	movs	r0, #130	; 0x82
 80026c8:	bd10      	pop	{r4, pc}
 80026ca:	0000      	.short	0x0000
 80026cc:	0800269d 	.word	0x0800269d

080026d0 <svcTimerCall>:
 80026d0:	0783      	lsls	r3, r0, #30
 80026d2:	d105      	bne.n	80026e0 <svcTimerCall+0x10>
 80026d4:	b138      	cbz	r0, 80026e6 <svcTimerCall+0x16>
 80026d6:	6943      	ldr	r3, [r0, #20]
 80026d8:	6901      	ldr	r1, [r0, #16]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	4618      	mov	r0, r3
 80026de:	4770      	bx	lr
 80026e0:	2300      	movs	r3, #0
 80026e2:	4619      	mov	r1, r3
 80026e4:	e7fa      	b.n	80026dc <svcTimerCall+0xc>
 80026e6:	4603      	mov	r3, r0
 80026e8:	e7fb      	b.n	80026e2 <svcTimerCall+0x12>
	...

080026ec <osTimerCall>:
 80026ec:	b510      	push	{r4, lr}
 80026ee:	4604      	mov	r4, r0
 80026f0:	4608      	mov	r0, r1
 80026f2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002700 <osTimerCall+0x14>
 80026f6:	df00      	svc	0
 80026f8:	e884 0003 	stmia.w	r4, {r0, r1}
 80026fc:	4620      	mov	r0, r4
 80026fe:	bd10      	pop	{r4, pc}
 8002700:	080026d1 	.word	0x080026d1

08002704 <svcMutexCreate>:
 8002704:	b510      	push	{r4, lr}
 8002706:	b148      	cbz	r0, 800271c <svcMutexCreate+0x18>
 8002708:	6804      	ldr	r4, [r0, #0]
 800270a:	b124      	cbz	r4, 8002716 <svcMutexCreate+0x12>
 800270c:	7823      	ldrb	r3, [r4, #0]
 800270e:	b923      	cbnz	r3, 800271a <svcMutexCreate+0x16>
 8002710:	4620      	mov	r0, r4
 8002712:	f000 fc5b 	bl	8002fcc <rt_mut_init>
 8002716:	4620      	mov	r0, r4
 8002718:	bd10      	pop	{r4, pc}
 800271a:	2000      	movs	r0, #0
 800271c:	bd10      	pop	{r4, pc}

0800271e <svcMutexWait>:
 800271e:	b570      	push	{r4, r5, r6, lr}
 8002720:	f010 0403 	ands.w	r4, r0, #3
 8002724:	4605      	mov	r5, r0
 8002726:	460e      	mov	r6, r1
 8002728:	d111      	bne.n	800274e <svcMutexWait+0x30>
 800272a:	b180      	cbz	r0, 800274e <svcMutexWait+0x30>
 800272c:	7803      	ldrb	r3, [r0, #0]
 800272e:	2b03      	cmp	r3, #3
 8002730:	d10d      	bne.n	800274e <svcMutexWait+0x30>
 8002732:	4608      	mov	r0, r1
 8002734:	f7ff fea8 	bl	8002488 <rt_ms2tick>
 8002738:	4601      	mov	r1, r0
 800273a:	4628      	mov	r0, r5
 800273c:	f000 fd14 	bl	8003168 <rt_mut_wait>
 8002740:	2801      	cmp	r0, #1
 8002742:	d106      	bne.n	8002752 <svcMutexWait+0x34>
 8002744:	2e00      	cmp	r6, #0
 8002746:	bf14      	ite	ne
 8002748:	20c1      	movne	r0, #193	; 0xc1
 800274a:	2081      	moveq	r0, #129	; 0x81
 800274c:	bd70      	pop	{r4, r5, r6, pc}
 800274e:	2080      	movs	r0, #128	; 0x80
 8002750:	bd70      	pop	{r4, r5, r6, pc}
 8002752:	4620      	mov	r0, r4
 8002754:	bd70      	pop	{r4, r5, r6, pc}

08002756 <svcMutexRelease>:
 8002756:	0782      	lsls	r2, r0, #30
 8002758:	b508      	push	{r3, lr}
 800275a:	d10a      	bne.n	8002772 <svcMutexRelease+0x1c>
 800275c:	b148      	cbz	r0, 8002772 <svcMutexRelease+0x1c>
 800275e:	7803      	ldrb	r3, [r0, #0]
 8002760:	2b03      	cmp	r3, #3
 8002762:	d106      	bne.n	8002772 <svcMutexRelease+0x1c>
 8002764:	f000 fc90 	bl	8003088 <rt_mut_release>
 8002768:	28ff      	cmp	r0, #255	; 0xff
 800276a:	bf0c      	ite	eq
 800276c:	2081      	moveq	r0, #129	; 0x81
 800276e:	2000      	movne	r0, #0
 8002770:	bd08      	pop	{r3, pc}
 8002772:	2080      	movs	r0, #128	; 0x80
 8002774:	bd08      	pop	{r3, pc}

08002776 <svcMutexDelete>:
 8002776:	b510      	push	{r4, lr}
 8002778:	f010 0403 	ands.w	r4, r0, #3
 800277c:	d107      	bne.n	800278e <svcMutexDelete+0x18>
 800277e:	b130      	cbz	r0, 800278e <svcMutexDelete+0x18>
 8002780:	7803      	ldrb	r3, [r0, #0]
 8002782:	2b03      	cmp	r3, #3
 8002784:	d103      	bne.n	800278e <svcMutexDelete+0x18>
 8002786:	f000 fc29 	bl	8002fdc <rt_mut_delete>
 800278a:	4620      	mov	r0, r4
 800278c:	bd10      	pop	{r4, pc}
 800278e:	2080      	movs	r0, #128	; 0x80
 8002790:	bd10      	pop	{r4, pc}
	...

08002794 <osMutexCreate>:
 8002794:	b570      	push	{r4, r5, r6, lr}
 8002796:	4605      	mov	r5, r0
 8002798:	f3ef 8410 	mrs	r4, PRIMASK
 800279c:	b994      	cbnz	r4, 80027c4 <osMutexCreate+0x30>
 800279e:	f3ef 8605 	mrs	r6, IPSR
 80027a2:	b97e      	cbnz	r6, 80027c4 <osMutexCreate+0x30>
 80027a4:	f3ef 8414 	mrs	r4, CONTROL
 80027a8:	07e4      	lsls	r4, r4, #31
 80027aa:	d406      	bmi.n	80027ba <osMutexCreate+0x26>
 80027ac:	4c06      	ldr	r4, [pc, #24]	; (80027c8 <osMutexCreate+0x34>)
 80027ae:	7824      	ldrb	r4, [r4, #0]
 80027b0:	b91c      	cbnz	r4, 80027ba <osMutexCreate+0x26>
 80027b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80027b6:	f7ff bfa5 	b.w	8002704 <svcMutexCreate>
 80027ba:	4628      	mov	r0, r5
 80027bc:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80027cc <osMutexCreate+0x38>
 80027c0:	df00      	svc	0
 80027c2:	bd70      	pop	{r4, r5, r6, pc}
 80027c4:	2000      	movs	r0, #0
 80027c6:	bd70      	pop	{r4, r5, r6, pc}
 80027c8:	20001f6c 	.word	0x20001f6c
 80027cc:	08002705 	.word	0x08002705

080027d0 <osMutexWait>:
 80027d0:	b510      	push	{r4, lr}
 80027d2:	f3ef 8410 	mrs	r4, PRIMASK
 80027d6:	b934      	cbnz	r4, 80027e6 <osMutexWait+0x16>
 80027d8:	f3ef 8405 	mrs	r4, IPSR
 80027dc:	b91c      	cbnz	r4, 80027e6 <osMutexWait+0x16>
 80027de:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80027ec <osMutexWait+0x1c>
 80027e2:	df00      	svc	0
 80027e4:	bd10      	pop	{r4, pc}
 80027e6:	2082      	movs	r0, #130	; 0x82
 80027e8:	bd10      	pop	{r4, pc}
 80027ea:	0000      	.short	0x0000
 80027ec:	0800271f 	.word	0x0800271f

080027f0 <osThreadExit>:
 80027f0:	4808      	ldr	r0, [pc, #32]	; (8002814 <osThreadExit+0x24>)
 80027f2:	b508      	push	{r3, lr}
 80027f4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80027f8:	6800      	ldr	r0, [r0, #0]
 80027fa:	f7ff ffe9 	bl	80027d0 <osMutexWait>
 80027fe:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002818 <osThreadExit+0x28>
 8002802:	df00      	svc	0
 8002804:	4604      	mov	r4, r0
 8002806:	f7ff fb43 	bl	8001e90 <sysThreadTerminate>
 800280a:	4620      	mov	r0, r4
 800280c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800281c <osThreadExit+0x2c>
 8002810:	df00      	svc	0
 8002812:	e7fe      	b.n	8002812 <osThreadExit+0x22>
 8002814:	20001f64 	.word	0x20001f64
 8002818:	08002655 	.word	0x08002655
 800281c:	0800266d 	.word	0x0800266d

08002820 <osMutexRelease>:
 8002820:	b510      	push	{r4, lr}
 8002822:	f3ef 8410 	mrs	r4, PRIMASK
 8002826:	b934      	cbnz	r4, 8002836 <osMutexRelease+0x16>
 8002828:	f3ef 8405 	mrs	r4, IPSR
 800282c:	b91c      	cbnz	r4, 8002836 <osMutexRelease+0x16>
 800282e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800283c <osMutexRelease+0x1c>
 8002832:	df00      	svc	0
 8002834:	bd10      	pop	{r4, pc}
 8002836:	2082      	movs	r0, #130	; 0x82
 8002838:	bd10      	pop	{r4, pc}
 800283a:	0000      	.short	0x0000
 800283c:	08002757 	.word	0x08002757

08002840 <osThreadContextCreate>:
 8002840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002844:	4680      	mov	r8, r0
 8002846:	460f      	mov	r7, r1
 8002848:	4616      	mov	r6, r2
 800284a:	f3ef 8410 	mrs	r4, PRIMASK
 800284e:	bb04      	cbnz	r4, 8002892 <osThreadContextCreate+0x52>
 8002850:	f3ef 8305 	mrs	r3, IPSR
 8002854:	b9d3      	cbnz	r3, 800288c <osThreadContextCreate+0x4c>
 8002856:	f3ef 8314 	mrs	r3, CONTROL
 800285a:	07db      	lsls	r3, r3, #31
 800285c:	d406      	bmi.n	800286c <osThreadContextCreate+0x2c>
 800285e:	4b0e      	ldr	r3, [pc, #56]	; (8002898 <osThreadContextCreate+0x58>)
 8002860:	781b      	ldrb	r3, [r3, #0]
 8002862:	b91b      	cbnz	r3, 800286c <osThreadContextCreate+0x2c>
 8002864:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002868:	f7ff bebe 	b.w	80025e8 <svcThreadCreate>
 800286c:	4d0b      	ldr	r5, [pc, #44]	; (800289c <osThreadContextCreate+0x5c>)
 800286e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002872:	6828      	ldr	r0, [r5, #0]
 8002874:	f7ff ffac 	bl	80027d0 <osMutexWait>
 8002878:	4640      	mov	r0, r8
 800287a:	4639      	mov	r1, r7
 800287c:	4632      	mov	r2, r6
 800287e:	f8df c020 	ldr.w	r12, [pc, #32]	; 80028a0 <osThreadContextCreate+0x60>
 8002882:	df00      	svc	0
 8002884:	4604      	mov	r4, r0
 8002886:	6828      	ldr	r0, [r5, #0]
 8002888:	f7ff ffca 	bl	8002820 <osMutexRelease>
 800288c:	4620      	mov	r0, r4
 800288e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002892:	2400      	movs	r4, #0
 8002894:	e7fa      	b.n	800288c <osThreadContextCreate+0x4c>
 8002896:	bf00      	nop
 8002898:	20001f6c 	.word	0x20001f6c
 800289c:	20001f64 	.word	0x20001f64
 80028a0:	080025e9 	.word	0x080025e9

080028a4 <osThreadCreate>:
 80028a4:	2200      	movs	r2, #0
 80028a6:	f7ff bfcb 	b.w	8002840 <osThreadContextCreate>
	...

080028ac <osMutexDelete>:
 80028ac:	b510      	push	{r4, lr}
 80028ae:	f3ef 8410 	mrs	r4, PRIMASK
 80028b2:	b934      	cbnz	r4, 80028c2 <osMutexDelete+0x16>
 80028b4:	f3ef 8405 	mrs	r4, IPSR
 80028b8:	b91c      	cbnz	r4, 80028c2 <osMutexDelete+0x16>
 80028ba:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80028c8 <osMutexDelete+0x1c>
 80028be:	df00      	svc	0
 80028c0:	bd10      	pop	{r4, pc}
 80028c2:	2082      	movs	r0, #130	; 0x82
 80028c4:	bd10      	pop	{r4, pc}
 80028c6:	0000      	.short	0x0000
 80028c8:	08002777 	.word	0x08002777

080028cc <svcMessageCreate>:
 80028cc:	b510      	push	{r4, lr}
 80028ce:	4604      	mov	r4, r0
 80028d0:	b160      	cbz	r0, 80028ec <svcMessageCreate+0x20>
 80028d2:	6801      	ldr	r1, [r0, #0]
 80028d4:	b151      	cbz	r1, 80028ec <svcMessageCreate+0x20>
 80028d6:	6840      	ldr	r0, [r0, #4]
 80028d8:	b148      	cbz	r0, 80028ee <svcMessageCreate+0x22>
 80028da:	7803      	ldrb	r3, [r0, #0]
 80028dc:	b933      	cbnz	r3, 80028ec <svcMessageCreate+0x20>
 80028de:	3104      	adds	r1, #4
 80028e0:	0089      	lsls	r1, r1, #2
 80028e2:	b289      	uxth	r1, r1
 80028e4:	f7ff fc52 	bl	800218c <rt_mbx_init>
 80028e8:	6860      	ldr	r0, [r4, #4]
 80028ea:	bd10      	pop	{r4, pc}
 80028ec:	2000      	movs	r0, #0
 80028ee:	bd10      	pop	{r4, pc}

080028f0 <svcKernelInitialize>:
 80028f0:	b538      	push	{r3, r4, r5, lr}
 80028f2:	4c11      	ldr	r4, [pc, #68]	; (8002938 <svcKernelInitialize+0x48>)
 80028f4:	7823      	ldrb	r3, [r4, #0]
 80028f6:	b90b      	cbnz	r3, 80028fc <svcKernelInitialize+0xc>
 80028f8:	f000 faa8 	bl	8002e4c <rt_sys_init>
 80028fc:	4b0f      	ldr	r3, [pc, #60]	; (800293c <svcKernelInitialize+0x4c>)
 80028fe:	7825      	ldrb	r5, [r4, #0]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	22ff      	movs	r2, #255	; 0xff
 8002904:	709a      	strb	r2, [r3, #2]
 8002906:	b98d      	cbnz	r5, 800292c <svcKernelInitialize+0x3c>
 8002908:	4629      	mov	r1, r5
 800290a:	480d      	ldr	r0, [pc, #52]	; (8002940 <svcKernelInitialize+0x50>)
 800290c:	f7ff ffde 	bl	80028cc <svcMessageCreate>
 8002910:	4b0c      	ldr	r3, [pc, #48]	; (8002944 <svcKernelInitialize+0x54>)
 8002912:	462a      	mov	r2, r5
 8002914:	6018      	str	r0, [r3, #0]
 8002916:	4629      	mov	r1, r5
 8002918:	480b      	ldr	r0, [pc, #44]	; (8002948 <svcKernelInitialize+0x58>)
 800291a:	f7ff fe65 	bl	80025e8 <svcThreadCreate>
 800291e:	4b0b      	ldr	r3, [pc, #44]	; (800294c <svcKernelInitialize+0x5c>)
 8002920:	6018      	str	r0, [r3, #0]
 8002922:	480b      	ldr	r0, [pc, #44]	; (8002950 <svcKernelInitialize+0x60>)
 8002924:	f7ff ff36 	bl	8002794 <osMutexCreate>
 8002928:	4b0a      	ldr	r3, [pc, #40]	; (8002954 <svcKernelInitialize+0x64>)
 800292a:	6018      	str	r0, [r3, #0]
 800292c:	2301      	movs	r3, #1
 800292e:	7023      	strb	r3, [r4, #0]
 8002930:	4b09      	ldr	r3, [pc, #36]	; (8002958 <svcKernelInitialize+0x68>)
 8002932:	2000      	movs	r0, #0
 8002934:	7018      	strb	r0, [r3, #0]
 8002936:	bd38      	pop	{r3, r4, r5, pc}
 8002938:	20001f60 	.word	0x20001f60
 800293c:	20001f70 	.word	0x20001f70
 8002940:	08007178 	.word	0x08007178
 8002944:	20001ac8 	.word	0x20001ac8
 8002948:	08007194 	.word	0x08007194
 800294c:	20001d7c 	.word	0x20001d7c
 8002950:	080071ac 	.word	0x080071ac
 8002954:	20001f64 	.word	0x20001f64
 8002958:	20001f6c 	.word	0x20001f6c

0800295c <osKernelInitialize>:
 800295c:	b510      	push	{r4, lr}
 800295e:	f3ef 8410 	mrs	r4, PRIMASK
 8002962:	b974      	cbnz	r4, 8002982 <osKernelInitialize+0x26>
 8002964:	f3ef 8405 	mrs	r4, IPSR
 8002968:	b95c      	cbnz	r4, 8002982 <osKernelInitialize+0x26>
 800296a:	f3ef 8414 	mrs	r4, CONTROL
 800296e:	07e4      	lsls	r4, r4, #31
 8002970:	d403      	bmi.n	800297a <osKernelInitialize+0x1e>
 8002972:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002976:	f7ff bfbb 	b.w	80028f0 <svcKernelInitialize>
 800297a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002988 <osKernelInitialize+0x2c>
 800297e:	df00      	svc	0
 8002980:	bd10      	pop	{r4, pc}
 8002982:	2082      	movs	r0, #130	; 0x82
 8002984:	bd10      	pop	{r4, pc}
 8002986:	0000      	.short	0x0000
 8002988:	080028f1 	.word	0x080028f1

0800298c <svcMessageGet>:
 800298c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002990:	460c      	mov	r4, r1
 8002992:	4680      	mov	r8, r0
 8002994:	b318      	cbz	r0, 80029de <svcMessageGet+0x52>
 8002996:	7803      	ldrb	r3, [r0, #0]
 8002998:	2b01      	cmp	r3, #1
 800299a:	d125      	bne.n	80029e8 <svcMessageGet+0x5c>
 800299c:	4608      	mov	r0, r1
 800299e:	f7ff fd73 	bl	8002488 <rt_ms2tick>
 80029a2:	a902      	add	r1, sp, #8
 80029a4:	4602      	mov	r2, r0
 80029a6:	4640      	mov	r0, r8
 80029a8:	f7ff fbfe 	bl	80021a8 <rt_mbx_wait>
 80029ac:	2801      	cmp	r0, #1
 80029ae:	d111      	bne.n	80029d4 <svcMessageGet+0x48>
 80029b0:	2000      	movs	r0, #0
 80029b2:	2c00      	cmp	r4, #0
 80029b4:	4602      	mov	r2, r0
 80029b6:	4603      	mov	r3, r0
 80029b8:	bf18      	it	ne
 80029ba:	2040      	movne	r0, #64	; 0x40
 80029bc:	9902      	ldr	r1, [sp, #8]
 80029be:	4604      	mov	r4, r0
 80029c0:	460d      	mov	r5, r1
 80029c2:	4616      	mov	r6, r2
 80029c4:	461f      	mov	r7, r3
 80029c6:	4620      	mov	r0, r4
 80029c8:	4629      	mov	r1, r5
 80029ca:	4632      	mov	r2, r6
 80029cc:	463b      	mov	r3, r7
 80029ce:	b004      	add	sp, #16
 80029d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80029d4:	2000      	movs	r0, #0
 80029d6:	4602      	mov	r2, r0
 80029d8:	4603      	mov	r3, r0
 80029da:	2010      	movs	r0, #16
 80029dc:	e7ee      	b.n	80029bc <svcMessageGet+0x30>
 80029de:	2480      	movs	r4, #128	; 0x80
 80029e0:	4605      	mov	r5, r0
 80029e2:	4606      	mov	r6, r0
 80029e4:	4607      	mov	r7, r0
 80029e6:	e7ee      	b.n	80029c6 <svcMessageGet+0x3a>
 80029e8:	2500      	movs	r5, #0
 80029ea:	2480      	movs	r4, #128	; 0x80
 80029ec:	462e      	mov	r6, r5
 80029ee:	462f      	mov	r7, r5
 80029f0:	e7e9      	b.n	80029c6 <svcMessageGet+0x3a>

080029f2 <isrMessagePut>:
 80029f2:	b570      	push	{r4, r5, r6, lr}
 80029f4:	460e      	mov	r6, r1
 80029f6:	4614      	mov	r4, r2
 80029f8:	4605      	mov	r5, r0
 80029fa:	b160      	cbz	r0, 8002a16 <isrMessagePut+0x24>
 80029fc:	b95a      	cbnz	r2, 8002a16 <isrMessagePut+0x24>
 80029fe:	7803      	ldrb	r3, [r0, #0]
 8002a00:	2b01      	cmp	r3, #1
 8002a02:	d108      	bne.n	8002a16 <isrMessagePut+0x24>
 8002a04:	f7ff fc26 	bl	8002254 <rt_mbx_check>
 8002a08:	b138      	cbz	r0, 8002a1a <isrMessagePut+0x28>
 8002a0a:	4628      	mov	r0, r5
 8002a0c:	4631      	mov	r1, r6
 8002a0e:	f7ff fc25 	bl	800225c <isr_mbx_send>
 8002a12:	4620      	mov	r0, r4
 8002a14:	bd70      	pop	{r4, r5, r6, pc}
 8002a16:	2080      	movs	r0, #128	; 0x80
 8002a18:	bd70      	pop	{r4, r5, r6, pc}
 8002a1a:	2081      	movs	r0, #129	; 0x81
 8002a1c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002a20 <sysTimerTick>:
 8002a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a22:	4e11      	ldr	r6, [pc, #68]	; (8002a68 <sysTimerTick+0x48>)
 8002a24:	6834      	ldr	r4, [r6, #0]
 8002a26:	b12c      	cbz	r4, 8002a34 <sysTimerTick+0x14>
 8002a28:	68a3      	ldr	r3, [r4, #8]
 8002a2a:	4f10      	ldr	r7, [pc, #64]	; (8002a6c <sysTimerTick+0x4c>)
 8002a2c:	3b01      	subs	r3, #1
 8002a2e:	60a3      	str	r3, [r4, #8]
 8002a30:	68a2      	ldr	r2, [r4, #8]
 8002a32:	b102      	cbz	r2, 8002a36 <sysTimerTick+0x16>
 8002a34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a36:	6825      	ldr	r5, [r4, #0]
 8002a38:	6838      	ldr	r0, [r7, #0]
 8002a3a:	6035      	str	r5, [r6, #0]
 8002a3c:	4621      	mov	r1, r4
 8002a3e:	f7ff ffd8 	bl	80029f2 <isrMessagePut>
 8002a42:	b110      	cbz	r0, 8002a4a <sysTimerTick+0x2a>
 8002a44:	2004      	movs	r0, #4
 8002a46:	f7ff fa15 	bl	8001e74 <os_error>
 8002a4a:	7963      	ldrb	r3, [r4, #5]
 8002a4c:	2b01      	cmp	r3, #1
 8002a4e:	d107      	bne.n	8002a60 <sysTimerTick+0x40>
 8002a50:	68e1      	ldr	r1, [r4, #12]
 8002a52:	4620      	mov	r0, r4
 8002a54:	f7ff fcfe 	bl	8002454 <rt_timer_insert>
 8002a58:	2d00      	cmp	r5, #0
 8002a5a:	d0eb      	beq.n	8002a34 <sysTimerTick+0x14>
 8002a5c:	462c      	mov	r4, r5
 8002a5e:	e7e7      	b.n	8002a30 <sysTimerTick+0x10>
 8002a60:	2301      	movs	r3, #1
 8002a62:	7123      	strb	r3, [r4, #4]
 8002a64:	e7f8      	b.n	8002a58 <sysTimerTick+0x38>
 8002a66:	bf00      	nop
 8002a68:	20001f68 	.word	0x20001f68
 8002a6c:	20001ac8 	.word	0x20001ac8

08002a70 <isrMessageGet>:
 8002a70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002a72:	4604      	mov	r4, r0
 8002a74:	4616      	mov	r6, r2
 8002a76:	4608      	mov	r0, r1
 8002a78:	b101      	cbz	r1, 8002a7c <isrMessageGet+0xc>
 8002a7a:	b122      	cbz	r2, 8002a86 <isrMessageGet+0x16>
 8002a7c:	2380      	movs	r3, #128	; 0x80
 8002a7e:	6023      	str	r3, [r4, #0]
 8002a80:	4620      	mov	r0, r4
 8002a82:	b004      	add	sp, #16
 8002a84:	bd70      	pop	{r4, r5, r6, pc}
 8002a86:	780b      	ldrb	r3, [r1, #0]
 8002a88:	2b01      	cmp	r3, #1
 8002a8a:	d1f7      	bne.n	8002a7c <isrMessageGet+0xc>
 8002a8c:	a902      	add	r1, sp, #8
 8002a8e:	f7ff fbec 	bl	800226a <isr_mbx_receive>
 8002a92:	2804      	cmp	r0, #4
 8002a94:	bf08      	it	eq
 8002a96:	2310      	moveq	r3, #16
 8002a98:	ad01      	add	r5, sp, #4
 8002a9a:	bf14      	ite	ne
 8002a9c:	9601      	strne	r6, [sp, #4]
 8002a9e:	9301      	streq	r3, [sp, #4]
 8002aa0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002aa4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002aa8:	e7ea      	b.n	8002a80 <isrMessageGet+0x10>
	...

08002aac <osMessageGet>:
 8002aac:	b538      	push	{r3, r4, r5, lr}
 8002aae:	4604      	mov	r4, r0
 8002ab0:	4615      	mov	r5, r2
 8002ab2:	f3ef 8010 	mrs	r0, PRIMASK
 8002ab6:	b910      	cbnz	r0, 8002abe <osMessageGet+0x12>
 8002ab8:	f3ef 8005 	mrs	r0, IPSR
 8002abc:	b128      	cbz	r0, 8002aca <osMessageGet+0x1e>
 8002abe:	462a      	mov	r2, r5
 8002ac0:	4620      	mov	r0, r4
 8002ac2:	f7ff ffd5 	bl	8002a70 <isrMessageGet>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	bd38      	pop	{r3, r4, r5, pc}
 8002aca:	4608      	mov	r0, r1
 8002acc:	4611      	mov	r1, r2
 8002ace:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002adc <osMessageGet+0x30>
 8002ad2:	df00      	svc	0
 8002ad4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002ad8:	e7f5      	b.n	8002ac6 <osMessageGet+0x1a>
 8002ada:	0000      	.short	0x0000
 8002adc:	0800298d 	.word	0x0800298d

08002ae0 <osTimerThread>:
 8002ae0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002ae2:	4c0a      	ldr	r4, [pc, #40]	; (8002b0c <osTimerThread+0x2c>)
 8002ae4:	6821      	ldr	r1, [r4, #0]
 8002ae6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002aea:	a803      	add	r0, sp, #12
 8002aec:	f7ff ffde 	bl	8002aac <osMessageGet>
 8002af0:	9b03      	ldr	r3, [sp, #12]
 8002af2:	2b10      	cmp	r3, #16
 8002af4:	d1f6      	bne.n	8002ae4 <osTimerThread+0x4>
 8002af6:	9904      	ldr	r1, [sp, #16]
 8002af8:	a801      	add	r0, sp, #4
 8002afa:	f7ff fdf7 	bl	80026ec <osTimerCall>
 8002afe:	9b01      	ldr	r3, [sp, #4]
 8002b00:	2b00      	cmp	r3, #0
 8002b02:	d0ef      	beq.n	8002ae4 <osTimerThread+0x4>
 8002b04:	9802      	ldr	r0, [sp, #8]
 8002b06:	4798      	blx	r3
 8002b08:	e7ec      	b.n	8002ae4 <osTimerThread+0x4>
 8002b0a:	bf00      	nop
 8002b0c:	20001ac8 	.word	0x20001ac8

08002b10 <rt_switch_req>:
 8002b10:	4b05      	ldr	r3, [pc, #20]	; (8002b28 <rt_switch_req+0x18>)
 8002b12:	6058      	str	r0, [r3, #4]
 8002b14:	2302      	movs	r3, #2
 8002b16:	7043      	strb	r3, [r0, #1]
 8002b18:	4b04      	ldr	r3, [pc, #16]	; (8002b2c <rt_switch_req+0x1c>)
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	b11b      	cbz	r3, 8002b26 <rt_switch_req+0x16>
 8002b1e:	691b      	ldr	r3, [r3, #16]
 8002b20:	b10b      	cbz	r3, 8002b26 <rt_switch_req+0x16>
 8002b22:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002b24:	4718      	bx	r3
 8002b26:	4770      	bx	lr
 8002b28:	20001f70 	.word	0x20001f70
 8002b2c:	20001f54 	.word	0x20001f54

08002b30 <rt_dispatch.part.0>:
 8002b30:	b508      	push	{r3, lr}
 8002b32:	4803      	ldr	r0, [pc, #12]	; (8002b40 <rt_dispatch.part.0+0x10>)
 8002b34:	f7ff f898 	bl	8001c68 <rt_get_first>
 8002b38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002b3c:	f7ff bfe8 	b.w	8002b10 <rt_switch_req>
 8002b40:	20001774 	.word	0x20001774

08002b44 <rt_dispatch>:
 8002b44:	b570      	push	{r4, r5, r6, lr}
 8002b46:	4604      	mov	r4, r0
 8002b48:	b918      	cbnz	r0, 8002b52 <rt_dispatch+0xe>
 8002b4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002b4e:	f7ff bfef 	b.w	8002b30 <rt_dispatch.part.0>
 8002b52:	4e0c      	ldr	r6, [pc, #48]	; (8002b84 <rt_dispatch+0x40>)
 8002b54:	78a2      	ldrb	r2, [r4, #2]
 8002b56:	6830      	ldr	r0, [r6, #0]
 8002b58:	7883      	ldrb	r3, [r0, #2]
 8002b5a:	429a      	cmp	r2, r3
 8002b5c:	f04f 0501 	mov.w	r5, #1
 8002b60:	d908      	bls.n	8002b74 <rt_dispatch+0x30>
 8002b62:	f7ff f893 	bl	8001c8c <rt_put_rdy_first>
 8002b66:	6833      	ldr	r3, [r6, #0]
 8002b68:	705d      	strb	r5, [r3, #1]
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002b70:	f7ff bfce 	b.w	8002b10 <rt_switch_req>
 8002b74:	7065      	strb	r5, [r4, #1]
 8002b76:	4621      	mov	r1, r4
 8002b78:	4803      	ldr	r0, [pc, #12]	; (8002b88 <rt_dispatch+0x44>)
 8002b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002b7e:	f7ff b85b 	b.w	8001c38 <rt_put_prio>
 8002b82:	bf00      	nop
 8002b84:	20001f70 	.word	0x20001f70
 8002b88:	20001774 	.word	0x20001774

08002b8c <rt_block>:
 8002b8c:	b538      	push	{r3, r4, r5, lr}
 8002b8e:	460d      	mov	r5, r1
 8002b90:	4601      	mov	r1, r0
 8002b92:	b180      	cbz	r0, 8002bb6 <rt_block+0x2a>
 8002b94:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b98:	4298      	cmp	r0, r3
 8002b9a:	4c07      	ldr	r4, [pc, #28]	; (8002bb8 <rt_block+0x2c>)
 8002b9c:	d002      	beq.n	8002ba4 <rt_block+0x18>
 8002b9e:	6820      	ldr	r0, [r4, #0]
 8002ba0:	f7ff f87e 	bl	8001ca0 <rt_put_dly>
 8002ba4:	6823      	ldr	r3, [r4, #0]
 8002ba6:	4805      	ldr	r0, [pc, #20]	; (8002bbc <rt_block+0x30>)
 8002ba8:	705d      	strb	r5, [r3, #1]
 8002baa:	f7ff f85d 	bl	8001c68 <rt_get_first>
 8002bae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002bb2:	f7ff bfad 	b.w	8002b10 <rt_switch_req>
 8002bb6:	bd38      	pop	{r3, r4, r5, pc}
 8002bb8:	20001f70 	.word	0x20001f70
 8002bbc:	20001774 	.word	0x20001774

08002bc0 <rt_tsk_self>:
 8002bc0:	4b02      	ldr	r3, [pc, #8]	; (8002bcc <rt_tsk_self+0xc>)
 8002bc2:	6818      	ldr	r0, [r3, #0]
 8002bc4:	b100      	cbz	r0, 8002bc8 <rt_tsk_self+0x8>
 8002bc6:	78c0      	ldrb	r0, [r0, #3]
 8002bc8:	4770      	bx	lr
 8002bca:	bf00      	nop
 8002bcc:	20001f70 	.word	0x20001f70

08002bd0 <rt_tsk_prio>:
 8002bd0:	b510      	push	{r4, lr}
 8002bd2:	b9a8      	cbnz	r0, 8002c00 <rt_tsk_prio+0x30>
 8002bd4:	4b19      	ldr	r3, [pc, #100]	; (8002c3c <rt_tsk_prio+0x6c>)
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	7099      	strb	r1, [r3, #2]
 8002bda:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002bde:	4818      	ldr	r0, [pc, #96]	; (8002c40 <rt_tsk_prio+0x70>)
 8002be0:	6843      	ldr	r3, [r0, #4]
 8002be2:	789b      	ldrb	r3, [r3, #2]
 8002be4:	428b      	cmp	r3, r1
 8002be6:	d801      	bhi.n	8002bec <rt_tsk_prio+0x1c>
 8002be8:	2000      	movs	r0, #0
 8002bea:	bd10      	pop	{r4, pc}
 8002bec:	4c13      	ldr	r4, [pc, #76]	; (8002c3c <rt_tsk_prio+0x6c>)
 8002bee:	6821      	ldr	r1, [r4, #0]
 8002bf0:	f7ff f822 	bl	8001c38 <rt_put_prio>
 8002bf4:	6823      	ldr	r3, [r4, #0]
 8002bf6:	2201      	movs	r2, #1
 8002bf8:	705a      	strb	r2, [r3, #1]
 8002bfa:	f7ff ff99 	bl	8002b30 <rt_dispatch.part.0>
 8002bfe:	e7f3      	b.n	8002be8 <rt_tsk_prio+0x18>
 8002c00:	4b10      	ldr	r3, [pc, #64]	; (8002c44 <rt_tsk_prio+0x74>)
 8002c02:	881b      	ldrh	r3, [r3, #0]
 8002c04:	4298      	cmp	r0, r3
 8002c06:	d817      	bhi.n	8002c38 <rt_tsk_prio+0x68>
 8002c08:	3801      	subs	r0, #1
 8002c0a:	4b0f      	ldr	r3, [pc, #60]	; (8002c48 <rt_tsk_prio+0x78>)
 8002c0c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002c10:	b194      	cbz	r4, 8002c38 <rt_tsk_prio+0x68>
 8002c12:	4b0a      	ldr	r3, [pc, #40]	; (8002c3c <rt_tsk_prio+0x6c>)
 8002c14:	70a1      	strb	r1, [r4, #2]
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002c1c:	429c      	cmp	r4, r3
 8002c1e:	d0de      	beq.n	8002bde <rt_tsk_prio+0xe>
 8002c20:	4620      	mov	r0, r4
 8002c22:	f7ff f8af 	bl	8001d84 <rt_resort_prio>
 8002c26:	7863      	ldrb	r3, [r4, #1]
 8002c28:	2b01      	cmp	r3, #1
 8002c2a:	d1dd      	bne.n	8002be8 <rt_tsk_prio+0x18>
 8002c2c:	4804      	ldr	r0, [pc, #16]	; (8002c40 <rt_tsk_prio+0x70>)
 8002c2e:	f7ff f81b 	bl	8001c68 <rt_get_first>
 8002c32:	f7ff ff87 	bl	8002b44 <rt_dispatch>
 8002c36:	e7d7      	b.n	8002be8 <rt_tsk_prio+0x18>
 8002c38:	20ff      	movs	r0, #255	; 0xff
 8002c3a:	bd10      	pop	{r4, pc}
 8002c3c:	20001f70 	.word	0x20001f70
 8002c40:	20001774 	.word	0x20001774
 8002c44:	08007174 	.word	0x08007174
 8002c48:	20001acc 	.word	0x20001acc

08002c4c <rt_tsk_create>:
 8002c4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002c50:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002c54:	460d      	mov	r5, r1
 8002c56:	4680      	mov	r8, r0
 8002c58:	4823      	ldr	r0, [pc, #140]	; (8002ce8 <rt_tsk_create+0x9c>)
 8002c5a:	4616      	mov	r6, r2
 8002c5c:	469a      	mov	r10, r3
 8002c5e:	bf08      	it	eq
 8002c60:	3501      	addeq	r5, #1
 8002c62:	f7ff fa72 	bl	800214a <rt_alloc_box>
 8002c66:	4604      	mov	r4, r0
 8002c68:	b920      	cbnz	r0, 8002c74 <rt_tsk_create+0x28>
 8002c6a:	f04f 0900 	mov.w	r9, #0
 8002c6e:	4648      	mov	r0, r9
 8002c70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002c74:	4b1d      	ldr	r3, [pc, #116]	; (8002cec <rt_tsk_create+0xa0>)
 8002c76:	6306      	str	r6, [r0, #48]	; 0x30
 8002c78:	881b      	ldrh	r3, [r3, #0]
 8002c7a:	4e1d      	ldr	r6, [pc, #116]	; (8002cf0 <rt_tsk_create+0xa4>)
 8002c7c:	0a28      	lsrs	r0, r5, #8
 8002c7e:	62a0      	str	r0, [r4, #40]	; 0x28
 8002c80:	2100      	movs	r1, #0
 8002c82:	428b      	cmp	r3, r1
 8002c84:	f101 0901 	add.w	r9, r1, #1
 8002c88:	d0ef      	beq.n	8002c6a <rt_tsk_create+0x1e>
 8002c8a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8002c8e:	460f      	mov	r7, r1
 8002c90:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002c94:	4649      	mov	r1, r9
 8002c96:	2a00      	cmp	r2, #0
 8002c98:	d1f3      	bne.n	8002c82 <rt_tsk_create+0x36>
 8002c9a:	b2ed      	uxtb	r5, r5
 8002c9c:	2301      	movs	r3, #1
 8002c9e:	f884 9003 	strb.w	r9, [r4, #3]
 8002ca2:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002ca6:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002caa:	7022      	strb	r2, [r4, #0]
 8002cac:	7063      	strb	r3, [r4, #1]
 8002cae:	70a5      	strb	r5, [r4, #2]
 8002cb0:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002cb4:	6062      	str	r2, [r4, #4]
 8002cb6:	60a2      	str	r2, [r4, #8]
 8002cb8:	60e2      	str	r2, [r4, #12]
 8002cba:	6122      	str	r2, [r4, #16]
 8002cbc:	6222      	str	r2, [r4, #32]
 8002cbe:	82a2      	strh	r2, [r4, #20]
 8002cc0:	82e2      	strh	r2, [r4, #22]
 8002cc2:	8322      	strh	r2, [r4, #24]
 8002cc4:	8362      	strh	r2, [r4, #26]
 8002cc6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002cca:	b918      	cbnz	r0, 8002cd4 <rt_tsk_create+0x88>
 8002ccc:	4809      	ldr	r0, [pc, #36]	; (8002cf4 <rt_tsk_create+0xa8>)
 8002cce:	f7ff fa3c 	bl	800214a <rt_alloc_box>
 8002cd2:	6320      	str	r0, [r4, #48]	; 0x30
 8002cd4:	4620      	mov	r0, r4
 8002cd6:	4641      	mov	r1, r8
 8002cd8:	f7ff f91a 	bl	8001f10 <rt_init_stack>
 8002cdc:	4620      	mov	r0, r4
 8002cde:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002ce2:	f7ff ff2f 	bl	8002b44 <rt_dispatch>
 8002ce6:	e7c2      	b.n	8002c6e <rt_tsk_create+0x22>
 8002ce8:	20001d80 	.word	0x20001d80
 8002cec:	08007174 	.word	0x08007174
 8002cf0:	20001acc 	.word	0x20001acc
 8002cf4:	20001ae8 	.word	0x20001ae8

08002cf8 <rt_tsk_delete>:
 8002cf8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002cfc:	4d4d      	ldr	r5, [pc, #308]	; (8002e34 <rt_tsk_delete+0x13c>)
 8002cfe:	b118      	cbz	r0, 8002d08 <rt_tsk_delete+0x10>
 8002d00:	682b      	ldr	r3, [r5, #0]
 8002d02:	78db      	ldrb	r3, [r3, #3]
 8002d04:	4298      	cmp	r0, r3
 8002d06:	d141      	bne.n	8002d8c <rt_tsk_delete+0x94>
 8002d08:	682c      	ldr	r4, [r5, #0]
 8002d0a:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002e48 <rt_tsk_delete+0x150>
 8002d0e:	2300      	movs	r3, #0
 8002d10:	7063      	strb	r3, [r4, #1]
 8002d12:	f002 fc8a 	bl	800562a <rt_get_PSP>
 8002d16:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002d18:	f7ff f9e0 	bl	80020dc <rt_stk_check>
 8002d1c:	682b      	ldr	r3, [r5, #0]
 8002d1e:	6a1c      	ldr	r4, [r3, #32]
 8002d20:	2701      	movs	r7, #1
 8002d22:	b9a4      	cbnz	r4, 8002d4e <rt_tsk_delete+0x56>
 8002d24:	682a      	ldr	r2, [r5, #0]
 8002d26:	4944      	ldr	r1, [pc, #272]	; (8002e38 <rt_tsk_delete+0x140>)
 8002d28:	78d3      	ldrb	r3, [r2, #3]
 8002d2a:	4844      	ldr	r0, [pc, #272]	; (8002e3c <rt_tsk_delete+0x144>)
 8002d2c:	3b01      	subs	r3, #1
 8002d2e:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002d32:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002d34:	f7ff fa16 	bl	8002164 <rt_free_box>
 8002d38:	6829      	ldr	r1, [r5, #0]
 8002d3a:	4841      	ldr	r0, [pc, #260]	; (8002e40 <rt_tsk_delete+0x148>)
 8002d3c:	630c      	str	r4, [r1, #48]	; 0x30
 8002d3e:	f7ff fa11 	bl	8002164 <rt_free_box>
 8002d42:	602c      	str	r4, [r5, #0]
 8002d44:	f7ff fef4 	bl	8002b30 <rt_dispatch.part.0>
 8002d48:	4620      	mov	r0, r4
 8002d4a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002d4e:	6863      	ldr	r3, [r4, #4]
 8002d50:	b1b3      	cbz	r3, 8002d80 <rt_tsk_delete+0x88>
 8002d52:	4620      	mov	r0, r4
 8002d54:	f7fe ff88 	bl	8001c68 <rt_get_first>
 8002d58:	2100      	movs	r1, #0
 8002d5a:	4606      	mov	r6, r0
 8002d5c:	f7ff f924 	bl	8001fa8 <rt_ret_val>
 8002d60:	4630      	mov	r0, r6
 8002d62:	f7ff f827 	bl	8001db4 <rt_rmv_dly>
 8002d66:	7077      	strb	r7, [r6, #1]
 8002d68:	4631      	mov	r1, r6
 8002d6a:	4640      	mov	r0, r8
 8002d6c:	f7fe ff64 	bl	8001c38 <rt_put_prio>
 8002d70:	68e3      	ldr	r3, [r4, #12]
 8002d72:	6a32      	ldr	r2, [r6, #32]
 8002d74:	8067      	strh	r7, [r4, #2]
 8002d76:	60a6      	str	r6, [r4, #8]
 8002d78:	60e2      	str	r2, [r4, #12]
 8002d7a:	6234      	str	r4, [r6, #32]
 8002d7c:	461c      	mov	r4, r3
 8002d7e:	e7d0      	b.n	8002d22 <rt_tsk_delete+0x2a>
 8002d80:	68e2      	ldr	r2, [r4, #12]
 8002d82:	8063      	strh	r3, [r4, #2]
 8002d84:	60a3      	str	r3, [r4, #8]
 8002d86:	60e3      	str	r3, [r4, #12]
 8002d88:	4614      	mov	r4, r2
 8002d8a:	e7ca      	b.n	8002d22 <rt_tsk_delete+0x2a>
 8002d8c:	4b2d      	ldr	r3, [pc, #180]	; (8002e44 <rt_tsk_delete+0x14c>)
 8002d8e:	881b      	ldrh	r3, [r3, #0]
 8002d90:	4298      	cmp	r0, r3
 8002d92:	d84d      	bhi.n	8002e30 <rt_tsk_delete+0x138>
 8002d94:	4b28      	ldr	r3, [pc, #160]	; (8002e38 <rt_tsk_delete+0x140>)
 8002d96:	1e47      	subs	r7, r0, #1
 8002d98:	4699      	mov	r9, r3
 8002d9a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002d9e:	2e00      	cmp	r6, #0
 8002da0:	d046      	beq.n	8002e30 <rt_tsk_delete+0x138>
 8002da2:	4630      	mov	r0, r6
 8002da4:	f7fe ffd8 	bl	8001d58 <rt_rmv_list>
 8002da8:	4630      	mov	r0, r6
 8002daa:	f7ff f803 	bl	8001db4 <rt_rmv_dly>
 8002dae:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002e48 <rt_tsk_delete+0x150>
 8002db2:	6a34      	ldr	r4, [r6, #32]
 8002db4:	f04f 0a01 	mov.w	r10, #1
 8002db8:	b9b4      	cbnz	r4, 8002de8 <rt_tsk_delete+0xf0>
 8002dba:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002dbc:	481f      	ldr	r0, [pc, #124]	; (8002e3c <rt_tsk_delete+0x144>)
 8002dbe:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002dc2:	f7ff f9cf 	bl	8002164 <rt_free_box>
 8002dc6:	4631      	mov	r1, r6
 8002dc8:	6334      	str	r4, [r6, #48]	; 0x30
 8002dca:	481d      	ldr	r0, [pc, #116]	; (8002e40 <rt_tsk_delete+0x148>)
 8002dcc:	f7ff f9ca 	bl	8002164 <rt_free_box>
 8002dd0:	481d      	ldr	r0, [pc, #116]	; (8002e48 <rt_tsk_delete+0x150>)
 8002dd2:	6829      	ldr	r1, [r5, #0]
 8002dd4:	6843      	ldr	r3, [r0, #4]
 8002dd6:	789a      	ldrb	r2, [r3, #2]
 8002dd8:	788b      	ldrb	r3, [r1, #2]
 8002dda:	429a      	cmp	r2, r3
 8002ddc:	d9b4      	bls.n	8002d48 <rt_tsk_delete+0x50>
 8002dde:	2301      	movs	r3, #1
 8002de0:	704b      	strb	r3, [r1, #1]
 8002de2:	f7fe ff29 	bl	8001c38 <rt_put_prio>
 8002de6:	e7ad      	b.n	8002d44 <rt_tsk_delete+0x4c>
 8002de8:	6863      	ldr	r3, [r4, #4]
 8002dea:	b1db      	cbz	r3, 8002e24 <rt_tsk_delete+0x12c>
 8002dec:	4620      	mov	r0, r4
 8002dee:	f7fe ff3b 	bl	8001c68 <rt_get_first>
 8002df2:	2100      	movs	r1, #0
 8002df4:	4680      	mov	r8, r0
 8002df6:	f7ff f8d7 	bl	8001fa8 <rt_ret_val>
 8002dfa:	4640      	mov	r0, r8
 8002dfc:	f7fe ffda 	bl	8001db4 <rt_rmv_dly>
 8002e00:	f888 a001 	strb.w	r10, [r8, #1]
 8002e04:	4641      	mov	r1, r8
 8002e06:	4658      	mov	r0, r11
 8002e08:	f7fe ff16 	bl	8001c38 <rt_put_prio>
 8002e0c:	68e3      	ldr	r3, [r4, #12]
 8002e0e:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002e12:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002e16:	f8c4 8008 	str.w	r8, [r4, #8]
 8002e1a:	60e2      	str	r2, [r4, #12]
 8002e1c:	f8c8 4020 	str.w	r4, [r8, #32]
 8002e20:	461c      	mov	r4, r3
 8002e22:	e7c9      	b.n	8002db8 <rt_tsk_delete+0xc0>
 8002e24:	68e2      	ldr	r2, [r4, #12]
 8002e26:	8063      	strh	r3, [r4, #2]
 8002e28:	60a3      	str	r3, [r4, #8]
 8002e2a:	60e3      	str	r3, [r4, #12]
 8002e2c:	4614      	mov	r4, r2
 8002e2e:	e7c3      	b.n	8002db8 <rt_tsk_delete+0xc0>
 8002e30:	24ff      	movs	r4, #255	; 0xff
 8002e32:	e789      	b.n	8002d48 <rt_tsk_delete+0x50>
 8002e34:	20001f70 	.word	0x20001f70
 8002e38:	20001acc 	.word	0x20001acc
 8002e3c:	20001ae8 	.word	0x20001ae8
 8002e40:	20001d80 	.word	0x20001d80
 8002e44:	08007174 	.word	0x08007174
 8002e48:	20001774 	.word	0x20001774

08002e4c <rt_sys_init>:
 8002e4c:	b538      	push	{r3, r4, r5, lr}
 8002e4e:	4b2c      	ldr	r3, [pc, #176]	; (8002f00 <rt_sys_init+0xb4>)
 8002e50:	492c      	ldr	r1, [pc, #176]	; (8002f04 <rt_sys_init+0xb8>)
 8002e52:	881a      	ldrh	r2, [r3, #0]
 8002e54:	2300      	movs	r3, #0
 8002e56:	4618      	mov	r0, r3
 8002e58:	4293      	cmp	r3, r2
 8002e5a:	d34d      	bcc.n	8002ef8 <rt_sys_init+0xac>
 8002e5c:	4b2a      	ldr	r3, [pc, #168]	; (8002f08 <rt_sys_init+0xbc>)
 8002e5e:	482b      	ldr	r0, [pc, #172]	; (8002f0c <rt_sys_init+0xc0>)
 8002e60:	8819      	ldrh	r1, [r3, #0]
 8002e62:	4c2b      	ldr	r4, [pc, #172]	; (8002f10 <rt_sys_init+0xc4>)
 8002e64:	2240      	movs	r2, #64	; 0x40
 8002e66:	f7ff f94b 	bl	8002100 <_init_box>
 8002e6a:	4b2a      	ldr	r3, [pc, #168]	; (8002f14 <rt_sys_init+0xc8>)
 8002e6c:	482a      	ldr	r0, [pc, #168]	; (8002f18 <rt_sys_init+0xcc>)
 8002e6e:	881a      	ldrh	r2, [r3, #0]
 8002e70:	4b2a      	ldr	r3, [pc, #168]	; (8002f1c <rt_sys_init+0xd0>)
 8002e72:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002e76:	6819      	ldr	r1, [r3, #0]
 8002e78:	f7ff f942 	bl	8002100 <_init_box>
 8002e7c:	4b28      	ldr	r3, [pc, #160]	; (8002f20 <rt_sys_init+0xd4>)
 8002e7e:	8819      	ldrh	r1, [r3, #0]
 8002e80:	4b28      	ldr	r3, [pc, #160]	; (8002f24 <rt_sys_init+0xd8>)
 8002e82:	2208      	movs	r2, #8
 8002e84:	6818      	ldr	r0, [r3, #0]
 8002e86:	f7ff f93b 	bl	8002100 <_init_box>
 8002e8a:	23ff      	movs	r3, #255	; 0xff
 8002e8c:	2500      	movs	r5, #0
 8002e8e:	70e3      	strb	r3, [r4, #3]
 8002e90:	4821      	ldr	r0, [pc, #132]	; (8002f18 <rt_sys_init+0xcc>)
 8002e92:	62a5      	str	r5, [r4, #40]	; 0x28
 8002e94:	2301      	movs	r3, #1
 8002e96:	7063      	strb	r3, [r4, #1]
 8002e98:	7025      	strb	r5, [r4, #0]
 8002e9a:	70a5      	strb	r5, [r4, #2]
 8002e9c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002ea0:	6065      	str	r5, [r4, #4]
 8002ea2:	60a5      	str	r5, [r4, #8]
 8002ea4:	60e5      	str	r5, [r4, #12]
 8002ea6:	6125      	str	r5, [r4, #16]
 8002ea8:	6225      	str	r5, [r4, #32]
 8002eaa:	82a5      	strh	r5, [r4, #20]
 8002eac:	82e5      	strh	r5, [r4, #22]
 8002eae:	8325      	strh	r5, [r4, #24]
 8002eb0:	8365      	strh	r5, [r4, #26]
 8002eb2:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002eb6:	f7ff f948 	bl	800214a <rt_alloc_box>
 8002eba:	491b      	ldr	r1, [pc, #108]	; (8002f28 <rt_sys_init+0xdc>)
 8002ebc:	6320      	str	r0, [r4, #48]	; 0x30
 8002ebe:	4620      	mov	r0, r4
 8002ec0:	f7ff f826 	bl	8001f10 <rt_init_stack>
 8002ec4:	4b19      	ldr	r3, [pc, #100]	; (8002f2c <rt_sys_init+0xe0>)
 8002ec6:	2204      	movs	r2, #4
 8002ec8:	701a      	strb	r2, [r3, #0]
 8002eca:	605d      	str	r5, [r3, #4]
 8002ecc:	4b18      	ldr	r3, [pc, #96]	; (8002f30 <rt_sys_init+0xe4>)
 8002ece:	701a      	strb	r2, [r3, #0]
 8002ed0:	60dd      	str	r5, [r3, #12]
 8002ed2:	611d      	str	r5, [r3, #16]
 8002ed4:	829d      	strh	r5, [r3, #20]
 8002ed6:	4b17      	ldr	r3, [pc, #92]	; (8002f34 <rt_sys_init+0xe8>)
 8002ed8:	4620      	mov	r0, r4
 8002eda:	601c      	str	r4, [r3, #0]
 8002edc:	2302      	movs	r3, #2
 8002ede:	7063      	strb	r3, [r4, #1]
 8002ee0:	f7ff fe16 	bl	8002b10 <rt_switch_req>
 8002ee4:	4a14      	ldr	r2, [pc, #80]	; (8002f38 <rt_sys_init+0xec>)
 8002ee6:	4b15      	ldr	r3, [pc, #84]	; (8002f3c <rt_sys_init+0xf0>)
 8002ee8:	7812      	ldrb	r2, [r2, #0]
 8002eea:	701d      	strb	r5, [r3, #0]
 8002eec:	705d      	strb	r5, [r3, #1]
 8002eee:	70da      	strb	r2, [r3, #3]
 8002ef0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002ef4:	f7ff ba7e 	b.w	80023f4 <rt_init_robin>
 8002ef8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002efc:	3301      	adds	r3, #1
 8002efe:	e7ab      	b.n	8002e58 <rt_sys_init+0xc>
 8002f00:	08007174 	.word	0x08007174
 8002f04:	20001acc 	.word	0x20001acc
 8002f08:	08007140 	.word	0x08007140
 8002f0c:	20001d80 	.word	0x20001d80
 8002f10:	20001f78 	.word	0x20001f78
 8002f14:	08007190 	.word	0x08007190
 8002f18:	20001ae8 	.word	0x20001ae8
 8002f1c:	0800713c 	.word	0x0800713c
 8002f20:	08007142 	.word	0x08007142
 8002f24:	20000a4c 	.word	0x20000a4c
 8002f28:	08001e71 	.word	0x08001e71
 8002f2c:	20001774 	.word	0x20001774
 8002f30:	2000178c 	.word	0x2000178c
 8002f34:	20001f70 	.word	0x20001f70
 8002f38:	08007171 	.word	0x08007171
 8002f3c:	20001cf8 	.word	0x20001cf8

08002f40 <rt_sys_start>:
 8002f40:	b508      	push	{r3, lr}
 8002f42:	4b1e      	ldr	r3, [pc, #120]	; (8002fbc <rt_sys_start+0x7c>)
 8002f44:	681a      	ldr	r2, [r3, #0]
 8002f46:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002f4a:	601a      	str	r2, [r3, #0]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	021b      	lsls	r3, r3, #8
 8002f50:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002f54:	43db      	mvns	r3, r3
 8002f56:	fab3 f383 	clz	r3, r3
 8002f5a:	4a19      	ldr	r2, [pc, #100]	; (8002fc0 <rt_sys_start+0x80>)
 8002f5c:	4819      	ldr	r0, [pc, #100]	; (8002fc4 <rt_sys_start+0x84>)
 8002f5e:	6812      	ldr	r2, [r2, #0]
 8002f60:	6801      	ldr	r1, [r0, #0]
 8002f62:	b2db      	uxtb	r3, r3
 8002f64:	f1c3 0308 	rsb	r3, r3, #8
 8002f68:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002f6c:	4293      	cmp	r3, r2
 8002f6e:	bf98      	it	ls
 8002f70:	1c53      	addls	r3, r2, #1
 8002f72:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002f76:	fa02 f303 	lsl.w	r3, r2, r3
 8002f7a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002f7e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002f82:	4313      	orrs	r3, r2
 8002f84:	6003      	str	r3, [r0, #0]
 8002f86:	f7ff f871 	bl	800206c <os_tick_init>
 8002f8a:	4b0f      	ldr	r3, [pc, #60]	; (8002fc8 <rt_sys_start+0x88>)
 8002f8c:	2800      	cmp	r0, #0
 8002f8e:	6018      	str	r0, [r3, #0]
 8002f90:	db12      	blt.n	8002fb8 <rt_sys_start+0x78>
 8002f92:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002f96:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002f9a:	22ff      	movs	r2, #255	; 0xff
 8002f9c:	7002      	strb	r2, [r0, #0]
 8002f9e:	681a      	ldr	r2, [r3, #0]
 8002fa0:	0953      	lsrs	r3, r2, #5
 8002fa2:	009b      	lsls	r3, r3, #2
 8002fa4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002fa8:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002fac:	f002 021f 	and.w	r2, r2, #31
 8002fb0:	2101      	movs	r1, #1
 8002fb2:	fa01 f202 	lsl.w	r2, r1, r2
 8002fb6:	601a      	str	r2, [r3, #0]
 8002fb8:	bd08      	pop	{r3, pc}
 8002fba:	bf00      	nop
 8002fbc:	e000ed20 	.word	0xe000ed20
 8002fc0:	e000ed0c 	.word	0xe000ed0c
 8002fc4:	e000ed1c 	.word	0xe000ed1c
 8002fc8:	20001f50 	.word	0x20001f50

08002fcc <rt_mut_init>:
 8002fcc:	2303      	movs	r3, #3
 8002fce:	7003      	strb	r3, [r0, #0]
 8002fd0:	2300      	movs	r3, #0
 8002fd2:	8043      	strh	r3, [r0, #2]
 8002fd4:	6043      	str	r3, [r0, #4]
 8002fd6:	6083      	str	r3, [r0, #8]
 8002fd8:	60c3      	str	r3, [r0, #12]
 8002fda:	4770      	bx	lr

08002fdc <rt_mut_delete>:
 8002fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fde:	8843      	ldrh	r3, [r0, #2]
 8002fe0:	4604      	mov	r4, r0
 8002fe2:	b19b      	cbz	r3, 800300c <rt_mut_delete+0x30>
 8002fe4:	6880      	ldr	r0, [r0, #8]
 8002fe6:	6a03      	ldr	r3, [r0, #32]
 8002fe8:	429c      	cmp	r4, r3
 8002fea:	d128      	bne.n	800303e <rt_mut_delete+0x62>
 8002fec:	68e3      	ldr	r3, [r4, #12]
 8002fee:	6203      	str	r3, [r0, #32]
 8002ff0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002ff4:	6a02      	ldr	r2, [r0, #32]
 8002ff6:	bb52      	cbnz	r2, 800304e <rt_mut_delete+0x72>
 8002ff8:	7882      	ldrb	r2, [r0, #2]
 8002ffa:	429a      	cmp	r2, r3
 8002ffc:	d006      	beq.n	800300c <rt_mut_delete+0x30>
 8002ffe:	7083      	strb	r3, [r0, #2]
 8003000:	4b1f      	ldr	r3, [pc, #124]	; (8003080 <rt_mut_delete+0xa4>)
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	4298      	cmp	r0, r3
 8003006:	d001      	beq.n	800300c <rt_mut_delete+0x30>
 8003008:	f7fe febc 	bl	8001d84 <rt_resort_prio>
 800300c:	4f1d      	ldr	r7, [pc, #116]	; (8003084 <rt_mut_delete+0xa8>)
 800300e:	2601      	movs	r6, #1
 8003010:	6865      	ldr	r5, [r4, #4]
 8003012:	bb25      	cbnz	r5, 800305e <rt_mut_delete+0x82>
 8003014:	481b      	ldr	r0, [pc, #108]	; (8003084 <rt_mut_delete+0xa8>)
 8003016:	6843      	ldr	r3, [r0, #4]
 8003018:	b16b      	cbz	r3, 8003036 <rt_mut_delete+0x5a>
 800301a:	4e19      	ldr	r6, [pc, #100]	; (8003080 <rt_mut_delete+0xa4>)
 800301c:	789a      	ldrb	r2, [r3, #2]
 800301e:	6831      	ldr	r1, [r6, #0]
 8003020:	788b      	ldrb	r3, [r1, #2]
 8003022:	429a      	cmp	r2, r3
 8003024:	d907      	bls.n	8003036 <rt_mut_delete+0x5a>
 8003026:	f7fe fe07 	bl	8001c38 <rt_put_prio>
 800302a:	6833      	ldr	r3, [r6, #0]
 800302c:	2201      	movs	r2, #1
 800302e:	705a      	strb	r2, [r3, #1]
 8003030:	4628      	mov	r0, r5
 8003032:	f7ff fd87 	bl	8002b44 <rt_dispatch>
 8003036:	2000      	movs	r0, #0
 8003038:	7020      	strb	r0, [r4, #0]
 800303a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800303c:	4613      	mov	r3, r2
 800303e:	2b00      	cmp	r3, #0
 8003040:	d0d6      	beq.n	8002ff0 <rt_mut_delete+0x14>
 8003042:	68da      	ldr	r2, [r3, #12]
 8003044:	4294      	cmp	r4, r2
 8003046:	d1f9      	bne.n	800303c <rt_mut_delete+0x60>
 8003048:	68e2      	ldr	r2, [r4, #12]
 800304a:	60da      	str	r2, [r3, #12]
 800304c:	e7d0      	b.n	8002ff0 <rt_mut_delete+0x14>
 800304e:	6851      	ldr	r1, [r2, #4]
 8003050:	b119      	cbz	r1, 800305a <rt_mut_delete+0x7e>
 8003052:	7889      	ldrb	r1, [r1, #2]
 8003054:	428b      	cmp	r3, r1
 8003056:	bf38      	it	cc
 8003058:	460b      	movcc	r3, r1
 800305a:	68d2      	ldr	r2, [r2, #12]
 800305c:	e7cb      	b.n	8002ff6 <rt_mut_delete+0x1a>
 800305e:	4620      	mov	r0, r4
 8003060:	f7fe fe02 	bl	8001c68 <rt_get_first>
 8003064:	2100      	movs	r1, #0
 8003066:	4605      	mov	r5, r0
 8003068:	f7fe ff9e 	bl	8001fa8 <rt_ret_val>
 800306c:	4628      	mov	r0, r5
 800306e:	f7fe fea1 	bl	8001db4 <rt_rmv_dly>
 8003072:	706e      	strb	r6, [r5, #1]
 8003074:	4629      	mov	r1, r5
 8003076:	4638      	mov	r0, r7
 8003078:	f7fe fdde 	bl	8001c38 <rt_put_prio>
 800307c:	e7c8      	b.n	8003010 <rt_mut_delete+0x34>
 800307e:	bf00      	nop
 8003080:	20001f70 	.word	0x20001f70
 8003084:	20001774 	.word	0x20001774

08003088 <rt_mut_release>:
 8003088:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800308c:	8843      	ldrh	r3, [r0, #2]
 800308e:	4605      	mov	r5, r0
 8003090:	2b00      	cmp	r3, #0
 8003092:	d063      	beq.n	800315c <rt_mut_release+0xd4>
 8003094:	4f32      	ldr	r7, [pc, #200]	; (8003160 <rt_mut_release+0xd8>)
 8003096:	6881      	ldr	r1, [r0, #8]
 8003098:	683a      	ldr	r2, [r7, #0]
 800309a:	4291      	cmp	r1, r2
 800309c:	d15e      	bne.n	800315c <rt_mut_release+0xd4>
 800309e:	3b01      	subs	r3, #1
 80030a0:	b29b      	uxth	r3, r3
 80030a2:	8043      	strh	r3, [r0, #2]
 80030a4:	b11b      	cbz	r3, 80030ae <rt_mut_release+0x26>
 80030a6:	2400      	movs	r4, #0
 80030a8:	4620      	mov	r0, r4
 80030aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80030ae:	6a0b      	ldr	r3, [r1, #32]
 80030b0:	4298      	cmp	r0, r3
 80030b2:	d129      	bne.n	8003108 <rt_mut_release+0x80>
 80030b4:	68c3      	ldr	r3, [r0, #12]
 80030b6:	620b      	str	r3, [r1, #32]
 80030b8:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80030bc:	6a0c      	ldr	r4, [r1, #32]
 80030be:	bb5c      	cbnz	r4, 8003118 <rt_mut_release+0x90>
 80030c0:	708b      	strb	r3, [r1, #2]
 80030c2:	686a      	ldr	r2, [r5, #4]
 80030c4:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003164 <rt_mut_release+0xdc>
 80030c8:	2a00      	cmp	r2, #0
 80030ca:	d03b      	beq.n	8003144 <rt_mut_release+0xbc>
 80030cc:	4628      	mov	r0, r5
 80030ce:	f7fe fdcb 	bl	8001c68 <rt_get_first>
 80030d2:	4621      	mov	r1, r4
 80030d4:	4606      	mov	r6, r0
 80030d6:	f7fe ff67 	bl	8001fa8 <rt_ret_val>
 80030da:	4630      	mov	r0, r6
 80030dc:	f7fe fe6a 	bl	8001db4 <rt_rmv_dly>
 80030e0:	6a33      	ldr	r3, [r6, #32]
 80030e2:	60eb      	str	r3, [r5, #12]
 80030e4:	f04f 0901 	mov.w	r9, #1
 80030e8:	6839      	ldr	r1, [r7, #0]
 80030ea:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80030ee:	f8a5 9002 	strh.w	r9, [r5, #2]
 80030f2:	60ae      	str	r6, [r5, #8]
 80030f4:	6235      	str	r5, [r6, #32]
 80030f6:	788a      	ldrb	r2, [r1, #2]
 80030f8:	789b      	ldrb	r3, [r3, #2]
 80030fa:	429a      	cmp	r2, r3
 80030fc:	d314      	bcc.n	8003128 <rt_mut_release+0xa0>
 80030fe:	4630      	mov	r0, r6
 8003100:	f7ff fd20 	bl	8002b44 <rt_dispatch>
 8003104:	e7d0      	b.n	80030a8 <rt_mut_release+0x20>
 8003106:	4613      	mov	r3, r2
 8003108:	2b00      	cmp	r3, #0
 800310a:	d0d5      	beq.n	80030b8 <rt_mut_release+0x30>
 800310c:	68da      	ldr	r2, [r3, #12]
 800310e:	4295      	cmp	r5, r2
 8003110:	d1f9      	bne.n	8003106 <rt_mut_release+0x7e>
 8003112:	68ea      	ldr	r2, [r5, #12]
 8003114:	60da      	str	r2, [r3, #12]
 8003116:	e7cf      	b.n	80030b8 <rt_mut_release+0x30>
 8003118:	6862      	ldr	r2, [r4, #4]
 800311a:	b11a      	cbz	r2, 8003124 <rt_mut_release+0x9c>
 800311c:	7892      	ldrb	r2, [r2, #2]
 800311e:	4293      	cmp	r3, r2
 8003120:	bf38      	it	cc
 8003122:	4613      	movcc	r3, r2
 8003124:	68e4      	ldr	r4, [r4, #12]
 8003126:	e7ca      	b.n	80030be <rt_mut_release+0x36>
 8003128:	4640      	mov	r0, r8
 800312a:	f7fe fd85 	bl	8001c38 <rt_put_prio>
 800312e:	4631      	mov	r1, r6
 8003130:	4640      	mov	r0, r8
 8003132:	f7fe fd81 	bl	8001c38 <rt_put_prio>
 8003136:	683b      	ldr	r3, [r7, #0]
 8003138:	f883 9001 	strb.w	r9, [r3, #1]
 800313c:	f886 9001 	strb.w	r9, [r6, #1]
 8003140:	4620      	mov	r0, r4
 8003142:	e7dd      	b.n	8003100 <rt_mut_release+0x78>
 8003144:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003148:	7892      	ldrb	r2, [r2, #2]
 800314a:	429a      	cmp	r2, r3
 800314c:	d9ab      	bls.n	80030a6 <rt_mut_release+0x1e>
 800314e:	4640      	mov	r0, r8
 8003150:	f7fe fd72 	bl	8001c38 <rt_put_prio>
 8003154:	683b      	ldr	r3, [r7, #0]
 8003156:	2201      	movs	r2, #1
 8003158:	705a      	strb	r2, [r3, #1]
 800315a:	e7f1      	b.n	8003140 <rt_mut_release+0xb8>
 800315c:	24ff      	movs	r4, #255	; 0xff
 800315e:	e7a3      	b.n	80030a8 <rt_mut_release+0x20>
 8003160:	20001f70 	.word	0x20001f70
 8003164:	20001774 	.word	0x20001774

08003168 <rt_mut_wait>:
 8003168:	8843      	ldrh	r3, [r0, #2]
 800316a:	b570      	push	{r4, r5, r6, lr}
 800316c:	4604      	mov	r4, r0
 800316e:	460e      	mov	r6, r1
 8003170:	4d13      	ldr	r5, [pc, #76]	; (80031c0 <rt_mut_wait+0x58>)
 8003172:	b943      	cbnz	r3, 8003186 <rt_mut_wait+0x1e>
 8003174:	682a      	ldr	r2, [r5, #0]
 8003176:	6082      	str	r2, [r0, #8]
 8003178:	6a11      	ldr	r1, [r2, #32]
 800317a:	60c1      	str	r1, [r0, #12]
 800317c:	6210      	str	r0, [r2, #32]
 800317e:	3301      	adds	r3, #1
 8003180:	8063      	strh	r3, [r4, #2]
 8003182:	2000      	movs	r0, #0
 8003184:	bd70      	pop	{r4, r5, r6, pc}
 8003186:	6880      	ldr	r0, [r0, #8]
 8003188:	682a      	ldr	r2, [r5, #0]
 800318a:	4290      	cmp	r0, r2
 800318c:	d0f7      	beq.n	800317e <rt_mut_wait+0x16>
 800318e:	b181      	cbz	r1, 80031b2 <rt_mut_wait+0x4a>
 8003190:	7893      	ldrb	r3, [r2, #2]
 8003192:	7882      	ldrb	r2, [r0, #2]
 8003194:	429a      	cmp	r2, r3
 8003196:	d202      	bcs.n	800319e <rt_mut_wait+0x36>
 8003198:	7083      	strb	r3, [r0, #2]
 800319a:	f7fe fdf3 	bl	8001d84 <rt_resort_prio>
 800319e:	6862      	ldr	r2, [r4, #4]
 80031a0:	b14a      	cbz	r2, 80031b6 <rt_mut_wait+0x4e>
 80031a2:	6829      	ldr	r1, [r5, #0]
 80031a4:	4620      	mov	r0, r4
 80031a6:	f7fe fd47 	bl	8001c38 <rt_put_prio>
 80031aa:	2109      	movs	r1, #9
 80031ac:	4630      	mov	r0, r6
 80031ae:	f7ff fced 	bl	8002b8c <rt_block>
 80031b2:	2001      	movs	r0, #1
 80031b4:	bd70      	pop	{r4, r5, r6, pc}
 80031b6:	682b      	ldr	r3, [r5, #0]
 80031b8:	6063      	str	r3, [r4, #4]
 80031ba:	605a      	str	r2, [r3, #4]
 80031bc:	609c      	str	r4, [r3, #8]
 80031be:	e7f4      	b.n	80031aa <rt_mut_wait+0x42>
 80031c0:	20001f70 	.word	0x20001f70

080031c4 <rt_dly_wait>:
 80031c4:	2103      	movs	r1, #3
 80031c6:	f7ff bce1 	b.w	8002b8c <rt_block>
	...

080031cc <rt_sem_psh>:
 80031cc:	6842      	ldr	r2, [r0, #4]
 80031ce:	b510      	push	{r4, lr}
 80031d0:	b17a      	cbz	r2, 80031f2 <rt_sem_psh+0x26>
 80031d2:	f7fe fd49 	bl	8001c68 <rt_get_first>
 80031d6:	4604      	mov	r4, r0
 80031d8:	f7fe fdec 	bl	8001db4 <rt_rmv_dly>
 80031dc:	2101      	movs	r1, #1
 80031de:	7061      	strb	r1, [r4, #1]
 80031e0:	4620      	mov	r0, r4
 80031e2:	f7fe fee1 	bl	8001fa8 <rt_ret_val>
 80031e6:	4621      	mov	r1, r4
 80031e8:	4804      	ldr	r0, [pc, #16]	; (80031fc <rt_sem_psh+0x30>)
 80031ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80031ee:	f7fe bd23 	b.w	8001c38 <rt_put_prio>
 80031f2:	8842      	ldrh	r2, [r0, #2]
 80031f4:	3201      	adds	r2, #1
 80031f6:	8042      	strh	r2, [r0, #2]
 80031f8:	bd10      	pop	{r4, pc}
 80031fa:	bf00      	nop
 80031fc:	20001774 	.word	0x20001774

08003200 <timer_irq_handler>:
 8003200:	b570      	push	{r4, r5, r6, lr}
 8003202:	4c13      	ldr	r4, [pc, #76]	; (8003250 <timer_irq_handler+0x50>)
 8003204:	6823      	ldr	r3, [r4, #0]
 8003206:	691a      	ldr	r2, [r3, #16]
 8003208:	0795      	lsls	r5, r2, #30
 800320a:	d507      	bpl.n	800321c <timer_irq_handler+0x1c>
 800320c:	68da      	ldr	r2, [r3, #12]
 800320e:	0790      	lsls	r0, r2, #30
 8003210:	d504      	bpl.n	800321c <timer_irq_handler+0x1c>
 8003212:	f06f 0202 	mvn.w	r2, #2
 8003216:	611a      	str	r2, [r3, #16]
 8003218:	f7fe fc4c 	bl	8001ab4 <us_ticker_irq_handler>
 800321c:	6823      	ldr	r3, [r4, #0]
 800321e:	691a      	ldr	r2, [r3, #16]
 8003220:	0751      	lsls	r1, r2, #29
 8003222:	d513      	bpl.n	800324c <timer_irq_handler+0x4c>
 8003224:	68da      	ldr	r2, [r3, #12]
 8003226:	0752      	lsls	r2, r2, #29
 8003228:	d510      	bpl.n	800324c <timer_irq_handler+0x4c>
 800322a:	f06f 0204 	mvn.w	r2, #4
 800322e:	4e09      	ldr	r6, [pc, #36]	; (8003254 <timer_irq_handler+0x54>)
 8003230:	611a      	str	r2, [r3, #16]
 8003232:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003234:	6833      	ldr	r3, [r6, #0]
 8003236:	1aeb      	subs	r3, r5, r3
 8003238:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800323c:	d306      	bcc.n	800324c <timer_irq_handler+0x4c>
 800323e:	f000 fffb 	bl	8004238 <HAL_IncTick>
 8003242:	6823      	ldr	r3, [r4, #0]
 8003244:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8003248:	639a      	str	r2, [r3, #56]	; 0x38
 800324a:	6035      	str	r5, [r6, #0]
 800324c:	bd70      	pop	{r4, r5, r6, pc}
 800324e:	bf00      	nop
 8003250:	20001fbc 	.word	0x20001fbc
 8003254:	200012c0 	.word	0x200012c0

08003258 <HAL_InitTick>:
 8003258:	b530      	push	{r4, r5, lr}
 800325a:	b089      	sub	sp, #36	; 0x24
 800325c:	a901      	add	r1, sp, #4
 800325e:	a803      	add	r0, sp, #12
 8003260:	f001 fe16 	bl	8004e90 <HAL_RCC_GetClockConfig>
 8003264:	f001 fde4 	bl	8004e30 <HAL_RCC_GetPCLK1Freq>
 8003268:	4b24      	ldr	r3, [pc, #144]	; (80032fc <HAL_InitTick+0xa4>)
 800326a:	9001      	str	r0, [sp, #4]
 800326c:	69da      	ldr	r2, [r3, #28]
 800326e:	4c24      	ldr	r4, [pc, #144]	; (8003300 <HAL_InitTick+0xa8>)
 8003270:	f042 0201 	orr.w	r2, r2, #1
 8003274:	61da      	str	r2, [r3, #28]
 8003276:	69da      	ldr	r2, [r3, #28]
 8003278:	f002 0201 	and.w	r2, r2, #1
 800327c:	9202      	str	r2, [sp, #8]
 800327e:	9a02      	ldr	r2, [sp, #8]
 8003280:	691a      	ldr	r2, [r3, #16]
 8003282:	f042 0201 	orr.w	r2, r2, #1
 8003286:	611a      	str	r2, [r3, #16]
 8003288:	691a      	ldr	r2, [r3, #16]
 800328a:	f022 0201 	bic.w	r2, r2, #1
 800328e:	611a      	str	r2, [r3, #16]
 8003290:	9a06      	ldr	r2, [sp, #24]
 8003292:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003296:	6023      	str	r3, [r4, #0]
 8003298:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800329c:	60e3      	str	r3, [r4, #12]
 800329e:	4b19      	ldr	r3, [pc, #100]	; (8003304 <HAL_InitTick+0xac>)
 80032a0:	bb4a      	cbnz	r2, 80032f6 <HAL_InitTick+0x9e>
 80032a2:	fbb0 f0f3 	udiv	r0, r0, r3
 80032a6:	3801      	subs	r0, #1
 80032a8:	2500      	movs	r5, #0
 80032aa:	6060      	str	r0, [r4, #4]
 80032ac:	4814      	ldr	r0, [pc, #80]	; (8003300 <HAL_InitTick+0xa8>)
 80032ae:	6125      	str	r5, [r4, #16]
 80032b0:	60a5      	str	r5, [r4, #8]
 80032b2:	6165      	str	r5, [r4, #20]
 80032b4:	f000 ff62 	bl	800417c <HAL_TIM_OC_Init>
 80032b8:	4913      	ldr	r1, [pc, #76]	; (8003308 <HAL_InitTick+0xb0>)
 80032ba:	201c      	movs	r0, #28
 80032bc:	f000 fee2 	bl	8004084 <__NVIC_SetVector>
 80032c0:	4b12      	ldr	r3, [pc, #72]	; (800330c <HAL_InitTick+0xb4>)
 80032c2:	480f      	ldr	r0, [pc, #60]	; (8003300 <HAL_InitTick+0xa8>)
 80032c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80032c8:	601a      	str	r2, [r3, #0]
 80032ca:	4629      	mov	r1, r5
 80032cc:	f000 ff9e 	bl	800420c <HAL_TIM_OC_Start>
 80032d0:	2104      	movs	r1, #4
 80032d2:	480b      	ldr	r0, [pc, #44]	; (8003300 <HAL_InitTick+0xa8>)
 80032d4:	f000 ff9a 	bl	800420c <HAL_TIM_OC_Start>
 80032d8:	6823      	ldr	r3, [r4, #0]
 80032da:	4a0d      	ldr	r2, [pc, #52]	; (8003310 <HAL_InitTick+0xb8>)
 80032dc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80032de:	6011      	str	r1, [r2, #0]
 80032e0:	6812      	ldr	r2, [r2, #0]
 80032e2:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80032e6:	639a      	str	r2, [r3, #56]	; 0x38
 80032e8:	68da      	ldr	r2, [r3, #12]
 80032ea:	4628      	mov	r0, r5
 80032ec:	f042 0204 	orr.w	r2, r2, #4
 80032f0:	60da      	str	r2, [r3, #12]
 80032f2:	b009      	add	sp, #36	; 0x24
 80032f4:	bd30      	pop	{r4, r5, pc}
 80032f6:	0040      	lsls	r0, r0, #1
 80032f8:	e7d3      	b.n	80032a2 <HAL_InitTick+0x4a>
 80032fa:	bf00      	nop
 80032fc:	40021000 	.word	0x40021000
 8003300:	20001fbc 	.word	0x20001fbc
 8003304:	000f4240 	.word	0x000f4240
 8003308:	08003201 	.word	0x08003201
 800330c:	e000e100 	.word	0xe000e100
 8003310:	200012c0 	.word	0x200012c0

08003314 <HAL_SuspendTick>:
 8003314:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003318:	4a03      	ldr	r2, [pc, #12]	; (8003328 <HAL_SuspendTick+0x14>)
 800331a:	6013      	str	r3, [r2, #0]
 800331c:	68da      	ldr	r2, [r3, #12]
 800331e:	f022 0204 	bic.w	r2, r2, #4
 8003322:	60da      	str	r2, [r3, #12]
 8003324:	4770      	bx	lr
 8003326:	bf00      	nop
 8003328:	20001fbc 	.word	0x20001fbc

0800332c <HAL_ResumeTick>:
 800332c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003330:	4a03      	ldr	r2, [pc, #12]	; (8003340 <HAL_ResumeTick+0x14>)
 8003332:	6013      	str	r3, [r2, #0]
 8003334:	68da      	ldr	r2, [r3, #12]
 8003336:	f042 0204 	orr.w	r2, r2, #4
 800333a:	60da      	str	r2, [r3, #12]
 800333c:	4770      	bx	lr
 800333e:	bf00      	nop
 8003340:	20001fbc 	.word	0x20001fbc

08003344 <Set_GPIO_Clock>:
 8003344:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003346:	2805      	cmp	r0, #5
 8003348:	d843      	bhi.n	80033d2 <Set_GPIO_Clock+0x8e>
 800334a:	e8df f000 	tbb	[pc, r0]
 800334e:	1203      	.short	0x1203
 8003350:	36422a1e 	.word	0x36422a1e
 8003354:	4b21      	ldr	r3, [pc, #132]	; (80033dc <Set_GPIO_Clock+0x98>)
 8003356:	695a      	ldr	r2, [r3, #20]
 8003358:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800335c:	615a      	str	r2, [r3, #20]
 800335e:	695b      	ldr	r3, [r3, #20]
 8003360:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003364:	9301      	str	r3, [sp, #4]
 8003366:	9b01      	ldr	r3, [sp, #4]
 8003368:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800336c:	b007      	add	sp, #28
 800336e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003372:	4b1a      	ldr	r3, [pc, #104]	; (80033dc <Set_GPIO_Clock+0x98>)
 8003374:	481a      	ldr	r0, [pc, #104]	; (80033e0 <Set_GPIO_Clock+0x9c>)
 8003376:	695a      	ldr	r2, [r3, #20]
 8003378:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800337c:	615a      	str	r2, [r3, #20]
 800337e:	695b      	ldr	r3, [r3, #20]
 8003380:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003384:	9302      	str	r3, [sp, #8]
 8003386:	9b02      	ldr	r3, [sp, #8]
 8003388:	e7f0      	b.n	800336c <Set_GPIO_Clock+0x28>
 800338a:	4b14      	ldr	r3, [pc, #80]	; (80033dc <Set_GPIO_Clock+0x98>)
 800338c:	4815      	ldr	r0, [pc, #84]	; (80033e4 <Set_GPIO_Clock+0xa0>)
 800338e:	695a      	ldr	r2, [r3, #20]
 8003390:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003394:	615a      	str	r2, [r3, #20]
 8003396:	695b      	ldr	r3, [r3, #20]
 8003398:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800339c:	9303      	str	r3, [sp, #12]
 800339e:	9b03      	ldr	r3, [sp, #12]
 80033a0:	e7e4      	b.n	800336c <Set_GPIO_Clock+0x28>
 80033a2:	4b0e      	ldr	r3, [pc, #56]	; (80033dc <Set_GPIO_Clock+0x98>)
 80033a4:	4810      	ldr	r0, [pc, #64]	; (80033e8 <Set_GPIO_Clock+0xa4>)
 80033a6:	695a      	ldr	r2, [r3, #20]
 80033a8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80033ac:	615a      	str	r2, [r3, #20]
 80033ae:	695b      	ldr	r3, [r3, #20]
 80033b0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80033b4:	9304      	str	r3, [sp, #16]
 80033b6:	9b04      	ldr	r3, [sp, #16]
 80033b8:	e7d8      	b.n	800336c <Set_GPIO_Clock+0x28>
 80033ba:	4b08      	ldr	r3, [pc, #32]	; (80033dc <Set_GPIO_Clock+0x98>)
 80033bc:	480b      	ldr	r0, [pc, #44]	; (80033ec <Set_GPIO_Clock+0xa8>)
 80033be:	695a      	ldr	r2, [r3, #20]
 80033c0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80033c4:	615a      	str	r2, [r3, #20]
 80033c6:	695b      	ldr	r3, [r3, #20]
 80033c8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80033cc:	9305      	str	r3, [sp, #20]
 80033ce:	9b05      	ldr	r3, [sp, #20]
 80033d0:	e7cc      	b.n	800336c <Set_GPIO_Clock+0x28>
 80033d2:	4807      	ldr	r0, [pc, #28]	; (80033f0 <Set_GPIO_Clock+0xac>)
 80033d4:	f7fe fc20 	bl	8001c18 <error>
 80033d8:	2000      	movs	r0, #0
 80033da:	e7c7      	b.n	800336c <Set_GPIO_Clock+0x28>
 80033dc:	40021000 	.word	0x40021000
 80033e0:	48000400 	.word	0x48000400
 80033e4:	48000800 	.word	0x48000800
 80033e8:	48000c00 	.word	0x48000c00
 80033ec:	48001400 	.word	0x48001400
 80033f0:	080071b0 	.word	0x080071b0

080033f4 <gpio_set>:
 80033f4:	b510      	push	{r4, lr}
 80033f6:	2100      	movs	r1, #0
 80033f8:	4604      	mov	r4, r0
 80033fa:	f004 040f 	and.w	r4, r4, #15
 80033fe:	f000 faf5 	bl	80039ec <pin_function>
 8003402:	2001      	movs	r0, #1
 8003404:	40a0      	lsls	r0, r4
 8003406:	bd10      	pop	{r4, pc}

08003408 <gpio_init>:
 8003408:	b570      	push	{r4, r5, r6, lr}
 800340a:	4604      	mov	r4, r0
 800340c:	1c4b      	adds	r3, r1, #1
 800340e:	460e      	mov	r6, r1
 8003410:	8221      	strh	r1, [r4, #16]
 8003412:	d018      	beq.n	8003446 <gpio_init+0x3e>
 8003414:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003418:	f7ff ff94 	bl	8003344 <Set_GPIO_Clock>
 800341c:	4605      	mov	r5, r0
 800341e:	4630      	mov	r0, r6
 8003420:	f7ff ffe8 	bl	80033f4 <gpio_set>
 8003424:	8a23      	ldrh	r3, [r4, #16]
 8003426:	4a08      	ldr	r2, [pc, #32]	; (8003448 <gpio_init+0x40>)
 8003428:	6165      	str	r5, [r4, #20]
 800342a:	f003 030f 	and.w	r3, r3, #15
 800342e:	6020      	str	r0, [r4, #0]
 8003430:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003434:	61a3      	str	r3, [r4, #24]
 8003436:	f105 0310 	add.w	r3, r5, #16
 800343a:	6063      	str	r3, [r4, #4]
 800343c:	f105 0318 	add.w	r3, r5, #24
 8003440:	3528      	adds	r5, #40	; 0x28
 8003442:	60a3      	str	r3, [r4, #8]
 8003444:	60e5      	str	r5, [r4, #12]
 8003446:	bd70      	pop	{r4, r5, r6, pc}
 8003448:	080072a0 	.word	0x080072a0

0800344c <gpio_mode>:
 800344c:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003450:	f000 bb4e 	b.w	8003af0 <pin_mode>

08003454 <gpio_dir>:
 8003454:	b510      	push	{r4, lr}
 8003456:	6983      	ldr	r3, [r0, #24]
 8003458:	6944      	ldr	r4, [r0, #20]
 800345a:	b971      	cbnz	r1, 800347a <gpio_dir+0x26>
 800345c:	6821      	ldr	r1, [r4, #0]
 800345e:	fa93 f2a3 	rbit	r2, r3
 8003462:	fab2 f282 	clz	r2, r2
 8003466:	2003      	movs	r0, #3
 8003468:	0052      	lsls	r2, r2, #1
 800346a:	fa00 f202 	lsl.w	r2, r0, r2
 800346e:	ea21 0202 	bic.w	r2, r1, r2
 8003472:	fa93 f3a3 	rbit	r3, r3
 8003476:	6022      	str	r2, [r4, #0]
 8003478:	bd10      	pop	{r4, pc}
 800347a:	6822      	ldr	r2, [r4, #0]
 800347c:	fa93 f1a3 	rbit	r1, r3
 8003480:	fab1 f181 	clz	r1, r1
 8003484:	fa93 f3a3 	rbit	r3, r3
 8003488:	2003      	movs	r0, #3
 800348a:	0049      	lsls	r1, r1, #1
 800348c:	fa00 f101 	lsl.w	r1, r0, r1
 8003490:	fab3 f383 	clz	r3, r3
 8003494:	ea22 0201 	bic.w	r2, r2, r1
 8003498:	005b      	lsls	r3, r3, #1
 800349a:	2101      	movs	r1, #1
 800349c:	fa01 f303 	lsl.w	r3, r1, r3
 80034a0:	4313      	orrs	r3, r2
 80034a2:	6023      	str	r3, [r4, #0]
 80034a4:	bd10      	pop	{r4, pc}

080034a6 <hal_sleep>:
 80034a6:	b508      	push	{r3, lr}
 80034a8:	f7ff ff34 	bl	8003314 <HAL_SuspendTick>
 80034ac:	2101      	movs	r1, #1
 80034ae:	2000      	movs	r0, #0
 80034b0:	f000 fe08 	bl	80040c4 <HAL_PWR_EnterSLEEPMode>
 80034b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80034b8:	f7ff bf38 	b.w	800332c <HAL_ResumeTick>

080034bc <CAN_SCE_IRQHandler>:
 80034bc:	4b38      	ldr	r3, [pc, #224]	; (80035a0 <CAN_SCE_IRQHandler+0xe4>)
 80034be:	695a      	ldr	r2, [r3, #20]
 80034c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034c4:	4c37      	ldr	r4, [pc, #220]	; (80035a4 <CAN_SCE_IRQHandler+0xe8>)
 80034c6:	07d2      	lsls	r2, r2, #31
 80034c8:	6023      	str	r3, [r4, #0]
 80034ca:	d52a      	bpl.n	8003522 <CAN_SCE_IRQHandler+0x66>
 80034cc:	6898      	ldr	r0, [r3, #8]
 80034ce:	4f36      	ldr	r7, [pc, #216]	; (80035a8 <CAN_SCE_IRQHandler+0xec>)
 80034d0:	6899      	ldr	r1, [r3, #8]
 80034d2:	4e36      	ldr	r6, [pc, #216]	; (80035ac <CAN_SCE_IRQHandler+0xf0>)
 80034d4:	689a      	ldr	r2, [r3, #8]
 80034d6:	4d36      	ldr	r5, [pc, #216]	; (80035b0 <CAN_SCE_IRQHandler+0xf4>)
 80034d8:	4038      	ands	r0, r7
 80034da:	42b8      	cmp	r0, r7
 80034dc:	ea01 0106 	and.w	r1, r1, r6
 80034e0:	bf04      	itt	eq
 80034e2:	2701      	moveq	r7, #1
 80034e4:	609f      	streq	r7, [r3, #8]
 80034e6:	42b1      	cmp	r1, r6
 80034e8:	bf08      	it	eq
 80034ea:	4b2d      	ldreq	r3, [pc, #180]	; (80035a0 <CAN_SCE_IRQHandler+0xe4>)
 80034ec:	ea02 0205 	and.w	r2, r2, r5
 80034f0:	bf04      	itt	eq
 80034f2:	f44f 7680 	moveq.w	r6, #256	; 0x100
 80034f6:	609e      	streq	r6, [r3, #8]
 80034f8:	42aa      	cmp	r2, r5
 80034fa:	bf02      	ittt	eq
 80034fc:	4b28      	ldreq	r3, [pc, #160]	; (80035a0 <CAN_SCE_IRQHandler+0xe4>)
 80034fe:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 8003502:	609d      	streq	r5, [r3, #8]
 8003504:	4b28      	ldr	r3, [pc, #160]	; (80035a8 <CAN_SCE_IRQHandler+0xec>)
 8003506:	4298      	cmp	r0, r3
 8003508:	d005      	beq.n	8003516 <CAN_SCE_IRQHandler+0x5a>
 800350a:	4b28      	ldr	r3, [pc, #160]	; (80035ac <CAN_SCE_IRQHandler+0xf0>)
 800350c:	4299      	cmp	r1, r3
 800350e:	d002      	beq.n	8003516 <CAN_SCE_IRQHandler+0x5a>
 8003510:	4b27      	ldr	r3, [pc, #156]	; (80035b0 <CAN_SCE_IRQHandler+0xf4>)
 8003512:	429a      	cmp	r2, r3
 8003514:	d105      	bne.n	8003522 <CAN_SCE_IRQHandler+0x66>
 8003516:	4b27      	ldr	r3, [pc, #156]	; (80035b4 <CAN_SCE_IRQHandler+0xf8>)
 8003518:	4a27      	ldr	r2, [pc, #156]	; (80035b8 <CAN_SCE_IRQHandler+0xfc>)
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	6810      	ldr	r0, [r2, #0]
 800351e:	2101      	movs	r1, #1
 8003520:	4798      	blx	r3
 8003522:	6823      	ldr	r3, [r4, #0]
 8003524:	68da      	ldr	r2, [r3, #12]
 8003526:	695b      	ldr	r3, [r3, #20]
 8003528:	0797      	lsls	r7, r2, #30
 800352a:	d007      	beq.n	800353c <CAN_SCE_IRQHandler+0x80>
 800352c:	079e      	lsls	r6, r3, #30
 800352e:	d505      	bpl.n	800353c <CAN_SCE_IRQHandler+0x80>
 8003530:	4b20      	ldr	r3, [pc, #128]	; (80035b4 <CAN_SCE_IRQHandler+0xf8>)
 8003532:	4a21      	ldr	r2, [pc, #132]	; (80035b8 <CAN_SCE_IRQHandler+0xfc>)
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	6810      	ldr	r0, [r2, #0]
 8003538:	2100      	movs	r1, #0
 800353a:	4798      	blx	r3
 800353c:	6823      	ldr	r3, [r4, #0]
 800353e:	6999      	ldr	r1, [r3, #24]
 8003540:	695a      	ldr	r2, [r3, #20]
 8003542:	695b      	ldr	r3, [r3, #20]
 8003544:	078d      	lsls	r5, r1, #30
 8003546:	d509      	bpl.n	800355c <CAN_SCE_IRQHandler+0xa0>
 8003548:	0590      	lsls	r0, r2, #22
 800354a:	d507      	bpl.n	800355c <CAN_SCE_IRQHandler+0xa0>
 800354c:	0419      	lsls	r1, r3, #16
 800354e:	d505      	bpl.n	800355c <CAN_SCE_IRQHandler+0xa0>
 8003550:	4b18      	ldr	r3, [pc, #96]	; (80035b4 <CAN_SCE_IRQHandler+0xf8>)
 8003552:	4a19      	ldr	r2, [pc, #100]	; (80035b8 <CAN_SCE_IRQHandler+0xfc>)
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	6810      	ldr	r0, [r2, #0]
 8003558:	2105      	movs	r1, #5
 800355a:	4798      	blx	r3
 800355c:	6822      	ldr	r2, [r4, #0]
 800355e:	6996      	ldr	r6, [r2, #24]
 8003560:	6955      	ldr	r5, [r2, #20]
 8003562:	6952      	ldr	r2, [r2, #20]
 8003564:	f016 0604 	ands.w	r6, r6, #4
 8003568:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 800356c:	d008      	beq.n	8003580 <CAN_SCE_IRQHandler+0xc4>
 800356e:	b13d      	cbz	r5, 8003580 <CAN_SCE_IRQHandler+0xc4>
 8003570:	0412      	lsls	r2, r2, #16
 8003572:	d505      	bpl.n	8003580 <CAN_SCE_IRQHandler+0xc4>
 8003574:	4b0f      	ldr	r3, [pc, #60]	; (80035b4 <CAN_SCE_IRQHandler+0xf8>)
 8003576:	4a10      	ldr	r2, [pc, #64]	; (80035b8 <CAN_SCE_IRQHandler+0xfc>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	6810      	ldr	r0, [r2, #0]
 800357c:	2107      	movs	r1, #7
 800357e:	4798      	blx	r3
 8003580:	6823      	ldr	r3, [r4, #0]
 8003582:	695b      	ldr	r3, [r3, #20]
 8003584:	b156      	cbz	r6, 800359c <CAN_SCE_IRQHandler+0xe0>
 8003586:	b14d      	cbz	r5, 800359c <CAN_SCE_IRQHandler+0xe0>
 8003588:	041b      	lsls	r3, r3, #16
 800358a:	d507      	bpl.n	800359c <CAN_SCE_IRQHandler+0xe0>
 800358c:	4b09      	ldr	r3, [pc, #36]	; (80035b4 <CAN_SCE_IRQHandler+0xf8>)
 800358e:	4a0a      	ldr	r2, [pc, #40]	; (80035b8 <CAN_SCE_IRQHandler+0xfc>)
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	6810      	ldr	r0, [r2, #0]
 8003594:	2102      	movs	r1, #2
 8003596:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800359a:	4718      	bx	r3
 800359c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80035a0:	40006400 	.word	0x40006400
 80035a4:	200012c4 	.word	0x200012c4
 80035a8:	04000003 	.word	0x04000003
 80035ac:	08000300 	.word	0x08000300
 80035b0:	10030000 	.word	0x10030000
 80035b4:	20001308 	.word	0x20001308
 80035b8:	20001304 	.word	0x20001304

080035bc <CAN_TX_IRQHandler>:
 80035bc:	f7ff bf7e 	b.w	80034bc <CAN_SCE_IRQHandler>

080035c0 <CAN_RX0_IRQHandler>:
 80035c0:	f7ff bf7c 	b.w	80034bc <CAN_SCE_IRQHandler>

080035c4 <can_irq_init>:
 80035c4:	4b03      	ldr	r3, [pc, #12]	; (80035d4 <can_irq_init+0x10>)
 80035c6:	6019      	str	r1, [r3, #0]
 80035c8:	6841      	ldr	r1, [r0, #4]
 80035ca:	4b03      	ldr	r3, [pc, #12]	; (80035d8 <can_irq_init+0x14>)
 80035cc:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80035d0:	4770      	bx	lr
 80035d2:	bf00      	nop
 80035d4:	20001308 	.word	0x20001308
 80035d8:	20001304 	.word	0x20001304

080035dc <can_irq_free>:
 80035dc:	6802      	ldr	r2, [r0, #0]
 80035de:	6953      	ldr	r3, [r2, #20]
 80035e0:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 80035e4:	f023 0313 	bic.w	r3, r3, #19
 80035e8:	6153      	str	r3, [r2, #20]
 80035ea:	4b02      	ldr	r3, [pc, #8]	; (80035f4 <can_irq_free+0x18>)
 80035ec:	2100      	movs	r1, #0
 80035ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80035f2:	4770      	bx	lr
 80035f4:	20001304 	.word	0x20001304

080035f8 <can_free>:
 80035f8:	6802      	ldr	r2, [r0, #0]
 80035fa:	4b09      	ldr	r3, [pc, #36]	; (8003620 <can_free+0x28>)
 80035fc:	429a      	cmp	r2, r3
 80035fe:	d10d      	bne.n	800361c <can_free+0x24>
 8003600:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 8003604:	691a      	ldr	r2, [r3, #16]
 8003606:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 800360a:	611a      	str	r2, [r3, #16]
 800360c:	691a      	ldr	r2, [r3, #16]
 800360e:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8003612:	611a      	str	r2, [r3, #16]
 8003614:	69da      	ldr	r2, [r3, #28]
 8003616:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800361a:	61da      	str	r2, [r3, #28]
 800361c:	4770      	bx	lr
 800361e:	bf00      	nop
 8003620:	40006400 	.word	0x40006400

08003624 <can_frequency>:
 8003624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003626:	460d      	mov	r5, r1
 8003628:	4604      	mov	r4, r0
 800362a:	f001 fc01 	bl	8004e30 <HAL_RCC_GetPCLK1Freq>
 800362e:	2318      	movs	r3, #24
 8003630:	fbb0 f0f5 	udiv	r0, r0, r5
 8003634:	2119      	movs	r1, #25
 8003636:	fbb0 f3f3 	udiv	r3, r0, r3
 800363a:	0886      	lsrs	r6, r0, #2
 800363c:	b29b      	uxth	r3, r3
 800363e:	42b3      	cmp	r3, r6
 8003640:	d315      	bcc.n	800366e <can_frequency+0x4a>
 8003642:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003646:	2b00      	cmp	r3, #0
 8003648:	6822      	ldr	r2, [r4, #0]
 800364a:	dd1c      	ble.n	8003686 <can_frequency+0x62>
 800364c:	6811      	ldr	r1, [r2, #0]
 800364e:	f041 0101 	orr.w	r1, r1, #1
 8003652:	6011      	str	r1, [r2, #0]
 8003654:	6851      	ldr	r1, [r2, #4]
 8003656:	07c9      	lsls	r1, r1, #31
 8003658:	d5fc      	bpl.n	8003654 <can_frequency+0x30>
 800365a:	61d3      	str	r3, [r2, #28]
 800365c:	6813      	ldr	r3, [r2, #0]
 800365e:	f023 0301 	bic.w	r3, r3, #1
 8003662:	6013      	str	r3, [r2, #0]
 8003664:	6853      	ldr	r3, [r2, #4]
 8003666:	07db      	lsls	r3, r3, #31
 8003668:	d4fc      	bmi.n	8003664 <can_frequency+0x40>
 800366a:	2001      	movs	r0, #1
 800366c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800366e:	3301      	adds	r3, #1
 8003670:	b29b      	uxth	r3, r3
 8003672:	43df      	mvns	r7, r3
 8003674:	fb03 1201 	mla	r2, r3, r1, r1
 8003678:	2516      	movs	r5, #22
 800367a:	4290      	cmp	r0, r2
 800367c:	d005      	beq.n	800368a <can_frequency+0x66>
 800367e:	3d01      	subs	r5, #1
 8003680:	443a      	add	r2, r7
 8003682:	d1fa      	bne.n	800367a <can_frequency+0x56>
 8003684:	e7db      	b.n	800363e <can_frequency+0x1a>
 8003686:	2000      	movs	r0, #0
 8003688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800368a:	4908      	ldr	r1, [pc, #32]	; (80036ac <can_frequency+0x88>)
 800368c:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 8003690:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 8003694:	6852      	ldr	r2, [r2, #4]
 8003696:	0409      	lsls	r1, r1, #16
 8003698:	0512      	lsls	r2, r2, #20
 800369a:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 800369e:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80036a2:	430a      	orrs	r2, r1
 80036a4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80036a8:	4313      	orrs	r3, r2
 80036aa:	e7cc      	b.n	8003646 <can_frequency+0x22>
 80036ac:	080071e8 	.word	0x080071e8

080036b0 <can_write>:
 80036b0:	b084      	sub	sp, #16
 80036b2:	b530      	push	{r4, r5, lr}
 80036b4:	ac04      	add	r4, sp, #16
 80036b6:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 80036ba:	6804      	ldr	r4, [r0, #0]
 80036bc:	f89d 201e 	ldrb.w	r2, [sp, #30]
 80036c0:	68a3      	ldr	r3, [r4, #8]
 80036c2:	0158      	lsls	r0, r3, #5
 80036c4:	d43a      	bmi.n	800373c <can_write+0x8c>
 80036c6:	68a3      	ldr	r3, [r4, #8]
 80036c8:	011b      	lsls	r3, r3, #4
 80036ca:	d439      	bmi.n	8003740 <can_write+0x90>
 80036cc:	68a0      	ldr	r0, [r4, #8]
 80036ce:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 80036d2:	d02f      	beq.n	8003734 <can_write+0x84>
 80036d4:	2002      	movs	r0, #2
 80036d6:	0100      	lsls	r0, r0, #4
 80036d8:	1823      	adds	r3, r4, r0
 80036da:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80036de:	f005 0501 	and.w	r5, r5, #1
 80036e2:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 80036e6:	f89d 501d 	ldrb.w	r5, [sp, #29]
 80036ea:	bb5d      	cbnz	r5, 8003744 <can_write+0x94>
 80036ec:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80036f0:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 80036f4:	4329      	orrs	r1, r5
 80036f6:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 80036fa:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 80036fe:	f021 010f 	bic.w	r1, r1, #15
 8003702:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 8003706:	f89d 101c 	ldrb.w	r1, [sp, #28]
 800370a:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 800370e:	f001 010f 	and.w	r1, r1, #15
 8003712:	4311      	orrs	r1, r2
 8003714:	1822      	adds	r2, r4, r0
 8003716:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 800371a:	9905      	ldr	r1, [sp, #20]
 800371c:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 8003720:	9906      	ldr	r1, [sp, #24]
 8003722:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 8003726:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 800372a:	f042 0201 	orr.w	r2, r2, #1
 800372e:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 8003732:	2001      	movs	r0, #1
 8003734:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003738:	b004      	add	sp, #16
 800373a:	4770      	bx	lr
 800373c:	2000      	movs	r0, #0
 800373e:	e7ca      	b.n	80036d6 <can_write+0x26>
 8003740:	2001      	movs	r0, #1
 8003742:	e7c8      	b.n	80036d6 <can_write+0x26>
 8003744:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 8003748:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 800374c:	f041 0104 	orr.w	r1, r1, #4
 8003750:	e7d0      	b.n	80036f4 <can_write+0x44>

08003752 <can_read>:
 8003752:	b530      	push	{r4, r5, lr}
 8003754:	6804      	ldr	r4, [r0, #0]
 8003756:	68e0      	ldr	r0, [r4, #12]
 8003758:	f010 0003 	ands.w	r0, r0, #3
 800375c:	d03a      	beq.n	80037d4 <can_read+0x82>
 800375e:	0113      	lsls	r3, r2, #4
 8003760:	18e0      	adds	r0, r4, r3
 8003762:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003766:	f3c5 0580 	ubfx	r5, r5, #2, #1
 800376a:	734d      	strb	r5, [r1, #13]
 800376c:	bb9d      	cbnz	r5, 80037d6 <can_read+0x84>
 800376e:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003772:	0d6d      	lsrs	r5, r5, #21
 8003774:	600d      	str	r5, [r1, #0]
 8003776:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800377a:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 800377e:	4423      	add	r3, r4
 8003780:	f000 000f 	and.w	r0, r0, #15
 8003784:	7308      	strb	r0, [r1, #12]
 8003786:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 800378a:	7108      	strb	r0, [r1, #4]
 800378c:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003790:	0a00      	lsrs	r0, r0, #8
 8003792:	7148      	strb	r0, [r1, #5]
 8003794:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003798:	0c00      	lsrs	r0, r0, #16
 800379a:	7188      	strb	r0, [r1, #6]
 800379c:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80037a0:	0e00      	lsrs	r0, r0, #24
 80037a2:	71c8      	strb	r0, [r1, #7]
 80037a4:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80037a8:	7208      	strb	r0, [r1, #8]
 80037aa:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80037ae:	0a00      	lsrs	r0, r0, #8
 80037b0:	7248      	strb	r0, [r1, #9]
 80037b2:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80037b6:	0c00      	lsrs	r0, r0, #16
 80037b8:	7288      	strb	r0, [r1, #10]
 80037ba:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 80037be:	f3c5 0540 	ubfx	r5, r5, #1, #1
 80037c2:	0e1b      	lsrs	r3, r3, #24
 80037c4:	738d      	strb	r5, [r1, #14]
 80037c6:	72cb      	strb	r3, [r1, #11]
 80037c8:	b94a      	cbnz	r2, 80037de <can_read+0x8c>
 80037ca:	68e3      	ldr	r3, [r4, #12]
 80037cc:	f043 0320 	orr.w	r3, r3, #32
 80037d0:	60e3      	str	r3, [r4, #12]
 80037d2:	2001      	movs	r0, #1
 80037d4:	bd30      	pop	{r4, r5, pc}
 80037d6:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80037da:	08ed      	lsrs	r5, r5, #3
 80037dc:	e7ca      	b.n	8003774 <can_read+0x22>
 80037de:	6923      	ldr	r3, [r4, #16]
 80037e0:	f043 0320 	orr.w	r3, r3, #32
 80037e4:	6123      	str	r3, [r4, #16]
 80037e6:	e7f4      	b.n	80037d2 <can_read+0x80>

080037e8 <can_filter>:
 80037e8:	b530      	push	{r4, r5, lr}
 80037ea:	b08b      	sub	sp, #44	; 0x2c
 80037ec:	2b01      	cmp	r3, #1
 80037ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80037f0:	d82b      	bhi.n	800384a <can_filter+0x62>
 80037f2:	6805      	ldr	r5, [r0, #0]
 80037f4:	4816      	ldr	r0, [pc, #88]	; (8003850 <can_filter+0x68>)
 80037f6:	9405      	str	r4, [sp, #20]
 80037f8:	6005      	str	r5, [r0, #0]
 80037fa:	2000      	movs	r0, #0
 80037fc:	9006      	str	r0, [sp, #24]
 80037fe:	2001      	movs	r0, #1
 8003800:	9007      	str	r0, [sp, #28]
 8003802:	b99b      	cbnz	r3, 800382c <can_filter+0x44>
 8003804:	0149      	lsls	r1, r1, #5
 8003806:	e88d 000a 	stmia.w	sp, {r1, r3}
 800380a:	0152      	lsls	r2, r2, #5
 800380c:	9202      	str	r2, [sp, #8]
 800380e:	9303      	str	r3, [sp, #12]
 8003810:	2300      	movs	r3, #0
 8003812:	9304      	str	r3, [sp, #16]
 8003814:	2301      	movs	r3, #1
 8003816:	9308      	str	r3, [sp, #32]
 8003818:	4669      	mov	r1, sp
 800381a:	f104 030e 	add.w	r3, r4, #14
 800381e:	480c      	ldr	r0, [pc, #48]	; (8003850 <can_filter+0x68>)
 8003820:	9309      	str	r3, [sp, #36]	; 0x24
 8003822:	f000 fd17 	bl	8004254 <HAL_CAN_ConfigFilter>
 8003826:	4620      	mov	r0, r4
 8003828:	b00b      	add	sp, #44	; 0x2c
 800382a:	bd30      	pop	{r4, r5, pc}
 800382c:	0b4b      	lsrs	r3, r1, #13
 800382e:	9300      	str	r3, [sp, #0]
 8003830:	00c9      	lsls	r1, r1, #3
 8003832:	0b53      	lsrs	r3, r2, #13
 8003834:	00d2      	lsls	r2, r2, #3
 8003836:	b2c9      	uxtb	r1, r1
 8003838:	b2d2      	uxtb	r2, r2
 800383a:	f041 0104 	orr.w	r1, r1, #4
 800383e:	f042 0204 	orr.w	r2, r2, #4
 8003842:	9101      	str	r1, [sp, #4]
 8003844:	9302      	str	r3, [sp, #8]
 8003846:	9203      	str	r2, [sp, #12]
 8003848:	e7e2      	b.n	8003810 <can_filter+0x28>
 800384a:	2000      	movs	r0, #0
 800384c:	e7ec      	b.n	8003828 <can_filter+0x40>
 800384e:	bf00      	nop
 8003850:	200012c4 	.word	0x200012c4

08003854 <can_init>:
 8003854:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003856:	460e      	mov	r6, r1
 8003858:	b085      	sub	sp, #20
 800385a:	4604      	mov	r4, r0
 800385c:	492f      	ldr	r1, [pc, #188]	; (800391c <can_init+0xc8>)
 800385e:	4630      	mov	r0, r6
 8003860:	4615      	mov	r5, r2
 8003862:	f7fe f98f 	bl	8001b84 <pinmap_peripheral>
 8003866:	492e      	ldr	r1, [pc, #184]	; (8003920 <can_init+0xcc>)
 8003868:	4607      	mov	r7, r0
 800386a:	4628      	mov	r0, r5
 800386c:	f7fe f98a 	bl	8001b84 <pinmap_peripheral>
 8003870:	4601      	mov	r1, r0
 8003872:	4638      	mov	r0, r7
 8003874:	f7fe f968 	bl	8001b48 <pinmap_merge>
 8003878:	4b2a      	ldr	r3, [pc, #168]	; (8003924 <can_init+0xd0>)
 800387a:	6020      	str	r0, [r4, #0]
 800387c:	4298      	cmp	r0, r3
 800387e:	d14b      	bne.n	8003918 <can_init+0xc4>
 8003880:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 8003884:	4925      	ldr	r1, [pc, #148]	; (800391c <can_init+0xc8>)
 8003886:	69da      	ldr	r2, [r3, #28]
 8003888:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 800388c:	61da      	str	r2, [r3, #28]
 800388e:	69db      	ldr	r3, [r3, #28]
 8003890:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003894:	9303      	str	r3, [sp, #12]
 8003896:	9b03      	ldr	r3, [sp, #12]
 8003898:	2300      	movs	r3, #0
 800389a:	6063      	str	r3, [r4, #4]
 800389c:	4630      	mov	r0, r6
 800389e:	f7fe f935 	bl	8001b0c <pinmap_pinout>
 80038a2:	491f      	ldr	r1, [pc, #124]	; (8003920 <can_init+0xcc>)
 80038a4:	4628      	mov	r0, r5
 80038a6:	f7fe f931 	bl	8001b0c <pinmap_pinout>
 80038aa:	1c72      	adds	r2, r6, #1
 80038ac:	d003      	beq.n	80038b6 <can_init+0x62>
 80038ae:	2101      	movs	r1, #1
 80038b0:	4630      	mov	r0, r6
 80038b2:	f000 f91d 	bl	8003af0 <pin_mode>
 80038b6:	1c6b      	adds	r3, r5, #1
 80038b8:	d003      	beq.n	80038c2 <can_init+0x6e>
 80038ba:	2101      	movs	r1, #1
 80038bc:	4628      	mov	r0, r5
 80038be:	f000 f917 	bl	8003af0 <pin_mode>
 80038c2:	4819      	ldr	r0, [pc, #100]	; (8003928 <can_init+0xd4>)
 80038c4:	6823      	ldr	r3, [r4, #0]
 80038c6:	6003      	str	r3, [r0, #0]
 80038c8:	2300      	movs	r3, #0
 80038ca:	6183      	str	r3, [r0, #24]
 80038cc:	61c3      	str	r3, [r0, #28]
 80038ce:	6203      	str	r3, [r0, #32]
 80038d0:	6243      	str	r3, [r0, #36]	; 0x24
 80038d2:	6283      	str	r3, [r0, #40]	; 0x28
 80038d4:	62c3      	str	r3, [r0, #44]	; 0x2c
 80038d6:	6083      	str	r3, [r0, #8]
 80038d8:	60c3      	str	r3, [r0, #12]
 80038da:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 80038de:	6103      	str	r3, [r0, #16]
 80038e0:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 80038e4:	6143      	str	r3, [r0, #20]
 80038e6:	2302      	movs	r3, #2
 80038e8:	6043      	str	r3, [r0, #4]
 80038ea:	f000 fd14 	bl	8004316 <HAL_CAN_Init>
 80038ee:	b110      	cbz	r0, 80038f6 <can_init+0xa2>
 80038f0:	480e      	ldr	r0, [pc, #56]	; (800392c <can_init+0xd8>)
 80038f2:	f7fe f991 	bl	8001c18 <error>
 80038f6:	490e      	ldr	r1, [pc, #56]	; (8003930 <can_init+0xdc>)
 80038f8:	4620      	mov	r0, r4
 80038fa:	f7ff fe93 	bl	8003624 <can_frequency>
 80038fe:	4a09      	ldr	r2, [pc, #36]	; (8003924 <can_init+0xd0>)
 8003900:	6823      	ldr	r3, [r4, #0]
 8003902:	4293      	cmp	r3, r2
 8003904:	bf14      	ite	ne
 8003906:	230e      	movne	r3, #14
 8003908:	2300      	moveq	r3, #0
 800390a:	9300      	str	r3, [sp, #0]
 800390c:	2300      	movs	r3, #0
 800390e:	461a      	mov	r2, r3
 8003910:	4619      	mov	r1, r3
 8003912:	4620      	mov	r0, r4
 8003914:	f7ff ff68 	bl	80037e8 <can_filter>
 8003918:	b005      	add	sp, #20
 800391a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800391c:	080072f8 	.word	0x080072f8
 8003920:	08007310 	.word	0x08007310
 8003924:	40006400 	.word	0x40006400
 8003928:	200012c4 	.word	0x200012c4
 800392c:	080071d1 	.word	0x080071d1
 8003930:	000186a0 	.word	0x000186a0

08003934 <us_ticker_init>:
 8003934:	4b05      	ldr	r3, [pc, #20]	; (800394c <us_ticker_init+0x18>)
 8003936:	6818      	ldr	r0, [r3, #0]
 8003938:	b938      	cbnz	r0, 800394a <us_ticker_init+0x16>
 800393a:	2201      	movs	r2, #1
 800393c:	601a      	str	r2, [r3, #0]
 800393e:	4b04      	ldr	r3, [pc, #16]	; (8003950 <us_ticker_init+0x1c>)
 8003940:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003944:	601a      	str	r2, [r3, #0]
 8003946:	f7ff bc87 	b.w	8003258 <HAL_InitTick>
 800394a:	4770      	bx	lr
 800394c:	2000130c 	.word	0x2000130c
 8003950:	20001fbc 	.word	0x20001fbc

08003954 <us_ticker_read>:
 8003954:	b508      	push	{r3, lr}
 8003956:	4b04      	ldr	r3, [pc, #16]	; (8003968 <us_ticker_read+0x14>)
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	b90b      	cbnz	r3, 8003960 <us_ticker_read+0xc>
 800395c:	f7ff ffea 	bl	8003934 <us_ticker_init>
 8003960:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003964:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003966:	bd08      	pop	{r3, pc}
 8003968:	2000130c 	.word	0x2000130c

0800396c <us_ticker_set_interrupt>:
 800396c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003970:	4a03      	ldr	r2, [pc, #12]	; (8003980 <us_ticker_set_interrupt+0x14>)
 8003972:	6013      	str	r3, [r2, #0]
 8003974:	6358      	str	r0, [r3, #52]	; 0x34
 8003976:	68da      	ldr	r2, [r3, #12]
 8003978:	f042 0202 	orr.w	r2, r2, #2
 800397c:	60da      	str	r2, [r3, #12]
 800397e:	4770      	bx	lr
 8003980:	20001fbc 	.word	0x20001fbc

08003984 <us_ticker_disable_interrupt>:
 8003984:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003988:	4a03      	ldr	r2, [pc, #12]	; (8003998 <us_ticker_disable_interrupt+0x14>)
 800398a:	6013      	str	r3, [r2, #0]
 800398c:	68da      	ldr	r2, [r3, #12]
 800398e:	f022 0202 	bic.w	r2, r2, #2
 8003992:	60da      	str	r2, [r3, #12]
 8003994:	4770      	bx	lr
 8003996:	bf00      	nop
 8003998:	20001fbc 	.word	0x20001fbc

0800399c <us_ticker_clear_interrupt>:
 800399c:	4a03      	ldr	r2, [pc, #12]	; (80039ac <us_ticker_clear_interrupt+0x10>)
 800399e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80039a2:	6013      	str	r3, [r2, #0]
 80039a4:	f06f 0202 	mvn.w	r2, #2
 80039a8:	611a      	str	r2, [r3, #16]
 80039aa:	4770      	bx	lr
 80039ac:	20001fbc 	.word	0x20001fbc

080039b0 <LL_GPIO_SetPinPull>:
 80039b0:	b530      	push	{r4, r5, lr}
 80039b2:	68c3      	ldr	r3, [r0, #12]
 80039b4:	fa91 f4a1 	rbit	r4, r1
 80039b8:	fab4 f484 	clz	r4, r4
 80039bc:	fa91 f1a1 	rbit	r1, r1
 80039c0:	2503      	movs	r5, #3
 80039c2:	fab1 f181 	clz	r1, r1
 80039c6:	0064      	lsls	r4, r4, #1
 80039c8:	fa05 f404 	lsl.w	r4, r5, r4
 80039cc:	0049      	lsls	r1, r1, #1
 80039ce:	ea23 0304 	bic.w	r3, r3, r4
 80039d2:	fa02 f101 	lsl.w	r1, r2, r1
 80039d6:	4319      	orrs	r1, r3
 80039d8:	60c1      	str	r1, [r0, #12]
 80039da:	bd30      	pop	{r4, r5, pc}

080039dc <stm_pin_PullConfig>:
 80039dc:	2a01      	cmp	r2, #1
 80039de:	d002      	beq.n	80039e6 <stm_pin_PullConfig+0xa>
 80039e0:	2a02      	cmp	r2, #2
 80039e2:	bf18      	it	ne
 80039e4:	2200      	movne	r2, #0
 80039e6:	f7ff bfe3 	b.w	80039b0 <LL_GPIO_SetPinPull>
	...

080039ec <pin_function>:
 80039ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039f0:	4b3e      	ldr	r3, [pc, #248]	; (8003aec <pin_function+0x100>)
 80039f2:	f000 080f 	and.w	r8, r0, #15
 80039f6:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80039fa:	460e      	mov	r6, r1
 80039fc:	f001 0507 	and.w	r5, r1, #7
 8003a00:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8003a04:	f7ff fc9e 	bl	8003344 <Set_GPIO_Clock>
 8003a08:	6882      	ldr	r2, [r0, #8]
 8003a0a:	fa94 f3a4 	rbit	r3, r4
 8003a0e:	fab3 f383 	clz	r3, r3
 8003a12:	fa94 f1a4 	rbit	r1, r4
 8003a16:	2703      	movs	r7, #3
 8003a18:	005b      	lsls	r3, r3, #1
 8003a1a:	fab1 f181 	clz	r1, r1
 8003a1e:	fa07 f303 	lsl.w	r3, r7, r3
 8003a22:	ea22 0303 	bic.w	r3, r2, r3
 8003a26:	004a      	lsls	r2, r1, #1
 8003a28:	fa07 f202 	lsl.w	r2, r7, r2
 8003a2c:	4313      	orrs	r3, r2
 8003a2e:	2d02      	cmp	r5, #2
 8003a30:	6083      	str	r3, [r0, #8]
 8003a32:	d028      	beq.n	8003a86 <pin_function+0x9a>
 8003a34:	42bd      	cmp	r5, r7
 8003a36:	d041      	beq.n	8003abc <pin_function+0xd0>
 8003a38:	2d01      	cmp	r5, #1
 8003a3a:	d03f      	beq.n	8003abc <pin_function+0xd0>
 8003a3c:	2300      	movs	r3, #0
 8003a3e:	6802      	ldr	r2, [r0, #0]
 8003a40:	fa94 f7a4 	rbit	r7, r4
 8003a44:	fab7 f787 	clz	r7, r7
 8003a48:	fa94 f1a4 	rbit	r1, r4
 8003a4c:	f04f 0e03 	mov.w	lr, #3
 8003a50:	fab1 f181 	clz	r1, r1
 8003a54:	007f      	lsls	r7, r7, #1
 8003a56:	fa0e f707 	lsl.w	r7, lr, r7
 8003a5a:	0049      	lsls	r1, r1, #1
 8003a5c:	ea22 0207 	bic.w	r2, r2, r7
 8003a60:	408b      	lsls	r3, r1
 8003a62:	3d01      	subs	r5, #1
 8003a64:	4313      	orrs	r3, r2
 8003a66:	2d01      	cmp	r5, #1
 8003a68:	6003      	str	r3, [r0, #0]
 8003a6a:	d805      	bhi.n	8003a78 <pin_function+0x8c>
 8003a6c:	6843      	ldr	r3, [r0, #4]
 8003a6e:	0732      	lsls	r2, r6, #28
 8003a70:	bf4c      	ite	mi
 8003a72:	4323      	orrmi	r3, r4
 8003a74:	43a3      	bicpl	r3, r4
 8003a76:	6043      	str	r3, [r0, #4]
 8003a78:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8003a7c:	4621      	mov	r1, r4
 8003a7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003a82:	f7ff bfab 	b.w	80039dc <stm_pin_PullConfig>
 8003a86:	f1b8 0f07 	cmp.w	r8, #7
 8003a8a:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003a8e:	d917      	bls.n	8003ac0 <pin_function+0xd4>
 8003a90:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003a92:	0a23      	lsrs	r3, r4, #8
 8003a94:	fa93 f1a3 	rbit	r1, r3
 8003a98:	fab1 f181 	clz	r1, r1
 8003a9c:	fa93 f3a3 	rbit	r3, r3
 8003aa0:	f04f 0e0f 	mov.w	lr, #15
 8003aa4:	fab3 f383 	clz	r3, r3
 8003aa8:	0089      	lsls	r1, r1, #2
 8003aaa:	fa0e f101 	lsl.w	r1, lr, r1
 8003aae:	009b      	lsls	r3, r3, #2
 8003ab0:	ea22 0201 	bic.w	r2, r2, r1
 8003ab4:	fa07 f303 	lsl.w	r3, r7, r3
 8003ab8:	4313      	orrs	r3, r2
 8003aba:	6243      	str	r3, [r0, #36]	; 0x24
 8003abc:	462b      	mov	r3, r5
 8003abe:	e7be      	b.n	8003a3e <pin_function+0x52>
 8003ac0:	6a02      	ldr	r2, [r0, #32]
 8003ac2:	fa94 f3a4 	rbit	r3, r4
 8003ac6:	fab3 f383 	clz	r3, r3
 8003aca:	fa94 f1a4 	rbit	r1, r4
 8003ace:	f04f 0e0f 	mov.w	lr, #15
 8003ad2:	fab1 f181 	clz	r1, r1
 8003ad6:	009b      	lsls	r3, r3, #2
 8003ad8:	fa0e f303 	lsl.w	r3, lr, r3
 8003adc:	0089      	lsls	r1, r1, #2
 8003ade:	ea22 0203 	bic.w	r2, r2, r3
 8003ae2:	fa07 f301 	lsl.w	r3, r7, r1
 8003ae6:	4313      	orrs	r3, r2
 8003ae8:	6203      	str	r3, [r0, #32]
 8003aea:	e7e7      	b.n	8003abc <pin_function+0xd0>
 8003aec:	080072a0 	.word	0x080072a0

08003af0 <pin_mode>:
 8003af0:	f000 020f 	and.w	r2, r0, #15
 8003af4:	4b1c      	ldr	r3, [pc, #112]	; (8003b68 <pin_mode+0x78>)
 8003af6:	b570      	push	{r4, r5, r6, lr}
 8003af8:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003afc:	460d      	mov	r5, r1
 8003afe:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003b02:	f7ff fc1f 	bl	8003344 <Set_GPIO_Clock>
 8003b06:	6806      	ldr	r6, [r0, #0]
 8003b08:	fa94 f1a4 	rbit	r1, r4
 8003b0c:	fab1 f381 	clz	r3, r1
 8003b10:	fa94 f2a4 	rbit	r2, r4
 8003b14:	0059      	lsls	r1, r3, #1
 8003b16:	2303      	movs	r3, #3
 8003b18:	fab2 f282 	clz	r2, r2
 8003b1c:	408b      	lsls	r3, r1
 8003b1e:	4033      	ands	r3, r6
 8003b20:	0052      	lsls	r2, r2, #1
 8003b22:	40d3      	lsrs	r3, r2
 8003b24:	3b01      	subs	r3, #1
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	d805      	bhi.n	8003b36 <pin_mode+0x46>
 8003b2a:	1eeb      	subs	r3, r5, #3
 8003b2c:	2b02      	cmp	r3, #2
 8003b2e:	6843      	ldr	r3, [r0, #4]
 8003b30:	d809      	bhi.n	8003b46 <pin_mode+0x56>
 8003b32:	4323      	orrs	r3, r4
 8003b34:	6043      	str	r3, [r0, #4]
 8003b36:	2d03      	cmp	r5, #3
 8003b38:	d108      	bne.n	8003b4c <pin_mode+0x5c>
 8003b3a:	2201      	movs	r2, #1
 8003b3c:	4621      	mov	r1, r4
 8003b3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b42:	f7ff bf4b 	b.w	80039dc <stm_pin_PullConfig>
 8003b46:	ea23 0304 	bic.w	r3, r3, r4
 8003b4a:	6043      	str	r3, [r0, #4]
 8003b4c:	2d01      	cmp	r5, #1
 8003b4e:	d0f4      	beq.n	8003b3a <pin_mode+0x4a>
 8003b50:	2d05      	cmp	r5, #5
 8003b52:	d001      	beq.n	8003b58 <pin_mode+0x68>
 8003b54:	2d02      	cmp	r5, #2
 8003b56:	d101      	bne.n	8003b5c <pin_mode+0x6c>
 8003b58:	2202      	movs	r2, #2
 8003b5a:	e7ef      	b.n	8003b3c <pin_mode+0x4c>
 8003b5c:	4621      	mov	r1, r4
 8003b5e:	2200      	movs	r2, #0
 8003b60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003b64:	f7ff bf24 	b.w	80039b0 <LL_GPIO_SetPinPull>
 8003b68:	080072a0 	.word	0x080072a0

08003b6c <init_uart>:
 8003b6c:	6843      	ldr	r3, [r0, #4]
 8003b6e:	4918      	ldr	r1, [pc, #96]	; (8003bd0 <init_uart+0x64>)
 8003b70:	2270      	movs	r2, #112	; 0x70
 8003b72:	435a      	muls	r2, r3
 8003b74:	b510      	push	{r4, lr}
 8003b76:	188b      	adds	r3, r1, r2
 8003b78:	6804      	ldr	r4, [r0, #0]
 8003b7a:	508c      	str	r4, [r1, r2]
 8003b7c:	6882      	ldr	r2, [r0, #8]
 8003b7e:	605a      	str	r2, [r3, #4]
 8003b80:	68c2      	ldr	r2, [r0, #12]
 8003b82:	609a      	str	r2, [r3, #8]
 8003b84:	6902      	ldr	r2, [r0, #16]
 8003b86:	60da      	str	r2, [r3, #12]
 8003b88:	6942      	ldr	r2, [r0, #20]
 8003b8a:	611a      	str	r2, [r3, #16]
 8003b8c:	69c2      	ldr	r2, [r0, #28]
 8003b8e:	619a      	str	r2, [r3, #24]
 8003b90:	2200      	movs	r2, #0
 8003b92:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003b96:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8003b9a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8003b9e:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8003ba2:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003ba6:	3201      	adds	r2, #1
 8003ba8:	d10a      	bne.n	8003bc0 <init_uart+0x54>
 8003baa:	2208      	movs	r2, #8
 8003bac:	615a      	str	r2, [r3, #20]
 8003bae:	4618      	mov	r0, r3
 8003bb0:	f000 fda5 	bl	80046fe <HAL_UART_Init>
 8003bb4:	b158      	cbz	r0, 8003bce <init_uart+0x62>
 8003bb6:	4807      	ldr	r0, [pc, #28]	; (8003bd4 <init_uart+0x68>)
 8003bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bbc:	f7fe b82c 	b.w	8001c18 <error>
 8003bc0:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003bc4:	3201      	adds	r2, #1
 8003bc6:	bf0c      	ite	eq
 8003bc8:	2204      	moveq	r2, #4
 8003bca:	220c      	movne	r2, #12
 8003bcc:	e7ee      	b.n	8003bac <init_uart+0x40>
 8003bce:	bd10      	pop	{r4, pc}
 8003bd0:	2000132c 	.word	0x2000132c
 8003bd4:	080072e0 	.word	0x080072e0

08003bd8 <uart_irq>:
 8003bd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003bda:	4f1c      	ldr	r7, [pc, #112]	; (8003c4c <uart_irq+0x74>)
 8003bdc:	4605      	mov	r5, r0
 8003bde:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8003be2:	2800      	cmp	r0, #0
 8003be4:	d02f      	beq.n	8003c46 <uart_irq+0x6e>
 8003be6:	2670      	movs	r6, #112	; 0x70
 8003be8:	4c19      	ldr	r4, [pc, #100]	; (8003c50 <uart_irq+0x78>)
 8003bea:	436e      	muls	r6, r5
 8003bec:	59a3      	ldr	r3, [r4, r6]
 8003bee:	69da      	ldr	r2, [r3, #28]
 8003bf0:	0652      	lsls	r2, r2, #25
 8003bf2:	d509      	bpl.n	8003c08 <uart_irq+0x30>
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	0659      	lsls	r1, r3, #25
 8003bf8:	d506      	bpl.n	8003c08 <uart_irq+0x30>
 8003bfa:	4b16      	ldr	r3, [pc, #88]	; (8003c54 <uart_irq+0x7c>)
 8003bfc:	2101      	movs	r1, #1
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	4798      	blx	r3
 8003c02:	59a3      	ldr	r3, [r4, r6]
 8003c04:	2240      	movs	r2, #64	; 0x40
 8003c06:	621a      	str	r2, [r3, #32]
 8003c08:	2670      	movs	r6, #112	; 0x70
 8003c0a:	436e      	muls	r6, r5
 8003c0c:	59a3      	ldr	r3, [r4, r6]
 8003c0e:	69da      	ldr	r2, [r3, #28]
 8003c10:	0692      	lsls	r2, r2, #26
 8003c12:	d50d      	bpl.n	8003c30 <uart_irq+0x58>
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	0698      	lsls	r0, r3, #26
 8003c18:	d50a      	bpl.n	8003c30 <uart_irq+0x58>
 8003c1a:	4b0e      	ldr	r3, [pc, #56]	; (8003c54 <uart_irq+0x7c>)
 8003c1c:	f857 0025 	ldr.w	r0, [r7, r5, lsl #2]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	2100      	movs	r1, #0
 8003c24:	4798      	blx	r3
 8003c26:	59a3      	ldr	r3, [r4, r6]
 8003c28:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003c2a:	b29b      	uxth	r3, r3
 8003c2c:	9301      	str	r3, [sp, #4]
 8003c2e:	9b01      	ldr	r3, [sp, #4]
 8003c30:	2370      	movs	r3, #112	; 0x70
 8003c32:	435d      	muls	r5, r3
 8003c34:	5963      	ldr	r3, [r4, r5]
 8003c36:	69da      	ldr	r2, [r3, #28]
 8003c38:	0711      	lsls	r1, r2, #28
 8003c3a:	d504      	bpl.n	8003c46 <uart_irq+0x6e>
 8003c3c:	689a      	ldr	r2, [r3, #8]
 8003c3e:	07d2      	lsls	r2, r2, #31
 8003c40:	bf44      	itt	mi
 8003c42:	2208      	movmi	r2, #8
 8003c44:	621a      	strmi	r2, [r3, #32]
 8003c46:	b003      	add	sp, #12
 8003c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c4a:	bf00      	nop
 8003c4c:	20001314 	.word	0x20001314
 8003c50:	2000132c 	.word	0x2000132c
 8003c54:	20001310 	.word	0x20001310

08003c58 <uart1_irq>:
 8003c58:	2000      	movs	r0, #0
 8003c5a:	f7ff bfbd 	b.w	8003bd8 <uart_irq>

08003c5e <uart2_irq>:
 8003c5e:	2001      	movs	r0, #1
 8003c60:	f7ff bfba 	b.w	8003bd8 <uart_irq>

08003c64 <uart3_irq>:
 8003c64:	2002      	movs	r0, #2
 8003c66:	f7ff bfb7 	b.w	8003bd8 <uart_irq>
	...

08003c6c <serial_init>:
 8003c6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c6e:	460e      	mov	r6, r1
 8003c70:	b085      	sub	sp, #20
 8003c72:	4604      	mov	r4, r0
 8003c74:	4949      	ldr	r1, [pc, #292]	; (8003d9c <serial_init+0x130>)
 8003c76:	4630      	mov	r0, r6
 8003c78:	4615      	mov	r5, r2
 8003c7a:	f7fd ff83 	bl	8001b84 <pinmap_peripheral>
 8003c7e:	4948      	ldr	r1, [pc, #288]	; (8003da0 <serial_init+0x134>)
 8003c80:	4607      	mov	r7, r0
 8003c82:	4628      	mov	r0, r5
 8003c84:	f7fd ff7e 	bl	8001b84 <pinmap_peripheral>
 8003c88:	4601      	mov	r1, r0
 8003c8a:	4638      	mov	r0, r7
 8003c8c:	f7fd ff5c 	bl	8001b48 <pinmap_merge>
 8003c90:	4b44      	ldr	r3, [pc, #272]	; (8003da4 <serial_init+0x138>)
 8003c92:	6020      	str	r0, [r4, #0]
 8003c94:	4298      	cmp	r0, r3
 8003c96:	d151      	bne.n	8003d3c <serial_init+0xd0>
 8003c98:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8003c9c:	68da      	ldr	r2, [r3, #12]
 8003c9e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003ca2:	60da      	str	r2, [r3, #12]
 8003ca4:	68da      	ldr	r2, [r3, #12]
 8003ca6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003caa:	60da      	str	r2, [r3, #12]
 8003cac:	699a      	ldr	r2, [r3, #24]
 8003cae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003cb2:	619a      	str	r2, [r3, #24]
 8003cb4:	699a      	ldr	r2, [r3, #24]
 8003cb6:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003cba:	9201      	str	r2, [sp, #4]
 8003cbc:	9a01      	ldr	r2, [sp, #4]
 8003cbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003cc0:	f022 0203 	bic.w	r2, r2, #3
 8003cc4:	f042 0201 	orr.w	r2, r2, #1
 8003cc8:	631a      	str	r2, [r3, #48]	; 0x30
 8003cca:	2300      	movs	r3, #0
 8003ccc:	6063      	str	r3, [r4, #4]
 8003cce:	4933      	ldr	r1, [pc, #204]	; (8003d9c <serial_init+0x130>)
 8003cd0:	4630      	mov	r0, r6
 8003cd2:	f7fd ff1b 	bl	8001b0c <pinmap_pinout>
 8003cd6:	4932      	ldr	r1, [pc, #200]	; (8003da0 <serial_init+0x134>)
 8003cd8:	4628      	mov	r0, r5
 8003cda:	f7fd ff17 	bl	8001b0c <pinmap_pinout>
 8003cde:	1c72      	adds	r2, r6, #1
 8003ce0:	d003      	beq.n	8003cea <serial_init+0x7e>
 8003ce2:	2101      	movs	r1, #1
 8003ce4:	4630      	mov	r0, r6
 8003ce6:	f7ff ff03 	bl	8003af0 <pin_mode>
 8003cea:	1c6b      	adds	r3, r5, #1
 8003cec:	d003      	beq.n	8003cf6 <serial_init+0x8a>
 8003cee:	2101      	movs	r1, #1
 8003cf0:	4628      	mov	r0, r5
 8003cf2:	f7ff fefd 	bl	8003af0 <pin_mode>
 8003cf6:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003cfa:	60a3      	str	r3, [r4, #8]
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	60e3      	str	r3, [r4, #12]
 8003d00:	6123      	str	r3, [r4, #16]
 8003d02:	6163      	str	r3, [r4, #20]
 8003d04:	61e3      	str	r3, [r4, #28]
 8003d06:	8326      	strh	r6, [r4, #24]
 8003d08:	8365      	strh	r5, [r4, #26]
 8003d0a:	4620      	mov	r0, r4
 8003d0c:	f7ff ff2e 	bl	8003b6c <init_uart>
 8003d10:	6822      	ldr	r2, [r4, #0]
 8003d12:	4b25      	ldr	r3, [pc, #148]	; (8003da8 <serial_init+0x13c>)
 8003d14:	429a      	cmp	r2, r3
 8003d16:	d10f      	bne.n	8003d38 <serial_init+0xcc>
 8003d18:	4b24      	ldr	r3, [pc, #144]	; (8003dac <serial_init+0x140>)
 8003d1a:	2201      	movs	r2, #1
 8003d1c:	601a      	str	r2, [r3, #0]
 8003d1e:	4b24      	ldr	r3, [pc, #144]	; (8003db0 <serial_init+0x144>)
 8003d20:	f104 0520 	add.w	r5, r4, #32
 8003d24:	6820      	ldr	r0, [r4, #0]
 8003d26:	6861      	ldr	r1, [r4, #4]
 8003d28:	461a      	mov	r2, r3
 8003d2a:	c203      	stmia	r2!, {r0, r1}
 8003d2c:	3408      	adds	r4, #8
 8003d2e:	42ac      	cmp	r4, r5
 8003d30:	4613      	mov	r3, r2
 8003d32:	d1f7      	bne.n	8003d24 <serial_init+0xb8>
 8003d34:	6820      	ldr	r0, [r4, #0]
 8003d36:	6010      	str	r0, [r2, #0]
 8003d38:	b005      	add	sp, #20
 8003d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d3c:	4b1a      	ldr	r3, [pc, #104]	; (8003da8 <serial_init+0x13c>)
 8003d3e:	4298      	cmp	r0, r3
 8003d40:	d114      	bne.n	8003d6c <serial_init+0x100>
 8003d42:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8003d46:	691a      	ldr	r2, [r3, #16]
 8003d48:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003d4c:	611a      	str	r2, [r3, #16]
 8003d4e:	691a      	ldr	r2, [r3, #16]
 8003d50:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003d54:	611a      	str	r2, [r3, #16]
 8003d56:	69da      	ldr	r2, [r3, #28]
 8003d58:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003d5c:	61da      	str	r2, [r3, #28]
 8003d5e:	69db      	ldr	r3, [r3, #28]
 8003d60:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d64:	9302      	str	r3, [sp, #8]
 8003d66:	9b02      	ldr	r3, [sp, #8]
 8003d68:	2301      	movs	r3, #1
 8003d6a:	e7af      	b.n	8003ccc <serial_init+0x60>
 8003d6c:	4b11      	ldr	r3, [pc, #68]	; (8003db4 <serial_init+0x148>)
 8003d6e:	4298      	cmp	r0, r3
 8003d70:	d1ad      	bne.n	8003cce <serial_init+0x62>
 8003d72:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8003d76:	691a      	ldr	r2, [r3, #16]
 8003d78:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003d7c:	611a      	str	r2, [r3, #16]
 8003d7e:	691a      	ldr	r2, [r3, #16]
 8003d80:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003d84:	611a      	str	r2, [r3, #16]
 8003d86:	69da      	ldr	r2, [r3, #28]
 8003d88:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003d8c:	61da      	str	r2, [r3, #28]
 8003d8e:	69db      	ldr	r3, [r3, #28]
 8003d90:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003d94:	9303      	str	r3, [sp, #12]
 8003d96:	9b03      	ldr	r3, [sp, #12]
 8003d98:	2302      	movs	r3, #2
 8003d9a:	e797      	b.n	8003ccc <serial_init+0x60>
 8003d9c:	08007370 	.word	0x08007370
 8003da0:	08007328 	.word	0x08007328
 8003da4:	40013800 	.word	0x40013800
 8003da8:	40004400 	.word	0x40004400
 8003dac:	20001328 	.word	0x20001328
 8003db0:	20001ffc 	.word	0x20001ffc
 8003db4:	40004800 	.word	0x40004800

08003db8 <serial_baud>:
 8003db8:	6081      	str	r1, [r0, #8]
 8003dba:	f7ff bed7 	b.w	8003b6c <init_uart>
	...

08003dc0 <serial_irq_handler>:
 8003dc0:	4b03      	ldr	r3, [pc, #12]	; (8003dd0 <serial_irq_handler+0x10>)
 8003dc2:	6019      	str	r1, [r3, #0]
 8003dc4:	6841      	ldr	r1, [r0, #4]
 8003dc6:	4b03      	ldr	r3, [pc, #12]	; (8003dd4 <serial_irq_handler+0x14>)
 8003dc8:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003dcc:	4770      	bx	lr
 8003dce:	bf00      	nop
 8003dd0:	20001310 	.word	0x20001310
 8003dd4:	20001314 	.word	0x20001314

08003dd8 <serial_irq_set>:
 8003dd8:	b570      	push	{r4, r5, r6, lr}
 8003dda:	e890 0028 	ldmia.w	r0, {r3, r5}
 8003dde:	460e      	mov	r6, r1
 8003de0:	4925      	ldr	r1, [pc, #148]	; (8003e78 <serial_irq_set+0xa0>)
 8003de2:	428b      	cmp	r3, r1
 8003de4:	d118      	bne.n	8003e18 <serial_irq_set+0x40>
 8003de6:	4925      	ldr	r1, [pc, #148]	; (8003e7c <serial_irq_set+0xa4>)
 8003de8:	2425      	movs	r4, #37	; 0x25
 8003dea:	2370      	movs	r3, #112	; 0x70
 8003dec:	4824      	ldr	r0, [pc, #144]	; (8003e80 <serial_irq_set+0xa8>)
 8003dee:	436b      	muls	r3, r5
 8003df0:	b31a      	cbz	r2, 8003e3a <serial_irq_set+0x62>
 8003df2:	58c2      	ldr	r2, [r0, r3]
 8003df4:	6813      	ldr	r3, [r2, #0]
 8003df6:	b9ee      	cbnz	r6, 8003e34 <serial_irq_set+0x5c>
 8003df8:	f043 0320 	orr.w	r3, r3, #32
 8003dfc:	6013      	str	r3, [r2, #0]
 8003dfe:	4620      	mov	r0, r4
 8003e00:	f000 f940 	bl	8004084 <__NVIC_SetVector>
 8003e04:	0962      	lsrs	r2, r4, #5
 8003e06:	2301      	movs	r3, #1
 8003e08:	f004 0407 	and.w	r4, r4, #7
 8003e0c:	fa03 f404 	lsl.w	r4, r3, r4
 8003e10:	4b1c      	ldr	r3, [pc, #112]	; (8003e84 <serial_irq_set+0xac>)
 8003e12:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003e16:	bd70      	pop	{r4, r5, r6, pc}
 8003e18:	491b      	ldr	r1, [pc, #108]	; (8003e88 <serial_irq_set+0xb0>)
 8003e1a:	428b      	cmp	r3, r1
 8003e1c:	d102      	bne.n	8003e24 <serial_irq_set+0x4c>
 8003e1e:	491b      	ldr	r1, [pc, #108]	; (8003e8c <serial_irq_set+0xb4>)
 8003e20:	2426      	movs	r4, #38	; 0x26
 8003e22:	e7e2      	b.n	8003dea <serial_irq_set+0x12>
 8003e24:	491a      	ldr	r1, [pc, #104]	; (8003e90 <serial_irq_set+0xb8>)
 8003e26:	428b      	cmp	r3, r1
 8003e28:	bf13      	iteet	ne
 8003e2a:	2100      	movne	r1, #0
 8003e2c:	4919      	ldreq	r1, [pc, #100]	; (8003e94 <serial_irq_set+0xbc>)
 8003e2e:	2427      	moveq	r4, #39	; 0x27
 8003e30:	460c      	movne	r4, r1
 8003e32:	e7da      	b.n	8003dea <serial_irq_set+0x12>
 8003e34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003e38:	e7e0      	b.n	8003dfc <serial_irq_set+0x24>
 8003e3a:	58c3      	ldr	r3, [r0, r3]
 8003e3c:	681a      	ldr	r2, [r3, #0]
 8003e3e:	b936      	cbnz	r6, 8003e4e <serial_irq_set+0x76>
 8003e40:	f022 0220 	bic.w	r2, r2, #32
 8003e44:	601a      	str	r2, [r3, #0]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	061a      	lsls	r2, r3, #24
 8003e4a:	d506      	bpl.n	8003e5a <serial_irq_set+0x82>
 8003e4c:	bd70      	pop	{r4, r5, r6, pc}
 8003e4e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003e52:	601a      	str	r2, [r3, #0]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	069b      	lsls	r3, r3, #26
 8003e58:	d40d      	bmi.n	8003e76 <serial_irq_set+0x9e>
 8003e5a:	0963      	lsrs	r3, r4, #5
 8003e5c:	2201      	movs	r2, #1
 8003e5e:	f004 0407 	and.w	r4, r4, #7
 8003e62:	fa02 f404 	lsl.w	r4, r2, r4
 8003e66:	3320      	adds	r3, #32
 8003e68:	4a06      	ldr	r2, [pc, #24]	; (8003e84 <serial_irq_set+0xac>)
 8003e6a:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8003e6e:	f3bf 8f4f 	dsb	sy
 8003e72:	f3bf 8f6f 	isb	sy
 8003e76:	bd70      	pop	{r4, r5, r6, pc}
 8003e78:	40013800 	.word	0x40013800
 8003e7c:	08003c59 	.word	0x08003c59
 8003e80:	2000132c 	.word	0x2000132c
 8003e84:	e000e100 	.word	0xe000e100
 8003e88:	40004400 	.word	0x40004400
 8003e8c:	08003c5f 	.word	0x08003c5f
 8003e90:	40004800 	.word	0x40004800
 8003e94:	08003c65 	.word	0x08003c65

08003e98 <serial_readable>:
 8003e98:	6842      	ldr	r2, [r0, #4]
 8003e9a:	2370      	movs	r3, #112	; 0x70
 8003e9c:	4353      	muls	r3, r2
 8003e9e:	4a03      	ldr	r2, [pc, #12]	; (8003eac <serial_readable+0x14>)
 8003ea0:	58d3      	ldr	r3, [r2, r3]
 8003ea2:	69d8      	ldr	r0, [r3, #28]
 8003ea4:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003ea8:	4770      	bx	lr
 8003eaa:	bf00      	nop
 8003eac:	2000132c 	.word	0x2000132c

08003eb0 <serial_getc>:
 8003eb0:	b510      	push	{r4, lr}
 8003eb2:	6844      	ldr	r4, [r0, #4]
 8003eb4:	4601      	mov	r1, r0
 8003eb6:	4608      	mov	r0, r1
 8003eb8:	f7ff ffee 	bl	8003e98 <serial_readable>
 8003ebc:	2800      	cmp	r0, #0
 8003ebe:	d0fa      	beq.n	8003eb6 <serial_getc+0x6>
 8003ec0:	2370      	movs	r3, #112	; 0x70
 8003ec2:	4a05      	ldr	r2, [pc, #20]	; (8003ed8 <serial_getc+0x28>)
 8003ec4:	68c9      	ldr	r1, [r1, #12]
 8003ec6:	4363      	muls	r3, r4
 8003ec8:	58d3      	ldr	r3, [r2, r3]
 8003eca:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 8003ecc:	b909      	cbnz	r1, 8003ed2 <serial_getc+0x22>
 8003ece:	b2c0      	uxtb	r0, r0
 8003ed0:	bd10      	pop	{r4, pc}
 8003ed2:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003ed6:	bd10      	pop	{r4, pc}
 8003ed8:	2000132c 	.word	0x2000132c

08003edc <serial_writable>:
 8003edc:	6842      	ldr	r2, [r0, #4]
 8003ede:	2370      	movs	r3, #112	; 0x70
 8003ee0:	4353      	muls	r3, r2
 8003ee2:	4a03      	ldr	r2, [pc, #12]	; (8003ef0 <serial_writable+0x14>)
 8003ee4:	58d3      	ldr	r3, [r2, r3]
 8003ee6:	69d8      	ldr	r0, [r3, #28]
 8003ee8:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003eec:	4770      	bx	lr
 8003eee:	bf00      	nop
 8003ef0:	2000132c 	.word	0x2000132c

08003ef4 <serial_putc>:
 8003ef4:	b538      	push	{r3, r4, r5, lr}
 8003ef6:	6845      	ldr	r5, [r0, #4]
 8003ef8:	4604      	mov	r4, r0
 8003efa:	4620      	mov	r0, r4
 8003efc:	f7ff ffee 	bl	8003edc <serial_writable>
 8003f00:	2800      	cmp	r0, #0
 8003f02:	d0fa      	beq.n	8003efa <serial_putc+0x6>
 8003f04:	2370      	movs	r3, #112	; 0x70
 8003f06:	4a05      	ldr	r2, [pc, #20]	; (8003f1c <serial_putc+0x28>)
 8003f08:	68e0      	ldr	r0, [r4, #12]
 8003f0a:	436b      	muls	r3, r5
 8003f0c:	58d3      	ldr	r3, [r2, r3]
 8003f0e:	b910      	cbnz	r0, 8003f16 <serial_putc+0x22>
 8003f10:	b2c9      	uxtb	r1, r1
 8003f12:	8519      	strh	r1, [r3, #40]	; 0x28
 8003f14:	bd38      	pop	{r3, r4, r5, pc}
 8003f16:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003f1a:	e7fa      	b.n	8003f12 <serial_putc+0x1e>
 8003f1c:	2000132c 	.word	0x2000132c

08003f20 <mbed_sdk_init>:
 8003f20:	b508      	push	{r3, lr}
 8003f22:	f000 f805 	bl	8003f30 <SystemCoreClockUpdate>
 8003f26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003f2a:	f000 b973 	b.w	8004214 <HAL_Init>
	...

08003f30 <SystemCoreClockUpdate>:
 8003f30:	4a14      	ldr	r2, [pc, #80]	; (8003f84 <SystemCoreClockUpdate+0x54>)
 8003f32:	4915      	ldr	r1, [pc, #84]	; (8003f88 <SystemCoreClockUpdate+0x58>)
 8003f34:	6853      	ldr	r3, [r2, #4]
 8003f36:	f003 030c 	and.w	r3, r3, #12
 8003f3a:	2b04      	cmp	r3, #4
 8003f3c:	b510      	push	{r4, lr}
 8003f3e:	d001      	beq.n	8003f44 <SystemCoreClockUpdate+0x14>
 8003f40:	2b08      	cmp	r3, #8
 8003f42:	d00a      	beq.n	8003f5a <SystemCoreClockUpdate+0x2a>
 8003f44:	4b11      	ldr	r3, [pc, #68]	; (8003f8c <SystemCoreClockUpdate+0x5c>)
 8003f46:	600b      	str	r3, [r1, #0]
 8003f48:	6853      	ldr	r3, [r2, #4]
 8003f4a:	4a11      	ldr	r2, [pc, #68]	; (8003f90 <SystemCoreClockUpdate+0x60>)
 8003f4c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003f50:	5cd2      	ldrb	r2, [r2, r3]
 8003f52:	680b      	ldr	r3, [r1, #0]
 8003f54:	40d3      	lsrs	r3, r2
 8003f56:	600b      	str	r3, [r1, #0]
 8003f58:	bd10      	pop	{r4, pc}
 8003f5a:	6853      	ldr	r3, [r2, #4]
 8003f5c:	6850      	ldr	r0, [r2, #4]
 8003f5e:	03c0      	lsls	r0, r0, #15
 8003f60:	bf49      	itett	mi
 8003f62:	6ad0      	ldrmi	r0, [r2, #44]	; 0x2c
 8003f64:	480b      	ldrpl	r0, [pc, #44]	; (8003f94 <SystemCoreClockUpdate+0x64>)
 8003f66:	4c09      	ldrmi	r4, [pc, #36]	; (8003f8c <SystemCoreClockUpdate+0x5c>)
 8003f68:	f000 000f 	andmi.w	r0, r0, #15
 8003f6c:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003f70:	bf48      	it	mi
 8003f72:	3001      	addmi	r0, #1
 8003f74:	f103 0302 	add.w	r3, r3, #2
 8003f78:	bf48      	it	mi
 8003f7a:	fbb4 f0f0 	udivmi	r0, r4, r0
 8003f7e:	4343      	muls	r3, r0
 8003f80:	e7e1      	b.n	8003f46 <SystemCoreClockUpdate+0x16>
 8003f82:	bf00      	nop
 8003f84:	40021000 	.word	0x40021000
 8003f88:	200001a4 	.word	0x200001a4
 8003f8c:	007a1200 	.word	0x007a1200
 8003f90:	080073b8 	.word	0x080073b8
 8003f94:	003d0900 	.word	0x003d0900

08003f98 <SetSysClock_PLL_HSI>:
 8003f98:	b530      	push	{r4, r5, lr}
 8003f9a:	b091      	sub	sp, #68	; 0x44
 8003f9c:	2303      	movs	r3, #3
 8003f9e:	9306      	str	r3, [sp, #24]
 8003fa0:	2301      	movs	r3, #1
 8003fa2:	930a      	str	r3, [sp, #40]	; 0x28
 8003fa4:	2310      	movs	r3, #16
 8003fa6:	2400      	movs	r4, #0
 8003fa8:	930b      	str	r3, [sp, #44]	; 0x2c
 8003faa:	2502      	movs	r5, #2
 8003fac:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8003fb0:	a806      	add	r0, sp, #24
 8003fb2:	9407      	str	r4, [sp, #28]
 8003fb4:	950d      	str	r5, [sp, #52]	; 0x34
 8003fb6:	940e      	str	r4, [sp, #56]	; 0x38
 8003fb8:	930f      	str	r3, [sp, #60]	; 0x3c
 8003fba:	f000 fbd3 	bl	8004764 <HAL_RCC_OscConfig>
 8003fbe:	b980      	cbnz	r0, 8003fe2 <SetSysClock_PLL_HSI+0x4a>
 8003fc0:	230f      	movs	r3, #15
 8003fc2:	9301      	str	r3, [sp, #4]
 8003fc4:	9003      	str	r0, [sp, #12]
 8003fc6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003fca:	9005      	str	r0, [sp, #20]
 8003fcc:	4629      	mov	r1, r5
 8003fce:	a801      	add	r0, sp, #4
 8003fd0:	9502      	str	r5, [sp, #8]
 8003fd2:	9304      	str	r3, [sp, #16]
 8003fd4:	f000 fe6a 	bl	8004cac <HAL_RCC_ClockConfig>
 8003fd8:	fab0 f080 	clz	r0, r0
 8003fdc:	0940      	lsrs	r0, r0, #5
 8003fde:	b011      	add	sp, #68	; 0x44
 8003fe0:	bd30      	pop	{r4, r5, pc}
 8003fe2:	4620      	mov	r0, r4
 8003fe4:	e7fb      	b.n	8003fde <SetSysClock_PLL_HSI+0x46>

08003fe6 <SetSysClock>:
 8003fe6:	b508      	push	{r3, lr}
 8003fe8:	f7ff ffd6 	bl	8003f98 <SetSysClock_PLL_HSI>
 8003fec:	b900      	cbnz	r0, 8003ff0 <SetSysClock+0xa>
 8003fee:	e7fe      	b.n	8003fee <SetSysClock+0x8>
 8003ff0:	bd08      	pop	{r3, pc}
	...

08003ff4 <SystemInit>:
 8003ff4:	4a1d      	ldr	r2, [pc, #116]	; (800406c <SystemInit+0x78>)
 8003ff6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003ffa:	b510      	push	{r4, lr}
 8003ffc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004000:	4c1b      	ldr	r4, [pc, #108]	; (8004070 <SystemInit+0x7c>)
 8004002:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004006:	6823      	ldr	r3, [r4, #0]
 8004008:	f043 0301 	orr.w	r3, r3, #1
 800400c:	6023      	str	r3, [r4, #0]
 800400e:	6861      	ldr	r1, [r4, #4]
 8004010:	4b18      	ldr	r3, [pc, #96]	; (8004074 <SystemInit+0x80>)
 8004012:	400b      	ands	r3, r1
 8004014:	6063      	str	r3, [r4, #4]
 8004016:	6823      	ldr	r3, [r4, #0]
 8004018:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800401c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004020:	6023      	str	r3, [r4, #0]
 8004022:	6823      	ldr	r3, [r4, #0]
 8004024:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004028:	6023      	str	r3, [r4, #0]
 800402a:	6863      	ldr	r3, [r4, #4]
 800402c:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8004030:	6063      	str	r3, [r4, #4]
 8004032:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004034:	f023 030f 	bic.w	r3, r3, #15
 8004038:	62e3      	str	r3, [r4, #44]	; 0x2c
 800403a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800403c:	4b0e      	ldr	r3, [pc, #56]	; (8004078 <SystemInit+0x84>)
 800403e:	400b      	ands	r3, r1
 8004040:	6323      	str	r3, [r4, #48]	; 0x30
 8004042:	2300      	movs	r3, #0
 8004044:	60a3      	str	r3, [r4, #8]
 8004046:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800404a:	6093      	str	r3, [r2, #8]
 800404c:	4b0b      	ldr	r3, [pc, #44]	; (800407c <SystemInit+0x88>)
 800404e:	4a0c      	ldr	r2, [pc, #48]	; (8004080 <SystemInit+0x8c>)
 8004050:	601a      	str	r2, [r3, #0]
 8004052:	f000 f8df 	bl	8004214 <HAL_Init>
 8004056:	f7ff ffc6 	bl	8003fe6 <SetSysClock>
 800405a:	6923      	ldr	r3, [r4, #16]
 800405c:	f043 0301 	orr.w	r3, r3, #1
 8004060:	6123      	str	r3, [r4, #16]
 8004062:	6923      	ldr	r3, [r4, #16]
 8004064:	f023 0301 	bic.w	r3, r3, #1
 8004068:	6123      	str	r3, [r4, #16]
 800406a:	bd10      	pop	{r4, pc}
 800406c:	e000ed00 	.word	0xe000ed00
 8004070:	40021000 	.word	0x40021000
 8004074:	f87fc00c 	.word	0xf87fc00c
 8004078:	ff00fccc 	.word	0xff00fccc
 800407c:	200001a4 	.word	0x200001a4
 8004080:	007a1200 	.word	0x007a1200

08004084 <__NVIC_SetVector>:
 8004084:	b530      	push	{r4, r5, lr}
 8004086:	4c0c      	ldr	r4, [pc, #48]	; (80040b8 <__NVIC_SetVector+0x34>)
 8004088:	68a2      	ldr	r2, [r4, #8]
 800408a:	68a4      	ldr	r4, [r4, #8]
 800408c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8004090:	4613      	mov	r3, r2
 8004092:	d10c      	bne.n	80040ae <__NVIC_SetVector+0x2a>
 8004094:	1f13      	subs	r3, r2, #4
 8004096:	4c09      	ldr	r4, [pc, #36]	; (80040bc <__NVIC_SetVector+0x38>)
 8004098:	4a09      	ldr	r2, [pc, #36]	; (80040c0 <__NVIC_SetVector+0x3c>)
 800409a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800409e:	f842 5f04 	str.w	r5, [r2, #4]!
 80040a2:	42a2      	cmp	r2, r4
 80040a4:	d1f9      	bne.n	800409a <__NVIC_SetVector+0x16>
 80040a6:	4a04      	ldr	r2, [pc, #16]	; (80040b8 <__NVIC_SetVector+0x34>)
 80040a8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80040ac:	6093      	str	r3, [r2, #8]
 80040ae:	3010      	adds	r0, #16
 80040b0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80040b4:	bd30      	pop	{r4, r5, pc}
 80040b6:	bf00      	nop
 80040b8:	e000ed00 	.word	0xe000ed00
 80040bc:	20000184 	.word	0x20000184
 80040c0:	1ffffffc 	.word	0x1ffffffc

080040c4 <HAL_PWR_EnterSLEEPMode>:
 80040c4:	4a06      	ldr	r2, [pc, #24]	; (80040e0 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80040c6:	6913      	ldr	r3, [r2, #16]
 80040c8:	2901      	cmp	r1, #1
 80040ca:	f023 0304 	bic.w	r3, r3, #4
 80040ce:	6113      	str	r3, [r2, #16]
 80040d0:	d101      	bne.n	80040d6 <HAL_PWR_EnterSLEEPMode+0x12>
 80040d2:	bf30      	wfi
 80040d4:	4770      	bx	lr
 80040d6:	bf40      	sev
 80040d8:	bf20      	wfe
 80040da:	bf20      	wfe
 80040dc:	4770      	bx	lr
 80040de:	bf00      	nop
 80040e0:	e000ed00 	.word	0xe000ed00

080040e4 <HAL_TIM_OC_MspInit>:
 80040e4:	4770      	bx	lr
	...

080040e8 <TIM_Base_SetConfig>:
 80040e8:	4a21      	ldr	r2, [pc, #132]	; (8004170 <TIM_Base_SetConfig+0x88>)
 80040ea:	6803      	ldr	r3, [r0, #0]
 80040ec:	4290      	cmp	r0, r2
 80040ee:	b510      	push	{r4, lr}
 80040f0:	d005      	beq.n	80040fe <TIM_Base_SetConfig+0x16>
 80040f2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80040f6:	d002      	beq.n	80040fe <TIM_Base_SetConfig+0x16>
 80040f8:	4c1e      	ldr	r4, [pc, #120]	; (8004174 <TIM_Base_SetConfig+0x8c>)
 80040fa:	42a0      	cmp	r0, r4
 80040fc:	d10c      	bne.n	8004118 <TIM_Base_SetConfig+0x30>
 80040fe:	684c      	ldr	r4, [r1, #4]
 8004100:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004104:	4290      	cmp	r0, r2
 8004106:	ea43 0304 	orr.w	r3, r3, r4
 800410a:	d010      	beq.n	800412e <TIM_Base_SetConfig+0x46>
 800410c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004110:	d00d      	beq.n	800412e <TIM_Base_SetConfig+0x46>
 8004112:	4a18      	ldr	r2, [pc, #96]	; (8004174 <TIM_Base_SetConfig+0x8c>)
 8004114:	4290      	cmp	r0, r2
 8004116:	d00a      	beq.n	800412e <TIM_Base_SetConfig+0x46>
 8004118:	4a17      	ldr	r2, [pc, #92]	; (8004178 <TIM_Base_SetConfig+0x90>)
 800411a:	4290      	cmp	r0, r2
 800411c:	d007      	beq.n	800412e <TIM_Base_SetConfig+0x46>
 800411e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004122:	4290      	cmp	r0, r2
 8004124:	d003      	beq.n	800412e <TIM_Base_SetConfig+0x46>
 8004126:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800412a:	4290      	cmp	r0, r2
 800412c:	d103      	bne.n	8004136 <TIM_Base_SetConfig+0x4e>
 800412e:	68ca      	ldr	r2, [r1, #12]
 8004130:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004134:	4313      	orrs	r3, r2
 8004136:	694a      	ldr	r2, [r1, #20]
 8004138:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800413c:	4313      	orrs	r3, r2
 800413e:	6003      	str	r3, [r0, #0]
 8004140:	688b      	ldr	r3, [r1, #8]
 8004142:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004144:	680b      	ldr	r3, [r1, #0]
 8004146:	6283      	str	r3, [r0, #40]	; 0x28
 8004148:	4b09      	ldr	r3, [pc, #36]	; (8004170 <TIM_Base_SetConfig+0x88>)
 800414a:	4298      	cmp	r0, r3
 800414c:	d00b      	beq.n	8004166 <TIM_Base_SetConfig+0x7e>
 800414e:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 8004152:	4298      	cmp	r0, r3
 8004154:	d007      	beq.n	8004166 <TIM_Base_SetConfig+0x7e>
 8004156:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800415a:	4298      	cmp	r0, r3
 800415c:	d003      	beq.n	8004166 <TIM_Base_SetConfig+0x7e>
 800415e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004162:	4298      	cmp	r0, r3
 8004164:	d101      	bne.n	800416a <TIM_Base_SetConfig+0x82>
 8004166:	690b      	ldr	r3, [r1, #16]
 8004168:	6303      	str	r3, [r0, #48]	; 0x30
 800416a:	2301      	movs	r3, #1
 800416c:	6143      	str	r3, [r0, #20]
 800416e:	bd10      	pop	{r4, pc}
 8004170:	40012c00 	.word	0x40012c00
 8004174:	40000400 	.word	0x40000400
 8004178:	40014000 	.word	0x40014000

0800417c <HAL_TIM_OC_Init>:
 800417c:	b510      	push	{r4, lr}
 800417e:	4604      	mov	r4, r0
 8004180:	b1a0      	cbz	r0, 80041ac <HAL_TIM_OC_Init+0x30>
 8004182:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004186:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800418a:	b91b      	cbnz	r3, 8004194 <HAL_TIM_OC_Init+0x18>
 800418c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8004190:	f7ff ffa8 	bl	80040e4 <HAL_TIM_OC_MspInit>
 8004194:	2302      	movs	r3, #2
 8004196:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800419a:	6820      	ldr	r0, [r4, #0]
 800419c:	1d21      	adds	r1, r4, #4
 800419e:	f7ff ffa3 	bl	80040e8 <TIM_Base_SetConfig>
 80041a2:	2301      	movs	r3, #1
 80041a4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80041a8:	2000      	movs	r0, #0
 80041aa:	bd10      	pop	{r4, pc}
 80041ac:	2001      	movs	r0, #1
 80041ae:	bd10      	pop	{r4, pc}

080041b0 <TIM_CCxChannelCmd>:
 80041b0:	6a03      	ldr	r3, [r0, #32]
 80041b2:	b510      	push	{r4, lr}
 80041b4:	2401      	movs	r4, #1
 80041b6:	408c      	lsls	r4, r1
 80041b8:	ea23 0304 	bic.w	r3, r3, r4
 80041bc:	6203      	str	r3, [r0, #32]
 80041be:	6a03      	ldr	r3, [r0, #32]
 80041c0:	408a      	lsls	r2, r1
 80041c2:	431a      	orrs	r2, r3
 80041c4:	6202      	str	r2, [r0, #32]
 80041c6:	bd10      	pop	{r4, pc}

080041c8 <HAL_TIM_PWM_Start>:
 80041c8:	b510      	push	{r4, lr}
 80041ca:	4604      	mov	r4, r0
 80041cc:	2201      	movs	r2, #1
 80041ce:	6800      	ldr	r0, [r0, #0]
 80041d0:	f7ff ffee 	bl	80041b0 <TIM_CCxChannelCmd>
 80041d4:	6823      	ldr	r3, [r4, #0]
 80041d6:	4a0c      	ldr	r2, [pc, #48]	; (8004208 <HAL_TIM_PWM_Start+0x40>)
 80041d8:	4293      	cmp	r3, r2
 80041da:	d00b      	beq.n	80041f4 <HAL_TIM_PWM_Start+0x2c>
 80041dc:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 80041e0:	4293      	cmp	r3, r2
 80041e2:	d007      	beq.n	80041f4 <HAL_TIM_PWM_Start+0x2c>
 80041e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80041e8:	4293      	cmp	r3, r2
 80041ea:	d003      	beq.n	80041f4 <HAL_TIM_PWM_Start+0x2c>
 80041ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80041f0:	4293      	cmp	r3, r2
 80041f2:	d103      	bne.n	80041fc <HAL_TIM_PWM_Start+0x34>
 80041f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80041f6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80041fa:	645a      	str	r2, [r3, #68]	; 0x44
 80041fc:	681a      	ldr	r2, [r3, #0]
 80041fe:	f042 0201 	orr.w	r2, r2, #1
 8004202:	601a      	str	r2, [r3, #0]
 8004204:	2000      	movs	r0, #0
 8004206:	bd10      	pop	{r4, pc}
 8004208:	40012c00 	.word	0x40012c00

0800420c <HAL_TIM_OC_Start>:
 800420c:	f7ff bfdc 	b.w	80041c8 <HAL_TIM_PWM_Start>

08004210 <HAL_MspInit>:
 8004210:	4770      	bx	lr
	...

08004214 <HAL_Init>:
 8004214:	4a07      	ldr	r2, [pc, #28]	; (8004234 <HAL_Init+0x20>)
 8004216:	b508      	push	{r3, lr}
 8004218:	6813      	ldr	r3, [r2, #0]
 800421a:	f043 0310 	orr.w	r3, r3, #16
 800421e:	6013      	str	r3, [r2, #0]
 8004220:	2003      	movs	r0, #3
 8004222:	f000 fe53 	bl	8004ecc <HAL_NVIC_SetPriorityGrouping>
 8004226:	200f      	movs	r0, #15
 8004228:	f7ff f816 	bl	8003258 <HAL_InitTick>
 800422c:	f7ff fff0 	bl	8004210 <HAL_MspInit>
 8004230:	2000      	movs	r0, #0
 8004232:	bd08      	pop	{r3, pc}
 8004234:	40022000 	.word	0x40022000

08004238 <HAL_IncTick>:
 8004238:	4a02      	ldr	r2, [pc, #8]	; (8004244 <HAL_IncTick+0xc>)
 800423a:	6813      	ldr	r3, [r2, #0]
 800423c:	3301      	adds	r3, #1
 800423e:	6013      	str	r3, [r2, #0]
 8004240:	4770      	bx	lr
 8004242:	bf00      	nop
 8004244:	20002020 	.word	0x20002020

08004248 <HAL_GetTick>:
 8004248:	4b01      	ldr	r3, [pc, #4]	; (8004250 <HAL_GetTick+0x8>)
 800424a:	6818      	ldr	r0, [r3, #0]
 800424c:	4770      	bx	lr
 800424e:	bf00      	nop
 8004250:	20002020 	.word	0x20002020

08004254 <HAL_CAN_ConfigFilter>:
 8004254:	6803      	ldr	r3, [r0, #0]
 8004256:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 800425a:	b570      	push	{r4, r5, r6, lr}
 800425c:	f040 0001 	orr.w	r0, r0, #1
 8004260:	694c      	ldr	r4, [r1, #20]
 8004262:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8004266:	2201      	movs	r2, #1
 8004268:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
 800426c:	40a2      	lsls	r2, r4
 800426e:	43d0      	mvns	r0, r2
 8004270:	4005      	ands	r5, r0
 8004272:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c
 8004276:	69cd      	ldr	r5, [r1, #28]
 8004278:	bb85      	cbnz	r5, 80042dc <HAL_CAN_ConfigFilter+0x88>
 800427a:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 800427e:	68ce      	ldr	r6, [r1, #12]
 8004280:	4005      	ands	r5, r0
 8004282:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 8004286:	888d      	ldrh	r5, [r1, #4]
 8004288:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800428c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004290:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 8004294:	688e      	ldr	r6, [r1, #8]
 8004296:	880d      	ldrh	r5, [r1, #0]
 8004298:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800429c:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 80042a0:	698c      	ldr	r4, [r1, #24]
 80042a2:	bb6c      	cbnz	r4, 8004300 <HAL_CAN_ConfigFilter+0xac>
 80042a4:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 80042a8:	4004      	ands	r4, r0
 80042aa:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 80042ae:	690c      	ldr	r4, [r1, #16]
 80042b0:	bb54      	cbnz	r4, 8004308 <HAL_CAN_ConfigFilter+0xb4>
 80042b2:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
 80042b6:	4020      	ands	r0, r4
 80042b8:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 80042bc:	6a09      	ldr	r1, [r1, #32]
 80042be:	2901      	cmp	r1, #1
 80042c0:	bf02      	ittt	eq
 80042c2:	f8d3 121c 	ldreq.w	r1, [r3, #540]	; 0x21c
 80042c6:	430a      	orreq	r2, r1
 80042c8:	f8c3 221c 	streq.w	r2, [r3, #540]	; 0x21c
 80042cc:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 80042d0:	f022 0201 	bic.w	r2, r2, #1
 80042d4:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 80042d8:	2000      	movs	r0, #0
 80042da:	bd70      	pop	{r4, r5, r6, pc}
 80042dc:	2d01      	cmp	r5, #1
 80042de:	d1df      	bne.n	80042a0 <HAL_CAN_ConfigFilter+0x4c>
 80042e0:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 80042e4:	680e      	ldr	r6, [r1, #0]
 80042e6:	4315      	orrs	r5, r2
 80042e8:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 80042ec:	888d      	ldrh	r5, [r1, #4]
 80042ee:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 80042f2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80042f6:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80042fa:	688e      	ldr	r6, [r1, #8]
 80042fc:	898d      	ldrh	r5, [r1, #12]
 80042fe:	e7cb      	b.n	8004298 <HAL_CAN_ConfigFilter+0x44>
 8004300:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 8004304:	4314      	orrs	r4, r2
 8004306:	e7d0      	b.n	80042aa <HAL_CAN_ConfigFilter+0x56>
 8004308:	2c01      	cmp	r4, #1
 800430a:	d1d7      	bne.n	80042bc <HAL_CAN_ConfigFilter+0x68>
 800430c:	f8d3 0214 	ldr.w	r0, [r3, #532]	; 0x214
 8004310:	4310      	orrs	r0, r2
 8004312:	e7d1      	b.n	80042b8 <HAL_CAN_ConfigFilter+0x64>

08004314 <HAL_CAN_MspInit>:
 8004314:	4770      	bx	lr

08004316 <HAL_CAN_Init>:
 8004316:	b570      	push	{r4, r5, r6, lr}
 8004318:	4604      	mov	r4, r0
 800431a:	2800      	cmp	r0, #0
 800431c:	d072      	beq.n	8004404 <HAL_CAN_Init+0xee>
 800431e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004322:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004326:	b91b      	cbnz	r3, 8004330 <HAL_CAN_Init+0x1a>
 8004328:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800432c:	f7ff fff2 	bl	8004314 <HAL_CAN_MspInit>
 8004330:	2302      	movs	r3, #2
 8004332:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004336:	6823      	ldr	r3, [r4, #0]
 8004338:	681a      	ldr	r2, [r3, #0]
 800433a:	f022 0202 	bic.w	r2, r2, #2
 800433e:	601a      	str	r2, [r3, #0]
 8004340:	681a      	ldr	r2, [r3, #0]
 8004342:	f042 0201 	orr.w	r2, r2, #1
 8004346:	601a      	str	r2, [r3, #0]
 8004348:	f7ff ff7e 	bl	8004248 <HAL_GetTick>
 800434c:	4606      	mov	r6, r0
 800434e:	6823      	ldr	r3, [r4, #0]
 8004350:	685d      	ldr	r5, [r3, #4]
 8004352:	f015 0501 	ands.w	r5, r5, #1
 8004356:	d057      	beq.n	8004408 <HAL_CAN_Init+0xf2>
 8004358:	685a      	ldr	r2, [r3, #4]
 800435a:	07d1      	lsls	r1, r2, #31
 800435c:	d54f      	bpl.n	80043fe <HAL_CAN_Init+0xe8>
 800435e:	69a2      	ldr	r2, [r4, #24]
 8004360:	2a01      	cmp	r2, #1
 8004362:	681a      	ldr	r2, [r3, #0]
 8004364:	bf0c      	ite	eq
 8004366:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 800436a:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 800436e:	601a      	str	r2, [r3, #0]
 8004370:	69e2      	ldr	r2, [r4, #28]
 8004372:	2a01      	cmp	r2, #1
 8004374:	681a      	ldr	r2, [r3, #0]
 8004376:	bf0c      	ite	eq
 8004378:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 800437c:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8004380:	601a      	str	r2, [r3, #0]
 8004382:	6a22      	ldr	r2, [r4, #32]
 8004384:	2a01      	cmp	r2, #1
 8004386:	681a      	ldr	r2, [r3, #0]
 8004388:	bf0c      	ite	eq
 800438a:	f042 0220 	orreq.w	r2, r2, #32
 800438e:	f022 0220 	bicne.w	r2, r2, #32
 8004392:	601a      	str	r2, [r3, #0]
 8004394:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004396:	2a01      	cmp	r2, #1
 8004398:	681a      	ldr	r2, [r3, #0]
 800439a:	bf0c      	ite	eq
 800439c:	f042 0210 	orreq.w	r2, r2, #16
 80043a0:	f022 0210 	bicne.w	r2, r2, #16
 80043a4:	601a      	str	r2, [r3, #0]
 80043a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80043a8:	2a01      	cmp	r2, #1
 80043aa:	681a      	ldr	r2, [r3, #0]
 80043ac:	bf0c      	ite	eq
 80043ae:	f042 0208 	orreq.w	r2, r2, #8
 80043b2:	f022 0208 	bicne.w	r2, r2, #8
 80043b6:	601a      	str	r2, [r3, #0]
 80043b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80043ba:	2a01      	cmp	r2, #1
 80043bc:	681a      	ldr	r2, [r3, #0]
 80043be:	bf0c      	ite	eq
 80043c0:	f042 0204 	orreq.w	r2, r2, #4
 80043c4:	f022 0204 	bicne.w	r2, r2, #4
 80043c8:	601a      	str	r2, [r3, #0]
 80043ca:	68e1      	ldr	r1, [r4, #12]
 80043cc:	68a2      	ldr	r2, [r4, #8]
 80043ce:	430a      	orrs	r2, r1
 80043d0:	6921      	ldr	r1, [r4, #16]
 80043d2:	430a      	orrs	r2, r1
 80043d4:	6961      	ldr	r1, [r4, #20]
 80043d6:	430a      	orrs	r2, r1
 80043d8:	6861      	ldr	r1, [r4, #4]
 80043da:	3901      	subs	r1, #1
 80043dc:	430a      	orrs	r2, r1
 80043de:	61da      	str	r2, [r3, #28]
 80043e0:	681a      	ldr	r2, [r3, #0]
 80043e2:	f022 0201 	bic.w	r2, r2, #1
 80043e6:	601a      	str	r2, [r3, #0]
 80043e8:	f7ff ff2e 	bl	8004248 <HAL_GetTick>
 80043ec:	4605      	mov	r5, r0
 80043ee:	6823      	ldr	r3, [r4, #0]
 80043f0:	685a      	ldr	r2, [r3, #4]
 80043f2:	07d2      	lsls	r2, r2, #31
 80043f4:	d413      	bmi.n	800441e <HAL_CAN_Init+0x108>
 80043f6:	6858      	ldr	r0, [r3, #4]
 80043f8:	f010 0001 	ands.w	r0, r0, #1
 80043fc:	d01b      	beq.n	8004436 <HAL_CAN_Init+0x120>
 80043fe:	2304      	movs	r3, #4
 8004400:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004404:	2001      	movs	r0, #1
 8004406:	bd70      	pop	{r4, r5, r6, pc}
 8004408:	f7ff ff1e 	bl	8004248 <HAL_GetTick>
 800440c:	1b80      	subs	r0, r0, r6
 800440e:	280a      	cmp	r0, #10
 8004410:	d99d      	bls.n	800434e <HAL_CAN_Init+0x38>
 8004412:	2003      	movs	r0, #3
 8004414:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004418:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 800441c:	bd70      	pop	{r4, r5, r6, pc}
 800441e:	f7ff ff13 	bl	8004248 <HAL_GetTick>
 8004422:	1b40      	subs	r0, r0, r5
 8004424:	280a      	cmp	r0, #10
 8004426:	d9e2      	bls.n	80043ee <HAL_CAN_Init+0xd8>
 8004428:	2003      	movs	r0, #3
 800442a:	2300      	movs	r3, #0
 800442c:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004430:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004434:	bd70      	pop	{r4, r5, r6, pc}
 8004436:	2301      	movs	r3, #1
 8004438:	63e0      	str	r0, [r4, #60]	; 0x3c
 800443a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800443e:	bd70      	pop	{r4, r5, r6, pc}

08004440 <HAL_UART_MspInit>:
 8004440:	4770      	bx	lr
	...

08004444 <UART_SetConfig>:
 8004444:	b538      	push	{r3, r4, r5, lr}
 8004446:	4604      	mov	r4, r0
 8004448:	6805      	ldr	r5, [r0, #0]
 800444a:	6921      	ldr	r1, [r4, #16]
 800444c:	68a3      	ldr	r3, [r4, #8]
 800444e:	69c2      	ldr	r2, [r0, #28]
 8004450:	6828      	ldr	r0, [r5, #0]
 8004452:	430b      	orrs	r3, r1
 8004454:	6961      	ldr	r1, [r4, #20]
 8004456:	430b      	orrs	r3, r1
 8004458:	4949      	ldr	r1, [pc, #292]	; (8004580 <UART_SetConfig+0x13c>)
 800445a:	4313      	orrs	r3, r2
 800445c:	4001      	ands	r1, r0
 800445e:	430b      	orrs	r3, r1
 8004460:	602b      	str	r3, [r5, #0]
 8004462:	686b      	ldr	r3, [r5, #4]
 8004464:	68e1      	ldr	r1, [r4, #12]
 8004466:	6a20      	ldr	r0, [r4, #32]
 8004468:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800446c:	430b      	orrs	r3, r1
 800446e:	606b      	str	r3, [r5, #4]
 8004470:	68a9      	ldr	r1, [r5, #8]
 8004472:	69a3      	ldr	r3, [r4, #24]
 8004474:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 8004478:	4303      	orrs	r3, r0
 800447a:	430b      	orrs	r3, r1
 800447c:	60ab      	str	r3, [r5, #8]
 800447e:	4b41      	ldr	r3, [pc, #260]	; (8004584 <UART_SetConfig+0x140>)
 8004480:	429d      	cmp	r5, r3
 8004482:	d112      	bne.n	80044aa <UART_SetConfig+0x66>
 8004484:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8004488:	493f      	ldr	r1, [pc, #252]	; (8004588 <UART_SetConfig+0x144>)
 800448a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800448c:	f003 0303 	and.w	r3, r3, #3
 8004490:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004494:	5ccb      	ldrb	r3, [r1, r3]
 8004496:	d13b      	bne.n	8004510 <UART_SetConfig+0xcc>
 8004498:	2b08      	cmp	r3, #8
 800449a:	d836      	bhi.n	800450a <UART_SetConfig+0xc6>
 800449c:	e8df f003 	tbb	[pc, r3]
 80044a0:	3524210f 	.word	0x3524210f
 80044a4:	3535352d 	.word	0x3535352d
 80044a8:	30          	.byte	0x30
 80044a9:	00          	.byte	0x00
 80044aa:	4b38      	ldr	r3, [pc, #224]	; (800458c <UART_SetConfig+0x148>)
 80044ac:	429d      	cmp	r5, r3
 80044ae:	d003      	beq.n	80044b8 <UART_SetConfig+0x74>
 80044b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80044b4:	429d      	cmp	r5, r3
 80044b6:	d15e      	bne.n	8004576 <UART_SetConfig+0x132>
 80044b8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80044bc:	d131      	bne.n	8004522 <UART_SetConfig+0xde>
 80044be:	f000 fcb7 	bl	8004e30 <HAL_RCC_GetPCLK1Freq>
 80044c2:	6861      	ldr	r1, [r4, #4]
 80044c4:	084a      	lsrs	r2, r1, #1
 80044c6:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 80044ca:	fbb3 f3f1 	udiv	r3, r3, r1
 80044ce:	b29b      	uxth	r3, r3
 80044d0:	2000      	movs	r0, #0
 80044d2:	f023 020f 	bic.w	r2, r3, #15
 80044d6:	6821      	ldr	r1, [r4, #0]
 80044d8:	f3c3 0342 	ubfx	r3, r3, #1, #3
 80044dc:	4313      	orrs	r3, r2
 80044de:	60cb      	str	r3, [r1, #12]
 80044e0:	bd38      	pop	{r3, r4, r5, pc}
 80044e2:	f000 fcbd 	bl	8004e60 <HAL_RCC_GetPCLK2Freq>
 80044e6:	e7ec      	b.n	80044c2 <UART_SetConfig+0x7e>
 80044e8:	6860      	ldr	r0, [r4, #4]
 80044ea:	0843      	lsrs	r3, r0, #1
 80044ec:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 80044f0:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 80044f4:	fbb3 f3f0 	udiv	r3, r3, r0
 80044f8:	e7e9      	b.n	80044ce <UART_SetConfig+0x8a>
 80044fa:	f000 fba5 	bl	8004c48 <HAL_RCC_GetSysClockFreq>
 80044fe:	e7e0      	b.n	80044c2 <UART_SetConfig+0x7e>
 8004500:	6860      	ldr	r0, [r4, #4]
 8004502:	0843      	lsrs	r3, r0, #1
 8004504:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004508:	e7f4      	b.n	80044f4 <UART_SetConfig+0xb0>
 800450a:	2001      	movs	r0, #1
 800450c:	2300      	movs	r3, #0
 800450e:	e7e0      	b.n	80044d2 <UART_SetConfig+0x8e>
 8004510:	2b08      	cmp	r3, #8
 8004512:	d833      	bhi.n	800457c <UART_SetConfig+0x138>
 8004514:	e8df f003 	tbb	[pc, r3]
 8004518:	321b1005 	.word	0x321b1005
 800451c:	32323227 	.word	0x32323227
 8004520:	2a          	.byte	0x2a
 8004521:	00          	.byte	0x00
 8004522:	f000 fc85 	bl	8004e30 <HAL_RCC_GetPCLK1Freq>
 8004526:	6863      	ldr	r3, [r4, #4]
 8004528:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 800452c:	fbb0 f0f3 	udiv	r0, r0, r3
 8004530:	b280      	uxth	r0, r0
 8004532:	60e8      	str	r0, [r5, #12]
 8004534:	2000      	movs	r0, #0
 8004536:	bd38      	pop	{r3, r4, r5, pc}
 8004538:	f000 fc92 	bl	8004e60 <HAL_RCC_GetPCLK2Freq>
 800453c:	6863      	ldr	r3, [r4, #4]
 800453e:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004542:	fbb0 f0f3 	udiv	r0, r0, r3
 8004546:	4b0f      	ldr	r3, [pc, #60]	; (8004584 <UART_SetConfig+0x140>)
 8004548:	b280      	uxth	r0, r0
 800454a:	60d8      	str	r0, [r3, #12]
 800454c:	e7f2      	b.n	8004534 <UART_SetConfig+0xf0>
 800454e:	6862      	ldr	r2, [r4, #4]
 8004550:	0853      	lsrs	r3, r2, #1
 8004552:	f503 03f4 	add.w	r3, r3, #7995392	; 0x7a0000
 8004556:	f503 5390 	add.w	r3, r3, #4608	; 0x1200
 800455a:	fbb3 f3f2 	udiv	r3, r3, r2
 800455e:	4a09      	ldr	r2, [pc, #36]	; (8004584 <UART_SetConfig+0x140>)
 8004560:	b29b      	uxth	r3, r3
 8004562:	60d3      	str	r3, [r2, #12]
 8004564:	e7e6      	b.n	8004534 <UART_SetConfig+0xf0>
 8004566:	f000 fb6f 	bl	8004c48 <HAL_RCC_GetSysClockFreq>
 800456a:	e7e7      	b.n	800453c <UART_SetConfig+0xf8>
 800456c:	6862      	ldr	r2, [r4, #4]
 800456e:	0853      	lsrs	r3, r2, #1
 8004570:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8004574:	e7f1      	b.n	800455a <UART_SetConfig+0x116>
 8004576:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800457a:	d0c6      	beq.n	800450a <UART_SetConfig+0xc6>
 800457c:	2001      	movs	r0, #1
 800457e:	bd38      	pop	{r3, r4, r5, pc}
 8004580:	efff69f3 	.word	0xefff69f3
 8004584:	40013800 	.word	0x40013800
 8004588:	080073d0 	.word	0x080073d0
 800458c:	40004400 	.word	0x40004400

08004590 <UART_AdvFeatureConfig>:
 8004590:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004592:	07da      	lsls	r2, r3, #31
 8004594:	b510      	push	{r4, lr}
 8004596:	d506      	bpl.n	80045a6 <UART_AdvFeatureConfig+0x16>
 8004598:	6801      	ldr	r1, [r0, #0]
 800459a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800459c:	684a      	ldr	r2, [r1, #4]
 800459e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80045a2:	4322      	orrs	r2, r4
 80045a4:	604a      	str	r2, [r1, #4]
 80045a6:	079c      	lsls	r4, r3, #30
 80045a8:	d506      	bpl.n	80045b8 <UART_AdvFeatureConfig+0x28>
 80045aa:	6801      	ldr	r1, [r0, #0]
 80045ac:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80045ae:	684a      	ldr	r2, [r1, #4]
 80045b0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80045b4:	4322      	orrs	r2, r4
 80045b6:	604a      	str	r2, [r1, #4]
 80045b8:	0759      	lsls	r1, r3, #29
 80045ba:	d506      	bpl.n	80045ca <UART_AdvFeatureConfig+0x3a>
 80045bc:	6801      	ldr	r1, [r0, #0]
 80045be:	6b04      	ldr	r4, [r0, #48]	; 0x30
 80045c0:	684a      	ldr	r2, [r1, #4]
 80045c2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80045c6:	4322      	orrs	r2, r4
 80045c8:	604a      	str	r2, [r1, #4]
 80045ca:	071a      	lsls	r2, r3, #28
 80045cc:	d506      	bpl.n	80045dc <UART_AdvFeatureConfig+0x4c>
 80045ce:	6801      	ldr	r1, [r0, #0]
 80045d0:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80045d2:	684a      	ldr	r2, [r1, #4]
 80045d4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80045d8:	4322      	orrs	r2, r4
 80045da:	604a      	str	r2, [r1, #4]
 80045dc:	06dc      	lsls	r4, r3, #27
 80045de:	d506      	bpl.n	80045ee <UART_AdvFeatureConfig+0x5e>
 80045e0:	6801      	ldr	r1, [r0, #0]
 80045e2:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80045e4:	688a      	ldr	r2, [r1, #8]
 80045e6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80045ea:	4322      	orrs	r2, r4
 80045ec:	608a      	str	r2, [r1, #8]
 80045ee:	0699      	lsls	r1, r3, #26
 80045f0:	d506      	bpl.n	8004600 <UART_AdvFeatureConfig+0x70>
 80045f2:	6801      	ldr	r1, [r0, #0]
 80045f4:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80045f6:	688a      	ldr	r2, [r1, #8]
 80045f8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80045fc:	4322      	orrs	r2, r4
 80045fe:	608a      	str	r2, [r1, #8]
 8004600:	065a      	lsls	r2, r3, #25
 8004602:	d50f      	bpl.n	8004624 <UART_AdvFeatureConfig+0x94>
 8004604:	6801      	ldr	r1, [r0, #0]
 8004606:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004608:	684a      	ldr	r2, [r1, #4]
 800460a:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800460e:	4322      	orrs	r2, r4
 8004610:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004614:	604a      	str	r2, [r1, #4]
 8004616:	d105      	bne.n	8004624 <UART_AdvFeatureConfig+0x94>
 8004618:	684a      	ldr	r2, [r1, #4]
 800461a:	6c44      	ldr	r4, [r0, #68]	; 0x44
 800461c:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004620:	4322      	orrs	r2, r4
 8004622:	604a      	str	r2, [r1, #4]
 8004624:	061b      	lsls	r3, r3, #24
 8004626:	d506      	bpl.n	8004636 <UART_AdvFeatureConfig+0xa6>
 8004628:	6802      	ldr	r2, [r0, #0]
 800462a:	6c81      	ldr	r1, [r0, #72]	; 0x48
 800462c:	6853      	ldr	r3, [r2, #4]
 800462e:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004632:	430b      	orrs	r3, r1
 8004634:	6053      	str	r3, [r2, #4]
 8004636:	bd10      	pop	{r4, pc}

08004638 <UART_WaitOnFlagUntilTimeout>:
 8004638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800463c:	9d06      	ldr	r5, [sp, #24]
 800463e:	4604      	mov	r4, r0
 8004640:	460f      	mov	r7, r1
 8004642:	4616      	mov	r6, r2
 8004644:	4698      	mov	r8, r3
 8004646:	6821      	ldr	r1, [r4, #0]
 8004648:	69ca      	ldr	r2, [r1, #28]
 800464a:	ea37 0302 	bics.w	r3, r7, r2
 800464e:	bf0c      	ite	eq
 8004650:	2201      	moveq	r2, #1
 8004652:	2200      	movne	r2, #0
 8004654:	42b2      	cmp	r2, r6
 8004656:	d002      	beq.n	800465e <UART_WaitOnFlagUntilTimeout+0x26>
 8004658:	2000      	movs	r0, #0
 800465a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800465e:	1c6b      	adds	r3, r5, #1
 8004660:	d0f2      	beq.n	8004648 <UART_WaitOnFlagUntilTimeout+0x10>
 8004662:	b99d      	cbnz	r5, 800468c <UART_WaitOnFlagUntilTimeout+0x54>
 8004664:	6823      	ldr	r3, [r4, #0]
 8004666:	681a      	ldr	r2, [r3, #0]
 8004668:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800466c:	601a      	str	r2, [r3, #0]
 800466e:	689a      	ldr	r2, [r3, #8]
 8004670:	f022 0201 	bic.w	r2, r2, #1
 8004674:	609a      	str	r2, [r3, #8]
 8004676:	2320      	movs	r3, #32
 8004678:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800467c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004680:	2300      	movs	r3, #0
 8004682:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8004686:	2003      	movs	r0, #3
 8004688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800468c:	f7ff fddc 	bl	8004248 <HAL_GetTick>
 8004690:	eba0 0008 	sub.w	r0, r0, r8
 8004694:	4285      	cmp	r5, r0
 8004696:	d2d6      	bcs.n	8004646 <UART_WaitOnFlagUntilTimeout+0xe>
 8004698:	e7e4      	b.n	8004664 <UART_WaitOnFlagUntilTimeout+0x2c>

0800469a <UART_CheckIdleState>:
 800469a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800469c:	4604      	mov	r4, r0
 800469e:	2600      	movs	r6, #0
 80046a0:	66c6      	str	r6, [r0, #108]	; 0x6c
 80046a2:	f7ff fdd1 	bl	8004248 <HAL_GetTick>
 80046a6:	6823      	ldr	r3, [r4, #0]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	071a      	lsls	r2, r3, #28
 80046ac:	4605      	mov	r5, r0
 80046ae:	d417      	bmi.n	80046e0 <UART_CheckIdleState+0x46>
 80046b0:	6823      	ldr	r3, [r4, #0]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	075b      	lsls	r3, r3, #29
 80046b6:	d50a      	bpl.n	80046ce <UART_CheckIdleState+0x34>
 80046b8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80046bc:	9300      	str	r3, [sp, #0]
 80046be:	2200      	movs	r2, #0
 80046c0:	462b      	mov	r3, r5
 80046c2:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80046c6:	4620      	mov	r0, r4
 80046c8:	f7ff ffb6 	bl	8004638 <UART_WaitOnFlagUntilTimeout>
 80046cc:	b9a0      	cbnz	r0, 80046f8 <UART_CheckIdleState+0x5e>
 80046ce:	2320      	movs	r3, #32
 80046d0:	2000      	movs	r0, #0
 80046d2:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80046d6:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 80046da:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80046de:	e00c      	b.n	80046fa <UART_CheckIdleState+0x60>
 80046e0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80046e4:	9300      	str	r3, [sp, #0]
 80046e6:	4632      	mov	r2, r6
 80046e8:	4603      	mov	r3, r0
 80046ea:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80046ee:	4620      	mov	r0, r4
 80046f0:	f7ff ffa2 	bl	8004638 <UART_WaitOnFlagUntilTimeout>
 80046f4:	2800      	cmp	r0, #0
 80046f6:	d0db      	beq.n	80046b0 <UART_CheckIdleState+0x16>
 80046f8:	2003      	movs	r0, #3
 80046fa:	b002      	add	sp, #8
 80046fc:	bd70      	pop	{r4, r5, r6, pc}

080046fe <HAL_UART_Init>:
 80046fe:	b510      	push	{r4, lr}
 8004700:	4604      	mov	r4, r0
 8004702:	b360      	cbz	r0, 800475e <HAL_UART_Init+0x60>
 8004704:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 8004708:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800470c:	b91b      	cbnz	r3, 8004716 <HAL_UART_Init+0x18>
 800470e:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 8004712:	f7ff fe95 	bl	8004440 <HAL_UART_MspInit>
 8004716:	6822      	ldr	r2, [r4, #0]
 8004718:	2324      	movs	r3, #36	; 0x24
 800471a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800471e:	6813      	ldr	r3, [r2, #0]
 8004720:	f023 0301 	bic.w	r3, r3, #1
 8004724:	6013      	str	r3, [r2, #0]
 8004726:	4620      	mov	r0, r4
 8004728:	f7ff fe8c 	bl	8004444 <UART_SetConfig>
 800472c:	2801      	cmp	r0, #1
 800472e:	d016      	beq.n	800475e <HAL_UART_Init+0x60>
 8004730:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004732:	b113      	cbz	r3, 800473a <HAL_UART_Init+0x3c>
 8004734:	4620      	mov	r0, r4
 8004736:	f7ff ff2b 	bl	8004590 <UART_AdvFeatureConfig>
 800473a:	6823      	ldr	r3, [r4, #0]
 800473c:	685a      	ldr	r2, [r3, #4]
 800473e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004742:	605a      	str	r2, [r3, #4]
 8004744:	689a      	ldr	r2, [r3, #8]
 8004746:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800474a:	609a      	str	r2, [r3, #8]
 800474c:	681a      	ldr	r2, [r3, #0]
 800474e:	f042 0201 	orr.w	r2, r2, #1
 8004752:	4620      	mov	r0, r4
 8004754:	601a      	str	r2, [r3, #0]
 8004756:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800475a:	f7ff bf9e 	b.w	800469a <UART_CheckIdleState>
 800475e:	2001      	movs	r0, #1
 8004760:	bd10      	pop	{r4, pc}
	...

08004764 <HAL_RCC_OscConfig>:
 8004764:	6803      	ldr	r3, [r0, #0]
 8004766:	07da      	lsls	r2, r3, #31
 8004768:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 800476c:	4605      	mov	r5, r0
 800476e:	d411      	bmi.n	8004794 <HAL_RCC_OscConfig+0x30>
 8004770:	682b      	ldr	r3, [r5, #0]
 8004772:	079b      	lsls	r3, r3, #30
 8004774:	f100 8088 	bmi.w	8004888 <HAL_RCC_OscConfig+0x124>
 8004778:	682b      	ldr	r3, [r5, #0]
 800477a:	071c      	lsls	r4, r3, #28
 800477c:	f100 80f8 	bmi.w	8004970 <HAL_RCC_OscConfig+0x20c>
 8004780:	682b      	ldr	r3, [r5, #0]
 8004782:	0758      	lsls	r0, r3, #29
 8004784:	f100 8141 	bmi.w	8004a0a <HAL_RCC_OscConfig+0x2a6>
 8004788:	69ea      	ldr	r2, [r5, #28]
 800478a:	2a00      	cmp	r2, #0
 800478c:	f040 81d7 	bne.w	8004b3e <HAL_RCC_OscConfig+0x3da>
 8004790:	2000      	movs	r0, #0
 8004792:	e021      	b.n	80047d8 <HAL_RCC_OscConfig+0x74>
 8004794:	4cba      	ldr	r4, [pc, #744]	; (8004a80 <HAL_RCC_OscConfig+0x31c>)
 8004796:	6863      	ldr	r3, [r4, #4]
 8004798:	f003 030c 	and.w	r3, r3, #12
 800479c:	2b04      	cmp	r3, #4
 800479e:	d007      	beq.n	80047b0 <HAL_RCC_OscConfig+0x4c>
 80047a0:	6863      	ldr	r3, [r4, #4]
 80047a2:	f003 030c 	and.w	r3, r3, #12
 80047a6:	2b08      	cmp	r3, #8
 80047a8:	d119      	bne.n	80047de <HAL_RCC_OscConfig+0x7a>
 80047aa:	6863      	ldr	r3, [r4, #4]
 80047ac:	03df      	lsls	r7, r3, #15
 80047ae:	d516      	bpl.n	80047de <HAL_RCC_OscConfig+0x7a>
 80047b0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80047b4:	fa93 f2a3 	rbit	r2, r3
 80047b8:	6821      	ldr	r1, [r4, #0]
 80047ba:	fa93 f3a3 	rbit	r3, r3
 80047be:	fab3 f383 	clz	r3, r3
 80047c2:	f003 031f 	and.w	r3, r3, #31
 80047c6:	2201      	movs	r2, #1
 80047c8:	fa02 f303 	lsl.w	r3, r2, r3
 80047cc:	420b      	tst	r3, r1
 80047ce:	d0cf      	beq.n	8004770 <HAL_RCC_OscConfig+0xc>
 80047d0:	686b      	ldr	r3, [r5, #4]
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d1cc      	bne.n	8004770 <HAL_RCC_OscConfig+0xc>
 80047d6:	2001      	movs	r0, #1
 80047d8:	b002      	add	sp, #8
 80047da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80047de:	686a      	ldr	r2, [r5, #4]
 80047e0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80047e4:	d125      	bne.n	8004832 <HAL_RCC_OscConfig+0xce>
 80047e6:	6823      	ldr	r3, [r4, #0]
 80047e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80047ec:	6023      	str	r3, [r4, #0]
 80047ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80047f0:	68a9      	ldr	r1, [r5, #8]
 80047f2:	f023 030f 	bic.w	r3, r3, #15
 80047f6:	430b      	orrs	r3, r1
 80047f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80047fa:	b352      	cbz	r2, 8004852 <HAL_RCC_OscConfig+0xee>
 80047fc:	f7ff fd24 	bl	8004248 <HAL_GetTick>
 8004800:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8004804:	4680      	mov	r8, r0
 8004806:	2701      	movs	r7, #1
 8004808:	fa96 f3a6 	rbit	r3, r6
 800480c:	6822      	ldr	r2, [r4, #0]
 800480e:	fa96 f3a6 	rbit	r3, r6
 8004812:	fab3 f383 	clz	r3, r3
 8004816:	f003 031f 	and.w	r3, r3, #31
 800481a:	fa07 f303 	lsl.w	r3, r7, r3
 800481e:	4213      	tst	r3, r2
 8004820:	d1a6      	bne.n	8004770 <HAL_RCC_OscConfig+0xc>
 8004822:	f7ff fd11 	bl	8004248 <HAL_GetTick>
 8004826:	eba0 0008 	sub.w	r0, r0, r8
 800482a:	2864      	cmp	r0, #100	; 0x64
 800482c:	d9ec      	bls.n	8004808 <HAL_RCC_OscConfig+0xa4>
 800482e:	2003      	movs	r0, #3
 8004830:	e7d2      	b.n	80047d8 <HAL_RCC_OscConfig+0x74>
 8004832:	6823      	ldr	r3, [r4, #0]
 8004834:	b932      	cbnz	r2, 8004844 <HAL_RCC_OscConfig+0xe0>
 8004836:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800483a:	6023      	str	r3, [r4, #0]
 800483c:	6823      	ldr	r3, [r4, #0]
 800483e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004842:	e7d3      	b.n	80047ec <HAL_RCC_OscConfig+0x88>
 8004844:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8004848:	d1f5      	bne.n	8004836 <HAL_RCC_OscConfig+0xd2>
 800484a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800484e:	6023      	str	r3, [r4, #0]
 8004850:	e7c9      	b.n	80047e6 <HAL_RCC_OscConfig+0x82>
 8004852:	f7ff fcf9 	bl	8004248 <HAL_GetTick>
 8004856:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 800485a:	4680      	mov	r8, r0
 800485c:	2701      	movs	r7, #1
 800485e:	fa96 f3a6 	rbit	r3, r6
 8004862:	6822      	ldr	r2, [r4, #0]
 8004864:	fa96 f3a6 	rbit	r3, r6
 8004868:	fab3 f383 	clz	r3, r3
 800486c:	f003 031f 	and.w	r3, r3, #31
 8004870:	fa07 f303 	lsl.w	r3, r7, r3
 8004874:	4213      	tst	r3, r2
 8004876:	f43f af7b 	beq.w	8004770 <HAL_RCC_OscConfig+0xc>
 800487a:	f7ff fce5 	bl	8004248 <HAL_GetTick>
 800487e:	eba0 0008 	sub.w	r0, r0, r8
 8004882:	2864      	cmp	r0, #100	; 0x64
 8004884:	d9eb      	bls.n	800485e <HAL_RCC_OscConfig+0xfa>
 8004886:	e7d2      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004888:	4c7d      	ldr	r4, [pc, #500]	; (8004a80 <HAL_RCC_OscConfig+0x31c>)
 800488a:	6863      	ldr	r3, [r4, #4]
 800488c:	f013 0f0c 	tst.w	r3, #12
 8004890:	d007      	beq.n	80048a2 <HAL_RCC_OscConfig+0x13e>
 8004892:	6863      	ldr	r3, [r4, #4]
 8004894:	f003 030c 	and.w	r3, r3, #12
 8004898:	2b08      	cmp	r3, #8
 800489a:	d121      	bne.n	80048e0 <HAL_RCC_OscConfig+0x17c>
 800489c:	6863      	ldr	r3, [r4, #4]
 800489e:	03de      	lsls	r6, r3, #15
 80048a0:	d41e      	bmi.n	80048e0 <HAL_RCC_OscConfig+0x17c>
 80048a2:	2302      	movs	r3, #2
 80048a4:	fa93 f2a3 	rbit	r2, r3
 80048a8:	6821      	ldr	r1, [r4, #0]
 80048aa:	fa93 f3a3 	rbit	r3, r3
 80048ae:	fab3 f383 	clz	r3, r3
 80048b2:	f003 031f 	and.w	r3, r3, #31
 80048b6:	2201      	movs	r2, #1
 80048b8:	fa02 f303 	lsl.w	r3, r2, r3
 80048bc:	420b      	tst	r3, r1
 80048be:	d002      	beq.n	80048c6 <HAL_RCC_OscConfig+0x162>
 80048c0:	692b      	ldr	r3, [r5, #16]
 80048c2:	4293      	cmp	r3, r2
 80048c4:	d187      	bne.n	80047d6 <HAL_RCC_OscConfig+0x72>
 80048c6:	6821      	ldr	r1, [r4, #0]
 80048c8:	23f8      	movs	r3, #248	; 0xf8
 80048ca:	fa93 f3a3 	rbit	r3, r3
 80048ce:	fab3 f283 	clz	r2, r3
 80048d2:	696b      	ldr	r3, [r5, #20]
 80048d4:	4093      	lsls	r3, r2
 80048d6:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 80048da:	4313      	orrs	r3, r2
 80048dc:	6023      	str	r3, [r4, #0]
 80048de:	e74b      	b.n	8004778 <HAL_RCC_OscConfig+0x14>
 80048e0:	692a      	ldr	r2, [r5, #16]
 80048e2:	2601      	movs	r6, #1
 80048e4:	b30a      	cbz	r2, 800492a <HAL_RCC_OscConfig+0x1c6>
 80048e6:	fa96 f3a6 	rbit	r3, r6
 80048ea:	fab3 f383 	clz	r3, r3
 80048ee:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80048f2:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80048f6:	009b      	lsls	r3, r3, #2
 80048f8:	2702      	movs	r7, #2
 80048fa:	601e      	str	r6, [r3, #0]
 80048fc:	f7ff fca4 	bl	8004248 <HAL_GetTick>
 8004900:	4680      	mov	r8, r0
 8004902:	fa97 f3a7 	rbit	r3, r7
 8004906:	6822      	ldr	r2, [r4, #0]
 8004908:	fa97 f3a7 	rbit	r3, r7
 800490c:	fab3 f383 	clz	r3, r3
 8004910:	f003 031f 	and.w	r3, r3, #31
 8004914:	fa06 f303 	lsl.w	r3, r6, r3
 8004918:	4213      	tst	r3, r2
 800491a:	d1d4      	bne.n	80048c6 <HAL_RCC_OscConfig+0x162>
 800491c:	f7ff fc94 	bl	8004248 <HAL_GetTick>
 8004920:	eba0 0008 	sub.w	r0, r0, r8
 8004924:	2802      	cmp	r0, #2
 8004926:	d9ec      	bls.n	8004902 <HAL_RCC_OscConfig+0x19e>
 8004928:	e781      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 800492a:	fa96 f3a6 	rbit	r3, r6
 800492e:	fab3 f383 	clz	r3, r3
 8004932:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004936:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800493a:	009b      	lsls	r3, r3, #2
 800493c:	2702      	movs	r7, #2
 800493e:	601a      	str	r2, [r3, #0]
 8004940:	f7ff fc82 	bl	8004248 <HAL_GetTick>
 8004944:	4680      	mov	r8, r0
 8004946:	fa97 f3a7 	rbit	r3, r7
 800494a:	6822      	ldr	r2, [r4, #0]
 800494c:	fa97 f3a7 	rbit	r3, r7
 8004950:	fab3 f383 	clz	r3, r3
 8004954:	f003 031f 	and.w	r3, r3, #31
 8004958:	fa06 f303 	lsl.w	r3, r6, r3
 800495c:	4213      	tst	r3, r2
 800495e:	f43f af0b 	beq.w	8004778 <HAL_RCC_OscConfig+0x14>
 8004962:	f7ff fc71 	bl	8004248 <HAL_GetTick>
 8004966:	eba0 0008 	sub.w	r0, r0, r8
 800496a:	2802      	cmp	r0, #2
 800496c:	d9eb      	bls.n	8004946 <HAL_RCC_OscConfig+0x1e2>
 800496e:	e75e      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004970:	69aa      	ldr	r2, [r5, #24]
 8004972:	4e43      	ldr	r6, [pc, #268]	; (8004a80 <HAL_RCC_OscConfig+0x31c>)
 8004974:	4943      	ldr	r1, [pc, #268]	; (8004a84 <HAL_RCC_OscConfig+0x320>)
 8004976:	2401      	movs	r4, #1
 8004978:	b31a      	cbz	r2, 80049c2 <HAL_RCC_OscConfig+0x25e>
 800497a:	fa94 f3a4 	rbit	r3, r4
 800497e:	fab3 f383 	clz	r3, r3
 8004982:	440b      	add	r3, r1
 8004984:	009b      	lsls	r3, r3, #2
 8004986:	2702      	movs	r7, #2
 8004988:	601c      	str	r4, [r3, #0]
 800498a:	f7ff fc5d 	bl	8004248 <HAL_GetTick>
 800498e:	4680      	mov	r8, r0
 8004990:	fa97 f3a7 	rbit	r3, r7
 8004994:	fa97 f3a7 	rbit	r3, r7
 8004998:	fa97 f3a7 	rbit	r3, r7
 800499c:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800499e:	fa97 f3a7 	rbit	r3, r7
 80049a2:	fab3 f383 	clz	r3, r3
 80049a6:	f003 031f 	and.w	r3, r3, #31
 80049aa:	fa04 f303 	lsl.w	r3, r4, r3
 80049ae:	4213      	tst	r3, r2
 80049b0:	f47f aee6 	bne.w	8004780 <HAL_RCC_OscConfig+0x1c>
 80049b4:	f7ff fc48 	bl	8004248 <HAL_GetTick>
 80049b8:	eba0 0008 	sub.w	r0, r0, r8
 80049bc:	2802      	cmp	r0, #2
 80049be:	d9e7      	bls.n	8004990 <HAL_RCC_OscConfig+0x22c>
 80049c0:	e735      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 80049c2:	fa94 f3a4 	rbit	r3, r4
 80049c6:	fab3 f383 	clz	r3, r3
 80049ca:	440b      	add	r3, r1
 80049cc:	009b      	lsls	r3, r3, #2
 80049ce:	2702      	movs	r7, #2
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	f7ff fc39 	bl	8004248 <HAL_GetTick>
 80049d6:	4680      	mov	r8, r0
 80049d8:	fa97 f3a7 	rbit	r3, r7
 80049dc:	fa97 f3a7 	rbit	r3, r7
 80049e0:	fa97 f3a7 	rbit	r3, r7
 80049e4:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80049e6:	fa97 f3a7 	rbit	r3, r7
 80049ea:	fab3 f383 	clz	r3, r3
 80049ee:	f003 031f 	and.w	r3, r3, #31
 80049f2:	fa04 f303 	lsl.w	r3, r4, r3
 80049f6:	4213      	tst	r3, r2
 80049f8:	f43f aec2 	beq.w	8004780 <HAL_RCC_OscConfig+0x1c>
 80049fc:	f7ff fc24 	bl	8004248 <HAL_GetTick>
 8004a00:	eba0 0008 	sub.w	r0, r0, r8
 8004a04:	2802      	cmp	r0, #2
 8004a06:	d9e7      	bls.n	80049d8 <HAL_RCC_OscConfig+0x274>
 8004a08:	e711      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004a0a:	4c1d      	ldr	r4, [pc, #116]	; (8004a80 <HAL_RCC_OscConfig+0x31c>)
 8004a0c:	69e3      	ldr	r3, [r4, #28]
 8004a0e:	00d9      	lsls	r1, r3, #3
 8004a10:	d434      	bmi.n	8004a7c <HAL_RCC_OscConfig+0x318>
 8004a12:	69e3      	ldr	r3, [r4, #28]
 8004a14:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004a18:	61e3      	str	r3, [r4, #28]
 8004a1a:	69e3      	ldr	r3, [r4, #28]
 8004a1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004a20:	9301      	str	r3, [sp, #4]
 8004a22:	9b01      	ldr	r3, [sp, #4]
 8004a24:	2601      	movs	r6, #1
 8004a26:	4f18      	ldr	r7, [pc, #96]	; (8004a88 <HAL_RCC_OscConfig+0x324>)
 8004a28:	683b      	ldr	r3, [r7, #0]
 8004a2a:	05da      	lsls	r2, r3, #23
 8004a2c:	d52e      	bpl.n	8004a8c <HAL_RCC_OscConfig+0x328>
 8004a2e:	68eb      	ldr	r3, [r5, #12]
 8004a30:	2b01      	cmp	r3, #1
 8004a32:	d13c      	bne.n	8004aae <HAL_RCC_OscConfig+0x34a>
 8004a34:	6a23      	ldr	r3, [r4, #32]
 8004a36:	f043 0301 	orr.w	r3, r3, #1
 8004a3a:	6223      	str	r3, [r4, #32]
 8004a3c:	f7ff fc04 	bl	8004248 <HAL_GetTick>
 8004a40:	2702      	movs	r7, #2
 8004a42:	4682      	mov	r10, r0
 8004a44:	46b9      	mov	r9, r7
 8004a46:	f04f 0801 	mov.w	r8, #1
 8004a4a:	fa97 f3a7 	rbit	r3, r7
 8004a4e:	fa97 f3a7 	rbit	r3, r7
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d06b      	beq.n	8004b2e <HAL_RCC_OscConfig+0x3ca>
 8004a56:	6a22      	ldr	r2, [r4, #32]
 8004a58:	fa99 f3a9 	rbit	r3, r9
 8004a5c:	fab3 f383 	clz	r3, r3
 8004a60:	f003 031f 	and.w	r3, r3, #31
 8004a64:	fa08 f303 	lsl.w	r3, r8, r3
 8004a68:	4213      	tst	r3, r2
 8004a6a:	d057      	beq.n	8004b1c <HAL_RCC_OscConfig+0x3b8>
 8004a6c:	2e00      	cmp	r6, #0
 8004a6e:	f43f ae8b 	beq.w	8004788 <HAL_RCC_OscConfig+0x24>
 8004a72:	69e3      	ldr	r3, [r4, #28]
 8004a74:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004a78:	61e3      	str	r3, [r4, #28]
 8004a7a:	e685      	b.n	8004788 <HAL_RCC_OscConfig+0x24>
 8004a7c:	2600      	movs	r6, #0
 8004a7e:	e7d2      	b.n	8004a26 <HAL_RCC_OscConfig+0x2c2>
 8004a80:	40021000 	.word	0x40021000
 8004a84:	10908120 	.word	0x10908120
 8004a88:	40007000 	.word	0x40007000
 8004a8c:	683b      	ldr	r3, [r7, #0]
 8004a8e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004a92:	603b      	str	r3, [r7, #0]
 8004a94:	f7ff fbd8 	bl	8004248 <HAL_GetTick>
 8004a98:	4680      	mov	r8, r0
 8004a9a:	683b      	ldr	r3, [r7, #0]
 8004a9c:	05db      	lsls	r3, r3, #23
 8004a9e:	d4c6      	bmi.n	8004a2e <HAL_RCC_OscConfig+0x2ca>
 8004aa0:	f7ff fbd2 	bl	8004248 <HAL_GetTick>
 8004aa4:	eba0 0008 	sub.w	r0, r0, r8
 8004aa8:	2864      	cmp	r0, #100	; 0x64
 8004aaa:	d9f6      	bls.n	8004a9a <HAL_RCC_OscConfig+0x336>
 8004aac:	e6bf      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004aae:	bb3b      	cbnz	r3, 8004b00 <HAL_RCC_OscConfig+0x39c>
 8004ab0:	6a23      	ldr	r3, [r4, #32]
 8004ab2:	f023 0301 	bic.w	r3, r3, #1
 8004ab6:	6223      	str	r3, [r4, #32]
 8004ab8:	6a23      	ldr	r3, [r4, #32]
 8004aba:	f023 0304 	bic.w	r3, r3, #4
 8004abe:	6223      	str	r3, [r4, #32]
 8004ac0:	f7ff fbc2 	bl	8004248 <HAL_GetTick>
 8004ac4:	2702      	movs	r7, #2
 8004ac6:	4682      	mov	r10, r0
 8004ac8:	46b9      	mov	r9, r7
 8004aca:	f04f 0801 	mov.w	r8, #1
 8004ace:	fa97 f3a7 	rbit	r3, r7
 8004ad2:	fa97 f3a7 	rbit	r3, r7
 8004ad6:	b373      	cbz	r3, 8004b36 <HAL_RCC_OscConfig+0x3d2>
 8004ad8:	6a22      	ldr	r2, [r4, #32]
 8004ada:	fa99 f3a9 	rbit	r3, r9
 8004ade:	fab3 f383 	clz	r3, r3
 8004ae2:	f003 031f 	and.w	r3, r3, #31
 8004ae6:	fa08 f303 	lsl.w	r3, r8, r3
 8004aea:	4213      	tst	r3, r2
 8004aec:	d0be      	beq.n	8004a6c <HAL_RCC_OscConfig+0x308>
 8004aee:	f7ff fbab 	bl	8004248 <HAL_GetTick>
 8004af2:	f241 3388 	movw	r3, #5000	; 0x1388
 8004af6:	eba0 000a 	sub.w	r0, r0, r10
 8004afa:	4298      	cmp	r0, r3
 8004afc:	d9e7      	bls.n	8004ace <HAL_RCC_OscConfig+0x36a>
 8004afe:	e696      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004b00:	2b05      	cmp	r3, #5
 8004b02:	6a23      	ldr	r3, [r4, #32]
 8004b04:	d103      	bne.n	8004b0e <HAL_RCC_OscConfig+0x3aa>
 8004b06:	f043 0304 	orr.w	r3, r3, #4
 8004b0a:	6223      	str	r3, [r4, #32]
 8004b0c:	e792      	b.n	8004a34 <HAL_RCC_OscConfig+0x2d0>
 8004b0e:	f023 0301 	bic.w	r3, r3, #1
 8004b12:	6223      	str	r3, [r4, #32]
 8004b14:	6a23      	ldr	r3, [r4, #32]
 8004b16:	f023 0304 	bic.w	r3, r3, #4
 8004b1a:	e78e      	b.n	8004a3a <HAL_RCC_OscConfig+0x2d6>
 8004b1c:	f7ff fb94 	bl	8004248 <HAL_GetTick>
 8004b20:	f241 3388 	movw	r3, #5000	; 0x1388
 8004b24:	eba0 000a 	sub.w	r0, r0, r10
 8004b28:	4298      	cmp	r0, r3
 8004b2a:	d98e      	bls.n	8004a4a <HAL_RCC_OscConfig+0x2e6>
 8004b2c:	e67f      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004b2e:	fa97 f3a7 	rbit	r3, r7
 8004b32:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004b34:	e790      	b.n	8004a58 <HAL_RCC_OscConfig+0x2f4>
 8004b36:	fa97 f3a7 	rbit	r3, r7
 8004b3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004b3c:	e7cd      	b.n	8004ada <HAL_RCC_OscConfig+0x376>
 8004b3e:	4c41      	ldr	r4, [pc, #260]	; (8004c44 <HAL_RCC_OscConfig+0x4e0>)
 8004b40:	6863      	ldr	r3, [r4, #4]
 8004b42:	f003 030c 	and.w	r3, r3, #12
 8004b46:	2b08      	cmp	r3, #8
 8004b48:	f43f ae45 	beq.w	80047d6 <HAL_RCC_OscConfig+0x72>
 8004b4c:	2a02      	cmp	r2, #2
 8004b4e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004b52:	d152      	bne.n	8004bfa <HAL_RCC_OscConfig+0x496>
 8004b54:	fa93 f3a3 	rbit	r3, r3
 8004b58:	fab3 f383 	clz	r3, r3
 8004b5c:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004b60:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004b64:	009b      	lsls	r3, r3, #2
 8004b66:	2200      	movs	r2, #0
 8004b68:	601a      	str	r2, [r3, #0]
 8004b6a:	f7ff fb6d 	bl	8004248 <HAL_GetTick>
 8004b6e:	f04f 7700 	mov.w	r7, #33554432	; 0x2000000
 8004b72:	4680      	mov	r8, r0
 8004b74:	2601      	movs	r6, #1
 8004b76:	fa97 f3a7 	rbit	r3, r7
 8004b7a:	6822      	ldr	r2, [r4, #0]
 8004b7c:	fa97 f3a7 	rbit	r3, r7
 8004b80:	fab3 f383 	clz	r3, r3
 8004b84:	f003 031f 	and.w	r3, r3, #31
 8004b88:	fa06 f303 	lsl.w	r3, r6, r3
 8004b8c:	4213      	tst	r3, r2
 8004b8e:	d12d      	bne.n	8004bec <HAL_RCC_OscConfig+0x488>
 8004b90:	6862      	ldr	r2, [r4, #4]
 8004b92:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004b94:	6a29      	ldr	r1, [r5, #32]
 8004b96:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 8004b9a:	430b      	orrs	r3, r1
 8004b9c:	4313      	orrs	r3, r2
 8004b9e:	6063      	str	r3, [r4, #4]
 8004ba0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004ba4:	fa93 f3a3 	rbit	r3, r3
 8004ba8:	fab3 f383 	clz	r3, r3
 8004bac:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004bb0:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004bb4:	009b      	lsls	r3, r3, #2
 8004bb6:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004bba:	601e      	str	r6, [r3, #0]
 8004bbc:	f7ff fb44 	bl	8004248 <HAL_GetTick>
 8004bc0:	2601      	movs	r6, #1
 8004bc2:	4607      	mov	r7, r0
 8004bc4:	fa95 f3a5 	rbit	r3, r5
 8004bc8:	6822      	ldr	r2, [r4, #0]
 8004bca:	fa95 f3a5 	rbit	r3, r5
 8004bce:	fab3 f383 	clz	r3, r3
 8004bd2:	f003 031f 	and.w	r3, r3, #31
 8004bd6:	fa06 f303 	lsl.w	r3, r6, r3
 8004bda:	4213      	tst	r3, r2
 8004bdc:	f47f add8 	bne.w	8004790 <HAL_RCC_OscConfig+0x2c>
 8004be0:	f7ff fb32 	bl	8004248 <HAL_GetTick>
 8004be4:	1bc0      	subs	r0, r0, r7
 8004be6:	2802      	cmp	r0, #2
 8004be8:	d9ec      	bls.n	8004bc4 <HAL_RCC_OscConfig+0x460>
 8004bea:	e620      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004bec:	f7ff fb2c 	bl	8004248 <HAL_GetTick>
 8004bf0:	eba0 0008 	sub.w	r0, r0, r8
 8004bf4:	2802      	cmp	r0, #2
 8004bf6:	d9be      	bls.n	8004b76 <HAL_RCC_OscConfig+0x412>
 8004bf8:	e619      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004bfa:	fa93 f3a3 	rbit	r3, r3
 8004bfe:	fab3 f383 	clz	r3, r3
 8004c02:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004c06:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004c0a:	009b      	lsls	r3, r3, #2
 8004c0c:	2200      	movs	r2, #0
 8004c0e:	601a      	str	r2, [r3, #0]
 8004c10:	f7ff fb1a 	bl	8004248 <HAL_GetTick>
 8004c14:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004c18:	4607      	mov	r7, r0
 8004c1a:	2601      	movs	r6, #1
 8004c1c:	fa95 f3a5 	rbit	r3, r5
 8004c20:	6822      	ldr	r2, [r4, #0]
 8004c22:	fa95 f3a5 	rbit	r3, r5
 8004c26:	fab3 f383 	clz	r3, r3
 8004c2a:	f003 031f 	and.w	r3, r3, #31
 8004c2e:	fa06 f303 	lsl.w	r3, r6, r3
 8004c32:	4213      	tst	r3, r2
 8004c34:	f43f adac 	beq.w	8004790 <HAL_RCC_OscConfig+0x2c>
 8004c38:	f7ff fb06 	bl	8004248 <HAL_GetTick>
 8004c3c:	1bc0      	subs	r0, r0, r7
 8004c3e:	2802      	cmp	r0, #2
 8004c40:	d9ec      	bls.n	8004c1c <HAL_RCC_OscConfig+0x4b8>
 8004c42:	e5f4      	b.n	800482e <HAL_RCC_OscConfig+0xca>
 8004c44:	40021000 	.word	0x40021000

08004c48 <HAL_RCC_GetSysClockFreq>:
 8004c48:	b510      	push	{r4, lr}
 8004c4a:	4c13      	ldr	r4, [pc, #76]	; (8004c98 <HAL_RCC_GetSysClockFreq+0x50>)
 8004c4c:	6861      	ldr	r1, [r4, #4]
 8004c4e:	f001 030c 	and.w	r3, r1, #12
 8004c52:	2b08      	cmp	r3, #8
 8004c54:	d11e      	bne.n	8004c94 <HAL_RCC_GetSysClockFreq+0x4c>
 8004c56:	f44f 1370 	mov.w	r3, #3932160	; 0x3c0000
 8004c5a:	fa93 f3a3 	rbit	r3, r3
 8004c5e:	f401 1270 	and.w	r2, r1, #3932160	; 0x3c0000
 8004c62:	fab3 f383 	clz	r3, r3
 8004c66:	fa22 f303 	lsr.w	r3, r2, r3
 8004c6a:	4a0c      	ldr	r2, [pc, #48]	; (8004c9c <HAL_RCC_GetSysClockFreq+0x54>)
 8004c6c:	5cd0      	ldrb	r0, [r2, r3]
 8004c6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004c70:	220f      	movs	r2, #15
 8004c72:	fa92 f2a2 	rbit	r2, r2
 8004c76:	fab2 f282 	clz	r2, r2
 8004c7a:	f003 030f 	and.w	r3, r3, #15
 8004c7e:	40d3      	lsrs	r3, r2
 8004c80:	4a07      	ldr	r2, [pc, #28]	; (8004ca0 <HAL_RCC_GetSysClockFreq+0x58>)
 8004c82:	5cd2      	ldrb	r2, [r2, r3]
 8004c84:	03cb      	lsls	r3, r1, #15
 8004c86:	bf4a      	itet	mi
 8004c88:	4b06      	ldrmi	r3, [pc, #24]	; (8004ca4 <HAL_RCC_GetSysClockFreq+0x5c>)
 8004c8a:	4b07      	ldrpl	r3, [pc, #28]	; (8004ca8 <HAL_RCC_GetSysClockFreq+0x60>)
 8004c8c:	fbb3 f3f2 	udivmi	r3, r3, r2
 8004c90:	4358      	muls	r0, r3
 8004c92:	bd10      	pop	{r4, pc}
 8004c94:	4803      	ldr	r0, [pc, #12]	; (8004ca4 <HAL_RCC_GetSysClockFreq+0x5c>)
 8004c96:	bd10      	pop	{r4, pc}
 8004c98:	40021000 	.word	0x40021000
 8004c9c:	080073d4 	.word	0x080073d4
 8004ca0:	080073e4 	.word	0x080073e4
 8004ca4:	007a1200 	.word	0x007a1200
 8004ca8:	003d0900 	.word	0x003d0900

08004cac <HAL_RCC_ClockConfig>:
 8004cac:	4a5c      	ldr	r2, [pc, #368]	; (8004e20 <HAL_RCC_ClockConfig+0x174>)
 8004cae:	6813      	ldr	r3, [r2, #0]
 8004cb0:	f003 0307 	and.w	r3, r3, #7
 8004cb4:	428b      	cmp	r3, r1
 8004cb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cba:	4606      	mov	r6, r0
 8004cbc:	460d      	mov	r5, r1
 8004cbe:	d330      	bcc.n	8004d22 <HAL_RCC_ClockConfig+0x76>
 8004cc0:	6832      	ldr	r2, [r6, #0]
 8004cc2:	0791      	lsls	r1, r2, #30
 8004cc4:	d43a      	bmi.n	8004d3c <HAL_RCC_ClockConfig+0x90>
 8004cc6:	07d2      	lsls	r2, r2, #31
 8004cc8:	d440      	bmi.n	8004d4c <HAL_RCC_ClockConfig+0xa0>
 8004cca:	4a55      	ldr	r2, [pc, #340]	; (8004e20 <HAL_RCC_ClockConfig+0x174>)
 8004ccc:	6813      	ldr	r3, [r2, #0]
 8004cce:	f003 0307 	and.w	r3, r3, #7
 8004cd2:	429d      	cmp	r5, r3
 8004cd4:	f0c0 8092 	bcc.w	8004dfc <HAL_RCC_ClockConfig+0x150>
 8004cd8:	6832      	ldr	r2, [r6, #0]
 8004cda:	4c52      	ldr	r4, [pc, #328]	; (8004e24 <HAL_RCC_ClockConfig+0x178>)
 8004cdc:	f012 0f04 	tst.w	r2, #4
 8004ce0:	f040 8097 	bne.w	8004e12 <HAL_RCC_ClockConfig+0x166>
 8004ce4:	0713      	lsls	r3, r2, #28
 8004ce6:	d506      	bpl.n	8004cf6 <HAL_RCC_ClockConfig+0x4a>
 8004ce8:	6863      	ldr	r3, [r4, #4]
 8004cea:	6932      	ldr	r2, [r6, #16]
 8004cec:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8004cf0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004cf4:	6063      	str	r3, [r4, #4]
 8004cf6:	f7ff ffa7 	bl	8004c48 <HAL_RCC_GetSysClockFreq>
 8004cfa:	6863      	ldr	r3, [r4, #4]
 8004cfc:	22f0      	movs	r2, #240	; 0xf0
 8004cfe:	fa92 f2a2 	rbit	r2, r2
 8004d02:	fab2 f282 	clz	r2, r2
 8004d06:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004d0a:	40d3      	lsrs	r3, r2
 8004d0c:	4a46      	ldr	r2, [pc, #280]	; (8004e28 <HAL_RCC_ClockConfig+0x17c>)
 8004d0e:	5cd3      	ldrb	r3, [r2, r3]
 8004d10:	40d8      	lsrs	r0, r3
 8004d12:	4b46      	ldr	r3, [pc, #280]	; (8004e2c <HAL_RCC_ClockConfig+0x180>)
 8004d14:	6018      	str	r0, [r3, #0]
 8004d16:	200f      	movs	r0, #15
 8004d18:	f7fe fa9e 	bl	8003258 <HAL_InitTick>
 8004d1c:	2000      	movs	r0, #0
 8004d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d22:	6813      	ldr	r3, [r2, #0]
 8004d24:	f023 0307 	bic.w	r3, r3, #7
 8004d28:	430b      	orrs	r3, r1
 8004d2a:	6013      	str	r3, [r2, #0]
 8004d2c:	6813      	ldr	r3, [r2, #0]
 8004d2e:	f003 0307 	and.w	r3, r3, #7
 8004d32:	4299      	cmp	r1, r3
 8004d34:	d0c4      	beq.n	8004cc0 <HAL_RCC_ClockConfig+0x14>
 8004d36:	2001      	movs	r0, #1
 8004d38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d3c:	4939      	ldr	r1, [pc, #228]	; (8004e24 <HAL_RCC_ClockConfig+0x178>)
 8004d3e:	68b0      	ldr	r0, [r6, #8]
 8004d40:	684b      	ldr	r3, [r1, #4]
 8004d42:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004d46:	4303      	orrs	r3, r0
 8004d48:	604b      	str	r3, [r1, #4]
 8004d4a:	e7bc      	b.n	8004cc6 <HAL_RCC_ClockConfig+0x1a>
 8004d4c:	6872      	ldr	r2, [r6, #4]
 8004d4e:	4c35      	ldr	r4, [pc, #212]	; (8004e24 <HAL_RCC_ClockConfig+0x178>)
 8004d50:	2a01      	cmp	r2, #1
 8004d52:	d128      	bne.n	8004da6 <HAL_RCC_ClockConfig+0xfa>
 8004d54:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004d58:	fa93 f1a3 	rbit	r1, r3
 8004d5c:	6821      	ldr	r1, [r4, #0]
 8004d5e:	fa93 f3a3 	rbit	r3, r3
 8004d62:	fab3 f383 	clz	r3, r3
 8004d66:	f003 031f 	and.w	r3, r3, #31
 8004d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8004d6e:	420b      	tst	r3, r1
 8004d70:	d0e1      	beq.n	8004d36 <HAL_RCC_ClockConfig+0x8a>
 8004d72:	6863      	ldr	r3, [r4, #4]
 8004d74:	f023 0303 	bic.w	r3, r3, #3
 8004d78:	431a      	orrs	r2, r3
 8004d7a:	6062      	str	r2, [r4, #4]
 8004d7c:	f7ff fa64 	bl	8004248 <HAL_GetTick>
 8004d80:	6873      	ldr	r3, [r6, #4]
 8004d82:	2b01      	cmp	r3, #1
 8004d84:	4607      	mov	r7, r0
 8004d86:	f241 3888 	movw	r8, #5000	; 0x1388
 8004d8a:	d11f      	bne.n	8004dcc <HAL_RCC_ClockConfig+0x120>
 8004d8c:	6863      	ldr	r3, [r4, #4]
 8004d8e:	f003 030c 	and.w	r3, r3, #12
 8004d92:	2b04      	cmp	r3, #4
 8004d94:	d099      	beq.n	8004cca <HAL_RCC_ClockConfig+0x1e>
 8004d96:	f7ff fa57 	bl	8004248 <HAL_GetTick>
 8004d9a:	1bc0      	subs	r0, r0, r7
 8004d9c:	4540      	cmp	r0, r8
 8004d9e:	d9f5      	bls.n	8004d8c <HAL_RCC_ClockConfig+0xe0>
 8004da0:	2003      	movs	r0, #3
 8004da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004da6:	2a02      	cmp	r2, #2
 8004da8:	bf0c      	ite	eq
 8004daa:	f04f 7300 	moveq.w	r3, #33554432	; 0x2000000
 8004dae:	2302      	movne	r3, #2
 8004db0:	fa93 f1a3 	rbit	r1, r3
 8004db4:	6820      	ldr	r0, [r4, #0]
 8004db6:	fa93 f3a3 	rbit	r3, r3
 8004dba:	fab3 f383 	clz	r3, r3
 8004dbe:	f003 031f 	and.w	r3, r3, #31
 8004dc2:	2101      	movs	r1, #1
 8004dc4:	fa01 f303 	lsl.w	r3, r1, r3
 8004dc8:	4203      	tst	r3, r0
 8004dca:	e7d1      	b.n	8004d70 <HAL_RCC_ClockConfig+0xc4>
 8004dcc:	2b02      	cmp	r3, #2
 8004dce:	d110      	bne.n	8004df2 <HAL_RCC_ClockConfig+0x146>
 8004dd0:	6863      	ldr	r3, [r4, #4]
 8004dd2:	f003 030c 	and.w	r3, r3, #12
 8004dd6:	2b08      	cmp	r3, #8
 8004dd8:	f43f af77 	beq.w	8004cca <HAL_RCC_ClockConfig+0x1e>
 8004ddc:	f7ff fa34 	bl	8004248 <HAL_GetTick>
 8004de0:	1bc0      	subs	r0, r0, r7
 8004de2:	4540      	cmp	r0, r8
 8004de4:	d9f4      	bls.n	8004dd0 <HAL_RCC_ClockConfig+0x124>
 8004de6:	e7db      	b.n	8004da0 <HAL_RCC_ClockConfig+0xf4>
 8004de8:	f7ff fa2e 	bl	8004248 <HAL_GetTick>
 8004dec:	1bc0      	subs	r0, r0, r7
 8004dee:	4540      	cmp	r0, r8
 8004df0:	d8d6      	bhi.n	8004da0 <HAL_RCC_ClockConfig+0xf4>
 8004df2:	6863      	ldr	r3, [r4, #4]
 8004df4:	f013 0f0c 	tst.w	r3, #12
 8004df8:	d1f6      	bne.n	8004de8 <HAL_RCC_ClockConfig+0x13c>
 8004dfa:	e766      	b.n	8004cca <HAL_RCC_ClockConfig+0x1e>
 8004dfc:	6813      	ldr	r3, [r2, #0]
 8004dfe:	f023 0307 	bic.w	r3, r3, #7
 8004e02:	432b      	orrs	r3, r5
 8004e04:	6013      	str	r3, [r2, #0]
 8004e06:	6813      	ldr	r3, [r2, #0]
 8004e08:	f003 0307 	and.w	r3, r3, #7
 8004e0c:	429d      	cmp	r5, r3
 8004e0e:	d192      	bne.n	8004d36 <HAL_RCC_ClockConfig+0x8a>
 8004e10:	e762      	b.n	8004cd8 <HAL_RCC_ClockConfig+0x2c>
 8004e12:	6863      	ldr	r3, [r4, #4]
 8004e14:	68f1      	ldr	r1, [r6, #12]
 8004e16:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004e1a:	430b      	orrs	r3, r1
 8004e1c:	6063      	str	r3, [r4, #4]
 8004e1e:	e761      	b.n	8004ce4 <HAL_RCC_ClockConfig+0x38>
 8004e20:	40022000 	.word	0x40022000
 8004e24:	40021000 	.word	0x40021000
 8004e28:	080073b8 	.word	0x080073b8
 8004e2c:	200001a4 	.word	0x200001a4

08004e30 <HAL_RCC_GetPCLK1Freq>:
 8004e30:	4b08      	ldr	r3, [pc, #32]	; (8004e54 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004e32:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8004e36:	685b      	ldr	r3, [r3, #4]
 8004e38:	fa92 f2a2 	rbit	r2, r2
 8004e3c:	fab2 f282 	clz	r2, r2
 8004e40:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004e44:	40d3      	lsrs	r3, r2
 8004e46:	4a04      	ldr	r2, [pc, #16]	; (8004e58 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004e48:	5cd3      	ldrb	r3, [r2, r3]
 8004e4a:	4a04      	ldr	r2, [pc, #16]	; (8004e5c <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004e4c:	6810      	ldr	r0, [r2, #0]
 8004e4e:	40d8      	lsrs	r0, r3
 8004e50:	4770      	bx	lr
 8004e52:	bf00      	nop
 8004e54:	40021000 	.word	0x40021000
 8004e58:	080073c8 	.word	0x080073c8
 8004e5c:	200001a4 	.word	0x200001a4

08004e60 <HAL_RCC_GetPCLK2Freq>:
 8004e60:	4b08      	ldr	r3, [pc, #32]	; (8004e84 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004e62:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004e66:	685b      	ldr	r3, [r3, #4]
 8004e68:	fa92 f2a2 	rbit	r2, r2
 8004e6c:	fab2 f282 	clz	r2, r2
 8004e70:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8004e74:	40d3      	lsrs	r3, r2
 8004e76:	4a04      	ldr	r2, [pc, #16]	; (8004e88 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004e78:	5cd3      	ldrb	r3, [r2, r3]
 8004e7a:	4a04      	ldr	r2, [pc, #16]	; (8004e8c <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004e7c:	6810      	ldr	r0, [r2, #0]
 8004e7e:	40d8      	lsrs	r0, r3
 8004e80:	4770      	bx	lr
 8004e82:	bf00      	nop
 8004e84:	40021000 	.word	0x40021000
 8004e88:	080073c8 	.word	0x080073c8
 8004e8c:	200001a4 	.word	0x200001a4

08004e90 <HAL_RCC_GetClockConfig>:
 8004e90:	230f      	movs	r3, #15
 8004e92:	6003      	str	r3, [r0, #0]
 8004e94:	4b0b      	ldr	r3, [pc, #44]	; (8004ec4 <HAL_RCC_GetClockConfig+0x34>)
 8004e96:	685a      	ldr	r2, [r3, #4]
 8004e98:	f002 0203 	and.w	r2, r2, #3
 8004e9c:	6042      	str	r2, [r0, #4]
 8004e9e:	685a      	ldr	r2, [r3, #4]
 8004ea0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8004ea4:	6082      	str	r2, [r0, #8]
 8004ea6:	685a      	ldr	r2, [r3, #4]
 8004ea8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8004eac:	60c2      	str	r2, [r0, #12]
 8004eae:	685b      	ldr	r3, [r3, #4]
 8004eb0:	08db      	lsrs	r3, r3, #3
 8004eb2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004eb6:	6103      	str	r3, [r0, #16]
 8004eb8:	4b03      	ldr	r3, [pc, #12]	; (8004ec8 <HAL_RCC_GetClockConfig+0x38>)
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	f003 0307 	and.w	r3, r3, #7
 8004ec0:	600b      	str	r3, [r1, #0]
 8004ec2:	4770      	bx	lr
 8004ec4:	40021000 	.word	0x40021000
 8004ec8:	40022000 	.word	0x40022000

08004ecc <HAL_NVIC_SetPriorityGrouping>:
 8004ecc:	4a07      	ldr	r2, [pc, #28]	; (8004eec <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004ece:	68d3      	ldr	r3, [r2, #12]
 8004ed0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004ed4:	041b      	lsls	r3, r3, #16
 8004ed6:	0c1b      	lsrs	r3, r3, #16
 8004ed8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004edc:	0200      	lsls	r0, r0, #8
 8004ede:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004ee2:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8004ee6:	4303      	orrs	r3, r0
 8004ee8:	60d3      	str	r3, [r2, #12]
 8004eea:	4770      	bx	lr
 8004eec:	e000ed00 	.word	0xe000ed00

08004ef0 <mbed::Callback<void (int)>::~Callback()>:
 8004ef0:	68c3      	ldr	r3, [r0, #12]
 8004ef2:	b510      	push	{r4, lr}
 8004ef4:	4604      	mov	r4, r0
 8004ef6:	b10b      	cbz	r3, 8004efc <mbed::Callback<void (int)>::~Callback()+0xc>
 8004ef8:	689b      	ldr	r3, [r3, #8]
 8004efa:	4798      	blx	r3
 8004efc:	4620      	mov	r0, r4
 8004efe:	bd10      	pop	{r4, pc}

08004f00 <mbed::donothing()>:
 8004f00:	4770      	bx	lr

08004f02 <mbed::SerialBase::lock()>:
 8004f02:	4770      	bx	lr

08004f04 <mbed::SerialBase::unlock()>:
 8004f04:	4770      	bx	lr

08004f06 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8004f06:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004f0a:	f102 0028 	add.w	r0, r2, #40	; 0x28
 8004f0e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	4718      	bx	r3

08004f14 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8004f14:	6803      	ldr	r3, [r0, #0]
 8004f16:	4718      	bx	r3

08004f18 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8004f18:	b108      	cbz	r0, 8004f1e <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8004f1a:	680b      	ldr	r3, [r1, #0]
 8004f1c:	6003      	str	r3, [r0, #0]
 8004f1e:	4770      	bx	lr

08004f20 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8004f20:	4770      	bx	lr

08004f22 <mbed::SerialBase::baud(int)>:
 8004f22:	b570      	push	{r4, r5, r6, lr}
 8004f24:	4605      	mov	r5, r0
 8004f26:	4604      	mov	r4, r0
 8004f28:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f2c:	460e      	mov	r6, r1
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	4798      	blx	r3
 8004f32:	4628      	mov	r0, r5
 8004f34:	4631      	mov	r1, r6
 8004f36:	f7fe ff3f 	bl	8003db8 <serial_baud>
 8004f3a:	6823      	ldr	r3, [r4, #0]
 8004f3c:	64a6      	str	r6, [r4, #72]	; 0x48
 8004f3e:	4620      	mov	r0, r4
 8004f40:	685b      	ldr	r3, [r3, #4]
 8004f42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f46:	4718      	bx	r3

08004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004f48:	4288      	cmp	r0, r1
 8004f4a:	b538      	push	{r3, r4, r5, lr}
 8004f4c:	4604      	mov	r4, r0
 8004f4e:	460d      	mov	r5, r1
 8004f50:	d00a      	beq.n	8004f68 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004f52:	f7fc f9de 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8004f56:	b13c      	cbz	r4, 8004f68 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004f58:	68eb      	ldr	r3, [r5, #12]
 8004f5a:	b11b      	cbz	r3, 8004f64 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004f5c:	685b      	ldr	r3, [r3, #4]
 8004f5e:	4629      	mov	r1, r5
 8004f60:	4620      	mov	r0, r4
 8004f62:	4798      	blx	r3
 8004f64:	68eb      	ldr	r3, [r5, #12]
 8004f66:	60e3      	str	r3, [r4, #12]
 8004f68:	4620      	mov	r0, r4
 8004f6a:	bd38      	pop	{r3, r4, r5, pc}

08004f6c <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8004f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004f70:	4605      	mov	r5, r0
 8004f72:	461e      	mov	r6, r3
 8004f74:	4b1b      	ldr	r3, [pc, #108]	; (8004fe4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
 8004f76:	f845 3b04 	str.w	r3, [r5], #4
 8004f7a:	b085      	sub	sp, #20
 8004f7c:	4604      	mov	r4, r0
 8004f7e:	4688      	mov	r8, r1
 8004f80:	4691      	mov	r9, r2
 8004f82:	2100      	movs	r1, #0
 8004f84:	2224      	movs	r2, #36	; 0x24
 8004f86:	4628      	mov	r0, r5
 8004f88:	f001 f977 	bl	800627a <memset>
 8004f8c:	2200      	movs	r2, #0
 8004f8e:	6362      	str	r2, [r4, #52]	; 0x34
 8004f90:	6462      	str	r2, [r4, #68]	; 0x44
 8004f92:	4669      	mov	r1, sp
 8004f94:	64a6      	str	r6, [r4, #72]	; 0x48
 8004f96:	4f14      	ldr	r7, [pc, #80]	; (8004fe8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
 8004f98:	4e14      	ldr	r6, [pc, #80]	; (8004fec <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x80>)
 8004f9a:	9700      	str	r7, [sp, #0]
 8004f9c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8004fa0:	9603      	str	r6, [sp, #12]
 8004fa2:	f7ff ffd1 	bl	8004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004fa6:	4668      	mov	r0, sp
 8004fa8:	f7fc f9b3 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8004fac:	4669      	mov	r1, sp
 8004fae:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8004fb2:	9700      	str	r7, [sp, #0]
 8004fb4:	9603      	str	r6, [sp, #12]
 8004fb6:	f7ff ffc7 	bl	8004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004fba:	4668      	mov	r0, sp
 8004fbc:	f7fc f9a9 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8004fc0:	464a      	mov	r2, r9
 8004fc2:	4641      	mov	r1, r8
 8004fc4:	4628      	mov	r0, r5
 8004fc6:	f7fe fe51 	bl	8003c6c <serial_init>
 8004fca:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8004fcc:	4628      	mov	r0, r5
 8004fce:	f7fe fef3 	bl	8003db8 <serial_baud>
 8004fd2:	4628      	mov	r0, r5
 8004fd4:	4622      	mov	r2, r4
 8004fd6:	4906      	ldr	r1, [pc, #24]	; (8004ff0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x84>)
 8004fd8:	f7fe fef2 	bl	8003dc0 <serial_irq_handler>
 8004fdc:	4620      	mov	r0, r4
 8004fde:	b005      	add	sp, #20
 8004fe0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004fe4:	08007408 	.word	0x08007408
 8004fe8:	08004f01 	.word	0x08004f01
 8004fec:	080073f4 	.word	0x080073f4
 8004ff0:	08004f07 	.word	0x08004f07

08004ff4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8004ff4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004ff8:	4605      	mov	r5, r0
 8004ffa:	4688      	mov	r8, r1
 8004ffc:	f855 3b04 	ldr.w	r3, [r5], #4
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	4604      	mov	r4, r0
 8005004:	4616      	mov	r6, r2
 8005006:	4798      	blx	r3
 8005008:	f7fc fddc 	bl	8001bc4 <core_util_critical_section_enter>
 800500c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005010:	0130      	lsls	r0, r6, #4
 8005012:	b197      	cbz	r7, 800503a <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005014:	3028      	adds	r0, #40	; 0x28
 8005016:	4641      	mov	r1, r8
 8005018:	4420      	add	r0, r4
 800501a:	f7ff ff95 	bl	8004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800501e:	2201      	movs	r2, #1
 8005020:	4631      	mov	r1, r6
 8005022:	4628      	mov	r0, r5
 8005024:	f7fe fed8 	bl	8003dd8 <serial_irq_set>
 8005028:	f7fc fde2 	bl	8001bf0 <core_util_critical_section_exit>
 800502c:	6823      	ldr	r3, [r4, #0]
 800502e:	4620      	mov	r0, r4
 8005030:	685b      	ldr	r3, [r3, #4]
 8005032:	4798      	blx	r3
 8005034:	b004      	add	sp, #16
 8005036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800503a:	4b07      	ldr	r3, [pc, #28]	; (8005058 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 800503c:	9300      	str	r3, [sp, #0]
 800503e:	3028      	adds	r0, #40	; 0x28
 8005040:	4b06      	ldr	r3, [pc, #24]	; (800505c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005042:	9303      	str	r3, [sp, #12]
 8005044:	4669      	mov	r1, sp
 8005046:	4420      	add	r0, r4
 8005048:	f7ff ff7e 	bl	8004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800504c:	4668      	mov	r0, sp
 800504e:	f7fc f960 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8005052:	463a      	mov	r2, r7
 8005054:	e7e4      	b.n	8005020 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8005056:	bf00      	nop
 8005058:	08004f01 	.word	0x08004f01
 800505c:	080073f4 	.word	0x080073f4

08005060 <mbed::RawSerial::lock()>:
 8005060:	4770      	bx	lr
	...

08005064 <mbed::RawSerial::~RawSerial()>:
 8005064:	b510      	push	{r4, lr}
 8005066:	4b03      	ldr	r3, [pc, #12]	; (8005074 <mbed::RawSerial::~RawSerial()+0x10>)
 8005068:	6003      	str	r3, [r0, #0]
 800506a:	4604      	mov	r4, r0
 800506c:	f7fc f95a 	bl	8001324 <mbed::SerialBase::~SerialBase()>
 8005070:	4620      	mov	r0, r4
 8005072:	bd10      	pop	{r4, pc}
 8005074:	08007420 	.word	0x08007420

08005078 <mbed::RawSerial::~RawSerial()>:
 8005078:	b510      	push	{r4, lr}
 800507a:	4604      	mov	r4, r0
 800507c:	f7ff fff2 	bl	8005064 <mbed::RawSerial::~RawSerial()>
 8005080:	4620      	mov	r0, r4
 8005082:	f000 fa9d 	bl	80055c0 <operator delete(void*)>
 8005086:	4620      	mov	r0, r4
 8005088:	bd10      	pop	{r4, pc}
	...

0800508c <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 800508c:	b510      	push	{r4, lr}
 800508e:	4604      	mov	r4, r0
 8005090:	f7ff ff6c 	bl	8004f6c <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8005094:	4b01      	ldr	r3, [pc, #4]	; (800509c <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8005096:	6023      	str	r3, [r4, #0]
 8005098:	4620      	mov	r0, r4
 800509a:	bd10      	pop	{r4, pc}
 800509c:	08007420 	.word	0x08007420

080050a0 <mbed::Timer::start()>:
 80050a0:	b510      	push	{r4, lr}
 80050a2:	4604      	mov	r4, r0
 80050a4:	f7fc fd8e 	bl	8001bc4 <core_util_critical_section_enter>
 80050a8:	6823      	ldr	r3, [r4, #0]
 80050aa:	b92b      	cbnz	r3, 80050b8 <mbed::Timer::start()+0x18>
 80050ac:	68e0      	ldr	r0, [r4, #12]
 80050ae:	f7fc fd2a 	bl	8001b06 <ticker_read>
 80050b2:	2301      	movs	r3, #1
 80050b4:	6060      	str	r0, [r4, #4]
 80050b6:	6023      	str	r3, [r4, #0]
 80050b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80050bc:	f7fc bd98 	b.w	8001bf0 <core_util_critical_section_exit>

080050c0 <mbed::Timer::slicetime()>:
 80050c0:	b538      	push	{r3, r4, r5, lr}
 80050c2:	4605      	mov	r5, r0
 80050c4:	f7fc fd7e 	bl	8001bc4 <core_util_critical_section_enter>
 80050c8:	682c      	ldr	r4, [r5, #0]
 80050ca:	b124      	cbz	r4, 80050d6 <mbed::Timer::slicetime()+0x16>
 80050cc:	68e8      	ldr	r0, [r5, #12]
 80050ce:	f7fc fd1a 	bl	8001b06 <ticker_read>
 80050d2:	686c      	ldr	r4, [r5, #4]
 80050d4:	1b04      	subs	r4, r0, r4
 80050d6:	f7fc fd8b 	bl	8001bf0 <core_util_critical_section_exit>
 80050da:	4620      	mov	r0, r4
 80050dc:	bd38      	pop	{r3, r4, r5, pc}

080050de <mbed::Timer::read_us()>:
 80050de:	b538      	push	{r3, r4, r5, lr}
 80050e0:	4605      	mov	r5, r0
 80050e2:	f7fc fd6f 	bl	8001bc4 <core_util_critical_section_enter>
 80050e6:	4628      	mov	r0, r5
 80050e8:	68ac      	ldr	r4, [r5, #8]
 80050ea:	f7ff ffe9 	bl	80050c0 <mbed::Timer::slicetime()>
 80050ee:	4404      	add	r4, r0
 80050f0:	f7fc fd7e 	bl	8001bf0 <core_util_critical_section_exit>
 80050f4:	4620      	mov	r0, r4
 80050f6:	bd38      	pop	{r3, r4, r5, pc}

080050f8 <mbed::Timer::read_ms()>:
 80050f8:	b508      	push	{r3, lr}
 80050fa:	f7ff fff0 	bl	80050de <mbed::Timer::read_us()>
 80050fe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005102:	fb90 f0f3 	sdiv	r0, r0, r3
 8005106:	bd08      	pop	{r3, pc}

08005108 <mbed::Timer::reset()>:
 8005108:	b510      	push	{r4, lr}
 800510a:	4604      	mov	r4, r0
 800510c:	f7fc fd5a 	bl	8001bc4 <core_util_critical_section_enter>
 8005110:	68e0      	ldr	r0, [r4, #12]
 8005112:	f7fc fcf8 	bl	8001b06 <ticker_read>
 8005116:	2300      	movs	r3, #0
 8005118:	6060      	str	r0, [r4, #4]
 800511a:	60a3      	str	r3, [r4, #8]
 800511c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005120:	f7fc bd66 	b.w	8001bf0 <core_util_critical_section_exit>

08005124 <mbed::Timer::Timer()>:
 8005124:	2300      	movs	r3, #0
 8005126:	b510      	push	{r4, lr}
 8005128:	6003      	str	r3, [r0, #0]
 800512a:	6043      	str	r3, [r0, #4]
 800512c:	6083      	str	r3, [r0, #8]
 800512e:	4604      	mov	r4, r0
 8005130:	f7fc fcbc 	bl	8001aac <get_us_ticker_data>
 8005134:	60e0      	str	r0, [r4, #12]
 8005136:	4620      	mov	r0, r4
 8005138:	f7ff ffe6 	bl	8005108 <mbed::Timer::reset()>
 800513c:	4620      	mov	r0, r4
 800513e:	bd10      	pop	{r4, pc}

08005140 <mbed::donothing()>:
 8005140:	4770      	bx	lr

08005142 <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8005142:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005146:	f102 000c 	add.w	r0, r2, #12
 800514a:	6993      	ldr	r3, [r2, #24]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	4718      	bx	r3

08005150 <mbed::CAN::lock()>:
 8005150:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005154:	309c      	adds	r0, #156	; 0x9c
 8005156:	f000 ba57 	b.w	8005608 <rtos::Mutex::lock(unsigned long)>

0800515a <mbed::CAN::unlock()>:
 800515a:	309c      	adds	r0, #156	; 0x9c
 800515c:	f000 ba57 	b.w	800560e <rtos::Mutex::unlock()>

08005160 <mbed::CAN::frequency(int)>:
 8005160:	b570      	push	{r4, r5, r6, lr}
 8005162:	4605      	mov	r5, r0
 8005164:	460e      	mov	r6, r1
 8005166:	f855 3b04 	ldr.w	r3, [r5], #4
 800516a:	689b      	ldr	r3, [r3, #8]
 800516c:	4604      	mov	r4, r0
 800516e:	4798      	blx	r3
 8005170:	4631      	mov	r1, r6
 8005172:	4628      	mov	r0, r5
 8005174:	f7fe fa56 	bl	8003624 <can_frequency>
 8005178:	6823      	ldr	r3, [r4, #0]
 800517a:	4605      	mov	r5, r0
 800517c:	68db      	ldr	r3, [r3, #12]
 800517e:	4620      	mov	r0, r4
 8005180:	4798      	blx	r3
 8005182:	4628      	mov	r0, r5
 8005184:	bd70      	pop	{r4, r5, r6, pc}

08005186 <mbed::CAN::write(mbed::CANMessage)>:
 8005186:	b084      	sub	sp, #16
 8005188:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800518a:	4606      	mov	r6, r0
 800518c:	ac07      	add	r4, sp, #28
 800518e:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8005192:	f856 3b04 	ldr.w	r3, [r6], #4
 8005196:	689b      	ldr	r3, [r3, #8]
 8005198:	4605      	mov	r5, r0
 800519a:	4798      	blx	r3
 800519c:	2300      	movs	r3, #0
 800519e:	9301      	str	r3, [sp, #4]
 80051a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051a2:	9300      	str	r3, [sp, #0]
 80051a4:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80051a8:	4630      	mov	r0, r6
 80051aa:	f7fe fa81 	bl	80036b0 <can_write>
 80051ae:	682b      	ldr	r3, [r5, #0]
 80051b0:	4604      	mov	r4, r0
 80051b2:	68db      	ldr	r3, [r3, #12]
 80051b4:	4628      	mov	r0, r5
 80051b6:	4798      	blx	r3
 80051b8:	4620      	mov	r0, r4
 80051ba:	b002      	add	sp, #8
 80051bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80051c0:	b004      	add	sp, #16
 80051c2:	4770      	bx	lr

080051c4 <mbed::CAN::read(mbed::CANMessage&, int)>:
 80051c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051c6:	4605      	mov	r5, r0
 80051c8:	460e      	mov	r6, r1
 80051ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80051ce:	4617      	mov	r7, r2
 80051d0:	689b      	ldr	r3, [r3, #8]
 80051d2:	4604      	mov	r4, r0
 80051d4:	4798      	blx	r3
 80051d6:	463a      	mov	r2, r7
 80051d8:	4631      	mov	r1, r6
 80051da:	4628      	mov	r0, r5
 80051dc:	f7fe fab9 	bl	8003752 <can_read>
 80051e0:	6823      	ldr	r3, [r4, #0]
 80051e2:	4605      	mov	r5, r0
 80051e4:	68db      	ldr	r3, [r3, #12]
 80051e6:	4620      	mov	r0, r4
 80051e8:	4798      	blx	r3
 80051ea:	4628      	mov	r0, r5
 80051ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080051f0 <mbed::CAN::~CAN()>:
 80051f0:	b570      	push	{r4, r5, r6, lr}
 80051f2:	4604      	mov	r4, r0
 80051f4:	4b0d      	ldr	r3, [pc, #52]	; (800522c <mbed::CAN::~CAN()+0x3c>)
 80051f6:	f844 3b04 	str.w	r3, [r4], #4
 80051fa:	4605      	mov	r5, r0
 80051fc:	4620      	mov	r0, r4
 80051fe:	f7fe f9ed 	bl	80035dc <can_irq_free>
 8005202:	4620      	mov	r0, r4
 8005204:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 8005208:	f7fe f9f6 	bl	80035f8 <can_free>
 800520c:	4620      	mov	r0, r4
 800520e:	f000 fa01 	bl	8005614 <rtos::Mutex::~Mutex()>
 8005212:	f115 060c 	adds.w	r6, r5, #12
 8005216:	d006      	beq.n	8005226 <mbed::CAN::~CAN()+0x36>
 8005218:	42b4      	cmp	r4, r6
 800521a:	d004      	beq.n	8005226 <mbed::CAN::~CAN()+0x36>
 800521c:	3c10      	subs	r4, #16
 800521e:	4620      	mov	r0, r4
 8005220:	f7fc f877 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8005224:	e7f8      	b.n	8005218 <mbed::CAN::~CAN()+0x28>
 8005226:	4628      	mov	r0, r5
 8005228:	bd70      	pop	{r4, r5, r6, pc}
 800522a:	bf00      	nop
 800522c:	08007438 	.word	0x08007438

08005230 <mbed::CAN::~CAN()>:
 8005230:	b510      	push	{r4, lr}
 8005232:	4604      	mov	r4, r0
 8005234:	f7ff ffdc 	bl	80051f0 <mbed::CAN::~CAN()>
 8005238:	4620      	mov	r0, r4
 800523a:	f000 f9c1 	bl	80055c0 <operator delete(void*)>
 800523e:	4620      	mov	r0, r4
 8005240:	bd10      	pop	{r4, pc}
	...

08005244 <mbed::CAN::CAN(PinName, PinName)>:
 8005244:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8005248:	4b1a      	ldr	r3, [pc, #104]	; (80052b4 <mbed::CAN::CAN(PinName, PinName)+0x70>)
 800524a:	6003      	str	r3, [r0, #0]
 800524c:	4617      	mov	r7, r2
 800524e:	f100 030c 	add.w	r3, r0, #12
 8005252:	2200      	movs	r2, #0
 8005254:	4604      	mov	r4, r0
 8005256:	460e      	mov	r6, r1
 8005258:	6042      	str	r2, [r0, #4]
 800525a:	6082      	str	r2, [r0, #8]
 800525c:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8005260:	461d      	mov	r5, r3
 8005262:	60da      	str	r2, [r3, #12]
 8005264:	3310      	adds	r3, #16
 8005266:	4543      	cmp	r3, r8
 8005268:	d1fb      	bne.n	8005262 <mbed::CAN::CAN(PinName, PinName)+0x1e>
 800526a:	4640      	mov	r0, r8
 800526c:	f000 f9b4 	bl	80055d8 <rtos::Mutex::Mutex()>
 8005270:	f8df a048 	ldr.w	r10, [pc, #72]	; 80052bc <mbed::CAN::CAN(PinName, PinName)+0x78>
 8005274:	f8df 9048 	ldr.w	r9, [pc, #72]	; 80052c0 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8005278:	4545      	cmp	r5, r8
 800527a:	d00c      	beq.n	8005296 <mbed::CAN::CAN(PinName, PinName)+0x52>
 800527c:	4669      	mov	r1, sp
 800527e:	4628      	mov	r0, r5
 8005280:	f8cd a000 	str.w	r10, [sp]
 8005284:	f8cd 900c 	str.w	r9, [sp, #12]
 8005288:	f7ff fe5e 	bl	8004f48 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800528c:	4668      	mov	r0, sp
 800528e:	f7fc f840 	bl	8001312 <mbed::Callback<void ()>::~Callback()>
 8005292:	3510      	adds	r5, #16
 8005294:	e7f0      	b.n	8005278 <mbed::CAN::CAN(PinName, PinName)+0x34>
 8005296:	1d25      	adds	r5, r4, #4
 8005298:	463a      	mov	r2, r7
 800529a:	4631      	mov	r1, r6
 800529c:	4628      	mov	r0, r5
 800529e:	f7fe fad9 	bl	8003854 <can_init>
 80052a2:	4628      	mov	r0, r5
 80052a4:	4622      	mov	r2, r4
 80052a6:	4904      	ldr	r1, [pc, #16]	; (80052b8 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 80052a8:	f7fe f98c 	bl	80035c4 <can_irq_init>
 80052ac:	4620      	mov	r0, r4
 80052ae:	b004      	add	sp, #16
 80052b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80052b4:	08007438 	.word	0x08007438
 80052b8:	08005143 	.word	0x08005143
 80052bc:	08005141 	.word	0x08005141
 80052c0:	080073f4 	.word	0x080073f4

080052c4 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80052c4:	b538      	push	{r3, r4, r5, lr}
 80052c6:	4604      	mov	r4, r0
 80052c8:	b148      	cbz	r0, 80052de <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80052ca:	3058      	adds	r0, #88	; 0x58
 80052cc:	42a0      	cmp	r0, r4
 80052ce:	d006      	beq.n	80052de <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80052d0:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80052d4:	3814      	subs	r0, #20
 80052d6:	f7ff fe0b 	bl	8004ef0 <mbed::Callback<void (int)>::~Callback()>
 80052da:	4628      	mov	r0, r5
 80052dc:	e7f6      	b.n	80052cc <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80052de:	4620      	mov	r0, r4
 80052e0:	bd38      	pop	{r3, r4, r5, pc}
	...

080052e4 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 80052e4:	b570      	push	{r4, r5, r6, lr}
 80052e6:	4c0e      	ldr	r4, [pc, #56]	; (8005320 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 80052e8:	4620      	mov	r0, r4
 80052ea:	2500      	movs	r5, #0
 80052ec:	2628      	movs	r6, #40	; 0x28
 80052ee:	4632      	mov	r2, r6
 80052f0:	4629      	mov	r1, r5
 80052f2:	f840 5b04 	str.w	r5, [r0], #4
 80052f6:	f000 ffc0 	bl	800627a <memset>
 80052fa:	4632      	mov	r2, r6
 80052fc:	4629      	mov	r1, r5
 80052fe:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005302:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005304:	f000 ffb9 	bl	800627a <memset>
 8005308:	65a5      	str	r5, [r4, #88]	; 0x58
 800530a:	4620      	mov	r0, r4
 800530c:	65e5      	str	r5, [r4, #92]	; 0x5c
 800530e:	4a05      	ldr	r2, [pc, #20]	; (8005324 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005310:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005314:	4904      	ldr	r1, [pc, #16]	; (8005328 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005316:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800531a:	f000 b927 	b.w	800556c <__aeabi_atexit>
 800531e:	bf00      	nop
 8005320:	2000155c 	.word	0x2000155c
 8005324:	20000188 	.word	0x20000188
 8005328:	080052c5 	.word	0x080052c5

0800532c <__wrap__malloc_r>:
 800532c:	f000 bffc 	b.w	8006328 <_malloc_r>

08005330 <__wrap__realloc_r>:
 8005330:	f001 b858 	b.w	80063e4 <_realloc_r>

08005334 <__wrap__free_r>:
 8005334:	f000 bfaa 	b.w	800628c <_free_r>

08005338 <wait_us>:
 8005338:	b570      	push	{r4, r5, r6, lr}
 800533a:	4605      	mov	r5, r0
 800533c:	f7fe fb0a 	bl	8003954 <us_ticker_read>
 8005340:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005344:	fb95 f4f4 	sdiv	r4, r5, r4
 8005348:	2c00      	cmp	r4, #0
 800534a:	4606      	mov	r6, r0
 800534c:	dd02      	ble.n	8005354 <wait_us+0x1c>
 800534e:	f7fc fc33 	bl	8001bb8 <core_util_are_interrupts_enabled>
 8005352:	b928      	cbnz	r0, 8005360 <wait_us+0x28>
 8005354:	f7fe fafe 	bl	8003954 <us_ticker_read>
 8005358:	1b80      	subs	r0, r0, r6
 800535a:	42a8      	cmp	r0, r5
 800535c:	d3fa      	bcc.n	8005354 <wait_us+0x1c>
 800535e:	bd70      	pop	{r4, r5, r6, pc}
 8005360:	4620      	mov	r0, r4
 8005362:	f000 f937 	bl	80055d4 <rtos::Thread::wait(unsigned long)>
 8005366:	e7f5      	b.n	8005354 <wait_us+0x1c>

08005368 <wait_ms>:
 8005368:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800536c:	4358      	muls	r0, r3
 800536e:	f7ff bfe3 	b.w	8005338 <wait_us>
	...

08005374 <init_serial()>:
 8005374:	b508      	push	{r3, lr}
 8005376:	4b08      	ldr	r3, [pc, #32]	; (8005398 <init_serial()+0x24>)
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	b95b      	cbnz	r3, 8005394 <init_serial()+0x20>
 800537c:	2102      	movs	r1, #2
 800537e:	4807      	ldr	r0, [pc, #28]	; (800539c <init_serial()+0x28>)
 8005380:	220f      	movs	r2, #15
 8005382:	f7fe fc73 	bl	8003c6c <serial_init>
 8005386:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 800538a:	4804      	ldr	r0, [pc, #16]	; (800539c <init_serial()+0x28>)
 800538c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005390:	f7fe bd12 	b.w	8003db8 <serial_baud>
 8005394:	bd08      	pop	{r3, pc}
 8005396:	bf00      	nop
 8005398:	20001328 	.word	0x20001328
 800539c:	20001ffc 	.word	0x20001ffc

080053a0 <_close>:
 80053a0:	2802      	cmp	r0, #2
 80053a2:	b510      	push	{r4, lr}
 80053a4:	4604      	mov	r4, r0
 80053a6:	dc01      	bgt.n	80053ac <_close+0xc>
 80053a8:	2000      	movs	r0, #0
 80053aa:	bd10      	pop	{r4, pc}
 80053ac:	f000 fd24 	bl	8005df8 <__errno>
 80053b0:	2309      	movs	r3, #9
 80053b2:	6003      	str	r3, [r0, #0]
 80053b4:	3c03      	subs	r4, #3
 80053b6:	4b09      	ldr	r3, [pc, #36]	; (80053dc <_close+0x3c>)
 80053b8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80053bc:	2200      	movs	r2, #0
 80053be:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80053c2:	b140      	cbz	r0, 80053d6 <_close+0x36>
 80053c4:	6803      	ldr	r3, [r0, #0]
 80053c6:	691b      	ldr	r3, [r3, #16]
 80053c8:	4798      	blx	r3
 80053ca:	1e04      	subs	r4, r0, #0
 80053cc:	daec      	bge.n	80053a8 <_close+0x8>
 80053ce:	f000 fd13 	bl	8005df8 <__errno>
 80053d2:	4264      	negs	r4, r4
 80053d4:	6004      	str	r4, [r0, #0]
 80053d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80053da:	bd10      	pop	{r4, pc}
 80053dc:	200015c0 	.word	0x200015c0

080053e0 <_write>:
 80053e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053e2:	4605      	mov	r5, r0
 80053e4:	460e      	mov	r6, r1
 80053e6:	4614      	mov	r4, r2
 80053e8:	f000 fd06 	bl	8005df8 <__errno>
 80053ec:	2309      	movs	r3, #9
 80053ee:	2d02      	cmp	r5, #2
 80053f0:	6003      	str	r3, [r0, #0]
 80053f2:	dc0f      	bgt.n	8005414 <_write+0x34>
 80053f4:	4b12      	ldr	r3, [pc, #72]	; (8005440 <_write+0x60>)
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	b90b      	cbnz	r3, 80053fe <_write+0x1e>
 80053fa:	f7ff ffbb 	bl	8005374 <init_serial()>
 80053fe:	4635      	mov	r5, r6
 8005400:	1937      	adds	r7, r6, r4
 8005402:	4e10      	ldr	r6, [pc, #64]	; (8005444 <_write+0x64>)
 8005404:	42bd      	cmp	r5, r7
 8005406:	d015      	beq.n	8005434 <_write+0x54>
 8005408:	f815 1b01 	ldrb.w	r1, [r5], #1
 800540c:	4630      	mov	r0, r6
 800540e:	f7fe fd71 	bl	8003ef4 <serial_putc>
 8005412:	e7f7      	b.n	8005404 <_write+0x24>
 8005414:	3d03      	subs	r5, #3
 8005416:	4b0c      	ldr	r3, [pc, #48]	; (8005448 <_write+0x68>)
 8005418:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800541c:	b160      	cbz	r0, 8005438 <_write+0x58>
 800541e:	6803      	ldr	r3, [r0, #0]
 8005420:	4622      	mov	r2, r4
 8005422:	68db      	ldr	r3, [r3, #12]
 8005424:	4631      	mov	r1, r6
 8005426:	4798      	blx	r3
 8005428:	1e04      	subs	r4, r0, #0
 800542a:	da03      	bge.n	8005434 <_write+0x54>
 800542c:	f000 fce4 	bl	8005df8 <__errno>
 8005430:	4263      	negs	r3, r4
 8005432:	6003      	str	r3, [r0, #0]
 8005434:	4620      	mov	r0, r4
 8005436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005438:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800543c:	e7fa      	b.n	8005434 <_write+0x54>
 800543e:	bf00      	nop
 8005440:	20001328 	.word	0x20001328
 8005444:	20001ffc 	.word	0x20001ffc
 8005448:	200015c0 	.word	0x200015c0

0800544c <_read>:
 800544c:	b570      	push	{r4, r5, r6, lr}
 800544e:	4604      	mov	r4, r0
 8005450:	460d      	mov	r5, r1
 8005452:	4616      	mov	r6, r2
 8005454:	f000 fcd0 	bl	8005df8 <__errno>
 8005458:	2309      	movs	r3, #9
 800545a:	2c02      	cmp	r4, #2
 800545c:	6003      	str	r3, [r0, #0]
 800545e:	dc0b      	bgt.n	8005478 <_read+0x2c>
 8005460:	4b0f      	ldr	r3, [pc, #60]	; (80054a0 <_read+0x54>)
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	b90b      	cbnz	r3, 800546a <_read+0x1e>
 8005466:	f7ff ff85 	bl	8005374 <init_serial()>
 800546a:	480e      	ldr	r0, [pc, #56]	; (80054a4 <_read+0x58>)
 800546c:	f7fe fd20 	bl	8003eb0 <serial_getc>
 8005470:	2401      	movs	r4, #1
 8005472:	7028      	strb	r0, [r5, #0]
 8005474:	4620      	mov	r0, r4
 8005476:	bd70      	pop	{r4, r5, r6, pc}
 8005478:	3c03      	subs	r4, #3
 800547a:	4b0b      	ldr	r3, [pc, #44]	; (80054a8 <_read+0x5c>)
 800547c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005480:	b158      	cbz	r0, 800549a <_read+0x4e>
 8005482:	6803      	ldr	r3, [r0, #0]
 8005484:	4632      	mov	r2, r6
 8005486:	689b      	ldr	r3, [r3, #8]
 8005488:	4629      	mov	r1, r5
 800548a:	4798      	blx	r3
 800548c:	1e04      	subs	r4, r0, #0
 800548e:	daf1      	bge.n	8005474 <_read+0x28>
 8005490:	f000 fcb2 	bl	8005df8 <__errno>
 8005494:	4263      	negs	r3, r4
 8005496:	6003      	str	r3, [r0, #0]
 8005498:	e7ec      	b.n	8005474 <_read+0x28>
 800549a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800549e:	e7e9      	b.n	8005474 <_read+0x28>
 80054a0:	20001328 	.word	0x20001328
 80054a4:	20001ffc 	.word	0x20001ffc
 80054a8:	200015c0 	.word	0x200015c0

080054ac <_lseek>:
 80054ac:	b570      	push	{r4, r5, r6, lr}
 80054ae:	4604      	mov	r4, r0
 80054b0:	460d      	mov	r5, r1
 80054b2:	4616      	mov	r6, r2
 80054b4:	f000 fca0 	bl	8005df8 <__errno>
 80054b8:	2309      	movs	r3, #9
 80054ba:	2c02      	cmp	r4, #2
 80054bc:	6003      	str	r3, [r0, #0]
 80054be:	dd0b      	ble.n	80054d8 <_lseek+0x2c>
 80054c0:	3c03      	subs	r4, #3
 80054c2:	4b08      	ldr	r3, [pc, #32]	; (80054e4 <_lseek+0x38>)
 80054c4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80054c8:	b140      	cbz	r0, 80054dc <_lseek+0x30>
 80054ca:	6803      	ldr	r3, [r0, #0]
 80054cc:	4632      	mov	r2, r6
 80054ce:	4629      	mov	r1, r5
 80054d0:	69db      	ldr	r3, [r3, #28]
 80054d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80054d6:	4718      	bx	r3
 80054d8:	2000      	movs	r0, #0
 80054da:	bd70      	pop	{r4, r5, r6, pc}
 80054dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80054e0:	bd70      	pop	{r4, r5, r6, pc}
 80054e2:	bf00      	nop
 80054e4:	200015c0 	.word	0x200015c0

080054e8 <software_init_hook>:
 80054e8:	b508      	push	{r3, lr}
 80054ea:	f7fe fd19 	bl	8003f20 <mbed_sdk_init>
 80054ee:	f7fc fcf3 	bl	8001ed8 <software_init_hook_rtos>
 80054f2:	bd08      	pop	{r3, pc}

080054f4 <mbed_main>:
 80054f4:	4770      	bx	lr

080054f6 <__wrap_main>:
 80054f6:	b508      	push	{r3, lr}
 80054f8:	f7ff fffc 	bl	80054f4 <mbed_main>
 80054fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005500:	f7fb be58 	b.w	80011b4 <main>

08005504 <_sbrk>:
 8005504:	4a0c      	ldr	r2, [pc, #48]	; (8005538 <_sbrk+0x34>)
 8005506:	6813      	ldr	r3, [r2, #0]
 8005508:	b510      	push	{r4, lr}
 800550a:	4418      	add	r0, r3
 800550c:	f3ef 8108 	mrs	r1, MSP
 8005510:	4288      	cmp	r0, r1
 8005512:	d305      	bcc.n	8005520 <_sbrk+0x1c>
 8005514:	4b09      	ldr	r3, [pc, #36]	; (800553c <_sbrk+0x38>)
 8005516:	220c      	movs	r2, #12
 8005518:	601a      	str	r2, [r3, #0]
 800551a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800551e:	bd10      	pop	{r4, pc}
 8005520:	4907      	ldr	r1, [pc, #28]	; (8005540 <_sbrk+0x3c>)
 8005522:	680c      	ldr	r4, [r1, #0]
 8005524:	b124      	cbz	r4, 8005530 <_sbrk+0x2c>
 8005526:	4907      	ldr	r1, [pc, #28]	; (8005544 <_sbrk+0x40>)
 8005528:	6809      	ldr	r1, [r1, #0]
 800552a:	4421      	add	r1, r4
 800552c:	4288      	cmp	r0, r1
 800552e:	d2f1      	bcs.n	8005514 <_sbrk+0x10>
 8005530:	6010      	str	r0, [r2, #0]
 8005532:	4618      	mov	r0, r3
 8005534:	bd10      	pop	{r4, pc}
 8005536:	bf00      	nop
 8005538:	200001a8 	.word	0x200001a8
 800553c:	20002024 	.word	0x20002024
 8005540:	200016c0 	.word	0x200016c0
 8005544:	200016c4 	.word	0x200016c4

08005548 <_exit>:
 8005548:	4c07      	ldr	r4, [pc, #28]	; (8005568 <_exit+0x20>)
 800554a:	b508      	push	{r3, lr}
 800554c:	6823      	ldr	r3, [r4, #0]
 800554e:	4605      	mov	r5, r0
 8005550:	6898      	ldr	r0, [r3, #8]
 8005552:	f000 fd09 	bl	8005f68 <fflush>
 8005556:	6823      	ldr	r3, [r4, #0]
 8005558:	68d8      	ldr	r0, [r3, #12]
 800555a:	f000 fd05 	bl	8005f68 <fflush>
 800555e:	b10d      	cbz	r5, 8005564 <_exit+0x1c>
 8005560:	f7fc fb20 	bl	8001ba4 <mbed_die>
 8005564:	e7fe      	b.n	8005564 <_exit+0x1c>
 8005566:	bf00      	nop
 8005568:	200001ac 	.word	0x200001ac

0800556c <__aeabi_atexit>:
 800556c:	2001      	movs	r0, #1
 800556e:	4770      	bx	lr

08005570 <__wrap_exit>:
 8005570:	b508      	push	{r3, lr}
 8005572:	f7ff ffe9 	bl	8005548 <_exit>

08005576 <__malloc_lock>:
 8005576:	b508      	push	{r3, lr}
 8005578:	f7fc fcbc 	bl	8001ef4 <__rtos_malloc_lock>
 800557c:	bd08      	pop	{r3, pc}

0800557e <__malloc_unlock>:
 800557e:	b508      	push	{r3, lr}
 8005580:	f7fc fcc0 	bl	8001f04 <__rtos_malloc_unlock>
 8005584:	bd08      	pop	{r3, pc}
	...

08005588 <operator new(unsigned int)>:
 8005588:	b510      	push	{r4, lr}
 800558a:	f000 fded 	bl	8006168 <malloc>
 800558e:	4604      	mov	r4, r0
 8005590:	b910      	cbnz	r0, 8005598 <operator new(unsigned int)+0x10>
 8005592:	4802      	ldr	r0, [pc, #8]	; (800559c <operator new(unsigned int)+0x14>)
 8005594:	f7fc fb40 	bl	8001c18 <error>
 8005598:	4620      	mov	r0, r4
 800559a:	bd10      	pop	{r4, pc}
 800559c:	08007467 	.word	0x08007467

080055a0 <operator new[](unsigned int)>:
 80055a0:	b510      	push	{r4, lr}
 80055a2:	f000 fde1 	bl	8006168 <malloc>
 80055a6:	4604      	mov	r4, r0
 80055a8:	b910      	cbnz	r0, 80055b0 <operator new[](unsigned int)+0x10>
 80055aa:	4802      	ldr	r0, [pc, #8]	; (80055b4 <operator new[](unsigned int)+0x14>)
 80055ac:	f7fc fb34 	bl	8001c18 <error>
 80055b0:	4620      	mov	r0, r4
 80055b2:	bd10      	pop	{r4, pc}
 80055b4:	08007448 	.word	0x08007448

080055b8 <operator delete[](void*)>:
 80055b8:	b108      	cbz	r0, 80055be <operator delete[](void*)+0x6>
 80055ba:	f000 bddd 	b.w	8006178 <free>
 80055be:	4770      	bx	lr

080055c0 <operator delete(void*)>:
 80055c0:	f7ff bffa 	b.w	80055b8 <operator delete[](void*)>

080055c4 <thread_terminate_hook>:
 80055c4:	4b02      	ldr	r3, [pc, #8]	; (80055d0 <thread_terminate_hook+0xc>)
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	b103      	cbz	r3, 80055cc <thread_terminate_hook+0x8>
 80055ca:	4718      	bx	r3
 80055cc:	4770      	bx	lr
 80055ce:	bf00      	nop
 80055d0:	200016c8 	.word	0x200016c8

080055d4 <rtos::Thread::wait(unsigned long)>:
 80055d4:	f7fd b86c 	b.w	80026b0 <osDelay>

080055d8 <rtos::Mutex::Mutex()>:
 80055d8:	b538      	push	{r3, r4, r5, lr}
 80055da:	f100 0508 	add.w	r5, r0, #8
 80055de:	4604      	mov	r4, r0
 80055e0:	2210      	movs	r2, #16
 80055e2:	2100      	movs	r1, #0
 80055e4:	4628      	mov	r0, r5
 80055e6:	f000 fe48 	bl	800627a <memset>
 80055ea:	4620      	mov	r0, r4
 80055ec:	f840 5f04 	str.w	r5, [r0, #4]!
 80055f0:	f7fd f8d0 	bl	8002794 <osMutexCreate>
 80055f4:	6020      	str	r0, [r4, #0]
 80055f6:	b910      	cbnz	r0, 80055fe <rtos::Mutex::Mutex()+0x26>
 80055f8:	4802      	ldr	r0, [pc, #8]	; (8005604 <rtos::Mutex::Mutex()+0x2c>)
 80055fa:	f7fc fb0d 	bl	8001c18 <error>
 80055fe:	4620      	mov	r0, r4
 8005600:	bd38      	pop	{r3, r4, r5, pc}
 8005602:	bf00      	nop
 8005604:	08007484 	.word	0x08007484

08005608 <rtos::Mutex::lock(unsigned long)>:
 8005608:	6800      	ldr	r0, [r0, #0]
 800560a:	f7fd b8e1 	b.w	80027d0 <osMutexWait>

0800560e <rtos::Mutex::unlock()>:
 800560e:	6800      	ldr	r0, [r0, #0]
 8005610:	f7fd b906 	b.w	8002820 <osMutexRelease>

08005614 <rtos::Mutex::~Mutex()>:
 8005614:	b510      	push	{r4, lr}
 8005616:	4604      	mov	r4, r0
 8005618:	6800      	ldr	r0, [r0, #0]
 800561a:	f7fd f947 	bl	80028ac <osMutexDelete>
 800561e:	4620      	mov	r0, r4
 8005620:	bd10      	pop	{r4, pc}
	...

08005624 <rt_set_PSP>:
 8005624:	f380 8809 	msr	PSP, r0
 8005628:	4770      	bx	lr

0800562a <rt_get_PSP>:
 800562a:	f3ef 8009 	mrs	r0, PSP
 800562e:	4770      	bx	lr

08005630 <os_set_env>:
 8005630:	4668      	mov	r0, sp
 8005632:	f380 8809 	msr	PSP, r0
 8005636:	485a      	ldr	r0, [pc, #360]	; (80057a0 <OS_Tick_Handler+0x10>)
 8005638:	7800      	ldrb	r0, [r0, #0]
 800563a:	07c0      	lsls	r0, r0, #31
 800563c:	bf14      	ite	ne
 800563e:	2002      	movne	r0, #2
 8005640:	2003      	moveq	r0, #3
 8005642:	f380 8814 	msr	CONTROL, r0
 8005646:	4770      	bx	lr

08005648 <_alloc_box>:
 8005648:	f8df c158 	ldr.w	r12, [pc, #344]	; 80057a4 <OS_Tick_Handler+0x14>
 800564c:	f3ef 8305 	mrs	r3, IPSR
 8005650:	061b      	lsls	r3, r3, #24
 8005652:	bf18      	it	ne
 8005654:	4760      	bxne	r12
 8005656:	f3ef 8314 	mrs	r3, CONTROL
 800565a:	07db      	lsls	r3, r3, #31
 800565c:	bf08      	it	eq
 800565e:	4760      	bxeq	r12
 8005660:	df00      	svc	0
 8005662:	4770      	bx	lr

08005664 <_free_box>:
 8005664:	f8df c140 	ldr.w	r12, [pc, #320]	; 80057a8 <OS_Tick_Handler+0x18>
 8005668:	f3ef 8305 	mrs	r3, IPSR
 800566c:	061b      	lsls	r3, r3, #24
 800566e:	bf18      	it	ne
 8005670:	4760      	bxne	r12
 8005672:	f3ef 8314 	mrs	r3, CONTROL
 8005676:	07db      	lsls	r3, r3, #31
 8005678:	bf08      	it	eq
 800567a:	4760      	bxeq	r12
 800567c:	df00      	svc	0
 800567e:	4770      	bx	lr

08005680 <SVC_Handler>:
 8005680:	f3ef 8009 	mrs	r0, PSP
 8005684:	6981      	ldr	r1, [r0, #24]
 8005686:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800568a:	bbe1      	cbnz	r1, 8005706 <SVC_User>
 800568c:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005690:	b510      	push	{r4, lr}
 8005692:	47e0      	blx	r12
 8005694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005698:	f3ef 8c09 	mrs	r12, PSP
 800569c:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80056a0:	4b42      	ldr	r3, [pc, #264]	; (80057ac <OS_Tick_Handler+0x1c>)
 80056a2:	e893 0006 	ldmia.w	r3, {r1, r2}
 80056a6:	4291      	cmp	r1, r2
 80056a8:	bf08      	it	eq
 80056aa:	4770      	bxeq	lr
 80056ac:	b941      	cbnz	r1, 80056c0 <SVC_ContextSave>
 80056ae:	f01e 0f10 	tst.w	lr, #16
 80056b2:	d116      	bne.n	80056e2 <SVC_ContextRestore>
 80056b4:	493e      	ldr	r1, [pc, #248]	; (80057b0 <OS_Tick_Handler+0x20>)
 80056b6:	6808      	ldr	r0, [r1, #0]
 80056b8:	f020 0001 	bic.w	r0, r0, #1
 80056bc:	6008      	str	r0, [r1, #0]
 80056be:	e010      	b.n	80056e2 <SVC_ContextRestore>

080056c0 <SVC_ContextSave>:
 80056c0:	f01e 0f10 	tst.w	lr, #16
 80056c4:	bf06      	itte	eq
 80056c6:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80056ca:	2001      	moveq	r0, #1
 80056cc:	2000      	movne	r0, #0
 80056ce:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80056d2:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80056d6:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80056da:	b40c      	push	{r2, r3}
 80056dc:	f7fc fcfe 	bl	80020dc <rt_stk_check>
 80056e0:	bc0c      	pop	{r2, r3}

080056e2 <SVC_ContextRestore>:
 80056e2:	601a      	str	r2, [r3, #0]
 80056e4:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80056e8:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80056ec:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80056f0:	2800      	cmp	r0, #0
 80056f2:	bf0e      	itee	eq
 80056f4:	f06f 0e02 	mvneq.w	lr, #2
 80056f8:	f06f 0e12 	mvnne.w	lr, #18
 80056fc:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005700:	f38c 8809 	msr	PSP, r12

08005704 <SVC_Exit>:
 8005704:	4770      	bx	lr

08005706 <SVC_User>:
 8005706:	b510      	push	{r4, lr}
 8005708:	4a2a      	ldr	r2, [pc, #168]	; (80057b4 <OS_Tick_Handler+0x24>)
 800570a:	6812      	ldr	r2, [r2, #0]
 800570c:	4291      	cmp	r1, r2
 800570e:	d809      	bhi.n	8005724 <SVC_Done>
 8005710:	4c29      	ldr	r4, [pc, #164]	; (80057b8 <OS_Tick_Handler+0x28>)
 8005712:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005716:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800571a:	47a0      	blx	r4
 800571c:	f3ef 8c09 	mrs	r12, PSP
 8005720:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005724 <SVC_Done>:
 8005724:	bd10      	pop	{r4, pc}

08005726 <PendSV_Handler>:
 8005726:	b510      	push	{r4, lr}
 8005728:	f7fc fc64 	bl	8001ff4 <rt_pop_req>

0800572c <Sys_Switch>:
 800572c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005730:	4b1e      	ldr	r3, [pc, #120]	; (80057ac <OS_Tick_Handler+0x1c>)
 8005732:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005736:	4291      	cmp	r1, r2
 8005738:	bf08      	it	eq
 800573a:	4770      	bxeq	lr
 800573c:	f3ef 8c09 	mrs	r12, PSP
 8005740:	f01e 0f10 	tst.w	lr, #16
 8005744:	bf06      	itte	eq
 8005746:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800574a:	2001      	moveq	r0, #1
 800574c:	2000      	movne	r0, #0
 800574e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005752:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005756:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800575a:	b40c      	push	{r2, r3}
 800575c:	f7fc fcbe 	bl	80020dc <rt_stk_check>
 8005760:	bc0c      	pop	{r2, r3}
 8005762:	601a      	str	r2, [r3, #0]
 8005764:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005768:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800576c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005770:	2800      	cmp	r0, #0
 8005772:	bf0e      	itee	eq
 8005774:	f06f 0e02 	mvneq.w	lr, #2
 8005778:	f06f 0e12 	mvnne.w	lr, #18
 800577c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005780:	f38c 8809 	msr	PSP, r12

08005784 <Sys_Exit>:
 8005784:	4770      	bx	lr

08005786 <SysTick_Handler>:
 8005786:	b510      	push	{r4, lr}
 8005788:	f7fc fc8a 	bl	80020a0 <rt_systick>
 800578c:	f7ff bfce 	b.w	800572c <Sys_Switch>

08005790 <OS_Tick_Handler>:
 8005790:	b510      	push	{r4, lr}
 8005792:	f7fc fc83 	bl	800209c <os_tick_irqack>
 8005796:	f7fc fc83 	bl	80020a0 <rt_systick>
 800579a:	f7ff bfc7 	b.w	800572c <Sys_Switch>
 800579e:	0000      	.short	0x0000
 80057a0:	08007172 	.word	0x08007172
 80057a4:	0800214b 	.word	0x0800214b
 80057a8:	08002165 	.word	0x08002165
 80057ac:	20001f70 	.word	0x20001f70
 80057b0:	e000ef34 	.word	0xe000ef34
 80057b4:	00000000 	.word	0x00000000
 80057b8:	fffffffc 	.word	0xfffffffc

080057bc <Reset_Handler>:
 80057bc:	f8df d020 	ldr.w	sp, [pc, #32]	; 80057e0 <LoopForever+0x2>
 80057c0:	2100      	movs	r1, #0
 80057c2:	e003      	b.n	80057cc <LoopCopyDataInit>

080057c4 <CopyDataInit>:
 80057c4:	4b07      	ldr	r3, [pc, #28]	; (80057e4 <LoopForever+0x6>)
 80057c6:	585b      	ldr	r3, [r3, r1]
 80057c8:	5043      	str	r3, [r0, r1]
 80057ca:	3104      	adds	r1, #4

080057cc <LoopCopyDataInit>:
 80057cc:	4806      	ldr	r0, [pc, #24]	; (80057e8 <LoopForever+0xa>)
 80057ce:	4b07      	ldr	r3, [pc, #28]	; (80057ec <LoopForever+0xe>)
 80057d0:	1842      	adds	r2, r0, r1
 80057d2:	429a      	cmp	r2, r3
 80057d4:	d3f6      	bcc.n	80057c4 <CopyDataInit>
 80057d6:	f7fe fc0d 	bl	8003ff4 <SystemInit>
 80057da:	f7fb fd49 	bl	8001270 <_start>

080057de <LoopForever>:
 80057de:	e7fe      	b.n	80057de <LoopForever>
 80057e0:	20003000 	.word	0x20003000
 80057e4:	08007550 	.word	0x08007550
 80057e8:	20000188 	.word	0x20000188
 80057ec:	20000234 	.word	0x20000234

080057f0 <ADC1_2_IRQHandler>:
 80057f0:	e7fe      	b.n	80057f0 <ADC1_2_IRQHandler>

080057f2 <std::__throw_length_error(char const*)>:
 80057f2:	b508      	push	{r3, lr}
 80057f4:	f7fb fd50 	bl	8001298 <abort>

080057f8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
 80057f8:	4b24      	ldr	r3, [pc, #144]	; (800588c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x94>)
 80057fa:	681a      	ldr	r2, [r3, #0]
 80057fc:	07d0      	lsls	r0, r2, #31
 80057fe:	bf5c      	itt	pl
 8005800:	2201      	movpl	r2, #1
 8005802:	601a      	strpl	r2, [r3, #0]
 8005804:	4b22      	ldr	r3, [pc, #136]	; (8005890 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>)
 8005806:	681a      	ldr	r2, [r3, #0]
 8005808:	07d1      	lsls	r1, r2, #31
 800580a:	bf5c      	itt	pl
 800580c:	2201      	movpl	r2, #1
 800580e:	601a      	strpl	r2, [r3, #0]
 8005810:	4b20      	ldr	r3, [pc, #128]	; (8005894 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x9c>)
 8005812:	681a      	ldr	r2, [r3, #0]
 8005814:	07d2      	lsls	r2, r2, #31
 8005816:	bf5c      	itt	pl
 8005818:	2201      	movpl	r2, #1
 800581a:	601a      	strpl	r2, [r3, #0]
 800581c:	4b1e      	ldr	r3, [pc, #120]	; (8005898 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa0>)
 800581e:	681a      	ldr	r2, [r3, #0]
 8005820:	07d0      	lsls	r0, r2, #31
 8005822:	bf5c      	itt	pl
 8005824:	2201      	movpl	r2, #1
 8005826:	601a      	strpl	r2, [r3, #0]
 8005828:	4b1c      	ldr	r3, [pc, #112]	; (800589c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa4>)
 800582a:	681a      	ldr	r2, [r3, #0]
 800582c:	07d1      	lsls	r1, r2, #31
 800582e:	bf5c      	itt	pl
 8005830:	2201      	movpl	r2, #1
 8005832:	601a      	strpl	r2, [r3, #0]
 8005834:	4b1a      	ldr	r3, [pc, #104]	; (80058a0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa8>)
 8005836:	681a      	ldr	r2, [r3, #0]
 8005838:	07d2      	lsls	r2, r2, #31
 800583a:	bf5c      	itt	pl
 800583c:	2201      	movpl	r2, #1
 800583e:	601a      	strpl	r2, [r3, #0]
 8005840:	4b18      	ldr	r3, [pc, #96]	; (80058a4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xac>)
 8005842:	681a      	ldr	r2, [r3, #0]
 8005844:	07d0      	lsls	r0, r2, #31
 8005846:	bf5c      	itt	pl
 8005848:	2201      	movpl	r2, #1
 800584a:	601a      	strpl	r2, [r3, #0]
 800584c:	4b16      	ldr	r3, [pc, #88]	; (80058a8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb0>)
 800584e:	681a      	ldr	r2, [r3, #0]
 8005850:	07d1      	lsls	r1, r2, #31
 8005852:	bf5c      	itt	pl
 8005854:	2201      	movpl	r2, #1
 8005856:	601a      	strpl	r2, [r3, #0]
 8005858:	4b14      	ldr	r3, [pc, #80]	; (80058ac <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb4>)
 800585a:	681a      	ldr	r2, [r3, #0]
 800585c:	07d2      	lsls	r2, r2, #31
 800585e:	bf5c      	itt	pl
 8005860:	2201      	movpl	r2, #1
 8005862:	601a      	strpl	r2, [r3, #0]
 8005864:	4b12      	ldr	r3, [pc, #72]	; (80058b0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb8>)
 8005866:	681a      	ldr	r2, [r3, #0]
 8005868:	07d0      	lsls	r0, r2, #31
 800586a:	bf5c      	itt	pl
 800586c:	2201      	movpl	r2, #1
 800586e:	601a      	strpl	r2, [r3, #0]
 8005870:	4b10      	ldr	r3, [pc, #64]	; (80058b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xbc>)
 8005872:	681a      	ldr	r2, [r3, #0]
 8005874:	07d1      	lsls	r1, r2, #31
 8005876:	bf5c      	itt	pl
 8005878:	2201      	movpl	r2, #1
 800587a:	601a      	strpl	r2, [r3, #0]
 800587c:	4b0e      	ldr	r3, [pc, #56]	; (80058b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc0>)
 800587e:	681a      	ldr	r2, [r3, #0]
 8005880:	07d2      	lsls	r2, r2, #31
 8005882:	bf5c      	itt	pl
 8005884:	2201      	movpl	r2, #1
 8005886:	601a      	strpl	r2, [r3, #0]
 8005888:	4770      	bx	lr
 800588a:	bf00      	nop
 800588c:	200016f8 	.word	0x200016f8
 8005890:	200016f4 	.word	0x200016f4
 8005894:	200016f0 	.word	0x200016f0
 8005898:	200016ec 	.word	0x200016ec
 800589c:	200016e8 	.word	0x200016e8
 80058a0:	200016e4 	.word	0x200016e4
 80058a4:	200016e0 	.word	0x200016e0
 80058a8:	200016dc 	.word	0x200016dc
 80058ac:	200016d8 	.word	0x200016d8
 80058b0:	200016d4 	.word	0x200016d4
 80058b4:	200016d0 	.word	0x200016d0
 80058b8:	200016cc 	.word	0x200016cc

080058bc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
 80058bc:	4b24      	ldr	r3, [pc, #144]	; (8005950 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x94>)
 80058be:	681a      	ldr	r2, [r3, #0]
 80058c0:	07d0      	lsls	r0, r2, #31
 80058c2:	bf5c      	itt	pl
 80058c4:	2201      	movpl	r2, #1
 80058c6:	601a      	strpl	r2, [r3, #0]
 80058c8:	4b22      	ldr	r3, [pc, #136]	; (8005954 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>)
 80058ca:	681a      	ldr	r2, [r3, #0]
 80058cc:	07d1      	lsls	r1, r2, #31
 80058ce:	bf5c      	itt	pl
 80058d0:	2201      	movpl	r2, #1
 80058d2:	601a      	strpl	r2, [r3, #0]
 80058d4:	4b20      	ldr	r3, [pc, #128]	; (8005958 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x9c>)
 80058d6:	681a      	ldr	r2, [r3, #0]
 80058d8:	07d2      	lsls	r2, r2, #31
 80058da:	bf5c      	itt	pl
 80058dc:	2201      	movpl	r2, #1
 80058de:	601a      	strpl	r2, [r3, #0]
 80058e0:	4b1e      	ldr	r3, [pc, #120]	; (800595c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa0>)
 80058e2:	681a      	ldr	r2, [r3, #0]
 80058e4:	07d0      	lsls	r0, r2, #31
 80058e6:	bf5c      	itt	pl
 80058e8:	2201      	movpl	r2, #1
 80058ea:	601a      	strpl	r2, [r3, #0]
 80058ec:	4b1c      	ldr	r3, [pc, #112]	; (8005960 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa4>)
 80058ee:	681a      	ldr	r2, [r3, #0]
 80058f0:	07d1      	lsls	r1, r2, #31
 80058f2:	bf5c      	itt	pl
 80058f4:	2201      	movpl	r2, #1
 80058f6:	601a      	strpl	r2, [r3, #0]
 80058f8:	4b1a      	ldr	r3, [pc, #104]	; (8005964 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa8>)
 80058fa:	681a      	ldr	r2, [r3, #0]
 80058fc:	07d2      	lsls	r2, r2, #31
 80058fe:	bf5c      	itt	pl
 8005900:	2201      	movpl	r2, #1
 8005902:	601a      	strpl	r2, [r3, #0]
 8005904:	4b18      	ldr	r3, [pc, #96]	; (8005968 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xac>)
 8005906:	681a      	ldr	r2, [r3, #0]
 8005908:	07d0      	lsls	r0, r2, #31
 800590a:	bf5c      	itt	pl
 800590c:	2201      	movpl	r2, #1
 800590e:	601a      	strpl	r2, [r3, #0]
 8005910:	4b16      	ldr	r3, [pc, #88]	; (800596c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb0>)
 8005912:	681a      	ldr	r2, [r3, #0]
 8005914:	07d1      	lsls	r1, r2, #31
 8005916:	bf5c      	itt	pl
 8005918:	2201      	movpl	r2, #1
 800591a:	601a      	strpl	r2, [r3, #0]
 800591c:	4b14      	ldr	r3, [pc, #80]	; (8005970 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb4>)
 800591e:	681a      	ldr	r2, [r3, #0]
 8005920:	07d2      	lsls	r2, r2, #31
 8005922:	bf5c      	itt	pl
 8005924:	2201      	movpl	r2, #1
 8005926:	601a      	strpl	r2, [r3, #0]
 8005928:	4b12      	ldr	r3, [pc, #72]	; (8005974 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb8>)
 800592a:	681a      	ldr	r2, [r3, #0]
 800592c:	07d0      	lsls	r0, r2, #31
 800592e:	bf5c      	itt	pl
 8005930:	2201      	movpl	r2, #1
 8005932:	601a      	strpl	r2, [r3, #0]
 8005934:	4b10      	ldr	r3, [pc, #64]	; (8005978 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xbc>)
 8005936:	681a      	ldr	r2, [r3, #0]
 8005938:	07d1      	lsls	r1, r2, #31
 800593a:	bf5c      	itt	pl
 800593c:	2201      	movpl	r2, #1
 800593e:	601a      	strpl	r2, [r3, #0]
 8005940:	4b0e      	ldr	r3, [pc, #56]	; (800597c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc0>)
 8005942:	681a      	ldr	r2, [r3, #0]
 8005944:	07d2      	lsls	r2, r2, #31
 8005946:	bf5c      	itt	pl
 8005948:	2201      	movpl	r2, #1
 800594a:	601a      	strpl	r2, [r3, #0]
 800594c:	4770      	bx	lr
 800594e:	bf00      	nop
 8005950:	20001728 	.word	0x20001728
 8005954:	20001724 	.word	0x20001724
 8005958:	20001720 	.word	0x20001720
 800595c:	2000171c 	.word	0x2000171c
 8005960:	20001718 	.word	0x20001718
 8005964:	20001714 	.word	0x20001714
 8005968:	20001710 	.word	0x20001710
 800596c:	2000170c 	.word	0x2000170c
 8005970:	20001708 	.word	0x20001708
 8005974:	20001704 	.word	0x20001704
 8005978:	20001700 	.word	0x20001700
 800597c:	200016fc 	.word	0x200016fc

08005980 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 8005980:	4b18      	ldr	r3, [pc, #96]	; (80059e4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 8005982:	681a      	ldr	r2, [r3, #0]
 8005984:	07d1      	lsls	r1, r2, #31
 8005986:	bf5c      	itt	pl
 8005988:	2201      	movpl	r2, #1
 800598a:	601a      	strpl	r2, [r3, #0]
 800598c:	4b16      	ldr	r3, [pc, #88]	; (80059e8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 800598e:	681a      	ldr	r2, [r3, #0]
 8005990:	07d2      	lsls	r2, r2, #31
 8005992:	bf5c      	itt	pl
 8005994:	2201      	movpl	r2, #1
 8005996:	601a      	strpl	r2, [r3, #0]
 8005998:	4b14      	ldr	r3, [pc, #80]	; (80059ec <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 800599a:	681a      	ldr	r2, [r3, #0]
 800599c:	07d0      	lsls	r0, r2, #31
 800599e:	bf5c      	itt	pl
 80059a0:	2201      	movpl	r2, #1
 80059a2:	601a      	strpl	r2, [r3, #0]
 80059a4:	4b12      	ldr	r3, [pc, #72]	; (80059f0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 80059a6:	681a      	ldr	r2, [r3, #0]
 80059a8:	07d1      	lsls	r1, r2, #31
 80059aa:	bf5c      	itt	pl
 80059ac:	2201      	movpl	r2, #1
 80059ae:	601a      	strpl	r2, [r3, #0]
 80059b0:	4b10      	ldr	r3, [pc, #64]	; (80059f4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 80059b2:	681a      	ldr	r2, [r3, #0]
 80059b4:	07d2      	lsls	r2, r2, #31
 80059b6:	bf5c      	itt	pl
 80059b8:	2201      	movpl	r2, #1
 80059ba:	601a      	strpl	r2, [r3, #0]
 80059bc:	4b0e      	ldr	r3, [pc, #56]	; (80059f8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 80059be:	681a      	ldr	r2, [r3, #0]
 80059c0:	07d0      	lsls	r0, r2, #31
 80059c2:	bf5c      	itt	pl
 80059c4:	2201      	movpl	r2, #1
 80059c6:	601a      	strpl	r2, [r3, #0]
 80059c8:	4b0c      	ldr	r3, [pc, #48]	; (80059fc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 80059ca:	681a      	ldr	r2, [r3, #0]
 80059cc:	07d1      	lsls	r1, r2, #31
 80059ce:	bf5c      	itt	pl
 80059d0:	2201      	movpl	r2, #1
 80059d2:	601a      	strpl	r2, [r3, #0]
 80059d4:	4b0a      	ldr	r3, [pc, #40]	; (8005a00 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 80059d6:	681a      	ldr	r2, [r3, #0]
 80059d8:	07d2      	lsls	r2, r2, #31
 80059da:	bf5c      	itt	pl
 80059dc:	2201      	movpl	r2, #1
 80059de:	601a      	strpl	r2, [r3, #0]
 80059e0:	4770      	bx	lr
 80059e2:	bf00      	nop
 80059e4:	20001748 	.word	0x20001748
 80059e8:	20001744 	.word	0x20001744
 80059ec:	20001740 	.word	0x20001740
 80059f0:	2000173c 	.word	0x2000173c
 80059f4:	20001738 	.word	0x20001738
 80059f8:	20001734 	.word	0x20001734
 80059fc:	20001730 	.word	0x20001730
 8005a00:	2000172c 	.word	0x2000172c

08005a04 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 8005a04:	4b18      	ldr	r3, [pc, #96]	; (8005a68 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 8005a06:	681a      	ldr	r2, [r3, #0]
 8005a08:	07d1      	lsls	r1, r2, #31
 8005a0a:	bf5c      	itt	pl
 8005a0c:	2201      	movpl	r2, #1
 8005a0e:	601a      	strpl	r2, [r3, #0]
 8005a10:	4b16      	ldr	r3, [pc, #88]	; (8005a6c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 8005a12:	681a      	ldr	r2, [r3, #0]
 8005a14:	07d2      	lsls	r2, r2, #31
 8005a16:	bf5c      	itt	pl
 8005a18:	2201      	movpl	r2, #1
 8005a1a:	601a      	strpl	r2, [r3, #0]
 8005a1c:	4b14      	ldr	r3, [pc, #80]	; (8005a70 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 8005a1e:	681a      	ldr	r2, [r3, #0]
 8005a20:	07d0      	lsls	r0, r2, #31
 8005a22:	bf5c      	itt	pl
 8005a24:	2201      	movpl	r2, #1
 8005a26:	601a      	strpl	r2, [r3, #0]
 8005a28:	4b12      	ldr	r3, [pc, #72]	; (8005a74 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 8005a2a:	681a      	ldr	r2, [r3, #0]
 8005a2c:	07d1      	lsls	r1, r2, #31
 8005a2e:	bf5c      	itt	pl
 8005a30:	2201      	movpl	r2, #1
 8005a32:	601a      	strpl	r2, [r3, #0]
 8005a34:	4b10      	ldr	r3, [pc, #64]	; (8005a78 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 8005a36:	681a      	ldr	r2, [r3, #0]
 8005a38:	07d2      	lsls	r2, r2, #31
 8005a3a:	bf5c      	itt	pl
 8005a3c:	2201      	movpl	r2, #1
 8005a3e:	601a      	strpl	r2, [r3, #0]
 8005a40:	4b0e      	ldr	r3, [pc, #56]	; (8005a7c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 8005a42:	681a      	ldr	r2, [r3, #0]
 8005a44:	07d0      	lsls	r0, r2, #31
 8005a46:	bf5c      	itt	pl
 8005a48:	2201      	movpl	r2, #1
 8005a4a:	601a      	strpl	r2, [r3, #0]
 8005a4c:	4b0c      	ldr	r3, [pc, #48]	; (8005a80 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 8005a4e:	681a      	ldr	r2, [r3, #0]
 8005a50:	07d1      	lsls	r1, r2, #31
 8005a52:	bf5c      	itt	pl
 8005a54:	2201      	movpl	r2, #1
 8005a56:	601a      	strpl	r2, [r3, #0]
 8005a58:	4b0a      	ldr	r3, [pc, #40]	; (8005a84 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 8005a5a:	681a      	ldr	r2, [r3, #0]
 8005a5c:	07d2      	lsls	r2, r2, #31
 8005a5e:	bf5c      	itt	pl
 8005a60:	2201      	movpl	r2, #1
 8005a62:	601a      	strpl	r2, [r3, #0]
 8005a64:	4770      	bx	lr
 8005a66:	bf00      	nop
 8005a68:	20001768 	.word	0x20001768
 8005a6c:	20001764 	.word	0x20001764
 8005a70:	20001760 	.word	0x20001760
 8005a74:	2000175c 	.word	0x2000175c
 8005a78:	20001758 	.word	0x20001758
 8005a7c:	20001754 	.word	0x20001754
 8005a80:	20001750 	.word	0x20001750
 8005a84:	2000174c 	.word	0x2000174c

08005a88 <__aeabi_drsub>:
 8005a88:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8005a8c:	e002      	b.n	8005a94 <__adddf3>
 8005a8e:	bf00      	nop

08005a90 <__aeabi_dsub>:
 8005a90:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08005a94 <__adddf3>:
 8005a94:	b530      	push	{r4, r5, lr}
 8005a96:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8005a9a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8005a9e:	ea94 0f05 	teq	r4, r5
 8005aa2:	bf08      	it	eq
 8005aa4:	ea90 0f02 	teqeq	r0, r2
 8005aa8:	bf1f      	itttt	ne
 8005aaa:	ea54 0c00 	orrsne.w	r12, r4, r0
 8005aae:	ea55 0c02 	orrsne.w	r12, r5, r2
 8005ab2:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8005ab6:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8005aba:	f000 80e2 	beq.w	8005c82 <__adddf3+0x1ee>
 8005abe:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8005ac2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8005ac6:	bfb8      	it	lt
 8005ac8:	426d      	neglt	r5, r5
 8005aca:	dd0c      	ble.n	8005ae6 <__adddf3+0x52>
 8005acc:	442c      	add	r4, r5
 8005ace:	ea80 0202 	eor.w	r2, r0, r2
 8005ad2:	ea81 0303 	eor.w	r3, r1, r3
 8005ad6:	ea82 0000 	eor.w	r0, r2, r0
 8005ada:	ea83 0101 	eor.w	r1, r3, r1
 8005ade:	ea80 0202 	eor.w	r2, r0, r2
 8005ae2:	ea81 0303 	eor.w	r3, r1, r3
 8005ae6:	2d36      	cmp	r5, #54	; 0x36
 8005ae8:	bf88      	it	hi
 8005aea:	bd30      	pophi	{r4, r5, pc}
 8005aec:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8005af0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8005af4:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8005af8:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 8005afc:	d002      	beq.n	8005b04 <__adddf3+0x70>
 8005afe:	4240      	negs	r0, r0
 8005b00:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005b04:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8005b08:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8005b0c:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 8005b10:	d002      	beq.n	8005b18 <__adddf3+0x84>
 8005b12:	4252      	negs	r2, r2
 8005b14:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8005b18:	ea94 0f05 	teq	r4, r5
 8005b1c:	f000 80a7 	beq.w	8005c6e <__adddf3+0x1da>
 8005b20:	f1a4 0401 	sub.w	r4, r4, #1
 8005b24:	f1d5 0e20 	rsbs	lr, r5, #32
 8005b28:	db0d      	blt.n	8005b46 <__adddf3+0xb2>
 8005b2a:	fa02 fc0e 	lsl.w	r12, r2, lr
 8005b2e:	fa22 f205 	lsr.w	r2, r2, r5
 8005b32:	1880      	adds	r0, r0, r2
 8005b34:	f141 0100 	adc.w	r1, r1, #0
 8005b38:	fa03 f20e 	lsl.w	r2, r3, lr
 8005b3c:	1880      	adds	r0, r0, r2
 8005b3e:	fa43 f305 	asr.w	r3, r3, r5
 8005b42:	4159      	adcs	r1, r3
 8005b44:	e00e      	b.n	8005b64 <__adddf3+0xd0>
 8005b46:	f1a5 0520 	sub.w	r5, r5, #32
 8005b4a:	f10e 0e20 	add.w	lr, lr, #32
 8005b4e:	2a01      	cmp	r2, #1
 8005b50:	fa03 fc0e 	lsl.w	r12, r3, lr
 8005b54:	bf28      	it	cs
 8005b56:	f04c 0c02 	orrcs.w	r12, r12, #2
 8005b5a:	fa43 f305 	asr.w	r3, r3, r5
 8005b5e:	18c0      	adds	r0, r0, r3
 8005b60:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8005b64:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005b68:	d507      	bpl.n	8005b7a <__adddf3+0xe6>
 8005b6a:	f04f 0e00 	mov.w	lr, #0
 8005b6e:	f1dc 0c00 	rsbs	r12, r12, #0
 8005b72:	eb7e 0000 	sbcs.w	r0, lr, r0
 8005b76:	eb6e 0101 	sbc.w	r1, lr, r1
 8005b7a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8005b7e:	d31b      	bcc.n	8005bb8 <__adddf3+0x124>
 8005b80:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8005b84:	d30c      	bcc.n	8005ba0 <__adddf3+0x10c>
 8005b86:	0849      	lsrs	r1, r1, #1
 8005b88:	ea5f 0030 	movs.w	r0, r0, rrx
 8005b8c:	ea4f 0c3c 	mov.w	r12, r12, rrx
 8005b90:	f104 0401 	add.w	r4, r4, #1
 8005b94:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8005b98:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8005b9c:	f080 809a 	bcs.w	8005cd4 <__adddf3+0x240>
 8005ba0:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8005ba4:	bf08      	it	eq
 8005ba6:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8005baa:	f150 0000 	adcs.w	r0, r0, #0
 8005bae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8005bb2:	ea41 0105 	orr.w	r1, r1, r5
 8005bb6:	bd30      	pop	{r4, r5, pc}
 8005bb8:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8005bbc:	4140      	adcs	r0, r0
 8005bbe:	eb41 0101 	adc.w	r1, r1, r1
 8005bc2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8005bc6:	f1a4 0401 	sub.w	r4, r4, #1
 8005bca:	d1e9      	bne.n	8005ba0 <__adddf3+0x10c>
 8005bcc:	f091 0f00 	teq	r1, #0
 8005bd0:	bf04      	itt	eq
 8005bd2:	4601      	moveq	r1, r0
 8005bd4:	2000      	moveq	r0, #0
 8005bd6:	fab1 f381 	clz	r3, r1
 8005bda:	bf08      	it	eq
 8005bdc:	3320      	addeq	r3, #32
 8005bde:	f1a3 030b 	sub.w	r3, r3, #11
 8005be2:	f1b3 0220 	subs.w	r2, r3, #32
 8005be6:	da0c      	bge.n	8005c02 <__adddf3+0x16e>
 8005be8:	320c      	adds	r2, #12
 8005bea:	dd08      	ble.n	8005bfe <__adddf3+0x16a>
 8005bec:	f102 0c14 	add.w	r12, r2, #20
 8005bf0:	f1c2 020c 	rsb	r2, r2, #12
 8005bf4:	fa01 f00c 	lsl.w	r0, r1, r12
 8005bf8:	fa21 f102 	lsr.w	r1, r1, r2
 8005bfc:	e00c      	b.n	8005c18 <__adddf3+0x184>
 8005bfe:	f102 0214 	add.w	r2, r2, #20
 8005c02:	bfd8      	it	le
 8005c04:	f1c2 0c20 	rsble	r12, r2, #32
 8005c08:	fa01 f102 	lsl.w	r1, r1, r2
 8005c0c:	fa20 fc0c 	lsr.w	r12, r0, r12
 8005c10:	bfdc      	itt	le
 8005c12:	ea41 010c 	orrle.w	r1, r1, r12
 8005c16:	4090      	lslle	r0, r2
 8005c18:	1ae4      	subs	r4, r4, r3
 8005c1a:	bfa2      	ittt	ge
 8005c1c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8005c20:	4329      	orrge	r1, r5
 8005c22:	bd30      	popge	{r4, r5, pc}
 8005c24:	ea6f 0404 	mvn.w	r4, r4
 8005c28:	3c1f      	subs	r4, #31
 8005c2a:	da1c      	bge.n	8005c66 <__adddf3+0x1d2>
 8005c2c:	340c      	adds	r4, #12
 8005c2e:	dc0e      	bgt.n	8005c4e <__adddf3+0x1ba>
 8005c30:	f104 0414 	add.w	r4, r4, #20
 8005c34:	f1c4 0220 	rsb	r2, r4, #32
 8005c38:	fa20 f004 	lsr.w	r0, r0, r4
 8005c3c:	fa01 f302 	lsl.w	r3, r1, r2
 8005c40:	ea40 0003 	orr.w	r0, r0, r3
 8005c44:	fa21 f304 	lsr.w	r3, r1, r4
 8005c48:	ea45 0103 	orr.w	r1, r5, r3
 8005c4c:	bd30      	pop	{r4, r5, pc}
 8005c4e:	f1c4 040c 	rsb	r4, r4, #12
 8005c52:	f1c4 0220 	rsb	r2, r4, #32
 8005c56:	fa20 f002 	lsr.w	r0, r0, r2
 8005c5a:	fa01 f304 	lsl.w	r3, r1, r4
 8005c5e:	ea40 0003 	orr.w	r0, r0, r3
 8005c62:	4629      	mov	r1, r5
 8005c64:	bd30      	pop	{r4, r5, pc}
 8005c66:	fa21 f004 	lsr.w	r0, r1, r4
 8005c6a:	4629      	mov	r1, r5
 8005c6c:	bd30      	pop	{r4, r5, pc}
 8005c6e:	f094 0f00 	teq	r4, #0
 8005c72:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8005c76:	bf06      	itte	eq
 8005c78:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8005c7c:	3401      	addeq	r4, #1
 8005c7e:	3d01      	subne	r5, #1
 8005c80:	e74e      	b.n	8005b20 <__adddf3+0x8c>
 8005c82:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005c86:	bf18      	it	ne
 8005c88:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8005c8c:	d029      	beq.n	8005ce2 <__adddf3+0x24e>
 8005c8e:	ea94 0f05 	teq	r4, r5
 8005c92:	bf08      	it	eq
 8005c94:	ea90 0f02 	teqeq	r0, r2
 8005c98:	d005      	beq.n	8005ca6 <__adddf3+0x212>
 8005c9a:	ea54 0c00 	orrs.w	r12, r4, r0
 8005c9e:	bf04      	itt	eq
 8005ca0:	4619      	moveq	r1, r3
 8005ca2:	4610      	moveq	r0, r2
 8005ca4:	bd30      	pop	{r4, r5, pc}
 8005ca6:	ea91 0f03 	teq	r1, r3
 8005caa:	bf1e      	ittt	ne
 8005cac:	2100      	movne	r1, #0
 8005cae:	2000      	movne	r0, #0
 8005cb0:	bd30      	popne	{r4, r5, pc}
 8005cb2:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8005cb6:	d105      	bne.n	8005cc4 <__adddf3+0x230>
 8005cb8:	0040      	lsls	r0, r0, #1
 8005cba:	4149      	adcs	r1, r1
 8005cbc:	bf28      	it	cs
 8005cbe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8005cc2:	bd30      	pop	{r4, r5, pc}
 8005cc4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8005cc8:	bf3c      	itt	cc
 8005cca:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8005cce:	bd30      	popcc	{r4, r5, pc}
 8005cd0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005cd4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8005cd8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8005cdc:	f04f 0000 	mov.w	r0, #0
 8005ce0:	bd30      	pop	{r4, r5, pc}
 8005ce2:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005ce6:	bf1a      	itte	ne
 8005ce8:	4619      	movne	r1, r3
 8005cea:	4610      	movne	r0, r2
 8005cec:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 8005cf0:	bf1c      	itt	ne
 8005cf2:	460b      	movne	r3, r1
 8005cf4:	4602      	movne	r2, r0
 8005cf6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8005cfa:	bf06      	itte	eq
 8005cfc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8005d00:	ea91 0f03 	teqeq	r1, r3
 8005d04:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8005d08:	bd30      	pop	{r4, r5, pc}
 8005d0a:	bf00      	nop

08005d0c <__aeabi_ui2d>:
 8005d0c:	f090 0f00 	teq	r0, #0
 8005d10:	bf04      	itt	eq
 8005d12:	2100      	moveq	r1, #0
 8005d14:	4770      	bxeq	lr
 8005d16:	b530      	push	{r4, r5, lr}
 8005d18:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005d1c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005d20:	f04f 0500 	mov.w	r5, #0
 8005d24:	f04f 0100 	mov.w	r1, #0
 8005d28:	e750      	b.n	8005bcc <__adddf3+0x138>
 8005d2a:	bf00      	nop

08005d2c <__aeabi_i2d>:
 8005d2c:	f090 0f00 	teq	r0, #0
 8005d30:	bf04      	itt	eq
 8005d32:	2100      	moveq	r1, #0
 8005d34:	4770      	bxeq	lr
 8005d36:	b530      	push	{r4, r5, lr}
 8005d38:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005d3c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005d40:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8005d44:	bf48      	it	mi
 8005d46:	4240      	negmi	r0, r0
 8005d48:	f04f 0100 	mov.w	r1, #0
 8005d4c:	e73e      	b.n	8005bcc <__adddf3+0x138>
 8005d4e:	bf00      	nop

08005d50 <__aeabi_f2d>:
 8005d50:	0042      	lsls	r2, r0, #1
 8005d52:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8005d56:	ea4f 0131 	mov.w	r1, r1, rrx
 8005d5a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8005d5e:	bf1f      	itttt	ne
 8005d60:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8005d64:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005d68:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8005d6c:	4770      	bxne	lr
 8005d6e:	f092 0f00 	teq	r2, #0
 8005d72:	bf14      	ite	ne
 8005d74:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005d78:	4770      	bxeq	lr
 8005d7a:	b530      	push	{r4, r5, lr}
 8005d7c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8005d80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005d84:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8005d88:	e720      	b.n	8005bcc <__adddf3+0x138>
 8005d8a:	bf00      	nop

08005d8c <__aeabi_ul2d>:
 8005d8c:	ea50 0201 	orrs.w	r2, r0, r1
 8005d90:	bf08      	it	eq
 8005d92:	4770      	bxeq	lr
 8005d94:	b530      	push	{r4, r5, lr}
 8005d96:	f04f 0500 	mov.w	r5, #0
 8005d9a:	e00a      	b.n	8005db2 <__aeabi_l2d+0x16>

08005d9c <__aeabi_l2d>:
 8005d9c:	ea50 0201 	orrs.w	r2, r0, r1
 8005da0:	bf08      	it	eq
 8005da2:	4770      	bxeq	lr
 8005da4:	b530      	push	{r4, r5, lr}
 8005da6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8005daa:	d502      	bpl.n	8005db2 <__aeabi_l2d+0x16>
 8005dac:	4240      	negs	r0, r0
 8005dae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005db2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005db6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005dba:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 8005dbe:	f43f aedc 	beq.w	8005b7a <__adddf3+0xe6>
 8005dc2:	f04f 0203 	mov.w	r2, #3
 8005dc6:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005dca:	bf18      	it	ne
 8005dcc:	3203      	addne	r2, #3
 8005dce:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005dd2:	bf18      	it	ne
 8005dd4:	3203      	addne	r2, #3
 8005dd6:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8005dda:	f1c2 0320 	rsb	r3, r2, #32
 8005dde:	fa00 fc03 	lsl.w	r12, r0, r3
 8005de2:	fa20 f002 	lsr.w	r0, r0, r2
 8005de6:	fa01 fe03 	lsl.w	lr, r1, r3
 8005dea:	ea40 000e 	orr.w	r0, r0, lr
 8005dee:	fa21 f102 	lsr.w	r1, r1, r2
 8005df2:	4414      	add	r4, r2
 8005df4:	e6c1      	b.n	8005b7a <__adddf3+0xe6>
 8005df6:	bf00      	nop

08005df8 <__errno>:
 8005df8:	4b01      	ldr	r3, [pc, #4]	; (8005e00 <__errno+0x8>)
 8005dfa:	6818      	ldr	r0, [r3, #0]
 8005dfc:	4770      	bx	lr
 8005dfe:	bf00      	nop
 8005e00:	200001ac 	.word	0x200001ac

08005e04 <__sflush_r>:
 8005e04:	898a      	ldrh	r2, [r1, #12]
 8005e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e0a:	4605      	mov	r5, r0
 8005e0c:	0710      	lsls	r0, r2, #28
 8005e0e:	460c      	mov	r4, r1
 8005e10:	d45a      	bmi.n	8005ec8 <__sflush_r+0xc4>
 8005e12:	684b      	ldr	r3, [r1, #4]
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	dc05      	bgt.n	8005e24 <__sflush_r+0x20>
 8005e18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	dc02      	bgt.n	8005e24 <__sflush_r+0x20>
 8005e1e:	2000      	movs	r0, #0
 8005e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005e26:	2e00      	cmp	r6, #0
 8005e28:	d0f9      	beq.n	8005e1e <__sflush_r+0x1a>
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005e30:	682f      	ldr	r7, [r5, #0]
 8005e32:	602b      	str	r3, [r5, #0]
 8005e34:	d033      	beq.n	8005e9e <__sflush_r+0x9a>
 8005e36:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005e38:	89a3      	ldrh	r3, [r4, #12]
 8005e3a:	075a      	lsls	r2, r3, #29
 8005e3c:	d505      	bpl.n	8005e4a <__sflush_r+0x46>
 8005e3e:	6863      	ldr	r3, [r4, #4]
 8005e40:	1ac0      	subs	r0, r0, r3
 8005e42:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e44:	b10b      	cbz	r3, 8005e4a <__sflush_r+0x46>
 8005e46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e48:	1ac0      	subs	r0, r0, r3
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	4602      	mov	r2, r0
 8005e4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005e50:	6a21      	ldr	r1, [r4, #32]
 8005e52:	4628      	mov	r0, r5
 8005e54:	47b0      	blx	r6
 8005e56:	1c43      	adds	r3, r0, #1
 8005e58:	89a3      	ldrh	r3, [r4, #12]
 8005e5a:	d106      	bne.n	8005e6a <__sflush_r+0x66>
 8005e5c:	6829      	ldr	r1, [r5, #0]
 8005e5e:	291d      	cmp	r1, #29
 8005e60:	d84b      	bhi.n	8005efa <__sflush_r+0xf6>
 8005e62:	4a2b      	ldr	r2, [pc, #172]	; (8005f10 <__sflush_r+0x10c>)
 8005e64:	40ca      	lsrs	r2, r1
 8005e66:	07d6      	lsls	r6, r2, #31
 8005e68:	d547      	bpl.n	8005efa <__sflush_r+0xf6>
 8005e6a:	2200      	movs	r2, #0
 8005e6c:	6062      	str	r2, [r4, #4]
 8005e6e:	04d9      	lsls	r1, r3, #19
 8005e70:	6922      	ldr	r2, [r4, #16]
 8005e72:	6022      	str	r2, [r4, #0]
 8005e74:	d504      	bpl.n	8005e80 <__sflush_r+0x7c>
 8005e76:	1c42      	adds	r2, r0, #1
 8005e78:	d101      	bne.n	8005e7e <__sflush_r+0x7a>
 8005e7a:	682b      	ldr	r3, [r5, #0]
 8005e7c:	b903      	cbnz	r3, 8005e80 <__sflush_r+0x7c>
 8005e7e:	6560      	str	r0, [r4, #84]	; 0x54
 8005e80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005e82:	602f      	str	r7, [r5, #0]
 8005e84:	2900      	cmp	r1, #0
 8005e86:	d0ca      	beq.n	8005e1e <__sflush_r+0x1a>
 8005e88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005e8c:	4299      	cmp	r1, r3
 8005e8e:	d002      	beq.n	8005e96 <__sflush_r+0x92>
 8005e90:	4628      	mov	r0, r5
 8005e92:	f7ff fa4f 	bl	8005334 <__wrap__free_r>
 8005e96:	2000      	movs	r0, #0
 8005e98:	6360      	str	r0, [r4, #52]	; 0x34
 8005e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e9e:	6a21      	ldr	r1, [r4, #32]
 8005ea0:	2301      	movs	r3, #1
 8005ea2:	4628      	mov	r0, r5
 8005ea4:	47b0      	blx	r6
 8005ea6:	1c41      	adds	r1, r0, #1
 8005ea8:	d1c6      	bne.n	8005e38 <__sflush_r+0x34>
 8005eaa:	682b      	ldr	r3, [r5, #0]
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d0c3      	beq.n	8005e38 <__sflush_r+0x34>
 8005eb0:	2b1d      	cmp	r3, #29
 8005eb2:	d001      	beq.n	8005eb8 <__sflush_r+0xb4>
 8005eb4:	2b16      	cmp	r3, #22
 8005eb6:	d101      	bne.n	8005ebc <__sflush_r+0xb8>
 8005eb8:	602f      	str	r7, [r5, #0]
 8005eba:	e7b0      	b.n	8005e1e <__sflush_r+0x1a>
 8005ebc:	89a3      	ldrh	r3, [r4, #12]
 8005ebe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005ec2:	81a3      	strh	r3, [r4, #12]
 8005ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005ec8:	690f      	ldr	r7, [r1, #16]
 8005eca:	2f00      	cmp	r7, #0
 8005ecc:	d0a7      	beq.n	8005e1e <__sflush_r+0x1a>
 8005ece:	0793      	lsls	r3, r2, #30
 8005ed0:	680e      	ldr	r6, [r1, #0]
 8005ed2:	bf08      	it	eq
 8005ed4:	694b      	ldreq	r3, [r1, #20]
 8005ed6:	600f      	str	r7, [r1, #0]
 8005ed8:	bf18      	it	ne
 8005eda:	2300      	movne	r3, #0
 8005edc:	eba6 0807 	sub.w	r8, r6, r7
 8005ee0:	608b      	str	r3, [r1, #8]
 8005ee2:	f1b8 0f00 	cmp.w	r8, #0
 8005ee6:	dd9a      	ble.n	8005e1e <__sflush_r+0x1a>
 8005ee8:	4643      	mov	r3, r8
 8005eea:	463a      	mov	r2, r7
 8005eec:	6a21      	ldr	r1, [r4, #32]
 8005eee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005ef0:	4628      	mov	r0, r5
 8005ef2:	47b0      	blx	r6
 8005ef4:	2800      	cmp	r0, #0
 8005ef6:	dc07      	bgt.n	8005f08 <__sflush_r+0x104>
 8005ef8:	89a3      	ldrh	r3, [r4, #12]
 8005efa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005efe:	81a3      	strh	r3, [r4, #12]
 8005f00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f08:	4407      	add	r7, r0
 8005f0a:	eba8 0800 	sub.w	r8, r8, r0
 8005f0e:	e7e8      	b.n	8005ee2 <__sflush_r+0xde>
 8005f10:	20400001 	.word	0x20400001

08005f14 <_fflush_r>:
 8005f14:	b538      	push	{r3, r4, r5, lr}
 8005f16:	690b      	ldr	r3, [r1, #16]
 8005f18:	4605      	mov	r5, r0
 8005f1a:	460c      	mov	r4, r1
 8005f1c:	b1db      	cbz	r3, 8005f56 <_fflush_r+0x42>
 8005f1e:	b118      	cbz	r0, 8005f28 <_fflush_r+0x14>
 8005f20:	6983      	ldr	r3, [r0, #24]
 8005f22:	b90b      	cbnz	r3, 8005f28 <_fflush_r+0x14>
 8005f24:	f000 f872 	bl	800600c <__sinit>
 8005f28:	4b0c      	ldr	r3, [pc, #48]	; (8005f5c <_fflush_r+0x48>)
 8005f2a:	429c      	cmp	r4, r3
 8005f2c:	d109      	bne.n	8005f42 <_fflush_r+0x2e>
 8005f2e:	686c      	ldr	r4, [r5, #4]
 8005f30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005f34:	b17b      	cbz	r3, 8005f56 <_fflush_r+0x42>
 8005f36:	4621      	mov	r1, r4
 8005f38:	4628      	mov	r0, r5
 8005f3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005f3e:	f7ff bf61 	b.w	8005e04 <__sflush_r>
 8005f42:	4b07      	ldr	r3, [pc, #28]	; (8005f60 <_fflush_r+0x4c>)
 8005f44:	429c      	cmp	r4, r3
 8005f46:	d101      	bne.n	8005f4c <_fflush_r+0x38>
 8005f48:	68ac      	ldr	r4, [r5, #8]
 8005f4a:	e7f1      	b.n	8005f30 <_fflush_r+0x1c>
 8005f4c:	4b05      	ldr	r3, [pc, #20]	; (8005f64 <_fflush_r+0x50>)
 8005f4e:	429c      	cmp	r4, r3
 8005f50:	bf08      	it	eq
 8005f52:	68ec      	ldreq	r4, [r5, #12]
 8005f54:	e7ec      	b.n	8005f30 <_fflush_r+0x1c>
 8005f56:	2000      	movs	r0, #0
 8005f58:	bd38      	pop	{r3, r4, r5, pc}
 8005f5a:	bf00      	nop
 8005f5c:	080074cc 	.word	0x080074cc
 8005f60:	080074ec 	.word	0x080074ec
 8005f64:	080074ac 	.word	0x080074ac

08005f68 <fflush>:
 8005f68:	4601      	mov	r1, r0
 8005f6a:	b920      	cbnz	r0, 8005f76 <fflush+0xe>
 8005f6c:	4b04      	ldr	r3, [pc, #16]	; (8005f80 <fflush+0x18>)
 8005f6e:	4905      	ldr	r1, [pc, #20]	; (8005f84 <fflush+0x1c>)
 8005f70:	6818      	ldr	r0, [r3, #0]
 8005f72:	f000 b8b7 	b.w	80060e4 <_fwalk_reent>
 8005f76:	4b04      	ldr	r3, [pc, #16]	; (8005f88 <fflush+0x20>)
 8005f78:	6818      	ldr	r0, [r3, #0]
 8005f7a:	f7ff bfcb 	b.w	8005f14 <_fflush_r>
 8005f7e:	bf00      	nop
 8005f80:	0800750c 	.word	0x0800750c
 8005f84:	08005f15 	.word	0x08005f15
 8005f88:	200001ac 	.word	0x200001ac

08005f8c <_cleanup_r>:
 8005f8c:	4901      	ldr	r1, [pc, #4]	; (8005f94 <_cleanup_r+0x8>)
 8005f8e:	f000 b8a9 	b.w	80060e4 <_fwalk_reent>
 8005f92:	bf00      	nop
 8005f94:	08005f15 	.word	0x08005f15

08005f98 <std.isra.0>:
 8005f98:	2300      	movs	r3, #0
 8005f9a:	b510      	push	{r4, lr}
 8005f9c:	4604      	mov	r4, r0
 8005f9e:	6003      	str	r3, [r0, #0]
 8005fa0:	6043      	str	r3, [r0, #4]
 8005fa2:	6083      	str	r3, [r0, #8]
 8005fa4:	8181      	strh	r1, [r0, #12]
 8005fa6:	6643      	str	r3, [r0, #100]	; 0x64
 8005fa8:	81c2      	strh	r2, [r0, #14]
 8005faa:	6103      	str	r3, [r0, #16]
 8005fac:	6143      	str	r3, [r0, #20]
 8005fae:	6183      	str	r3, [r0, #24]
 8005fb0:	4619      	mov	r1, r3
 8005fb2:	2208      	movs	r2, #8
 8005fb4:	305c      	adds	r0, #92	; 0x5c
 8005fb6:	f000 f960 	bl	800627a <memset>
 8005fba:	4b05      	ldr	r3, [pc, #20]	; (8005fd0 <std.isra.0+0x38>)
 8005fbc:	6263      	str	r3, [r4, #36]	; 0x24
 8005fbe:	4b05      	ldr	r3, [pc, #20]	; (8005fd4 <std.isra.0+0x3c>)
 8005fc0:	62a3      	str	r3, [r4, #40]	; 0x28
 8005fc2:	4b05      	ldr	r3, [pc, #20]	; (8005fd8 <std.isra.0+0x40>)
 8005fc4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005fc6:	4b05      	ldr	r3, [pc, #20]	; (8005fdc <std.isra.0+0x44>)
 8005fc8:	6224      	str	r4, [r4, #32]
 8005fca:	6323      	str	r3, [r4, #48]	; 0x30
 8005fcc:	bd10      	pop	{r4, pc}
 8005fce:	bf00      	nop
 8005fd0:	0800678d 	.word	0x0800678d
 8005fd4:	080067af 	.word	0x080067af
 8005fd8:	080067e7 	.word	0x080067e7
 8005fdc:	0800680b 	.word	0x0800680b

08005fe0 <__sfmoreglue>:
 8005fe0:	b570      	push	{r4, r5, r6, lr}
 8005fe2:	1e4a      	subs	r2, r1, #1
 8005fe4:	2568      	movs	r5, #104	; 0x68
 8005fe6:	4355      	muls	r5, r2
 8005fe8:	460e      	mov	r6, r1
 8005fea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005fee:	f7ff f99d 	bl	800532c <__wrap__malloc_r>
 8005ff2:	4604      	mov	r4, r0
 8005ff4:	b140      	cbz	r0, 8006008 <__sfmoreglue+0x28>
 8005ff6:	2100      	movs	r1, #0
 8005ff8:	e880 0042 	stmia.w	r0, {r1, r6}
 8005ffc:	300c      	adds	r0, #12
 8005ffe:	60a0      	str	r0, [r4, #8]
 8006000:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006004:	f000 f939 	bl	800627a <memset>
 8006008:	4620      	mov	r0, r4
 800600a:	bd70      	pop	{r4, r5, r6, pc}

0800600c <__sinit>:
 800600c:	6983      	ldr	r3, [r0, #24]
 800600e:	b510      	push	{r4, lr}
 8006010:	4604      	mov	r4, r0
 8006012:	bb33      	cbnz	r3, 8006062 <__sinit+0x56>
 8006014:	6483      	str	r3, [r0, #72]	; 0x48
 8006016:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006018:	6503      	str	r3, [r0, #80]	; 0x50
 800601a:	4b12      	ldr	r3, [pc, #72]	; (8006064 <__sinit+0x58>)
 800601c:	4a12      	ldr	r2, [pc, #72]	; (8006068 <__sinit+0x5c>)
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	6282      	str	r2, [r0, #40]	; 0x28
 8006022:	4298      	cmp	r0, r3
 8006024:	bf04      	itt	eq
 8006026:	2301      	moveq	r3, #1
 8006028:	6183      	streq	r3, [r0, #24]
 800602a:	f000 f81f 	bl	800606c <__sfp>
 800602e:	6060      	str	r0, [r4, #4]
 8006030:	4620      	mov	r0, r4
 8006032:	f000 f81b 	bl	800606c <__sfp>
 8006036:	60a0      	str	r0, [r4, #8]
 8006038:	4620      	mov	r0, r4
 800603a:	f000 f817 	bl	800606c <__sfp>
 800603e:	2200      	movs	r2, #0
 8006040:	60e0      	str	r0, [r4, #12]
 8006042:	2104      	movs	r1, #4
 8006044:	6860      	ldr	r0, [r4, #4]
 8006046:	f7ff ffa7 	bl	8005f98 <std.isra.0>
 800604a:	2201      	movs	r2, #1
 800604c:	2109      	movs	r1, #9
 800604e:	68a0      	ldr	r0, [r4, #8]
 8006050:	f7ff ffa2 	bl	8005f98 <std.isra.0>
 8006054:	2202      	movs	r2, #2
 8006056:	2112      	movs	r1, #18
 8006058:	68e0      	ldr	r0, [r4, #12]
 800605a:	f7ff ff9d 	bl	8005f98 <std.isra.0>
 800605e:	2301      	movs	r3, #1
 8006060:	61a3      	str	r3, [r4, #24]
 8006062:	bd10      	pop	{r4, pc}
 8006064:	0800750c 	.word	0x0800750c
 8006068:	08005f8d 	.word	0x08005f8d

0800606c <__sfp>:
 800606c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800606e:	4b1c      	ldr	r3, [pc, #112]	; (80060e0 <__sfp+0x74>)
 8006070:	681e      	ldr	r6, [r3, #0]
 8006072:	69b3      	ldr	r3, [r6, #24]
 8006074:	4607      	mov	r7, r0
 8006076:	b913      	cbnz	r3, 800607e <__sfp+0x12>
 8006078:	4630      	mov	r0, r6
 800607a:	f7ff ffc7 	bl	800600c <__sinit>
 800607e:	3648      	adds	r6, #72	; 0x48
 8006080:	68b4      	ldr	r4, [r6, #8]
 8006082:	6873      	ldr	r3, [r6, #4]
 8006084:	3b01      	subs	r3, #1
 8006086:	d503      	bpl.n	8006090 <__sfp+0x24>
 8006088:	6833      	ldr	r3, [r6, #0]
 800608a:	b133      	cbz	r3, 800609a <__sfp+0x2e>
 800608c:	6836      	ldr	r6, [r6, #0]
 800608e:	e7f7      	b.n	8006080 <__sfp+0x14>
 8006090:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006094:	b16d      	cbz	r5, 80060b2 <__sfp+0x46>
 8006096:	3468      	adds	r4, #104	; 0x68
 8006098:	e7f4      	b.n	8006084 <__sfp+0x18>
 800609a:	2104      	movs	r1, #4
 800609c:	4638      	mov	r0, r7
 800609e:	f7ff ff9f 	bl	8005fe0 <__sfmoreglue>
 80060a2:	6030      	str	r0, [r6, #0]
 80060a4:	2800      	cmp	r0, #0
 80060a6:	d1f1      	bne.n	800608c <__sfp+0x20>
 80060a8:	230c      	movs	r3, #12
 80060aa:	603b      	str	r3, [r7, #0]
 80060ac:	4604      	mov	r4, r0
 80060ae:	4620      	mov	r0, r4
 80060b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80060b6:	81e3      	strh	r3, [r4, #14]
 80060b8:	2301      	movs	r3, #1
 80060ba:	81a3      	strh	r3, [r4, #12]
 80060bc:	6665      	str	r5, [r4, #100]	; 0x64
 80060be:	6025      	str	r5, [r4, #0]
 80060c0:	60a5      	str	r5, [r4, #8]
 80060c2:	6065      	str	r5, [r4, #4]
 80060c4:	6125      	str	r5, [r4, #16]
 80060c6:	6165      	str	r5, [r4, #20]
 80060c8:	61a5      	str	r5, [r4, #24]
 80060ca:	2208      	movs	r2, #8
 80060cc:	4629      	mov	r1, r5
 80060ce:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80060d2:	f000 f8d2 	bl	800627a <memset>
 80060d6:	6365      	str	r5, [r4, #52]	; 0x34
 80060d8:	63a5      	str	r5, [r4, #56]	; 0x38
 80060da:	64a5      	str	r5, [r4, #72]	; 0x48
 80060dc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80060de:	e7e6      	b.n	80060ae <__sfp+0x42>
 80060e0:	0800750c 	.word	0x0800750c

080060e4 <_fwalk_reent>:
 80060e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80060e8:	4680      	mov	r8, r0
 80060ea:	4689      	mov	r9, r1
 80060ec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80060f0:	2600      	movs	r6, #0
 80060f2:	b914      	cbnz	r4, 80060fa <_fwalk_reent+0x16>
 80060f4:	4630      	mov	r0, r6
 80060f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80060fa:	68a5      	ldr	r5, [r4, #8]
 80060fc:	6867      	ldr	r7, [r4, #4]
 80060fe:	3f01      	subs	r7, #1
 8006100:	d501      	bpl.n	8006106 <_fwalk_reent+0x22>
 8006102:	6824      	ldr	r4, [r4, #0]
 8006104:	e7f5      	b.n	80060f2 <_fwalk_reent+0xe>
 8006106:	89ab      	ldrh	r3, [r5, #12]
 8006108:	2b01      	cmp	r3, #1
 800610a:	d907      	bls.n	800611c <_fwalk_reent+0x38>
 800610c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006110:	3301      	adds	r3, #1
 8006112:	d003      	beq.n	800611c <_fwalk_reent+0x38>
 8006114:	4629      	mov	r1, r5
 8006116:	4640      	mov	r0, r8
 8006118:	47c8      	blx	r9
 800611a:	4306      	orrs	r6, r0
 800611c:	3568      	adds	r5, #104	; 0x68
 800611e:	e7ee      	b.n	80060fe <_fwalk_reent+0x1a>

08006120 <__libc_init_array>:
 8006120:	b570      	push	{r4, r5, r6, lr}
 8006122:	4e0d      	ldr	r6, [pc, #52]	; (8006158 <__libc_init_array+0x38>)
 8006124:	4c0d      	ldr	r4, [pc, #52]	; (800615c <__libc_init_array+0x3c>)
 8006126:	1ba4      	subs	r4, r4, r6
 8006128:	10a4      	asrs	r4, r4, #2
 800612a:	2500      	movs	r5, #0
 800612c:	42a5      	cmp	r5, r4
 800612e:	d109      	bne.n	8006144 <__libc_init_array+0x24>
 8006130:	4e0b      	ldr	r6, [pc, #44]	; (8006160 <__libc_init_array+0x40>)
 8006132:	4c0c      	ldr	r4, [pc, #48]	; (8006164 <__libc_init_array+0x44>)
 8006134:	f000 fd8c 	bl	8006c50 <_init>
 8006138:	1ba4      	subs	r4, r4, r6
 800613a:	10a4      	asrs	r4, r4, #2
 800613c:	2500      	movs	r5, #0
 800613e:	42a5      	cmp	r5, r4
 8006140:	d105      	bne.n	800614e <__libc_init_array+0x2e>
 8006142:	bd70      	pop	{r4, r5, r6, pc}
 8006144:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006148:	4798      	blx	r3
 800614a:	3501      	adds	r5, #1
 800614c:	e7ee      	b.n	800612c <__libc_init_array+0xc>
 800614e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006152:	4798      	blx	r3
 8006154:	3501      	adds	r5, #1
 8006156:	e7f2      	b.n	800613e <__libc_init_array+0x1e>
 8006158:	20000210 	.word	0x20000210
 800615c:	20000210 	.word	0x20000210
 8006160:	20000210 	.word	0x20000210
 8006164:	2000022c 	.word	0x2000022c

08006168 <malloc>:
 8006168:	4b02      	ldr	r3, [pc, #8]	; (8006174 <malloc+0xc>)
 800616a:	4601      	mov	r1, r0
 800616c:	6818      	ldr	r0, [r3, #0]
 800616e:	f7ff b8dd 	b.w	800532c <__wrap__malloc_r>
 8006172:	bf00      	nop
 8006174:	200001ac 	.word	0x200001ac

08006178 <free>:
 8006178:	4b02      	ldr	r3, [pc, #8]	; (8006184 <free+0xc>)
 800617a:	4601      	mov	r1, r0
 800617c:	6818      	ldr	r0, [r3, #0]
 800617e:	f7ff b8d9 	b.w	8005334 <__wrap__free_r>
 8006182:	bf00      	nop
 8006184:	200001ac 	.word	0x200001ac
	...

08006190 <memchr>:
 8006190:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006194:	2a10      	cmp	r2, #16
 8006196:	db2b      	blt.n	80061f0 <memchr+0x60>
 8006198:	f010 0f07 	tst.w	r0, #7
 800619c:	d008      	beq.n	80061b0 <memchr+0x20>
 800619e:	f810 3b01 	ldrb.w	r3, [r0], #1
 80061a2:	3a01      	subs	r2, #1
 80061a4:	428b      	cmp	r3, r1
 80061a6:	d02d      	beq.n	8006204 <memchr+0x74>
 80061a8:	f010 0f07 	tst.w	r0, #7
 80061ac:	b342      	cbz	r2, 8006200 <memchr+0x70>
 80061ae:	d1f6      	bne.n	800619e <memchr+0xe>
 80061b0:	b4f0      	push	{r4, r5, r6, r7}
 80061b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80061b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80061ba:	f022 0407 	bic.w	r4, r2, #7
 80061be:	f07f 0700 	mvns.w	r7, #0
 80061c2:	2300      	movs	r3, #0
 80061c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80061c8:	3c08      	subs	r4, #8
 80061ca:	ea85 0501 	eor.w	r5, r5, r1
 80061ce:	ea86 0601 	eor.w	r6, r6, r1
 80061d2:	fa85 f547 	uadd8	r5, r5, r7
 80061d6:	faa3 f587 	sel	r5, r3, r7
 80061da:	fa86 f647 	uadd8	r6, r6, r7
 80061de:	faa5 f687 	sel	r6, r5, r7
 80061e2:	b98e      	cbnz	r6, 8006208 <memchr+0x78>
 80061e4:	d1ee      	bne.n	80061c4 <memchr+0x34>
 80061e6:	bcf0      	pop	{r4, r5, r6, r7}
 80061e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80061ec:	f002 0207 	and.w	r2, r2, #7
 80061f0:	b132      	cbz	r2, 8006200 <memchr+0x70>
 80061f2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80061f6:	3a01      	subs	r2, #1
 80061f8:	ea83 0301 	eor.w	r3, r3, r1
 80061fc:	b113      	cbz	r3, 8006204 <memchr+0x74>
 80061fe:	d1f8      	bne.n	80061f2 <memchr+0x62>
 8006200:	2000      	movs	r0, #0
 8006202:	4770      	bx	lr
 8006204:	3801      	subs	r0, #1
 8006206:	4770      	bx	lr
 8006208:	2d00      	cmp	r5, #0
 800620a:	bf06      	itte	eq
 800620c:	4635      	moveq	r5, r6
 800620e:	3803      	subeq	r0, #3
 8006210:	3807      	subne	r0, #7
 8006212:	f015 0f01 	tst.w	r5, #1
 8006216:	d107      	bne.n	8006228 <memchr+0x98>
 8006218:	3001      	adds	r0, #1
 800621a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800621e:	bf02      	ittt	eq
 8006220:	3001      	addeq	r0, #1
 8006222:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006226:	3001      	addeq	r0, #1
 8006228:	bcf0      	pop	{r4, r5, r6, r7}
 800622a:	3801      	subs	r0, #1
 800622c:	4770      	bx	lr
 800622e:	bf00      	nop

08006230 <memcpy>:
 8006230:	b510      	push	{r4, lr}
 8006232:	1e43      	subs	r3, r0, #1
 8006234:	440a      	add	r2, r1
 8006236:	4291      	cmp	r1, r2
 8006238:	d100      	bne.n	800623c <memcpy+0xc>
 800623a:	bd10      	pop	{r4, pc}
 800623c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006240:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006244:	e7f7      	b.n	8006236 <memcpy+0x6>

08006246 <memmove>:
 8006246:	4288      	cmp	r0, r1
 8006248:	b510      	push	{r4, lr}
 800624a:	eb01 0302 	add.w	r3, r1, r2
 800624e:	d803      	bhi.n	8006258 <memmove+0x12>
 8006250:	1e42      	subs	r2, r0, #1
 8006252:	4299      	cmp	r1, r3
 8006254:	d10c      	bne.n	8006270 <memmove+0x2a>
 8006256:	bd10      	pop	{r4, pc}
 8006258:	4298      	cmp	r0, r3
 800625a:	d2f9      	bcs.n	8006250 <memmove+0xa>
 800625c:	1881      	adds	r1, r0, r2
 800625e:	1ad2      	subs	r2, r2, r3
 8006260:	42d3      	cmn	r3, r2
 8006262:	d100      	bne.n	8006266 <memmove+0x20>
 8006264:	bd10      	pop	{r4, pc}
 8006266:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800626a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800626e:	e7f7      	b.n	8006260 <memmove+0x1a>
 8006270:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006274:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006278:	e7eb      	b.n	8006252 <memmove+0xc>

0800627a <memset>:
 800627a:	4402      	add	r2, r0
 800627c:	4603      	mov	r3, r0
 800627e:	4293      	cmp	r3, r2
 8006280:	d100      	bne.n	8006284 <memset+0xa>
 8006282:	4770      	bx	lr
 8006284:	f803 1b01 	strb.w	r1, [r3], #1
 8006288:	e7f9      	b.n	800627e <memset+0x4>
	...

0800628c <_free_r>:
 800628c:	b538      	push	{r3, r4, r5, lr}
 800628e:	4605      	mov	r5, r0
 8006290:	2900      	cmp	r1, #0
 8006292:	d045      	beq.n	8006320 <_free_r+0x94>
 8006294:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006298:	1f0c      	subs	r4, r1, #4
 800629a:	2b00      	cmp	r3, #0
 800629c:	bfb8      	it	lt
 800629e:	18e4      	addlt	r4, r4, r3
 80062a0:	f7ff f969 	bl	8005576 <__malloc_lock>
 80062a4:	4a1f      	ldr	r2, [pc, #124]	; (8006324 <_free_r+0x98>)
 80062a6:	6813      	ldr	r3, [r2, #0]
 80062a8:	4610      	mov	r0, r2
 80062aa:	b933      	cbnz	r3, 80062ba <_free_r+0x2e>
 80062ac:	6063      	str	r3, [r4, #4]
 80062ae:	6014      	str	r4, [r2, #0]
 80062b0:	4628      	mov	r0, r5
 80062b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80062b6:	f7ff b962 	b.w	800557e <__malloc_unlock>
 80062ba:	42a3      	cmp	r3, r4
 80062bc:	d90c      	bls.n	80062d8 <_free_r+0x4c>
 80062be:	6821      	ldr	r1, [r4, #0]
 80062c0:	1862      	adds	r2, r4, r1
 80062c2:	4293      	cmp	r3, r2
 80062c4:	bf04      	itt	eq
 80062c6:	681a      	ldreq	r2, [r3, #0]
 80062c8:	685b      	ldreq	r3, [r3, #4]
 80062ca:	6063      	str	r3, [r4, #4]
 80062cc:	bf04      	itt	eq
 80062ce:	1852      	addeq	r2, r2, r1
 80062d0:	6022      	streq	r2, [r4, #0]
 80062d2:	6004      	str	r4, [r0, #0]
 80062d4:	e7ec      	b.n	80062b0 <_free_r+0x24>
 80062d6:	4613      	mov	r3, r2
 80062d8:	685a      	ldr	r2, [r3, #4]
 80062da:	b10a      	cbz	r2, 80062e0 <_free_r+0x54>
 80062dc:	42a2      	cmp	r2, r4
 80062de:	d9fa      	bls.n	80062d6 <_free_r+0x4a>
 80062e0:	6819      	ldr	r1, [r3, #0]
 80062e2:	1858      	adds	r0, r3, r1
 80062e4:	42a0      	cmp	r0, r4
 80062e6:	d10b      	bne.n	8006300 <_free_r+0x74>
 80062e8:	6820      	ldr	r0, [r4, #0]
 80062ea:	4401      	add	r1, r0
 80062ec:	1858      	adds	r0, r3, r1
 80062ee:	4282      	cmp	r2, r0
 80062f0:	6019      	str	r1, [r3, #0]
 80062f2:	d1dd      	bne.n	80062b0 <_free_r+0x24>
 80062f4:	6810      	ldr	r0, [r2, #0]
 80062f6:	6852      	ldr	r2, [r2, #4]
 80062f8:	605a      	str	r2, [r3, #4]
 80062fa:	4401      	add	r1, r0
 80062fc:	6019      	str	r1, [r3, #0]
 80062fe:	e7d7      	b.n	80062b0 <_free_r+0x24>
 8006300:	d902      	bls.n	8006308 <_free_r+0x7c>
 8006302:	230c      	movs	r3, #12
 8006304:	602b      	str	r3, [r5, #0]
 8006306:	e7d3      	b.n	80062b0 <_free_r+0x24>
 8006308:	6820      	ldr	r0, [r4, #0]
 800630a:	1821      	adds	r1, r4, r0
 800630c:	428a      	cmp	r2, r1
 800630e:	bf04      	itt	eq
 8006310:	6811      	ldreq	r1, [r2, #0]
 8006312:	6852      	ldreq	r2, [r2, #4]
 8006314:	6062      	str	r2, [r4, #4]
 8006316:	bf04      	itt	eq
 8006318:	1809      	addeq	r1, r1, r0
 800631a:	6021      	streq	r1, [r4, #0]
 800631c:	605c      	str	r4, [r3, #4]
 800631e:	e7c7      	b.n	80062b0 <_free_r+0x24>
 8006320:	bd38      	pop	{r3, r4, r5, pc}
 8006322:	bf00      	nop
 8006324:	2000176c 	.word	0x2000176c

08006328 <_malloc_r>:
 8006328:	b570      	push	{r4, r5, r6, lr}
 800632a:	1ccd      	adds	r5, r1, #3
 800632c:	f025 0503 	bic.w	r5, r5, #3
 8006330:	3508      	adds	r5, #8
 8006332:	2d0c      	cmp	r5, #12
 8006334:	bf38      	it	cc
 8006336:	250c      	movcc	r5, #12
 8006338:	2d00      	cmp	r5, #0
 800633a:	4606      	mov	r6, r0
 800633c:	db01      	blt.n	8006342 <_malloc_r+0x1a>
 800633e:	42a9      	cmp	r1, r5
 8006340:	d903      	bls.n	800634a <_malloc_r+0x22>
 8006342:	230c      	movs	r3, #12
 8006344:	6033      	str	r3, [r6, #0]
 8006346:	2000      	movs	r0, #0
 8006348:	bd70      	pop	{r4, r5, r6, pc}
 800634a:	f7ff f914 	bl	8005576 <__malloc_lock>
 800634e:	4a23      	ldr	r2, [pc, #140]	; (80063dc <_malloc_r+0xb4>)
 8006350:	6814      	ldr	r4, [r2, #0]
 8006352:	4621      	mov	r1, r4
 8006354:	b991      	cbnz	r1, 800637c <_malloc_r+0x54>
 8006356:	4c22      	ldr	r4, [pc, #136]	; (80063e0 <_malloc_r+0xb8>)
 8006358:	6823      	ldr	r3, [r4, #0]
 800635a:	b91b      	cbnz	r3, 8006364 <_malloc_r+0x3c>
 800635c:	4630      	mov	r0, r6
 800635e:	f000 fa05 	bl	800676c <_sbrk_r>
 8006362:	6020      	str	r0, [r4, #0]
 8006364:	4629      	mov	r1, r5
 8006366:	4630      	mov	r0, r6
 8006368:	f000 fa00 	bl	800676c <_sbrk_r>
 800636c:	1c43      	adds	r3, r0, #1
 800636e:	d126      	bne.n	80063be <_malloc_r+0x96>
 8006370:	230c      	movs	r3, #12
 8006372:	6033      	str	r3, [r6, #0]
 8006374:	4630      	mov	r0, r6
 8006376:	f7ff f902 	bl	800557e <__malloc_unlock>
 800637a:	e7e4      	b.n	8006346 <_malloc_r+0x1e>
 800637c:	680b      	ldr	r3, [r1, #0]
 800637e:	1b5b      	subs	r3, r3, r5
 8006380:	d41a      	bmi.n	80063b8 <_malloc_r+0x90>
 8006382:	2b0b      	cmp	r3, #11
 8006384:	d90f      	bls.n	80063a6 <_malloc_r+0x7e>
 8006386:	600b      	str	r3, [r1, #0]
 8006388:	50cd      	str	r5, [r1, r3]
 800638a:	18cc      	adds	r4, r1, r3
 800638c:	4630      	mov	r0, r6
 800638e:	f7ff f8f6 	bl	800557e <__malloc_unlock>
 8006392:	f104 000b 	add.w	r0, r4, #11
 8006396:	1d23      	adds	r3, r4, #4
 8006398:	f020 0007 	bic.w	r0, r0, #7
 800639c:	1ac3      	subs	r3, r0, r3
 800639e:	d01b      	beq.n	80063d8 <_malloc_r+0xb0>
 80063a0:	425a      	negs	r2, r3
 80063a2:	50e2      	str	r2, [r4, r3]
 80063a4:	bd70      	pop	{r4, r5, r6, pc}
 80063a6:	428c      	cmp	r4, r1
 80063a8:	bf0d      	iteet	eq
 80063aa:	6863      	ldreq	r3, [r4, #4]
 80063ac:	684b      	ldrne	r3, [r1, #4]
 80063ae:	6063      	strne	r3, [r4, #4]
 80063b0:	6013      	streq	r3, [r2, #0]
 80063b2:	bf18      	it	ne
 80063b4:	460c      	movne	r4, r1
 80063b6:	e7e9      	b.n	800638c <_malloc_r+0x64>
 80063b8:	460c      	mov	r4, r1
 80063ba:	6849      	ldr	r1, [r1, #4]
 80063bc:	e7ca      	b.n	8006354 <_malloc_r+0x2c>
 80063be:	1cc4      	adds	r4, r0, #3
 80063c0:	f024 0403 	bic.w	r4, r4, #3
 80063c4:	42a0      	cmp	r0, r4
 80063c6:	d005      	beq.n	80063d4 <_malloc_r+0xac>
 80063c8:	1a21      	subs	r1, r4, r0
 80063ca:	4630      	mov	r0, r6
 80063cc:	f000 f9ce 	bl	800676c <_sbrk_r>
 80063d0:	3001      	adds	r0, #1
 80063d2:	d0cd      	beq.n	8006370 <_malloc_r+0x48>
 80063d4:	6025      	str	r5, [r4, #0]
 80063d6:	e7d9      	b.n	800638c <_malloc_r+0x64>
 80063d8:	bd70      	pop	{r4, r5, r6, pc}
 80063da:	bf00      	nop
 80063dc:	2000176c 	.word	0x2000176c
 80063e0:	20001770 	.word	0x20001770

080063e4 <_realloc_r>:
 80063e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063e6:	4607      	mov	r7, r0
 80063e8:	4614      	mov	r4, r2
 80063ea:	460e      	mov	r6, r1
 80063ec:	b921      	cbnz	r1, 80063f8 <_realloc_r+0x14>
 80063ee:	4611      	mov	r1, r2
 80063f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80063f4:	f7fe bf9a 	b.w	800532c <__wrap__malloc_r>
 80063f8:	b922      	cbnz	r2, 8006404 <_realloc_r+0x20>
 80063fa:	f7fe ff9b 	bl	8005334 <__wrap__free_r>
 80063fe:	4625      	mov	r5, r4
 8006400:	4628      	mov	r0, r5
 8006402:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006404:	f000 fa64 	bl	80068d0 <_malloc_usable_size_r>
 8006408:	4284      	cmp	r4, r0
 800640a:	d90f      	bls.n	800642c <_realloc_r+0x48>
 800640c:	4621      	mov	r1, r4
 800640e:	4638      	mov	r0, r7
 8006410:	f7fe ff8c 	bl	800532c <__wrap__malloc_r>
 8006414:	4605      	mov	r5, r0
 8006416:	2800      	cmp	r0, #0
 8006418:	d0f2      	beq.n	8006400 <_realloc_r+0x1c>
 800641a:	4631      	mov	r1, r6
 800641c:	4622      	mov	r2, r4
 800641e:	f7ff ff07 	bl	8006230 <memcpy>
 8006422:	4631      	mov	r1, r6
 8006424:	4638      	mov	r0, r7
 8006426:	f7fe ff85 	bl	8005334 <__wrap__free_r>
 800642a:	e7e9      	b.n	8006400 <_realloc_r+0x1c>
 800642c:	4635      	mov	r5, r6
 800642e:	e7e7      	b.n	8006400 <_realloc_r+0x1c>

08006430 <_printf_common>:
 8006430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006434:	4691      	mov	r9, r2
 8006436:	461f      	mov	r7, r3
 8006438:	688a      	ldr	r2, [r1, #8]
 800643a:	690b      	ldr	r3, [r1, #16]
 800643c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006440:	4293      	cmp	r3, r2
 8006442:	bfb8      	it	lt
 8006444:	4613      	movlt	r3, r2
 8006446:	f8c9 3000 	str.w	r3, [r9]
 800644a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800644e:	4606      	mov	r6, r0
 8006450:	460c      	mov	r4, r1
 8006452:	b112      	cbz	r2, 800645a <_printf_common+0x2a>
 8006454:	3301      	adds	r3, #1
 8006456:	f8c9 3000 	str.w	r3, [r9]
 800645a:	6823      	ldr	r3, [r4, #0]
 800645c:	0699      	lsls	r1, r3, #26
 800645e:	bf42      	ittt	mi
 8006460:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006464:	3302      	addmi	r3, #2
 8006466:	f8c9 3000 	strmi.w	r3, [r9]
 800646a:	6825      	ldr	r5, [r4, #0]
 800646c:	f015 0506 	ands.w	r5, r5, #6
 8006470:	d107      	bne.n	8006482 <_printf_common+0x52>
 8006472:	f104 0a19 	add.w	r10, r4, #25
 8006476:	68e3      	ldr	r3, [r4, #12]
 8006478:	f8d9 2000 	ldr.w	r2, [r9]
 800647c:	1a9b      	subs	r3, r3, r2
 800647e:	429d      	cmp	r5, r3
 8006480:	db29      	blt.n	80064d6 <_printf_common+0xa6>
 8006482:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006486:	6822      	ldr	r2, [r4, #0]
 8006488:	3300      	adds	r3, #0
 800648a:	bf18      	it	ne
 800648c:	2301      	movne	r3, #1
 800648e:	0692      	lsls	r2, r2, #26
 8006490:	d42e      	bmi.n	80064f0 <_printf_common+0xc0>
 8006492:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006496:	4639      	mov	r1, r7
 8006498:	4630      	mov	r0, r6
 800649a:	47c0      	blx	r8
 800649c:	3001      	adds	r0, #1
 800649e:	d021      	beq.n	80064e4 <_printf_common+0xb4>
 80064a0:	6823      	ldr	r3, [r4, #0]
 80064a2:	68e5      	ldr	r5, [r4, #12]
 80064a4:	f8d9 2000 	ldr.w	r2, [r9]
 80064a8:	f003 0306 	and.w	r3, r3, #6
 80064ac:	2b04      	cmp	r3, #4
 80064ae:	bf08      	it	eq
 80064b0:	1aad      	subeq	r5, r5, r2
 80064b2:	68a3      	ldr	r3, [r4, #8]
 80064b4:	6922      	ldr	r2, [r4, #16]
 80064b6:	bf0c      	ite	eq
 80064b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80064bc:	2500      	movne	r5, #0
 80064be:	4293      	cmp	r3, r2
 80064c0:	bfc4      	itt	gt
 80064c2:	1a9b      	subgt	r3, r3, r2
 80064c4:	18ed      	addgt	r5, r5, r3
 80064c6:	f04f 0900 	mov.w	r9, #0
 80064ca:	341a      	adds	r4, #26
 80064cc:	454d      	cmp	r5, r9
 80064ce:	d11b      	bne.n	8006508 <_printf_common+0xd8>
 80064d0:	2000      	movs	r0, #0
 80064d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80064d6:	2301      	movs	r3, #1
 80064d8:	4652      	mov	r2, r10
 80064da:	4639      	mov	r1, r7
 80064dc:	4630      	mov	r0, r6
 80064de:	47c0      	blx	r8
 80064e0:	3001      	adds	r0, #1
 80064e2:	d103      	bne.n	80064ec <_printf_common+0xbc>
 80064e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80064e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80064ec:	3501      	adds	r5, #1
 80064ee:	e7c2      	b.n	8006476 <_printf_common+0x46>
 80064f0:	18e1      	adds	r1, r4, r3
 80064f2:	1c5a      	adds	r2, r3, #1
 80064f4:	2030      	movs	r0, #48	; 0x30
 80064f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80064fa:	4422      	add	r2, r4
 80064fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006500:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006504:	3302      	adds	r3, #2
 8006506:	e7c4      	b.n	8006492 <_printf_common+0x62>
 8006508:	2301      	movs	r3, #1
 800650a:	4622      	mov	r2, r4
 800650c:	4639      	mov	r1, r7
 800650e:	4630      	mov	r0, r6
 8006510:	47c0      	blx	r8
 8006512:	3001      	adds	r0, #1
 8006514:	d0e6      	beq.n	80064e4 <_printf_common+0xb4>
 8006516:	f109 0901 	add.w	r9, r9, #1
 800651a:	e7d7      	b.n	80064cc <_printf_common+0x9c>

0800651c <_printf_i>:
 800651c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006520:	4617      	mov	r7, r2
 8006522:	7e0a      	ldrb	r2, [r1, #24]
 8006524:	b085      	sub	sp, #20
 8006526:	2a6e      	cmp	r2, #110	; 0x6e
 8006528:	4698      	mov	r8, r3
 800652a:	4606      	mov	r6, r0
 800652c:	460c      	mov	r4, r1
 800652e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006530:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8006534:	f000 80bc 	beq.w	80066b0 <_printf_i+0x194>
 8006538:	d81a      	bhi.n	8006570 <_printf_i+0x54>
 800653a:	2a63      	cmp	r2, #99	; 0x63
 800653c:	d02e      	beq.n	800659c <_printf_i+0x80>
 800653e:	d80a      	bhi.n	8006556 <_printf_i+0x3a>
 8006540:	2a00      	cmp	r2, #0
 8006542:	f000 80c8 	beq.w	80066d6 <_printf_i+0x1ba>
 8006546:	2a58      	cmp	r2, #88	; 0x58
 8006548:	f000 808a 	beq.w	8006660 <_printf_i+0x144>
 800654c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006550:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8006554:	e02a      	b.n	80065ac <_printf_i+0x90>
 8006556:	2a64      	cmp	r2, #100	; 0x64
 8006558:	d001      	beq.n	800655e <_printf_i+0x42>
 800655a:	2a69      	cmp	r2, #105	; 0x69
 800655c:	d1f6      	bne.n	800654c <_printf_i+0x30>
 800655e:	6821      	ldr	r1, [r4, #0]
 8006560:	681a      	ldr	r2, [r3, #0]
 8006562:	f011 0f80 	tst.w	r1, #128	; 0x80
 8006566:	d023      	beq.n	80065b0 <_printf_i+0x94>
 8006568:	1d11      	adds	r1, r2, #4
 800656a:	6019      	str	r1, [r3, #0]
 800656c:	6813      	ldr	r3, [r2, #0]
 800656e:	e027      	b.n	80065c0 <_printf_i+0xa4>
 8006570:	2a73      	cmp	r2, #115	; 0x73
 8006572:	f000 80b4 	beq.w	80066de <_printf_i+0x1c2>
 8006576:	d808      	bhi.n	800658a <_printf_i+0x6e>
 8006578:	2a6f      	cmp	r2, #111	; 0x6f
 800657a:	d02a      	beq.n	80065d2 <_printf_i+0xb6>
 800657c:	2a70      	cmp	r2, #112	; 0x70
 800657e:	d1e5      	bne.n	800654c <_printf_i+0x30>
 8006580:	680a      	ldr	r2, [r1, #0]
 8006582:	f042 0220 	orr.w	r2, r2, #32
 8006586:	600a      	str	r2, [r1, #0]
 8006588:	e003      	b.n	8006592 <_printf_i+0x76>
 800658a:	2a75      	cmp	r2, #117	; 0x75
 800658c:	d021      	beq.n	80065d2 <_printf_i+0xb6>
 800658e:	2a78      	cmp	r2, #120	; 0x78
 8006590:	d1dc      	bne.n	800654c <_printf_i+0x30>
 8006592:	2278      	movs	r2, #120	; 0x78
 8006594:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006598:	496e      	ldr	r1, [pc, #440]	; (8006754 <_printf_i+0x238>)
 800659a:	e064      	b.n	8006666 <_printf_i+0x14a>
 800659c:	681a      	ldr	r2, [r3, #0]
 800659e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80065a2:	1d11      	adds	r1, r2, #4
 80065a4:	6019      	str	r1, [r3, #0]
 80065a6:	6813      	ldr	r3, [r2, #0]
 80065a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80065ac:	2301      	movs	r3, #1
 80065ae:	e0a3      	b.n	80066f8 <_printf_i+0x1dc>
 80065b0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80065b4:	f102 0104 	add.w	r1, r2, #4
 80065b8:	6019      	str	r1, [r3, #0]
 80065ba:	d0d7      	beq.n	800656c <_printf_i+0x50>
 80065bc:	f9b2 3000 	ldrsh.w	r3, [r2]
 80065c0:	2b00      	cmp	r3, #0
 80065c2:	da03      	bge.n	80065cc <_printf_i+0xb0>
 80065c4:	222d      	movs	r2, #45	; 0x2d
 80065c6:	425b      	negs	r3, r3
 80065c8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80065cc:	4962      	ldr	r1, [pc, #392]	; (8006758 <_printf_i+0x23c>)
 80065ce:	220a      	movs	r2, #10
 80065d0:	e017      	b.n	8006602 <_printf_i+0xe6>
 80065d2:	6820      	ldr	r0, [r4, #0]
 80065d4:	6819      	ldr	r1, [r3, #0]
 80065d6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80065da:	d003      	beq.n	80065e4 <_printf_i+0xc8>
 80065dc:	1d08      	adds	r0, r1, #4
 80065de:	6018      	str	r0, [r3, #0]
 80065e0:	680b      	ldr	r3, [r1, #0]
 80065e2:	e006      	b.n	80065f2 <_printf_i+0xd6>
 80065e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80065e8:	f101 0004 	add.w	r0, r1, #4
 80065ec:	6018      	str	r0, [r3, #0]
 80065ee:	d0f7      	beq.n	80065e0 <_printf_i+0xc4>
 80065f0:	880b      	ldrh	r3, [r1, #0]
 80065f2:	4959      	ldr	r1, [pc, #356]	; (8006758 <_printf_i+0x23c>)
 80065f4:	2a6f      	cmp	r2, #111	; 0x6f
 80065f6:	bf14      	ite	ne
 80065f8:	220a      	movne	r2, #10
 80065fa:	2208      	moveq	r2, #8
 80065fc:	2000      	movs	r0, #0
 80065fe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006602:	6865      	ldr	r5, [r4, #4]
 8006604:	60a5      	str	r5, [r4, #8]
 8006606:	2d00      	cmp	r5, #0
 8006608:	f2c0 809c 	blt.w	8006744 <_printf_i+0x228>
 800660c:	6820      	ldr	r0, [r4, #0]
 800660e:	f020 0004 	bic.w	r0, r0, #4
 8006612:	6020      	str	r0, [r4, #0]
 8006614:	2b00      	cmp	r3, #0
 8006616:	d13f      	bne.n	8006698 <_printf_i+0x17c>
 8006618:	2d00      	cmp	r5, #0
 800661a:	f040 8095 	bne.w	8006748 <_printf_i+0x22c>
 800661e:	4675      	mov	r5, lr
 8006620:	2a08      	cmp	r2, #8
 8006622:	d10b      	bne.n	800663c <_printf_i+0x120>
 8006624:	6823      	ldr	r3, [r4, #0]
 8006626:	07da      	lsls	r2, r3, #31
 8006628:	d508      	bpl.n	800663c <_printf_i+0x120>
 800662a:	6923      	ldr	r3, [r4, #16]
 800662c:	6862      	ldr	r2, [r4, #4]
 800662e:	429a      	cmp	r2, r3
 8006630:	bfde      	ittt	le
 8006632:	2330      	movle	r3, #48	; 0x30
 8006634:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006638:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800663c:	ebae 0305 	sub.w	r3, lr, r5
 8006640:	6123      	str	r3, [r4, #16]
 8006642:	f8cd 8000 	str.w	r8, [sp]
 8006646:	463b      	mov	r3, r7
 8006648:	aa03      	add	r2, sp, #12
 800664a:	4621      	mov	r1, r4
 800664c:	4630      	mov	r0, r6
 800664e:	f7ff feef 	bl	8006430 <_printf_common>
 8006652:	3001      	adds	r0, #1
 8006654:	d155      	bne.n	8006702 <_printf_i+0x1e6>
 8006656:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800665a:	b005      	add	sp, #20
 800665c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006660:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8006664:	493c      	ldr	r1, [pc, #240]	; (8006758 <_printf_i+0x23c>)
 8006666:	6822      	ldr	r2, [r4, #0]
 8006668:	6818      	ldr	r0, [r3, #0]
 800666a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800666e:	f100 0504 	add.w	r5, r0, #4
 8006672:	601d      	str	r5, [r3, #0]
 8006674:	d001      	beq.n	800667a <_printf_i+0x15e>
 8006676:	6803      	ldr	r3, [r0, #0]
 8006678:	e002      	b.n	8006680 <_printf_i+0x164>
 800667a:	0655      	lsls	r5, r2, #25
 800667c:	d5fb      	bpl.n	8006676 <_printf_i+0x15a>
 800667e:	8803      	ldrh	r3, [r0, #0]
 8006680:	07d0      	lsls	r0, r2, #31
 8006682:	bf44      	itt	mi
 8006684:	f042 0220 	orrmi.w	r2, r2, #32
 8006688:	6022      	strmi	r2, [r4, #0]
 800668a:	b91b      	cbnz	r3, 8006694 <_printf_i+0x178>
 800668c:	6822      	ldr	r2, [r4, #0]
 800668e:	f022 0220 	bic.w	r2, r2, #32
 8006692:	6022      	str	r2, [r4, #0]
 8006694:	2210      	movs	r2, #16
 8006696:	e7b1      	b.n	80065fc <_printf_i+0xe0>
 8006698:	4675      	mov	r5, lr
 800669a:	fbb3 f0f2 	udiv	r0, r3, r2
 800669e:	fb02 3310 	mls	r3, r2, r0, r3
 80066a2:	5ccb      	ldrb	r3, [r1, r3]
 80066a4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80066a8:	4603      	mov	r3, r0
 80066aa:	2800      	cmp	r0, #0
 80066ac:	d1f5      	bne.n	800669a <_printf_i+0x17e>
 80066ae:	e7b7      	b.n	8006620 <_printf_i+0x104>
 80066b0:	6808      	ldr	r0, [r1, #0]
 80066b2:	681a      	ldr	r2, [r3, #0]
 80066b4:	6949      	ldr	r1, [r1, #20]
 80066b6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80066ba:	d004      	beq.n	80066c6 <_printf_i+0x1aa>
 80066bc:	1d10      	adds	r0, r2, #4
 80066be:	6018      	str	r0, [r3, #0]
 80066c0:	6813      	ldr	r3, [r2, #0]
 80066c2:	6019      	str	r1, [r3, #0]
 80066c4:	e007      	b.n	80066d6 <_printf_i+0x1ba>
 80066c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80066ca:	f102 0004 	add.w	r0, r2, #4
 80066ce:	6018      	str	r0, [r3, #0]
 80066d0:	6813      	ldr	r3, [r2, #0]
 80066d2:	d0f6      	beq.n	80066c2 <_printf_i+0x1a6>
 80066d4:	8019      	strh	r1, [r3, #0]
 80066d6:	2300      	movs	r3, #0
 80066d8:	6123      	str	r3, [r4, #16]
 80066da:	4675      	mov	r5, lr
 80066dc:	e7b1      	b.n	8006642 <_printf_i+0x126>
 80066de:	681a      	ldr	r2, [r3, #0]
 80066e0:	1d11      	adds	r1, r2, #4
 80066e2:	6019      	str	r1, [r3, #0]
 80066e4:	6815      	ldr	r5, [r2, #0]
 80066e6:	6862      	ldr	r2, [r4, #4]
 80066e8:	2100      	movs	r1, #0
 80066ea:	4628      	mov	r0, r5
 80066ec:	f7ff fd50 	bl	8006190 <memchr>
 80066f0:	b108      	cbz	r0, 80066f6 <_printf_i+0x1da>
 80066f2:	1b40      	subs	r0, r0, r5
 80066f4:	6060      	str	r0, [r4, #4]
 80066f6:	6863      	ldr	r3, [r4, #4]
 80066f8:	6123      	str	r3, [r4, #16]
 80066fa:	2300      	movs	r3, #0
 80066fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006700:	e79f      	b.n	8006642 <_printf_i+0x126>
 8006702:	6923      	ldr	r3, [r4, #16]
 8006704:	462a      	mov	r2, r5
 8006706:	4639      	mov	r1, r7
 8006708:	4630      	mov	r0, r6
 800670a:	47c0      	blx	r8
 800670c:	3001      	adds	r0, #1
 800670e:	d0a2      	beq.n	8006656 <_printf_i+0x13a>
 8006710:	6823      	ldr	r3, [r4, #0]
 8006712:	079b      	lsls	r3, r3, #30
 8006714:	d507      	bpl.n	8006726 <_printf_i+0x20a>
 8006716:	2500      	movs	r5, #0
 8006718:	f104 0919 	add.w	r9, r4, #25
 800671c:	68e3      	ldr	r3, [r4, #12]
 800671e:	9a03      	ldr	r2, [sp, #12]
 8006720:	1a9b      	subs	r3, r3, r2
 8006722:	429d      	cmp	r5, r3
 8006724:	db05      	blt.n	8006732 <_printf_i+0x216>
 8006726:	68e0      	ldr	r0, [r4, #12]
 8006728:	9b03      	ldr	r3, [sp, #12]
 800672a:	4298      	cmp	r0, r3
 800672c:	bfb8      	it	lt
 800672e:	4618      	movlt	r0, r3
 8006730:	e793      	b.n	800665a <_printf_i+0x13e>
 8006732:	2301      	movs	r3, #1
 8006734:	464a      	mov	r2, r9
 8006736:	4639      	mov	r1, r7
 8006738:	4630      	mov	r0, r6
 800673a:	47c0      	blx	r8
 800673c:	3001      	adds	r0, #1
 800673e:	d08a      	beq.n	8006656 <_printf_i+0x13a>
 8006740:	3501      	adds	r5, #1
 8006742:	e7eb      	b.n	800671c <_printf_i+0x200>
 8006744:	2b00      	cmp	r3, #0
 8006746:	d1a7      	bne.n	8006698 <_printf_i+0x17c>
 8006748:	780b      	ldrb	r3, [r1, #0]
 800674a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800674e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006752:	e765      	b.n	8006620 <_printf_i+0x104>
 8006754:	08007521 	.word	0x08007521
 8006758:	08007510 	.word	0x08007510

0800675c <realloc>:
 800675c:	4b02      	ldr	r3, [pc, #8]	; (8006768 <realloc+0xc>)
 800675e:	460a      	mov	r2, r1
 8006760:	4601      	mov	r1, r0
 8006762:	6818      	ldr	r0, [r3, #0]
 8006764:	f7fe bde4 	b.w	8005330 <__wrap__realloc_r>
 8006768:	200001ac 	.word	0x200001ac

0800676c <_sbrk_r>:
 800676c:	b538      	push	{r3, r4, r5, lr}
 800676e:	4c06      	ldr	r4, [pc, #24]	; (8006788 <_sbrk_r+0x1c>)
 8006770:	2300      	movs	r3, #0
 8006772:	4605      	mov	r5, r0
 8006774:	4608      	mov	r0, r1
 8006776:	6023      	str	r3, [r4, #0]
 8006778:	f7fe fec4 	bl	8005504 <_sbrk>
 800677c:	1c43      	adds	r3, r0, #1
 800677e:	d102      	bne.n	8006786 <_sbrk_r+0x1a>
 8006780:	6823      	ldr	r3, [r4, #0]
 8006782:	b103      	cbz	r3, 8006786 <_sbrk_r+0x1a>
 8006784:	602b      	str	r3, [r5, #0]
 8006786:	bd38      	pop	{r3, r4, r5, pc}
 8006788:	20002024 	.word	0x20002024

0800678c <__sread>:
 800678c:	b510      	push	{r4, lr}
 800678e:	460c      	mov	r4, r1
 8006790:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006794:	f000 f9f4 	bl	8006b80 <_read_r>
 8006798:	2800      	cmp	r0, #0
 800679a:	bfab      	itete	ge
 800679c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800679e:	89a3      	ldrhlt	r3, [r4, #12]
 80067a0:	181b      	addge	r3, r3, r0
 80067a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80067a6:	bfac      	ite	ge
 80067a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80067aa:	81a3      	strhlt	r3, [r4, #12]
 80067ac:	bd10      	pop	{r4, pc}

080067ae <__swrite>:
 80067ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067b2:	461f      	mov	r7, r3
 80067b4:	898b      	ldrh	r3, [r1, #12]
 80067b6:	05db      	lsls	r3, r3, #23
 80067b8:	4605      	mov	r5, r0
 80067ba:	460c      	mov	r4, r1
 80067bc:	4616      	mov	r6, r2
 80067be:	d505      	bpl.n	80067cc <__swrite+0x1e>
 80067c0:	2302      	movs	r3, #2
 80067c2:	2200      	movs	r2, #0
 80067c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067c8:	f000 f870 	bl	80068ac <_lseek_r>
 80067cc:	89a3      	ldrh	r3, [r4, #12]
 80067ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80067d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80067d6:	81a3      	strh	r3, [r4, #12]
 80067d8:	4632      	mov	r2, r6
 80067da:	463b      	mov	r3, r7
 80067dc:	4628      	mov	r0, r5
 80067de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80067e2:	f000 b841 	b.w	8006868 <_write_r>

080067e6 <__sseek>:
 80067e6:	b510      	push	{r4, lr}
 80067e8:	460c      	mov	r4, r1
 80067ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067ee:	f000 f85d 	bl	80068ac <_lseek_r>
 80067f2:	1c43      	adds	r3, r0, #1
 80067f4:	89a3      	ldrh	r3, [r4, #12]
 80067f6:	bf15      	itete	ne
 80067f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80067fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80067fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006802:	81a3      	strheq	r3, [r4, #12]
 8006804:	bf18      	it	ne
 8006806:	81a3      	strhne	r3, [r4, #12]
 8006808:	bd10      	pop	{r4, pc}

0800680a <__sclose>:
 800680a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800680e:	f000 b83d 	b.w	800688c <_close_r>

08006812 <strlen>:
 8006812:	4603      	mov	r3, r0
 8006814:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006818:	2a00      	cmp	r2, #0
 800681a:	d1fb      	bne.n	8006814 <strlen+0x2>
 800681c:	1a18      	subs	r0, r3, r0
 800681e:	3801      	subs	r0, #1
 8006820:	4770      	bx	lr

08006822 <_vsiprintf_r>:
 8006822:	b510      	push	{r4, lr}
 8006824:	b09a      	sub	sp, #104	; 0x68
 8006826:	f44f 7402 	mov.w	r4, #520	; 0x208
 800682a:	9100      	str	r1, [sp, #0]
 800682c:	9104      	str	r1, [sp, #16]
 800682e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006832:	9102      	str	r1, [sp, #8]
 8006834:	9105      	str	r1, [sp, #20]
 8006836:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800683a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800683e:	4669      	mov	r1, sp
 8006840:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006844:	f000 f8a8 	bl	8006998 <_svfiprintf_r>
 8006848:	9b00      	ldr	r3, [sp, #0]
 800684a:	2200      	movs	r2, #0
 800684c:	701a      	strb	r2, [r3, #0]
 800684e:	b01a      	add	sp, #104	; 0x68
 8006850:	bd10      	pop	{r4, pc}
	...

08006854 <vsiprintf>:
 8006854:	4613      	mov	r3, r2
 8006856:	460a      	mov	r2, r1
 8006858:	4601      	mov	r1, r0
 800685a:	4802      	ldr	r0, [pc, #8]	; (8006864 <vsiprintf+0x10>)
 800685c:	6800      	ldr	r0, [r0, #0]
 800685e:	f7ff bfe0 	b.w	8006822 <_vsiprintf_r>
 8006862:	bf00      	nop
 8006864:	200001ac 	.word	0x200001ac

08006868 <_write_r>:
 8006868:	b538      	push	{r3, r4, r5, lr}
 800686a:	4c07      	ldr	r4, [pc, #28]	; (8006888 <_write_r+0x20>)
 800686c:	4605      	mov	r5, r0
 800686e:	4608      	mov	r0, r1
 8006870:	4611      	mov	r1, r2
 8006872:	2200      	movs	r2, #0
 8006874:	6022      	str	r2, [r4, #0]
 8006876:	461a      	mov	r2, r3
 8006878:	f7fe fdb2 	bl	80053e0 <_write>
 800687c:	1c43      	adds	r3, r0, #1
 800687e:	d102      	bne.n	8006886 <_write_r+0x1e>
 8006880:	6823      	ldr	r3, [r4, #0]
 8006882:	b103      	cbz	r3, 8006886 <_write_r+0x1e>
 8006884:	602b      	str	r3, [r5, #0]
 8006886:	bd38      	pop	{r3, r4, r5, pc}
 8006888:	20002024 	.word	0x20002024

0800688c <_close_r>:
 800688c:	b538      	push	{r3, r4, r5, lr}
 800688e:	4c06      	ldr	r4, [pc, #24]	; (80068a8 <_close_r+0x1c>)
 8006890:	2300      	movs	r3, #0
 8006892:	4605      	mov	r5, r0
 8006894:	4608      	mov	r0, r1
 8006896:	6023      	str	r3, [r4, #0]
 8006898:	f7fe fd82 	bl	80053a0 <_close>
 800689c:	1c43      	adds	r3, r0, #1
 800689e:	d102      	bne.n	80068a6 <_close_r+0x1a>
 80068a0:	6823      	ldr	r3, [r4, #0]
 80068a2:	b103      	cbz	r3, 80068a6 <_close_r+0x1a>
 80068a4:	602b      	str	r3, [r5, #0]
 80068a6:	bd38      	pop	{r3, r4, r5, pc}
 80068a8:	20002024 	.word	0x20002024

080068ac <_lseek_r>:
 80068ac:	b538      	push	{r3, r4, r5, lr}
 80068ae:	4c07      	ldr	r4, [pc, #28]	; (80068cc <_lseek_r+0x20>)
 80068b0:	4605      	mov	r5, r0
 80068b2:	4608      	mov	r0, r1
 80068b4:	4611      	mov	r1, r2
 80068b6:	2200      	movs	r2, #0
 80068b8:	6022      	str	r2, [r4, #0]
 80068ba:	461a      	mov	r2, r3
 80068bc:	f7fe fdf6 	bl	80054ac <_lseek>
 80068c0:	1c43      	adds	r3, r0, #1
 80068c2:	d102      	bne.n	80068ca <_lseek_r+0x1e>
 80068c4:	6823      	ldr	r3, [r4, #0]
 80068c6:	b103      	cbz	r3, 80068ca <_lseek_r+0x1e>
 80068c8:	602b      	str	r3, [r5, #0]
 80068ca:	bd38      	pop	{r3, r4, r5, pc}
 80068cc:	20002024 	.word	0x20002024

080068d0 <_malloc_usable_size_r>:
 80068d0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80068d4:	2800      	cmp	r0, #0
 80068d6:	f1a0 0004 	sub.w	r0, r0, #4
 80068da:	bfbc      	itt	lt
 80068dc:	580b      	ldrlt	r3, [r1, r0]
 80068de:	18c0      	addlt	r0, r0, r3
 80068e0:	4770      	bx	lr

080068e2 <__ssputs_r>:
 80068e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80068e6:	688e      	ldr	r6, [r1, #8]
 80068e8:	429e      	cmp	r6, r3
 80068ea:	4682      	mov	r10, r0
 80068ec:	460c      	mov	r4, r1
 80068ee:	4691      	mov	r9, r2
 80068f0:	4698      	mov	r8, r3
 80068f2:	d835      	bhi.n	8006960 <__ssputs_r+0x7e>
 80068f4:	898a      	ldrh	r2, [r1, #12]
 80068f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80068fa:	d031      	beq.n	8006960 <__ssputs_r+0x7e>
 80068fc:	6825      	ldr	r5, [r4, #0]
 80068fe:	6909      	ldr	r1, [r1, #16]
 8006900:	1a6f      	subs	r7, r5, r1
 8006902:	6965      	ldr	r5, [r4, #20]
 8006904:	2302      	movs	r3, #2
 8006906:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800690a:	fb95 f5f3 	sdiv	r5, r5, r3
 800690e:	f108 0301 	add.w	r3, r8, #1
 8006912:	443b      	add	r3, r7
 8006914:	429d      	cmp	r5, r3
 8006916:	bf38      	it	cc
 8006918:	461d      	movcc	r5, r3
 800691a:	0553      	lsls	r3, r2, #21
 800691c:	d531      	bpl.n	8006982 <__ssputs_r+0xa0>
 800691e:	4629      	mov	r1, r5
 8006920:	f7fe fd04 	bl	800532c <__wrap__malloc_r>
 8006924:	4606      	mov	r6, r0
 8006926:	b950      	cbnz	r0, 800693e <__ssputs_r+0x5c>
 8006928:	230c      	movs	r3, #12
 800692a:	f8ca 3000 	str.w	r3, [r10]
 800692e:	89a3      	ldrh	r3, [r4, #12]
 8006930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006934:	81a3      	strh	r3, [r4, #12]
 8006936:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800693a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800693e:	463a      	mov	r2, r7
 8006940:	6921      	ldr	r1, [r4, #16]
 8006942:	f7ff fc75 	bl	8006230 <memcpy>
 8006946:	89a3      	ldrh	r3, [r4, #12]
 8006948:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800694c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006950:	81a3      	strh	r3, [r4, #12]
 8006952:	6126      	str	r6, [r4, #16]
 8006954:	6165      	str	r5, [r4, #20]
 8006956:	443e      	add	r6, r7
 8006958:	1bed      	subs	r5, r5, r7
 800695a:	6026      	str	r6, [r4, #0]
 800695c:	60a5      	str	r5, [r4, #8]
 800695e:	4646      	mov	r6, r8
 8006960:	4546      	cmp	r6, r8
 8006962:	bf28      	it	cs
 8006964:	4646      	movcs	r6, r8
 8006966:	4632      	mov	r2, r6
 8006968:	4649      	mov	r1, r9
 800696a:	6820      	ldr	r0, [r4, #0]
 800696c:	f7ff fc6b 	bl	8006246 <memmove>
 8006970:	68a3      	ldr	r3, [r4, #8]
 8006972:	1b9b      	subs	r3, r3, r6
 8006974:	60a3      	str	r3, [r4, #8]
 8006976:	6823      	ldr	r3, [r4, #0]
 8006978:	441e      	add	r6, r3
 800697a:	6026      	str	r6, [r4, #0]
 800697c:	2000      	movs	r0, #0
 800697e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006982:	462a      	mov	r2, r5
 8006984:	f7fe fcd4 	bl	8005330 <__wrap__realloc_r>
 8006988:	4606      	mov	r6, r0
 800698a:	2800      	cmp	r0, #0
 800698c:	d1e1      	bne.n	8006952 <__ssputs_r+0x70>
 800698e:	6921      	ldr	r1, [r4, #16]
 8006990:	4650      	mov	r0, r10
 8006992:	f7fe fccf 	bl	8005334 <__wrap__free_r>
 8006996:	e7c7      	b.n	8006928 <__ssputs_r+0x46>

08006998 <_svfiprintf_r>:
 8006998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800699c:	b09d      	sub	sp, #116	; 0x74
 800699e:	4680      	mov	r8, r0
 80069a0:	9303      	str	r3, [sp, #12]
 80069a2:	898b      	ldrh	r3, [r1, #12]
 80069a4:	061c      	lsls	r4, r3, #24
 80069a6:	460d      	mov	r5, r1
 80069a8:	4616      	mov	r6, r2
 80069aa:	d50f      	bpl.n	80069cc <_svfiprintf_r+0x34>
 80069ac:	690b      	ldr	r3, [r1, #16]
 80069ae:	b96b      	cbnz	r3, 80069cc <_svfiprintf_r+0x34>
 80069b0:	2140      	movs	r1, #64	; 0x40
 80069b2:	f7fe fcbb 	bl	800532c <__wrap__malloc_r>
 80069b6:	6028      	str	r0, [r5, #0]
 80069b8:	6128      	str	r0, [r5, #16]
 80069ba:	b928      	cbnz	r0, 80069c8 <_svfiprintf_r+0x30>
 80069bc:	230c      	movs	r3, #12
 80069be:	f8c8 3000 	str.w	r3, [r8]
 80069c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80069c6:	e0c5      	b.n	8006b54 <_svfiprintf_r+0x1bc>
 80069c8:	2340      	movs	r3, #64	; 0x40
 80069ca:	616b      	str	r3, [r5, #20]
 80069cc:	2300      	movs	r3, #0
 80069ce:	9309      	str	r3, [sp, #36]	; 0x24
 80069d0:	2320      	movs	r3, #32
 80069d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80069d6:	2330      	movs	r3, #48	; 0x30
 80069d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80069dc:	f04f 0b01 	mov.w	r11, #1
 80069e0:	4637      	mov	r7, r6
 80069e2:	463c      	mov	r4, r7
 80069e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d13c      	bne.n	8006a66 <_svfiprintf_r+0xce>
 80069ec:	ebb7 0a06 	subs.w	r10, r7, r6
 80069f0:	d00b      	beq.n	8006a0a <_svfiprintf_r+0x72>
 80069f2:	4653      	mov	r3, r10
 80069f4:	4632      	mov	r2, r6
 80069f6:	4629      	mov	r1, r5
 80069f8:	4640      	mov	r0, r8
 80069fa:	f7ff ff72 	bl	80068e2 <__ssputs_r>
 80069fe:	3001      	adds	r0, #1
 8006a00:	f000 80a3 	beq.w	8006b4a <_svfiprintf_r+0x1b2>
 8006a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006a06:	4453      	add	r3, r10
 8006a08:	9309      	str	r3, [sp, #36]	; 0x24
 8006a0a:	783b      	ldrb	r3, [r7, #0]
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	f000 809c 	beq.w	8006b4a <_svfiprintf_r+0x1b2>
 8006a12:	2300      	movs	r3, #0
 8006a14:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006a18:	9304      	str	r3, [sp, #16]
 8006a1a:	9307      	str	r3, [sp, #28]
 8006a1c:	9205      	str	r2, [sp, #20]
 8006a1e:	9306      	str	r3, [sp, #24]
 8006a20:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006a24:	931a      	str	r3, [sp, #104]	; 0x68
 8006a26:	2205      	movs	r2, #5
 8006a28:	7821      	ldrb	r1, [r4, #0]
 8006a2a:	4850      	ldr	r0, [pc, #320]	; (8006b6c <_svfiprintf_r+0x1d4>)
 8006a2c:	f7ff fbb0 	bl	8006190 <memchr>
 8006a30:	1c67      	adds	r7, r4, #1
 8006a32:	9b04      	ldr	r3, [sp, #16]
 8006a34:	b9d8      	cbnz	r0, 8006a6e <_svfiprintf_r+0xd6>
 8006a36:	06d9      	lsls	r1, r3, #27
 8006a38:	bf44      	itt	mi
 8006a3a:	2220      	movmi	r2, #32
 8006a3c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a40:	071a      	lsls	r2, r3, #28
 8006a42:	bf44      	itt	mi
 8006a44:	222b      	movmi	r2, #43	; 0x2b
 8006a46:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a4a:	7822      	ldrb	r2, [r4, #0]
 8006a4c:	2a2a      	cmp	r2, #42	; 0x2a
 8006a4e:	d016      	beq.n	8006a7e <_svfiprintf_r+0xe6>
 8006a50:	9a07      	ldr	r2, [sp, #28]
 8006a52:	2100      	movs	r1, #0
 8006a54:	200a      	movs	r0, #10
 8006a56:	4627      	mov	r7, r4
 8006a58:	3401      	adds	r4, #1
 8006a5a:	783b      	ldrb	r3, [r7, #0]
 8006a5c:	3b30      	subs	r3, #48	; 0x30
 8006a5e:	2b09      	cmp	r3, #9
 8006a60:	d951      	bls.n	8006b06 <_svfiprintf_r+0x16e>
 8006a62:	b1c9      	cbz	r1, 8006a98 <_svfiprintf_r+0x100>
 8006a64:	e011      	b.n	8006a8a <_svfiprintf_r+0xf2>
 8006a66:	2b25      	cmp	r3, #37	; 0x25
 8006a68:	d0c0      	beq.n	80069ec <_svfiprintf_r+0x54>
 8006a6a:	4627      	mov	r7, r4
 8006a6c:	e7b9      	b.n	80069e2 <_svfiprintf_r+0x4a>
 8006a6e:	4a3f      	ldr	r2, [pc, #252]	; (8006b6c <_svfiprintf_r+0x1d4>)
 8006a70:	1a80      	subs	r0, r0, r2
 8006a72:	fa0b f000 	lsl.w	r0, r11, r0
 8006a76:	4318      	orrs	r0, r3
 8006a78:	9004      	str	r0, [sp, #16]
 8006a7a:	463c      	mov	r4, r7
 8006a7c:	e7d3      	b.n	8006a26 <_svfiprintf_r+0x8e>
 8006a7e:	9a03      	ldr	r2, [sp, #12]
 8006a80:	1d11      	adds	r1, r2, #4
 8006a82:	6812      	ldr	r2, [r2, #0]
 8006a84:	9103      	str	r1, [sp, #12]
 8006a86:	2a00      	cmp	r2, #0
 8006a88:	db01      	blt.n	8006a8e <_svfiprintf_r+0xf6>
 8006a8a:	9207      	str	r2, [sp, #28]
 8006a8c:	e004      	b.n	8006a98 <_svfiprintf_r+0x100>
 8006a8e:	4252      	negs	r2, r2
 8006a90:	f043 0302 	orr.w	r3, r3, #2
 8006a94:	9207      	str	r2, [sp, #28]
 8006a96:	9304      	str	r3, [sp, #16]
 8006a98:	783b      	ldrb	r3, [r7, #0]
 8006a9a:	2b2e      	cmp	r3, #46	; 0x2e
 8006a9c:	d10e      	bne.n	8006abc <_svfiprintf_r+0x124>
 8006a9e:	787b      	ldrb	r3, [r7, #1]
 8006aa0:	2b2a      	cmp	r3, #42	; 0x2a
 8006aa2:	f107 0101 	add.w	r1, r7, #1
 8006aa6:	d132      	bne.n	8006b0e <_svfiprintf_r+0x176>
 8006aa8:	9b03      	ldr	r3, [sp, #12]
 8006aaa:	1d1a      	adds	r2, r3, #4
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	9203      	str	r2, [sp, #12]
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	bfb8      	it	lt
 8006ab4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006ab8:	3702      	adds	r7, #2
 8006aba:	9305      	str	r3, [sp, #20]
 8006abc:	4c2c      	ldr	r4, [pc, #176]	; (8006b70 <_svfiprintf_r+0x1d8>)
 8006abe:	7839      	ldrb	r1, [r7, #0]
 8006ac0:	2203      	movs	r2, #3
 8006ac2:	4620      	mov	r0, r4
 8006ac4:	f7ff fb64 	bl	8006190 <memchr>
 8006ac8:	b138      	cbz	r0, 8006ada <_svfiprintf_r+0x142>
 8006aca:	2340      	movs	r3, #64	; 0x40
 8006acc:	1b00      	subs	r0, r0, r4
 8006ace:	fa03 f000 	lsl.w	r0, r3, r0
 8006ad2:	9b04      	ldr	r3, [sp, #16]
 8006ad4:	4303      	orrs	r3, r0
 8006ad6:	9304      	str	r3, [sp, #16]
 8006ad8:	3701      	adds	r7, #1
 8006ada:	7839      	ldrb	r1, [r7, #0]
 8006adc:	4825      	ldr	r0, [pc, #148]	; (8006b74 <_svfiprintf_r+0x1dc>)
 8006ade:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006ae2:	2206      	movs	r2, #6
 8006ae4:	1c7e      	adds	r6, r7, #1
 8006ae6:	f7ff fb53 	bl	8006190 <memchr>
 8006aea:	2800      	cmp	r0, #0
 8006aec:	d035      	beq.n	8006b5a <_svfiprintf_r+0x1c2>
 8006aee:	4b22      	ldr	r3, [pc, #136]	; (8006b78 <_svfiprintf_r+0x1e0>)
 8006af0:	b9fb      	cbnz	r3, 8006b32 <_svfiprintf_r+0x19a>
 8006af2:	9b03      	ldr	r3, [sp, #12]
 8006af4:	3307      	adds	r3, #7
 8006af6:	f023 0307 	bic.w	r3, r3, #7
 8006afa:	3308      	adds	r3, #8
 8006afc:	9303      	str	r3, [sp, #12]
 8006afe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b00:	444b      	add	r3, r9
 8006b02:	9309      	str	r3, [sp, #36]	; 0x24
 8006b04:	e76c      	b.n	80069e0 <_svfiprintf_r+0x48>
 8006b06:	fb00 3202 	mla	r2, r0, r2, r3
 8006b0a:	2101      	movs	r1, #1
 8006b0c:	e7a3      	b.n	8006a56 <_svfiprintf_r+0xbe>
 8006b0e:	2300      	movs	r3, #0
 8006b10:	9305      	str	r3, [sp, #20]
 8006b12:	4618      	mov	r0, r3
 8006b14:	240a      	movs	r4, #10
 8006b16:	460f      	mov	r7, r1
 8006b18:	3101      	adds	r1, #1
 8006b1a:	783a      	ldrb	r2, [r7, #0]
 8006b1c:	3a30      	subs	r2, #48	; 0x30
 8006b1e:	2a09      	cmp	r2, #9
 8006b20:	d903      	bls.n	8006b2a <_svfiprintf_r+0x192>
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d0ca      	beq.n	8006abc <_svfiprintf_r+0x124>
 8006b26:	9005      	str	r0, [sp, #20]
 8006b28:	e7c8      	b.n	8006abc <_svfiprintf_r+0x124>
 8006b2a:	fb04 2000 	mla	r0, r4, r0, r2
 8006b2e:	2301      	movs	r3, #1
 8006b30:	e7f1      	b.n	8006b16 <_svfiprintf_r+0x17e>
 8006b32:	ab03      	add	r3, sp, #12
 8006b34:	9300      	str	r3, [sp, #0]
 8006b36:	462a      	mov	r2, r5
 8006b38:	4b10      	ldr	r3, [pc, #64]	; (8006b7c <_svfiprintf_r+0x1e4>)
 8006b3a:	a904      	add	r1, sp, #16
 8006b3c:	4640      	mov	r0, r8
 8006b3e:	f3af 8000 	nop.w
 8006b42:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8006b46:	4681      	mov	r9, r0
 8006b48:	d1d9      	bne.n	8006afe <_svfiprintf_r+0x166>
 8006b4a:	89ab      	ldrh	r3, [r5, #12]
 8006b4c:	065b      	lsls	r3, r3, #25
 8006b4e:	f53f af38 	bmi.w	80069c2 <_svfiprintf_r+0x2a>
 8006b52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b54:	b01d      	add	sp, #116	; 0x74
 8006b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8006b5a:	ab03      	add	r3, sp, #12
 8006b5c:	9300      	str	r3, [sp, #0]
 8006b5e:	462a      	mov	r2, r5
 8006b60:	4b06      	ldr	r3, [pc, #24]	; (8006b7c <_svfiprintf_r+0x1e4>)
 8006b62:	a904      	add	r1, sp, #16
 8006b64:	4640      	mov	r0, r8
 8006b66:	f7ff fcd9 	bl	800651c <_printf_i>
 8006b6a:	e7ea      	b.n	8006b42 <_svfiprintf_r+0x1aa>
 8006b6c:	08007532 	.word	0x08007532
 8006b70:	08007538 	.word	0x08007538
 8006b74:	0800753c 	.word	0x0800753c
 8006b78:	00000000 	.word	0x00000000
 8006b7c:	080068e3 	.word	0x080068e3

08006b80 <_read_r>:
 8006b80:	b538      	push	{r3, r4, r5, lr}
 8006b82:	4c07      	ldr	r4, [pc, #28]	; (8006ba0 <_read_r+0x20>)
 8006b84:	4605      	mov	r5, r0
 8006b86:	4608      	mov	r0, r1
 8006b88:	4611      	mov	r1, r2
 8006b8a:	2200      	movs	r2, #0
 8006b8c:	6022      	str	r2, [r4, #0]
 8006b8e:	461a      	mov	r2, r3
 8006b90:	f7fe fc5c 	bl	800544c <_read>
 8006b94:	1c43      	adds	r3, r0, #1
 8006b96:	d102      	bne.n	8006b9e <_read_r+0x1e>
 8006b98:	6823      	ldr	r3, [r4, #0]
 8006b9a:	b103      	cbz	r3, 8006b9e <_read_r+0x1e>
 8006b9c:	602b      	str	r3, [r5, #0]
 8006b9e:	bd38      	pop	{r3, r4, r5, pc}
 8006ba0:	20002024 	.word	0x20002024

08006ba4 <fmaxf>:
 8006ba4:	b508      	push	{r3, lr}
 8006ba6:	ed2d 8b02 	vpush	{d8}
 8006baa:	ee08 0a90 	vmov	s17, r0
 8006bae:	ee08 1a10 	vmov	s16, r1
 8006bb2:	f000 f833 	bl	8006c1c <__fpclassifyf>
 8006bb6:	b920      	cbnz	r0, 8006bc2 <fmaxf+0x1e>
 8006bb8:	ee18 0a10 	vmov	r0, s16
 8006bbc:	ecbd 8b02 	vpop	{d8}
 8006bc0:	bd08      	pop	{r3, pc}
 8006bc2:	ee18 0a10 	vmov	r0, s16
 8006bc6:	f000 f829 	bl	8006c1c <__fpclassifyf>
 8006bca:	b120      	cbz	r0, 8006bd6 <fmaxf+0x32>
 8006bcc:	eef4 8ac8 	vcmpe.f32	s17, s16
 8006bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bd4:	ddf0      	ble.n	8006bb8 <fmaxf+0x14>
 8006bd6:	ee18 0a90 	vmov	r0, s17
 8006bda:	ecbd 8b02 	vpop	{d8}
 8006bde:	bd08      	pop	{r3, pc}

08006be0 <fminf>:
 8006be0:	b508      	push	{r3, lr}
 8006be2:	ed2d 8b02 	vpush	{d8}
 8006be6:	ee08 0a90 	vmov	s17, r0
 8006bea:	ee08 1a10 	vmov	s16, r1
 8006bee:	f000 f815 	bl	8006c1c <__fpclassifyf>
 8006bf2:	b920      	cbnz	r0, 8006bfe <fminf+0x1e>
 8006bf4:	ee18 0a10 	vmov	r0, s16
 8006bf8:	ecbd 8b02 	vpop	{d8}
 8006bfc:	bd08      	pop	{r3, pc}
 8006bfe:	ee18 0a10 	vmov	r0, s16
 8006c02:	f000 f80b 	bl	8006c1c <__fpclassifyf>
 8006c06:	b120      	cbz	r0, 8006c12 <fminf+0x32>
 8006c08:	eef4 8ac8 	vcmpe.f32	s17, s16
 8006c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c10:	d5f0      	bpl.n	8006bf4 <fminf+0x14>
 8006c12:	ee18 0a90 	vmov	r0, s17
 8006c16:	ecbd 8b02 	vpop	{d8}
 8006c1a:	bd08      	pop	{r3, pc}

08006c1c <__fpclassifyf>:
 8006c1c:	f030 4000 	bics.w	r0, r0, #2147483648	; 0x80000000
 8006c20:	d101      	bne.n	8006c26 <__fpclassifyf+0xa>
 8006c22:	2002      	movs	r0, #2
 8006c24:	4770      	bx	lr
 8006c26:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
 8006c2a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 8006c2e:	d201      	bcs.n	8006c34 <__fpclassifyf+0x18>
 8006c30:	2004      	movs	r0, #4
 8006c32:	4770      	bx	lr
 8006c34:	4b05      	ldr	r3, [pc, #20]	; (8006c4c <__fpclassifyf+0x30>)
 8006c36:	1e42      	subs	r2, r0, #1
 8006c38:	429a      	cmp	r2, r3
 8006c3a:	d801      	bhi.n	8006c40 <__fpclassifyf+0x24>
 8006c3c:	2003      	movs	r0, #3
 8006c3e:	4770      	bx	lr
 8006c40:	f1a0 40ff 	sub.w	r0, r0, #2139095040	; 0x7f800000
 8006c44:	fab0 f080 	clz	r0, r0
 8006c48:	0940      	lsrs	r0, r0, #5
 8006c4a:	4770      	bx	lr
 8006c4c:	007ffffe 	.word	0x007ffffe

08006c50 <_init>:
 8006c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c52:	bf00      	nop
 8006c54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c56:	bc08      	pop	{r3}
 8006c58:	469e      	mov	lr, r3
 8006c5a:	4770      	bx	lr

08006c5c <_fini>:
 8006c5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c5e:	bf00      	nop
 8006c60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c62:	bc08      	pop	{r3}
 8006c64:	469e      	mov	lr, r3
 8006c66:	4770      	bx	lr

08006c68 <vtable for std_msgs::Time>:
	...
 8006c70:	01f5 0800 021d 0800 0259 0800 0261 0800     ........Y...a...

08006c80 <vtable for rosserial_msgs::TopicInfo>:
	...
 8006c88:	078f 0800 0869 0800 0269 0800 0271 0800     ....i...i...q...

08006c98 <vtable for rosserial_msgs::Log>:
	...
 8006ca0:	0763 0800 0833 0800 0279 0800 0281 0800     c...3...y.......

08006cb0 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8006cb8:	0681 0800 091f 0800 0289 0800 0291 0800     ................

08006cc8 <vtable for std_srvs::EmptyRequest>:
	...
 8006cd0:	0299 0800 029d 0800 02a1 0800 02a9 0800     ................

08006ce0 <vtable for std_srvs::EmptyResponse>:
	...
 8006ce8:	02b1 0800 02b5 0800 02b9 0800 02c1 0800     ................

08006cf8 <vtable for AKROS_bridge::Initialize_singleRequest>:
	...
 8006d00:	02c9 0800 02cd 0800 02d1 0800 02d9 0800     ................

08006d10 <vtable for AKROS_bridge::Initialize_singleResponse>:
	...
 8006d18:	02e1 0800 0347 0800 0365 0800 036d 0800     ....G...e...m...

08006d28 <vtable for AKROS_bridge::motor_cmd_single>:
	...
 8006d30:	0375 0800 03cd 0800 03f5 0800 03fd 0800     u...............

08006d40 <vtable for AKROS_bridge::motor_reply_single>:
	...
 8006d48:	0405 0800 043d 0800 0459 0800 0461 0800     ....=...Y...a...

08006d58 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8006d60:	0ed5 0800 0f95 0800 04bd 0800               ............

08006d6c <vtable for ros::Subscriber<AKROS_bridge::motor_cmd_single, void>>:
	...
 8006d74:	0491 0800 04a9 0800 04ad 0800 04b5 0800     ................

08006d84 <vtable for ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>>:
	...
 8006d8c:	0503 0800 047d 0800 0481 0800 0489 0800     ....}...........

08006d9c <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>>:
	...
 8006da4:	04e7 0800 0469 0800 046d 0800 0475 0800     ....i...m...u...
 8006db4:	6f6d 6f74 5f72 6572 6c70 0079 6f6d 6f74     motor_reply.moto
 8006dc4:	5f72 6d63 0064 6e65 6574 5f72 6f63 746e     r_cmd.enter_cont
 8006dd4:	6f72 5f6c 6f6d 6564 6500 6978 5f74 6f63     rol_mode.exit_co
 8006de4:	746e 6f72 5f6c 6f6d 6564 7300 7465 705f     ntrol_mode.set_p
 8006df4:	736f 7469 6f69 5f6e 657a 6f72 6300 3565     osition_zero.ce5
 8006e04:	3835 3834 3361 3864 6436 3230 3039 3531     5848a3d86d029015
 8006e14:	3562 3364 6339 6134 6664 6263 0034 4b41     b5d39c4adfcb4.AK
 8006e24:	4f52 5f53 7262 6469 6567 6d2f 746f 726f     ROS_bridge/motor
 8006e34:	635f 646d 735f 6e69 6c67 0065 3361 3030     _cmd_single.a300
 8006e44:	3431 6233 6435 3831 3462 3736 6532 6266     143b5d18b4672efb
 8006e54:	3666 3634 6333 3164 3635 3262 4100 524b     f6463cd156b2.AKR
 8006e64:	534f 625f 6972 6764 2f65 6f6d 6f74 5f72     OS_bridge/motor_
 8006e74:	6572 6c70 5f79 6973 676e 656c 3700 3665     reply_single.7e6
 8006e84:	3863 3633 3630 3536 3566 6133 6535 3236     c8360665f53a5e62
 8006e94:	6265 6466 3439 6465 3766 6137 0033          ebfd94edf77a3.

08006ea2 <AKROS_bridge::INITIALIZE_SINGLE>:
 8006ea2:	4b41 4f52 5f53 7262 6469 6567 492f 696e     AKROS_bridge/Ini
 8006eb2:	6974 6c61 7a69 5f65 6973 676e 656c 3900     tialize_single.9
 8006ec2:	3066 3965 6238 6164 3536 3839 3931 3638     f0e98bda65981986
 8006ed2:	6464 3566 6133 6166 6137 3034 3465 0039     ddf53afa7a40e49.
 8006ee2:	3131 6261 3764 3133 3263 3935 3333 3632     11abd731c2593326
 8006ef2:	6331 3664 3831 6233 3164 6432 3236 3539     1cd6183bd12d6295
 8006f02:	7200 736f 6573 6972 6c61 6d5f 6773 2f73     .rosserial_msgs/
 8006f12:	6f4c 0067 6130 3564 6631 3838 6366 3434     Log.0ad51f88fc44
 8006f22:	3938 6632 6338 3031 3836 3034 3737 3436     892f8c1068407764
 8006f32:	3036 3530 7200 736f 6573 6972 6c61 6d5f     6005.rosserial_m
 8006f42:	6773 2f73 6f54 6970 4963 666e 006f          sgs/TopicInfo.

08006f50 <rosserial_msgs::REQUESTPARAM>:
 8006f50:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8006f60:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8006f70:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8006f80:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8006f90:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006fa0:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8006fb0:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8006fc0:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8006fd0:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 8006fe0:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 8006ff0:	3234 6537 7300                                   427e.

08006ff5 <std_srvs::EMPTY>:
 8006ff5:	7473 5f64 7273 7376 452f 706d 7974 fb00          std_srvs/Empty.

08007004 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8007004:	12fb 0800 12ed 0800 12f9 0800 682f 6d6f     ............/hom
 8007014:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8007024:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8007034:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8007044:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8007054:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 8007064:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 8007074:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 8007084:	6425 2129 0a0d 0000                         %d)!....

0800708c <vtable for BufferedSerial>:
	...
 8007094:	5061 0800 5061 0800 1361 0800 13b9 0800     aP..aP..a.......
 80070a4:	12bd 0800 12c9 0800 12cd 0800 1523 0800     ............#...
 80070b4:	153b 0800 15b5 0800 1579 0800 6576 7463     ;.......y...vect
 80070c4:	726f 3a3a 4d5f 645f 6665 7561 746c 615f     or::_M_default_a
 80070d4:	7070 6e65 0064 0000                         ppend...

080070dc <us_data>:
 80070dc:	70e4 0800 0a38 2000                         .p..8.. 

080070e4 <us_interface>:
 80070e4:	3935 0800 3955 0800 3985 0800 399d 0800     59..U9...9...9..
 80070f4:	396d 0800 6970 6d6e 7061 6d20 7369 6d2d     m9..pinmap mis-m
 8007104:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8007114:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8007124:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8007134:	6e69 756f 0074 0000                         inout...

0800713c <mp_stk_size>:
 800713c:	0210 0000                                   ....

08007140 <mp_tcb_size>:
 8007140:	01cc                                        ..

08007142 <mp_tmr_size>:
	...

08007144 <os_clockrate>:
 8007144:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8007154:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8007164:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08007171 <os_fifo_size>:
 8007171:	0110                                             .

08007172 <os_flags>:
 8007172:	0001                                        ..

08007174 <os_maxtaskrun>:
 8007174:	0007 0000                                   ....

08007178 <os_messageQ_def_osTimerMessageQ>:
 8007178:	0004 0000 0a5c 2000                         ....\.. 

08007180 <os_mutex_def_env_mutex>:
 8007180:	0a7c 2000                                   |.. 

08007184 <os_mutex_def_malloc_mutex>:
 8007184:	0a8c 2000                                   ... 

08007188 <os_mutex_def_singleton_mutex>:
 8007188:	0a9c 2000                                   ... 

0800718c <os_rrobin>:
 800718c:	0005 0001                                   ....

08007190 <os_stackinfo>:
 8007190:	0200 0100                                   ....

08007194 <os_thread_def_osTimerThread>:
 8007194:	2ae1 0800 0002 0000 0001 0000 0320 0000     .*.......... ...
 80071a4:	17a8 2000                                   ... 

080071a8 <os_trv>:
 80071a8:	f9ff 0000                                   ....

080071ac <os_mutex_def_osThreadMutex>:
 80071ac:	12b0 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 80071bc:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 80071cc:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 80071dc:	6169 696c 657a 4320 4e41 0000               ialize CAN..

080071e8 <timing_pts>:
	...
 80071f0:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 8007200:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 8007210:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 8007220:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 8007230:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 8007240:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 8007250:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 8007260:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 8007270:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 8007280:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 8007290:	000f 0000 0006 0000 000f 0000 0007 0000     ................

080072a0 <ll_pin_defines>:
 80072a0:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 80072b0:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 80072c0:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 80072d0:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 80072e0:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 80072f0:	2065 4155 5452 000a                         e UART..

080072f8 <PinMap_CAN_RD>:
 80072f8:	000b 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8007308:	ffff ffff 0000 0000                         ........

08007310 <PinMap_CAN_TD>:
 8007310:	000c 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8007320:	ffff ffff 0000 0000                         ........

08007328 <PinMap_UART_RX>:
 8007328:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8007338:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8007348:	0712 0000 0014 0000 4400 4000 0712 0000     .........D.@....
 8007358:	0017 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 8007368:	ffff ffff 0000 0000                         ........

08007370 <PinMap_UART_TX>:
 8007370:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8007380:	3800 4001 0712 0000 000e 0000 4400 4000     .8.@.........D.@
 8007390:	0712 0000 0013 0000 4400 4000 0712 0000     .........D.@....
 80073a0:	0016 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 80073b0:	ffff ffff 0000 0000                         ........

080073b8 <AHBPrescTable>:
	...
 80073c0:	0201 0403 0706 0908                         ........

080073c8 <APBPrescTable>:
 80073c8:	0000 0000 0201 0403                         ........

080073d0 <CSWTCH.45>:
 80073d0:	0400 0208                                   ....

080073d4 <aPLLMULFactorTable>:
 80073d4:	0302 0504 0706 0908 0b0a 0d0c 0f0e 1010     ................

080073e4 <aPredivFactorTable>:
 80073e4:	0201 0403 0605 0807 0a09 0c0b 0e0d 100f     ................

080073f4 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 80073f4:	4f15 0800 4f19 0800 4f21 0800               .O...O..!O..

08007400 <vtable for mbed::SerialBase>:
	...
 8007408:	4f03 0800 4f05 0800 1325 0800 134d 0800     .O...O..%...M...

08007418 <vtable for mbed::RawSerial>:
	...
 8007420:	5061 0800 5061 0800 5065 0800 5079 0800     aP..aP..eP..yP..

08007430 <vtable for mbed::CAN>:
	...
 8007438:	51f1 0800 5231 0800 5151 0800 515b 0800     .Q..1R..QQ..[Q..
 8007448:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8007458:	7475 6f20 2066 656d 6f6d 7972 0a0d 4f00     ut of memory...O
 8007468:	6570 6172 6f74 2072 656e 2077 756f 2074     perator new out 
 8007478:	666f 6d20 6d65 726f 0d79 000a 7245 6f72     of memory...Erro
 8007488:	2072 6e69 7469 6169 696c 697a 676e 7420     r initializing t
 8007498:	6568 6d20 7475 7865 6f20 6a62 6365 0a74     he mutex object.
 80074a8:	0000 0000                                   ....

080074ac <__sf_fake_stderr>:
	...

080074cc <__sf_fake_stdin>:
	...

080074ec <__sf_fake_stdout>:
	...

0800750c <_global_impure_ptr>:
 800750c:	01b0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 800751c:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 800752c:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 800753c:	6665 4567 4746 0000                         efgEFG..

08007544 <__EH_FRAME_BEGIN__>:
 8007544:	0000 0000                                   ....
