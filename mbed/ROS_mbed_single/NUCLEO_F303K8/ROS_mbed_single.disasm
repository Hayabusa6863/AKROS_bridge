
NUCLEO_F303K8/ROS_mbed_single.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0800574d


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 30 00 20 4d 57 00 08 81 57 00 08 81 57 00 08     .0. MW...W...W..
 8000010:	81 57 00 08 81 57 00 08 81 57 00 08 00 00 00 00     .W...W...W......
	...
 800002c:	11 56 00 08 81 57 00 08 00 00 00 00 b7 56 00 08     .V...W.......V..
 800003c:	17 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 800004c:	81 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 800005c:	81 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 800006c:	81 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 800007c:	81 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 800008c:	91 34 00 08 95 34 00 08 81 57 00 08 91 33 00 08     .4...4...W...3..
 800009c:	81 57 00 08 81 57 00 08 81 57 00 08 81 57 00 08     .W...W...W...W..
 80000ac:	81 57 00 08 81 57 00 08 81 57 00 08 00 00 00 00     .W...W...W......
 80000bc:	81 57 00 08 81 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
 80000cc:	81 57 00 08 00 00 00 00 81 57 00 08 81 57 00 08     .W.......W...W..
 80000dc:	81 57 00 08 81 57 00 08 81 57 00 08 00 00 00 00     .W...W...W......
	...
 8000118:	81 57 00 08 81 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000140:	81 57 00 08 81 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000184:	81 57 00 08                                         .W..

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000228 	.word	0x20000228
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08007208 	.word	0x08007208

080001ac <frame_dummy>:
 80001ac:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <frame_dummy+0x34>)
 80001ae:	b143      	cbz	r3, 80001c2 <frame_dummy+0x16>
 80001b0:	480c      	ldr	r0, [pc, #48]	; (80001e4 <frame_dummy+0x38>)
 80001b2:	490d      	ldr	r1, [pc, #52]	; (80001e8 <frame_dummy+0x3c>)
 80001b4:	b510      	push	{r4, lr}
 80001b6:	f3af 8000 	nop.w
 80001ba:	480c      	ldr	r0, [pc, #48]	; (80001ec <frame_dummy+0x40>)
 80001bc:	6803      	ldr	r3, [r0, #0]
 80001be:	b923      	cbnz	r3, 80001ca <frame_dummy+0x1e>
 80001c0:	bd10      	pop	{r4, pc}
 80001c2:	480a      	ldr	r0, [pc, #40]	; (80001ec <frame_dummy+0x40>)
 80001c4:	6803      	ldr	r3, [r0, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <frame_dummy+0x2a>
 80001c8:	4770      	bx	lr
 80001ca:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <frame_dummy+0x44>)
 80001cc:	2b00      	cmp	r3, #0
 80001ce:	d0f7      	beq.n	80001c0 <frame_dummy+0x14>
 80001d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001d4:	4718      	bx	r3
 80001d6:	4b06      	ldr	r3, [pc, #24]	; (80001f0 <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f5      	beq.n	80001c8 <frame_dummy+0x1c>
 80001dc:	4718      	bx	r3
 80001de:	bf00      	nop
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08007208 	.word	0x08007208
 80001e8:	2000022c 	.word	0x2000022c
 80001ec:	20000220 	.word	0x20000220
 80001f0:	00000000 	.word	0x00000000

080001f4 <std_msgs::Time::serialize(unsigned char*) const>:
 80001f4:	6843      	ldr	r3, [r0, #4]
 80001f6:	700b      	strb	r3, [r1, #0]
 80001f8:	6843      	ldr	r3, [r0, #4]
 80001fa:	0a1b      	lsrs	r3, r3, #8
 80001fc:	704b      	strb	r3, [r1, #1]
 80001fe:	88c3      	ldrh	r3, [r0, #6]
 8000200:	708b      	strb	r3, [r1, #2]
 8000202:	79c3      	ldrb	r3, [r0, #7]
 8000204:	70cb      	strb	r3, [r1, #3]
 8000206:	6883      	ldr	r3, [r0, #8]
 8000208:	710b      	strb	r3, [r1, #4]
 800020a:	6883      	ldr	r3, [r0, #8]
 800020c:	0a1b      	lsrs	r3, r3, #8
 800020e:	714b      	strb	r3, [r1, #5]
 8000210:	8943      	ldrh	r3, [r0, #10]
 8000212:	718b      	strb	r3, [r1, #6]
 8000214:	7ac3      	ldrb	r3, [r0, #11]
 8000216:	71cb      	strb	r3, [r1, #7]
 8000218:	2008      	movs	r0, #8
 800021a:	4770      	bx	lr

0800021c <std_msgs::Time::deserialize(unsigned char*)>:
 800021c:	780b      	ldrb	r3, [r1, #0]
 800021e:	6043      	str	r3, [r0, #4]
 8000220:	784a      	ldrb	r2, [r1, #1]
 8000222:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000226:	6043      	str	r3, [r0, #4]
 8000228:	788a      	ldrb	r2, [r1, #2]
 800022a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	78ca      	ldrb	r2, [r1, #3]
 8000232:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	790b      	ldrb	r3, [r1, #4]
 800023a:	6083      	str	r3, [r0, #8]
 800023c:	794a      	ldrb	r2, [r1, #5]
 800023e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000242:	6083      	str	r3, [r0, #8]
 8000244:	798a      	ldrb	r2, [r1, #6]
 8000246:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	79ca      	ldrb	r2, [r1, #7]
 800024e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::getType()>:
 8000258:	4800      	ldr	r0, [pc, #0]	; (800025c <std_msgs::Time::getType()+0x4>)
 800025a:	4770      	bx	lr
 800025c:	08006cd2 	.word	0x08006cd2

08000260 <std_msgs::Time::getMD5()>:
 8000260:	4800      	ldr	r0, [pc, #0]	; (8000264 <std_msgs::Time::getMD5()+0x4>)
 8000262:	4770      	bx	lr
 8000264:	08006cb1 	.word	0x08006cb1

08000268 <rosserial_msgs::TopicInfo::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08006c43 	.word	0x08006c43

08000270 <rosserial_msgs::TopicInfo::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08006c22 	.word	0x08006c22

08000278 <rosserial_msgs::Log::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::Log::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08006c0f 	.word	0x08006c0f

08000280 <rosserial_msgs::Log::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::Log::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08006bee 	.word	0x08006bee

08000288 <rosserial_msgs::RequestParamResponse::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08006c5c 	.word	0x08006c5c

08000290 <rosserial_msgs::RequestParamResponse::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08006bcd 	.word	0x08006bcd

08000298 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8000298:	2000      	movs	r0, #0
 800029a:	4770      	bx	lr

0800029c <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 800029c:	2000      	movs	r0, #0
 800029e:	4770      	bx	lr

080002a0 <std_srvs::EmptyRequest::getType()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <std_srvs::EmptyRequest::getType()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08006d01 	.word	0x08006d01

080002a8 <std_srvs::EmptyRequest::getMD5()>:
 80002a8:	4800      	ldr	r0, [pc, #0]	; (80002ac <std_srvs::EmptyRequest::getMD5()+0x4>)
 80002aa:	4770      	bx	lr
 80002ac:	08006ce0 	.word	0x08006ce0

080002b0 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr

080002b4 <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 80002b4:	2000      	movs	r0, #0
 80002b6:	4770      	bx	lr

080002b8 <std_srvs::EmptyResponse::getType()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_srvs::EmptyResponse::getType()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08006d01 	.word	0x08006d01

080002c0 <std_srvs::EmptyResponse::getMD5()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_srvs::EmptyResponse::getMD5()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	08006ce0 	.word	0x08006ce0

080002c8 <AKROS_bridge::Initialize_singleRequest::serialize(unsigned char*) const>:
 80002c8:	2000      	movs	r0, #0
 80002ca:	4770      	bx	lr

080002cc <AKROS_bridge::Initialize_singleRequest::deserialize(unsigned char*)>:
 80002cc:	2000      	movs	r0, #0
 80002ce:	4770      	bx	lr

080002d0 <AKROS_bridge::Initialize_singleRequest::getType()>:
 80002d0:	4800      	ldr	r0, [pc, #0]	; (80002d4 <AKROS_bridge::Initialize_singleRequest::getType()+0x4>)
 80002d2:	4770      	bx	lr
 80002d4:	08006bae 	.word	0x08006bae

080002d8 <AKROS_bridge::Initialize_singleRequest::getMD5()>:
 80002d8:	4800      	ldr	r0, [pc, #0]	; (80002dc <AKROS_bridge::Initialize_singleRequest::getMD5()+0x4>)
 80002da:	4770      	bx	lr
 80002dc:	08006ce0 	.word	0x08006ce0

080002e0 <AKROS_bridge::Initialize_singleResponse::serialize(unsigned char*) const>:
 80002e0:	6882      	ldr	r2, [r0, #8]
 80002e2:	68c3      	ldr	r3, [r0, #12]
 80002e4:	700a      	strb	r2, [r1, #0]
 80002e6:	b510      	push	{r4, lr}
 80002e8:	0a14      	lsrs	r4, r2, #8
 80002ea:	704c      	strb	r4, [r1, #1]
 80002ec:	0c14      	lsrs	r4, r2, #16
 80002ee:	0e12      	lsrs	r2, r2, #24
 80002f0:	70ca      	strb	r2, [r1, #3]
 80002f2:	0a1a      	lsrs	r2, r3, #8
 80002f4:	710b      	strb	r3, [r1, #4]
 80002f6:	714a      	strb	r2, [r1, #5]
 80002f8:	0c1a      	lsrs	r2, r3, #16
 80002fa:	0e1b      	lsrs	r3, r3, #24
 80002fc:	708c      	strb	r4, [r1, #2]
 80002fe:	718a      	strb	r2, [r1, #6]
 8000300:	71cb      	strb	r3, [r1, #7]
 8000302:	6902      	ldr	r2, [r0, #16]
 8000304:	6943      	ldr	r3, [r0, #20]
 8000306:	720a      	strb	r2, [r1, #8]
 8000308:	0a14      	lsrs	r4, r2, #8
 800030a:	724c      	strb	r4, [r1, #9]
 800030c:	0c14      	lsrs	r4, r2, #16
 800030e:	0e12      	lsrs	r2, r2, #24
 8000310:	72ca      	strb	r2, [r1, #11]
 8000312:	0a1a      	lsrs	r2, r3, #8
 8000314:	730b      	strb	r3, [r1, #12]
 8000316:	734a      	strb	r2, [r1, #13]
 8000318:	0c1a      	lsrs	r2, r3, #16
 800031a:	0e1b      	lsrs	r3, r3, #24
 800031c:	728c      	strb	r4, [r1, #10]
 800031e:	738a      	strb	r2, [r1, #14]
 8000320:	73cb      	strb	r3, [r1, #15]
 8000322:	6982      	ldr	r2, [r0, #24]
 8000324:	69c3      	ldr	r3, [r0, #28]
 8000326:	740a      	strb	r2, [r1, #16]
 8000328:	0a10      	lsrs	r0, r2, #8
 800032a:	7448      	strb	r0, [r1, #17]
 800032c:	0c10      	lsrs	r0, r2, #16
 800032e:	0e12      	lsrs	r2, r2, #24
 8000330:	74ca      	strb	r2, [r1, #19]
 8000332:	0a1a      	lsrs	r2, r3, #8
 8000334:	750b      	strb	r3, [r1, #20]
 8000336:	754a      	strb	r2, [r1, #21]
 8000338:	0c1a      	lsrs	r2, r3, #16
 800033a:	0e1b      	lsrs	r3, r3, #24
 800033c:	7488      	strb	r0, [r1, #18]
 800033e:	758a      	strb	r2, [r1, #22]
 8000340:	75cb      	strb	r3, [r1, #23]
 8000342:	2018      	movs	r0, #24
 8000344:	bd10      	pop	{r4, pc}

08000346 <AKROS_bridge::Initialize_singleResponse::deserialize(unsigned char*)>:
 8000346:	680a      	ldr	r2, [r1, #0]
 8000348:	684b      	ldr	r3, [r1, #4]
 800034a:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800034e:	688a      	ldr	r2, [r1, #8]
 8000350:	68cb      	ldr	r3, [r1, #12]
 8000352:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000356:	690a      	ldr	r2, [r1, #16]
 8000358:	694b      	ldr	r3, [r1, #20]
 800035a:	e9c0 2306 	strd	r2, r3, [r0, #24]
 800035e:	2018      	movs	r0, #24
 8000360:	4770      	bx	lr
	...

08000364 <AKROS_bridge::Initialize_singleResponse::getType()>:
 8000364:	4800      	ldr	r0, [pc, #0]	; (8000368 <AKROS_bridge::Initialize_singleResponse::getType()+0x4>)
 8000366:	4770      	bx	lr
 8000368:	08006bae 	.word	0x08006bae

0800036c <AKROS_bridge::Initialize_singleResponse::getMD5()>:
 800036c:	4800      	ldr	r0, [pc, #0]	; (8000370 <AKROS_bridge::Initialize_singleResponse::getMD5()+0x4>)
 800036e:	4770      	bx	lr
 8000370:	08006b8d 	.word	0x08006b8d

08000374 <AKROS_bridge::motor_cmd_single::serialize(unsigned char*) const>:
 8000374:	7903      	ldrb	r3, [r0, #4]
 8000376:	700b      	strb	r3, [r1, #0]
 8000378:	6883      	ldr	r3, [r0, #8]
 800037a:	704b      	strb	r3, [r1, #1]
 800037c:	0a1a      	lsrs	r2, r3, #8
 800037e:	708a      	strb	r2, [r1, #2]
 8000380:	0c1a      	lsrs	r2, r3, #16
 8000382:	0e1b      	lsrs	r3, r3, #24
 8000384:	70ca      	strb	r2, [r1, #3]
 8000386:	710b      	strb	r3, [r1, #4]
 8000388:	68c3      	ldr	r3, [r0, #12]
 800038a:	714b      	strb	r3, [r1, #5]
 800038c:	0a1a      	lsrs	r2, r3, #8
 800038e:	718a      	strb	r2, [r1, #6]
 8000390:	0c1a      	lsrs	r2, r3, #16
 8000392:	0e1b      	lsrs	r3, r3, #24
 8000394:	71ca      	strb	r2, [r1, #7]
 8000396:	720b      	strb	r3, [r1, #8]
 8000398:	6903      	ldr	r3, [r0, #16]
 800039a:	724b      	strb	r3, [r1, #9]
 800039c:	0a1a      	lsrs	r2, r3, #8
 800039e:	728a      	strb	r2, [r1, #10]
 80003a0:	0c1a      	lsrs	r2, r3, #16
 80003a2:	0e1b      	lsrs	r3, r3, #24
 80003a4:	72ca      	strb	r2, [r1, #11]
 80003a6:	730b      	strb	r3, [r1, #12]
 80003a8:	6943      	ldr	r3, [r0, #20]
 80003aa:	734b      	strb	r3, [r1, #13]
 80003ac:	0a1a      	lsrs	r2, r3, #8
 80003ae:	738a      	strb	r2, [r1, #14]
 80003b0:	0c1a      	lsrs	r2, r3, #16
 80003b2:	0e1b      	lsrs	r3, r3, #24
 80003b4:	73ca      	strb	r2, [r1, #15]
 80003b6:	740b      	strb	r3, [r1, #16]
 80003b8:	6983      	ldr	r3, [r0, #24]
 80003ba:	744b      	strb	r3, [r1, #17]
 80003bc:	0a1a      	lsrs	r2, r3, #8
 80003be:	748a      	strb	r2, [r1, #18]
 80003c0:	0c1a      	lsrs	r2, r3, #16
 80003c2:	0e1b      	lsrs	r3, r3, #24
 80003c4:	74ca      	strb	r2, [r1, #19]
 80003c6:	750b      	strb	r3, [r1, #20]
 80003c8:	2015      	movs	r0, #21
 80003ca:	4770      	bx	lr

080003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>:
 80003cc:	780b      	ldrb	r3, [r1, #0]
 80003ce:	7103      	strb	r3, [r0, #4]
 80003d0:	f8d1 3001 	ldr.w	r3, [r1, #1]
 80003d4:	6083      	str	r3, [r0, #8]
 80003d6:	f8d1 3005 	ldr.w	r3, [r1, #5]
 80003da:	60c3      	str	r3, [r0, #12]
 80003dc:	f8d1 3009 	ldr.w	r3, [r1, #9]
 80003e0:	6103      	str	r3, [r0, #16]
 80003e2:	f8d1 300d 	ldr.w	r3, [r1, #13]
 80003e6:	6143      	str	r3, [r0, #20]
 80003e8:	f8d1 3011 	ldr.w	r3, [r1, #17]
 80003ec:	6183      	str	r3, [r0, #24]
 80003ee:	2015      	movs	r0, #21
 80003f0:	4770      	bx	lr
	...

080003f4 <AKROS_bridge::motor_cmd_single::getType()>:
 80003f4:	4800      	ldr	r0, [pc, #0]	; (80003f8 <AKROS_bridge::motor_cmd_single::getType()+0x4>)
 80003f6:	4770      	bx	lr
 80003f8:	08006b2e 	.word	0x08006b2e

080003fc <AKROS_bridge::motor_cmd_single::getMD5()>:
 80003fc:	4800      	ldr	r0, [pc, #0]	; (8000400 <AKROS_bridge::motor_cmd_single::getMD5()+0x4>)
 80003fe:	4770      	bx	lr
 8000400:	08006b0d 	.word	0x08006b0d

08000404 <AKROS_bridge::motor_reply_single::serialize(unsigned char*) const>:
 8000404:	7903      	ldrb	r3, [r0, #4]
 8000406:	700b      	strb	r3, [r1, #0]
 8000408:	6883      	ldr	r3, [r0, #8]
 800040a:	704b      	strb	r3, [r1, #1]
 800040c:	0a1a      	lsrs	r2, r3, #8
 800040e:	708a      	strb	r2, [r1, #2]
 8000410:	0c1a      	lsrs	r2, r3, #16
 8000412:	0e1b      	lsrs	r3, r3, #24
 8000414:	70ca      	strb	r2, [r1, #3]
 8000416:	710b      	strb	r3, [r1, #4]
 8000418:	68c3      	ldr	r3, [r0, #12]
 800041a:	714b      	strb	r3, [r1, #5]
 800041c:	0a1a      	lsrs	r2, r3, #8
 800041e:	718a      	strb	r2, [r1, #6]
 8000420:	0c1a      	lsrs	r2, r3, #16
 8000422:	0e1b      	lsrs	r3, r3, #24
 8000424:	71ca      	strb	r2, [r1, #7]
 8000426:	720b      	strb	r3, [r1, #8]
 8000428:	6903      	ldr	r3, [r0, #16]
 800042a:	724b      	strb	r3, [r1, #9]
 800042c:	0a1a      	lsrs	r2, r3, #8
 800042e:	728a      	strb	r2, [r1, #10]
 8000430:	0c1a      	lsrs	r2, r3, #16
 8000432:	0e1b      	lsrs	r3, r3, #24
 8000434:	72ca      	strb	r2, [r1, #11]
 8000436:	730b      	strb	r3, [r1, #12]
 8000438:	200d      	movs	r0, #13
 800043a:	4770      	bx	lr

0800043c <AKROS_bridge::motor_reply_single::deserialize(unsigned char*)>:
 800043c:	780b      	ldrb	r3, [r1, #0]
 800043e:	7103      	strb	r3, [r0, #4]
 8000440:	f8d1 3001 	ldr.w	r3, [r1, #1]
 8000444:	6083      	str	r3, [r0, #8]
 8000446:	f8d1 3005 	ldr.w	r3, [r1, #5]
 800044a:	60c3      	str	r3, [r0, #12]
 800044c:	f8d1 3009 	ldr.w	r3, [r1, #9]
 8000450:	6103      	str	r3, [r0, #16]
 8000452:	200d      	movs	r0, #13
 8000454:	4770      	bx	lr
	...

08000458 <AKROS_bridge::motor_reply_single::getType()>:
 8000458:	4800      	ldr	r0, [pc, #0]	; (800045c <AKROS_bridge::motor_reply_single::getType()+0x4>)
 800045a:	4770      	bx	lr
 800045c:	08006b6d 	.word	0x08006b6d

08000460 <AKROS_bridge::motor_reply_single::getMD5()>:
 8000460:	4800      	ldr	r0, [pc, #0]	; (8000464 <AKROS_bridge::motor_reply_single::getMD5()+0x4>)
 8000462:	4770      	bx	lr
 8000464:	08006b4c 	.word	0x08006b4c

08000468 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8000468:	6803      	ldr	r3, [r0, #0]
 800046a:	4718      	bx	r3

0800046c <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 800046c:	b108      	cbz	r0, 8000472 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 800046e:	680b      	ldr	r3, [r1, #0]
 8000470:	6003      	str	r3, [r0, #0]
 8000472:	4770      	bx	lr

08000474 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8000474:	4770      	bx	lr

08000476 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getEndpointType()>:
 8000476:	2003      	movs	r0, #3
 8000478:	4770      	bx	lr
	...

0800047c <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()>:
 800047c:	4800      	ldr	r0, [pc, #0]	; (8000480 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()+0x4>)
 800047e:	4770      	bx	lr
 8000480:	08006d01 	.word	0x08006d01

08000484 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()>:
 8000484:	4800      	ldr	r0, [pc, #0]	; (8000488 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()+0x4>)
 8000486:	4770      	bx	lr
 8000488:	08006ce0 	.word	0x08006ce0

0800048c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getEndpointType()>:
 800048c:	2003      	movs	r0, #3
 800048e:	4770      	bx	lr

08000490 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()>:
 8000490:	4800      	ldr	r0, [pc, #0]	; (8000494 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()+0x4>)
 8000492:	4770      	bx	lr
 8000494:	08006bae 	.word	0x08006bae

08000498 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()>:
 8000498:	4800      	ldr	r0, [pc, #0]	; (800049c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()+0x4>)
 800049a:	4770      	bx	lr
 800049c:	08006ce0 	.word	0x08006ce0

080004a0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::callback(unsigned char*)>:
 80004a0:	b570      	push	{r4, r5, r6, lr}
 80004a2:	4605      	mov	r5, r0
 80004a4:	f100 040c 	add.w	r4, r0, #12
 80004a8:	4620      	mov	r0, r4
 80004aa:	f7ff ff8f 	bl	80003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>
 80004ae:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80004b0:	4620      	mov	r0, r4
 80004b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004b6:	4718      	bx	r3

080004b8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getEndpointType()>:
 80004b8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80004ba:	4770      	bx	lr

080004bc <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()>:
 80004bc:	4800      	ldr	r0, [pc, #0]	; (80004c0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()+0x4>)
 80004be:	4770      	bx	lr
 80004c0:	08006b2e 	.word	0x08006b2e

080004c4 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()>:
 80004c4:	4800      	ldr	r0, [pc, #0]	; (80004c8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()+0x4>)
 80004c6:	4770      	bx	lr
 80004c8:	08006b0d 	.word	0x08006b0d

080004cc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80004cc:	f890 0578 	ldrb.w	r0, [r0, #1400]	; 0x578
 80004d0:	4770      	bx	lr
	...

080004d4 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 80004d4:	2101      	movs	r1, #1
 80004d6:	4801      	ldr	r0, [pc, #4]	; (80004dc <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 80004d8:	f001 b912 	b.w	8001700 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>
 80004dc:	20000244 	.word	0x20000244

080004e0 <ros::Publisher::publish(ros::Msg const*)>:
 80004e0:	68c3      	ldr	r3, [r0, #12]
 80004e2:	681a      	ldr	r2, [r3, #0]
 80004e4:	b410      	push	{r4}
 80004e6:	6814      	ldr	r4, [r2, #0]
 80004e8:	460a      	mov	r2, r1
 80004ea:	6881      	ldr	r1, [r0, #8]
 80004ec:	4618      	mov	r0, r3
 80004ee:	4623      	mov	r3, r4
 80004f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80004f4:	4718      	bx	r3

080004f6 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::callback(unsigned char*)>:
 80004f6:	b538      	push	{r3, r4, r5, lr}
 80004f8:	f100 0510 	add.w	r5, r0, #16
 80004fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80004fe:	4604      	mov	r4, r0
 8000500:	4629      	mov	r1, r5
 8000502:	300c      	adds	r0, #12
 8000504:	4798      	blx	r3
 8000506:	4629      	mov	r1, r5
 8000508:	f104 0014 	add.w	r0, r4, #20
 800050c:	f7ff ffe8 	bl	80004e0 <ros::Publisher::publish(ros::Msg const*)>
 8000510:	bd38      	pop	{r3, r4, r5, pc}

08000512 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::callback(unsigned char*)>:
 8000512:	b538      	push	{r3, r4, r5, lr}
 8000514:	f100 0510 	add.w	r5, r0, #16
 8000518:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800051a:	4604      	mov	r4, r0
 800051c:	4629      	mov	r1, r5
 800051e:	300c      	adds	r0, #12
 8000520:	4798      	blx	r3
 8000522:	4629      	mov	r1, r5
 8000524:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8000528:	f7ff ffda 	bl	80004e0 <ros::Publisher::publish(ros::Msg const*)>
 800052c:	bd38      	pop	{r3, r4, r5, pc}

0800052e <mbed::CANMessage::CANMessage()>:
 800052e:	b510      	push	{r4, lr}
 8000530:	2210      	movs	r2, #16
 8000532:	4604      	mov	r4, r0
 8000534:	2100      	movs	r1, #0
 8000536:	f005 fd20 	bl	8005f7a <memset>
 800053a:	2308      	movs	r3, #8
 800053c:	7323      	strb	r3, [r4, #12]
 800053e:	2300      	movs	r3, #0
 8000540:	6063      	str	r3, [r4, #4]
 8000542:	60a3      	str	r3, [r4, #8]
 8000544:	4620      	mov	r0, r4
 8000546:	bd10      	pop	{r4, pc}

08000548 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)>:
 8000548:	b530      	push	{r4, r5, lr}
 800054a:	b087      	sub	sp, #28
 800054c:	4604      	mov	r4, r0
 800054e:	ad02      	add	r5, sp, #8
 8000550:	4628      	mov	r0, r5
 8000552:	f7ff ffec 	bl	800052e <mbed::CANMessage::CANMessage()>
 8000556:	7923      	ldrb	r3, [r4, #4]
 8000558:	68e2      	ldr	r2, [r4, #12]
 800055a:	68a1      	ldr	r1, [r4, #8]
 800055c:	3301      	adds	r3, #1
 800055e:	9302      	str	r3, [sp, #8]
 8000560:	69a3      	ldr	r3, [r4, #24]
 8000562:	9301      	str	r3, [sp, #4]
 8000564:	6963      	ldr	r3, [r4, #20]
 8000566:	9300      	str	r3, [sp, #0]
 8000568:	4628      	mov	r0, r5
 800056a:	6923      	ldr	r3, [r4, #16]
 800056c:	f001 f8f0 	bl	8001750 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>
 8000570:	9b05      	ldr	r3, [sp, #20]
 8000572:	9300      	str	r3, [sp, #0]
 8000574:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8000578:	4802      	ldr	r0, [pc, #8]	; (8000584 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)+0x3c>)
 800057a:	f004 fda6 	bl	80050ca <mbed::CAN::write(mbed::CANMessage)>
 800057e:	b007      	add	sp, #28
 8000580:	bd30      	pop	{r4, r5, pc}
 8000582:	bf00      	nop
 8000584:	20000244 	.word	0x20000244

08000588 <CAN_Cb()>:
 8000588:	b510      	push	{r4, lr}
 800058a:	b08c      	sub	sp, #48	; 0x30
 800058c:	ac08      	add	r4, sp, #32
 800058e:	4620      	mov	r0, r4
 8000590:	f7ff ffcd 	bl	800052e <mbed::CANMessage::CANMessage()>
 8000594:	2200      	movs	r2, #0
 8000596:	4621      	mov	r1, r4
 8000598:	4811      	ldr	r0, [pc, #68]	; (80005e0 <CAN_Cb()+0x58>)
 800059a:	f004 fdb5 	bl	8005108 <mbed::CAN::read(mbed::CANMessage&, int)>
 800059e:	b1e0      	cbz	r0, 80005da <CAN_Cb()+0x52>
 80005a0:	9b08      	ldr	r3, [sp, #32]
 80005a2:	b9d3      	cbnz	r3, 80005da <CAN_Cb()+0x52>
 80005a4:	ab07      	add	r3, sp, #28
 80005a6:	9303      	str	r3, [sp, #12]
 80005a8:	ab06      	add	r3, sp, #24
 80005aa:	9302      	str	r3, [sp, #8]
 80005ac:	ab05      	add	r3, sp, #20
 80005ae:	9301      	str	r3, [sp, #4]
 80005b0:	f10d 0313 	add.w	r3, sp, #19
 80005b4:	9300      	str	r3, [sp, #0]
 80005b6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80005ba:	f001 f943 	bl	8001844 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 80005be:	f89d 3013 	ldrb.w	r3, [sp, #19]
 80005c2:	4908      	ldr	r1, [pc, #32]	; (80005e4 <CAN_Cb()+0x5c>)
 80005c4:	4808      	ldr	r0, [pc, #32]	; (80005e8 <CAN_Cb()+0x60>)
 80005c6:	3b01      	subs	r3, #1
 80005c8:	710b      	strb	r3, [r1, #4]
 80005ca:	9b05      	ldr	r3, [sp, #20]
 80005cc:	608b      	str	r3, [r1, #8]
 80005ce:	9b06      	ldr	r3, [sp, #24]
 80005d0:	60cb      	str	r3, [r1, #12]
 80005d2:	9b07      	ldr	r3, [sp, #28]
 80005d4:	610b      	str	r3, [r1, #16]
 80005d6:	f7ff ff83 	bl	80004e0 <ros::Publisher::publish(ros::Msg const*)>
 80005da:	b00c      	add	sp, #48	; 0x30
 80005dc:	bd10      	pop	{r4, pc}
 80005de:	bf00      	nop
 80005e0:	20000244 	.word	0x20000244
 80005e4:	200003b8 	.word	0x200003b8
 80005e8:	200003cc 	.word	0x200003cc

080005ec <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)>:
 80005ec:	b530      	push	{r4, r5, lr}
 80005ee:	b08d      	sub	sp, #52	; 0x34
 80005f0:	ac08      	add	r4, sp, #32
 80005f2:	4620      	mov	r0, r4
 80005f4:	460d      	mov	r5, r1
 80005f6:	f7ff ff9a 	bl	800052e <mbed::CANMessage::CANMessage()>
 80005fa:	2101      	movs	r1, #1
 80005fc:	4815      	ldr	r0, [pc, #84]	; (8000654 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x68>)
 80005fe:	f001 f858 	bl	80016b2 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>
 8000602:	200a      	movs	r0, #10
 8000604:	f004 fe84 	bl	8005310 <wait_ms>
 8000608:	2200      	movs	r2, #0
 800060a:	4621      	mov	r1, r4
 800060c:	4811      	ldr	r0, [pc, #68]	; (8000654 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x68>)
 800060e:	f004 fd7b 	bl	8005108 <mbed::CAN::read(mbed::CANMessage&, int)>
 8000612:	b1e8      	cbz	r0, 8000650 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 8000614:	9b08      	ldr	r3, [sp, #32]
 8000616:	b9db      	cbnz	r3, 8000650 <exit_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 8000618:	ab07      	add	r3, sp, #28
 800061a:	9303      	str	r3, [sp, #12]
 800061c:	ab06      	add	r3, sp, #24
 800061e:	9302      	str	r3, [sp, #8]
 8000620:	ab05      	add	r3, sp, #20
 8000622:	9301      	str	r3, [sp, #4]
 8000624:	f10d 0313 	add.w	r3, sp, #19
 8000628:	9300      	str	r3, [sp, #0]
 800062a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800062e:	f001 f909 	bl	8001844 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 8000632:	9805      	ldr	r0, [sp, #20]
 8000634:	f005 fa0a 	bl	8005a4c <__aeabi_f2d>
 8000638:	e9c5 0102 	strd	r0, r1, [r5, #8]
 800063c:	9806      	ldr	r0, [sp, #24]
 800063e:	f005 fa05 	bl	8005a4c <__aeabi_f2d>
 8000642:	e9c5 0104 	strd	r0, r1, [r5, #16]
 8000646:	9807      	ldr	r0, [sp, #28]
 8000648:	f005 fa00 	bl	8005a4c <__aeabi_f2d>
 800064c:	e9c5 0106 	strd	r0, r1, [r5, #24]
 8000650:	b00d      	add	sp, #52	; 0x34
 8000652:	bd30      	pop	{r4, r5, pc}
 8000654:	20000244 	.word	0x20000244

08000658 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)>:
 8000658:	b570      	push	{r4, r5, r6, lr}
 800065a:	b090      	sub	sp, #64	; 0x40
 800065c:	ac08      	add	r4, sp, #32
 800065e:	4620      	mov	r0, r4
 8000660:	460e      	mov	r6, r1
 8000662:	f7ff ff64 	bl	800052e <mbed::CANMessage::CANMessage()>
 8000666:	2101      	movs	r1, #1
 8000668:	481c      	ldr	r0, [pc, #112]	; (80006dc <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 800066a:	f000 fffb 	bl	8001664 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>
 800066e:	200a      	movs	r0, #10
 8000670:	f004 fe4e 	bl	8005310 <wait_ms>
 8000674:	2200      	movs	r2, #0
 8000676:	4621      	mov	r1, r4
 8000678:	4818      	ldr	r0, [pc, #96]	; (80006dc <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 800067a:	f004 fd45 	bl	8005108 <mbed::CAN::read(mbed::CANMessage&, int)>
 800067e:	ad0c      	add	r5, sp, #48	; 0x30
 8000680:	b1e0      	cbz	r0, 80006bc <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 8000682:	9b08      	ldr	r3, [sp, #32]
 8000684:	b9d3      	cbnz	r3, 80006bc <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 8000686:	ab07      	add	r3, sp, #28
 8000688:	9302      	str	r3, [sp, #8]
 800068a:	ab06      	add	r3, sp, #24
 800068c:	9301      	str	r3, [sp, #4]
 800068e:	f10d 0317 	add.w	r3, sp, #23
 8000692:	9503      	str	r5, [sp, #12]
 8000694:	9300      	str	r3, [sp, #0]
 8000696:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800069a:	f001 f8d3 	bl	8001844 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 800069e:	9806      	ldr	r0, [sp, #24]
 80006a0:	f005 f9d4 	bl	8005a4c <__aeabi_f2d>
 80006a4:	e9c6 0102 	strd	r0, r1, [r6, #8]
 80006a8:	9807      	ldr	r0, [sp, #28]
 80006aa:	f005 f9cf 	bl	8005a4c <__aeabi_f2d>
 80006ae:	e9c6 0104 	strd	r0, r1, [r6, #16]
 80006b2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80006b4:	f005 f9ca 	bl	8005a4c <__aeabi_f2d>
 80006b8:	e9c6 0106 	strd	r0, r1, [r6, #24]
 80006bc:	4b08      	ldr	r3, [pc, #32]	; (80006e0 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x88>)
 80006be:	930c      	str	r3, [sp, #48]	; 0x30
 80006c0:	2200      	movs	r2, #0
 80006c2:	4b08      	ldr	r3, [pc, #32]	; (80006e4 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x8c>)
 80006c4:	4805      	ldr	r0, [pc, #20]	; (80006dc <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 80006c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80006c8:	4629      	mov	r1, r5
 80006ca:	f004 fd9d 	bl	8005208 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>
 80006ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80006d0:	b113      	cbz	r3, 80006d8 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x80>
 80006d2:	689b      	ldr	r3, [r3, #8]
 80006d4:	4628      	mov	r0, r5
 80006d6:	4798      	blx	r3
 80006d8:	b010      	add	sp, #64	; 0x40
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	20000244 	.word	0x20000244
 80006e0:	08000589 	.word	0x08000589
 80006e4:	08006ab4 	.word	0x08006ab4

080006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80006e8:	3801      	subs	r0, #1
 80006ea:	2300      	movs	r3, #0
 80006ec:	fa21 f203 	lsr.w	r2, r1, r3
 80006f0:	3308      	adds	r3, #8
 80006f2:	2b20      	cmp	r3, #32
 80006f4:	f800 2f01 	strb.w	r2, [r0, #1]!
 80006f8:	d1f8      	bne.n	80006ec <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 80006fa:	4770      	bx	lr

080006fc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80006fc:	6843      	ldr	r3, [r0, #4]
 80006fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000702:	700b      	strb	r3, [r1, #0]
 8000704:	6843      	ldr	r3, [r0, #4]
 8000706:	0a1b      	lsrs	r3, r3, #8
 8000708:	704b      	strb	r3, [r1, #1]
 800070a:	88c3      	ldrh	r3, [r0, #6]
 800070c:	708b      	strb	r3, [r1, #2]
 800070e:	79c3      	ldrb	r3, [r0, #7]
 8000710:	70cb      	strb	r3, [r1, #3]
 8000712:	460d      	mov	r5, r1
 8000714:	1d0a      	adds	r2, r1, #4
 8000716:	4604      	mov	r4, r0
 8000718:	2100      	movs	r1, #0
 800071a:	6860      	ldr	r0, [r4, #4]
 800071c:	4281      	cmp	r1, r0
 800071e:	eba2 0305 	sub.w	r3, r2, r5
 8000722:	f102 0204 	add.w	r2, r2, #4
 8000726:	d20f      	bcs.n	8000748 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000728:	68e3      	ldr	r3, [r4, #12]
 800072a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800072e:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000732:	0a18      	lsrs	r0, r3, #8
 8000734:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000738:	0c18      	lsrs	r0, r3, #16
 800073a:	0e1b      	lsrs	r3, r3, #24
 800073c:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000740:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000744:	3101      	adds	r1, #1
 8000746:	e7e8      	b.n	800071a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000748:	6922      	ldr	r2, [r4, #16]
 800074a:	54ea      	strb	r2, [r5, r3]
 800074c:	6921      	ldr	r1, [r4, #16]
 800074e:	18ea      	adds	r2, r5, r3
 8000750:	0a09      	lsrs	r1, r1, #8
 8000752:	7051      	strb	r1, [r2, #1]
 8000754:	8a61      	ldrh	r1, [r4, #18]
 8000756:	7091      	strb	r1, [r2, #2]
 8000758:	7ce1      	ldrb	r1, [r4, #19]
 800075a:	70d1      	strb	r1, [r2, #3]
 800075c:	3304      	adds	r3, #4
 800075e:	442b      	add	r3, r5
 8000760:	2100      	movs	r1, #0
 8000762:	6922      	ldr	r2, [r4, #16]
 8000764:	4291      	cmp	r1, r2
 8000766:	eba3 0605 	sub.w	r6, r3, r5
 800076a:	f103 0304 	add.w	r3, r3, #4
 800076e:	d20f      	bcs.n	8000790 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000770:	69a2      	ldr	r2, [r4, #24]
 8000772:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000776:	f803 2c04 	strb.w	r2, [r3, #-4]
 800077a:	0a10      	lsrs	r0, r2, #8
 800077c:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000780:	0c10      	lsrs	r0, r2, #16
 8000782:	0e12      	lsrs	r2, r2, #24
 8000784:	f803 0c02 	strb.w	r0, [r3, #-2]
 8000788:	f803 2c01 	strb.w	r2, [r3, #-1]
 800078c:	3101      	adds	r1, #1
 800078e:	e7e8      	b.n	8000762 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000790:	69e3      	ldr	r3, [r4, #28]
 8000792:	55ab      	strb	r3, [r5, r6]
 8000794:	69e2      	ldr	r2, [r4, #28]
 8000796:	19ab      	adds	r3, r5, r6
 8000798:	0a12      	lsrs	r2, r2, #8
 800079a:	705a      	strb	r2, [r3, #1]
 800079c:	8be2      	ldrh	r2, [r4, #30]
 800079e:	709a      	strb	r2, [r3, #2]
 80007a0:	7fe2      	ldrb	r2, [r4, #31]
 80007a2:	70da      	strb	r2, [r3, #3]
 80007a4:	3604      	adds	r6, #4
 80007a6:	2700      	movs	r7, #0
 80007a8:	69e3      	ldr	r3, [r4, #28]
 80007aa:	429f      	cmp	r7, r3
 80007ac:	d214      	bcs.n	80007d8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80007ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007b0:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80007b4:	f005 fead 	bl	8006512 <strlen>
 80007b8:	4680      	mov	r8, r0
 80007ba:	4601      	mov	r1, r0
 80007bc:	19a8      	adds	r0, r5, r6
 80007be:	f7ff ff93 	bl	80006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007c4:	3604      	adds	r6, #4
 80007c6:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80007ca:	19a8      	adds	r0, r5, r6
 80007cc:	4642      	mov	r2, r8
 80007ce:	f005 fbaf 	bl	8005f30 <memcpy>
 80007d2:	4446      	add	r6, r8
 80007d4:	3701      	adds	r7, #1
 80007d6:	e7e7      	b.n	80007a8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80007d8:	4630      	mov	r0, r6
 80007da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007de <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80007de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007e0:	460e      	mov	r6, r1
 80007e2:	7903      	ldrb	r3, [r0, #4]
 80007e4:	f806 3b01 	strb.w	r3, [r6], #1
 80007e8:	4605      	mov	r5, r0
 80007ea:	6880      	ldr	r0, [r0, #8]
 80007ec:	460f      	mov	r7, r1
 80007ee:	f005 fe90 	bl	8006512 <strlen>
 80007f2:	4604      	mov	r4, r0
 80007f4:	4601      	mov	r1, r0
 80007f6:	4630      	mov	r0, r6
 80007f8:	f7ff ff76 	bl	80006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007fc:	4622      	mov	r2, r4
 80007fe:	68a9      	ldr	r1, [r5, #8]
 8000800:	1d78      	adds	r0, r7, #5
 8000802:	f005 fb95 	bl	8005f30 <memcpy>
 8000806:	1d60      	adds	r0, r4, #5
 8000808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800080a <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800080a:	8883      	ldrh	r3, [r0, #4]
 800080c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000810:	700b      	strb	r3, [r1, #0]
 8000812:	8883      	ldrh	r3, [r0, #4]
 8000814:	0a1b      	lsrs	r3, r3, #8
 8000816:	704b      	strb	r3, [r1, #1]
 8000818:	4605      	mov	r5, r0
 800081a:	6880      	ldr	r0, [r0, #8]
 800081c:	460c      	mov	r4, r1
 800081e:	f005 fe78 	bl	8006512 <strlen>
 8000822:	4607      	mov	r7, r0
 8000824:	4601      	mov	r1, r0
 8000826:	1ca0      	adds	r0, r4, #2
 8000828:	f7ff ff5e 	bl	80006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800082c:	463a      	mov	r2, r7
 800082e:	68a9      	ldr	r1, [r5, #8]
 8000830:	1da0      	adds	r0, r4, #6
 8000832:	f005 fb7d 	bl	8005f30 <memcpy>
 8000836:	68e8      	ldr	r0, [r5, #12]
 8000838:	f005 fe6b 	bl	8006512 <strlen>
 800083c:	f107 0806 	add.w	r8, r7, #6
 8000840:	4606      	mov	r6, r0
 8000842:	4601      	mov	r1, r0
 8000844:	370a      	adds	r7, #10
 8000846:	eb04 0008 	add.w	r0, r4, r8
 800084a:	f7ff ff4d 	bl	80006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800084e:	4632      	mov	r2, r6
 8000850:	68e9      	ldr	r1, [r5, #12]
 8000852:	19e0      	adds	r0, r4, r7
 8000854:	f005 fb6c 	bl	8005f30 <memcpy>
 8000858:	6928      	ldr	r0, [r5, #16]
 800085a:	f005 fe5a 	bl	8006512 <strlen>
 800085e:	443e      	add	r6, r7
 8000860:	4601      	mov	r1, r0
 8000862:	4607      	mov	r7, r0
 8000864:	19a0      	adds	r0, r4, r6
 8000866:	3604      	adds	r6, #4
 8000868:	f7ff ff3e 	bl	80006e8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800086c:	463a      	mov	r2, r7
 800086e:	19a0      	adds	r0, r4, r6
 8000870:	6929      	ldr	r1, [r5, #16]
 8000872:	443e      	add	r6, r7
 8000874:	f005 fb5c 	bl	8005f30 <memcpy>
 8000878:	696b      	ldr	r3, [r5, #20]
 800087a:	55a3      	strb	r3, [r4, r6]
 800087c:	4434      	add	r4, r6
 800087e:	0a1a      	lsrs	r2, r3, #8
 8000880:	7062      	strb	r2, [r4, #1]
 8000882:	0c1a      	lsrs	r2, r3, #16
 8000884:	0e1b      	lsrs	r3, r3, #24
 8000886:	70a2      	strb	r2, [r4, #2]
 8000888:	70e3      	strb	r3, [r4, #3]
 800088a:	1d30      	adds	r0, r6, #4
 800088c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000890:	b510      	push	{r4, lr}
 8000892:	2300      	movs	r3, #0
 8000894:	6003      	str	r3, [r0, #0]
 8000896:	3901      	subs	r1, #1
 8000898:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800089c:	fa02 f403 	lsl.w	r4, r2, r3
 80008a0:	6802      	ldr	r2, [r0, #0]
 80008a2:	3308      	adds	r3, #8
 80008a4:	4322      	orrs	r2, r4
 80008a6:	2b20      	cmp	r3, #32
 80008a8:	6002      	str	r2, [r0, #0]
 80008aa:	d1f5      	bne.n	8000898 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80008ac:	bd10      	pop	{r4, pc}

080008ae <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80008ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008b0:	460c      	mov	r4, r1
 80008b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80008b6:	7103      	strb	r3, [r0, #4]
 80008b8:	4605      	mov	r5, r0
 80008ba:	a801      	add	r0, sp, #4
 80008bc:	f7ff ffe8 	bl	8000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008c0:	9b01      	ldr	r3, [sp, #4]
 80008c2:	1d62      	adds	r2, r4, #5
 80008c4:	1d58      	adds	r0, r3, #5
 80008c6:	1b11      	subs	r1, r2, r4
 80008c8:	4288      	cmp	r0, r1
 80008ca:	d904      	bls.n	80008d6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80008cc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80008d0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80008d4:	e7f7      	b.n	80008c6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80008d6:	4423      	add	r3, r4
 80008d8:	2200      	movs	r2, #0
 80008da:	3404      	adds	r4, #4
 80008dc:	711a      	strb	r2, [r3, #4]
 80008de:	60ac      	str	r4, [r5, #8]
 80008e0:	b003      	add	sp, #12
 80008e2:	bd30      	pop	{r4, r5, pc}

080008e4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 80008e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008e6:	780b      	ldrb	r3, [r1, #0]
 80008e8:	8083      	strh	r3, [r0, #4]
 80008ea:	784a      	ldrb	r2, [r1, #1]
 80008ec:	b085      	sub	sp, #20
 80008ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80008f2:	8083      	strh	r3, [r0, #4]
 80008f4:	460c      	mov	r4, r1
 80008f6:	4606      	mov	r6, r0
 80008f8:	3102      	adds	r1, #2
 80008fa:	a801      	add	r0, sp, #4
 80008fc:	f7ff ffc8 	bl	8000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000900:	9f01      	ldr	r7, [sp, #4]
 8000902:	1da3      	adds	r3, r4, #6
 8000904:	1dbd      	adds	r5, r7, #6
 8000906:	1b1a      	subs	r2, r3, r4
 8000908:	4295      	cmp	r5, r2
 800090a:	d904      	bls.n	8000916 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800090c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000910:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000914:	e7f7      	b.n	8000906 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000916:	19e3      	adds	r3, r4, r7
 8000918:	2200      	movs	r2, #0
 800091a:	715a      	strb	r2, [r3, #5]
 800091c:	1d63      	adds	r3, r4, #5
 800091e:	60b3      	str	r3, [r6, #8]
 8000920:	1961      	adds	r1, r4, r5
 8000922:	a802      	add	r0, sp, #8
 8000924:	f7ff ffb4 	bl	8000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000928:	1d2b      	adds	r3, r5, #4
 800092a:	9d02      	ldr	r5, [sp, #8]
 800092c:	f107 020a 	add.w	r2, r7, #10
 8000930:	441d      	add	r5, r3
 8000932:	4422      	add	r2, r4
 8000934:	1b11      	subs	r1, r2, r4
 8000936:	428d      	cmp	r5, r1
 8000938:	d904      	bls.n	8000944 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800093a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800093e:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000942:	e7f7      	b.n	8000934 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000944:	1961      	adds	r1, r4, r5
 8000946:	3b01      	subs	r3, #1
 8000948:	4423      	add	r3, r4
 800094a:	2200      	movs	r2, #0
 800094c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000950:	a803      	add	r0, sp, #12
 8000952:	60f3      	str	r3, [r6, #12]
 8000954:	f7ff ff9c 	bl	8000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000958:	9803      	ldr	r0, [sp, #12]
 800095a:	3504      	adds	r5, #4
 800095c:	4428      	add	r0, r5
 800095e:	1963      	adds	r3, r4, r5
 8000960:	1b1a      	subs	r2, r3, r4
 8000962:	4290      	cmp	r0, r2
 8000964:	d904      	bls.n	8000970 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000966:	f813 2b01 	ldrb.w	r2, [r3], #1
 800096a:	f803 2c02 	strb.w	r2, [r3, #-2]
 800096e:	e7f7      	b.n	8000960 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000970:	1822      	adds	r2, r4, r0
 8000972:	3d01      	subs	r5, #1
 8000974:	2300      	movs	r3, #0
 8000976:	4425      	add	r5, r4
 8000978:	f802 3c01 	strb.w	r3, [r2, #-1]
 800097c:	6135      	str	r5, [r6, #16]
 800097e:	7893      	ldrb	r3, [r2, #2]
 8000980:	7851      	ldrb	r1, [r2, #1]
 8000982:	78d2      	ldrb	r2, [r2, #3]
 8000984:	041b      	lsls	r3, r3, #16
 8000986:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800098a:	5c21      	ldrb	r1, [r4, r0]
 800098c:	430b      	orrs	r3, r1
 800098e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000992:	3004      	adds	r0, #4
 8000994:	6173      	str	r3, [r6, #20]
 8000996:	b005      	add	sp, #20
 8000998:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800099a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 800099a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800099e:	6843      	ldr	r3, [r0, #4]
 80009a0:	680d      	ldr	r5, [r1, #0]
 80009a2:	429d      	cmp	r5, r3
 80009a4:	4604      	mov	r4, r0
 80009a6:	460e      	mov	r6, r1
 80009a8:	d904      	bls.n	80009b4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80009aa:	00a9      	lsls	r1, r5, #2
 80009ac:	68c0      	ldr	r0, [r0, #12]
 80009ae:	f005 fd55 	bl	800645c <realloc>
 80009b2:	60e0      	str	r0, [r4, #12]
 80009b4:	6065      	str	r5, [r4, #4]
 80009b6:	1d32      	adds	r2, r6, #4
 80009b8:	2100      	movs	r1, #0
 80009ba:	6860      	ldr	r0, [r4, #4]
 80009bc:	4281      	cmp	r1, r0
 80009be:	eba2 0306 	sub.w	r3, r2, r6
 80009c2:	f102 0204 	add.w	r2, r2, #4
 80009c6:	d213      	bcs.n	80009f0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80009c8:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80009cc:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80009d0:	041b      	lsls	r3, r3, #16
 80009d2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80009d6:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80009da:	4303      	orrs	r3, r0
 80009dc:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80009e0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80009e4:	68e0      	ldr	r0, [r4, #12]
 80009e6:	60a3      	str	r3, [r4, #8]
 80009e8:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 80009ec:	3101      	adds	r1, #1
 80009ee:	e7e4      	b.n	80009ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 80009f0:	18f2      	adds	r2, r6, r3
 80009f2:	5cf1      	ldrb	r1, [r6, r3]
 80009f4:	7895      	ldrb	r5, [r2, #2]
 80009f6:	7850      	ldrb	r0, [r2, #1]
 80009f8:	78d2      	ldrb	r2, [r2, #3]
 80009fa:	042d      	lsls	r5, r5, #16
 80009fc:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000a00:	430d      	orrs	r5, r1
 8000a02:	1d1f      	adds	r7, r3, #4
 8000a04:	6923      	ldr	r3, [r4, #16]
 8000a06:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000a0a:	429d      	cmp	r5, r3
 8000a0c:	d904      	bls.n	8000a18 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000a0e:	00a9      	lsls	r1, r5, #2
 8000a10:	69a0      	ldr	r0, [r4, #24]
 8000a12:	f005 fd23 	bl	800645c <realloc>
 8000a16:	61a0      	str	r0, [r4, #24]
 8000a18:	6125      	str	r5, [r4, #16]
 8000a1a:	19f3      	adds	r3, r6, r7
 8000a1c:	2100      	movs	r1, #0
 8000a1e:	6922      	ldr	r2, [r4, #16]
 8000a20:	4291      	cmp	r1, r2
 8000a22:	eba3 0506 	sub.w	r5, r3, r6
 8000a26:	f103 0304 	add.w	r3, r3, #4
 8000a2a:	d213      	bcs.n	8000a54 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000a2c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000a30:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000a34:	0412      	lsls	r2, r2, #16
 8000a36:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000a3a:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000a3e:	4302      	orrs	r2, r0
 8000a40:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000a44:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000a48:	69a0      	ldr	r0, [r4, #24]
 8000a4a:	6162      	str	r2, [r4, #20]
 8000a4c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000a50:	3101      	adds	r1, #1
 8000a52:	e7e4      	b.n	8000a1e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000a54:	1973      	adds	r3, r6, r5
 8000a56:	5d72      	ldrb	r2, [r6, r5]
 8000a58:	789f      	ldrb	r7, [r3, #2]
 8000a5a:	7859      	ldrb	r1, [r3, #1]
 8000a5c:	78db      	ldrb	r3, [r3, #3]
 8000a5e:	043f      	lsls	r7, r7, #16
 8000a60:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000a64:	4317      	orrs	r7, r2
 8000a66:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000a6a:	69e3      	ldr	r3, [r4, #28]
 8000a6c:	429f      	cmp	r7, r3
 8000a6e:	f105 0504 	add.w	r5, r5, #4
 8000a72:	d904      	bls.n	8000a7e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000a74:	00b9      	lsls	r1, r7, #2
 8000a76:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a78:	f005 fcf0 	bl	800645c <realloc>
 8000a7c:	6260      	str	r0, [r4, #36]	; 0x24
 8000a7e:	61e7      	str	r7, [r4, #28]
 8000a80:	2700      	movs	r7, #0
 8000a82:	46b8      	mov	r8, r7
 8000a84:	69e3      	ldr	r3, [r4, #28]
 8000a86:	429f      	cmp	r7, r3
 8000a88:	d21a      	bcs.n	8000ac0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000a8a:	1971      	adds	r1, r6, r5
 8000a8c:	a801      	add	r0, sp, #4
 8000a8e:	f7ff feff 	bl	8000890 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000a92:	1d2b      	adds	r3, r5, #4
 8000a94:	9d01      	ldr	r5, [sp, #4]
 8000a96:	18f2      	adds	r2, r6, r3
 8000a98:	441d      	add	r5, r3
 8000a9a:	1b91      	subs	r1, r2, r6
 8000a9c:	42a9      	cmp	r1, r5
 8000a9e:	d204      	bcs.n	8000aaa <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000aa0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000aa4:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000aa8:	e7f7      	b.n	8000a9a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000aaa:	1972      	adds	r2, r6, r5
 8000aac:	3b01      	subs	r3, #1
 8000aae:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000ab2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000ab4:	4433      	add	r3, r6
 8000ab6:	6223      	str	r3, [r4, #32]
 8000ab8:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000abc:	3701      	adds	r7, #1
 8000abe:	e7e1      	b.n	8000a84 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000ac0:	4628      	mov	r0, r5
 8000ac2:	b002      	add	sp, #8
 8000ac4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000ac8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>:
 8000ac8:	b510      	push	{r4, lr}
 8000aca:	f200 429c 	addw	r2, r0, #1180	; 0x49c
 8000ace:	2300      	movs	r3, #0
 8000ad0:	f852 4b04 	ldr.w	r4, [r2], #4
 8000ad4:	b944      	cbnz	r4, 8000ae8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x20>
 8000ad6:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8000ada:	337d      	adds	r3, #125	; 0x7d
 8000adc:	f8c2 149c 	str.w	r1, [r2, #1180]	; 0x49c
 8000ae0:	60c8      	str	r0, [r1, #12]
 8000ae2:	608b      	str	r3, [r1, #8]
 8000ae4:	2001      	movs	r0, #1
 8000ae6:	bd10      	pop	{r4, pc}
 8000ae8:	3301      	adds	r3, #1
 8000aea:	2b19      	cmp	r3, #25
 8000aec:	d1f0      	bne.n	8000ad0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x8>
 8000aee:	2000      	movs	r0, #0
 8000af0:	bd10      	pop	{r4, pc}

08000af2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000af2:	b510      	push	{r4, lr}
 8000af4:	f500 62a0 	add.w	r2, r0, #1280	; 0x500
 8000af8:	2300      	movs	r3, #0
 8000afa:	f852 4b04 	ldr.w	r4, [r2], #4
 8000afe:	b93c      	cbnz	r4, 8000b10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000b00:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 8000b04:	3364      	adds	r3, #100	; 0x64
 8000b06:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000b0a:	604b      	str	r3, [r1, #4]
 8000b0c:	2001      	movs	r0, #1
 8000b0e:	bd10      	pop	{r4, pc}
 8000b10:	3301      	adds	r3, #1
 8000b12:	2b19      	cmp	r3, #25
 8000b14:	d1f1      	bne.n	8000afa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000b16:	2000      	movs	r0, #0
 8000b18:	bd10      	pop	{r4, pc}

08000b1a <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>:
 8000b1a:	b570      	push	{r4, r5, r6, lr}
 8000b1c:	460c      	mov	r4, r1
 8000b1e:	3130      	adds	r1, #48	; 0x30
 8000b20:	4606      	mov	r6, r0
 8000b22:	f7ff ffd1 	bl	8000ac8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000b26:	4621      	mov	r1, r4
 8000b28:	4605      	mov	r5, r0
 8000b2a:	4630      	mov	r0, r6
 8000b2c:	f7ff ffe1 	bl	8000af2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000b30:	2d00      	cmp	r5, #0
 8000b32:	bf08      	it	eq
 8000b34:	2000      	moveq	r0, #0
 8000b36:	bd70      	pop	{r4, r5, r6, pc}

08000b38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000b38:	b530      	push	{r4, r5, lr}
 8000b3a:	b085      	sub	sp, #20
 8000b3c:	4604      	mov	r4, r0
 8000b3e:	4b09      	ldr	r3, [pc, #36]	; (8000b64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000b40:	9301      	str	r3, [sp, #4]
 8000b42:	2300      	movs	r3, #0
 8000b44:	9302      	str	r3, [sp, #8]
 8000b46:	9303      	str	r3, [sp, #12]
 8000b48:	f854 3b7c 	ldr.w	r3, [r4], #124
 8000b4c:	aa01      	add	r2, sp, #4
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	210a      	movs	r1, #10
 8000b52:	4605      	mov	r5, r0
 8000b54:	4798      	blx	r3
 8000b56:	4620      	mov	r0, r4
 8000b58:	f004 fa70 	bl	800503c <mbed::Timer::read_ms()>
 8000b5c:	f8c5 008c 	str.w	r0, [r5, #140]	; 0x8c
 8000b60:	b005      	add	sp, #20
 8000b62:	bd30      	pop	{r4, r5, pc}
 8000b64:	08006970 	.word	0x08006970

08000b68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b6c:	b086      	sub	sp, #24
 8000b6e:	4b2b      	ldr	r3, [pc, #172]	; (8000c1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000b70:	9300      	str	r3, [sp, #0]
 8000b72:	2200      	movs	r2, #0
 8000b74:	4b2a      	ldr	r3, [pc, #168]	; (8000c20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000b76:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b7a:	4605      	mov	r5, r0
 8000b7c:	9302      	str	r3, [sp, #8]
 8000b7e:	9303      	str	r3, [sp, #12]
 8000b80:	9304      	str	r3, [sp, #16]
 8000b82:	9205      	str	r2, [sp, #20]
 8000b84:	f200 449c 	addw	r4, r0, #1180	; 0x49c
 8000b88:	f500 66a0 	add.w	r6, r0, #1280	; 0x500
 8000b8c:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b90:	6823      	ldr	r3, [r4, #0]
 8000b92:	b1bb      	cbz	r3, 8000bc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000b94:	6858      	ldr	r0, [r3, #4]
 8000b96:	689a      	ldr	r2, [r3, #8]
 8000b98:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b9c:	681a      	ldr	r2, [r3, #0]
 8000b9e:	6803      	ldr	r3, [r0, #0]
 8000ba0:	9202      	str	r2, [sp, #8]
 8000ba2:	689b      	ldr	r3, [r3, #8]
 8000ba4:	4798      	blx	r3
 8000ba6:	6823      	ldr	r3, [r4, #0]
 8000ba8:	9003      	str	r0, [sp, #12]
 8000baa:	6858      	ldr	r0, [r3, #4]
 8000bac:	6803      	ldr	r3, [r0, #0]
 8000bae:	68db      	ldr	r3, [r3, #12]
 8000bb0:	4798      	blx	r3
 8000bb2:	6821      	ldr	r1, [r4, #0]
 8000bb4:	682b      	ldr	r3, [r5, #0]
 8000bb6:	9004      	str	r0, [sp, #16]
 8000bb8:	9705      	str	r7, [sp, #20]
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	6909      	ldr	r1, [r1, #16]
 8000bbe:	466a      	mov	r2, sp
 8000bc0:	4628      	mov	r0, r5
 8000bc2:	4798      	blx	r3
 8000bc4:	3404      	adds	r4, #4
 8000bc6:	42b4      	cmp	r4, r6
 8000bc8:	d1e2      	bne.n	8000b90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000bca:	f205 5664 	addw	r6, r5, #1380	; 0x564
 8000bce:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000bd2:	6820      	ldr	r0, [r4, #0]
 8000bd4:	b1c8      	cbz	r0, 8000c0a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000bd6:	6843      	ldr	r3, [r0, #4]
 8000bd8:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000bdc:	6883      	ldr	r3, [r0, #8]
 8000bde:	9302      	str	r3, [sp, #8]
 8000be0:	6803      	ldr	r3, [r0, #0]
 8000be2:	689b      	ldr	r3, [r3, #8]
 8000be4:	4798      	blx	r3
 8000be6:	9003      	str	r0, [sp, #12]
 8000be8:	6820      	ldr	r0, [r4, #0]
 8000bea:	6803      	ldr	r3, [r0, #0]
 8000bec:	68db      	ldr	r3, [r3, #12]
 8000bee:	4798      	blx	r3
 8000bf0:	682b      	ldr	r3, [r5, #0]
 8000bf2:	9004      	str	r0, [sp, #16]
 8000bf4:	6820      	ldr	r0, [r4, #0]
 8000bf6:	f8d3 8000 	ldr.w	r8, [r3]
 8000bfa:	6803      	ldr	r3, [r0, #0]
 8000bfc:	9705      	str	r7, [sp, #20]
 8000bfe:	685b      	ldr	r3, [r3, #4]
 8000c00:	4798      	blx	r3
 8000c02:	466a      	mov	r2, sp
 8000c04:	4601      	mov	r1, r0
 8000c06:	4628      	mov	r0, r5
 8000c08:	47c0      	blx	r8
 8000c0a:	3404      	adds	r4, #4
 8000c0c:	42a6      	cmp	r6, r4
 8000c0e:	d1e0      	bne.n	8000bd2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000c10:	2301      	movs	r3, #1
 8000c12:	f885 3578 	strb.w	r3, [r5, #1400]	; 0x578
 8000c16:	b006      	add	sp, #24
 8000c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c1c:	08006988 	.word	0x08006988
 8000c20:	08006d96 	.word	0x08006d96

08000c24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000c24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c26:	b085      	sub	sp, #20
 8000c28:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8000c2c:	4b1e      	ldr	r3, [pc, #120]	; (8000ca8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
 8000c2e:	9301      	str	r3, [sp, #4]
 8000c30:	4604      	mov	r4, r0
 8000c32:	2300      	movs	r3, #0
 8000c34:	4628      	mov	r0, r5
 8000c36:	9302      	str	r3, [sp, #8]
 8000c38:	9303      	str	r3, [sp, #12]
 8000c3a:	460e      	mov	r6, r1
 8000c3c:	f004 f9fe 	bl	800503c <mbed::Timer::read_ms()>
 8000c40:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8000c44:	4631      	mov	r1, r6
 8000c46:	1a87      	subs	r7, r0, r2
 8000c48:	a801      	add	r0, sp, #4
 8000c4a:	f7ff fae7 	bl	800021c <std_msgs::Time::deserialize(unsigned char*)>
 8000c4e:	9b02      	ldr	r3, [sp, #8]
 8000c50:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000c54:	fbb7 f2f6 	udiv	r2, r7, r6
 8000c58:	4413      	add	r3, r2
 8000c5a:	9302      	str	r3, [sp, #8]
 8000c5c:	fb06 7212 	mls	r2, r6, r2, r7
 8000c60:	9b03      	ldr	r3, [sp, #12]
 8000c62:	4f12      	ldr	r7, [pc, #72]	; (8000cac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000c64:	4628      	mov	r0, r5
 8000c66:	fb07 3202 	mla	r2, r7, r2, r3
 8000c6a:	9203      	str	r2, [sp, #12]
 8000c6c:	f004 f9e6 	bl	800503c <mbed::Timer::read_ms()>
 8000c70:	9a02      	ldr	r2, [sp, #8]
 8000c72:	fbb0 f3f6 	udiv	r3, r0, r6
 8000c76:	3a01      	subs	r2, #1
 8000c78:	1ad2      	subs	r2, r2, r3
 8000c7a:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8000c7e:	9903      	ldr	r1, [sp, #12]
 8000c80:	4a0b      	ldr	r2, [pc, #44]	; (8000cb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000c82:	fb06 0313 	mls	r3, r6, r3, r0
 8000c86:	440a      	add	r2, r1
 8000c88:	4621      	mov	r1, r4
 8000c8a:	fb07 2313 	mls	r3, r7, r3, r2
 8000c8e:	f841 3f94 	str.w	r3, [r1, #148]!
 8000c92:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000c96:	f000 fb09 	bl	80012ac <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000c9a:	4628      	mov	r0, r5
 8000c9c:	f004 f9ce 	bl	800503c <mbed::Timer::read_ms()>
 8000ca0:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8000ca4:	b005      	add	sp, #20
 8000ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ca8:	08006970 	.word	0x08006970
 8000cac:	000f4240 	.word	0x000f4240
 8000cb0:	3b9aca00 	.word	0x3b9aca00

08000cb4 <_GLOBAL__sub_I_can>:
 8000cb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cb6:	4c6f      	ldr	r4, [pc, #444]	; (8000e74 <_GLOBAL__sub_I_can+0x1c0>)
 8000cb8:	4f6f      	ldr	r7, [pc, #444]	; (8000e78 <_GLOBAL__sub_I_can+0x1c4>)
 8000cba:	220c      	movs	r2, #12
 8000cbc:	210b      	movs	r1, #11
 8000cbe:	4620      	mov	r0, r4
 8000cc0:	f004 fa62 	bl	8005188 <mbed::CAN::CAN(PinName, PinName)>
 8000cc4:	4620      	mov	r0, r4
 8000cc6:	4c6d      	ldr	r4, [pc, #436]	; (8000e7c <_GLOBAL__sub_I_can+0x1c8>)
 8000cc8:	496d      	ldr	r1, [pc, #436]	; (8000e80 <_GLOBAL__sub_I_can+0x1cc>)
 8000cca:	463a      	mov	r2, r7
 8000ccc:	f004 fc22 	bl	8005514 <__aeabi_atexit>
 8000cd0:	221c      	movs	r2, #28
 8000cd2:	2100      	movs	r1, #0
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f005 f950 	bl	8005f7a <memset>
 8000cda:	4620      	mov	r0, r4
 8000cdc:	4c69      	ldr	r4, [pc, #420]	; (8000e84 <_GLOBAL__sub_I_can+0x1d0>)
 8000cde:	2113      	movs	r1, #19
 8000ce0:	f000 fe4b 	bl	800197a <gpio_init_out>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	4b68      	ldr	r3, [pc, #416]	; (8000e88 <_GLOBAL__sub_I_can+0x1d4>)
 8000ce8:	f840 3b04 	str.w	r3, [r0], #4
 8000cec:	2500      	movs	r5, #0
 8000cee:	2304      	movs	r3, #4
 8000cf0:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000cf4:	220f      	movs	r2, #15
 8000cf6:	2102      	movs	r1, #2
 8000cf8:	f104 067c 	add.w	r6, r4, #124	; 0x7c
 8000cfc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d00:	f000 fba8 	bl	8001454 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000d04:	4630      	mov	r0, r6
 8000d06:	f004 f9af 	bl	8005068 <mbed::Timer::Timer()>
 8000d0a:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000d0e:	67a3      	str	r3, [r4, #120]	; 0x78
 8000d10:	4630      	mov	r0, r6
 8000d12:	f44f 7600 	mov.w	r6, #512	; 0x200
 8000d16:	f004 f965 	bl	8004fe4 <mbed::Timer::start()>
 8000d1a:	4632      	mov	r2, r6
 8000d1c:	4629      	mov	r1, r5
 8000d1e:	f104 009c 	add.w	r0, r4, #156	; 0x9c
 8000d22:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8000d26:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
 8000d2a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8000d2e:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8000d32:	f005 f922 	bl	8005f7a <memset>
 8000d36:	4632      	mov	r2, r6
 8000d38:	4629      	mov	r1, r5
 8000d3a:	2664      	movs	r6, #100	; 0x64
 8000d3c:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8000d40:	f005 f91b 	bl	8005f7a <memset>
 8000d44:	4632      	mov	r2, r6
 8000d46:	4629      	mov	r1, r5
 8000d48:	f204 409c 	addw	r0, r4, #1180	; 0x49c
 8000d4c:	f005 f915 	bl	8005f7a <memset>
 8000d50:	4632      	mov	r2, r6
 8000d52:	4629      	mov	r1, r5
 8000d54:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 8000d58:	f005 f90f 	bl	8005f7a <memset>
 8000d5c:	4b4b      	ldr	r3, [pc, #300]	; (8000e8c <_GLOBAL__sub_I_can+0x1d8>)
 8000d5e:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8000d62:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
 8000d66:	2600      	movs	r6, #0
 8000d68:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 8000d6c:	f8c4 5594 	str.w	r5, [r4, #1428]	; 0x594
 8000d70:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8000d74:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8000d78:	601e      	str	r6, [r3, #0]
 8000d7a:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8000d7e:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 8000d82:	f8c4 55ac 	str.w	r5, [r4, #1452]	; 0x5ac
 8000d86:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 8000d8a:	463a      	mov	r2, r7
 8000d8c:	4940      	ldr	r1, [pc, #256]	; (8000e90 <_GLOBAL__sub_I_can+0x1dc>)
 8000d8e:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
 8000d92:	4620      	mov	r0, r4
 8000d94:	f8c4 5568 	str.w	r5, [r4, #1384]	; 0x568
 8000d98:	f8c4 556c 	str.w	r5, [r4, #1388]	; 0x56c
 8000d9c:	f8c4 5570 	str.w	r5, [r4, #1392]	; 0x570
 8000da0:	f8c4 5574 	str.w	r5, [r4, #1396]	; 0x574
 8000da4:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8000da8:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000dac:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000db0:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8000db4:	f884 5588 	strb.w	r5, [r4, #1416]	; 0x588
 8000db8:	f004 fbac 	bl	8005514 <__aeabi_atexit>
 8000dbc:	4b35      	ldr	r3, [pc, #212]	; (8000e94 <_GLOBAL__sub_I_can+0x1e0>)
 8000dbe:	4a36      	ldr	r2, [pc, #216]	; (8000e98 <_GLOBAL__sub_I_can+0x1e4>)
 8000dc0:	601a      	str	r2, [r3, #0]
 8000dc2:	4936      	ldr	r1, [pc, #216]	; (8000e9c <_GLOBAL__sub_I_can+0x1e8>)
 8000dc4:	4a36      	ldr	r2, [pc, #216]	; (8000ea0 <_GLOBAL__sub_I_can+0x1ec>)
 8000dc6:	60de      	str	r6, [r3, #12]
 8000dc8:	609e      	str	r6, [r3, #8]
 8000dca:	611e      	str	r6, [r3, #16]
 8000dcc:	e882 000a 	stmia.w	r2, {r1, r3}
 8000dd0:	711d      	strb	r5, [r3, #4]
 8000dd2:	4b34      	ldr	r3, [pc, #208]	; (8000ea4 <_GLOBAL__sub_I_can+0x1f0>)
 8000dd4:	6115      	str	r5, [r2, #16]
 8000dd6:	4a34      	ldr	r2, [pc, #208]	; (8000ea8 <_GLOBAL__sub_I_can+0x1f4>)
 8000dd8:	601a      	str	r2, [r3, #0]
 8000dda:	4a34      	ldr	r2, [pc, #208]	; (8000eac <_GLOBAL__sub_I_can+0x1f8>)
 8000ddc:	60da      	str	r2, [r3, #12]
 8000dde:	4a34      	ldr	r2, [pc, #208]	; (8000eb0 <_GLOBAL__sub_I_can+0x1fc>)
 8000de0:	629a      	str	r2, [r3, #40]	; 0x28
 8000de2:	2201      	movs	r2, #1
 8000de4:	62da      	str	r2, [r3, #44]	; 0x2c
 8000de6:	4a33      	ldr	r2, [pc, #204]	; (8000eb4 <_GLOBAL__sub_I_can+0x200>)
 8000de8:	741d      	strb	r5, [r3, #16]
 8000dea:	619e      	str	r6, [r3, #24]
 8000dec:	61de      	str	r6, [r3, #28]
 8000dee:	621e      	str	r6, [r3, #32]
 8000df0:	625e      	str	r6, [r3, #36]	; 0x24
 8000df2:	609a      	str	r2, [r3, #8]
 8000df4:	615e      	str	r6, [r3, #20]
 8000df6:	4b30      	ldr	r3, [pc, #192]	; (8000eb8 <_GLOBAL__sub_I_can+0x204>)
 8000df8:	4f30      	ldr	r7, [pc, #192]	; (8000ebc <_GLOBAL__sub_I_can+0x208>)
 8000dfa:	4e31      	ldr	r6, [pc, #196]	; (8000ec0 <_GLOBAL__sub_I_can+0x20c>)
 8000dfc:	4d31      	ldr	r5, [pc, #196]	; (8000ec4 <_GLOBAL__sub_I_can+0x210>)
 8000dfe:	4c32      	ldr	r4, [pc, #200]	; (8000ec8 <_GLOBAL__sub_I_can+0x214>)
 8000e00:	631f      	str	r7, [r3, #48]	; 0x30
 8000e02:	f103 0210 	add.w	r2, r3, #16
 8000e06:	2000      	movs	r0, #0
 8000e08:	2100      	movs	r1, #0
 8000e0a:	635a      	str	r2, [r3, #52]	; 0x34
 8000e0c:	609f      	str	r7, [r3, #8]
 8000e0e:	2202      	movs	r2, #2
 8000e10:	4f2e      	ldr	r7, [pc, #184]	; (8000ecc <_GLOBAL__sub_I_can+0x218>)
 8000e12:	601e      	str	r6, [r3, #0]
 8000e14:	60dd      	str	r5, [r3, #12]
 8000e16:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000e1a:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000e1e:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000e22:	611c      	str	r4, [r3, #16]
 8000e24:	641a      	str	r2, [r3, #64]	; 0x40
 8000e26:	645f      	str	r7, [r3, #68]	; 0x44
 8000e28:	4b29      	ldr	r3, [pc, #164]	; (8000ed0 <_GLOBAL__sub_I_can+0x21c>)
 8000e2a:	601e      	str	r6, [r3, #0]
 8000e2c:	60dd      	str	r5, [r3, #12]
 8000e2e:	611c      	str	r4, [r3, #16]
 8000e30:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000e34:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000e38:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000e3c:	4925      	ldr	r1, [pc, #148]	; (8000ed4 <_GLOBAL__sub_I_can+0x220>)
 8000e3e:	6099      	str	r1, [r3, #8]
 8000e40:	6319      	str	r1, [r3, #48]	; 0x30
 8000e42:	f103 0010 	add.w	r0, r3, #16
 8000e46:	4924      	ldr	r1, [pc, #144]	; (8000ed8 <_GLOBAL__sub_I_can+0x224>)
 8000e48:	6358      	str	r0, [r3, #52]	; 0x34
 8000e4a:	641a      	str	r2, [r3, #64]	; 0x40
 8000e4c:	6459      	str	r1, [r3, #68]	; 0x44
 8000e4e:	4b23      	ldr	r3, [pc, #140]	; (8000edc <_GLOBAL__sub_I_can+0x228>)
 8000e50:	4923      	ldr	r1, [pc, #140]	; (8000ee0 <_GLOBAL__sub_I_can+0x22c>)
 8000e52:	6019      	str	r1, [r3, #0]
 8000e54:	4923      	ldr	r1, [pc, #140]	; (8000ee4 <_GLOBAL__sub_I_can+0x230>)
 8000e56:	60d9      	str	r1, [r3, #12]
 8000e58:	4923      	ldr	r1, [pc, #140]	; (8000ee8 <_GLOBAL__sub_I_can+0x234>)
 8000e5a:	6119      	str	r1, [r3, #16]
 8000e5c:	625a      	str	r2, [r3, #36]	; 0x24
 8000e5e:	4923      	ldr	r1, [pc, #140]	; (8000eec <_GLOBAL__sub_I_can+0x238>)
 8000e60:	4a23      	ldr	r2, [pc, #140]	; (8000ef0 <_GLOBAL__sub_I_can+0x23c>)
 8000e62:	6159      	str	r1, [r3, #20]
 8000e64:	f103 0010 	add.w	r0, r3, #16
 8000e68:	6198      	str	r0, [r3, #24]
 8000e6a:	6099      	str	r1, [r3, #8]
 8000e6c:	629a      	str	r2, [r3, #40]	; 0x28
 8000e6e:	b003      	add	sp, #12
 8000e70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e72:	bf00      	nop
 8000e74:	20000244 	.word	0x20000244
 8000e78:	20000188 	.word	0x20000188
 8000e7c:	200003e0 	.word	0x200003e0
 8000e80:	08005135 	.word	0x08005135
 8000e84:	200003fc 	.word	0x200003fc
 8000e88:	08006a60 	.word	0x08006a60
 8000e8c:	080069b8 	.word	0x080069b8
 8000e90:	0800126d 	.word	0x0800126d
 8000e94:	200003b8 	.word	0x200003b8
 8000e98:	08006a48 	.word	0x08006a48
 8000e9c:	08006ac0 	.word	0x08006ac0
 8000ea0:	200003cc 	.word	0x200003cc
 8000ea4:	20000388 	.word	0x20000388
 8000ea8:	08006a74 	.word	0x08006a74
 8000eac:	08006a30 	.word	0x08006a30
 8000eb0:	08000549 	.word	0x08000549
 8000eb4:	08006acc 	.word	0x08006acc
 8000eb8:	200002f8 	.word	0x200002f8
 8000ebc:	08006ad6 	.word	0x08006ad6
 8000ec0:	08006a8c 	.word	0x08006a8c
 8000ec4:	08006a00 	.word	0x08006a00
 8000ec8:	08006a18 	.word	0x08006a18
 8000ecc:	08000659 	.word	0x08000659
 8000ed0:	20000340 	.word	0x20000340
 8000ed4:	08006ae9 	.word	0x08006ae9
 8000ed8:	080005ed 	.word	0x080005ed
 8000edc:	200009b0 	.word	0x200009b0
 8000ee0:	08006aa4 	.word	0x08006aa4
 8000ee4:	080069d0 	.word	0x080069d0
 8000ee8:	080069e8 	.word	0x080069e8
 8000eec:	08006afb 	.word	0x08006afb
 8000ef0:	080004d5 	.word	0x080004d5

08000ef4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ef6:	2963      	cmp	r1, #99	; 0x63
 8000ef8:	b085      	sub	sp, #20
 8000efa:	4604      	mov	r4, r0
 8000efc:	460e      	mov	r6, r1
 8000efe:	dd03      	ble.n	8000f08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000f00:	f890 5578 	ldrb.w	r5, [r0, #1400]	; 0x578
 8000f04:	2d00      	cmp	r5, #0
 8000f06:	d04d      	beq.n	8000fa4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000f08:	6813      	ldr	r3, [r2, #0]
 8000f0a:	f204 21a3 	addw	r1, r4, #675	; 0x2a3
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	4610      	mov	r0, r2
 8000f12:	4798      	blx	r3
 8000f14:	23ff      	movs	r3, #255	; 0xff
 8000f16:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8000f1a:	23fe      	movs	r3, #254	; 0xfe
 8000f1c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000f20:	f884 329d 	strb.w	r3, [r4, #669]	; 0x29d
 8000f24:	b2c3      	uxtb	r3, r0
 8000f26:	f884 329e 	strb.w	r3, [r4, #670]	; 0x29e
 8000f2a:	4413      	add	r3, r2
 8000f2c:	43db      	mvns	r3, r3
 8000f2e:	f884 62a1 	strb.w	r6, [r4, #673]	; 0x2a1
 8000f32:	f346 2607 	sbfx	r6, r6, #8, #8
 8000f36:	f884 229f 	strb.w	r2, [r4, #671]	; 0x29f
 8000f3a:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 8000f3e:	f884 62a2 	strb.w	r6, [r4, #674]	; 0x2a2
 8000f42:	f204 21a1 	addw	r1, r4, #673	; 0x2a1
 8000f46:	2205      	movs	r2, #5
 8000f48:	2300      	movs	r3, #0
 8000f4a:	1d86      	adds	r6, r0, #6
 8000f4c:	42b2      	cmp	r2, r6
 8000f4e:	dc04      	bgt.n	8000f5a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000f50:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000f54:	3201      	adds	r2, #1
 8000f56:	442b      	add	r3, r5
 8000f58:	e7f8      	b.n	8000f4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000f5a:	f100 0508 	add.w	r5, r0, #8
 8000f5e:	4420      	add	r0, r4
 8000f60:	43db      	mvns	r3, r3
 8000f62:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000f66:	f880 32a3 	strb.w	r3, [r0, #675]	; 0x2a3
 8000f6a:	dc0c      	bgt.n	8000f86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000f6c:	f504 7727 	add.w	r7, r4, #668	; 0x29c
 8000f70:	463e      	mov	r6, r7
 8000f72:	3404      	adds	r4, #4
 8000f74:	1bf3      	subs	r3, r6, r7
 8000f76:	429d      	cmp	r5, r3
 8000f78:	dd14      	ble.n	8000fa4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000f7a:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000f7e:	4620      	mov	r0, r4
 8000f80:	f000 fad5 	bl	800152e <BufferedSerial::putc(int)>
 8000f84:	e7f6      	b.n	8000f74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000f86:	4b09      	ldr	r3, [pc, #36]	; (8000fac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000f88:	9301      	str	r3, [sp, #4]
 8000f8a:	2303      	movs	r3, #3
 8000f8c:	f88d 3008 	strb.w	r3, [sp, #8]
 8000f90:	4b07      	ldr	r3, [pc, #28]	; (8000fb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000f92:	9303      	str	r3, [sp, #12]
 8000f94:	6823      	ldr	r3, [r4, #0]
 8000f96:	aa01      	add	r2, sp, #4
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	2107      	movs	r1, #7
 8000f9c:	4620      	mov	r0, r4
 8000f9e:	4798      	blx	r3
 8000fa0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000fa4:	4628      	mov	r0, r5
 8000fa6:	b005      	add	sp, #20
 8000fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000faa:	bf00      	nop
 8000fac:	080069a0 	.word	0x080069a0
 8000fb0:	08006c78 	.word	0x08006c78

08000fb4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000fb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000fb8:	f100 087c 	add.w	r8, r0, #124	; 0x7c
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	4640      	mov	r0, r8
 8000fc0:	f004 f83c 	bl	800503c <mbed::Timer::read_ms()>
 8000fc4:	f8d4 3580 	ldr.w	r3, [r4, #1408]	; 0x580
 8000fc8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000fcc:	1ac3      	subs	r3, r0, r3
 8000fce:	4293      	cmp	r3, r2
 8000fd0:	bf84      	itt	hi
 8000fd2:	2300      	movhi	r3, #0
 8000fd4:	f884 3578 	strbhi.w	r3, [r4, #1400]	; 0x578
 8000fd8:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
 8000fdc:	4605      	mov	r5, r0
 8000fde:	b133      	cbz	r3, 8000fee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000fe0:	f8d4 3584 	ldr.w	r3, [r4, #1412]	; 0x584
 8000fe4:	4283      	cmp	r3, r0
 8000fe6:	bf3c      	itt	cc
 8000fe8:	2300      	movcc	r3, #0
 8000fea:	f8c4 3564 	strcc.w	r3, [r4, #1380]	; 0x564
 8000fee:	f104 0904 	add.w	r9, r4, #4
 8000ff2:	2600      	movs	r6, #0
 8000ff4:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8000ff8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000ffc:	b9ab      	cbnz	r3, 800102a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000ffe:	4648      	mov	r0, r9
 8001000:	f000 f962 	bl	80012c8 <BufferedSerial::readable()>
 8001004:	b9e8      	cbnz	r0, 8001042 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8001006:	f894 0578 	ldrb.w	r0, [r4, #1400]	; 0x578
 800100a:	b160      	cbz	r0, 8001026 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 800100c:	f8d4 357c 	ldr.w	r3, [r4, #1404]	; 0x57c
 8001010:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8001014:	1aeb      	subs	r3, r5, r3
 8001016:	4293      	cmp	r3, r2
 8001018:	d904      	bls.n	8001024 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 800101a:	4620      	mov	r0, r4
 800101c:	f7ff fd8c 	bl	8000b38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001020:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8001024:	2000      	movs	r0, #0
 8001026:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800102a:	4640      	mov	r0, r8
 800102c:	f004 f806 	bl	800503c <mbed::Timer::read_ms()>
 8001030:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8001034:	1b40      	subs	r0, r0, r5
 8001036:	4298      	cmp	r0, r3
 8001038:	d9e1      	bls.n	8000ffe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 800103a:	f06f 0001 	mvn.w	r0, #1
 800103e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001042:	4648      	mov	r0, r9
 8001044:	f000 f948 	bl	80012d8 <BufferedSerial::getc()>
 8001048:	2800      	cmp	r0, #0
 800104a:	dbdc      	blt.n	8001006 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 800104c:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
 8001050:	f8d4 a564 	ldr.w	r10, [r4, #1380]	; 0x564
 8001054:	4403      	add	r3, r0
 8001056:	f1ba 0f07 	cmp.w	r10, #7
 800105a:	f8c4 3574 	str.w	r3, [r4, #1396]	; 0x574
 800105e:	d112      	bne.n	8001086 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8001060:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 8001064:	1c5a      	adds	r2, r3, #1
 8001066:	4423      	add	r3, r4
 8001068:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
 800106c:	f883 009c 	strb.w	r0, [r3, #156]	; 0x9c
 8001070:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8001074:	3b01      	subs	r3, #1
 8001076:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 800107a:	2b00      	cmp	r3, #0
 800107c:	d1bc      	bne.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800107e:	2308      	movs	r3, #8
 8001080:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001084:	e7b8      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001086:	f1ba 0f00 	cmp.w	r10, #0
 800108a:	d114      	bne.n	80010b6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 800108c:	28ff      	cmp	r0, #255	; 0xff
 800108e:	d107      	bne.n	80010a0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8001090:	2301      	movs	r3, #1
 8001092:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001096:	f105 0314 	add.w	r3, r5, #20
 800109a:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 800109e:	e7ab      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010a0:	4640      	mov	r0, r8
 80010a2:	f003 ffcb 	bl	800503c <mbed::Timer::read_ms()>
 80010a6:	f241 3388 	movw	r3, #5000	; 0x1388
 80010aa:	1b40      	subs	r0, r0, r5
 80010ac:	4298      	cmp	r0, r3
 80010ae:	d9a3      	bls.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010b0:	f884 a578 	strb.w	r10, [r4, #1400]	; 0x578
 80010b4:	e7c1      	b.n	800103a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 80010b6:	f1ba 0f01 	cmp.w	r10, #1
 80010ba:	d10d      	bne.n	80010d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 80010bc:	28fe      	cmp	r0, #254	; 0xfe
 80010be:	d101      	bne.n	80010c4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 80010c0:	2302      	movs	r3, #2
 80010c2:	e7dd      	b.n	8001080 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 80010c4:	f894 3578 	ldrb.w	r3, [r4, #1400]	; 0x578
 80010c8:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d193      	bne.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010d0:	4620      	mov	r0, r4
 80010d2:	f7ff fd31 	bl	8000b38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80010d6:	e78f      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010d8:	f1ba 0f02 	cmp.w	r10, #2
 80010dc:	d109      	bne.n	80010f2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 80010de:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 80010e2:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
 80010e6:	2303      	movs	r3, #3
 80010e8:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80010ec:	f8c4 0574 	str.w	r0, [r4, #1396]	; 0x574
 80010f0:	e782      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010f2:	f1ba 0f03 	cmp.w	r10, #3
 80010f6:	d107      	bne.n	8001108 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 80010f8:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 80010fc:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001100:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 8001104:	2304      	movs	r3, #4
 8001106:	e7bb      	b.n	8001080 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001108:	f1ba 0f04 	cmp.w	r10, #4
 800110c:	d10b      	bne.n	8001126 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 800110e:	425a      	negs	r2, r3
 8001110:	b2d2      	uxtb	r2, r2
 8001112:	b2db      	uxtb	r3, r3
 8001114:	bf58      	it	pl
 8001116:	4253      	negpl	r3, r2
 8001118:	2bff      	cmp	r3, #255	; 0xff
 800111a:	d101      	bne.n	8001120 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 800111c:	2305      	movs	r3, #5
 800111e:	e7af      	b.n	8001080 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001120:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8001124:	e768      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001126:	f1ba 0f05 	cmp.w	r10, #5
 800112a:	d103      	bne.n	8001134 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 800112c:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8001130:	2306      	movs	r3, #6
 8001132:	e7d9      	b.n	80010e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8001134:	f1ba 0f06 	cmp.w	r10, #6
 8001138:	d10b      	bne.n	8001152 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 800113a:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 800113e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001142:	2307      	movs	r3, #7
 8001144:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001148:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 800114c:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8001150:	e793      	b.n	800107a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8001152:	f1ba 0f08 	cmp.w	r10, #8
 8001156:	f47f af4f 	bne.w	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800115a:	425a      	negs	r2, r3
 800115c:	b2d2      	uxtb	r2, r2
 800115e:	b2db      	uxtb	r3, r3
 8001160:	bf58      	it	pl
 8001162:	4253      	negpl	r3, r2
 8001164:	2bff      	cmp	r3, #255	; 0xff
 8001166:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 800116a:	f47f af45 	bne.w	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800116e:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8001172:	b96b      	cbnz	r3, 8001190 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8001174:	4620      	mov	r0, r4
 8001176:	f7ff fcdf 	bl	8000b38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800117a:	4620      	mov	r0, r4
 800117c:	f7ff fcf4 	bl	8000b68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001180:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8001184:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8001188:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800118c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001190:	2b0a      	cmp	r3, #10
 8001192:	d104      	bne.n	800119e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8001194:	4639      	mov	r1, r7
 8001196:	4620      	mov	r0, r4
 8001198:	f7ff fd44 	bl	8000c24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 800119c:	e72c      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800119e:	2b06      	cmp	r3, #6
 80011a0:	d108      	bne.n	80011b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 80011a2:	4639      	mov	r1, r7
 80011a4:	f204 508c 	addw	r0, r4, #1420	; 0x58c
 80011a8:	f7ff fbf7 	bl	800099a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 80011ac:	2301      	movs	r3, #1
 80011ae:	f884 3588 	strb.w	r3, [r4, #1416]	; 0x588
 80011b2:	e721      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80011b4:	2b0b      	cmp	r3, #11
 80011b6:	d102      	bne.n	80011be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 80011b8:	f884 6578 	strb.w	r6, [r4, #1400]	; 0x578
 80011bc:	e71c      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80011be:	33dc      	adds	r3, #220	; 0xdc
 80011c0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80011c4:	2800      	cmp	r0, #0
 80011c6:	f43f af17 	beq.w	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80011ca:	6803      	ldr	r3, [r0, #0]
 80011cc:	4639      	mov	r1, r7
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	4798      	blx	r3
 80011d2:	e711      	b.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

080011d4 <main>:
 80011d4:	b508      	push	{r3, lr}
 80011d6:	4b1b      	ldr	r3, [pc, #108]	; (8001244 <main+0x70>)
 80011d8:	4c1b      	ldr	r4, [pc, #108]	; (8001248 <main+0x74>)
 80011da:	68da      	ldr	r2, [r3, #12]
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	6013      	str	r3, [r2, #0]
 80011e0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80011e4:	1d20      	adds	r0, r4, #4
 80011e6:	67a1      	str	r1, [r4, #120]	; 0x78
 80011e8:	f003 fe3c 	bl	8004e64 <mbed::SerialBase::baud(int)>
 80011ec:	2300      	movs	r3, #0
 80011ee:	4917      	ldr	r1, [pc, #92]	; (800124c <main+0x78>)
 80011f0:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80011f4:	4620      	mov	r0, r4
 80011f6:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 80011fa:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 80011fe:	f8c4 356c 	str.w	r3, [r4, #1388]	; 0x56c
 8001202:	f7ff fc8a 	bl	8000b1a <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>
 8001206:	4912      	ldr	r1, [pc, #72]	; (8001250 <main+0x7c>)
 8001208:	4620      	mov	r0, r4
 800120a:	f7ff fc86 	bl	8000b1a <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>(ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>&)>
 800120e:	4911      	ldr	r1, [pc, #68]	; (8001254 <main+0x80>)
 8001210:	4620      	mov	r0, r4
 8001212:	f7ff fc59 	bl	8000ac8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8001216:	4910      	ldr	r1, [pc, #64]	; (8001258 <main+0x84>)
 8001218:	4620      	mov	r0, r4
 800121a:	f7ff fc6a 	bl	8000af2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 800121e:	490f      	ldr	r1, [pc, #60]	; (800125c <main+0x88>)
 8001220:	4620      	mov	r0, r4
 8001222:	f7ff fc51 	bl	8000ac8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8001226:	490e      	ldr	r1, [pc, #56]	; (8001260 <main+0x8c>)
 8001228:	4620      	mov	r0, r4
 800122a:	f7ff fc62 	bl	8000af2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 800122e:	490d      	ldr	r1, [pc, #52]	; (8001264 <main+0x90>)
 8001230:	480d      	ldr	r0, [pc, #52]	; (8001268 <main+0x94>)
 8001232:	f003 ff37 	bl	80050a4 <mbed::CAN::frequency(int)>
 8001236:	4620      	mov	r0, r4
 8001238:	f7ff febc 	bl	8000fb4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 800123c:	200a      	movs	r0, #10
 800123e:	f004 f867 	bl	8005310 <wait_ms>
 8001242:	e7f8      	b.n	8001236 <main+0x62>
 8001244:	200003e0 	.word	0x200003e0
 8001248:	200003fc 	.word	0x200003fc
 800124c:	200002f8 	.word	0x200002f8
 8001250:	20000340 	.word	0x20000340
 8001254:	200009c4 	.word	0x200009c4
 8001258:	200009b0 	.word	0x200009b0
 800125c:	200003cc 	.word	0x200003cc
 8001260:	20000388 	.word	0x20000388
 8001264:	000f4240 	.word	0x000f4240
 8001268:	20000244 	.word	0x20000244

0800126c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 800126c:	b510      	push	{r4, lr}
 800126e:	4b04      	ldr	r3, [pc, #16]	; (8001280 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8001270:	4604      	mov	r4, r0
 8001272:	f840 3b04 	str.w	r3, [r0], #4
 8001276:	f000 f879 	bl	800136c <BufferedSerial::~BufferedSerial()>
 800127a:	4620      	mov	r0, r4
 800127c:	bd10      	pop	{r4, pc}
 800127e:	bf00      	nop
 8001280:	08006a60 	.word	0x08006a60

08001284 <_start>:
 8001284:	4807      	ldr	r0, [pc, #28]	; (80012a4 <_start+0x20>)
 8001286:	4a08      	ldr	r2, [pc, #32]	; (80012a8 <_start+0x24>)
 8001288:	b508      	push	{r3, lr}
 800128a:	1a12      	subs	r2, r2, r0
 800128c:	2100      	movs	r1, #0
 800128e:	f004 fe74 	bl	8005f7a <memset>
 8001292:	f004 f8fd 	bl	8005490 <software_init_hook>
 8001296:	f004 fdc1 	bl	8005e1c <__libc_init_array>
 800129a:	f004 f900 	bl	800549e <__wrap_main>
 800129e:	f004 f93b 	bl	8005518 <__wrap_exit>
 80012a2:	bf00      	nop
 80012a4:	20000228 	.word	0x20000228
 80012a8:	20001f24 	.word	0x20001f24

080012ac <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 80012ac:	b530      	push	{r4, r5, lr}
 80012ae:	6802      	ldr	r2, [r0, #0]
 80012b0:	680d      	ldr	r5, [r1, #0]
 80012b2:	4c04      	ldr	r4, [pc, #16]	; (80012c4 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 80012b4:	fbb5 f3f4 	udiv	r3, r5, r4
 80012b8:	441a      	add	r2, r3
 80012ba:	fb04 5313 	mls	r3, r4, r3, r5
 80012be:	6002      	str	r2, [r0, #0]
 80012c0:	600b      	str	r3, [r1, #0]
 80012c2:	bd30      	pop	{r4, r5, pc}
 80012c4:	3b9aca00 	.word	0x3b9aca00

080012c8 <BufferedSerial::readable()>:
 80012c8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80012ca:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80012cc:	1a10      	subs	r0, r2, r0
 80012ce:	bf18      	it	ne
 80012d0:	2001      	movne	r0, #1
 80012d2:	4770      	bx	lr

080012d4 <BufferedSerial::writeable()>:
 80012d4:	2001      	movs	r0, #1
 80012d6:	4770      	bx	lr

080012d8 <BufferedSerial::getc()>:
 80012d8:	b510      	push	{r4, lr}
 80012da:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80012dc:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 80012de:	4603      	mov	r3, r0
 80012e0:	1c50      	adds	r0, r2, #1
 80012e2:	6558      	str	r0, [r3, #84]	; 0x54
 80012e4:	5c88      	ldrb	r0, [r1, r2]
 80012e6:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80012e8:	6d5c      	ldr	r4, [r3, #84]	; 0x54
 80012ea:	3a01      	subs	r2, #1
 80012ec:	fbb4 f1f2 	udiv	r1, r4, r2
 80012f0:	fb02 4211 	mls	r2, r2, r1, r4
 80012f4:	655a      	str	r2, [r3, #84]	; 0x54
 80012f6:	bd10      	pop	{r4, pc}

080012f8 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 80012f8:	4603      	mov	r3, r0
 80012fa:	b110      	cbz	r0, 8001302 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 80012fc:	c907      	ldmia	r1, {r0, r1, r2}
 80012fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001302:	4770      	bx	lr

08001304 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001304:	4770      	bx	lr

08001306 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001306:	6842      	ldr	r2, [r0, #4]
 8001308:	6881      	ldr	r1, [r0, #8]
 800130a:	6803      	ldr	r3, [r0, #0]
 800130c:	f012 0f01 	tst.w	r2, #1
 8001310:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001314:	bf1c      	itt	ne
 8001316:	5888      	ldrne	r0, [r1, r2]
 8001318:	58c3      	ldrne	r3, [r0, r3]
 800131a:	1888      	adds	r0, r1, r2
 800131c:	4718      	bx	r3

0800131e <mbed::Callback<void ()>::~Callback()>:
 800131e:	68c3      	ldr	r3, [r0, #12]
 8001320:	b510      	push	{r4, lr}
 8001322:	4604      	mov	r4, r0
 8001324:	b10b      	cbz	r3, 800132a <mbed::Callback<void ()>::~Callback()+0xc>
 8001326:	689b      	ldr	r3, [r3, #8]
 8001328:	4798      	blx	r3
 800132a:	4620      	mov	r0, r4
 800132c:	bd10      	pop	{r4, pc}
	...

08001330 <mbed::SerialBase::~SerialBase()>:
 8001330:	b570      	push	{r4, r5, r6, lr}
 8001332:	4605      	mov	r5, r0
 8001334:	4b07      	ldr	r3, [pc, #28]	; (8001354 <mbed::SerialBase::~SerialBase()+0x24>)
 8001336:	f845 3b28 	str.w	r3, [r5], #40
 800133a:	4606      	mov	r6, r0
 800133c:	b145      	cbz	r5, 8001350 <mbed::SerialBase::~SerialBase()+0x20>
 800133e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001342:	42ac      	cmp	r4, r5
 8001344:	d004      	beq.n	8001350 <mbed::SerialBase::~SerialBase()+0x20>
 8001346:	3c10      	subs	r4, #16
 8001348:	4620      	mov	r0, r4
 800134a:	f7ff ffe8 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 800134e:	e7f8      	b.n	8001342 <mbed::SerialBase::~SerialBase()+0x12>
 8001350:	4630      	mov	r0, r6
 8001352:	bd70      	pop	{r4, r5, r6, pc}
 8001354:	080070ec 	.word	0x080070ec

08001358 <mbed::SerialBase::~SerialBase()>:
 8001358:	b510      	push	{r4, lr}
 800135a:	4604      	mov	r4, r0
 800135c:	f7ff ffe8 	bl	8001330 <mbed::SerialBase::~SerialBase()>
 8001360:	4620      	mov	r0, r4
 8001362:	f004 f8f5 	bl	8005550 <operator delete(void*)>
 8001366:	4620      	mov	r0, r4
 8001368:	bd10      	pop	{r4, pc}
	...

0800136c <BufferedSerial::~BufferedSerial()>:
 800136c:	b530      	push	{r4, r5, lr}
 800136e:	4b13      	ldr	r3, [pc, #76]	; (80013bc <BufferedSerial::~BufferedSerial()+0x50>)
 8001370:	6003      	str	r3, [r0, #0]
 8001372:	b085      	sub	sp, #20
 8001374:	2500      	movs	r5, #0
 8001376:	462a      	mov	r2, r5
 8001378:	4669      	mov	r1, sp
 800137a:	4604      	mov	r4, r0
 800137c:	9503      	str	r5, [sp, #12]
 800137e:	f003 fddb 	bl	8004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001382:	4668      	mov	r0, sp
 8001384:	f7ff ffcb 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8001388:	2201      	movs	r2, #1
 800138a:	4669      	mov	r1, sp
 800138c:	4620      	mov	r0, r4
 800138e:	9503      	str	r5, [sp, #12]
 8001390:	f003 fdd2 	bl	8004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001394:	4668      	mov	r0, sp
 8001396:	f7ff ffc2 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 800139a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800139e:	f000 f945 	bl	800162c <Buffer<char>::~Buffer()>
 80013a2:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 80013a6:	f000 f941 	bl	800162c <Buffer<char>::~Buffer()>
 80013aa:	4b05      	ldr	r3, [pc, #20]	; (80013c0 <BufferedSerial::~BufferedSerial()+0x54>)
 80013ac:	6023      	str	r3, [r4, #0]
 80013ae:	4620      	mov	r0, r4
 80013b0:	f7ff ffbe 	bl	8001330 <mbed::SerialBase::~SerialBase()>
 80013b4:	4620      	mov	r0, r4
 80013b6:	b005      	add	sp, #20
 80013b8:	bd30      	pop	{r4, r5, pc}
 80013ba:	bf00      	nop
 80013bc:	08006da0 	.word	0x08006da0
 80013c0:	08007104 	.word	0x08007104

080013c4 <BufferedSerial::~BufferedSerial()>:
 80013c4:	b510      	push	{r4, lr}
 80013c6:	4604      	mov	r4, r0
 80013c8:	f7ff ffd0 	bl	800136c <BufferedSerial::~BufferedSerial()>
 80013cc:	4620      	mov	r0, r4
 80013ce:	f004 f8bf 	bl	8005550 <operator delete(void*)>
 80013d2:	4620      	mov	r0, r4
 80013d4:	bd10      	pop	{r4, pc}

080013d6 <BufferedSerial::txIrq()>:
 80013d6:	b530      	push	{r4, r5, lr}
 80013d8:	4604      	mov	r4, r0
 80013da:	b085      	sub	sp, #20
 80013dc:	1d05      	adds	r5, r0, #4
 80013de:	4628      	mov	r0, r5
 80013e0:	f002 fd24 	bl	8003e2c <serial_writable>
 80013e4:	b1f0      	cbz	r0, 8001424 <BufferedSerial::txIrq()+0x4e>
 80013e6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80013e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013ea:	429a      	cmp	r2, r3
 80013ec:	d010      	beq.n	8001410 <BufferedSerial::txIrq()+0x3a>
 80013ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013f0:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80013f2:	1c59      	adds	r1, r3, #1
 80013f4:	6661      	str	r1, [r4, #100]	; 0x64
 80013f6:	5cd1      	ldrb	r1, [r2, r3]
 80013f8:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80013fa:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80013fc:	3b01      	subs	r3, #1
 80013fe:	fbb0 f2f3 	udiv	r2, r0, r3
 8001402:	fb03 0312 	mls	r3, r3, r2, r0
 8001406:	6663      	str	r3, [r4, #100]	; 0x64
 8001408:	4628      	mov	r0, r5
 800140a:	f002 fd1b 	bl	8003e44 <serial_putc>
 800140e:	e7e6      	b.n	80013de <BufferedSerial::txIrq()+0x8>
 8001410:	2300      	movs	r3, #0
 8001412:	4620      	mov	r0, r4
 8001414:	2201      	movs	r2, #1
 8001416:	4669      	mov	r1, sp
 8001418:	9303      	str	r3, [sp, #12]
 800141a:	f003 fd8d 	bl	8004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800141e:	4668      	mov	r0, sp
 8001420:	f7ff ff7d 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8001424:	b005      	add	sp, #20
 8001426:	bd30      	pop	{r4, r5, pc}

08001428 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001428:	b510      	push	{r4, lr}
 800142a:	b086      	sub	sp, #24
 800142c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001430:	9b01      	ldr	r3, [sp, #4]
 8001432:	9202      	str	r2, [sp, #8]
 8001434:	9303      	str	r3, [sp, #12]
 8001436:	9104      	str	r1, [sp, #16]
 8001438:	4b05      	ldr	r3, [pc, #20]	; (8001450 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 800143a:	f89d 2020 	ldrb.w	r2, [sp, #32]
 800143e:	9305      	str	r3, [sp, #20]
 8001440:	a902      	add	r1, sp, #8
 8001442:	f003 fd79 	bl	8004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001446:	a802      	add	r0, sp, #8
 8001448:	f7ff ff69 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 800144c:	b006      	add	sp, #24
 800144e:	bd10      	pop	{r4, pc}
 8001450:	08006d10 	.word	0x08006d10

08001454 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001454:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001456:	4604      	mov	r4, r0
 8001458:	461d      	mov	r5, r3
 800145a:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800145e:	9e08      	ldr	r6, [sp, #32]
 8001460:	f003 fdb6 	bl	8004fd0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001464:	4620      	mov	r0, r4
 8001466:	4b0e      	ldr	r3, [pc, #56]	; (80014a0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
 8001468:	f840 3b4c 	str.w	r3, [r0], #76
 800146c:	4629      	mov	r1, r5
 800146e:	f000 f8ec 	bl	800164a <Buffer<char>::Buffer(unsigned long)>
 8001472:	fb06 f105 	mul.w	r1, r6, r5
 8001476:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800147a:	f000 f8e6 	bl	800164a <Buffer<char>::Buffer(unsigned long)>
 800147e:	4b09      	ldr	r3, [pc, #36]	; (80014a4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001480:	9302      	str	r3, [sp, #8]
 8001482:	2300      	movs	r3, #0
 8001484:	9303      	str	r3, [sp, #12]
 8001486:	9300      	str	r3, [sp, #0]
 8001488:	ab04      	add	r3, sp, #16
 800148a:	4620      	mov	r0, r4
 800148c:	e913 000c 	ldmdb	r3, {r2, r3}
 8001490:	4621      	mov	r1, r4
 8001492:	f7ff ffc9 	bl	8001428 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001496:	4620      	mov	r0, r4
 8001498:	66e5      	str	r5, [r4, #108]	; 0x6c
 800149a:	6726      	str	r6, [r4, #112]	; 0x70
 800149c:	b004      	add	sp, #16
 800149e:	bd70      	pop	{r4, r5, r6, pc}
 80014a0:	08006da0 	.word	0x08006da0
 80014a4:	0800150f 	.word	0x0800150f

080014a8 <BufferedSerial::prime()>:
 80014a8:	b570      	push	{r4, r5, r6, lr}
 80014aa:	4604      	mov	r4, r0
 80014ac:	b086      	sub	sp, #24
 80014ae:	3004      	adds	r0, #4
 80014b0:	f002 fcbc 	bl	8003e2c <serial_writable>
 80014b4:	b1c0      	cbz	r0, 80014e8 <BufferedSerial::prime()+0x40>
 80014b6:	ad02      	add	r5, sp, #8
 80014b8:	2201      	movs	r2, #1
 80014ba:	4629      	mov	r1, r5
 80014bc:	2600      	movs	r6, #0
 80014be:	4620      	mov	r0, r4
 80014c0:	9605      	str	r6, [sp, #20]
 80014c2:	f003 fd39 	bl	8004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80014c6:	4628      	mov	r0, r5
 80014c8:	f7ff ff29 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 80014cc:	4620      	mov	r0, r4
 80014ce:	f7ff ff82 	bl	80013d6 <BufferedSerial::txIrq()>
 80014d2:	4b06      	ldr	r3, [pc, #24]	; (80014ec <BufferedSerial::prime()+0x44>)
 80014d4:	9302      	str	r3, [sp, #8]
 80014d6:	2301      	movs	r3, #1
 80014d8:	9603      	str	r6, [sp, #12]
 80014da:	9300      	str	r3, [sp, #0]
 80014dc:	e895 000c 	ldmia.w	r5, {r2, r3}
 80014e0:	4621      	mov	r1, r4
 80014e2:	4620      	mov	r0, r4
 80014e4:	f7ff ffa0 	bl	8001428 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80014e8:	b006      	add	sp, #24
 80014ea:	bd70      	pop	{r4, r5, r6, pc}
 80014ec:	080013d7 	.word	0x080013d7

080014f0 <Buffer<char>::put(char)>:
 80014f0:	6843      	ldr	r3, [r0, #4]
 80014f2:	6802      	ldr	r2, [r0, #0]
 80014f4:	b510      	push	{r4, lr}
 80014f6:	1c5c      	adds	r4, r3, #1
 80014f8:	6044      	str	r4, [r0, #4]
 80014fa:	54d1      	strb	r1, [r2, r3]
 80014fc:	68c3      	ldr	r3, [r0, #12]
 80014fe:	6841      	ldr	r1, [r0, #4]
 8001500:	3b01      	subs	r3, #1
 8001502:	fbb1 f2f3 	udiv	r2, r1, r3
 8001506:	fb03 1312 	mls	r3, r3, r2, r1
 800150a:	6043      	str	r3, [r0, #4]
 800150c:	bd10      	pop	{r4, pc}

0800150e <BufferedSerial::rxIrq()>:
 800150e:	b538      	push	{r3, r4, r5, lr}
 8001510:	1d05      	adds	r5, r0, #4
 8001512:	4604      	mov	r4, r0
 8001514:	4628      	mov	r0, r5
 8001516:	f002 fc67 	bl	8003de8 <serial_readable>
 800151a:	b138      	cbz	r0, 800152c <BufferedSerial::rxIrq()+0x1e>
 800151c:	4628      	mov	r0, r5
 800151e:	f002 fc6f 	bl	8003e00 <serial_getc>
 8001522:	b2c1      	uxtb	r1, r0
 8001524:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8001528:	f7ff ffe2 	bl	80014f0 <Buffer<char>::put(char)>
 800152c:	bd38      	pop	{r3, r4, r5, pc}

0800152e <BufferedSerial::putc(int)>:
 800152e:	b538      	push	{r3, r4, r5, lr}
 8001530:	4605      	mov	r5, r0
 8001532:	460c      	mov	r4, r1
 8001534:	305c      	adds	r0, #92	; 0x5c
 8001536:	b2c9      	uxtb	r1, r1
 8001538:	f7ff ffda 	bl	80014f0 <Buffer<char>::put(char)>
 800153c:	4628      	mov	r0, r5
 800153e:	f7ff ffb3 	bl	80014a8 <BufferedSerial::prime()>
 8001542:	4620      	mov	r0, r4
 8001544:	bd38      	pop	{r3, r4, r5, pc}

08001546 <BufferedSerial::puts(char const*)>:
 8001546:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800154a:	4607      	mov	r7, r0
 800154c:	460c      	mov	r4, r1
 800154e:	b1b1      	cbz	r1, 800157e <BufferedSerial::puts(char const*)+0x38>
 8001550:	460d      	mov	r5, r1
 8001552:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8001556:	462e      	mov	r6, r5
 8001558:	f816 1b01 	ldrb.w	r1, [r6], #1
 800155c:	b121      	cbz	r1, 8001568 <BufferedSerial::puts(char const*)+0x22>
 800155e:	4640      	mov	r0, r8
 8001560:	f7ff ffc6 	bl	80014f0 <Buffer<char>::put(char)>
 8001564:	4635      	mov	r5, r6
 8001566:	e7f6      	b.n	8001556 <BufferedSerial::puts(char const*)+0x10>
 8001568:	210a      	movs	r1, #10
 800156a:	4640      	mov	r0, r8
 800156c:	f7ff ffc0 	bl	80014f0 <Buffer<char>::put(char)>
 8001570:	1b2c      	subs	r4, r5, r4
 8001572:	4638      	mov	r0, r7
 8001574:	f7ff ff98 	bl	80014a8 <BufferedSerial::prime()>
 8001578:	1c60      	adds	r0, r4, #1
 800157a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800157e:	4608      	mov	r0, r1
 8001580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001584 <BufferedSerial::write(void const*, unsigned int)>:
 8001584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001588:	4607      	mov	r7, r0
 800158a:	460d      	mov	r5, r1
 800158c:	b191      	cbz	r1, 80015b4 <BufferedSerial::write(void const*, unsigned int)+0x30>
 800158e:	b1a2      	cbz	r2, 80015ba <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001590:	188c      	adds	r4, r1, r2
 8001592:	460e      	mov	r6, r1
 8001594:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8001598:	42b4      	cmp	r4, r6
 800159a:	d005      	beq.n	80015a8 <BufferedSerial::write(void const*, unsigned int)+0x24>
 800159c:	f816 1b01 	ldrb.w	r1, [r6], #1
 80015a0:	4640      	mov	r0, r8
 80015a2:	f7ff ffa5 	bl	80014f0 <Buffer<char>::put(char)>
 80015a6:	e7f7      	b.n	8001598 <BufferedSerial::write(void const*, unsigned int)+0x14>
 80015a8:	4638      	mov	r0, r7
 80015aa:	f7ff ff7d 	bl	80014a8 <BufferedSerial::prime()>
 80015ae:	1b60      	subs	r0, r4, r5
 80015b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015b4:	4608      	mov	r0, r1
 80015b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015ba:	4610      	mov	r0, r2
 80015bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080015c0 <BufferedSerial::printf(char const*, ...)>:
 80015c0:	b40e      	push	{r1, r2, r3}
 80015c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015c6:	b085      	sub	sp, #20
 80015c8:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 80015ca:	af02      	add	r7, sp, #8
 80015cc:	1dd3      	adds	r3, r2, #7
 80015ce:	f023 0307 	bic.w	r3, r3, #7
 80015d2:	f107 0424 	add.w	r4, r7, #36	; 0x24
 80015d6:	ebad 0d03 	sub.w	sp, sp, r3
 80015da:	f854 8b04 	ldr.w	r8, [r4], #4
 80015de:	ae02      	add	r6, sp, #8
 80015e0:	4605      	mov	r5, r0
 80015e2:	2100      	movs	r1, #0
 80015e4:	4630      	mov	r0, r6
 80015e6:	f004 fcc8 	bl	8005f7a <memset>
 80015ea:	4622      	mov	r2, r4
 80015ec:	4641      	mov	r1, r8
 80015ee:	4630      	mov	r0, r6
 80015f0:	607c      	str	r4, [r7, #4]
 80015f2:	f004 ffaf 	bl	8006554 <vsiprintf>
 80015f6:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 80015f8:	4283      	cmp	r3, r0
 80015fa:	4602      	mov	r2, r0
 80015fc:	d20c      	bcs.n	8001618 <BufferedSerial::printf(char const*, ...)+0x58>
 80015fe:	9000      	str	r0, [sp, #0]
 8001600:	225d      	movs	r2, #93	; 0x5d
 8001602:	4808      	ldr	r0, [pc, #32]	; (8001624 <BufferedSerial::printf(char const*, ...)+0x64>)
 8001604:	4908      	ldr	r1, [pc, #32]	; (8001628 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001606:	f000 fa71 	bl	8001aec <error>
 800160a:	2000      	movs	r0, #0
 800160c:	370c      	adds	r7, #12
 800160e:	46bd      	mov	sp, r7
 8001610:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001614:	b003      	add	sp, #12
 8001616:	4770      	bx	lr
 8001618:	4631      	mov	r1, r6
 800161a:	4628      	mov	r0, r5
 800161c:	f7ff ffb2 	bl	8001584 <BufferedSerial::write(void const*, unsigned int)>
 8001620:	e7f4      	b.n	800160c <BufferedSerial::printf(char const*, ...)+0x4c>
 8001622:	bf00      	nop
 8001624:	08006d5d 	.word	0x08006d5d
 8001628:	08006d1c 	.word	0x08006d1c

0800162c <Buffer<char>::~Buffer()>:
 800162c:	b510      	push	{r4, lr}
 800162e:	4604      	mov	r4, r0
 8001630:	6800      	ldr	r0, [r0, #0]
 8001632:	b108      	cbz	r0, 8001638 <Buffer<char>::~Buffer()+0xc>
 8001634:	f003 ff88 	bl	8005548 <operator delete[](void*)>
 8001638:	4620      	mov	r0, r4
 800163a:	bd10      	pop	{r4, pc}

0800163c <Buffer<char>::clear()>:
 800163c:	2100      	movs	r1, #0
 800163e:	6041      	str	r1, [r0, #4]
 8001640:	68c2      	ldr	r2, [r0, #12]
 8001642:	6081      	str	r1, [r0, #8]
 8001644:	6800      	ldr	r0, [r0, #0]
 8001646:	f004 bc98 	b.w	8005f7a <memset>

0800164a <Buffer<char>::Buffer(unsigned long)>:
 800164a:	b538      	push	{r3, r4, r5, lr}
 800164c:	4604      	mov	r4, r0
 800164e:	4608      	mov	r0, r1
 8001650:	460d      	mov	r5, r1
 8001652:	f003 ff6d 	bl	8005530 <operator new[](unsigned int)>
 8001656:	60e5      	str	r5, [r4, #12]
 8001658:	6020      	str	r0, [r4, #0]
 800165a:	4620      	mov	r0, r4
 800165c:	f7ff ffee 	bl	800163c <Buffer<char>::clear()>
 8001660:	4620      	mov	r0, r4
 8001662:	bd38      	pop	{r3, r4, r5, pc}

08001664 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>:
 8001664:	b570      	push	{r4, r5, r6, lr}
 8001666:	b086      	sub	sp, #24
 8001668:	ac02      	add	r4, sp, #8
 800166a:	4605      	mov	r5, r0
 800166c:	4620      	mov	r0, r4
 800166e:	460e      	mov	r6, r1
 8001670:	f7fe ff5d 	bl	800052e <mbed::CANMessage::CANMessage()>
 8001674:	2308      	movs	r3, #8
 8001676:	f88d 3014 	strb.w	r3, [sp, #20]
 800167a:	23ff      	movs	r3, #255	; 0xff
 800167c:	f88d 300c 	strb.w	r3, [sp, #12]
 8001680:	f88d 300d 	strb.w	r3, [sp, #13]
 8001684:	f88d 300e 	strb.w	r3, [sp, #14]
 8001688:	f88d 300f 	strb.w	r3, [sp, #15]
 800168c:	f88d 3010 	strb.w	r3, [sp, #16]
 8001690:	f88d 3011 	strb.w	r3, [sp, #17]
 8001694:	f88d 3012 	strb.w	r3, [sp, #18]
 8001698:	23fc      	movs	r3, #252	; 0xfc
 800169a:	f88d 3013 	strb.w	r3, [sp, #19]
 800169e:	9b05      	ldr	r3, [sp, #20]
 80016a0:	9602      	str	r6, [sp, #8]
 80016a2:	9300      	str	r3, [sp, #0]
 80016a4:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80016a8:	4628      	mov	r0, r5
 80016aa:	f003 fd0e 	bl	80050ca <mbed::CAN::write(mbed::CANMessage)>
 80016ae:	b006      	add	sp, #24
 80016b0:	bd70      	pop	{r4, r5, r6, pc}

080016b2 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>:
 80016b2:	b570      	push	{r4, r5, r6, lr}
 80016b4:	b086      	sub	sp, #24
 80016b6:	ac02      	add	r4, sp, #8
 80016b8:	4605      	mov	r5, r0
 80016ba:	4620      	mov	r0, r4
 80016bc:	460e      	mov	r6, r1
 80016be:	f7fe ff36 	bl	800052e <mbed::CANMessage::CANMessage()>
 80016c2:	2308      	movs	r3, #8
 80016c4:	f88d 3014 	strb.w	r3, [sp, #20]
 80016c8:	23ff      	movs	r3, #255	; 0xff
 80016ca:	f88d 300c 	strb.w	r3, [sp, #12]
 80016ce:	f88d 300d 	strb.w	r3, [sp, #13]
 80016d2:	f88d 300e 	strb.w	r3, [sp, #14]
 80016d6:	f88d 300f 	strb.w	r3, [sp, #15]
 80016da:	f88d 3010 	strb.w	r3, [sp, #16]
 80016de:	f88d 3011 	strb.w	r3, [sp, #17]
 80016e2:	f88d 3012 	strb.w	r3, [sp, #18]
 80016e6:	23fd      	movs	r3, #253	; 0xfd
 80016e8:	f88d 3013 	strb.w	r3, [sp, #19]
 80016ec:	9b05      	ldr	r3, [sp, #20]
 80016ee:	9602      	str	r6, [sp, #8]
 80016f0:	9300      	str	r3, [sp, #0]
 80016f2:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80016f6:	4628      	mov	r0, r5
 80016f8:	f003 fce7 	bl	80050ca <mbed::CAN::write(mbed::CANMessage)>
 80016fc:	b006      	add	sp, #24
 80016fe:	bd70      	pop	{r4, r5, r6, pc}

08001700 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>:
 8001700:	b570      	push	{r4, r5, r6, lr}
 8001702:	b086      	sub	sp, #24
 8001704:	ac02      	add	r4, sp, #8
 8001706:	4605      	mov	r5, r0
 8001708:	4620      	mov	r0, r4
 800170a:	460e      	mov	r6, r1
 800170c:	f7fe ff0f 	bl	800052e <mbed::CANMessage::CANMessage()>
 8001710:	2308      	movs	r3, #8
 8001712:	f88d 3014 	strb.w	r3, [sp, #20]
 8001716:	23ff      	movs	r3, #255	; 0xff
 8001718:	f88d 300c 	strb.w	r3, [sp, #12]
 800171c:	f88d 300d 	strb.w	r3, [sp, #13]
 8001720:	f88d 300e 	strb.w	r3, [sp, #14]
 8001724:	f88d 300f 	strb.w	r3, [sp, #15]
 8001728:	f88d 3010 	strb.w	r3, [sp, #16]
 800172c:	f88d 3011 	strb.w	r3, [sp, #17]
 8001730:	f88d 3012 	strb.w	r3, [sp, #18]
 8001734:	23fe      	movs	r3, #254	; 0xfe
 8001736:	f88d 3013 	strb.w	r3, [sp, #19]
 800173a:	9b05      	ldr	r3, [sp, #20]
 800173c:	9602      	str	r6, [sp, #8]
 800173e:	9300      	str	r3, [sp, #0]
 8001740:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8001744:	4628      	mov	r0, r5
 8001746:	f003 fcc0 	bl	80050ca <mbed::CAN::write(mbed::CANMessage)>
 800174a:	b006      	add	sp, #24
 800174c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001750 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>:
 8001750:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8001754:	4f33      	ldr	r7, [pc, #204]	; (8001824 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd4>)
 8001756:	4604      	mov	r4, r0
 8001758:	4638      	mov	r0, r7
 800175a:	461e      	mov	r6, r3
 800175c:	4615      	mov	r5, r2
 800175e:	f005 f8a1 	bl	80068a4 <fmaxf>
 8001762:	4a31      	ldr	r2, [pc, #196]	; (8001828 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd8>)
 8001764:	9201      	str	r2, [sp, #4]
 8001766:	4611      	mov	r1, r2
 8001768:	f005 f8ba 	bl	80068e0 <fminf>
 800176c:	4629      	mov	r1, r5
 800176e:	4683      	mov	r11, r0
 8001770:	482e      	ldr	r0, [pc, #184]	; (800182c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 8001772:	f005 f897 	bl	80068a4 <fmaxf>
 8001776:	492e      	ldr	r1, [pc, #184]	; (8001830 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 8001778:	f005 f8b2 	bl	80068e0 <fminf>
 800177c:	2500      	movs	r5, #0
 800177e:	4631      	mov	r1, r6
 8001780:	4e2c      	ldr	r6, [pc, #176]	; (8001834 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe4>)
 8001782:	4682      	mov	r10, r0
 8001784:	4628      	mov	r0, r5
 8001786:	f005 f88d 	bl	80068a4 <fmaxf>
 800178a:	4631      	mov	r1, r6
 800178c:	f005 f8a8 	bl	80068e0 <fminf>
 8001790:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001792:	4681      	mov	r9, r0
 8001794:	4628      	mov	r0, r5
 8001796:	f005 f885 	bl	80068a4 <fmaxf>
 800179a:	4927      	ldr	r1, [pc, #156]	; (8001838 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 800179c:	f005 f8a0 	bl	80068e0 <fminf>
 80017a0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80017a2:	4680      	mov	r8, r0
 80017a4:	4825      	ldr	r0, [pc, #148]	; (800183c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 80017a6:	f005 f87d 	bl	80068a4 <fmaxf>
 80017aa:	4925      	ldr	r1, [pc, #148]	; (8001840 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 80017ac:	f005 f898 	bl	80068e0 <fminf>
 80017b0:	9a01      	ldr	r2, [sp, #4]
 80017b2:	9000      	str	r0, [sp, #0]
 80017b4:	4639      	mov	r1, r7
 80017b6:	2310      	movs	r3, #16
 80017b8:	4658      	mov	r0, r11
 80017ba:	f000 f885 	bl	80018c8 <float_to_uint(float, float, float, int)>
 80017be:	230c      	movs	r3, #12
 80017c0:	4607      	mov	r7, r0
 80017c2:	4a1b      	ldr	r2, [pc, #108]	; (8001830 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 80017c4:	4919      	ldr	r1, [pc, #100]	; (800182c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 80017c6:	4650      	mov	r0, r10
 80017c8:	f000 f87e 	bl	80018c8 <float_to_uint(float, float, float, int)>
 80017cc:	4632      	mov	r2, r6
 80017ce:	4682      	mov	r10, r0
 80017d0:	4629      	mov	r1, r5
 80017d2:	230c      	movs	r3, #12
 80017d4:	4648      	mov	r0, r9
 80017d6:	f000 f877 	bl	80018c8 <float_to_uint(float, float, float, int)>
 80017da:	4629      	mov	r1, r5
 80017dc:	4606      	mov	r6, r0
 80017de:	230c      	movs	r3, #12
 80017e0:	4a15      	ldr	r2, [pc, #84]	; (8001838 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 80017e2:	4640      	mov	r0, r8
 80017e4:	f000 f870 	bl	80018c8 <float_to_uint(float, float, float, int)>
 80017e8:	230c      	movs	r3, #12
 80017ea:	4605      	mov	r5, r0
 80017ec:	4a14      	ldr	r2, [pc, #80]	; (8001840 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 80017ee:	4913      	ldr	r1, [pc, #76]	; (800183c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 80017f0:	9800      	ldr	r0, [sp, #0]
 80017f2:	f000 f869 	bl	80018c8 <float_to_uint(float, float, float, int)>
 80017f6:	123b      	asrs	r3, r7, #8
 80017f8:	7123      	strb	r3, [r4, #4]
 80017fa:	ea4f 132a 	mov.w	r3, r10, asr #4
 80017fe:	71a3      	strb	r3, [r4, #6]
 8001800:	1233      	asrs	r3, r6, #8
 8001802:	ea43 130a 	orr.w	r3, r3, r10, lsl #4
 8001806:	71e3      	strb	r3, [r4, #7]
 8001808:	112b      	asrs	r3, r5, #4
 800180a:	7263      	strb	r3, [r4, #9]
 800180c:	1203      	asrs	r3, r0, #8
 800180e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8001812:	72e0      	strb	r0, [r4, #11]
 8001814:	2001      	movs	r0, #1
 8001816:	7167      	strb	r7, [r4, #5]
 8001818:	7226      	strb	r6, [r4, #8]
 800181a:	72a3      	strb	r3, [r4, #10]
 800181c:	b003      	add	sp, #12
 800181e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8001822:	bf00      	nop
 8001824:	c2bf0000 	.word	0xc2bf0000
 8001828:	42bf0000 	.word	0x42bf0000
 800182c:	c1f00000 	.word	0xc1f00000
 8001830:	41f00000 	.word	0x41f00000
 8001834:	43fa0000 	.word	0x43fa0000
 8001838:	40a00000 	.word	0x40a00000
 800183c:	c1900000 	.word	0xc1900000
 8001840:	41900000 	.word	0x41900000

08001844 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>:
 8001844:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001846:	ac04      	add	r4, sp, #16
 8001848:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 800184c:	9a08      	ldr	r2, [sp, #32]
 800184e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001852:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8001856:	7011      	strb	r1, [r2, #0]
 8001858:	f89d 6005 	ldrb.w	r6, [sp, #5]
 800185c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8001860:	f89d 0006 	ldrb.w	r0, [sp, #6]
 8001864:	4912      	ldr	r1, [pc, #72]	; (80018b0 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x6c>)
 8001866:	111d      	asrs	r5, r3, #4
 8001868:	021c      	lsls	r4, r3, #8
 800186a:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800186e:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
 8001872:	ea45 1502 	orr.w	r5, r5, r2, lsl #4
 8001876:	431c      	orrs	r4, r3
 8001878:	4a0e      	ldr	r2, [pc, #56]	; (80018b4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x70>)
 800187a:	2310      	movs	r3, #16
 800187c:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
 8001880:	f000 f83d 	bl	80018fe <uint_to_float(int, float, float, int)>
 8001884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001886:	4a0c      	ldr	r2, [pc, #48]	; (80018b8 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x74>)
 8001888:	6018      	str	r0, [r3, #0]
 800188a:	490c      	ldr	r1, [pc, #48]	; (80018bc <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x78>)
 800188c:	230c      	movs	r3, #12
 800188e:	4628      	mov	r0, r5
 8001890:	f000 f835 	bl	80018fe <uint_to_float(int, float, float, int)>
 8001894:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001896:	4a0a      	ldr	r2, [pc, #40]	; (80018c0 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x7c>)
 8001898:	6018      	str	r0, [r3, #0]
 800189a:	490a      	ldr	r1, [pc, #40]	; (80018c4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x80>)
 800189c:	230c      	movs	r3, #12
 800189e:	4620      	mov	r0, r4
 80018a0:	f000 f82d 	bl	80018fe <uint_to_float(int, float, float, int)>
 80018a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80018a6:	6018      	str	r0, [r3, #0]
 80018a8:	2001      	movs	r0, #1
 80018aa:	b004      	add	sp, #16
 80018ac:	bd70      	pop	{r4, r5, r6, pc}
 80018ae:	bf00      	nop
 80018b0:	c2bf0000 	.word	0xc2bf0000
 80018b4:	42bf0000 	.word	0x42bf0000
 80018b8:	41f00000 	.word	0x41f00000
 80018bc:	c1f00000 	.word	0xc1f00000
 80018c0:	41900000 	.word	0x41900000
 80018c4:	c1900000 	.word	0xc1900000

080018c8 <float_to_uint(float, float, float, int)>:
 80018c8:	ee07 1a10 	vmov	s14, r1
 80018cc:	2101      	movs	r1, #1
 80018ce:	fa01 f303 	lsl.w	r3, r1, r3
 80018d2:	3b01      	subs	r3, #1
 80018d4:	ee07 3a90 	vmov	s15, r3
 80018d8:	ee06 0a90 	vmov	s13, r0
 80018dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018e0:	ee76 6ac7 	vsub.f32	s13, s13, s14
 80018e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80018e8:	ee06 2a90 	vmov	s13, r2
 80018ec:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80018f0:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80018f4:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80018f8:	ee17 0a90 	vmov	r0, s15
 80018fc:	4770      	bx	lr

080018fe <uint_to_float(int, float, float, int)>:
 80018fe:	ee06 1a90 	vmov	s13, r1
 8001902:	ee07 2a90 	vmov	s15, r2
 8001906:	ee37 7ae6 	vsub.f32	s14, s15, s13
 800190a:	ee07 0a90 	vmov	s15, r0
 800190e:	2201      	movs	r2, #1
 8001910:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001914:	fa02 f303 	lsl.w	r3, r2, r3
 8001918:	3b01      	subs	r3, #1
 800191a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800191e:	ee07 3a90 	vmov	s15, r3
 8001922:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001926:	ee87 6a27 	vdiv.f32	s12, s14, s15
 800192a:	ee76 7a26 	vadd.f32	s15, s12, s13
 800192e:	ee17 0a90 	vmov	r0, s15
 8001932:	4770      	bx	lr

08001934 <_gpio_init_out.part.1>:
 8001934:	b538      	push	{r3, r4, r5, lr}
 8001936:	4604      	mov	r4, r0
 8001938:	460d      	mov	r5, r1
 800193a:	6803      	ldr	r3, [r0, #0]
 800193c:	b15a      	cbz	r2, 8001956 <_gpio_init_out.part.1+0x22>
 800193e:	6882      	ldr	r2, [r0, #8]
 8001940:	6013      	str	r3, [r2, #0]
 8001942:	4620      	mov	r0, r4
 8001944:	2101      	movs	r1, #1
 8001946:	f001 fcef 	bl	8003328 <gpio_dir>
 800194a:	4629      	mov	r1, r5
 800194c:	4620      	mov	r0, r4
 800194e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001952:	f001 bce5 	b.w	8003320 <gpio_mode>
 8001956:	68c2      	ldr	r2, [r0, #12]
 8001958:	e7f2      	b.n	8001940 <_gpio_init_out.part.1+0xc>

0800195a <gpio_init_out_ex>:
 800195a:	b570      	push	{r4, r5, r6, lr}
 800195c:	460e      	mov	r6, r1
 800195e:	4604      	mov	r4, r0
 8001960:	4615      	mov	r5, r2
 8001962:	f001 fcbb 	bl	80032dc <gpio_init>
 8001966:	3601      	adds	r6, #1
 8001968:	d006      	beq.n	8001978 <gpio_init_out_ex+0x1e>
 800196a:	462a      	mov	r2, r5
 800196c:	4620      	mov	r0, r4
 800196e:	2100      	movs	r1, #0
 8001970:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001974:	f7ff bfde 	b.w	8001934 <_gpio_init_out.part.1>
 8001978:	bd70      	pop	{r4, r5, r6, pc}

0800197a <gpio_init_out>:
 800197a:	2200      	movs	r2, #0
 800197c:	f7ff bfed 	b.w	800195a <gpio_init_out_ex>

08001980 <get_us_ticker_data>:
 8001980:	4800      	ldr	r0, [pc, #0]	; (8001984 <get_us_ticker_data+0x4>)
 8001982:	4770      	bx	lr
 8001984:	08006dcc 	.word	0x08006dcc

08001988 <us_ticker_irq_handler>:
 8001988:	4801      	ldr	r0, [pc, #4]	; (8001990 <us_ticker_irq_handler+0x8>)
 800198a:	f000 b803 	b.w	8001994 <ticker_irq_handler>
 800198e:	bf00      	nop
 8001990:	08006dcc 	.word	0x08006dcc

08001994 <ticker_irq_handler>:
 8001994:	6803      	ldr	r3, [r0, #0]
 8001996:	b570      	push	{r4, r5, r6, lr}
 8001998:	68db      	ldr	r3, [r3, #12]
 800199a:	4604      	mov	r4, r0
 800199c:	4798      	blx	r3
 800199e:	6863      	ldr	r3, [r4, #4]
 80019a0:	685a      	ldr	r2, [r3, #4]
 80019a2:	6823      	ldr	r3, [r4, #0]
 80019a4:	b91a      	cbnz	r2, 80019ae <ticker_irq_handler+0x1a>
 80019a6:	689b      	ldr	r3, [r3, #8]
 80019a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80019ac:	4718      	bx	r3
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	6815      	ldr	r5, [r2, #0]
 80019b2:	4798      	blx	r3
 80019b4:	6863      	ldr	r3, [r4, #4]
 80019b6:	1a28      	subs	r0, r5, r0
 80019b8:	2800      	cmp	r0, #0
 80019ba:	685a      	ldr	r2, [r3, #4]
 80019bc:	dc07      	bgt.n	80019ce <ticker_irq_handler+0x3a>
 80019be:	6891      	ldr	r1, [r2, #8]
 80019c0:	6059      	str	r1, [r3, #4]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d0ea      	beq.n	800199e <ticker_irq_handler+0xa>
 80019c8:	6850      	ldr	r0, [r2, #4]
 80019ca:	4798      	blx	r3
 80019cc:	e7e7      	b.n	800199e <ticker_irq_handler+0xa>
 80019ce:	6823      	ldr	r3, [r4, #0]
 80019d0:	6810      	ldr	r0, [r2, #0]
 80019d2:	691b      	ldr	r3, [r3, #16]
 80019d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80019d8:	4718      	bx	r3

080019da <ticker_read>:
 80019da:	6803      	ldr	r3, [r0, #0]
 80019dc:	685b      	ldr	r3, [r3, #4]
 80019de:	4718      	bx	r3

080019e0 <pinmap_pinout>:
 80019e0:	b510      	push	{r4, lr}
 80019e2:	4604      	mov	r4, r0
 80019e4:	3001      	adds	r0, #1
 80019e6:	d10d      	bne.n	8001a04 <pinmap_pinout+0x24>
 80019e8:	bd10      	pop	{r4, pc}
 80019ea:	429c      	cmp	r4, r3
 80019ec:	d109      	bne.n	8001a02 <pinmap_pinout+0x22>
 80019ee:	4620      	mov	r0, r4
 80019f0:	6889      	ldr	r1, [r1, #8]
 80019f2:	f001 ffa3 	bl	800393c <pin_function>
 80019f6:	4620      	mov	r0, r4
 80019f8:	2100      	movs	r1, #0
 80019fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019fe:	f002 b81f 	b.w	8003a40 <pin_mode>
 8001a02:	310c      	adds	r1, #12
 8001a04:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001a08:	1c5a      	adds	r2, r3, #1
 8001a0a:	d1ee      	bne.n	80019ea <pinmap_pinout+0xa>
 8001a0c:	4802      	ldr	r0, [pc, #8]	; (8001a18 <pinmap_pinout+0x38>)
 8001a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a12:	f000 b86b 	b.w	8001aec <error>
 8001a16:	bf00      	nop
 8001a18:	08006e19 	.word	0x08006e19

08001a1c <pinmap_merge>:
 8001a1c:	4288      	cmp	r0, r1
 8001a1e:	b508      	push	{r3, lr}
 8001a20:	d008      	beq.n	8001a34 <pinmap_merge+0x18>
 8001a22:	1c43      	adds	r3, r0, #1
 8001a24:	d006      	beq.n	8001a34 <pinmap_merge+0x18>
 8001a26:	3101      	adds	r1, #1
 8001a28:	d006      	beq.n	8001a38 <pinmap_merge+0x1c>
 8001a2a:	4804      	ldr	r0, [pc, #16]	; (8001a3c <pinmap_merge+0x20>)
 8001a2c:	f000 f85e 	bl	8001aec <error>
 8001a30:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001a34:	4608      	mov	r0, r1
 8001a36:	bd08      	pop	{r3, pc}
 8001a38:	4601      	mov	r1, r0
 8001a3a:	e7fb      	b.n	8001a34 <pinmap_merge+0x18>
 8001a3c:	08006de8 	.word	0x08006de8

08001a40 <pinmap_find_peripheral>:
 8001a40:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001a44:	1c5a      	adds	r2, r3, #1
 8001a46:	d101      	bne.n	8001a4c <pinmap_find_peripheral+0xc>
 8001a48:	4618      	mov	r0, r3
 8001a4a:	4770      	bx	lr
 8001a4c:	4283      	cmp	r3, r0
 8001a4e:	d101      	bne.n	8001a54 <pinmap_find_peripheral+0x14>
 8001a50:	6848      	ldr	r0, [r1, #4]
 8001a52:	4770      	bx	lr
 8001a54:	310c      	adds	r1, #12
 8001a56:	e7f3      	b.n	8001a40 <pinmap_find_peripheral>

08001a58 <pinmap_peripheral>:
 8001a58:	1c42      	adds	r2, r0, #1
 8001a5a:	b510      	push	{r4, lr}
 8001a5c:	4604      	mov	r4, r0
 8001a5e:	d007      	beq.n	8001a70 <pinmap_peripheral+0x18>
 8001a60:	f7ff ffee 	bl	8001a40 <pinmap_find_peripheral>
 8001a64:	1c43      	adds	r3, r0, #1
 8001a66:	4604      	mov	r4, r0
 8001a68:	d102      	bne.n	8001a70 <pinmap_peripheral+0x18>
 8001a6a:	4802      	ldr	r0, [pc, #8]	; (8001a74 <pinmap_peripheral+0x1c>)
 8001a6c:	f000 f83e 	bl	8001aec <error>
 8001a70:	4620      	mov	r0, r4
 8001a72:	bd10      	pop	{r4, pc}
 8001a74:	08006df9 	.word	0x08006df9

08001a78 <mbed_die>:
 8001a78:	b508      	push	{r3, lr}
 8001a7a:	f000 f80d 	bl	8001a98 <core_util_critical_section_enter>
 8001a7e:	2096      	movs	r0, #150	; 0x96
 8001a80:	f003 fc46 	bl	8005310 <wait_ms>
 8001a84:	2096      	movs	r0, #150	; 0x96
 8001a86:	f003 fc43 	bl	8005310 <wait_ms>
 8001a8a:	e7f8      	b.n	8001a7e <mbed_die+0x6>

08001a8c <core_util_are_interrupts_enabled>:
 8001a8c:	f3ef 8010 	mrs	r0, PRIMASK
 8001a90:	43c0      	mvns	r0, r0
 8001a92:	f000 0001 	and.w	r0, r0, #1
 8001a96:	4770      	bx	lr

08001a98 <core_util_critical_section_enter>:
 8001a98:	b508      	push	{r3, lr}
 8001a9a:	f7ff fff7 	bl	8001a8c <core_util_are_interrupts_enabled>
 8001a9e:	b672      	cpsid	i
 8001aa0:	4b06      	ldr	r3, [pc, #24]	; (8001abc <core_util_critical_section_enter+0x24>)
 8001aa2:	681a      	ldr	r2, [r3, #0]
 8001aa4:	b922      	cbnz	r2, 8001ab0 <core_util_critical_section_enter+0x18>
 8001aa6:	f080 0001 	eor.w	r0, r0, #1
 8001aaa:	4a05      	ldr	r2, [pc, #20]	; (8001ac0 <core_util_critical_section_enter+0x28>)
 8001aac:	b2c0      	uxtb	r0, r0
 8001aae:	7010      	strb	r0, [r2, #0]
 8001ab0:	681a      	ldr	r2, [r3, #0]
 8001ab2:	681a      	ldr	r2, [r3, #0]
 8001ab4:	3201      	adds	r2, #1
 8001ab6:	601a      	str	r2, [r3, #0]
 8001ab8:	bd08      	pop	{r3, pc}
 8001aba:	bf00      	nop
 8001abc:	200009e8 	.word	0x200009e8
 8001ac0:	200009e4 	.word	0x200009e4

08001ac4 <core_util_critical_section_exit>:
 8001ac4:	b508      	push	{r3, lr}
 8001ac6:	4b07      	ldr	r3, [pc, #28]	; (8001ae4 <core_util_critical_section_exit+0x20>)
 8001ac8:	681a      	ldr	r2, [r3, #0]
 8001aca:	b152      	cbz	r2, 8001ae2 <core_util_critical_section_exit+0x1e>
 8001acc:	f7ff ffde 	bl	8001a8c <core_util_are_interrupts_enabled>
 8001ad0:	681a      	ldr	r2, [r3, #0]
 8001ad2:	3a01      	subs	r2, #1
 8001ad4:	601a      	str	r2, [r3, #0]
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	b91b      	cbnz	r3, 8001ae2 <core_util_critical_section_exit+0x1e>
 8001ada:	4b03      	ldr	r3, [pc, #12]	; (8001ae8 <core_util_critical_section_exit+0x24>)
 8001adc:	781b      	ldrb	r3, [r3, #0]
 8001ade:	b903      	cbnz	r3, 8001ae2 <core_util_critical_section_exit+0x1e>
 8001ae0:	b662      	cpsie	i
 8001ae2:	bd08      	pop	{r3, pc}
 8001ae4:	200009e8 	.word	0x200009e8
 8001ae8:	200009e4 	.word	0x200009e4

08001aec <error>:
 8001aec:	b40f      	push	{r0, r1, r2, r3}
 8001aee:	2001      	movs	r0, #1
 8001af0:	b508      	push	{r3, lr}
 8001af2:	f003 fd11 	bl	8005518 <__wrap_exit>

08001af6 <default_idle_hook>:
 8001af6:	f001 bc40 	b.w	800337a <hal_sleep>
	...

08001afc <rtos_idle_loop>:
 8001afc:	b508      	push	{r3, lr}
 8001afe:	4c02      	ldr	r4, [pc, #8]	; (8001b08 <rtos_idle_loop+0xc>)
 8001b00:	6823      	ldr	r3, [r4, #0]
 8001b02:	4798      	blx	r3
 8001b04:	e7fc      	b.n	8001b00 <rtos_idle_loop+0x4>
 8001b06:	bf00      	nop
 8001b08:	2000018c 	.word	0x2000018c

08001b0c <rt_put_prio>:
 8001b0c:	b530      	push	{r4, r5, lr}
 8001b0e:	7802      	ldrb	r2, [r0, #0]
 8001b10:	788c      	ldrb	r4, [r1, #2]
 8001b12:	6843      	ldr	r3, [r0, #4]
 8001b14:	3a01      	subs	r2, #1
 8001b16:	b2d2      	uxtb	r2, r2
 8001b18:	b113      	cbz	r3, 8001b20 <rt_put_prio+0x14>
 8001b1a:	789d      	ldrb	r5, [r3, #2]
 8001b1c:	42a5      	cmp	r5, r4
 8001b1e:	d207      	bcs.n	8001b30 <rt_put_prio+0x24>
 8001b20:	2a02      	cmp	r2, #2
 8001b22:	604b      	str	r3, [r1, #4]
 8001b24:	6041      	str	r1, [r0, #4]
 8001b26:	d806      	bhi.n	8001b36 <rt_put_prio+0x2a>
 8001b28:	b103      	cbz	r3, 8001b2c <rt_put_prio+0x20>
 8001b2a:	6099      	str	r1, [r3, #8]
 8001b2c:	6088      	str	r0, [r1, #8]
 8001b2e:	bd30      	pop	{r4, r5, pc}
 8001b30:	4618      	mov	r0, r3
 8001b32:	685b      	ldr	r3, [r3, #4]
 8001b34:	e7f0      	b.n	8001b18 <rt_put_prio+0xc>
 8001b36:	2300      	movs	r3, #0
 8001b38:	608b      	str	r3, [r1, #8]
 8001b3a:	bd30      	pop	{r4, r5, pc}

08001b3c <rt_get_first>:
 8001b3c:	7802      	ldrb	r2, [r0, #0]
 8001b3e:	6843      	ldr	r3, [r0, #4]
 8001b40:	3a01      	subs	r2, #1
 8001b42:	6859      	ldr	r1, [r3, #4]
 8001b44:	6041      	str	r1, [r0, #4]
 8001b46:	2a02      	cmp	r2, #2
 8001b48:	f04f 0200 	mov.w	r2, #0
 8001b4c:	d805      	bhi.n	8001b5a <rt_get_first+0x1e>
 8001b4e:	b109      	cbz	r1, 8001b54 <rt_get_first+0x18>
 8001b50:	6088      	str	r0, [r1, #8]
 8001b52:	605a      	str	r2, [r3, #4]
 8001b54:	609a      	str	r2, [r3, #8]
 8001b56:	4618      	mov	r0, r3
 8001b58:	4770      	bx	lr
 8001b5a:	605a      	str	r2, [r3, #4]
 8001b5c:	e7fb      	b.n	8001b56 <rt_get_first+0x1a>
	...

08001b60 <rt_put_rdy_first>:
 8001b60:	4b03      	ldr	r3, [pc, #12]	; (8001b70 <rt_put_rdy_first+0x10>)
 8001b62:	685a      	ldr	r2, [r3, #4]
 8001b64:	6042      	str	r2, [r0, #4]
 8001b66:	2200      	movs	r2, #0
 8001b68:	6082      	str	r2, [r0, #8]
 8001b6a:	6058      	str	r0, [r3, #4]
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop
 8001b70:	20001678 	.word	0x20001678

08001b74 <rt_put_dly>:
 8001b74:	4b10      	ldr	r3, [pc, #64]	; (8001bb8 <rt_put_dly+0x44>)
 8001b76:	68da      	ldr	r2, [r3, #12]
 8001b78:	b510      	push	{r4, lr}
 8001b7a:	b18a      	cbz	r2, 8001ba0 <rt_put_dly+0x2c>
 8001b7c:	8a9a      	ldrh	r2, [r3, #20]
 8001b7e:	68dc      	ldr	r4, [r3, #12]
 8001b80:	428a      	cmp	r2, r1
 8001b82:	d30c      	bcc.n	8001b9e <rt_put_dly+0x2a>
 8001b84:	60c4      	str	r4, [r0, #12]
 8001b86:	60d8      	str	r0, [r3, #12]
 8001b88:	68c4      	ldr	r4, [r0, #12]
 8001b8a:	6103      	str	r3, [r0, #16]
 8001b8c:	b104      	cbz	r4, 8001b90 <rt_put_dly+0x1c>
 8001b8e:	6120      	str	r0, [r4, #16]
 8001b90:	1a52      	subs	r2, r2, r1
 8001b92:	b292      	uxth	r2, r2
 8001b94:	8282      	strh	r2, [r0, #20]
 8001b96:	8a99      	ldrh	r1, [r3, #20]
 8001b98:	1a8a      	subs	r2, r1, r2
 8001b9a:	829a      	strh	r2, [r3, #20]
 8001b9c:	bd10      	pop	{r4, pc}
 8001b9e:	b93c      	cbnz	r4, 8001bb0 <rt_put_dly+0x3c>
 8001ba0:	2400      	movs	r4, #0
 8001ba2:	1a8a      	subs	r2, r1, r2
 8001ba4:	60c4      	str	r4, [r0, #12]
 8001ba6:	60d8      	str	r0, [r3, #12]
 8001ba8:	6103      	str	r3, [r0, #16]
 8001baa:	829a      	strh	r2, [r3, #20]
 8001bac:	8284      	strh	r4, [r0, #20]
 8001bae:	bd10      	pop	{r4, pc}
 8001bb0:	8aa3      	ldrh	r3, [r4, #20]
 8001bb2:	441a      	add	r2, r3
 8001bb4:	4623      	mov	r3, r4
 8001bb6:	e7e2      	b.n	8001b7e <rt_put_dly+0xa>
 8001bb8:	20001690 	.word	0x20001690

08001bbc <rt_dec_dly>:
 8001bbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001bc0:	4d17      	ldr	r5, [pc, #92]	; (8001c20 <rt_dec_dly+0x64>)
 8001bc2:	68eb      	ldr	r3, [r5, #12]
 8001bc4:	b153      	cbz	r3, 8001bdc <rt_dec_dly+0x20>
 8001bc6:	8aab      	ldrh	r3, [r5, #20]
 8001bc8:	4f16      	ldr	r7, [pc, #88]	; (8001c24 <rt_dec_dly+0x68>)
 8001bca:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001c28 <rt_dec_dly+0x6c>
 8001bce:	3b01      	subs	r3, #1
 8001bd0:	82ab      	strh	r3, [r5, #20]
 8001bd2:	2600      	movs	r6, #0
 8001bd4:	8aaa      	ldrh	r2, [r5, #20]
 8001bd6:	b90a      	cbnz	r2, 8001bdc <rt_dec_dly+0x20>
 8001bd8:	68ec      	ldr	r4, [r5, #12]
 8001bda:	b90c      	cbnz	r4, 8001be0 <rt_dec_dly+0x24>
 8001bdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001be0:	68a3      	ldr	r3, [r4, #8]
 8001be2:	b133      	cbz	r3, 8001bf2 <rt_dec_dly+0x36>
 8001be4:	6861      	ldr	r1, [r4, #4]
 8001be6:	6059      	str	r1, [r3, #4]
 8001be8:	6861      	ldr	r1, [r4, #4]
 8001bea:	b109      	cbz	r1, 8001bf0 <rt_dec_dly+0x34>
 8001bec:	608b      	str	r3, [r1, #8]
 8001bee:	6062      	str	r2, [r4, #4]
 8001bf0:	60a6      	str	r6, [r4, #8]
 8001bf2:	4621      	mov	r1, r4
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	f7ff ff89 	bl	8001b0c <rt_put_prio>
 8001bfa:	8aa3      	ldrh	r3, [r4, #20]
 8001bfc:	82ab      	strh	r3, [r5, #20]
 8001bfe:	7863      	ldrb	r3, [r4, #1]
 8001c00:	2b04      	cmp	r3, #4
 8001c02:	bf01      	itttt	eq
 8001c04:	f8d8 3000 	ldreq.w	r3, [r8]
 8001c08:	8ae2      	ldrheq	r2, [r4, #22]
 8001c0a:	189b      	addeq	r3, r3, r2
 8001c0c:	82a3      	strheq	r3, [r4, #20]
 8001c0e:	2301      	movs	r3, #1
 8001c10:	7063      	strb	r3, [r4, #1]
 8001c12:	68e3      	ldr	r3, [r4, #12]
 8001c14:	60eb      	str	r3, [r5, #12]
 8001c16:	b10b      	cbz	r3, 8001c1c <rt_dec_dly+0x60>
 8001c18:	611d      	str	r5, [r3, #16]
 8001c1a:	60e6      	str	r6, [r4, #12]
 8001c1c:	6126      	str	r6, [r4, #16]
 8001c1e:	e7d9      	b.n	8001bd4 <rt_dec_dly+0x18>
 8001c20:	20001690 	.word	0x20001690
 8001c24:	20001678 	.word	0x20001678
 8001c28:	20001eb4 	.word	0x20001eb4

08001c2c <rt_rmv_list>:
 8001c2c:	6883      	ldr	r3, [r0, #8]
 8001c2e:	b12b      	cbz	r3, 8001c3c <rt_rmv_list+0x10>
 8001c30:	6842      	ldr	r2, [r0, #4]
 8001c32:	605a      	str	r2, [r3, #4]
 8001c34:	6842      	ldr	r2, [r0, #4]
 8001c36:	b15a      	cbz	r2, 8001c50 <rt_rmv_list+0x24>
 8001c38:	6093      	str	r3, [r2, #8]
 8001c3a:	4770      	bx	lr
 8001c3c:	4b05      	ldr	r3, [pc, #20]	; (8001c54 <rt_rmv_list+0x28>)
 8001c3e:	685a      	ldr	r2, [r3, #4]
 8001c40:	4290      	cmp	r0, r2
 8001c42:	d102      	bne.n	8001c4a <rt_rmv_list+0x1e>
 8001c44:	6842      	ldr	r2, [r0, #4]
 8001c46:	605a      	str	r2, [r3, #4]
 8001c48:	4770      	bx	lr
 8001c4a:	4613      	mov	r3, r2
 8001c4c:	2a00      	cmp	r2, #0
 8001c4e:	d1f6      	bne.n	8001c3e <rt_rmv_list+0x12>
 8001c50:	4770      	bx	lr
 8001c52:	bf00      	nop
 8001c54:	20001678 	.word	0x20001678

08001c58 <rt_resort_prio>:
 8001c58:	b510      	push	{r4, lr}
 8001c5a:	6884      	ldr	r4, [r0, #8]
 8001c5c:	4601      	mov	r1, r0
 8001c5e:	b92c      	cbnz	r4, 8001c6c <rt_resort_prio+0x14>
 8001c60:	7843      	ldrb	r3, [r0, #1]
 8001c62:	2b01      	cmp	r3, #1
 8001c64:	d10d      	bne.n	8001c82 <rt_resort_prio+0x2a>
 8001c66:	4c07      	ldr	r4, [pc, #28]	; (8001c84 <rt_resort_prio+0x2c>)
 8001c68:	e003      	b.n	8001c72 <rt_resort_prio+0x1a>
 8001c6a:	68a4      	ldr	r4, [r4, #8]
 8001c6c:	7823      	ldrb	r3, [r4, #0]
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	d0fb      	beq.n	8001c6a <rt_resort_prio+0x12>
 8001c72:	4608      	mov	r0, r1
 8001c74:	f7ff ffda 	bl	8001c2c <rt_rmv_list>
 8001c78:	4620      	mov	r0, r4
 8001c7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001c7e:	f7ff bf45 	b.w	8001b0c <rt_put_prio>
 8001c82:	bd10      	pop	{r4, pc}
 8001c84:	20001678 	.word	0x20001678

08001c88 <rt_rmv_dly>:
 8001c88:	6903      	ldr	r3, [r0, #16]
 8001c8a:	b510      	push	{r4, lr}
 8001c8c:	b163      	cbz	r3, 8001ca8 <rt_rmv_dly+0x20>
 8001c8e:	68c2      	ldr	r2, [r0, #12]
 8001c90:	60da      	str	r2, [r3, #12]
 8001c92:	68c2      	ldr	r2, [r0, #12]
 8001c94:	b14a      	cbz	r2, 8001caa <rt_rmv_dly+0x22>
 8001c96:	8a99      	ldrh	r1, [r3, #20]
 8001c98:	8a84      	ldrh	r4, [r0, #20]
 8001c9a:	4421      	add	r1, r4
 8001c9c:	8299      	strh	r1, [r3, #20]
 8001c9e:	6113      	str	r3, [r2, #16]
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	60c3      	str	r3, [r0, #12]
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	6103      	str	r3, [r0, #16]
 8001ca8:	bd10      	pop	{r4, pc}
 8001caa:	829a      	strh	r2, [r3, #20]
 8001cac:	e7fa      	b.n	8001ca4 <rt_rmv_dly+0x1c>
	...

08001cb0 <rt_psq_enq>:
 8001cb0:	b470      	push	{r4, r5, r6}
 8001cb2:	4b11      	ldr	r3, [pc, #68]	; (8001cf8 <rt_psq_enq+0x48>)
 8001cb4:	78dd      	ldrb	r5, [r3, #3]
 8001cb6:	f3ef 8610 	mrs	r6, PRIMASK
 8001cba:	f3ef 8210 	mrs	r2, PRIMASK
 8001cbe:	b672      	cpsid	i
 8001cc0:	789a      	ldrb	r2, [r3, #2]
 8001cc2:	4295      	cmp	r5, r2
 8001cc4:	d911      	bls.n	8001cea <rt_psq_enq+0x3a>
 8001cc6:	3201      	adds	r2, #1
 8001cc8:	709a      	strb	r2, [r3, #2]
 8001cca:	781a      	ldrb	r2, [r3, #0]
 8001ccc:	1c54      	adds	r4, r2, #1
 8001cce:	42a5      	cmp	r5, r4
 8001cd0:	bf08      	it	eq
 8001cd2:	2400      	moveq	r4, #0
 8001cd4:	701c      	strb	r4, [r3, #0]
 8001cd6:	b906      	cbnz	r6, 8001cda <rt_psq_enq+0x2a>
 8001cd8:	b662      	cpsie	i
 8001cda:	4295      	cmp	r5, r2
 8001cdc:	d907      	bls.n	8001cee <rt_psq_enq+0x3e>
 8001cde:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001ce2:	bc70      	pop	{r4, r5, r6}
 8001ce4:	6058      	str	r0, [r3, #4]
 8001ce6:	6099      	str	r1, [r3, #8]
 8001ce8:	4770      	bx	lr
 8001cea:	2e00      	cmp	r6, #0
 8001cec:	d0f4      	beq.n	8001cd8 <rt_psq_enq+0x28>
 8001cee:	2002      	movs	r0, #2
 8001cf0:	bc70      	pop	{r4, r5, r6}
 8001cf2:	f000 b829 	b.w	8001d48 <os_error>
 8001cf6:	bf00      	nop
 8001cf8:	200018d4 	.word	0x200018d4

08001cfc <pre_main>:
 8001cfc:	b508      	push	{r3, lr}
 8001cfe:	480b      	ldr	r0, [pc, #44]	; (8001d2c <pre_main+0x30>)
 8001d00:	f000 fcb2 	bl	8002668 <osMutexCreate>
 8001d04:	4b0a      	ldr	r3, [pc, #40]	; (8001d30 <pre_main+0x34>)
 8001d06:	6018      	str	r0, [r3, #0]
 8001d08:	480a      	ldr	r0, [pc, #40]	; (8001d34 <pre_main+0x38>)
 8001d0a:	f000 fcad 	bl	8002668 <osMutexCreate>
 8001d0e:	4b0a      	ldr	r3, [pc, #40]	; (8001d38 <pre_main+0x3c>)
 8001d10:	6018      	str	r0, [r3, #0]
 8001d12:	480a      	ldr	r0, [pc, #40]	; (8001d3c <pre_main+0x40>)
 8001d14:	f000 fca8 	bl	8002668 <osMutexCreate>
 8001d18:	4b09      	ldr	r3, [pc, #36]	; (8001d40 <pre_main+0x44>)
 8001d1a:	6018      	str	r0, [r3, #0]
 8001d1c:	f004 f87e 	bl	8005e1c <__libc_init_array>
 8001d20:	2100      	movs	r1, #0
 8001d22:	4608      	mov	r0, r1
 8001d24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d28:	f003 bbb9 	b.w	800549e <__wrap_main>
 8001d2c:	08006e78 	.word	0x08006e78
 8001d30:	2000195c 	.word	0x2000195c
 8001d34:	08006e74 	.word	0x08006e74
 8001d38:	200009f4 	.word	0x200009f4
 8001d3c:	08006e70 	.word	0x08006e70
 8001d40:	200009ec 	.word	0x200009ec

08001d44 <os_idle_demon>:
 8001d44:	f7ff beda 	b.w	8001afc <rtos_idle_loop>

08001d48 <os_error>:
 8001d48:	b510      	push	{r4, lr}
 8001d4a:	4604      	mov	r4, r0
 8001d4c:	f000 fbec 	bl	8002528 <svcThreadGetId>
 8001d50:	4621      	mov	r1, r4
 8001d52:	4602      	mov	r2, r0
 8001d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d58:	4801      	ldr	r0, [pc, #4]	; (8001d60 <os_error+0x18>)
 8001d5a:	f7ff bec7 	b.w	8001aec <error>
 8001d5e:	bf00      	nop
 8001d60:	08006e38 	.word	0x08006e38

08001d64 <sysThreadTerminate>:
 8001d64:	f003 bbf6 	b.w	8005554 <thread_terminate_hook>

08001d68 <set_stack_heap>:
 8001d68:	4a0b      	ldr	r2, [pc, #44]	; (8001d98 <set_stack_heap+0x30>)
 8001d6a:	4b0c      	ldr	r3, [pc, #48]	; (8001d9c <set_stack_heap+0x34>)
 8001d6c:	480c      	ldr	r0, [pc, #48]	; (8001da0 <set_stack_heap+0x38>)
 8001d6e:	b430      	push	{r4, r5}
 8001d70:	601a      	str	r2, [r3, #0]
 8001d72:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001d76:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8001d7a:	f5b3 7fe0 	cmp.w	r3, #448	; 0x1c0
 8001d7e:	4619      	mov	r1, r3
 8001d80:	bf28      	it	cs
 8001d82:	f44f 71e0 	movcs.w	r1, #448	; 0x1c0
 8001d86:	4d07      	ldr	r5, [pc, #28]	; (8001da4 <set_stack_heap+0x3c>)
 8001d88:	4c07      	ldr	r4, [pc, #28]	; (8001da8 <set_stack_heap+0x40>)
 8001d8a:	6001      	str	r1, [r0, #0]
 8001d8c:	1a5b      	subs	r3, r3, r1
 8001d8e:	441a      	add	r2, r3
 8001d90:	602a      	str	r2, [r5, #0]
 8001d92:	6023      	str	r3, [r4, #0]
 8001d94:	bc30      	pop	{r4, r5}
 8001d96:	4770      	bx	lr
 8001d98:	20001f24 	.word	0x20001f24
 8001d9c:	20001668 	.word	0x20001668
 8001da0:	200009f8 	.word	0x200009f8
 8001da4:	200009fc 	.word	0x200009fc
 8001da8:	20001664 	.word	0x20001664

08001dac <software_init_hook_rtos>:
 8001dac:	f000 fd40 	bl	8002830 <osKernelInitialize>
 8001db0:	f7ff ffda 	bl	8001d68 <set_stack_heap>
 8001db4:	4803      	ldr	r0, [pc, #12]	; (8001dc4 <software_init_hook_rtos+0x18>)
 8001db6:	2100      	movs	r1, #0
 8001db8:	f000 fcde 	bl	8002778 <osThreadCreate>
 8001dbc:	f000 fb36 	bl	800242c <osKernelStart>
 8001dc0:	e7fe      	b.n	8001dc0 <software_init_hook_rtos+0x14>
 8001dc2:	0000      	.short	0x0000
 8001dc4:	20000190 	.word	0x20000190

08001dc8 <__rtos_malloc_lock>:
 8001dc8:	4b02      	ldr	r3, [pc, #8]	; (8001dd4 <__rtos_malloc_lock+0xc>)
 8001dca:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001dce:	6818      	ldr	r0, [r3, #0]
 8001dd0:	f000 bc68 	b.w	80026a4 <osMutexWait>
 8001dd4:	200009f4 	.word	0x200009f4

08001dd8 <__rtos_malloc_unlock>:
 8001dd8:	4b01      	ldr	r3, [pc, #4]	; (8001de0 <__rtos_malloc_unlock+0x8>)
 8001dda:	6818      	ldr	r0, [r3, #0]
 8001ddc:	f000 bc8a 	b.w	80026f4 <osMutexRelease>
 8001de0:	200009f4 	.word	0x200009f4

08001de4 <rt_init_stack>:
 8001de4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001de6:	089b      	lsrs	r3, r3, #2
 8001de8:	bf04      	itt	eq
 8001dea:	4b22      	ldreq	r3, [pc, #136]	; (8001e74 <rt_init_stack+0x90>)
 8001dec:	881b      	ldrheq	r3, [r3, #0]
 8001dee:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001df0:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001df2:	bf08      	it	eq
 8001df4:	089b      	lsreq	r3, r3, #2
 8001df6:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001dfa:	0754      	lsls	r4, r2, #29
 8001dfc:	bf48      	it	mi
 8001dfe:	3a04      	submi	r2, #4
 8001e00:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001e04:	e902 0042 	stmdb	r2, {r1, r6}
 8001e08:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001e0c:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001e10:	f1a2 070c 	sub.w	r7, r2, #12
 8001e14:	f04f 0e00 	mov.w	lr, #0
 8001e18:	f846 ef04 	str.w	lr, [r6, #4]!
 8001e1c:	42be      	cmp	r6, r7
 8001e1e:	d1fb      	bne.n	8001e18 <rt_init_stack+0x34>
 8001e20:	69c6      	ldr	r6, [r0, #28]
 8001e22:	f842 6c20 	str.w	r6, [r2, #-32]
 8001e26:	6341      	str	r1, [r0, #52]	; 0x34
 8001e28:	4912      	ldr	r1, [pc, #72]	; (8001e74 <rt_init_stack+0x90>)
 8001e2a:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001e2c:	6809      	ldr	r1, [r1, #0]
 8001e2e:	00c9      	lsls	r1, r1, #3
 8001e30:	d517      	bpl.n	8001e62 <rt_init_stack+0x7e>
 8001e32:	2b11      	cmp	r3, #17
 8001e34:	d915      	bls.n	8001e62 <rt_init_stack+0x7e>
 8001e36:	3b10      	subs	r3, #16
 8001e38:	f06f 0107 	mvn.w	r1, #7
 8001e3c:	085b      	lsrs	r3, r3, #1
 8001e3e:	434b      	muls	r3, r1
 8001e40:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001e44:	440a      	add	r2, r1
 8001e46:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001e4a:	4621      	mov	r1, r4
 8001e4c:	4291      	cmp	r1, r2
 8001e4e:	d10b      	bne.n	8001e68 <rt_init_stack+0x84>
 8001e50:	3308      	adds	r3, #8
 8001e52:	441c      	add	r4, r3
 8001e54:	1f23      	subs	r3, r4, #4
 8001e56:	429d      	cmp	r5, r3
 8001e58:	bf3c      	itt	cc
 8001e5a:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001e5e:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001e62:	4b05      	ldr	r3, [pc, #20]	; (8001e78 <rt_init_stack+0x94>)
 8001e64:	602b      	str	r3, [r5, #0]
 8001e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e68:	f841 0c04 	str.w	r0, [r1, #-4]
 8001e6c:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001e70:	e7ec      	b.n	8001e4c <rt_init_stack+0x68>
 8001e72:	bf00      	nop
 8001e74:	08006e80 	.word	0x08006e80
 8001e78:	e25a2ea5 	.word	0xe25a2ea5

08001e7c <rt_ret_val>:
 8001e7c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001e80:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001e82:	b112      	cbz	r2, 8001e8a <rt_ret_val+0xe>
 8001e84:	3360      	adds	r3, #96	; 0x60
 8001e86:	6019      	str	r1, [r3, #0]
 8001e88:	4770      	bx	lr
 8001e8a:	3320      	adds	r3, #32
 8001e8c:	e7fb      	b.n	8001e86 <rt_ret_val+0xa>

08001e8e <rt_ret_val2>:
 8001e8e:	b510      	push	{r4, lr}
 8001e90:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001e94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001e96:	b11c      	cbz	r4, 8001ea0 <rt_ret_val2+0x12>
 8001e98:	3360      	adds	r3, #96	; 0x60
 8001e9a:	e883 0006 	stmia.w	r3, {r1, r2}
 8001e9e:	bd10      	pop	{r4, pc}
 8001ea0:	3320      	adds	r3, #32
 8001ea2:	e7fa      	b.n	8001e9a <rt_ret_val2+0xc>

08001ea4 <rt_psh_req>:
 8001ea4:	4b05      	ldr	r3, [pc, #20]	; (8001ebc <rt_psh_req+0x18>)
 8001ea6:	781b      	ldrb	r3, [r3, #0]
 8001ea8:	b923      	cbnz	r3, 8001eb4 <rt_psh_req+0x10>
 8001eaa:	4b05      	ldr	r3, [pc, #20]	; (8001ec0 <rt_psh_req+0x1c>)
 8001eac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001eb0:	601a      	str	r2, [r3, #0]
 8001eb2:	4770      	bx	lr
 8001eb4:	4b03      	ldr	r3, [pc, #12]	; (8001ec4 <rt_psh_req+0x20>)
 8001eb6:	2201      	movs	r2, #1
 8001eb8:	701a      	strb	r2, [r3, #0]
 8001eba:	4770      	bx	lr
 8001ebc:	20001250 	.word	0x20001250
 8001ec0:	e000ed04 	.word	0xe000ed04
 8001ec4:	20001251 	.word	0x20001251

08001ec8 <rt_pop_req>:
 8001ec8:	b538      	push	{r3, r4, r5, lr}
 8001eca:	4b1a      	ldr	r3, [pc, #104]	; (8001f34 <rt_pop_req+0x6c>)
 8001ecc:	4c1a      	ldr	r4, [pc, #104]	; (8001f38 <rt_pop_req+0x70>)
 8001ece:	6818      	ldr	r0, [r3, #0]
 8001ed0:	2301      	movs	r3, #1
 8001ed2:	7043      	strb	r3, [r0, #1]
 8001ed4:	f7ff fe44 	bl	8001b60 <rt_put_rdy_first>
 8001ed8:	7865      	ldrb	r5, [r4, #1]
 8001eda:	78a3      	ldrb	r3, [r4, #2]
 8001edc:	b93b      	cbnz	r3, 8001eee <rt_pop_req+0x26>
 8001ede:	4817      	ldr	r0, [pc, #92]	; (8001f3c <rt_pop_req+0x74>)
 8001ee0:	7065      	strb	r5, [r4, #1]
 8001ee2:	f7ff fe2b 	bl	8001b3c <rt_get_first>
 8001ee6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001eea:	f000 bd7b 	b.w	80029e4 <rt_switch_req>
 8001eee:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001ef2:	6858      	ldr	r0, [r3, #4]
 8001ef4:	7802      	ldrb	r2, [r0, #0]
 8001ef6:	b99a      	cbnz	r2, 8001f20 <rt_pop_req+0x58>
 8001ef8:	8919      	ldrh	r1, [r3, #8]
 8001efa:	f000 f9bb 	bl	8002274 <rt_evt_psh>
 8001efe:	78e3      	ldrb	r3, [r4, #3]
 8001f00:	3501      	adds	r5, #1
 8001f02:	429d      	cmp	r5, r3
 8001f04:	bf08      	it	eq
 8001f06:	2500      	moveq	r5, #0
 8001f08:	f3ef 8310 	mrs	r3, PRIMASK
 8001f0c:	f3ef 8210 	mrs	r2, PRIMASK
 8001f10:	b672      	cpsid	i
 8001f12:	78a2      	ldrb	r2, [r4, #2]
 8001f14:	3a01      	subs	r2, #1
 8001f16:	70a2      	strb	r2, [r4, #2]
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d1de      	bne.n	8001eda <rt_pop_req+0x12>
 8001f1c:	b662      	cpsie	i
 8001f1e:	e7dc      	b.n	8001eda <rt_pop_req+0x12>
 8001f20:	2a01      	cmp	r2, #1
 8001f22:	d103      	bne.n	8001f2c <rt_pop_req+0x64>
 8001f24:	6899      	ldr	r1, [r3, #8]
 8001f26:	f000 f933 	bl	8002190 <rt_mbx_psh>
 8001f2a:	e7e8      	b.n	8001efe <rt_pop_req+0x36>
 8001f2c:	f001 f8b8 	bl	80030a0 <rt_sem_psh>
 8001f30:	e7e5      	b.n	8001efe <rt_pop_req+0x36>
 8001f32:	bf00      	nop
 8001f34:	20001e6c 	.word	0x20001e6c
 8001f38:	200018d4 	.word	0x200018d4
 8001f3c:	20001678 	.word	0x20001678

08001f40 <os_tick_init>:
 8001f40:	4b08      	ldr	r3, [pc, #32]	; (8001f64 <os_tick_init+0x24>)
 8001f42:	681a      	ldr	r2, [r3, #0]
 8001f44:	4b08      	ldr	r3, [pc, #32]	; (8001f68 <os_tick_init+0x28>)
 8001f46:	601a      	str	r2, [r3, #0]
 8001f48:	2200      	movs	r2, #0
 8001f4a:	605a      	str	r2, [r3, #4]
 8001f4c:	2207      	movs	r2, #7
 8001f4e:	f843 2c04 	str.w	r2, [r3, #-4]
 8001f52:	4a06      	ldr	r2, [pc, #24]	; (8001f6c <os_tick_init+0x2c>)
 8001f54:	6813      	ldr	r3, [r2, #0]
 8001f56:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001f60:	4770      	bx	lr
 8001f62:	bf00      	nop
 8001f64:	08006e98 	.word	0x08006e98
 8001f68:	e000e014 	.word	0xe000e014
 8001f6c:	e000ed20 	.word	0xe000ed20

08001f70 <os_tick_irqack>:
 8001f70:	4770      	bx	lr
	...

08001f74 <rt_systick>:
 8001f74:	b508      	push	{r3, lr}
 8001f76:	4b0b      	ldr	r3, [pc, #44]	; (8001fa4 <rt_systick+0x30>)
 8001f78:	6818      	ldr	r0, [r3, #0]
 8001f7a:	2301      	movs	r3, #1
 8001f7c:	7043      	strb	r3, [r0, #1]
 8001f7e:	f7ff fdef 	bl	8001b60 <rt_put_rdy_first>
 8001f82:	f000 f9ad 	bl	80022e0 <rt_chk_robin>
 8001f86:	4a08      	ldr	r2, [pc, #32]	; (8001fa8 <rt_systick+0x34>)
 8001f88:	6813      	ldr	r3, [r2, #0]
 8001f8a:	3301      	adds	r3, #1
 8001f8c:	6013      	str	r3, [r2, #0]
 8001f8e:	f7ff fe15 	bl	8001bbc <rt_dec_dly>
 8001f92:	f000 fcaf 	bl	80028f4 <sysTimerTick>
 8001f96:	4805      	ldr	r0, [pc, #20]	; (8001fac <rt_systick+0x38>)
 8001f98:	f7ff fdd0 	bl	8001b3c <rt_get_first>
 8001f9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001fa0:	f000 bd20 	b.w	80029e4 <rt_switch_req>
 8001fa4:	20001e6c 	.word	0x20001e6c
 8001fa8:	20001eb4 	.word	0x20001eb4
 8001fac:	20001678 	.word	0x20001678

08001fb0 <rt_stk_check>:
 8001fb0:	4b06      	ldr	r3, [pc, #24]	; (8001fcc <rt_stk_check+0x1c>)
 8001fb2:	681a      	ldr	r2, [r3, #0]
 8001fb4:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001fb6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001fb8:	4293      	cmp	r3, r2
 8001fba:	d803      	bhi.n	8001fc4 <rt_stk_check+0x14>
 8001fbc:	681a      	ldr	r2, [r3, #0]
 8001fbe:	4b04      	ldr	r3, [pc, #16]	; (8001fd0 <rt_stk_check+0x20>)
 8001fc0:	429a      	cmp	r2, r3
 8001fc2:	d002      	beq.n	8001fca <rt_stk_check+0x1a>
 8001fc4:	2001      	movs	r0, #1
 8001fc6:	f7ff bebf 	b.w	8001d48 <os_error>
 8001fca:	4770      	bx	lr
 8001fcc:	20001e6c 	.word	0x20001e6c
 8001fd0:	e25a2ea5 	.word	0xe25a2ea5

08001fd4 <_init_box>:
 8001fd4:	2a00      	cmp	r2, #0
 8001fd6:	bfbb      	ittet	lt
 8001fd8:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001fdc:	3207      	addlt	r2, #7
 8001fde:	3203      	addge	r2, #3
 8001fe0:	f022 0207 	biclt.w	r2, r2, #7
 8001fe4:	bfa8      	it	ge
 8001fe6:	f022 0203 	bicge.w	r2, r2, #3
 8001fea:	b510      	push	{r4, lr}
 8001fec:	bfb4      	ite	lt
 8001fee:	2310      	movlt	r3, #16
 8001ff0:	230c      	movge	r3, #12
 8001ff2:	b192      	cbz	r2, 800201a <_init_box+0x46>
 8001ff4:	18d4      	adds	r4, r2, r3
 8001ff6:	428c      	cmp	r4, r1
 8001ff8:	d80f      	bhi.n	800201a <_init_box+0x46>
 8001ffa:	4401      	add	r1, r0
 8001ffc:	4403      	add	r3, r0
 8001ffe:	4254      	negs	r4, r2
 8002000:	6041      	str	r1, [r0, #4]
 8002002:	6003      	str	r3, [r0, #0]
 8002004:	6082      	str	r2, [r0, #8]
 8002006:	4421      	add	r1, r4
 8002008:	1898      	adds	r0, r3, r2
 800200a:	4281      	cmp	r1, r0
 800200c:	d302      	bcc.n	8002014 <_init_box+0x40>
 800200e:	5100      	str	r0, [r0, r4]
 8002010:	4603      	mov	r3, r0
 8002012:	e7f9      	b.n	8002008 <_init_box+0x34>
 8002014:	2000      	movs	r0, #0
 8002016:	6018      	str	r0, [r3, #0]
 8002018:	bd10      	pop	{r4, pc}
 800201a:	2001      	movs	r0, #1
 800201c:	bd10      	pop	{r4, pc}

0800201e <rt_alloc_box>:
 800201e:	f3ef 8310 	mrs	r3, PRIMASK
 8002022:	b672      	cpsid	i
 8002024:	6802      	ldr	r2, [r0, #0]
 8002026:	f003 0301 	and.w	r3, r3, #1
 800202a:	b10a      	cbz	r2, 8002030 <rt_alloc_box+0x12>
 800202c:	6811      	ldr	r1, [r2, #0]
 800202e:	6001      	str	r1, [r0, #0]
 8002030:	b903      	cbnz	r3, 8002034 <rt_alloc_box+0x16>
 8002032:	b662      	cpsie	i
 8002034:	4610      	mov	r0, r2
 8002036:	4770      	bx	lr

08002038 <rt_free_box>:
 8002038:	4281      	cmp	r1, r0
 800203a:	d30d      	bcc.n	8002058 <rt_free_box+0x20>
 800203c:	6843      	ldr	r3, [r0, #4]
 800203e:	4299      	cmp	r1, r3
 8002040:	d20a      	bcs.n	8002058 <rt_free_box+0x20>
 8002042:	f3ef 8310 	mrs	r3, PRIMASK
 8002046:	b672      	cpsid	i
 8002048:	6802      	ldr	r2, [r0, #0]
 800204a:	600a      	str	r2, [r1, #0]
 800204c:	6001      	str	r1, [r0, #0]
 800204e:	f013 0001 	ands.w	r0, r3, #1
 8002052:	d103      	bne.n	800205c <rt_free_box+0x24>
 8002054:	b662      	cpsie	i
 8002056:	4770      	bx	lr
 8002058:	2001      	movs	r0, #1
 800205a:	4770      	bx	lr
 800205c:	2000      	movs	r0, #0
 800205e:	4770      	bx	lr

08002060 <rt_mbx_init>:
 8002060:	2301      	movs	r3, #1
 8002062:	3910      	subs	r1, #16
 8002064:	7003      	strb	r3, [r0, #0]
 8002066:	0889      	lsrs	r1, r1, #2
 8002068:	2300      	movs	r3, #0
 800206a:	7043      	strb	r3, [r0, #1]
 800206c:	7083      	strb	r3, [r0, #2]
 800206e:	6043      	str	r3, [r0, #4]
 8002070:	8103      	strh	r3, [r0, #8]
 8002072:	8143      	strh	r3, [r0, #10]
 8002074:	8183      	strh	r3, [r0, #12]
 8002076:	81c1      	strh	r1, [r0, #14]
 8002078:	4770      	bx	lr
	...

0800207c <rt_mbx_wait>:
 800207c:	b570      	push	{r4, r5, r6, lr}
 800207e:	8985      	ldrh	r5, [r0, #12]
 8002080:	4604      	mov	r4, r0
 8002082:	4616      	mov	r6, r2
 8002084:	2d00      	cmp	r5, #0
 8002086:	d038      	beq.n	80020fa <rt_mbx_wait+0x7e>
 8002088:	8943      	ldrh	r3, [r0, #10]
 800208a:	1d1a      	adds	r2, r3, #4
 800208c:	3301      	adds	r3, #1
 800208e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8002092:	600a      	str	r2, [r1, #0]
 8002094:	89c2      	ldrh	r2, [r0, #14]
 8002096:	b29b      	uxth	r3, r3
 8002098:	429a      	cmp	r2, r3
 800209a:	8143      	strh	r3, [r0, #10]
 800209c:	bf04      	itt	eq
 800209e:	2300      	moveq	r3, #0
 80020a0:	8143      	strheq	r3, [r0, #10]
 80020a2:	6843      	ldr	r3, [r0, #4]
 80020a4:	b1f3      	cbz	r3, 80020e4 <rt_mbx_wait+0x68>
 80020a6:	7843      	ldrb	r3, [r0, #1]
 80020a8:	2b02      	cmp	r3, #2
 80020aa:	d11b      	bne.n	80020e4 <rt_mbx_wait+0x68>
 80020ac:	f7ff fd46 	bl	8001b3c <rt_get_first>
 80020b0:	2100      	movs	r1, #0
 80020b2:	4605      	mov	r5, r0
 80020b4:	f7ff fee2 	bl	8001e7c <rt_ret_val>
 80020b8:	8923      	ldrh	r3, [r4, #8]
 80020ba:	69e9      	ldr	r1, [r5, #28]
 80020bc:	1d1a      	adds	r2, r3, #4
 80020be:	3301      	adds	r3, #1
 80020c0:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80020c4:	89e2      	ldrh	r2, [r4, #14]
 80020c6:	b29b      	uxth	r3, r3
 80020c8:	429a      	cmp	r2, r3
 80020ca:	8123      	strh	r3, [r4, #8]
 80020cc:	bf08      	it	eq
 80020ce:	2300      	moveq	r3, #0
 80020d0:	4628      	mov	r0, r5
 80020d2:	bf08      	it	eq
 80020d4:	8123      	strheq	r3, [r4, #8]
 80020d6:	f7ff fdd7 	bl	8001c88 <rt_rmv_dly>
 80020da:	4628      	mov	r0, r5
 80020dc:	f000 fc9c 	bl	8002a18 <rt_dispatch>
 80020e0:	2000      	movs	r0, #0
 80020e2:	bd70      	pop	{r4, r5, r6, pc}
 80020e4:	f3ef 8010 	mrs	r0, PRIMASK
 80020e8:	f3ef 8310 	mrs	r3, PRIMASK
 80020ec:	b672      	cpsid	i
 80020ee:	3d01      	subs	r5, #1
 80020f0:	81a5      	strh	r5, [r4, #12]
 80020f2:	2800      	cmp	r0, #0
 80020f4:	d1f4      	bne.n	80020e0 <rt_mbx_wait+0x64>
 80020f6:	b662      	cpsie	i
 80020f8:	bd70      	pop	{r4, r5, r6, pc}
 80020fa:	b14a      	cbz	r2, 8002110 <rt_mbx_wait+0x94>
 80020fc:	6842      	ldr	r2, [r0, #4]
 80020fe:	4b09      	ldr	r3, [pc, #36]	; (8002124 <rt_mbx_wait+0xa8>)
 8002100:	b142      	cbz	r2, 8002114 <rt_mbx_wait+0x98>
 8002102:	6819      	ldr	r1, [r3, #0]
 8002104:	f7ff fd02 	bl	8001b0c <rt_put_prio>
 8002108:	2108      	movs	r1, #8
 800210a:	4630      	mov	r0, r6
 800210c:	f000 fca8 	bl	8002a60 <rt_block>
 8002110:	2001      	movs	r0, #1
 8002112:	bd70      	pop	{r4, r5, r6, pc}
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	6043      	str	r3, [r0, #4]
 8002118:	605a      	str	r2, [r3, #4]
 800211a:	6098      	str	r0, [r3, #8]
 800211c:	2301      	movs	r3, #1
 800211e:	7043      	strb	r3, [r0, #1]
 8002120:	e7f2      	b.n	8002108 <rt_mbx_wait+0x8c>
 8002122:	bf00      	nop
 8002124:	20001e6c 	.word	0x20001e6c

08002128 <rt_mbx_check>:
 8002128:	89c2      	ldrh	r2, [r0, #14]
 800212a:	8980      	ldrh	r0, [r0, #12]
 800212c:	1a10      	subs	r0, r2, r0
 800212e:	4770      	bx	lr

08002130 <isr_mbx_send>:
 8002130:	b508      	push	{r3, lr}
 8002132:	f7ff fdbd 	bl	8001cb0 <rt_psq_enq>
 8002136:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800213a:	f7ff beb3 	b.w	8001ea4 <rt_psh_req>

0800213e <isr_mbx_receive>:
 800213e:	8983      	ldrh	r3, [r0, #12]
 8002140:	b510      	push	{r4, lr}
 8002142:	4604      	mov	r4, r0
 8002144:	b30b      	cbz	r3, 800218a <isr_mbx_receive+0x4c>
 8002146:	8943      	ldrh	r3, [r0, #10]
 8002148:	3304      	adds	r3, #4
 800214a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800214e:	600b      	str	r3, [r1, #0]
 8002150:	7843      	ldrb	r3, [r0, #1]
 8002152:	2b02      	cmp	r3, #2
 8002154:	d104      	bne.n	8002160 <isr_mbx_receive+0x22>
 8002156:	2100      	movs	r1, #0
 8002158:	f7ff fdaa 	bl	8001cb0 <rt_psq_enq>
 800215c:	f7ff fea2 	bl	8001ea4 <rt_psh_req>
 8002160:	f3ef 8310 	mrs	r3, PRIMASK
 8002164:	f3ef 8210 	mrs	r2, PRIMASK
 8002168:	b672      	cpsid	i
 800216a:	89a2      	ldrh	r2, [r4, #12]
 800216c:	3a01      	subs	r2, #1
 800216e:	81a2      	strh	r2, [r4, #12]
 8002170:	b903      	cbnz	r3, 8002174 <isr_mbx_receive+0x36>
 8002172:	b662      	cpsie	i
 8002174:	8963      	ldrh	r3, [r4, #10]
 8002176:	89e2      	ldrh	r2, [r4, #14]
 8002178:	3301      	adds	r3, #1
 800217a:	b29b      	uxth	r3, r3
 800217c:	429a      	cmp	r2, r3
 800217e:	8163      	strh	r3, [r4, #10]
 8002180:	d101      	bne.n	8002186 <isr_mbx_receive+0x48>
 8002182:	2300      	movs	r3, #0
 8002184:	8163      	strh	r3, [r4, #10]
 8002186:	2004      	movs	r0, #4
 8002188:	bd10      	pop	{r4, pc}
 800218a:	4618      	mov	r0, r3
 800218c:	bd10      	pop	{r4, pc}
	...

08002190 <rt_mbx_psh>:
 8002190:	6843      	ldr	r3, [r0, #4]
 8002192:	b570      	push	{r4, r5, r6, lr}
 8002194:	4604      	mov	r4, r0
 8002196:	460e      	mov	r6, r1
 8002198:	2b00      	cmp	r3, #0
 800219a:	d04b      	beq.n	8002234 <rt_mbx_psh+0xa4>
 800219c:	7845      	ldrb	r5, [r0, #1]
 800219e:	2d02      	cmp	r5, #2
 80021a0:	d020      	beq.n	80021e4 <rt_mbx_psh+0x54>
 80021a2:	2d03      	cmp	r5, #3
 80021a4:	d00a      	beq.n	80021bc <rt_mbx_psh+0x2c>
 80021a6:	2d01      	cmp	r5, #1
 80021a8:	d161      	bne.n	800226e <rt_mbx_psh+0xde>
 80021aa:	f7ff fcc7 	bl	8001b3c <rt_get_first>
 80021ae:	4604      	mov	r4, r0
 80021b0:	4632      	mov	r2, r6
 80021b2:	2110      	movs	r1, #16
 80021b4:	f7ff fe6b 	bl	8001e8e <rt_ret_val2>
 80021b8:	7065      	strb	r5, [r4, #1]
 80021ba:	e00e      	b.n	80021da <rt_mbx_psh+0x4a>
 80021bc:	4608      	mov	r0, r1
 80021be:	f7ff ff2e 	bl	800201e <rt_alloc_box>
 80021c2:	4605      	mov	r5, r0
 80021c4:	2800      	cmp	r0, #0
 80021c6:	d052      	beq.n	800226e <rt_mbx_psh+0xde>
 80021c8:	4620      	mov	r0, r4
 80021ca:	f7ff fcb7 	bl	8001b3c <rt_get_first>
 80021ce:	4629      	mov	r1, r5
 80021d0:	4604      	mov	r4, r0
 80021d2:	f7ff fe53 	bl	8001e7c <rt_ret_val>
 80021d6:	2301      	movs	r3, #1
 80021d8:	7063      	strb	r3, [r4, #1]
 80021da:	4620      	mov	r0, r4
 80021dc:	f7ff fd54 	bl	8001c88 <rt_rmv_dly>
 80021e0:	4621      	mov	r1, r4
 80021e2:	e022      	b.n	800222a <rt_mbx_psh+0x9a>
 80021e4:	f7ff fcaa 	bl	8001b3c <rt_get_first>
 80021e8:	2100      	movs	r1, #0
 80021ea:	4605      	mov	r5, r0
 80021ec:	f7ff fe46 	bl	8001e7c <rt_ret_val>
 80021f0:	8923      	ldrh	r3, [r4, #8]
 80021f2:	69e9      	ldr	r1, [r5, #28]
 80021f4:	1d1a      	adds	r2, r3, #4
 80021f6:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80021fa:	f3ef 8210 	mrs	r2, PRIMASK
 80021fe:	f3ef 8110 	mrs	r1, PRIMASK
 8002202:	b672      	cpsid	i
 8002204:	89a1      	ldrh	r1, [r4, #12]
 8002206:	3101      	adds	r1, #1
 8002208:	81a1      	strh	r1, [r4, #12]
 800220a:	b902      	cbnz	r2, 800220e <rt_mbx_psh+0x7e>
 800220c:	b662      	cpsie	i
 800220e:	89e2      	ldrh	r2, [r4, #14]
 8002210:	3301      	adds	r3, #1
 8002212:	b29b      	uxth	r3, r3
 8002214:	429a      	cmp	r2, r3
 8002216:	8123      	strh	r3, [r4, #8]
 8002218:	bf04      	itt	eq
 800221a:	2300      	moveq	r3, #0
 800221c:	8123      	strheq	r3, [r4, #8]
 800221e:	2301      	movs	r3, #1
 8002220:	706b      	strb	r3, [r5, #1]
 8002222:	4628      	mov	r0, r5
 8002224:	f7ff fd30 	bl	8001c88 <rt_rmv_dly>
 8002228:	4629      	mov	r1, r5
 800222a:	4811      	ldr	r0, [pc, #68]	; (8002270 <rt_mbx_psh+0xe0>)
 800222c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002230:	f7ff bc6c 	b.w	8001b0c <rt_put_prio>
 8002234:	8980      	ldrh	r0, [r0, #12]
 8002236:	89e1      	ldrh	r1, [r4, #14]
 8002238:	4288      	cmp	r0, r1
 800223a:	d213      	bcs.n	8002264 <rt_mbx_psh+0xd4>
 800223c:	8923      	ldrh	r3, [r4, #8]
 800223e:	1d1a      	adds	r2, r3, #4
 8002240:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002244:	f3ef 8210 	mrs	r2, PRIMASK
 8002248:	f3ef 8510 	mrs	r5, PRIMASK
 800224c:	b672      	cpsid	i
 800224e:	3001      	adds	r0, #1
 8002250:	81a0      	strh	r0, [r4, #12]
 8002252:	b902      	cbnz	r2, 8002256 <rt_mbx_psh+0xc6>
 8002254:	b662      	cpsie	i
 8002256:	3301      	adds	r3, #1
 8002258:	b29b      	uxth	r3, r3
 800225a:	4299      	cmp	r1, r3
 800225c:	bf08      	it	eq
 800225e:	2300      	moveq	r3, #0
 8002260:	8123      	strh	r3, [r4, #8]
 8002262:	bd70      	pop	{r4, r5, r6, pc}
 8002264:	2003      	movs	r0, #3
 8002266:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800226a:	f7ff bd6d 	b.w	8001d48 <os_error>
 800226e:	bd70      	pop	{r4, r5, r6, pc}
 8002270:	20001678 	.word	0x20001678

08002274 <rt_evt_psh>:
 8002274:	b510      	push	{r4, lr}
 8002276:	8b03      	ldrh	r3, [r0, #24]
 8002278:	7842      	ldrb	r2, [r0, #1]
 800227a:	4319      	orrs	r1, r3
 800227c:	2a06      	cmp	r2, #6
 800227e:	4604      	mov	r4, r0
 8002280:	8301      	strh	r1, [r0, #24]
 8002282:	8b43      	ldrh	r3, [r0, #26]
 8002284:	d115      	bne.n	80022b2 <rt_evt_psh+0x3e>
 8002286:	ea33 0201 	bics.w	r2, r3, r1
 800228a:	d119      	bne.n	80022c0 <rt_evt_psh+0x4c>
 800228c:	ea21 0103 	bic.w	r1, r1, r3
 8002290:	8321      	strh	r1, [r4, #24]
 8002292:	4620      	mov	r0, r4
 8002294:	f7ff fcf8 	bl	8001c88 <rt_rmv_dly>
 8002298:	2301      	movs	r3, #1
 800229a:	4620      	mov	r0, r4
 800229c:	7063      	strb	r3, [r4, #1]
 800229e:	8b62      	ldrh	r2, [r4, #26]
 80022a0:	2108      	movs	r1, #8
 80022a2:	f7ff fdf4 	bl	8001e8e <rt_ret_val2>
 80022a6:	4621      	mov	r1, r4
 80022a8:	4806      	ldr	r0, [pc, #24]	; (80022c4 <rt_evt_psh+0x50>)
 80022aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022ae:	f7ff bc2d 	b.w	8001b0c <rt_put_prio>
 80022b2:	2a05      	cmp	r2, #5
 80022b4:	d104      	bne.n	80022c0 <rt_evt_psh+0x4c>
 80022b6:	ea11 0203 	ands.w	r2, r1, r3
 80022ba:	d001      	beq.n	80022c0 <rt_evt_psh+0x4c>
 80022bc:	8342      	strh	r2, [r0, #26]
 80022be:	e7e5      	b.n	800228c <rt_evt_psh+0x18>
 80022c0:	bd10      	pop	{r4, pc}
 80022c2:	bf00      	nop
 80022c4:	20001678 	.word	0x20001678

080022c8 <rt_init_robin>:
 80022c8:	4b03      	ldr	r3, [pc, #12]	; (80022d8 <rt_init_robin+0x10>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	601a      	str	r2, [r3, #0]
 80022ce:	4a03      	ldr	r2, [pc, #12]	; (80022dc <rt_init_robin+0x14>)
 80022d0:	6812      	ldr	r2, [r2, #0]
 80022d2:	80da      	strh	r2, [r3, #6]
 80022d4:	4770      	bx	lr
 80022d6:	bf00      	nop
 80022d8:	20001e58 	.word	0x20001e58
 80022dc:	08006e7c 	.word	0x08006e7c

080022e0 <rt_chk_robin>:
 80022e0:	b508      	push	{r3, lr}
 80022e2:	4b0e      	ldr	r3, [pc, #56]	; (800231c <rt_chk_robin+0x3c>)
 80022e4:	685a      	ldr	r2, [r3, #4]
 80022e6:	4b0e      	ldr	r3, [pc, #56]	; (8002320 <rt_chk_robin+0x40>)
 80022e8:	6819      	ldr	r1, [r3, #0]
 80022ea:	4291      	cmp	r1, r2
 80022ec:	490d      	ldr	r1, [pc, #52]	; (8002324 <rt_chk_robin+0x44>)
 80022ee:	d005      	beq.n	80022fc <rt_chk_robin+0x1c>
 80022f0:	601a      	str	r2, [r3, #0]
 80022f2:	88da      	ldrh	r2, [r3, #6]
 80022f4:	6808      	ldr	r0, [r1, #0]
 80022f6:	3a01      	subs	r2, #1
 80022f8:	4402      	add	r2, r0
 80022fa:	809a      	strh	r2, [r3, #4]
 80022fc:	8898      	ldrh	r0, [r3, #4]
 80022fe:	880a      	ldrh	r2, [r1, #0]
 8002300:	4290      	cmp	r0, r2
 8002302:	d10a      	bne.n	800231a <rt_chk_robin+0x3a>
 8002304:	2200      	movs	r2, #0
 8002306:	4805      	ldr	r0, [pc, #20]	; (800231c <rt_chk_robin+0x3c>)
 8002308:	601a      	str	r2, [r3, #0]
 800230a:	f7ff fc17 	bl	8001b3c <rt_get_first>
 800230e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002312:	4601      	mov	r1, r0
 8002314:	4801      	ldr	r0, [pc, #4]	; (800231c <rt_chk_robin+0x3c>)
 8002316:	f7ff bbf9 	b.w	8001b0c <rt_put_prio>
 800231a:	bd08      	pop	{r3, pc}
 800231c:	20001678 	.word	0x20001678
 8002320:	20001e58 	.word	0x20001e58
 8002324:	20001eb4 	.word	0x20001eb4

08002328 <rt_timer_insert>:
 8002328:	4a0b      	ldr	r2, [pc, #44]	; (8002358 <rt_timer_insert+0x30>)
 800232a:	6813      	ldr	r3, [r2, #0]
 800232c:	b530      	push	{r4, r5, lr}
 800232e:	2400      	movs	r4, #0
 8002330:	b943      	cbnz	r3, 8002344 <rt_timer_insert+0x1c>
 8002332:	6003      	str	r3, [r0, #0]
 8002334:	6081      	str	r1, [r0, #8]
 8002336:	b113      	cbz	r3, 800233e <rt_timer_insert+0x16>
 8002338:	689d      	ldr	r5, [r3, #8]
 800233a:	1a69      	subs	r1, r5, r1
 800233c:	6099      	str	r1, [r3, #8]
 800233e:	b144      	cbz	r4, 8002352 <rt_timer_insert+0x2a>
 8002340:	6020      	str	r0, [r4, #0]
 8002342:	bd30      	pop	{r4, r5, pc}
 8002344:	689d      	ldr	r5, [r3, #8]
 8002346:	42a9      	cmp	r1, r5
 8002348:	d3f3      	bcc.n	8002332 <rt_timer_insert+0xa>
 800234a:	461c      	mov	r4, r3
 800234c:	1b49      	subs	r1, r1, r5
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	e7ee      	b.n	8002330 <rt_timer_insert+0x8>
 8002352:	6010      	str	r0, [r2, #0]
 8002354:	bd30      	pop	{r4, r5, pc}
 8002356:	bf00      	nop
 8002358:	20001e68 	.word	0x20001e68

0800235c <rt_ms2tick>:
 800235c:	b1c0      	cbz	r0, 8002390 <rt_ms2tick+0x34>
 800235e:	1c43      	adds	r3, r0, #1
 8002360:	d011      	beq.n	8002386 <rt_ms2tick+0x2a>
 8002362:	4b0c      	ldr	r3, [pc, #48]	; (8002394 <rt_ms2tick+0x38>)
 8002364:	4298      	cmp	r0, r3
 8002366:	d811      	bhi.n	800238c <rt_ms2tick+0x30>
 8002368:	4b0b      	ldr	r3, [pc, #44]	; (8002398 <rt_ms2tick+0x3c>)
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002370:	1e5a      	subs	r2, r3, #1
 8002372:	fb01 2000 	mla	r0, r1, r0, r2
 8002376:	fbb0 f3f3 	udiv	r3, r0, r3
 800237a:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 800237e:	4283      	cmp	r3, r0
 8002380:	d806      	bhi.n	8002390 <rt_ms2tick+0x34>
 8002382:	b298      	uxth	r0, r3
 8002384:	4770      	bx	lr
 8002386:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800238a:	4770      	bx	lr
 800238c:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002390:	4770      	bx	lr
 8002392:	bf00      	nop
 8002394:	003d0900 	.word	0x003d0900
 8002398:	08006e34 	.word	0x08006e34

0800239c <rt_tid2ptcb>:
 800239c:	b138      	cbz	r0, 80023ae <rt_tid2ptcb+0x12>
 800239e:	0783      	lsls	r3, r0, #30
 80023a0:	d104      	bne.n	80023ac <rt_tid2ptcb+0x10>
 80023a2:	7803      	ldrb	r3, [r0, #0]
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	bf18      	it	ne
 80023a8:	2000      	movne	r0, #0
 80023aa:	4770      	bx	lr
 80023ac:	2000      	movs	r0, #0
 80023ae:	4770      	bx	lr

080023b0 <svcKernelStart>:
 80023b0:	b5b0      	push	{r4, r5, r7, lr}
 80023b2:	4d0e      	ldr	r5, [pc, #56]	; (80023ec <svcKernelStart+0x3c>)
 80023b4:	7828      	ldrb	r0, [r5, #0]
 80023b6:	af00      	add	r7, sp, #0
 80023b8:	b9a8      	cbnz	r0, 80023e6 <svcKernelStart+0x36>
 80023ba:	4c0d      	ldr	r4, [pc, #52]	; (80023f0 <svcKernelStart+0x40>)
 80023bc:	6823      	ldr	r3, [r4, #0]
 80023be:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 80023c2:	f000 fb6f 	bl	8002aa4 <rt_tsk_prio>
 80023c6:	6823      	ldr	r3, [r4, #0]
 80023c8:	78da      	ldrb	r2, [r3, #3]
 80023ca:	2aff      	cmp	r2, #255	; 0xff
 80023cc:	d103      	bne.n	80023d6 <svcKernelStart+0x26>
 80023ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80023d0:	3220      	adds	r2, #32
 80023d2:	f382 8809 	msr	PSP, r2
 80023d6:	6862      	ldr	r2, [r4, #4]
 80023d8:	b90a      	cbnz	r2, 80023de <svcKernelStart+0x2e>
 80023da:	e884 000c 	stmia.w	r4, {r2, r3}
 80023de:	f000 fd19 	bl	8002e14 <rt_sys_start>
 80023e2:	2301      	movs	r3, #1
 80023e4:	702b      	strb	r3, [r5, #0]
 80023e6:	2000      	movs	r0, #0
 80023e8:	bdb0      	pop	{r4, r5, r7, pc}
 80023ea:	bf00      	nop
 80023ec:	20001e65 	.word	0x20001e65
 80023f0:	20001e6c 	.word	0x20001e6c

080023f4 <svcKernelRunning>:
 80023f4:	4b01      	ldr	r3, [pc, #4]	; (80023fc <svcKernelRunning+0x8>)
 80023f6:	7818      	ldrb	r0, [r3, #0]
 80023f8:	4770      	bx	lr
 80023fa:	bf00      	nop
 80023fc:	20001e65 	.word	0x20001e65

08002400 <osKernelRunning>:
 8002400:	b510      	push	{r4, lr}
 8002402:	f3ef 8410 	mrs	r4, PRIMASK
 8002406:	b934      	cbnz	r4, 8002416 <osKernelRunning+0x16>
 8002408:	f3ef 8405 	mrs	r4, IPSR
 800240c:	b91c      	cbnz	r4, 8002416 <osKernelRunning+0x16>
 800240e:	f3ef 8414 	mrs	r4, CONTROL
 8002412:	07e4      	lsls	r4, r4, #31
 8002414:	d402      	bmi.n	800241c <osKernelRunning+0x1c>
 8002416:	4b03      	ldr	r3, [pc, #12]	; (8002424 <osKernelRunning+0x24>)
 8002418:	7818      	ldrb	r0, [r3, #0]
 800241a:	bd10      	pop	{r4, pc}
 800241c:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002428 <osKernelRunning+0x28>
 8002420:	df00      	svc	0
 8002422:	bd10      	pop	{r4, pc}
 8002424:	20001e65 	.word	0x20001e65
 8002428:	080023f5 	.word	0x080023f5

0800242c <osKernelStart>:
 800242c:	b590      	push	{r4, r7, lr}
 800242e:	b089      	sub	sp, #36	; 0x24
 8002430:	af00      	add	r7, sp, #0
 8002432:	f3ef 8310 	mrs	r3, PRIMASK
 8002436:	2b00      	cmp	r3, #0
 8002438:	d137      	bne.n	80024aa <osKernelStart+0x7e>
 800243a:	f3ef 8305 	mrs	r3, IPSR
 800243e:	2b00      	cmp	r3, #0
 8002440:	d133      	bne.n	80024aa <osKernelStart+0x7e>
 8002442:	f7ff ffdd 	bl	8002400 <osKernelRunning>
 8002446:	b928      	cbnz	r0, 8002454 <osKernelStart+0x28>
 8002448:	4c19      	ldr	r4, [pc, #100]	; (80024b0 <osKernelStart+0x84>)
 800244a:	6824      	ldr	r4, [r4, #0]
 800244c:	b114      	cbz	r4, 8002454 <osKernelStart+0x28>
 800244e:	6864      	ldr	r4, [r4, #4]
 8002450:	b104      	cbz	r4, 8002454 <osKernelStart+0x28>
 8002452:	47a0      	blx	r4
 8002454:	f3ef 8414 	mrs	r4, CONTROL
 8002458:	f004 0403 	and.w	r4, r4, #3
 800245c:	2c02      	cmp	r4, #2
 800245e:	d018      	beq.n	8002492 <osKernelStart+0x66>
 8002460:	2c03      	cmp	r4, #3
 8002462:	d01c      	beq.n	800249e <osKernelStart+0x72>
 8002464:	2c01      	cmp	r4, #1
 8002466:	d01e      	beq.n	80024a6 <osKernelStart+0x7a>
 8002468:	f107 0420 	add.w	r4, r7, #32
 800246c:	f384 8809 	msr	PSP, r4
 8002470:	4c10      	ldr	r4, [pc, #64]	; (80024b4 <osKernelStart+0x88>)
 8002472:	7824      	ldrb	r4, [r4, #0]
 8002474:	07e4      	lsls	r4, r4, #31
 8002476:	d510      	bpl.n	800249a <osKernelStart+0x6e>
 8002478:	2402      	movs	r4, #2
 800247a:	f384 8814 	msr	CONTROL, r4
 800247e:	f3bf 8f4f 	dsb	sy
 8002482:	f3bf 8f6f 	isb	sy
 8002486:	f8df c030 	ldr.w	r12, [pc, #48]	; 80024b8 <osKernelStart+0x8c>
 800248a:	df00      	svc	0
 800248c:	3724      	adds	r7, #36	; 0x24
 800248e:	46bd      	mov	sp, r7
 8002490:	bd90      	pop	{r4, r7, pc}
 8002492:	4c08      	ldr	r4, [pc, #32]	; (80024b4 <osKernelStart+0x88>)
 8002494:	7824      	ldrb	r4, [r4, #0]
 8002496:	07e4      	lsls	r4, r4, #31
 8002498:	d4f5      	bmi.n	8002486 <osKernelStart+0x5a>
 800249a:	2403      	movs	r4, #3
 800249c:	e7ed      	b.n	800247a <osKernelStart+0x4e>
 800249e:	4c05      	ldr	r4, [pc, #20]	; (80024b4 <osKernelStart+0x88>)
 80024a0:	7824      	ldrb	r4, [r4, #0]
 80024a2:	07e4      	lsls	r4, r4, #31
 80024a4:	d5ef      	bpl.n	8002486 <osKernelStart+0x5a>
 80024a6:	20ff      	movs	r0, #255	; 0xff
 80024a8:	e7f0      	b.n	800248c <osKernelStart+0x60>
 80024aa:	2082      	movs	r0, #130	; 0x82
 80024ac:	e7ee      	b.n	800248c <osKernelStart+0x60>
 80024ae:	bf00      	nop
 80024b0:	20001e54 	.word	0x20001e54
 80024b4:	08006e62 	.word	0x08006e62
 80024b8:	080023b1 	.word	0x080023b1

080024bc <svcThreadCreate>:
 80024bc:	b570      	push	{r4, r5, r6, lr}
 80024be:	460b      	mov	r3, r1
 80024c0:	4616      	mov	r6, r2
 80024c2:	4602      	mov	r2, r0
 80024c4:	b910      	cbnz	r0, 80024cc <svcThreadCreate+0x10>
 80024c6:	2400      	movs	r4, #0
 80024c8:	4620      	mov	r0, r4
 80024ca:	bd70      	pop	{r4, r5, r6, pc}
 80024cc:	6800      	ldr	r0, [r0, #0]
 80024ce:	2800      	cmp	r0, #0
 80024d0:	d0f9      	beq.n	80024c6 <svcThreadCreate+0xa>
 80024d2:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80024d6:	1ce5      	adds	r5, r4, #3
 80024d8:	b2ad      	uxth	r5, r5
 80024da:	2d06      	cmp	r5, #6
 80024dc:	d8f3      	bhi.n	80024c6 <svcThreadCreate+0xa>
 80024de:	68d1      	ldr	r1, [r2, #12]
 80024e0:	b1c1      	cbz	r1, 8002514 <svcThreadCreate+0x58>
 80024e2:	6912      	ldr	r2, [r2, #16]
 80024e4:	3404      	adds	r4, #4
 80024e6:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80024ea:	f000 fb19 	bl	8002b20 <rt_tsk_create>
 80024ee:	2800      	cmp	r0, #0
 80024f0:	d0e9      	beq.n	80024c6 <svcThreadCreate+0xa>
 80024f2:	4b0a      	ldr	r3, [pc, #40]	; (800251c <svcThreadCreate+0x60>)
 80024f4:	4a0a      	ldr	r2, [pc, #40]	; (8002520 <svcThreadCreate+0x64>)
 80024f6:	3801      	subs	r0, #1
 80024f8:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80024fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80024fe:	635a      	str	r2, [r3, #52]	; 0x34
 8002500:	4b08      	ldr	r3, [pc, #32]	; (8002524 <svcThreadCreate+0x68>)
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	b143      	cbz	r3, 8002518 <svcThreadCreate+0x5c>
 8002506:	689b      	ldr	r3, [r3, #8]
 8002508:	b133      	cbz	r3, 8002518 <svcThreadCreate+0x5c>
 800250a:	4631      	mov	r1, r6
 800250c:	78e0      	ldrb	r0, [r4, #3]
 800250e:	4798      	blx	r3
 8002510:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002512:	e7d9      	b.n	80024c8 <svcThreadCreate+0xc>
 8002514:	460a      	mov	r2, r1
 8002516:	e7e5      	b.n	80024e4 <svcThreadCreate+0x28>
 8002518:	63e6      	str	r6, [r4, #60]	; 0x3c
 800251a:	e7d5      	b.n	80024c8 <svcThreadCreate+0xc>
 800251c:	200018b8 	.word	0x200018b8
 8002520:	080026c5 	.word	0x080026c5
 8002524:	20001e54 	.word	0x20001e54

08002528 <svcThreadGetId>:
 8002528:	b508      	push	{r3, lr}
 800252a:	f000 fab3 	bl	8002a94 <rt_tsk_self>
 800252e:	b118      	cbz	r0, 8002538 <svcThreadGetId+0x10>
 8002530:	3801      	subs	r0, #1
 8002532:	4b02      	ldr	r3, [pc, #8]	; (800253c <svcThreadGetId+0x14>)
 8002534:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002538:	bd08      	pop	{r3, pc}
 800253a:	bf00      	nop
 800253c:	200018b8 	.word	0x200018b8

08002540 <svcThreadTerminate>:
 8002540:	b510      	push	{r4, lr}
 8002542:	f7ff ff2b 	bl	800239c <rt_tid2ptcb>
 8002546:	4604      	mov	r4, r0
 8002548:	b170      	cbz	r0, 8002568 <svcThreadTerminate+0x28>
 800254a:	4b08      	ldr	r3, [pc, #32]	; (800256c <svcThreadTerminate+0x2c>)
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	b11b      	cbz	r3, 8002558 <svcThreadTerminate+0x18>
 8002550:	68db      	ldr	r3, [r3, #12]
 8002552:	b10b      	cbz	r3, 8002558 <svcThreadTerminate+0x18>
 8002554:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002556:	4798      	blx	r3
 8002558:	78e0      	ldrb	r0, [r4, #3]
 800255a:	f000 fb37 	bl	8002bcc <rt_tsk_delete>
 800255e:	28ff      	cmp	r0, #255	; 0xff
 8002560:	bf0c      	ite	eq
 8002562:	2081      	moveq	r0, #129	; 0x81
 8002564:	2000      	movne	r0, #0
 8002566:	bd10      	pop	{r4, pc}
 8002568:	2080      	movs	r0, #128	; 0x80
 800256a:	bd10      	pop	{r4, pc}
 800256c:	20001e54 	.word	0x20001e54

08002570 <svcDelay>:
 8002570:	b508      	push	{r3, lr}
 8002572:	b128      	cbz	r0, 8002580 <svcDelay+0x10>
 8002574:	f7ff fef2 	bl	800235c <rt_ms2tick>
 8002578:	f000 fd8e 	bl	8003098 <rt_dly_wait>
 800257c:	2040      	movs	r0, #64	; 0x40
 800257e:	bd08      	pop	{r3, pc}
 8002580:	bd08      	pop	{r3, pc}
	...

08002584 <osDelay>:
 8002584:	b510      	push	{r4, lr}
 8002586:	f3ef 8410 	mrs	r4, PRIMASK
 800258a:	b934      	cbnz	r4, 800259a <osDelay+0x16>
 800258c:	f3ef 8405 	mrs	r4, IPSR
 8002590:	b91c      	cbnz	r4, 800259a <osDelay+0x16>
 8002592:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80025a0 <osDelay+0x1c>
 8002596:	df00      	svc	0
 8002598:	bd10      	pop	{r4, pc}
 800259a:	2082      	movs	r0, #130	; 0x82
 800259c:	bd10      	pop	{r4, pc}
 800259e:	0000      	.short	0x0000
 80025a0:	08002571 	.word	0x08002571

080025a4 <svcTimerCall>:
 80025a4:	0783      	lsls	r3, r0, #30
 80025a6:	d105      	bne.n	80025b4 <svcTimerCall+0x10>
 80025a8:	b138      	cbz	r0, 80025ba <svcTimerCall+0x16>
 80025aa:	6943      	ldr	r3, [r0, #20]
 80025ac:	6901      	ldr	r1, [r0, #16]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	4618      	mov	r0, r3
 80025b2:	4770      	bx	lr
 80025b4:	2300      	movs	r3, #0
 80025b6:	4619      	mov	r1, r3
 80025b8:	e7fa      	b.n	80025b0 <svcTimerCall+0xc>
 80025ba:	4603      	mov	r3, r0
 80025bc:	e7fb      	b.n	80025b6 <svcTimerCall+0x12>
	...

080025c0 <osTimerCall>:
 80025c0:	b510      	push	{r4, lr}
 80025c2:	4604      	mov	r4, r0
 80025c4:	4608      	mov	r0, r1
 80025c6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80025d4 <osTimerCall+0x14>
 80025ca:	df00      	svc	0
 80025cc:	e884 0003 	stmia.w	r4, {r0, r1}
 80025d0:	4620      	mov	r0, r4
 80025d2:	bd10      	pop	{r4, pc}
 80025d4:	080025a5 	.word	0x080025a5

080025d8 <svcMutexCreate>:
 80025d8:	b510      	push	{r4, lr}
 80025da:	b148      	cbz	r0, 80025f0 <svcMutexCreate+0x18>
 80025dc:	6804      	ldr	r4, [r0, #0]
 80025de:	b124      	cbz	r4, 80025ea <svcMutexCreate+0x12>
 80025e0:	7823      	ldrb	r3, [r4, #0]
 80025e2:	b923      	cbnz	r3, 80025ee <svcMutexCreate+0x16>
 80025e4:	4620      	mov	r0, r4
 80025e6:	f000 fc5b 	bl	8002ea0 <rt_mut_init>
 80025ea:	4620      	mov	r0, r4
 80025ec:	bd10      	pop	{r4, pc}
 80025ee:	2000      	movs	r0, #0
 80025f0:	bd10      	pop	{r4, pc}

080025f2 <svcMutexWait>:
 80025f2:	b570      	push	{r4, r5, r6, lr}
 80025f4:	f010 0403 	ands.w	r4, r0, #3
 80025f8:	4605      	mov	r5, r0
 80025fa:	460e      	mov	r6, r1
 80025fc:	d111      	bne.n	8002622 <svcMutexWait+0x30>
 80025fe:	b180      	cbz	r0, 8002622 <svcMutexWait+0x30>
 8002600:	7803      	ldrb	r3, [r0, #0]
 8002602:	2b03      	cmp	r3, #3
 8002604:	d10d      	bne.n	8002622 <svcMutexWait+0x30>
 8002606:	4608      	mov	r0, r1
 8002608:	f7ff fea8 	bl	800235c <rt_ms2tick>
 800260c:	4601      	mov	r1, r0
 800260e:	4628      	mov	r0, r5
 8002610:	f000 fd14 	bl	800303c <rt_mut_wait>
 8002614:	2801      	cmp	r0, #1
 8002616:	d106      	bne.n	8002626 <svcMutexWait+0x34>
 8002618:	2e00      	cmp	r6, #0
 800261a:	bf14      	ite	ne
 800261c:	20c1      	movne	r0, #193	; 0xc1
 800261e:	2081      	moveq	r0, #129	; 0x81
 8002620:	bd70      	pop	{r4, r5, r6, pc}
 8002622:	2080      	movs	r0, #128	; 0x80
 8002624:	bd70      	pop	{r4, r5, r6, pc}
 8002626:	4620      	mov	r0, r4
 8002628:	bd70      	pop	{r4, r5, r6, pc}

0800262a <svcMutexRelease>:
 800262a:	0782      	lsls	r2, r0, #30
 800262c:	b508      	push	{r3, lr}
 800262e:	d10a      	bne.n	8002646 <svcMutexRelease+0x1c>
 8002630:	b148      	cbz	r0, 8002646 <svcMutexRelease+0x1c>
 8002632:	7803      	ldrb	r3, [r0, #0]
 8002634:	2b03      	cmp	r3, #3
 8002636:	d106      	bne.n	8002646 <svcMutexRelease+0x1c>
 8002638:	f000 fc90 	bl	8002f5c <rt_mut_release>
 800263c:	28ff      	cmp	r0, #255	; 0xff
 800263e:	bf0c      	ite	eq
 8002640:	2081      	moveq	r0, #129	; 0x81
 8002642:	2000      	movne	r0, #0
 8002644:	bd08      	pop	{r3, pc}
 8002646:	2080      	movs	r0, #128	; 0x80
 8002648:	bd08      	pop	{r3, pc}

0800264a <svcMutexDelete>:
 800264a:	b510      	push	{r4, lr}
 800264c:	f010 0403 	ands.w	r4, r0, #3
 8002650:	d107      	bne.n	8002662 <svcMutexDelete+0x18>
 8002652:	b130      	cbz	r0, 8002662 <svcMutexDelete+0x18>
 8002654:	7803      	ldrb	r3, [r0, #0]
 8002656:	2b03      	cmp	r3, #3
 8002658:	d103      	bne.n	8002662 <svcMutexDelete+0x18>
 800265a:	f000 fc29 	bl	8002eb0 <rt_mut_delete>
 800265e:	4620      	mov	r0, r4
 8002660:	bd10      	pop	{r4, pc}
 8002662:	2080      	movs	r0, #128	; 0x80
 8002664:	bd10      	pop	{r4, pc}
	...

08002668 <osMutexCreate>:
 8002668:	b570      	push	{r4, r5, r6, lr}
 800266a:	4605      	mov	r5, r0
 800266c:	f3ef 8410 	mrs	r4, PRIMASK
 8002670:	b994      	cbnz	r4, 8002698 <osMutexCreate+0x30>
 8002672:	f3ef 8605 	mrs	r6, IPSR
 8002676:	b97e      	cbnz	r6, 8002698 <osMutexCreate+0x30>
 8002678:	f3ef 8414 	mrs	r4, CONTROL
 800267c:	07e4      	lsls	r4, r4, #31
 800267e:	d406      	bmi.n	800268e <osMutexCreate+0x26>
 8002680:	4c06      	ldr	r4, [pc, #24]	; (800269c <osMutexCreate+0x34>)
 8002682:	7824      	ldrb	r4, [r4, #0]
 8002684:	b91c      	cbnz	r4, 800268e <osMutexCreate+0x26>
 8002686:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800268a:	f7ff bfa5 	b.w	80025d8 <svcMutexCreate>
 800268e:	4628      	mov	r0, r5
 8002690:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80026a0 <osMutexCreate+0x38>
 8002694:	df00      	svc	0
 8002696:	bd70      	pop	{r4, r5, r6, pc}
 8002698:	2000      	movs	r0, #0
 800269a:	bd70      	pop	{r4, r5, r6, pc}
 800269c:	20001e65 	.word	0x20001e65
 80026a0:	080025d9 	.word	0x080025d9

080026a4 <osMutexWait>:
 80026a4:	b510      	push	{r4, lr}
 80026a6:	f3ef 8410 	mrs	r4, PRIMASK
 80026aa:	b934      	cbnz	r4, 80026ba <osMutexWait+0x16>
 80026ac:	f3ef 8405 	mrs	r4, IPSR
 80026b0:	b91c      	cbnz	r4, 80026ba <osMutexWait+0x16>
 80026b2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80026c0 <osMutexWait+0x1c>
 80026b6:	df00      	svc	0
 80026b8:	bd10      	pop	{r4, pc}
 80026ba:	2082      	movs	r0, #130	; 0x82
 80026bc:	bd10      	pop	{r4, pc}
 80026be:	0000      	.short	0x0000
 80026c0:	080025f3 	.word	0x080025f3

080026c4 <osThreadExit>:
 80026c4:	4808      	ldr	r0, [pc, #32]	; (80026e8 <osThreadExit+0x24>)
 80026c6:	b508      	push	{r3, lr}
 80026c8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026cc:	6800      	ldr	r0, [r0, #0]
 80026ce:	f7ff ffe9 	bl	80026a4 <osMutexWait>
 80026d2:	f8df c018 	ldr.w	r12, [pc, #24]	; 80026ec <osThreadExit+0x28>
 80026d6:	df00      	svc	0
 80026d8:	4604      	mov	r4, r0
 80026da:	f7ff fb43 	bl	8001d64 <sysThreadTerminate>
 80026de:	4620      	mov	r0, r4
 80026e0:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80026f0 <osThreadExit+0x2c>
 80026e4:	df00      	svc	0
 80026e6:	e7fe      	b.n	80026e6 <osThreadExit+0x22>
 80026e8:	20001e60 	.word	0x20001e60
 80026ec:	08002529 	.word	0x08002529
 80026f0:	08002541 	.word	0x08002541

080026f4 <osMutexRelease>:
 80026f4:	b510      	push	{r4, lr}
 80026f6:	f3ef 8410 	mrs	r4, PRIMASK
 80026fa:	b934      	cbnz	r4, 800270a <osMutexRelease+0x16>
 80026fc:	f3ef 8405 	mrs	r4, IPSR
 8002700:	b91c      	cbnz	r4, 800270a <osMutexRelease+0x16>
 8002702:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002710 <osMutexRelease+0x1c>
 8002706:	df00      	svc	0
 8002708:	bd10      	pop	{r4, pc}
 800270a:	2082      	movs	r0, #130	; 0x82
 800270c:	bd10      	pop	{r4, pc}
 800270e:	0000      	.short	0x0000
 8002710:	0800262b 	.word	0x0800262b

08002714 <osThreadContextCreate>:
 8002714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002718:	4680      	mov	r8, r0
 800271a:	460f      	mov	r7, r1
 800271c:	4616      	mov	r6, r2
 800271e:	f3ef 8410 	mrs	r4, PRIMASK
 8002722:	bb04      	cbnz	r4, 8002766 <osThreadContextCreate+0x52>
 8002724:	f3ef 8305 	mrs	r3, IPSR
 8002728:	b9d3      	cbnz	r3, 8002760 <osThreadContextCreate+0x4c>
 800272a:	f3ef 8314 	mrs	r3, CONTROL
 800272e:	07db      	lsls	r3, r3, #31
 8002730:	d406      	bmi.n	8002740 <osThreadContextCreate+0x2c>
 8002732:	4b0e      	ldr	r3, [pc, #56]	; (800276c <osThreadContextCreate+0x58>)
 8002734:	781b      	ldrb	r3, [r3, #0]
 8002736:	b91b      	cbnz	r3, 8002740 <osThreadContextCreate+0x2c>
 8002738:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800273c:	f7ff bebe 	b.w	80024bc <svcThreadCreate>
 8002740:	4d0b      	ldr	r5, [pc, #44]	; (8002770 <osThreadContextCreate+0x5c>)
 8002742:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002746:	6828      	ldr	r0, [r5, #0]
 8002748:	f7ff ffac 	bl	80026a4 <osMutexWait>
 800274c:	4640      	mov	r0, r8
 800274e:	4639      	mov	r1, r7
 8002750:	4632      	mov	r2, r6
 8002752:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002774 <osThreadContextCreate+0x60>
 8002756:	df00      	svc	0
 8002758:	4604      	mov	r4, r0
 800275a:	6828      	ldr	r0, [r5, #0]
 800275c:	f7ff ffca 	bl	80026f4 <osMutexRelease>
 8002760:	4620      	mov	r0, r4
 8002762:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002766:	2400      	movs	r4, #0
 8002768:	e7fa      	b.n	8002760 <osThreadContextCreate+0x4c>
 800276a:	bf00      	nop
 800276c:	20001e65 	.word	0x20001e65
 8002770:	20001e60 	.word	0x20001e60
 8002774:	080024bd 	.word	0x080024bd

08002778 <osThreadCreate>:
 8002778:	2200      	movs	r2, #0
 800277a:	f7ff bfcb 	b.w	8002714 <osThreadContextCreate>
	...

08002780 <osMutexDelete>:
 8002780:	b510      	push	{r4, lr}
 8002782:	f3ef 8410 	mrs	r4, PRIMASK
 8002786:	b934      	cbnz	r4, 8002796 <osMutexDelete+0x16>
 8002788:	f3ef 8405 	mrs	r4, IPSR
 800278c:	b91c      	cbnz	r4, 8002796 <osMutexDelete+0x16>
 800278e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800279c <osMutexDelete+0x1c>
 8002792:	df00      	svc	0
 8002794:	bd10      	pop	{r4, pc}
 8002796:	2082      	movs	r0, #130	; 0x82
 8002798:	bd10      	pop	{r4, pc}
 800279a:	0000      	.short	0x0000
 800279c:	0800264b 	.word	0x0800264b

080027a0 <svcMessageCreate>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
 80027a4:	b160      	cbz	r0, 80027c0 <svcMessageCreate+0x20>
 80027a6:	6801      	ldr	r1, [r0, #0]
 80027a8:	b151      	cbz	r1, 80027c0 <svcMessageCreate+0x20>
 80027aa:	6840      	ldr	r0, [r0, #4]
 80027ac:	b148      	cbz	r0, 80027c2 <svcMessageCreate+0x22>
 80027ae:	7803      	ldrb	r3, [r0, #0]
 80027b0:	b933      	cbnz	r3, 80027c0 <svcMessageCreate+0x20>
 80027b2:	3104      	adds	r1, #4
 80027b4:	0089      	lsls	r1, r1, #2
 80027b6:	b289      	uxth	r1, r1
 80027b8:	f7ff fc52 	bl	8002060 <rt_mbx_init>
 80027bc:	6860      	ldr	r0, [r4, #4]
 80027be:	bd10      	pop	{r4, pc}
 80027c0:	2000      	movs	r0, #0
 80027c2:	bd10      	pop	{r4, pc}

080027c4 <svcKernelInitialize>:
 80027c4:	b538      	push	{r3, r4, r5, lr}
 80027c6:	4c11      	ldr	r4, [pc, #68]	; (800280c <svcKernelInitialize+0x48>)
 80027c8:	7823      	ldrb	r3, [r4, #0]
 80027ca:	b90b      	cbnz	r3, 80027d0 <svcKernelInitialize+0xc>
 80027cc:	f000 faa8 	bl	8002d20 <rt_sys_init>
 80027d0:	4b0f      	ldr	r3, [pc, #60]	; (8002810 <svcKernelInitialize+0x4c>)
 80027d2:	7825      	ldrb	r5, [r4, #0]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	22ff      	movs	r2, #255	; 0xff
 80027d8:	709a      	strb	r2, [r3, #2]
 80027da:	b98d      	cbnz	r5, 8002800 <svcKernelInitialize+0x3c>
 80027dc:	4629      	mov	r1, r5
 80027de:	480d      	ldr	r0, [pc, #52]	; (8002814 <svcKernelInitialize+0x50>)
 80027e0:	f7ff ffde 	bl	80027a0 <svcMessageCreate>
 80027e4:	4b0c      	ldr	r3, [pc, #48]	; (8002818 <svcKernelInitialize+0x54>)
 80027e6:	462a      	mov	r2, r5
 80027e8:	6018      	str	r0, [r3, #0]
 80027ea:	4629      	mov	r1, r5
 80027ec:	480b      	ldr	r0, [pc, #44]	; (800281c <svcKernelInitialize+0x58>)
 80027ee:	f7ff fe65 	bl	80024bc <svcThreadCreate>
 80027f2:	4b0b      	ldr	r3, [pc, #44]	; (8002820 <svcKernelInitialize+0x5c>)
 80027f4:	6018      	str	r0, [r3, #0]
 80027f6:	480b      	ldr	r0, [pc, #44]	; (8002824 <svcKernelInitialize+0x60>)
 80027f8:	f7ff ff36 	bl	8002668 <osMutexCreate>
 80027fc:	4b0a      	ldr	r3, [pc, #40]	; (8002828 <svcKernelInitialize+0x64>)
 80027fe:	6018      	str	r0, [r3, #0]
 8002800:	2301      	movs	r3, #1
 8002802:	7023      	strb	r3, [r4, #0]
 8002804:	4b09      	ldr	r3, [pc, #36]	; (800282c <svcKernelInitialize+0x68>)
 8002806:	2000      	movs	r0, #0
 8002808:	7018      	strb	r0, [r3, #0]
 800280a:	bd38      	pop	{r3, r4, r5, pc}
 800280c:	20001e64 	.word	0x20001e64
 8002810:	20001e6c 	.word	0x20001e6c
 8002814:	08006e68 	.word	0x08006e68
 8002818:	20001958 	.word	0x20001958
 800281c:	08006e84 	.word	0x08006e84
 8002820:	20001e4c 	.word	0x20001e4c
 8002824:	08006e9c 	.word	0x08006e9c
 8002828:	20001e60 	.word	0x20001e60
 800282c:	20001e65 	.word	0x20001e65

08002830 <osKernelInitialize>:
 8002830:	b510      	push	{r4, lr}
 8002832:	f3ef 8410 	mrs	r4, PRIMASK
 8002836:	b974      	cbnz	r4, 8002856 <osKernelInitialize+0x26>
 8002838:	f3ef 8405 	mrs	r4, IPSR
 800283c:	b95c      	cbnz	r4, 8002856 <osKernelInitialize+0x26>
 800283e:	f3ef 8414 	mrs	r4, CONTROL
 8002842:	07e4      	lsls	r4, r4, #31
 8002844:	d403      	bmi.n	800284e <osKernelInitialize+0x1e>
 8002846:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800284a:	f7ff bfbb 	b.w	80027c4 <svcKernelInitialize>
 800284e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800285c <osKernelInitialize+0x2c>
 8002852:	df00      	svc	0
 8002854:	bd10      	pop	{r4, pc}
 8002856:	2082      	movs	r0, #130	; 0x82
 8002858:	bd10      	pop	{r4, pc}
 800285a:	0000      	.short	0x0000
 800285c:	080027c5 	.word	0x080027c5

08002860 <svcMessageGet>:
 8002860:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002864:	460c      	mov	r4, r1
 8002866:	4680      	mov	r8, r0
 8002868:	b318      	cbz	r0, 80028b2 <svcMessageGet+0x52>
 800286a:	7803      	ldrb	r3, [r0, #0]
 800286c:	2b01      	cmp	r3, #1
 800286e:	d125      	bne.n	80028bc <svcMessageGet+0x5c>
 8002870:	4608      	mov	r0, r1
 8002872:	f7ff fd73 	bl	800235c <rt_ms2tick>
 8002876:	a902      	add	r1, sp, #8
 8002878:	4602      	mov	r2, r0
 800287a:	4640      	mov	r0, r8
 800287c:	f7ff fbfe 	bl	800207c <rt_mbx_wait>
 8002880:	2801      	cmp	r0, #1
 8002882:	d111      	bne.n	80028a8 <svcMessageGet+0x48>
 8002884:	2000      	movs	r0, #0
 8002886:	2c00      	cmp	r4, #0
 8002888:	4602      	mov	r2, r0
 800288a:	4603      	mov	r3, r0
 800288c:	bf18      	it	ne
 800288e:	2040      	movne	r0, #64	; 0x40
 8002890:	9902      	ldr	r1, [sp, #8]
 8002892:	4604      	mov	r4, r0
 8002894:	460d      	mov	r5, r1
 8002896:	4616      	mov	r6, r2
 8002898:	461f      	mov	r7, r3
 800289a:	4620      	mov	r0, r4
 800289c:	4629      	mov	r1, r5
 800289e:	4632      	mov	r2, r6
 80028a0:	463b      	mov	r3, r7
 80028a2:	b004      	add	sp, #16
 80028a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80028a8:	2000      	movs	r0, #0
 80028aa:	4602      	mov	r2, r0
 80028ac:	4603      	mov	r3, r0
 80028ae:	2010      	movs	r0, #16
 80028b0:	e7ee      	b.n	8002890 <svcMessageGet+0x30>
 80028b2:	2480      	movs	r4, #128	; 0x80
 80028b4:	4605      	mov	r5, r0
 80028b6:	4606      	mov	r6, r0
 80028b8:	4607      	mov	r7, r0
 80028ba:	e7ee      	b.n	800289a <svcMessageGet+0x3a>
 80028bc:	2500      	movs	r5, #0
 80028be:	2480      	movs	r4, #128	; 0x80
 80028c0:	462e      	mov	r6, r5
 80028c2:	462f      	mov	r7, r5
 80028c4:	e7e9      	b.n	800289a <svcMessageGet+0x3a>

080028c6 <isrMessagePut>:
 80028c6:	b570      	push	{r4, r5, r6, lr}
 80028c8:	460e      	mov	r6, r1
 80028ca:	4614      	mov	r4, r2
 80028cc:	4605      	mov	r5, r0
 80028ce:	b160      	cbz	r0, 80028ea <isrMessagePut+0x24>
 80028d0:	b95a      	cbnz	r2, 80028ea <isrMessagePut+0x24>
 80028d2:	7803      	ldrb	r3, [r0, #0]
 80028d4:	2b01      	cmp	r3, #1
 80028d6:	d108      	bne.n	80028ea <isrMessagePut+0x24>
 80028d8:	f7ff fc26 	bl	8002128 <rt_mbx_check>
 80028dc:	b138      	cbz	r0, 80028ee <isrMessagePut+0x28>
 80028de:	4628      	mov	r0, r5
 80028e0:	4631      	mov	r1, r6
 80028e2:	f7ff fc25 	bl	8002130 <isr_mbx_send>
 80028e6:	4620      	mov	r0, r4
 80028e8:	bd70      	pop	{r4, r5, r6, pc}
 80028ea:	2080      	movs	r0, #128	; 0x80
 80028ec:	bd70      	pop	{r4, r5, r6, pc}
 80028ee:	2081      	movs	r0, #129	; 0x81
 80028f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080028f4 <sysTimerTick>:
 80028f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028f6:	4e11      	ldr	r6, [pc, #68]	; (800293c <sysTimerTick+0x48>)
 80028f8:	6834      	ldr	r4, [r6, #0]
 80028fa:	b12c      	cbz	r4, 8002908 <sysTimerTick+0x14>
 80028fc:	68a3      	ldr	r3, [r4, #8]
 80028fe:	4f10      	ldr	r7, [pc, #64]	; (8002940 <sysTimerTick+0x4c>)
 8002900:	3b01      	subs	r3, #1
 8002902:	60a3      	str	r3, [r4, #8]
 8002904:	68a2      	ldr	r2, [r4, #8]
 8002906:	b102      	cbz	r2, 800290a <sysTimerTick+0x16>
 8002908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800290a:	6825      	ldr	r5, [r4, #0]
 800290c:	6838      	ldr	r0, [r7, #0]
 800290e:	6035      	str	r5, [r6, #0]
 8002910:	4621      	mov	r1, r4
 8002912:	f7ff ffd8 	bl	80028c6 <isrMessagePut>
 8002916:	b110      	cbz	r0, 800291e <sysTimerTick+0x2a>
 8002918:	2004      	movs	r0, #4
 800291a:	f7ff fa15 	bl	8001d48 <os_error>
 800291e:	7963      	ldrb	r3, [r4, #5]
 8002920:	2b01      	cmp	r3, #1
 8002922:	d107      	bne.n	8002934 <sysTimerTick+0x40>
 8002924:	68e1      	ldr	r1, [r4, #12]
 8002926:	4620      	mov	r0, r4
 8002928:	f7ff fcfe 	bl	8002328 <rt_timer_insert>
 800292c:	2d00      	cmp	r5, #0
 800292e:	d0eb      	beq.n	8002908 <sysTimerTick+0x14>
 8002930:	462c      	mov	r4, r5
 8002932:	e7e7      	b.n	8002904 <sysTimerTick+0x10>
 8002934:	2301      	movs	r3, #1
 8002936:	7123      	strb	r3, [r4, #4]
 8002938:	e7f8      	b.n	800292c <sysTimerTick+0x38>
 800293a:	bf00      	nop
 800293c:	20001e68 	.word	0x20001e68
 8002940:	20001958 	.word	0x20001958

08002944 <isrMessageGet>:
 8002944:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002946:	4604      	mov	r4, r0
 8002948:	4616      	mov	r6, r2
 800294a:	4608      	mov	r0, r1
 800294c:	b101      	cbz	r1, 8002950 <isrMessageGet+0xc>
 800294e:	b122      	cbz	r2, 800295a <isrMessageGet+0x16>
 8002950:	2380      	movs	r3, #128	; 0x80
 8002952:	6023      	str	r3, [r4, #0]
 8002954:	4620      	mov	r0, r4
 8002956:	b004      	add	sp, #16
 8002958:	bd70      	pop	{r4, r5, r6, pc}
 800295a:	780b      	ldrb	r3, [r1, #0]
 800295c:	2b01      	cmp	r3, #1
 800295e:	d1f7      	bne.n	8002950 <isrMessageGet+0xc>
 8002960:	a902      	add	r1, sp, #8
 8002962:	f7ff fbec 	bl	800213e <isr_mbx_receive>
 8002966:	2804      	cmp	r0, #4
 8002968:	bf08      	it	eq
 800296a:	2310      	moveq	r3, #16
 800296c:	ad01      	add	r5, sp, #4
 800296e:	bf14      	ite	ne
 8002970:	9601      	strne	r6, [sp, #4]
 8002972:	9301      	streq	r3, [sp, #4]
 8002974:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002978:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800297c:	e7ea      	b.n	8002954 <isrMessageGet+0x10>
	...

08002980 <osMessageGet>:
 8002980:	b538      	push	{r3, r4, r5, lr}
 8002982:	4604      	mov	r4, r0
 8002984:	4615      	mov	r5, r2
 8002986:	f3ef 8010 	mrs	r0, PRIMASK
 800298a:	b910      	cbnz	r0, 8002992 <osMessageGet+0x12>
 800298c:	f3ef 8005 	mrs	r0, IPSR
 8002990:	b128      	cbz	r0, 800299e <osMessageGet+0x1e>
 8002992:	462a      	mov	r2, r5
 8002994:	4620      	mov	r0, r4
 8002996:	f7ff ffd5 	bl	8002944 <isrMessageGet>
 800299a:	4620      	mov	r0, r4
 800299c:	bd38      	pop	{r3, r4, r5, pc}
 800299e:	4608      	mov	r0, r1
 80029a0:	4611      	mov	r1, r2
 80029a2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80029b0 <osMessageGet+0x30>
 80029a6:	df00      	svc	0
 80029a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80029ac:	e7f5      	b.n	800299a <osMessageGet+0x1a>
 80029ae:	0000      	.short	0x0000
 80029b0:	08002861 	.word	0x08002861

080029b4 <osTimerThread>:
 80029b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80029b6:	4c0a      	ldr	r4, [pc, #40]	; (80029e0 <osTimerThread+0x2c>)
 80029b8:	6821      	ldr	r1, [r4, #0]
 80029ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80029be:	a803      	add	r0, sp, #12
 80029c0:	f7ff ffde 	bl	8002980 <osMessageGet>
 80029c4:	9b03      	ldr	r3, [sp, #12]
 80029c6:	2b10      	cmp	r3, #16
 80029c8:	d1f6      	bne.n	80029b8 <osTimerThread+0x4>
 80029ca:	9904      	ldr	r1, [sp, #16]
 80029cc:	a801      	add	r0, sp, #4
 80029ce:	f7ff fdf7 	bl	80025c0 <osTimerCall>
 80029d2:	9b01      	ldr	r3, [sp, #4]
 80029d4:	2b00      	cmp	r3, #0
 80029d6:	d0ef      	beq.n	80029b8 <osTimerThread+0x4>
 80029d8:	9802      	ldr	r0, [sp, #8]
 80029da:	4798      	blx	r3
 80029dc:	e7ec      	b.n	80029b8 <osTimerThread+0x4>
 80029de:	bf00      	nop
 80029e0:	20001958 	.word	0x20001958

080029e4 <rt_switch_req>:
 80029e4:	4b05      	ldr	r3, [pc, #20]	; (80029fc <rt_switch_req+0x18>)
 80029e6:	6058      	str	r0, [r3, #4]
 80029e8:	2302      	movs	r3, #2
 80029ea:	7043      	strb	r3, [r0, #1]
 80029ec:	4b04      	ldr	r3, [pc, #16]	; (8002a00 <rt_switch_req+0x1c>)
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	b11b      	cbz	r3, 80029fa <rt_switch_req+0x16>
 80029f2:	691b      	ldr	r3, [r3, #16]
 80029f4:	b10b      	cbz	r3, 80029fa <rt_switch_req+0x16>
 80029f6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80029f8:	4718      	bx	r3
 80029fa:	4770      	bx	lr
 80029fc:	20001e6c 	.word	0x20001e6c
 8002a00:	20001e54 	.word	0x20001e54

08002a04 <rt_dispatch.part.0>:
 8002a04:	b508      	push	{r3, lr}
 8002a06:	4803      	ldr	r0, [pc, #12]	; (8002a14 <rt_dispatch.part.0+0x10>)
 8002a08:	f7ff f898 	bl	8001b3c <rt_get_first>
 8002a0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002a10:	f7ff bfe8 	b.w	80029e4 <rt_switch_req>
 8002a14:	20001678 	.word	0x20001678

08002a18 <rt_dispatch>:
 8002a18:	b570      	push	{r4, r5, r6, lr}
 8002a1a:	4604      	mov	r4, r0
 8002a1c:	b918      	cbnz	r0, 8002a26 <rt_dispatch+0xe>
 8002a1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a22:	f7ff bfef 	b.w	8002a04 <rt_dispatch.part.0>
 8002a26:	4e0c      	ldr	r6, [pc, #48]	; (8002a58 <rt_dispatch+0x40>)
 8002a28:	78a2      	ldrb	r2, [r4, #2]
 8002a2a:	6830      	ldr	r0, [r6, #0]
 8002a2c:	7883      	ldrb	r3, [r0, #2]
 8002a2e:	429a      	cmp	r2, r3
 8002a30:	f04f 0501 	mov.w	r5, #1
 8002a34:	d908      	bls.n	8002a48 <rt_dispatch+0x30>
 8002a36:	f7ff f893 	bl	8001b60 <rt_put_rdy_first>
 8002a3a:	6833      	ldr	r3, [r6, #0]
 8002a3c:	705d      	strb	r5, [r3, #1]
 8002a3e:	4620      	mov	r0, r4
 8002a40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a44:	f7ff bfce 	b.w	80029e4 <rt_switch_req>
 8002a48:	7065      	strb	r5, [r4, #1]
 8002a4a:	4621      	mov	r1, r4
 8002a4c:	4803      	ldr	r0, [pc, #12]	; (8002a5c <rt_dispatch+0x44>)
 8002a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a52:	f7ff b85b 	b.w	8001b0c <rt_put_prio>
 8002a56:	bf00      	nop
 8002a58:	20001e6c 	.word	0x20001e6c
 8002a5c:	20001678 	.word	0x20001678

08002a60 <rt_block>:
 8002a60:	b538      	push	{r3, r4, r5, lr}
 8002a62:	460d      	mov	r5, r1
 8002a64:	4601      	mov	r1, r0
 8002a66:	b180      	cbz	r0, 8002a8a <rt_block+0x2a>
 8002a68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a6c:	4298      	cmp	r0, r3
 8002a6e:	4c07      	ldr	r4, [pc, #28]	; (8002a8c <rt_block+0x2c>)
 8002a70:	d002      	beq.n	8002a78 <rt_block+0x18>
 8002a72:	6820      	ldr	r0, [r4, #0]
 8002a74:	f7ff f87e 	bl	8001b74 <rt_put_dly>
 8002a78:	6823      	ldr	r3, [r4, #0]
 8002a7a:	4805      	ldr	r0, [pc, #20]	; (8002a90 <rt_block+0x30>)
 8002a7c:	705d      	strb	r5, [r3, #1]
 8002a7e:	f7ff f85d 	bl	8001b3c <rt_get_first>
 8002a82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002a86:	f7ff bfad 	b.w	80029e4 <rt_switch_req>
 8002a8a:	bd38      	pop	{r3, r4, r5, pc}
 8002a8c:	20001e6c 	.word	0x20001e6c
 8002a90:	20001678 	.word	0x20001678

08002a94 <rt_tsk_self>:
 8002a94:	4b02      	ldr	r3, [pc, #8]	; (8002aa0 <rt_tsk_self+0xc>)
 8002a96:	6818      	ldr	r0, [r3, #0]
 8002a98:	b100      	cbz	r0, 8002a9c <rt_tsk_self+0x8>
 8002a9a:	78c0      	ldrb	r0, [r0, #3]
 8002a9c:	4770      	bx	lr
 8002a9e:	bf00      	nop
 8002aa0:	20001e6c 	.word	0x20001e6c

08002aa4 <rt_tsk_prio>:
 8002aa4:	b510      	push	{r4, lr}
 8002aa6:	b9a8      	cbnz	r0, 8002ad4 <rt_tsk_prio+0x30>
 8002aa8:	4b19      	ldr	r3, [pc, #100]	; (8002b10 <rt_tsk_prio+0x6c>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	7099      	strb	r1, [r3, #2]
 8002aae:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002ab2:	4818      	ldr	r0, [pc, #96]	; (8002b14 <rt_tsk_prio+0x70>)
 8002ab4:	6843      	ldr	r3, [r0, #4]
 8002ab6:	789b      	ldrb	r3, [r3, #2]
 8002ab8:	428b      	cmp	r3, r1
 8002aba:	d801      	bhi.n	8002ac0 <rt_tsk_prio+0x1c>
 8002abc:	2000      	movs	r0, #0
 8002abe:	bd10      	pop	{r4, pc}
 8002ac0:	4c13      	ldr	r4, [pc, #76]	; (8002b10 <rt_tsk_prio+0x6c>)
 8002ac2:	6821      	ldr	r1, [r4, #0]
 8002ac4:	f7ff f822 	bl	8001b0c <rt_put_prio>
 8002ac8:	6823      	ldr	r3, [r4, #0]
 8002aca:	2201      	movs	r2, #1
 8002acc:	705a      	strb	r2, [r3, #1]
 8002ace:	f7ff ff99 	bl	8002a04 <rt_dispatch.part.0>
 8002ad2:	e7f3      	b.n	8002abc <rt_tsk_prio+0x18>
 8002ad4:	4b10      	ldr	r3, [pc, #64]	; (8002b18 <rt_tsk_prio+0x74>)
 8002ad6:	881b      	ldrh	r3, [r3, #0]
 8002ad8:	4298      	cmp	r0, r3
 8002ada:	d817      	bhi.n	8002b0c <rt_tsk_prio+0x68>
 8002adc:	3801      	subs	r0, #1
 8002ade:	4b0f      	ldr	r3, [pc, #60]	; (8002b1c <rt_tsk_prio+0x78>)
 8002ae0:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002ae4:	b194      	cbz	r4, 8002b0c <rt_tsk_prio+0x68>
 8002ae6:	4b0a      	ldr	r3, [pc, #40]	; (8002b10 <rt_tsk_prio+0x6c>)
 8002ae8:	70a1      	strb	r1, [r4, #2]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002af0:	429c      	cmp	r4, r3
 8002af2:	d0de      	beq.n	8002ab2 <rt_tsk_prio+0xe>
 8002af4:	4620      	mov	r0, r4
 8002af6:	f7ff f8af 	bl	8001c58 <rt_resort_prio>
 8002afa:	7863      	ldrb	r3, [r4, #1]
 8002afc:	2b01      	cmp	r3, #1
 8002afe:	d1dd      	bne.n	8002abc <rt_tsk_prio+0x18>
 8002b00:	4804      	ldr	r0, [pc, #16]	; (8002b14 <rt_tsk_prio+0x70>)
 8002b02:	f7ff f81b 	bl	8001b3c <rt_get_first>
 8002b06:	f7ff ff87 	bl	8002a18 <rt_dispatch>
 8002b0a:	e7d7      	b.n	8002abc <rt_tsk_prio+0x18>
 8002b0c:	20ff      	movs	r0, #255	; 0xff
 8002b0e:	bd10      	pop	{r4, pc}
 8002b10:	20001e6c 	.word	0x20001e6c
 8002b14:	20001678 	.word	0x20001678
 8002b18:	08006e64 	.word	0x08006e64
 8002b1c:	200018b8 	.word	0x200018b8

08002b20 <rt_tsk_create>:
 8002b20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002b24:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002b28:	460d      	mov	r5, r1
 8002b2a:	4680      	mov	r8, r0
 8002b2c:	4823      	ldr	r0, [pc, #140]	; (8002bbc <rt_tsk_create+0x9c>)
 8002b2e:	4616      	mov	r6, r2
 8002b30:	469a      	mov	r10, r3
 8002b32:	bf08      	it	eq
 8002b34:	3501      	addeq	r5, #1
 8002b36:	f7ff fa72 	bl	800201e <rt_alloc_box>
 8002b3a:	4604      	mov	r4, r0
 8002b3c:	b920      	cbnz	r0, 8002b48 <rt_tsk_create+0x28>
 8002b3e:	f04f 0900 	mov.w	r9, #0
 8002b42:	4648      	mov	r0, r9
 8002b44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002b48:	4b1d      	ldr	r3, [pc, #116]	; (8002bc0 <rt_tsk_create+0xa0>)
 8002b4a:	6306      	str	r6, [r0, #48]	; 0x30
 8002b4c:	881b      	ldrh	r3, [r3, #0]
 8002b4e:	4e1d      	ldr	r6, [pc, #116]	; (8002bc4 <rt_tsk_create+0xa4>)
 8002b50:	0a28      	lsrs	r0, r5, #8
 8002b52:	62a0      	str	r0, [r4, #40]	; 0x28
 8002b54:	2100      	movs	r1, #0
 8002b56:	428b      	cmp	r3, r1
 8002b58:	f101 0901 	add.w	r9, r1, #1
 8002b5c:	d0ef      	beq.n	8002b3e <rt_tsk_create+0x1e>
 8002b5e:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8002b62:	460f      	mov	r7, r1
 8002b64:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002b68:	4649      	mov	r1, r9
 8002b6a:	2a00      	cmp	r2, #0
 8002b6c:	d1f3      	bne.n	8002b56 <rt_tsk_create+0x36>
 8002b6e:	b2ed      	uxtb	r5, r5
 8002b70:	2301      	movs	r3, #1
 8002b72:	f884 9003 	strb.w	r9, [r4, #3]
 8002b76:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002b7a:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002b7e:	7022      	strb	r2, [r4, #0]
 8002b80:	7063      	strb	r3, [r4, #1]
 8002b82:	70a5      	strb	r5, [r4, #2]
 8002b84:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002b88:	6062      	str	r2, [r4, #4]
 8002b8a:	60a2      	str	r2, [r4, #8]
 8002b8c:	60e2      	str	r2, [r4, #12]
 8002b8e:	6122      	str	r2, [r4, #16]
 8002b90:	6222      	str	r2, [r4, #32]
 8002b92:	82a2      	strh	r2, [r4, #20]
 8002b94:	82e2      	strh	r2, [r4, #22]
 8002b96:	8322      	strh	r2, [r4, #24]
 8002b98:	8362      	strh	r2, [r4, #26]
 8002b9a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002b9e:	b918      	cbnz	r0, 8002ba8 <rt_tsk_create+0x88>
 8002ba0:	4809      	ldr	r0, [pc, #36]	; (8002bc8 <rt_tsk_create+0xa8>)
 8002ba2:	f7ff fa3c 	bl	800201e <rt_alloc_box>
 8002ba6:	6320      	str	r0, [r4, #48]	; 0x30
 8002ba8:	4620      	mov	r0, r4
 8002baa:	4641      	mov	r1, r8
 8002bac:	f7ff f91a 	bl	8001de4 <rt_init_stack>
 8002bb0:	4620      	mov	r0, r4
 8002bb2:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002bb6:	f7ff ff2f 	bl	8002a18 <rt_dispatch>
 8002bba:	e7c2      	b.n	8002b42 <rt_tsk_create+0x22>
 8002bbc:	20001c80 	.word	0x20001c80
 8002bc0:	08006e64 	.word	0x08006e64
 8002bc4:	200018b8 	.word	0x200018b8
 8002bc8:	200016a8 	.word	0x200016a8

08002bcc <rt_tsk_delete>:
 8002bcc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002bd0:	4d4d      	ldr	r5, [pc, #308]	; (8002d08 <rt_tsk_delete+0x13c>)
 8002bd2:	b118      	cbz	r0, 8002bdc <rt_tsk_delete+0x10>
 8002bd4:	682b      	ldr	r3, [r5, #0]
 8002bd6:	78db      	ldrb	r3, [r3, #3]
 8002bd8:	4298      	cmp	r0, r3
 8002bda:	d141      	bne.n	8002c60 <rt_tsk_delete+0x94>
 8002bdc:	682c      	ldr	r4, [r5, #0]
 8002bde:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002d1c <rt_tsk_delete+0x150>
 8002be2:	2300      	movs	r3, #0
 8002be4:	7063      	strb	r3, [r4, #1]
 8002be6:	f002 fce8 	bl	80055ba <rt_get_PSP>
 8002bea:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002bec:	f7ff f9e0 	bl	8001fb0 <rt_stk_check>
 8002bf0:	682b      	ldr	r3, [r5, #0]
 8002bf2:	6a1c      	ldr	r4, [r3, #32]
 8002bf4:	2701      	movs	r7, #1
 8002bf6:	b9a4      	cbnz	r4, 8002c22 <rt_tsk_delete+0x56>
 8002bf8:	682a      	ldr	r2, [r5, #0]
 8002bfa:	4944      	ldr	r1, [pc, #272]	; (8002d0c <rt_tsk_delete+0x140>)
 8002bfc:	78d3      	ldrb	r3, [r2, #3]
 8002bfe:	4844      	ldr	r0, [pc, #272]	; (8002d10 <rt_tsk_delete+0x144>)
 8002c00:	3b01      	subs	r3, #1
 8002c02:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002c06:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002c08:	f7ff fa16 	bl	8002038 <rt_free_box>
 8002c0c:	6829      	ldr	r1, [r5, #0]
 8002c0e:	4841      	ldr	r0, [pc, #260]	; (8002d14 <rt_tsk_delete+0x148>)
 8002c10:	630c      	str	r4, [r1, #48]	; 0x30
 8002c12:	f7ff fa11 	bl	8002038 <rt_free_box>
 8002c16:	602c      	str	r4, [r5, #0]
 8002c18:	f7ff fef4 	bl	8002a04 <rt_dispatch.part.0>
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002c22:	6863      	ldr	r3, [r4, #4]
 8002c24:	b1b3      	cbz	r3, 8002c54 <rt_tsk_delete+0x88>
 8002c26:	4620      	mov	r0, r4
 8002c28:	f7fe ff88 	bl	8001b3c <rt_get_first>
 8002c2c:	2100      	movs	r1, #0
 8002c2e:	4606      	mov	r6, r0
 8002c30:	f7ff f924 	bl	8001e7c <rt_ret_val>
 8002c34:	4630      	mov	r0, r6
 8002c36:	f7ff f827 	bl	8001c88 <rt_rmv_dly>
 8002c3a:	7077      	strb	r7, [r6, #1]
 8002c3c:	4631      	mov	r1, r6
 8002c3e:	4640      	mov	r0, r8
 8002c40:	f7fe ff64 	bl	8001b0c <rt_put_prio>
 8002c44:	68e3      	ldr	r3, [r4, #12]
 8002c46:	6a32      	ldr	r2, [r6, #32]
 8002c48:	8067      	strh	r7, [r4, #2]
 8002c4a:	60a6      	str	r6, [r4, #8]
 8002c4c:	60e2      	str	r2, [r4, #12]
 8002c4e:	6234      	str	r4, [r6, #32]
 8002c50:	461c      	mov	r4, r3
 8002c52:	e7d0      	b.n	8002bf6 <rt_tsk_delete+0x2a>
 8002c54:	68e2      	ldr	r2, [r4, #12]
 8002c56:	8063      	strh	r3, [r4, #2]
 8002c58:	60a3      	str	r3, [r4, #8]
 8002c5a:	60e3      	str	r3, [r4, #12]
 8002c5c:	4614      	mov	r4, r2
 8002c5e:	e7ca      	b.n	8002bf6 <rt_tsk_delete+0x2a>
 8002c60:	4b2d      	ldr	r3, [pc, #180]	; (8002d18 <rt_tsk_delete+0x14c>)
 8002c62:	881b      	ldrh	r3, [r3, #0]
 8002c64:	4298      	cmp	r0, r3
 8002c66:	d84d      	bhi.n	8002d04 <rt_tsk_delete+0x138>
 8002c68:	4b28      	ldr	r3, [pc, #160]	; (8002d0c <rt_tsk_delete+0x140>)
 8002c6a:	1e47      	subs	r7, r0, #1
 8002c6c:	4699      	mov	r9, r3
 8002c6e:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002c72:	2e00      	cmp	r6, #0
 8002c74:	d046      	beq.n	8002d04 <rt_tsk_delete+0x138>
 8002c76:	4630      	mov	r0, r6
 8002c78:	f7fe ffd8 	bl	8001c2c <rt_rmv_list>
 8002c7c:	4630      	mov	r0, r6
 8002c7e:	f7ff f803 	bl	8001c88 <rt_rmv_dly>
 8002c82:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002d1c <rt_tsk_delete+0x150>
 8002c86:	6a34      	ldr	r4, [r6, #32]
 8002c88:	f04f 0a01 	mov.w	r10, #1
 8002c8c:	b9b4      	cbnz	r4, 8002cbc <rt_tsk_delete+0xf0>
 8002c8e:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002c90:	481f      	ldr	r0, [pc, #124]	; (8002d10 <rt_tsk_delete+0x144>)
 8002c92:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002c96:	f7ff f9cf 	bl	8002038 <rt_free_box>
 8002c9a:	4631      	mov	r1, r6
 8002c9c:	6334      	str	r4, [r6, #48]	; 0x30
 8002c9e:	481d      	ldr	r0, [pc, #116]	; (8002d14 <rt_tsk_delete+0x148>)
 8002ca0:	f7ff f9ca 	bl	8002038 <rt_free_box>
 8002ca4:	481d      	ldr	r0, [pc, #116]	; (8002d1c <rt_tsk_delete+0x150>)
 8002ca6:	6829      	ldr	r1, [r5, #0]
 8002ca8:	6843      	ldr	r3, [r0, #4]
 8002caa:	789a      	ldrb	r2, [r3, #2]
 8002cac:	788b      	ldrb	r3, [r1, #2]
 8002cae:	429a      	cmp	r2, r3
 8002cb0:	d9b4      	bls.n	8002c1c <rt_tsk_delete+0x50>
 8002cb2:	2301      	movs	r3, #1
 8002cb4:	704b      	strb	r3, [r1, #1]
 8002cb6:	f7fe ff29 	bl	8001b0c <rt_put_prio>
 8002cba:	e7ad      	b.n	8002c18 <rt_tsk_delete+0x4c>
 8002cbc:	6863      	ldr	r3, [r4, #4]
 8002cbe:	b1db      	cbz	r3, 8002cf8 <rt_tsk_delete+0x12c>
 8002cc0:	4620      	mov	r0, r4
 8002cc2:	f7fe ff3b 	bl	8001b3c <rt_get_first>
 8002cc6:	2100      	movs	r1, #0
 8002cc8:	4680      	mov	r8, r0
 8002cca:	f7ff f8d7 	bl	8001e7c <rt_ret_val>
 8002cce:	4640      	mov	r0, r8
 8002cd0:	f7fe ffda 	bl	8001c88 <rt_rmv_dly>
 8002cd4:	f888 a001 	strb.w	r10, [r8, #1]
 8002cd8:	4641      	mov	r1, r8
 8002cda:	4658      	mov	r0, r11
 8002cdc:	f7fe ff16 	bl	8001b0c <rt_put_prio>
 8002ce0:	68e3      	ldr	r3, [r4, #12]
 8002ce2:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002ce6:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002cea:	f8c4 8008 	str.w	r8, [r4, #8]
 8002cee:	60e2      	str	r2, [r4, #12]
 8002cf0:	f8c8 4020 	str.w	r4, [r8, #32]
 8002cf4:	461c      	mov	r4, r3
 8002cf6:	e7c9      	b.n	8002c8c <rt_tsk_delete+0xc0>
 8002cf8:	68e2      	ldr	r2, [r4, #12]
 8002cfa:	8063      	strh	r3, [r4, #2]
 8002cfc:	60a3      	str	r3, [r4, #8]
 8002cfe:	60e3      	str	r3, [r4, #12]
 8002d00:	4614      	mov	r4, r2
 8002d02:	e7c3      	b.n	8002c8c <rt_tsk_delete+0xc0>
 8002d04:	24ff      	movs	r4, #255	; 0xff
 8002d06:	e789      	b.n	8002c1c <rt_tsk_delete+0x50>
 8002d08:	20001e6c 	.word	0x20001e6c
 8002d0c:	200018b8 	.word	0x200018b8
 8002d10:	200016a8 	.word	0x200016a8
 8002d14:	20001c80 	.word	0x20001c80
 8002d18:	08006e64 	.word	0x08006e64
 8002d1c:	20001678 	.word	0x20001678

08002d20 <rt_sys_init>:
 8002d20:	b538      	push	{r3, r4, r5, lr}
 8002d22:	4b2c      	ldr	r3, [pc, #176]	; (8002dd4 <rt_sys_init+0xb4>)
 8002d24:	492c      	ldr	r1, [pc, #176]	; (8002dd8 <rt_sys_init+0xb8>)
 8002d26:	881a      	ldrh	r2, [r3, #0]
 8002d28:	2300      	movs	r3, #0
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	4293      	cmp	r3, r2
 8002d2e:	d34d      	bcc.n	8002dcc <rt_sys_init+0xac>
 8002d30:	4b2a      	ldr	r3, [pc, #168]	; (8002ddc <rt_sys_init+0xbc>)
 8002d32:	482b      	ldr	r0, [pc, #172]	; (8002de0 <rt_sys_init+0xc0>)
 8002d34:	8819      	ldrh	r1, [r3, #0]
 8002d36:	4c2b      	ldr	r4, [pc, #172]	; (8002de4 <rt_sys_init+0xc4>)
 8002d38:	2240      	movs	r2, #64	; 0x40
 8002d3a:	f7ff f94b 	bl	8001fd4 <_init_box>
 8002d3e:	4b2a      	ldr	r3, [pc, #168]	; (8002de8 <rt_sys_init+0xc8>)
 8002d40:	482a      	ldr	r0, [pc, #168]	; (8002dec <rt_sys_init+0xcc>)
 8002d42:	881a      	ldrh	r2, [r3, #0]
 8002d44:	4b2a      	ldr	r3, [pc, #168]	; (8002df0 <rt_sys_init+0xd0>)
 8002d46:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002d4a:	6819      	ldr	r1, [r3, #0]
 8002d4c:	f7ff f942 	bl	8001fd4 <_init_box>
 8002d50:	4b28      	ldr	r3, [pc, #160]	; (8002df4 <rt_sys_init+0xd4>)
 8002d52:	8819      	ldrh	r1, [r3, #0]
 8002d54:	4b28      	ldr	r3, [pc, #160]	; (8002df8 <rt_sys_init+0xd8>)
 8002d56:	2208      	movs	r2, #8
 8002d58:	6818      	ldr	r0, [r3, #0]
 8002d5a:	f7ff f93b 	bl	8001fd4 <_init_box>
 8002d5e:	23ff      	movs	r3, #255	; 0xff
 8002d60:	2500      	movs	r5, #0
 8002d62:	70e3      	strb	r3, [r4, #3]
 8002d64:	4821      	ldr	r0, [pc, #132]	; (8002dec <rt_sys_init+0xcc>)
 8002d66:	62a5      	str	r5, [r4, #40]	; 0x28
 8002d68:	2301      	movs	r3, #1
 8002d6a:	7063      	strb	r3, [r4, #1]
 8002d6c:	7025      	strb	r5, [r4, #0]
 8002d6e:	70a5      	strb	r5, [r4, #2]
 8002d70:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002d74:	6065      	str	r5, [r4, #4]
 8002d76:	60a5      	str	r5, [r4, #8]
 8002d78:	60e5      	str	r5, [r4, #12]
 8002d7a:	6125      	str	r5, [r4, #16]
 8002d7c:	6225      	str	r5, [r4, #32]
 8002d7e:	82a5      	strh	r5, [r4, #20]
 8002d80:	82e5      	strh	r5, [r4, #22]
 8002d82:	8325      	strh	r5, [r4, #24]
 8002d84:	8365      	strh	r5, [r4, #26]
 8002d86:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002d8a:	f7ff f948 	bl	800201e <rt_alloc_box>
 8002d8e:	491b      	ldr	r1, [pc, #108]	; (8002dfc <rt_sys_init+0xdc>)
 8002d90:	6320      	str	r0, [r4, #48]	; 0x30
 8002d92:	4620      	mov	r0, r4
 8002d94:	f7ff f826 	bl	8001de4 <rt_init_stack>
 8002d98:	4b19      	ldr	r3, [pc, #100]	; (8002e00 <rt_sys_init+0xe0>)
 8002d9a:	2204      	movs	r2, #4
 8002d9c:	701a      	strb	r2, [r3, #0]
 8002d9e:	605d      	str	r5, [r3, #4]
 8002da0:	4b18      	ldr	r3, [pc, #96]	; (8002e04 <rt_sys_init+0xe4>)
 8002da2:	701a      	strb	r2, [r3, #0]
 8002da4:	60dd      	str	r5, [r3, #12]
 8002da6:	611d      	str	r5, [r3, #16]
 8002da8:	829d      	strh	r5, [r3, #20]
 8002daa:	4b17      	ldr	r3, [pc, #92]	; (8002e08 <rt_sys_init+0xe8>)
 8002dac:	4620      	mov	r0, r4
 8002dae:	601c      	str	r4, [r3, #0]
 8002db0:	2302      	movs	r3, #2
 8002db2:	7063      	strb	r3, [r4, #1]
 8002db4:	f7ff fe16 	bl	80029e4 <rt_switch_req>
 8002db8:	4a14      	ldr	r2, [pc, #80]	; (8002e0c <rt_sys_init+0xec>)
 8002dba:	4b15      	ldr	r3, [pc, #84]	; (8002e10 <rt_sys_init+0xf0>)
 8002dbc:	7812      	ldrb	r2, [r2, #0]
 8002dbe:	701d      	strb	r5, [r3, #0]
 8002dc0:	705d      	strb	r5, [r3, #1]
 8002dc2:	70da      	strb	r2, [r3, #3]
 8002dc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002dc8:	f7ff ba7e 	b.w	80022c8 <rt_init_robin>
 8002dcc:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002dd0:	3301      	adds	r3, #1
 8002dd2:	e7ab      	b.n	8002d2c <rt_sys_init+0xc>
 8002dd4:	08006e64 	.word	0x08006e64
 8002dd8:	200018b8 	.word	0x200018b8
 8002ddc:	08006e30 	.word	0x08006e30
 8002de0:	20001c80 	.word	0x20001c80
 8002de4:	20001e74 	.word	0x20001e74
 8002de8:	08006e80 	.word	0x08006e80
 8002dec:	200016a8 	.word	0x200016a8
 8002df0:	08006e2c 	.word	0x08006e2c
 8002df4:	08006e32 	.word	0x08006e32
 8002df8:	200009f0 	.word	0x200009f0
 8002dfc:	08001d45 	.word	0x08001d45
 8002e00:	20001678 	.word	0x20001678
 8002e04:	20001690 	.word	0x20001690
 8002e08:	20001e6c 	.word	0x20001e6c
 8002e0c:	08006e61 	.word	0x08006e61
 8002e10:	200018d4 	.word	0x200018d4

08002e14 <rt_sys_start>:
 8002e14:	b508      	push	{r3, lr}
 8002e16:	4b1e      	ldr	r3, [pc, #120]	; (8002e90 <rt_sys_start+0x7c>)
 8002e18:	681a      	ldr	r2, [r3, #0]
 8002e1a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002e1e:	601a      	str	r2, [r3, #0]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	021b      	lsls	r3, r3, #8
 8002e24:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002e28:	43db      	mvns	r3, r3
 8002e2a:	fab3 f383 	clz	r3, r3
 8002e2e:	4a19      	ldr	r2, [pc, #100]	; (8002e94 <rt_sys_start+0x80>)
 8002e30:	4819      	ldr	r0, [pc, #100]	; (8002e98 <rt_sys_start+0x84>)
 8002e32:	6812      	ldr	r2, [r2, #0]
 8002e34:	6801      	ldr	r1, [r0, #0]
 8002e36:	b2db      	uxtb	r3, r3
 8002e38:	f1c3 0308 	rsb	r3, r3, #8
 8002e3c:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002e40:	4293      	cmp	r3, r2
 8002e42:	bf98      	it	ls
 8002e44:	1c53      	addls	r3, r2, #1
 8002e46:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002e4a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e4e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002e52:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002e56:	4313      	orrs	r3, r2
 8002e58:	6003      	str	r3, [r0, #0]
 8002e5a:	f7ff f871 	bl	8001f40 <os_tick_init>
 8002e5e:	4b0f      	ldr	r3, [pc, #60]	; (8002e9c <rt_sys_start+0x88>)
 8002e60:	2800      	cmp	r0, #0
 8002e62:	6018      	str	r0, [r3, #0]
 8002e64:	db12      	blt.n	8002e8c <rt_sys_start+0x78>
 8002e66:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002e6a:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002e6e:	22ff      	movs	r2, #255	; 0xff
 8002e70:	7002      	strb	r2, [r0, #0]
 8002e72:	681a      	ldr	r2, [r3, #0]
 8002e74:	0953      	lsrs	r3, r2, #5
 8002e76:	009b      	lsls	r3, r3, #2
 8002e78:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002e7c:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002e80:	f002 021f 	and.w	r2, r2, #31
 8002e84:	2101      	movs	r1, #1
 8002e86:	fa01 f202 	lsl.w	r2, r1, r2
 8002e8a:	601a      	str	r2, [r3, #0]
 8002e8c:	bd08      	pop	{r3, pc}
 8002e8e:	bf00      	nop
 8002e90:	e000ed20 	.word	0xe000ed20
 8002e94:	e000ed0c 	.word	0xe000ed0c
 8002e98:	e000ed1c 	.word	0xe000ed1c
 8002e9c:	20001e50 	.word	0x20001e50

08002ea0 <rt_mut_init>:
 8002ea0:	2303      	movs	r3, #3
 8002ea2:	7003      	strb	r3, [r0, #0]
 8002ea4:	2300      	movs	r3, #0
 8002ea6:	8043      	strh	r3, [r0, #2]
 8002ea8:	6043      	str	r3, [r0, #4]
 8002eaa:	6083      	str	r3, [r0, #8]
 8002eac:	60c3      	str	r3, [r0, #12]
 8002eae:	4770      	bx	lr

08002eb0 <rt_mut_delete>:
 8002eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002eb2:	8843      	ldrh	r3, [r0, #2]
 8002eb4:	4604      	mov	r4, r0
 8002eb6:	b19b      	cbz	r3, 8002ee0 <rt_mut_delete+0x30>
 8002eb8:	6880      	ldr	r0, [r0, #8]
 8002eba:	6a03      	ldr	r3, [r0, #32]
 8002ebc:	429c      	cmp	r4, r3
 8002ebe:	d128      	bne.n	8002f12 <rt_mut_delete+0x62>
 8002ec0:	68e3      	ldr	r3, [r4, #12]
 8002ec2:	6203      	str	r3, [r0, #32]
 8002ec4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002ec8:	6a02      	ldr	r2, [r0, #32]
 8002eca:	bb52      	cbnz	r2, 8002f22 <rt_mut_delete+0x72>
 8002ecc:	7882      	ldrb	r2, [r0, #2]
 8002ece:	429a      	cmp	r2, r3
 8002ed0:	d006      	beq.n	8002ee0 <rt_mut_delete+0x30>
 8002ed2:	7083      	strb	r3, [r0, #2]
 8002ed4:	4b1f      	ldr	r3, [pc, #124]	; (8002f54 <rt_mut_delete+0xa4>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	4298      	cmp	r0, r3
 8002eda:	d001      	beq.n	8002ee0 <rt_mut_delete+0x30>
 8002edc:	f7fe febc 	bl	8001c58 <rt_resort_prio>
 8002ee0:	4f1d      	ldr	r7, [pc, #116]	; (8002f58 <rt_mut_delete+0xa8>)
 8002ee2:	2601      	movs	r6, #1
 8002ee4:	6865      	ldr	r5, [r4, #4]
 8002ee6:	bb25      	cbnz	r5, 8002f32 <rt_mut_delete+0x82>
 8002ee8:	481b      	ldr	r0, [pc, #108]	; (8002f58 <rt_mut_delete+0xa8>)
 8002eea:	6843      	ldr	r3, [r0, #4]
 8002eec:	b16b      	cbz	r3, 8002f0a <rt_mut_delete+0x5a>
 8002eee:	4e19      	ldr	r6, [pc, #100]	; (8002f54 <rt_mut_delete+0xa4>)
 8002ef0:	789a      	ldrb	r2, [r3, #2]
 8002ef2:	6831      	ldr	r1, [r6, #0]
 8002ef4:	788b      	ldrb	r3, [r1, #2]
 8002ef6:	429a      	cmp	r2, r3
 8002ef8:	d907      	bls.n	8002f0a <rt_mut_delete+0x5a>
 8002efa:	f7fe fe07 	bl	8001b0c <rt_put_prio>
 8002efe:	6833      	ldr	r3, [r6, #0]
 8002f00:	2201      	movs	r2, #1
 8002f02:	705a      	strb	r2, [r3, #1]
 8002f04:	4628      	mov	r0, r5
 8002f06:	f7ff fd87 	bl	8002a18 <rt_dispatch>
 8002f0a:	2000      	movs	r0, #0
 8002f0c:	7020      	strb	r0, [r4, #0]
 8002f0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f10:	4613      	mov	r3, r2
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d0d6      	beq.n	8002ec4 <rt_mut_delete+0x14>
 8002f16:	68da      	ldr	r2, [r3, #12]
 8002f18:	4294      	cmp	r4, r2
 8002f1a:	d1f9      	bne.n	8002f10 <rt_mut_delete+0x60>
 8002f1c:	68e2      	ldr	r2, [r4, #12]
 8002f1e:	60da      	str	r2, [r3, #12]
 8002f20:	e7d0      	b.n	8002ec4 <rt_mut_delete+0x14>
 8002f22:	6851      	ldr	r1, [r2, #4]
 8002f24:	b119      	cbz	r1, 8002f2e <rt_mut_delete+0x7e>
 8002f26:	7889      	ldrb	r1, [r1, #2]
 8002f28:	428b      	cmp	r3, r1
 8002f2a:	bf38      	it	cc
 8002f2c:	460b      	movcc	r3, r1
 8002f2e:	68d2      	ldr	r2, [r2, #12]
 8002f30:	e7cb      	b.n	8002eca <rt_mut_delete+0x1a>
 8002f32:	4620      	mov	r0, r4
 8002f34:	f7fe fe02 	bl	8001b3c <rt_get_first>
 8002f38:	2100      	movs	r1, #0
 8002f3a:	4605      	mov	r5, r0
 8002f3c:	f7fe ff9e 	bl	8001e7c <rt_ret_val>
 8002f40:	4628      	mov	r0, r5
 8002f42:	f7fe fea1 	bl	8001c88 <rt_rmv_dly>
 8002f46:	706e      	strb	r6, [r5, #1]
 8002f48:	4629      	mov	r1, r5
 8002f4a:	4638      	mov	r0, r7
 8002f4c:	f7fe fdde 	bl	8001b0c <rt_put_prio>
 8002f50:	e7c8      	b.n	8002ee4 <rt_mut_delete+0x34>
 8002f52:	bf00      	nop
 8002f54:	20001e6c 	.word	0x20001e6c
 8002f58:	20001678 	.word	0x20001678

08002f5c <rt_mut_release>:
 8002f5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f60:	8843      	ldrh	r3, [r0, #2]
 8002f62:	4605      	mov	r5, r0
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d063      	beq.n	8003030 <rt_mut_release+0xd4>
 8002f68:	4f32      	ldr	r7, [pc, #200]	; (8003034 <rt_mut_release+0xd8>)
 8002f6a:	6881      	ldr	r1, [r0, #8]
 8002f6c:	683a      	ldr	r2, [r7, #0]
 8002f6e:	4291      	cmp	r1, r2
 8002f70:	d15e      	bne.n	8003030 <rt_mut_release+0xd4>
 8002f72:	3b01      	subs	r3, #1
 8002f74:	b29b      	uxth	r3, r3
 8002f76:	8043      	strh	r3, [r0, #2]
 8002f78:	b11b      	cbz	r3, 8002f82 <rt_mut_release+0x26>
 8002f7a:	2400      	movs	r4, #0
 8002f7c:	4620      	mov	r0, r4
 8002f7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f82:	6a0b      	ldr	r3, [r1, #32]
 8002f84:	4298      	cmp	r0, r3
 8002f86:	d129      	bne.n	8002fdc <rt_mut_release+0x80>
 8002f88:	68c3      	ldr	r3, [r0, #12]
 8002f8a:	620b      	str	r3, [r1, #32]
 8002f8c:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002f90:	6a0c      	ldr	r4, [r1, #32]
 8002f92:	bb5c      	cbnz	r4, 8002fec <rt_mut_release+0x90>
 8002f94:	708b      	strb	r3, [r1, #2]
 8002f96:	686a      	ldr	r2, [r5, #4]
 8002f98:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003038 <rt_mut_release+0xdc>
 8002f9c:	2a00      	cmp	r2, #0
 8002f9e:	d03b      	beq.n	8003018 <rt_mut_release+0xbc>
 8002fa0:	4628      	mov	r0, r5
 8002fa2:	f7fe fdcb 	bl	8001b3c <rt_get_first>
 8002fa6:	4621      	mov	r1, r4
 8002fa8:	4606      	mov	r6, r0
 8002faa:	f7fe ff67 	bl	8001e7c <rt_ret_val>
 8002fae:	4630      	mov	r0, r6
 8002fb0:	f7fe fe6a 	bl	8001c88 <rt_rmv_dly>
 8002fb4:	6a33      	ldr	r3, [r6, #32]
 8002fb6:	60eb      	str	r3, [r5, #12]
 8002fb8:	f04f 0901 	mov.w	r9, #1
 8002fbc:	6839      	ldr	r1, [r7, #0]
 8002fbe:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002fc2:	f8a5 9002 	strh.w	r9, [r5, #2]
 8002fc6:	60ae      	str	r6, [r5, #8]
 8002fc8:	6235      	str	r5, [r6, #32]
 8002fca:	788a      	ldrb	r2, [r1, #2]
 8002fcc:	789b      	ldrb	r3, [r3, #2]
 8002fce:	429a      	cmp	r2, r3
 8002fd0:	d314      	bcc.n	8002ffc <rt_mut_release+0xa0>
 8002fd2:	4630      	mov	r0, r6
 8002fd4:	f7ff fd20 	bl	8002a18 <rt_dispatch>
 8002fd8:	e7d0      	b.n	8002f7c <rt_mut_release+0x20>
 8002fda:	4613      	mov	r3, r2
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d0d5      	beq.n	8002f8c <rt_mut_release+0x30>
 8002fe0:	68da      	ldr	r2, [r3, #12]
 8002fe2:	4295      	cmp	r5, r2
 8002fe4:	d1f9      	bne.n	8002fda <rt_mut_release+0x7e>
 8002fe6:	68ea      	ldr	r2, [r5, #12]
 8002fe8:	60da      	str	r2, [r3, #12]
 8002fea:	e7cf      	b.n	8002f8c <rt_mut_release+0x30>
 8002fec:	6862      	ldr	r2, [r4, #4]
 8002fee:	b11a      	cbz	r2, 8002ff8 <rt_mut_release+0x9c>
 8002ff0:	7892      	ldrb	r2, [r2, #2]
 8002ff2:	4293      	cmp	r3, r2
 8002ff4:	bf38      	it	cc
 8002ff6:	4613      	movcc	r3, r2
 8002ff8:	68e4      	ldr	r4, [r4, #12]
 8002ffa:	e7ca      	b.n	8002f92 <rt_mut_release+0x36>
 8002ffc:	4640      	mov	r0, r8
 8002ffe:	f7fe fd85 	bl	8001b0c <rt_put_prio>
 8003002:	4631      	mov	r1, r6
 8003004:	4640      	mov	r0, r8
 8003006:	f7fe fd81 	bl	8001b0c <rt_put_prio>
 800300a:	683b      	ldr	r3, [r7, #0]
 800300c:	f883 9001 	strb.w	r9, [r3, #1]
 8003010:	f886 9001 	strb.w	r9, [r6, #1]
 8003014:	4620      	mov	r0, r4
 8003016:	e7dd      	b.n	8002fd4 <rt_mut_release+0x78>
 8003018:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800301c:	7892      	ldrb	r2, [r2, #2]
 800301e:	429a      	cmp	r2, r3
 8003020:	d9ab      	bls.n	8002f7a <rt_mut_release+0x1e>
 8003022:	4640      	mov	r0, r8
 8003024:	f7fe fd72 	bl	8001b0c <rt_put_prio>
 8003028:	683b      	ldr	r3, [r7, #0]
 800302a:	2201      	movs	r2, #1
 800302c:	705a      	strb	r2, [r3, #1]
 800302e:	e7f1      	b.n	8003014 <rt_mut_release+0xb8>
 8003030:	24ff      	movs	r4, #255	; 0xff
 8003032:	e7a3      	b.n	8002f7c <rt_mut_release+0x20>
 8003034:	20001e6c 	.word	0x20001e6c
 8003038:	20001678 	.word	0x20001678

0800303c <rt_mut_wait>:
 800303c:	8843      	ldrh	r3, [r0, #2]
 800303e:	b570      	push	{r4, r5, r6, lr}
 8003040:	4604      	mov	r4, r0
 8003042:	460e      	mov	r6, r1
 8003044:	4d13      	ldr	r5, [pc, #76]	; (8003094 <rt_mut_wait+0x58>)
 8003046:	b943      	cbnz	r3, 800305a <rt_mut_wait+0x1e>
 8003048:	682a      	ldr	r2, [r5, #0]
 800304a:	6082      	str	r2, [r0, #8]
 800304c:	6a11      	ldr	r1, [r2, #32]
 800304e:	60c1      	str	r1, [r0, #12]
 8003050:	6210      	str	r0, [r2, #32]
 8003052:	3301      	adds	r3, #1
 8003054:	8063      	strh	r3, [r4, #2]
 8003056:	2000      	movs	r0, #0
 8003058:	bd70      	pop	{r4, r5, r6, pc}
 800305a:	6880      	ldr	r0, [r0, #8]
 800305c:	682a      	ldr	r2, [r5, #0]
 800305e:	4290      	cmp	r0, r2
 8003060:	d0f7      	beq.n	8003052 <rt_mut_wait+0x16>
 8003062:	b181      	cbz	r1, 8003086 <rt_mut_wait+0x4a>
 8003064:	7893      	ldrb	r3, [r2, #2]
 8003066:	7882      	ldrb	r2, [r0, #2]
 8003068:	429a      	cmp	r2, r3
 800306a:	d202      	bcs.n	8003072 <rt_mut_wait+0x36>
 800306c:	7083      	strb	r3, [r0, #2]
 800306e:	f7fe fdf3 	bl	8001c58 <rt_resort_prio>
 8003072:	6862      	ldr	r2, [r4, #4]
 8003074:	b14a      	cbz	r2, 800308a <rt_mut_wait+0x4e>
 8003076:	6829      	ldr	r1, [r5, #0]
 8003078:	4620      	mov	r0, r4
 800307a:	f7fe fd47 	bl	8001b0c <rt_put_prio>
 800307e:	2109      	movs	r1, #9
 8003080:	4630      	mov	r0, r6
 8003082:	f7ff fced 	bl	8002a60 <rt_block>
 8003086:	2001      	movs	r0, #1
 8003088:	bd70      	pop	{r4, r5, r6, pc}
 800308a:	682b      	ldr	r3, [r5, #0]
 800308c:	6063      	str	r3, [r4, #4]
 800308e:	605a      	str	r2, [r3, #4]
 8003090:	609c      	str	r4, [r3, #8]
 8003092:	e7f4      	b.n	800307e <rt_mut_wait+0x42>
 8003094:	20001e6c 	.word	0x20001e6c

08003098 <rt_dly_wait>:
 8003098:	2103      	movs	r1, #3
 800309a:	f7ff bce1 	b.w	8002a60 <rt_block>
	...

080030a0 <rt_sem_psh>:
 80030a0:	6842      	ldr	r2, [r0, #4]
 80030a2:	b510      	push	{r4, lr}
 80030a4:	b17a      	cbz	r2, 80030c6 <rt_sem_psh+0x26>
 80030a6:	f7fe fd49 	bl	8001b3c <rt_get_first>
 80030aa:	4604      	mov	r4, r0
 80030ac:	f7fe fdec 	bl	8001c88 <rt_rmv_dly>
 80030b0:	2101      	movs	r1, #1
 80030b2:	7061      	strb	r1, [r4, #1]
 80030b4:	4620      	mov	r0, r4
 80030b6:	f7fe fee1 	bl	8001e7c <rt_ret_val>
 80030ba:	4621      	mov	r1, r4
 80030bc:	4804      	ldr	r0, [pc, #16]	; (80030d0 <rt_sem_psh+0x30>)
 80030be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030c2:	f7fe bd23 	b.w	8001b0c <rt_put_prio>
 80030c6:	8842      	ldrh	r2, [r0, #2]
 80030c8:	3201      	adds	r2, #1
 80030ca:	8042      	strh	r2, [r0, #2]
 80030cc:	bd10      	pop	{r4, pc}
 80030ce:	bf00      	nop
 80030d0:	20001678 	.word	0x20001678

080030d4 <timer_irq_handler>:
 80030d4:	b570      	push	{r4, r5, r6, lr}
 80030d6:	4c13      	ldr	r4, [pc, #76]	; (8003124 <timer_irq_handler+0x50>)
 80030d8:	6823      	ldr	r3, [r4, #0]
 80030da:	691a      	ldr	r2, [r3, #16]
 80030dc:	0795      	lsls	r5, r2, #30
 80030de:	d507      	bpl.n	80030f0 <timer_irq_handler+0x1c>
 80030e0:	68da      	ldr	r2, [r3, #12]
 80030e2:	0790      	lsls	r0, r2, #30
 80030e4:	d504      	bpl.n	80030f0 <timer_irq_handler+0x1c>
 80030e6:	f06f 0202 	mvn.w	r2, #2
 80030ea:	611a      	str	r2, [r3, #16]
 80030ec:	f7fe fc4c 	bl	8001988 <us_ticker_irq_handler>
 80030f0:	6823      	ldr	r3, [r4, #0]
 80030f2:	691a      	ldr	r2, [r3, #16]
 80030f4:	0751      	lsls	r1, r2, #29
 80030f6:	d513      	bpl.n	8003120 <timer_irq_handler+0x4c>
 80030f8:	68da      	ldr	r2, [r3, #12]
 80030fa:	0752      	lsls	r2, r2, #29
 80030fc:	d510      	bpl.n	8003120 <timer_irq_handler+0x4c>
 80030fe:	f06f 0204 	mvn.w	r2, #4
 8003102:	4e09      	ldr	r6, [pc, #36]	; (8003128 <timer_irq_handler+0x54>)
 8003104:	611a      	str	r2, [r3, #16]
 8003106:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003108:	6833      	ldr	r3, [r6, #0]
 800310a:	1aeb      	subs	r3, r5, r3
 800310c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003110:	d306      	bcc.n	8003120 <timer_irq_handler+0x4c>
 8003112:	f001 f839 	bl	8004188 <HAL_IncTick>
 8003116:	6823      	ldr	r3, [r4, #0]
 8003118:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 800311c:	639a      	str	r2, [r3, #56]	; 0x38
 800311e:	6035      	str	r5, [r6, #0]
 8003120:	bd70      	pop	{r4, r5, r6, pc}
 8003122:	bf00      	nop
 8003124:	20001eb8 	.word	0x20001eb8
 8003128:	20001264 	.word	0x20001264

0800312c <HAL_InitTick>:
 800312c:	b530      	push	{r4, r5, lr}
 800312e:	b089      	sub	sp, #36	; 0x24
 8003130:	a901      	add	r1, sp, #4
 8003132:	a803      	add	r0, sp, #12
 8003134:	f001 fe54 	bl	8004de0 <HAL_RCC_GetClockConfig>
 8003138:	f001 fe22 	bl	8004d80 <HAL_RCC_GetPCLK1Freq>
 800313c:	4b24      	ldr	r3, [pc, #144]	; (80031d0 <HAL_InitTick+0xa4>)
 800313e:	9001      	str	r0, [sp, #4]
 8003140:	69da      	ldr	r2, [r3, #28]
 8003142:	4c24      	ldr	r4, [pc, #144]	; (80031d4 <HAL_InitTick+0xa8>)
 8003144:	f042 0201 	orr.w	r2, r2, #1
 8003148:	61da      	str	r2, [r3, #28]
 800314a:	69da      	ldr	r2, [r3, #28]
 800314c:	f002 0201 	and.w	r2, r2, #1
 8003150:	9202      	str	r2, [sp, #8]
 8003152:	9a02      	ldr	r2, [sp, #8]
 8003154:	691a      	ldr	r2, [r3, #16]
 8003156:	f042 0201 	orr.w	r2, r2, #1
 800315a:	611a      	str	r2, [r3, #16]
 800315c:	691a      	ldr	r2, [r3, #16]
 800315e:	f022 0201 	bic.w	r2, r2, #1
 8003162:	611a      	str	r2, [r3, #16]
 8003164:	9a06      	ldr	r2, [sp, #24]
 8003166:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800316a:	6023      	str	r3, [r4, #0]
 800316c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003170:	60e3      	str	r3, [r4, #12]
 8003172:	4b19      	ldr	r3, [pc, #100]	; (80031d8 <HAL_InitTick+0xac>)
 8003174:	bb4a      	cbnz	r2, 80031ca <HAL_InitTick+0x9e>
 8003176:	fbb0 f0f3 	udiv	r0, r0, r3
 800317a:	3801      	subs	r0, #1
 800317c:	2500      	movs	r5, #0
 800317e:	6060      	str	r0, [r4, #4]
 8003180:	4814      	ldr	r0, [pc, #80]	; (80031d4 <HAL_InitTick+0xa8>)
 8003182:	6125      	str	r5, [r4, #16]
 8003184:	60a5      	str	r5, [r4, #8]
 8003186:	6165      	str	r5, [r4, #20]
 8003188:	f000 ffa0 	bl	80040cc <HAL_TIM_OC_Init>
 800318c:	4913      	ldr	r1, [pc, #76]	; (80031dc <HAL_InitTick+0xb0>)
 800318e:	201c      	movs	r0, #28
 8003190:	f000 ff20 	bl	8003fd4 <__NVIC_SetVector>
 8003194:	4b12      	ldr	r3, [pc, #72]	; (80031e0 <HAL_InitTick+0xb4>)
 8003196:	480f      	ldr	r0, [pc, #60]	; (80031d4 <HAL_InitTick+0xa8>)
 8003198:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800319c:	601a      	str	r2, [r3, #0]
 800319e:	4629      	mov	r1, r5
 80031a0:	f000 ffdc 	bl	800415c <HAL_TIM_OC_Start>
 80031a4:	2104      	movs	r1, #4
 80031a6:	480b      	ldr	r0, [pc, #44]	; (80031d4 <HAL_InitTick+0xa8>)
 80031a8:	f000 ffd8 	bl	800415c <HAL_TIM_OC_Start>
 80031ac:	6823      	ldr	r3, [r4, #0]
 80031ae:	4a0d      	ldr	r2, [pc, #52]	; (80031e4 <HAL_InitTick+0xb8>)
 80031b0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80031b2:	6011      	str	r1, [r2, #0]
 80031b4:	6812      	ldr	r2, [r2, #0]
 80031b6:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80031ba:	639a      	str	r2, [r3, #56]	; 0x38
 80031bc:	68da      	ldr	r2, [r3, #12]
 80031be:	4628      	mov	r0, r5
 80031c0:	f042 0204 	orr.w	r2, r2, #4
 80031c4:	60da      	str	r2, [r3, #12]
 80031c6:	b009      	add	sp, #36	; 0x24
 80031c8:	bd30      	pop	{r4, r5, pc}
 80031ca:	0040      	lsls	r0, r0, #1
 80031cc:	e7d3      	b.n	8003176 <HAL_InitTick+0x4a>
 80031ce:	bf00      	nop
 80031d0:	40021000 	.word	0x40021000
 80031d4:	20001eb8 	.word	0x20001eb8
 80031d8:	000f4240 	.word	0x000f4240
 80031dc:	080030d5 	.word	0x080030d5
 80031e0:	e000e100 	.word	0xe000e100
 80031e4:	20001264 	.word	0x20001264

080031e8 <HAL_SuspendTick>:
 80031e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031ec:	4a03      	ldr	r2, [pc, #12]	; (80031fc <HAL_SuspendTick+0x14>)
 80031ee:	6013      	str	r3, [r2, #0]
 80031f0:	68da      	ldr	r2, [r3, #12]
 80031f2:	f022 0204 	bic.w	r2, r2, #4
 80031f6:	60da      	str	r2, [r3, #12]
 80031f8:	4770      	bx	lr
 80031fa:	bf00      	nop
 80031fc:	20001eb8 	.word	0x20001eb8

08003200 <HAL_ResumeTick>:
 8003200:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003204:	4a03      	ldr	r2, [pc, #12]	; (8003214 <HAL_ResumeTick+0x14>)
 8003206:	6013      	str	r3, [r2, #0]
 8003208:	68da      	ldr	r2, [r3, #12]
 800320a:	f042 0204 	orr.w	r2, r2, #4
 800320e:	60da      	str	r2, [r3, #12]
 8003210:	4770      	bx	lr
 8003212:	bf00      	nop
 8003214:	20001eb8 	.word	0x20001eb8

08003218 <Set_GPIO_Clock>:
 8003218:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800321a:	2805      	cmp	r0, #5
 800321c:	d843      	bhi.n	80032a6 <Set_GPIO_Clock+0x8e>
 800321e:	e8df f000 	tbb	[pc, r0]
 8003222:	1203      	.short	0x1203
 8003224:	36422a1e 	.word	0x36422a1e
 8003228:	4b21      	ldr	r3, [pc, #132]	; (80032b0 <Set_GPIO_Clock+0x98>)
 800322a:	695a      	ldr	r2, [r3, #20]
 800322c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003230:	615a      	str	r2, [r3, #20]
 8003232:	695b      	ldr	r3, [r3, #20]
 8003234:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003238:	9301      	str	r3, [sp, #4]
 800323a:	9b01      	ldr	r3, [sp, #4]
 800323c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8003240:	b007      	add	sp, #28
 8003242:	f85d fb04 	ldr.w	pc, [sp], #4
 8003246:	4b1a      	ldr	r3, [pc, #104]	; (80032b0 <Set_GPIO_Clock+0x98>)
 8003248:	481a      	ldr	r0, [pc, #104]	; (80032b4 <Set_GPIO_Clock+0x9c>)
 800324a:	695a      	ldr	r2, [r3, #20]
 800324c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003250:	615a      	str	r2, [r3, #20]
 8003252:	695b      	ldr	r3, [r3, #20]
 8003254:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003258:	9302      	str	r3, [sp, #8]
 800325a:	9b02      	ldr	r3, [sp, #8]
 800325c:	e7f0      	b.n	8003240 <Set_GPIO_Clock+0x28>
 800325e:	4b14      	ldr	r3, [pc, #80]	; (80032b0 <Set_GPIO_Clock+0x98>)
 8003260:	4815      	ldr	r0, [pc, #84]	; (80032b8 <Set_GPIO_Clock+0xa0>)
 8003262:	695a      	ldr	r2, [r3, #20]
 8003264:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003268:	615a      	str	r2, [r3, #20]
 800326a:	695b      	ldr	r3, [r3, #20]
 800326c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003270:	9303      	str	r3, [sp, #12]
 8003272:	9b03      	ldr	r3, [sp, #12]
 8003274:	e7e4      	b.n	8003240 <Set_GPIO_Clock+0x28>
 8003276:	4b0e      	ldr	r3, [pc, #56]	; (80032b0 <Set_GPIO_Clock+0x98>)
 8003278:	4810      	ldr	r0, [pc, #64]	; (80032bc <Set_GPIO_Clock+0xa4>)
 800327a:	695a      	ldr	r2, [r3, #20]
 800327c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003280:	615a      	str	r2, [r3, #20]
 8003282:	695b      	ldr	r3, [r3, #20]
 8003284:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003288:	9304      	str	r3, [sp, #16]
 800328a:	9b04      	ldr	r3, [sp, #16]
 800328c:	e7d8      	b.n	8003240 <Set_GPIO_Clock+0x28>
 800328e:	4b08      	ldr	r3, [pc, #32]	; (80032b0 <Set_GPIO_Clock+0x98>)
 8003290:	480b      	ldr	r0, [pc, #44]	; (80032c0 <Set_GPIO_Clock+0xa8>)
 8003292:	695a      	ldr	r2, [r3, #20]
 8003294:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003298:	615a      	str	r2, [r3, #20]
 800329a:	695b      	ldr	r3, [r3, #20]
 800329c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80032a0:	9305      	str	r3, [sp, #20]
 80032a2:	9b05      	ldr	r3, [sp, #20]
 80032a4:	e7cc      	b.n	8003240 <Set_GPIO_Clock+0x28>
 80032a6:	4807      	ldr	r0, [pc, #28]	; (80032c4 <Set_GPIO_Clock+0xac>)
 80032a8:	f7fe fc20 	bl	8001aec <error>
 80032ac:	2000      	movs	r0, #0
 80032ae:	e7c7      	b.n	8003240 <Set_GPIO_Clock+0x28>
 80032b0:	40021000 	.word	0x40021000
 80032b4:	48000400 	.word	0x48000400
 80032b8:	48000800 	.word	0x48000800
 80032bc:	48000c00 	.word	0x48000c00
 80032c0:	48001400 	.word	0x48001400
 80032c4:	08006ea0 	.word	0x08006ea0

080032c8 <gpio_set>:
 80032c8:	b510      	push	{r4, lr}
 80032ca:	2100      	movs	r1, #0
 80032cc:	4604      	mov	r4, r0
 80032ce:	f004 040f 	and.w	r4, r4, #15
 80032d2:	f000 fb33 	bl	800393c <pin_function>
 80032d6:	2001      	movs	r0, #1
 80032d8:	40a0      	lsls	r0, r4
 80032da:	bd10      	pop	{r4, pc}

080032dc <gpio_init>:
 80032dc:	b570      	push	{r4, r5, r6, lr}
 80032de:	4604      	mov	r4, r0
 80032e0:	1c4b      	adds	r3, r1, #1
 80032e2:	460e      	mov	r6, r1
 80032e4:	8221      	strh	r1, [r4, #16]
 80032e6:	d018      	beq.n	800331a <gpio_init+0x3e>
 80032e8:	f3c1 1003 	ubfx	r0, r1, #4, #4
 80032ec:	f7ff ff94 	bl	8003218 <Set_GPIO_Clock>
 80032f0:	4605      	mov	r5, r0
 80032f2:	4630      	mov	r0, r6
 80032f4:	f7ff ffe8 	bl	80032c8 <gpio_set>
 80032f8:	8a23      	ldrh	r3, [r4, #16]
 80032fa:	4a08      	ldr	r2, [pc, #32]	; (800331c <gpio_init+0x40>)
 80032fc:	6165      	str	r5, [r4, #20]
 80032fe:	f003 030f 	and.w	r3, r3, #15
 8003302:	6020      	str	r0, [r4, #0]
 8003304:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003308:	61a3      	str	r3, [r4, #24]
 800330a:	f105 0310 	add.w	r3, r5, #16
 800330e:	6063      	str	r3, [r4, #4]
 8003310:	f105 0318 	add.w	r3, r5, #24
 8003314:	3528      	adds	r5, #40	; 0x28
 8003316:	60a3      	str	r3, [r4, #8]
 8003318:	60e5      	str	r5, [r4, #12]
 800331a:	bd70      	pop	{r4, r5, r6, pc}
 800331c:	08006f90 	.word	0x08006f90

08003320 <gpio_mode>:
 8003320:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003324:	f000 bb8c 	b.w	8003a40 <pin_mode>

08003328 <gpio_dir>:
 8003328:	b510      	push	{r4, lr}
 800332a:	6983      	ldr	r3, [r0, #24]
 800332c:	6944      	ldr	r4, [r0, #20]
 800332e:	b971      	cbnz	r1, 800334e <gpio_dir+0x26>
 8003330:	6821      	ldr	r1, [r4, #0]
 8003332:	fa93 f2a3 	rbit	r2, r3
 8003336:	fab2 f282 	clz	r2, r2
 800333a:	2003      	movs	r0, #3
 800333c:	0052      	lsls	r2, r2, #1
 800333e:	fa00 f202 	lsl.w	r2, r0, r2
 8003342:	ea21 0202 	bic.w	r2, r1, r2
 8003346:	fa93 f3a3 	rbit	r3, r3
 800334a:	6022      	str	r2, [r4, #0]
 800334c:	bd10      	pop	{r4, pc}
 800334e:	6822      	ldr	r2, [r4, #0]
 8003350:	fa93 f1a3 	rbit	r1, r3
 8003354:	fab1 f181 	clz	r1, r1
 8003358:	fa93 f3a3 	rbit	r3, r3
 800335c:	2003      	movs	r0, #3
 800335e:	0049      	lsls	r1, r1, #1
 8003360:	fa00 f101 	lsl.w	r1, r0, r1
 8003364:	fab3 f383 	clz	r3, r3
 8003368:	ea22 0201 	bic.w	r2, r2, r1
 800336c:	005b      	lsls	r3, r3, #1
 800336e:	2101      	movs	r1, #1
 8003370:	fa01 f303 	lsl.w	r3, r1, r3
 8003374:	4313      	orrs	r3, r2
 8003376:	6023      	str	r3, [r4, #0]
 8003378:	bd10      	pop	{r4, pc}

0800337a <hal_sleep>:
 800337a:	b508      	push	{r3, lr}
 800337c:	f7ff ff34 	bl	80031e8 <HAL_SuspendTick>
 8003380:	2101      	movs	r1, #1
 8003382:	2000      	movs	r0, #0
 8003384:	f000 fe46 	bl	8004014 <HAL_PWR_EnterSLEEPMode>
 8003388:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800338c:	f7ff bf38 	b.w	8003200 <HAL_ResumeTick>

08003390 <CAN_SCE_IRQHandler>:
 8003390:	4b38      	ldr	r3, [pc, #224]	; (8003474 <CAN_SCE_IRQHandler+0xe4>)
 8003392:	695a      	ldr	r2, [r3, #20]
 8003394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003398:	4c37      	ldr	r4, [pc, #220]	; (8003478 <CAN_SCE_IRQHandler+0xe8>)
 800339a:	07d2      	lsls	r2, r2, #31
 800339c:	6023      	str	r3, [r4, #0]
 800339e:	d52a      	bpl.n	80033f6 <CAN_SCE_IRQHandler+0x66>
 80033a0:	6898      	ldr	r0, [r3, #8]
 80033a2:	4f36      	ldr	r7, [pc, #216]	; (800347c <CAN_SCE_IRQHandler+0xec>)
 80033a4:	6899      	ldr	r1, [r3, #8]
 80033a6:	4e36      	ldr	r6, [pc, #216]	; (8003480 <CAN_SCE_IRQHandler+0xf0>)
 80033a8:	689a      	ldr	r2, [r3, #8]
 80033aa:	4d36      	ldr	r5, [pc, #216]	; (8003484 <CAN_SCE_IRQHandler+0xf4>)
 80033ac:	4038      	ands	r0, r7
 80033ae:	42b8      	cmp	r0, r7
 80033b0:	ea01 0106 	and.w	r1, r1, r6
 80033b4:	bf04      	itt	eq
 80033b6:	2701      	moveq	r7, #1
 80033b8:	609f      	streq	r7, [r3, #8]
 80033ba:	42b1      	cmp	r1, r6
 80033bc:	bf08      	it	eq
 80033be:	4b2d      	ldreq	r3, [pc, #180]	; (8003474 <CAN_SCE_IRQHandler+0xe4>)
 80033c0:	ea02 0205 	and.w	r2, r2, r5
 80033c4:	bf04      	itt	eq
 80033c6:	f44f 7680 	moveq.w	r6, #256	; 0x100
 80033ca:	609e      	streq	r6, [r3, #8]
 80033cc:	42aa      	cmp	r2, r5
 80033ce:	bf02      	ittt	eq
 80033d0:	4b28      	ldreq	r3, [pc, #160]	; (8003474 <CAN_SCE_IRQHandler+0xe4>)
 80033d2:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 80033d6:	609d      	streq	r5, [r3, #8]
 80033d8:	4b28      	ldr	r3, [pc, #160]	; (800347c <CAN_SCE_IRQHandler+0xec>)
 80033da:	4298      	cmp	r0, r3
 80033dc:	d005      	beq.n	80033ea <CAN_SCE_IRQHandler+0x5a>
 80033de:	4b28      	ldr	r3, [pc, #160]	; (8003480 <CAN_SCE_IRQHandler+0xf0>)
 80033e0:	4299      	cmp	r1, r3
 80033e2:	d002      	beq.n	80033ea <CAN_SCE_IRQHandler+0x5a>
 80033e4:	4b27      	ldr	r3, [pc, #156]	; (8003484 <CAN_SCE_IRQHandler+0xf4>)
 80033e6:	429a      	cmp	r2, r3
 80033e8:	d105      	bne.n	80033f6 <CAN_SCE_IRQHandler+0x66>
 80033ea:	4b27      	ldr	r3, [pc, #156]	; (8003488 <CAN_SCE_IRQHandler+0xf8>)
 80033ec:	4a27      	ldr	r2, [pc, #156]	; (800348c <CAN_SCE_IRQHandler+0xfc>)
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	6810      	ldr	r0, [r2, #0]
 80033f2:	2101      	movs	r1, #1
 80033f4:	4798      	blx	r3
 80033f6:	6823      	ldr	r3, [r4, #0]
 80033f8:	68da      	ldr	r2, [r3, #12]
 80033fa:	695b      	ldr	r3, [r3, #20]
 80033fc:	0797      	lsls	r7, r2, #30
 80033fe:	d007      	beq.n	8003410 <CAN_SCE_IRQHandler+0x80>
 8003400:	079e      	lsls	r6, r3, #30
 8003402:	d505      	bpl.n	8003410 <CAN_SCE_IRQHandler+0x80>
 8003404:	4b20      	ldr	r3, [pc, #128]	; (8003488 <CAN_SCE_IRQHandler+0xf8>)
 8003406:	4a21      	ldr	r2, [pc, #132]	; (800348c <CAN_SCE_IRQHandler+0xfc>)
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	6810      	ldr	r0, [r2, #0]
 800340c:	2100      	movs	r1, #0
 800340e:	4798      	blx	r3
 8003410:	6823      	ldr	r3, [r4, #0]
 8003412:	6999      	ldr	r1, [r3, #24]
 8003414:	695a      	ldr	r2, [r3, #20]
 8003416:	695b      	ldr	r3, [r3, #20]
 8003418:	078d      	lsls	r5, r1, #30
 800341a:	d509      	bpl.n	8003430 <CAN_SCE_IRQHandler+0xa0>
 800341c:	0590      	lsls	r0, r2, #22
 800341e:	d507      	bpl.n	8003430 <CAN_SCE_IRQHandler+0xa0>
 8003420:	0419      	lsls	r1, r3, #16
 8003422:	d505      	bpl.n	8003430 <CAN_SCE_IRQHandler+0xa0>
 8003424:	4b18      	ldr	r3, [pc, #96]	; (8003488 <CAN_SCE_IRQHandler+0xf8>)
 8003426:	4a19      	ldr	r2, [pc, #100]	; (800348c <CAN_SCE_IRQHandler+0xfc>)
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	6810      	ldr	r0, [r2, #0]
 800342c:	2105      	movs	r1, #5
 800342e:	4798      	blx	r3
 8003430:	6822      	ldr	r2, [r4, #0]
 8003432:	6996      	ldr	r6, [r2, #24]
 8003434:	6955      	ldr	r5, [r2, #20]
 8003436:	6952      	ldr	r2, [r2, #20]
 8003438:	f016 0604 	ands.w	r6, r6, #4
 800343c:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 8003440:	d008      	beq.n	8003454 <CAN_SCE_IRQHandler+0xc4>
 8003442:	b13d      	cbz	r5, 8003454 <CAN_SCE_IRQHandler+0xc4>
 8003444:	0412      	lsls	r2, r2, #16
 8003446:	d505      	bpl.n	8003454 <CAN_SCE_IRQHandler+0xc4>
 8003448:	4b0f      	ldr	r3, [pc, #60]	; (8003488 <CAN_SCE_IRQHandler+0xf8>)
 800344a:	4a10      	ldr	r2, [pc, #64]	; (800348c <CAN_SCE_IRQHandler+0xfc>)
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	6810      	ldr	r0, [r2, #0]
 8003450:	2107      	movs	r1, #7
 8003452:	4798      	blx	r3
 8003454:	6823      	ldr	r3, [r4, #0]
 8003456:	695b      	ldr	r3, [r3, #20]
 8003458:	b156      	cbz	r6, 8003470 <CAN_SCE_IRQHandler+0xe0>
 800345a:	b14d      	cbz	r5, 8003470 <CAN_SCE_IRQHandler+0xe0>
 800345c:	041b      	lsls	r3, r3, #16
 800345e:	d507      	bpl.n	8003470 <CAN_SCE_IRQHandler+0xe0>
 8003460:	4b09      	ldr	r3, [pc, #36]	; (8003488 <CAN_SCE_IRQHandler+0xf8>)
 8003462:	4a0a      	ldr	r2, [pc, #40]	; (800348c <CAN_SCE_IRQHandler+0xfc>)
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	6810      	ldr	r0, [r2, #0]
 8003468:	2102      	movs	r1, #2
 800346a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800346e:	4718      	bx	r3
 8003470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003474:	40006400 	.word	0x40006400
 8003478:	20001268 	.word	0x20001268
 800347c:	04000003 	.word	0x04000003
 8003480:	08000300 	.word	0x08000300
 8003484:	10030000 	.word	0x10030000
 8003488:	200012ac 	.word	0x200012ac
 800348c:	200012a8 	.word	0x200012a8

08003490 <CAN_TX_IRQHandler>:
 8003490:	f7ff bf7e 	b.w	8003390 <CAN_SCE_IRQHandler>

08003494 <CAN_RX0_IRQHandler>:
 8003494:	f7ff bf7c 	b.w	8003390 <CAN_SCE_IRQHandler>

08003498 <can_irq_init>:
 8003498:	4b03      	ldr	r3, [pc, #12]	; (80034a8 <can_irq_init+0x10>)
 800349a:	6019      	str	r1, [r3, #0]
 800349c:	6841      	ldr	r1, [r0, #4]
 800349e:	4b03      	ldr	r3, [pc, #12]	; (80034ac <can_irq_init+0x14>)
 80034a0:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80034a4:	4770      	bx	lr
 80034a6:	bf00      	nop
 80034a8:	200012ac 	.word	0x200012ac
 80034ac:	200012a8 	.word	0x200012a8

080034b0 <can_irq_free>:
 80034b0:	6802      	ldr	r2, [r0, #0]
 80034b2:	6953      	ldr	r3, [r2, #20]
 80034b4:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 80034b8:	f023 0313 	bic.w	r3, r3, #19
 80034bc:	6153      	str	r3, [r2, #20]
 80034be:	4b02      	ldr	r3, [pc, #8]	; (80034c8 <can_irq_free+0x18>)
 80034c0:	2100      	movs	r1, #0
 80034c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80034c6:	4770      	bx	lr
 80034c8:	200012a8 	.word	0x200012a8

080034cc <can_free>:
 80034cc:	6802      	ldr	r2, [r0, #0]
 80034ce:	4b09      	ldr	r3, [pc, #36]	; (80034f4 <can_free+0x28>)
 80034d0:	429a      	cmp	r2, r3
 80034d2:	d10d      	bne.n	80034f0 <can_free+0x24>
 80034d4:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 80034d8:	691a      	ldr	r2, [r3, #16]
 80034da:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80034de:	611a      	str	r2, [r3, #16]
 80034e0:	691a      	ldr	r2, [r3, #16]
 80034e2:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 80034e6:	611a      	str	r2, [r3, #16]
 80034e8:	69da      	ldr	r2, [r3, #28]
 80034ea:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 80034ee:	61da      	str	r2, [r3, #28]
 80034f0:	4770      	bx	lr
 80034f2:	bf00      	nop
 80034f4:	40006400 	.word	0x40006400

080034f8 <can_frequency>:
 80034f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034fa:	460d      	mov	r5, r1
 80034fc:	4604      	mov	r4, r0
 80034fe:	f001 fc3f 	bl	8004d80 <HAL_RCC_GetPCLK1Freq>
 8003502:	2318      	movs	r3, #24
 8003504:	fbb0 f0f5 	udiv	r0, r0, r5
 8003508:	2119      	movs	r1, #25
 800350a:	fbb0 f3f3 	udiv	r3, r0, r3
 800350e:	0886      	lsrs	r6, r0, #2
 8003510:	b29b      	uxth	r3, r3
 8003512:	42b3      	cmp	r3, r6
 8003514:	d315      	bcc.n	8003542 <can_frequency+0x4a>
 8003516:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800351a:	2b00      	cmp	r3, #0
 800351c:	6822      	ldr	r2, [r4, #0]
 800351e:	dd1c      	ble.n	800355a <can_frequency+0x62>
 8003520:	6811      	ldr	r1, [r2, #0]
 8003522:	f041 0101 	orr.w	r1, r1, #1
 8003526:	6011      	str	r1, [r2, #0]
 8003528:	6851      	ldr	r1, [r2, #4]
 800352a:	07c9      	lsls	r1, r1, #31
 800352c:	d5fc      	bpl.n	8003528 <can_frequency+0x30>
 800352e:	61d3      	str	r3, [r2, #28]
 8003530:	6813      	ldr	r3, [r2, #0]
 8003532:	f023 0301 	bic.w	r3, r3, #1
 8003536:	6013      	str	r3, [r2, #0]
 8003538:	6853      	ldr	r3, [r2, #4]
 800353a:	07db      	lsls	r3, r3, #31
 800353c:	d4fc      	bmi.n	8003538 <can_frequency+0x40>
 800353e:	2001      	movs	r0, #1
 8003540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003542:	3301      	adds	r3, #1
 8003544:	b29b      	uxth	r3, r3
 8003546:	43df      	mvns	r7, r3
 8003548:	fb03 1201 	mla	r2, r3, r1, r1
 800354c:	2516      	movs	r5, #22
 800354e:	4290      	cmp	r0, r2
 8003550:	d005      	beq.n	800355e <can_frequency+0x66>
 8003552:	3d01      	subs	r5, #1
 8003554:	443a      	add	r2, r7
 8003556:	d1fa      	bne.n	800354e <can_frequency+0x56>
 8003558:	e7db      	b.n	8003512 <can_frequency+0x1a>
 800355a:	2000      	movs	r0, #0
 800355c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800355e:	4908      	ldr	r1, [pc, #32]	; (8003580 <can_frequency+0x88>)
 8003560:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 8003564:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 8003568:	6852      	ldr	r2, [r2, #4]
 800356a:	0409      	lsls	r1, r1, #16
 800356c:	0512      	lsls	r2, r2, #20
 800356e:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 8003572:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8003576:	430a      	orrs	r2, r1
 8003578:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800357c:	4313      	orrs	r3, r2
 800357e:	e7cc      	b.n	800351a <can_frequency+0x22>
 8003580:	08006ed8 	.word	0x08006ed8

08003584 <can_write>:
 8003584:	b084      	sub	sp, #16
 8003586:	b530      	push	{r4, r5, lr}
 8003588:	ac04      	add	r4, sp, #16
 800358a:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 800358e:	6804      	ldr	r4, [r0, #0]
 8003590:	f89d 201e 	ldrb.w	r2, [sp, #30]
 8003594:	68a3      	ldr	r3, [r4, #8]
 8003596:	0158      	lsls	r0, r3, #5
 8003598:	d43a      	bmi.n	8003610 <can_write+0x8c>
 800359a:	68a3      	ldr	r3, [r4, #8]
 800359c:	011b      	lsls	r3, r3, #4
 800359e:	d439      	bmi.n	8003614 <can_write+0x90>
 80035a0:	68a0      	ldr	r0, [r4, #8]
 80035a2:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 80035a6:	d02f      	beq.n	8003608 <can_write+0x84>
 80035a8:	2002      	movs	r0, #2
 80035aa:	0100      	lsls	r0, r0, #4
 80035ac:	1823      	adds	r3, r4, r0
 80035ae:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80035b2:	f005 0501 	and.w	r5, r5, #1
 80035b6:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 80035ba:	f89d 501d 	ldrb.w	r5, [sp, #29]
 80035be:	bb5d      	cbnz	r5, 8003618 <can_write+0x94>
 80035c0:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80035c4:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 80035c8:	4329      	orrs	r1, r5
 80035ca:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 80035ce:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 80035d2:	f021 010f 	bic.w	r1, r1, #15
 80035d6:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 80035da:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80035de:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 80035e2:	f001 010f 	and.w	r1, r1, #15
 80035e6:	4311      	orrs	r1, r2
 80035e8:	1822      	adds	r2, r4, r0
 80035ea:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 80035ee:	9905      	ldr	r1, [sp, #20]
 80035f0:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 80035f4:	9906      	ldr	r1, [sp, #24]
 80035f6:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 80035fa:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80035fe:	f042 0201 	orr.w	r2, r2, #1
 8003602:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 8003606:	2001      	movs	r0, #1
 8003608:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800360c:	b004      	add	sp, #16
 800360e:	4770      	bx	lr
 8003610:	2000      	movs	r0, #0
 8003612:	e7ca      	b.n	80035aa <can_write+0x26>
 8003614:	2001      	movs	r0, #1
 8003616:	e7c8      	b.n	80035aa <can_write+0x26>
 8003618:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 800361c:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003620:	f041 0104 	orr.w	r1, r1, #4
 8003624:	e7d0      	b.n	80035c8 <can_write+0x44>

08003626 <can_read>:
 8003626:	b530      	push	{r4, r5, lr}
 8003628:	6804      	ldr	r4, [r0, #0]
 800362a:	68e0      	ldr	r0, [r4, #12]
 800362c:	f010 0003 	ands.w	r0, r0, #3
 8003630:	d03a      	beq.n	80036a8 <can_read+0x82>
 8003632:	0113      	lsls	r3, r2, #4
 8003634:	18e0      	adds	r0, r4, r3
 8003636:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800363a:	f3c5 0580 	ubfx	r5, r5, #2, #1
 800363e:	734d      	strb	r5, [r1, #13]
 8003640:	bb9d      	cbnz	r5, 80036aa <can_read+0x84>
 8003642:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003646:	0d6d      	lsrs	r5, r5, #21
 8003648:	600d      	str	r5, [r1, #0]
 800364a:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800364e:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 8003652:	4423      	add	r3, r4
 8003654:	f000 000f 	and.w	r0, r0, #15
 8003658:	7308      	strb	r0, [r1, #12]
 800365a:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 800365e:	7108      	strb	r0, [r1, #4]
 8003660:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003664:	0a00      	lsrs	r0, r0, #8
 8003666:	7148      	strb	r0, [r1, #5]
 8003668:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 800366c:	0c00      	lsrs	r0, r0, #16
 800366e:	7188      	strb	r0, [r1, #6]
 8003670:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003674:	0e00      	lsrs	r0, r0, #24
 8003676:	71c8      	strb	r0, [r1, #7]
 8003678:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 800367c:	7208      	strb	r0, [r1, #8]
 800367e:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8003682:	0a00      	lsrs	r0, r0, #8
 8003684:	7248      	strb	r0, [r1, #9]
 8003686:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 800368a:	0c00      	lsrs	r0, r0, #16
 800368c:	7288      	strb	r0, [r1, #10]
 800368e:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003692:	f3c5 0540 	ubfx	r5, r5, #1, #1
 8003696:	0e1b      	lsrs	r3, r3, #24
 8003698:	738d      	strb	r5, [r1, #14]
 800369a:	72cb      	strb	r3, [r1, #11]
 800369c:	b94a      	cbnz	r2, 80036b2 <can_read+0x8c>
 800369e:	68e3      	ldr	r3, [r4, #12]
 80036a0:	f043 0320 	orr.w	r3, r3, #32
 80036a4:	60e3      	str	r3, [r4, #12]
 80036a6:	2001      	movs	r0, #1
 80036a8:	bd30      	pop	{r4, r5, pc}
 80036aa:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80036ae:	08ed      	lsrs	r5, r5, #3
 80036b0:	e7ca      	b.n	8003648 <can_read+0x22>
 80036b2:	6923      	ldr	r3, [r4, #16]
 80036b4:	f043 0320 	orr.w	r3, r3, #32
 80036b8:	6123      	str	r3, [r4, #16]
 80036ba:	e7f4      	b.n	80036a6 <can_read+0x80>

080036bc <can_filter>:
 80036bc:	b530      	push	{r4, r5, lr}
 80036be:	b08b      	sub	sp, #44	; 0x2c
 80036c0:	2b01      	cmp	r3, #1
 80036c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80036c4:	d82b      	bhi.n	800371e <can_filter+0x62>
 80036c6:	6805      	ldr	r5, [r0, #0]
 80036c8:	4816      	ldr	r0, [pc, #88]	; (8003724 <can_filter+0x68>)
 80036ca:	9405      	str	r4, [sp, #20]
 80036cc:	6005      	str	r5, [r0, #0]
 80036ce:	2000      	movs	r0, #0
 80036d0:	9006      	str	r0, [sp, #24]
 80036d2:	2001      	movs	r0, #1
 80036d4:	9007      	str	r0, [sp, #28]
 80036d6:	b99b      	cbnz	r3, 8003700 <can_filter+0x44>
 80036d8:	0149      	lsls	r1, r1, #5
 80036da:	e88d 000a 	stmia.w	sp, {r1, r3}
 80036de:	0152      	lsls	r2, r2, #5
 80036e0:	9202      	str	r2, [sp, #8]
 80036e2:	9303      	str	r3, [sp, #12]
 80036e4:	2300      	movs	r3, #0
 80036e6:	9304      	str	r3, [sp, #16]
 80036e8:	2301      	movs	r3, #1
 80036ea:	9308      	str	r3, [sp, #32]
 80036ec:	4669      	mov	r1, sp
 80036ee:	f104 030e 	add.w	r3, r4, #14
 80036f2:	480c      	ldr	r0, [pc, #48]	; (8003724 <can_filter+0x68>)
 80036f4:	9309      	str	r3, [sp, #36]	; 0x24
 80036f6:	f000 fd55 	bl	80041a4 <HAL_CAN_ConfigFilter>
 80036fa:	4620      	mov	r0, r4
 80036fc:	b00b      	add	sp, #44	; 0x2c
 80036fe:	bd30      	pop	{r4, r5, pc}
 8003700:	0b4b      	lsrs	r3, r1, #13
 8003702:	9300      	str	r3, [sp, #0]
 8003704:	00c9      	lsls	r1, r1, #3
 8003706:	0b53      	lsrs	r3, r2, #13
 8003708:	00d2      	lsls	r2, r2, #3
 800370a:	b2c9      	uxtb	r1, r1
 800370c:	b2d2      	uxtb	r2, r2
 800370e:	f041 0104 	orr.w	r1, r1, #4
 8003712:	f042 0204 	orr.w	r2, r2, #4
 8003716:	9101      	str	r1, [sp, #4]
 8003718:	9302      	str	r3, [sp, #8]
 800371a:	9203      	str	r2, [sp, #12]
 800371c:	e7e2      	b.n	80036e4 <can_filter+0x28>
 800371e:	2000      	movs	r0, #0
 8003720:	e7ec      	b.n	80036fc <can_filter+0x40>
 8003722:	bf00      	nop
 8003724:	20001268 	.word	0x20001268

08003728 <can_init>:
 8003728:	b5f0      	push	{r4, r5, r6, r7, lr}
 800372a:	460e      	mov	r6, r1
 800372c:	b085      	sub	sp, #20
 800372e:	4604      	mov	r4, r0
 8003730:	492f      	ldr	r1, [pc, #188]	; (80037f0 <can_init+0xc8>)
 8003732:	4630      	mov	r0, r6
 8003734:	4615      	mov	r5, r2
 8003736:	f7fe f98f 	bl	8001a58 <pinmap_peripheral>
 800373a:	492e      	ldr	r1, [pc, #184]	; (80037f4 <can_init+0xcc>)
 800373c:	4607      	mov	r7, r0
 800373e:	4628      	mov	r0, r5
 8003740:	f7fe f98a 	bl	8001a58 <pinmap_peripheral>
 8003744:	4601      	mov	r1, r0
 8003746:	4638      	mov	r0, r7
 8003748:	f7fe f968 	bl	8001a1c <pinmap_merge>
 800374c:	4b2a      	ldr	r3, [pc, #168]	; (80037f8 <can_init+0xd0>)
 800374e:	6020      	str	r0, [r4, #0]
 8003750:	4298      	cmp	r0, r3
 8003752:	d14b      	bne.n	80037ec <can_init+0xc4>
 8003754:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 8003758:	4925      	ldr	r1, [pc, #148]	; (80037f0 <can_init+0xc8>)
 800375a:	69da      	ldr	r2, [r3, #28]
 800375c:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8003760:	61da      	str	r2, [r3, #28]
 8003762:	69db      	ldr	r3, [r3, #28]
 8003764:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003768:	9303      	str	r3, [sp, #12]
 800376a:	9b03      	ldr	r3, [sp, #12]
 800376c:	2300      	movs	r3, #0
 800376e:	6063      	str	r3, [r4, #4]
 8003770:	4630      	mov	r0, r6
 8003772:	f7fe f935 	bl	80019e0 <pinmap_pinout>
 8003776:	491f      	ldr	r1, [pc, #124]	; (80037f4 <can_init+0xcc>)
 8003778:	4628      	mov	r0, r5
 800377a:	f7fe f931 	bl	80019e0 <pinmap_pinout>
 800377e:	1c72      	adds	r2, r6, #1
 8003780:	d003      	beq.n	800378a <can_init+0x62>
 8003782:	2101      	movs	r1, #1
 8003784:	4630      	mov	r0, r6
 8003786:	f000 f95b 	bl	8003a40 <pin_mode>
 800378a:	1c6b      	adds	r3, r5, #1
 800378c:	d003      	beq.n	8003796 <can_init+0x6e>
 800378e:	2101      	movs	r1, #1
 8003790:	4628      	mov	r0, r5
 8003792:	f000 f955 	bl	8003a40 <pin_mode>
 8003796:	4819      	ldr	r0, [pc, #100]	; (80037fc <can_init+0xd4>)
 8003798:	6823      	ldr	r3, [r4, #0]
 800379a:	6003      	str	r3, [r0, #0]
 800379c:	2300      	movs	r3, #0
 800379e:	6183      	str	r3, [r0, #24]
 80037a0:	61c3      	str	r3, [r0, #28]
 80037a2:	6203      	str	r3, [r0, #32]
 80037a4:	6243      	str	r3, [r0, #36]	; 0x24
 80037a6:	6283      	str	r3, [r0, #40]	; 0x28
 80037a8:	62c3      	str	r3, [r0, #44]	; 0x2c
 80037aa:	6083      	str	r3, [r0, #8]
 80037ac:	60c3      	str	r3, [r0, #12]
 80037ae:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 80037b2:	6103      	str	r3, [r0, #16]
 80037b4:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 80037b8:	6143      	str	r3, [r0, #20]
 80037ba:	2302      	movs	r3, #2
 80037bc:	6043      	str	r3, [r0, #4]
 80037be:	f000 fd52 	bl	8004266 <HAL_CAN_Init>
 80037c2:	b110      	cbz	r0, 80037ca <can_init+0xa2>
 80037c4:	480e      	ldr	r0, [pc, #56]	; (8003800 <can_init+0xd8>)
 80037c6:	f7fe f991 	bl	8001aec <error>
 80037ca:	490e      	ldr	r1, [pc, #56]	; (8003804 <can_init+0xdc>)
 80037cc:	4620      	mov	r0, r4
 80037ce:	f7ff fe93 	bl	80034f8 <can_frequency>
 80037d2:	4a09      	ldr	r2, [pc, #36]	; (80037f8 <can_init+0xd0>)
 80037d4:	6823      	ldr	r3, [r4, #0]
 80037d6:	4293      	cmp	r3, r2
 80037d8:	bf14      	ite	ne
 80037da:	230e      	movne	r3, #14
 80037dc:	2300      	moveq	r3, #0
 80037de:	9300      	str	r3, [sp, #0]
 80037e0:	2300      	movs	r3, #0
 80037e2:	461a      	mov	r2, r3
 80037e4:	4619      	mov	r1, r3
 80037e6:	4620      	mov	r0, r4
 80037e8:	f7ff ff68 	bl	80036bc <can_filter>
 80037ec:	b005      	add	sp, #20
 80037ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037f0:	08006fe8 	.word	0x08006fe8
 80037f4:	08007000 	.word	0x08007000
 80037f8:	40006400 	.word	0x40006400
 80037fc:	20001268 	.word	0x20001268
 8003800:	08006ec1 	.word	0x08006ec1
 8003804:	000186a0 	.word	0x000186a0

08003808 <can_irq_set>:
 8003808:	4b19      	ldr	r3, [pc, #100]	; (8003870 <can_irq_set+0x68>)
 800380a:	6800      	ldr	r0, [r0, #0]
 800380c:	4298      	cmp	r0, r3
 800380e:	b510      	push	{r4, lr}
 8003810:	4618      	mov	r0, r3
 8003812:	d116      	bne.n	8003842 <can_irq_set+0x3a>
 8003814:	2907      	cmp	r1, #7
 8003816:	d814      	bhi.n	8003842 <can_irq_set+0x3a>
 8003818:	e8df f001 	tbb	[pc, r1]
 800381c:	13181404 	.word	0x13181404
 8003820:	21131d13 	.word	0x21131d13
 8003824:	4913      	ldr	r1, [pc, #76]	; (8003874 <can_irq_set+0x6c>)
 8003826:	2302      	movs	r3, #2
 8003828:	2414      	movs	r4, #20
 800382a:	b1e2      	cbz	r2, 8003866 <can_irq_set+0x5e>
 800382c:	6942      	ldr	r2, [r0, #20]
 800382e:	4313      	orrs	r3, r2
 8003830:	6143      	str	r3, [r0, #20]
 8003832:	4620      	mov	r0, r4
 8003834:	f000 fbce 	bl	8003fd4 <__NVIC_SetVector>
 8003838:	2301      	movs	r3, #1
 800383a:	fa03 f404 	lsl.w	r4, r3, r4
 800383e:	4b0e      	ldr	r3, [pc, #56]	; (8003878 <can_irq_set+0x70>)
 8003840:	601c      	str	r4, [r3, #0]
 8003842:	bd10      	pop	{r4, pc}
 8003844:	490d      	ldr	r1, [pc, #52]	; (800387c <can_irq_set+0x74>)
 8003846:	2301      	movs	r3, #1
 8003848:	2413      	movs	r4, #19
 800384a:	e7ee      	b.n	800382a <can_irq_set+0x22>
 800384c:	490c      	ldr	r1, [pc, #48]	; (8003880 <can_irq_set+0x78>)
 800384e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003852:	2416      	movs	r4, #22
 8003854:	e7e9      	b.n	800382a <can_irq_set+0x22>
 8003856:	490a      	ldr	r1, [pc, #40]	; (8003880 <can_irq_set+0x78>)
 8003858:	f44f 7300 	mov.w	r3, #512	; 0x200
 800385c:	e7f9      	b.n	8003852 <can_irq_set+0x4a>
 800385e:	4908      	ldr	r1, [pc, #32]	; (8003880 <can_irq_set+0x78>)
 8003860:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003864:	e7f5      	b.n	8003852 <can_irq_set+0x4a>
 8003866:	6942      	ldr	r2, [r0, #20]
 8003868:	ea22 0303 	bic.w	r3, r2, r3
 800386c:	e7e0      	b.n	8003830 <can_irq_set+0x28>
 800386e:	bf00      	nop
 8003870:	40006400 	.word	0x40006400
 8003874:	08003495 	.word	0x08003495
 8003878:	e000e100 	.word	0xe000e100
 800387c:	08003491 	.word	0x08003491
 8003880:	08003391 	.word	0x08003391

08003884 <us_ticker_init>:
 8003884:	4b05      	ldr	r3, [pc, #20]	; (800389c <us_ticker_init+0x18>)
 8003886:	6818      	ldr	r0, [r3, #0]
 8003888:	b938      	cbnz	r0, 800389a <us_ticker_init+0x16>
 800388a:	2201      	movs	r2, #1
 800388c:	601a      	str	r2, [r3, #0]
 800388e:	4b04      	ldr	r3, [pc, #16]	; (80038a0 <us_ticker_init+0x1c>)
 8003890:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003894:	601a      	str	r2, [r3, #0]
 8003896:	f7ff bc49 	b.w	800312c <HAL_InitTick>
 800389a:	4770      	bx	lr
 800389c:	200012b0 	.word	0x200012b0
 80038a0:	20001eb8 	.word	0x20001eb8

080038a4 <us_ticker_read>:
 80038a4:	b508      	push	{r3, lr}
 80038a6:	4b04      	ldr	r3, [pc, #16]	; (80038b8 <us_ticker_read+0x14>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	b90b      	cbnz	r3, 80038b0 <us_ticker_read+0xc>
 80038ac:	f7ff ffea 	bl	8003884 <us_ticker_init>
 80038b0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038b4:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80038b6:	bd08      	pop	{r3, pc}
 80038b8:	200012b0 	.word	0x200012b0

080038bc <us_ticker_set_interrupt>:
 80038bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038c0:	4a03      	ldr	r2, [pc, #12]	; (80038d0 <us_ticker_set_interrupt+0x14>)
 80038c2:	6013      	str	r3, [r2, #0]
 80038c4:	6358      	str	r0, [r3, #52]	; 0x34
 80038c6:	68da      	ldr	r2, [r3, #12]
 80038c8:	f042 0202 	orr.w	r2, r2, #2
 80038cc:	60da      	str	r2, [r3, #12]
 80038ce:	4770      	bx	lr
 80038d0:	20001eb8 	.word	0x20001eb8

080038d4 <us_ticker_disable_interrupt>:
 80038d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038d8:	4a03      	ldr	r2, [pc, #12]	; (80038e8 <us_ticker_disable_interrupt+0x14>)
 80038da:	6013      	str	r3, [r2, #0]
 80038dc:	68da      	ldr	r2, [r3, #12]
 80038de:	f022 0202 	bic.w	r2, r2, #2
 80038e2:	60da      	str	r2, [r3, #12]
 80038e4:	4770      	bx	lr
 80038e6:	bf00      	nop
 80038e8:	20001eb8 	.word	0x20001eb8

080038ec <us_ticker_clear_interrupt>:
 80038ec:	4a03      	ldr	r2, [pc, #12]	; (80038fc <us_ticker_clear_interrupt+0x10>)
 80038ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038f2:	6013      	str	r3, [r2, #0]
 80038f4:	f06f 0202 	mvn.w	r2, #2
 80038f8:	611a      	str	r2, [r3, #16]
 80038fa:	4770      	bx	lr
 80038fc:	20001eb8 	.word	0x20001eb8

08003900 <LL_GPIO_SetPinPull>:
 8003900:	b530      	push	{r4, r5, lr}
 8003902:	68c3      	ldr	r3, [r0, #12]
 8003904:	fa91 f4a1 	rbit	r4, r1
 8003908:	fab4 f484 	clz	r4, r4
 800390c:	fa91 f1a1 	rbit	r1, r1
 8003910:	2503      	movs	r5, #3
 8003912:	fab1 f181 	clz	r1, r1
 8003916:	0064      	lsls	r4, r4, #1
 8003918:	fa05 f404 	lsl.w	r4, r5, r4
 800391c:	0049      	lsls	r1, r1, #1
 800391e:	ea23 0304 	bic.w	r3, r3, r4
 8003922:	fa02 f101 	lsl.w	r1, r2, r1
 8003926:	4319      	orrs	r1, r3
 8003928:	60c1      	str	r1, [r0, #12]
 800392a:	bd30      	pop	{r4, r5, pc}

0800392c <stm_pin_PullConfig>:
 800392c:	2a01      	cmp	r2, #1
 800392e:	d002      	beq.n	8003936 <stm_pin_PullConfig+0xa>
 8003930:	2a02      	cmp	r2, #2
 8003932:	bf18      	it	ne
 8003934:	2200      	movne	r2, #0
 8003936:	f7ff bfe3 	b.w	8003900 <LL_GPIO_SetPinPull>
	...

0800393c <pin_function>:
 800393c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003940:	4b3e      	ldr	r3, [pc, #248]	; (8003a3c <pin_function+0x100>)
 8003942:	f000 080f 	and.w	r8, r0, #15
 8003946:	f3c0 1003 	ubfx	r0, r0, #4, #4
 800394a:	460e      	mov	r6, r1
 800394c:	f001 0507 	and.w	r5, r1, #7
 8003950:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8003954:	f7ff fc60 	bl	8003218 <Set_GPIO_Clock>
 8003958:	6882      	ldr	r2, [r0, #8]
 800395a:	fa94 f3a4 	rbit	r3, r4
 800395e:	fab3 f383 	clz	r3, r3
 8003962:	fa94 f1a4 	rbit	r1, r4
 8003966:	2703      	movs	r7, #3
 8003968:	005b      	lsls	r3, r3, #1
 800396a:	fab1 f181 	clz	r1, r1
 800396e:	fa07 f303 	lsl.w	r3, r7, r3
 8003972:	ea22 0303 	bic.w	r3, r2, r3
 8003976:	004a      	lsls	r2, r1, #1
 8003978:	fa07 f202 	lsl.w	r2, r7, r2
 800397c:	4313      	orrs	r3, r2
 800397e:	2d02      	cmp	r5, #2
 8003980:	6083      	str	r3, [r0, #8]
 8003982:	d028      	beq.n	80039d6 <pin_function+0x9a>
 8003984:	42bd      	cmp	r5, r7
 8003986:	d041      	beq.n	8003a0c <pin_function+0xd0>
 8003988:	2d01      	cmp	r5, #1
 800398a:	d03f      	beq.n	8003a0c <pin_function+0xd0>
 800398c:	2300      	movs	r3, #0
 800398e:	6802      	ldr	r2, [r0, #0]
 8003990:	fa94 f7a4 	rbit	r7, r4
 8003994:	fab7 f787 	clz	r7, r7
 8003998:	fa94 f1a4 	rbit	r1, r4
 800399c:	f04f 0e03 	mov.w	lr, #3
 80039a0:	fab1 f181 	clz	r1, r1
 80039a4:	007f      	lsls	r7, r7, #1
 80039a6:	fa0e f707 	lsl.w	r7, lr, r7
 80039aa:	0049      	lsls	r1, r1, #1
 80039ac:	ea22 0207 	bic.w	r2, r2, r7
 80039b0:	408b      	lsls	r3, r1
 80039b2:	3d01      	subs	r5, #1
 80039b4:	4313      	orrs	r3, r2
 80039b6:	2d01      	cmp	r5, #1
 80039b8:	6003      	str	r3, [r0, #0]
 80039ba:	d805      	bhi.n	80039c8 <pin_function+0x8c>
 80039bc:	6843      	ldr	r3, [r0, #4]
 80039be:	0732      	lsls	r2, r6, #28
 80039c0:	bf4c      	ite	mi
 80039c2:	4323      	orrmi	r3, r4
 80039c4:	43a3      	bicpl	r3, r4
 80039c6:	6043      	str	r3, [r0, #4]
 80039c8:	f3c6 1201 	ubfx	r2, r6, #4, #2
 80039cc:	4621      	mov	r1, r4
 80039ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80039d2:	f7ff bfab 	b.w	800392c <stm_pin_PullConfig>
 80039d6:	f1b8 0f07 	cmp.w	r8, #7
 80039da:	f3c6 2703 	ubfx	r7, r6, #8, #4
 80039de:	d917      	bls.n	8003a10 <pin_function+0xd4>
 80039e0:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80039e2:	0a23      	lsrs	r3, r4, #8
 80039e4:	fa93 f1a3 	rbit	r1, r3
 80039e8:	fab1 f181 	clz	r1, r1
 80039ec:	fa93 f3a3 	rbit	r3, r3
 80039f0:	f04f 0e0f 	mov.w	lr, #15
 80039f4:	fab3 f383 	clz	r3, r3
 80039f8:	0089      	lsls	r1, r1, #2
 80039fa:	fa0e f101 	lsl.w	r1, lr, r1
 80039fe:	009b      	lsls	r3, r3, #2
 8003a00:	ea22 0201 	bic.w	r2, r2, r1
 8003a04:	fa07 f303 	lsl.w	r3, r7, r3
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	6243      	str	r3, [r0, #36]	; 0x24
 8003a0c:	462b      	mov	r3, r5
 8003a0e:	e7be      	b.n	800398e <pin_function+0x52>
 8003a10:	6a02      	ldr	r2, [r0, #32]
 8003a12:	fa94 f3a4 	rbit	r3, r4
 8003a16:	fab3 f383 	clz	r3, r3
 8003a1a:	fa94 f1a4 	rbit	r1, r4
 8003a1e:	f04f 0e0f 	mov.w	lr, #15
 8003a22:	fab1 f181 	clz	r1, r1
 8003a26:	009b      	lsls	r3, r3, #2
 8003a28:	fa0e f303 	lsl.w	r3, lr, r3
 8003a2c:	0089      	lsls	r1, r1, #2
 8003a2e:	ea22 0203 	bic.w	r2, r2, r3
 8003a32:	fa07 f301 	lsl.w	r3, r7, r1
 8003a36:	4313      	orrs	r3, r2
 8003a38:	6203      	str	r3, [r0, #32]
 8003a3a:	e7e7      	b.n	8003a0c <pin_function+0xd0>
 8003a3c:	08006f90 	.word	0x08006f90

08003a40 <pin_mode>:
 8003a40:	f000 020f 	and.w	r2, r0, #15
 8003a44:	4b1c      	ldr	r3, [pc, #112]	; (8003ab8 <pin_mode+0x78>)
 8003a46:	b570      	push	{r4, r5, r6, lr}
 8003a48:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003a4c:	460d      	mov	r5, r1
 8003a4e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003a52:	f7ff fbe1 	bl	8003218 <Set_GPIO_Clock>
 8003a56:	6806      	ldr	r6, [r0, #0]
 8003a58:	fa94 f1a4 	rbit	r1, r4
 8003a5c:	fab1 f381 	clz	r3, r1
 8003a60:	fa94 f2a4 	rbit	r2, r4
 8003a64:	0059      	lsls	r1, r3, #1
 8003a66:	2303      	movs	r3, #3
 8003a68:	fab2 f282 	clz	r2, r2
 8003a6c:	408b      	lsls	r3, r1
 8003a6e:	4033      	ands	r3, r6
 8003a70:	0052      	lsls	r2, r2, #1
 8003a72:	40d3      	lsrs	r3, r2
 8003a74:	3b01      	subs	r3, #1
 8003a76:	2b01      	cmp	r3, #1
 8003a78:	d805      	bhi.n	8003a86 <pin_mode+0x46>
 8003a7a:	1eeb      	subs	r3, r5, #3
 8003a7c:	2b02      	cmp	r3, #2
 8003a7e:	6843      	ldr	r3, [r0, #4]
 8003a80:	d809      	bhi.n	8003a96 <pin_mode+0x56>
 8003a82:	4323      	orrs	r3, r4
 8003a84:	6043      	str	r3, [r0, #4]
 8003a86:	2d03      	cmp	r5, #3
 8003a88:	d108      	bne.n	8003a9c <pin_mode+0x5c>
 8003a8a:	2201      	movs	r2, #1
 8003a8c:	4621      	mov	r1, r4
 8003a8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003a92:	f7ff bf4b 	b.w	800392c <stm_pin_PullConfig>
 8003a96:	ea23 0304 	bic.w	r3, r3, r4
 8003a9a:	6043      	str	r3, [r0, #4]
 8003a9c:	2d01      	cmp	r5, #1
 8003a9e:	d0f4      	beq.n	8003a8a <pin_mode+0x4a>
 8003aa0:	2d05      	cmp	r5, #5
 8003aa2:	d001      	beq.n	8003aa8 <pin_mode+0x68>
 8003aa4:	2d02      	cmp	r5, #2
 8003aa6:	d101      	bne.n	8003aac <pin_mode+0x6c>
 8003aa8:	2202      	movs	r2, #2
 8003aaa:	e7ef      	b.n	8003a8c <pin_mode+0x4c>
 8003aac:	4621      	mov	r1, r4
 8003aae:	2200      	movs	r2, #0
 8003ab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003ab4:	f7ff bf24 	b.w	8003900 <LL_GPIO_SetPinPull>
 8003ab8:	08006f90 	.word	0x08006f90

08003abc <init_uart>:
 8003abc:	6843      	ldr	r3, [r0, #4]
 8003abe:	4918      	ldr	r1, [pc, #96]	; (8003b20 <init_uart+0x64>)
 8003ac0:	2270      	movs	r2, #112	; 0x70
 8003ac2:	435a      	muls	r2, r3
 8003ac4:	b510      	push	{r4, lr}
 8003ac6:	188b      	adds	r3, r1, r2
 8003ac8:	6804      	ldr	r4, [r0, #0]
 8003aca:	508c      	str	r4, [r1, r2]
 8003acc:	6882      	ldr	r2, [r0, #8]
 8003ace:	605a      	str	r2, [r3, #4]
 8003ad0:	68c2      	ldr	r2, [r0, #12]
 8003ad2:	609a      	str	r2, [r3, #8]
 8003ad4:	6902      	ldr	r2, [r0, #16]
 8003ad6:	60da      	str	r2, [r3, #12]
 8003ad8:	6942      	ldr	r2, [r0, #20]
 8003ada:	611a      	str	r2, [r3, #16]
 8003adc:	69c2      	ldr	r2, [r0, #28]
 8003ade:	619a      	str	r2, [r3, #24]
 8003ae0:	2200      	movs	r2, #0
 8003ae2:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003ae6:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8003aea:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8003aee:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8003af2:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003af6:	3201      	adds	r2, #1
 8003af8:	d10a      	bne.n	8003b10 <init_uart+0x54>
 8003afa:	2208      	movs	r2, #8
 8003afc:	615a      	str	r2, [r3, #20]
 8003afe:	4618      	mov	r0, r3
 8003b00:	f000 fda5 	bl	800464e <HAL_UART_Init>
 8003b04:	b158      	cbz	r0, 8003b1e <init_uart+0x62>
 8003b06:	4807      	ldr	r0, [pc, #28]	; (8003b24 <init_uart+0x68>)
 8003b08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b0c:	f7fd bfee 	b.w	8001aec <error>
 8003b10:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003b14:	3201      	adds	r2, #1
 8003b16:	bf0c      	ite	eq
 8003b18:	2204      	moveq	r2, #4
 8003b1a:	220c      	movne	r2, #12
 8003b1c:	e7ee      	b.n	8003afc <init_uart+0x40>
 8003b1e:	bd10      	pop	{r4, pc}
 8003b20:	200012d0 	.word	0x200012d0
 8003b24:	08006fd0 	.word	0x08006fd0

08003b28 <uart_irq>:
 8003b28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003b2a:	4f1c      	ldr	r7, [pc, #112]	; (8003b9c <uart_irq+0x74>)
 8003b2c:	4605      	mov	r5, r0
 8003b2e:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8003b32:	2800      	cmp	r0, #0
 8003b34:	d02f      	beq.n	8003b96 <uart_irq+0x6e>
 8003b36:	2670      	movs	r6, #112	; 0x70
 8003b38:	4c19      	ldr	r4, [pc, #100]	; (8003ba0 <uart_irq+0x78>)
 8003b3a:	436e      	muls	r6, r5
 8003b3c:	59a3      	ldr	r3, [r4, r6]
 8003b3e:	69da      	ldr	r2, [r3, #28]
 8003b40:	0652      	lsls	r2, r2, #25
 8003b42:	d509      	bpl.n	8003b58 <uart_irq+0x30>
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	0659      	lsls	r1, r3, #25
 8003b48:	d506      	bpl.n	8003b58 <uart_irq+0x30>
 8003b4a:	4b16      	ldr	r3, [pc, #88]	; (8003ba4 <uart_irq+0x7c>)
 8003b4c:	2101      	movs	r1, #1
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	4798      	blx	r3
 8003b52:	59a3      	ldr	r3, [r4, r6]
 8003b54:	2240      	movs	r2, #64	; 0x40
 8003b56:	621a      	str	r2, [r3, #32]
 8003b58:	2670      	movs	r6, #112	; 0x70
 8003b5a:	436e      	muls	r6, r5
 8003b5c:	59a3      	ldr	r3, [r4, r6]
 8003b5e:	69da      	ldr	r2, [r3, #28]
 8003b60:	0692      	lsls	r2, r2, #26
 8003b62:	d50d      	bpl.n	8003b80 <uart_irq+0x58>
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	0698      	lsls	r0, r3, #26
 8003b68:	d50a      	bpl.n	8003b80 <uart_irq+0x58>
 8003b6a:	4b0e      	ldr	r3, [pc, #56]	; (8003ba4 <uart_irq+0x7c>)
 8003b6c:	f857 0025 	ldr.w	r0, [r7, r5, lsl #2]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	2100      	movs	r1, #0
 8003b74:	4798      	blx	r3
 8003b76:	59a3      	ldr	r3, [r4, r6]
 8003b78:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003b7a:	b29b      	uxth	r3, r3
 8003b7c:	9301      	str	r3, [sp, #4]
 8003b7e:	9b01      	ldr	r3, [sp, #4]
 8003b80:	2370      	movs	r3, #112	; 0x70
 8003b82:	435d      	muls	r5, r3
 8003b84:	5963      	ldr	r3, [r4, r5]
 8003b86:	69da      	ldr	r2, [r3, #28]
 8003b88:	0711      	lsls	r1, r2, #28
 8003b8a:	d504      	bpl.n	8003b96 <uart_irq+0x6e>
 8003b8c:	689a      	ldr	r2, [r3, #8]
 8003b8e:	07d2      	lsls	r2, r2, #31
 8003b90:	bf44      	itt	mi
 8003b92:	2208      	movmi	r2, #8
 8003b94:	621a      	strmi	r2, [r3, #32]
 8003b96:	b003      	add	sp, #12
 8003b98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b9a:	bf00      	nop
 8003b9c:	200012b8 	.word	0x200012b8
 8003ba0:	200012d0 	.word	0x200012d0
 8003ba4:	200012b4 	.word	0x200012b4

08003ba8 <uart1_irq>:
 8003ba8:	2000      	movs	r0, #0
 8003baa:	f7ff bfbd 	b.w	8003b28 <uart_irq>

08003bae <uart2_irq>:
 8003bae:	2001      	movs	r0, #1
 8003bb0:	f7ff bfba 	b.w	8003b28 <uart_irq>

08003bb4 <uart3_irq>:
 8003bb4:	2002      	movs	r0, #2
 8003bb6:	f7ff bfb7 	b.w	8003b28 <uart_irq>
	...

08003bbc <serial_init>:
 8003bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003bbe:	460e      	mov	r6, r1
 8003bc0:	b085      	sub	sp, #20
 8003bc2:	4604      	mov	r4, r0
 8003bc4:	4949      	ldr	r1, [pc, #292]	; (8003cec <serial_init+0x130>)
 8003bc6:	4630      	mov	r0, r6
 8003bc8:	4615      	mov	r5, r2
 8003bca:	f7fd ff45 	bl	8001a58 <pinmap_peripheral>
 8003bce:	4948      	ldr	r1, [pc, #288]	; (8003cf0 <serial_init+0x134>)
 8003bd0:	4607      	mov	r7, r0
 8003bd2:	4628      	mov	r0, r5
 8003bd4:	f7fd ff40 	bl	8001a58 <pinmap_peripheral>
 8003bd8:	4601      	mov	r1, r0
 8003bda:	4638      	mov	r0, r7
 8003bdc:	f7fd ff1e 	bl	8001a1c <pinmap_merge>
 8003be0:	4b44      	ldr	r3, [pc, #272]	; (8003cf4 <serial_init+0x138>)
 8003be2:	6020      	str	r0, [r4, #0]
 8003be4:	4298      	cmp	r0, r3
 8003be6:	d151      	bne.n	8003c8c <serial_init+0xd0>
 8003be8:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8003bec:	68da      	ldr	r2, [r3, #12]
 8003bee:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003bf2:	60da      	str	r2, [r3, #12]
 8003bf4:	68da      	ldr	r2, [r3, #12]
 8003bf6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003bfa:	60da      	str	r2, [r3, #12]
 8003bfc:	699a      	ldr	r2, [r3, #24]
 8003bfe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003c02:	619a      	str	r2, [r3, #24]
 8003c04:	699a      	ldr	r2, [r3, #24]
 8003c06:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003c0a:	9201      	str	r2, [sp, #4]
 8003c0c:	9a01      	ldr	r2, [sp, #4]
 8003c0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c10:	f022 0203 	bic.w	r2, r2, #3
 8003c14:	f042 0201 	orr.w	r2, r2, #1
 8003c18:	631a      	str	r2, [r3, #48]	; 0x30
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	6063      	str	r3, [r4, #4]
 8003c1e:	4933      	ldr	r1, [pc, #204]	; (8003cec <serial_init+0x130>)
 8003c20:	4630      	mov	r0, r6
 8003c22:	f7fd fedd 	bl	80019e0 <pinmap_pinout>
 8003c26:	4932      	ldr	r1, [pc, #200]	; (8003cf0 <serial_init+0x134>)
 8003c28:	4628      	mov	r0, r5
 8003c2a:	f7fd fed9 	bl	80019e0 <pinmap_pinout>
 8003c2e:	1c72      	adds	r2, r6, #1
 8003c30:	d003      	beq.n	8003c3a <serial_init+0x7e>
 8003c32:	2101      	movs	r1, #1
 8003c34:	4630      	mov	r0, r6
 8003c36:	f7ff ff03 	bl	8003a40 <pin_mode>
 8003c3a:	1c6b      	adds	r3, r5, #1
 8003c3c:	d003      	beq.n	8003c46 <serial_init+0x8a>
 8003c3e:	2101      	movs	r1, #1
 8003c40:	4628      	mov	r0, r5
 8003c42:	f7ff fefd 	bl	8003a40 <pin_mode>
 8003c46:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003c4a:	60a3      	str	r3, [r4, #8]
 8003c4c:	2300      	movs	r3, #0
 8003c4e:	60e3      	str	r3, [r4, #12]
 8003c50:	6123      	str	r3, [r4, #16]
 8003c52:	6163      	str	r3, [r4, #20]
 8003c54:	61e3      	str	r3, [r4, #28]
 8003c56:	8326      	strh	r6, [r4, #24]
 8003c58:	8365      	strh	r5, [r4, #26]
 8003c5a:	4620      	mov	r0, r4
 8003c5c:	f7ff ff2e 	bl	8003abc <init_uart>
 8003c60:	6822      	ldr	r2, [r4, #0]
 8003c62:	4b25      	ldr	r3, [pc, #148]	; (8003cf8 <serial_init+0x13c>)
 8003c64:	429a      	cmp	r2, r3
 8003c66:	d10f      	bne.n	8003c88 <serial_init+0xcc>
 8003c68:	4b24      	ldr	r3, [pc, #144]	; (8003cfc <serial_init+0x140>)
 8003c6a:	2201      	movs	r2, #1
 8003c6c:	601a      	str	r2, [r3, #0]
 8003c6e:	4b24      	ldr	r3, [pc, #144]	; (8003d00 <serial_init+0x144>)
 8003c70:	f104 0520 	add.w	r5, r4, #32
 8003c74:	6820      	ldr	r0, [r4, #0]
 8003c76:	6861      	ldr	r1, [r4, #4]
 8003c78:	461a      	mov	r2, r3
 8003c7a:	c203      	stmia	r2!, {r0, r1}
 8003c7c:	3408      	adds	r4, #8
 8003c7e:	42ac      	cmp	r4, r5
 8003c80:	4613      	mov	r3, r2
 8003c82:	d1f7      	bne.n	8003c74 <serial_init+0xb8>
 8003c84:	6820      	ldr	r0, [r4, #0]
 8003c86:	6010      	str	r0, [r2, #0]
 8003c88:	b005      	add	sp, #20
 8003c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c8c:	4b1a      	ldr	r3, [pc, #104]	; (8003cf8 <serial_init+0x13c>)
 8003c8e:	4298      	cmp	r0, r3
 8003c90:	d114      	bne.n	8003cbc <serial_init+0x100>
 8003c92:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8003c96:	691a      	ldr	r2, [r3, #16]
 8003c98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003c9c:	611a      	str	r2, [r3, #16]
 8003c9e:	691a      	ldr	r2, [r3, #16]
 8003ca0:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003ca4:	611a      	str	r2, [r3, #16]
 8003ca6:	69da      	ldr	r2, [r3, #28]
 8003ca8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003cac:	61da      	str	r2, [r3, #28]
 8003cae:	69db      	ldr	r3, [r3, #28]
 8003cb0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cb4:	9302      	str	r3, [sp, #8]
 8003cb6:	9b02      	ldr	r3, [sp, #8]
 8003cb8:	2301      	movs	r3, #1
 8003cba:	e7af      	b.n	8003c1c <serial_init+0x60>
 8003cbc:	4b11      	ldr	r3, [pc, #68]	; (8003d04 <serial_init+0x148>)
 8003cbe:	4298      	cmp	r0, r3
 8003cc0:	d1ad      	bne.n	8003c1e <serial_init+0x62>
 8003cc2:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8003cc6:	691a      	ldr	r2, [r3, #16]
 8003cc8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003ccc:	611a      	str	r2, [r3, #16]
 8003cce:	691a      	ldr	r2, [r3, #16]
 8003cd0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003cd4:	611a      	str	r2, [r3, #16]
 8003cd6:	69da      	ldr	r2, [r3, #28]
 8003cd8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003cdc:	61da      	str	r2, [r3, #28]
 8003cde:	69db      	ldr	r3, [r3, #28]
 8003ce0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003ce4:	9303      	str	r3, [sp, #12]
 8003ce6:	9b03      	ldr	r3, [sp, #12]
 8003ce8:	2302      	movs	r3, #2
 8003cea:	e797      	b.n	8003c1c <serial_init+0x60>
 8003cec:	08007060 	.word	0x08007060
 8003cf0:	08007018 	.word	0x08007018
 8003cf4:	40013800 	.word	0x40013800
 8003cf8:	40004400 	.word	0x40004400
 8003cfc:	200012cc 	.word	0x200012cc
 8003d00:	20001ef8 	.word	0x20001ef8
 8003d04:	40004800 	.word	0x40004800

08003d08 <serial_baud>:
 8003d08:	6081      	str	r1, [r0, #8]
 8003d0a:	f7ff bed7 	b.w	8003abc <init_uart>
	...

08003d10 <serial_irq_handler>:
 8003d10:	4b03      	ldr	r3, [pc, #12]	; (8003d20 <serial_irq_handler+0x10>)
 8003d12:	6019      	str	r1, [r3, #0]
 8003d14:	6841      	ldr	r1, [r0, #4]
 8003d16:	4b03      	ldr	r3, [pc, #12]	; (8003d24 <serial_irq_handler+0x14>)
 8003d18:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003d1c:	4770      	bx	lr
 8003d1e:	bf00      	nop
 8003d20:	200012b4 	.word	0x200012b4
 8003d24:	200012b8 	.word	0x200012b8

08003d28 <serial_irq_set>:
 8003d28:	b570      	push	{r4, r5, r6, lr}
 8003d2a:	e890 0028 	ldmia.w	r0, {r3, r5}
 8003d2e:	460e      	mov	r6, r1
 8003d30:	4925      	ldr	r1, [pc, #148]	; (8003dc8 <serial_irq_set+0xa0>)
 8003d32:	428b      	cmp	r3, r1
 8003d34:	d118      	bne.n	8003d68 <serial_irq_set+0x40>
 8003d36:	4925      	ldr	r1, [pc, #148]	; (8003dcc <serial_irq_set+0xa4>)
 8003d38:	2425      	movs	r4, #37	; 0x25
 8003d3a:	2370      	movs	r3, #112	; 0x70
 8003d3c:	4824      	ldr	r0, [pc, #144]	; (8003dd0 <serial_irq_set+0xa8>)
 8003d3e:	436b      	muls	r3, r5
 8003d40:	b31a      	cbz	r2, 8003d8a <serial_irq_set+0x62>
 8003d42:	58c2      	ldr	r2, [r0, r3]
 8003d44:	6813      	ldr	r3, [r2, #0]
 8003d46:	b9ee      	cbnz	r6, 8003d84 <serial_irq_set+0x5c>
 8003d48:	f043 0320 	orr.w	r3, r3, #32
 8003d4c:	6013      	str	r3, [r2, #0]
 8003d4e:	4620      	mov	r0, r4
 8003d50:	f000 f940 	bl	8003fd4 <__NVIC_SetVector>
 8003d54:	0962      	lsrs	r2, r4, #5
 8003d56:	2301      	movs	r3, #1
 8003d58:	f004 0407 	and.w	r4, r4, #7
 8003d5c:	fa03 f404 	lsl.w	r4, r3, r4
 8003d60:	4b1c      	ldr	r3, [pc, #112]	; (8003dd4 <serial_irq_set+0xac>)
 8003d62:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003d66:	bd70      	pop	{r4, r5, r6, pc}
 8003d68:	491b      	ldr	r1, [pc, #108]	; (8003dd8 <serial_irq_set+0xb0>)
 8003d6a:	428b      	cmp	r3, r1
 8003d6c:	d102      	bne.n	8003d74 <serial_irq_set+0x4c>
 8003d6e:	491b      	ldr	r1, [pc, #108]	; (8003ddc <serial_irq_set+0xb4>)
 8003d70:	2426      	movs	r4, #38	; 0x26
 8003d72:	e7e2      	b.n	8003d3a <serial_irq_set+0x12>
 8003d74:	491a      	ldr	r1, [pc, #104]	; (8003de0 <serial_irq_set+0xb8>)
 8003d76:	428b      	cmp	r3, r1
 8003d78:	bf13      	iteet	ne
 8003d7a:	2100      	movne	r1, #0
 8003d7c:	4919      	ldreq	r1, [pc, #100]	; (8003de4 <serial_irq_set+0xbc>)
 8003d7e:	2427      	moveq	r4, #39	; 0x27
 8003d80:	460c      	movne	r4, r1
 8003d82:	e7da      	b.n	8003d3a <serial_irq_set+0x12>
 8003d84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003d88:	e7e0      	b.n	8003d4c <serial_irq_set+0x24>
 8003d8a:	58c3      	ldr	r3, [r0, r3]
 8003d8c:	681a      	ldr	r2, [r3, #0]
 8003d8e:	b936      	cbnz	r6, 8003d9e <serial_irq_set+0x76>
 8003d90:	f022 0220 	bic.w	r2, r2, #32
 8003d94:	601a      	str	r2, [r3, #0]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	061a      	lsls	r2, r3, #24
 8003d9a:	d506      	bpl.n	8003daa <serial_irq_set+0x82>
 8003d9c:	bd70      	pop	{r4, r5, r6, pc}
 8003d9e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003da2:	601a      	str	r2, [r3, #0]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	069b      	lsls	r3, r3, #26
 8003da8:	d40d      	bmi.n	8003dc6 <serial_irq_set+0x9e>
 8003daa:	0963      	lsrs	r3, r4, #5
 8003dac:	2201      	movs	r2, #1
 8003dae:	f004 0407 	and.w	r4, r4, #7
 8003db2:	fa02 f404 	lsl.w	r4, r2, r4
 8003db6:	3320      	adds	r3, #32
 8003db8:	4a06      	ldr	r2, [pc, #24]	; (8003dd4 <serial_irq_set+0xac>)
 8003dba:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8003dbe:	f3bf 8f4f 	dsb	sy
 8003dc2:	f3bf 8f6f 	isb	sy
 8003dc6:	bd70      	pop	{r4, r5, r6, pc}
 8003dc8:	40013800 	.word	0x40013800
 8003dcc:	08003ba9 	.word	0x08003ba9
 8003dd0:	200012d0 	.word	0x200012d0
 8003dd4:	e000e100 	.word	0xe000e100
 8003dd8:	40004400 	.word	0x40004400
 8003ddc:	08003baf 	.word	0x08003baf
 8003de0:	40004800 	.word	0x40004800
 8003de4:	08003bb5 	.word	0x08003bb5

08003de8 <serial_readable>:
 8003de8:	6842      	ldr	r2, [r0, #4]
 8003dea:	2370      	movs	r3, #112	; 0x70
 8003dec:	4353      	muls	r3, r2
 8003dee:	4a03      	ldr	r2, [pc, #12]	; (8003dfc <serial_readable+0x14>)
 8003df0:	58d3      	ldr	r3, [r2, r3]
 8003df2:	69d8      	ldr	r0, [r3, #28]
 8003df4:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003df8:	4770      	bx	lr
 8003dfa:	bf00      	nop
 8003dfc:	200012d0 	.word	0x200012d0

08003e00 <serial_getc>:
 8003e00:	b510      	push	{r4, lr}
 8003e02:	6844      	ldr	r4, [r0, #4]
 8003e04:	4601      	mov	r1, r0
 8003e06:	4608      	mov	r0, r1
 8003e08:	f7ff ffee 	bl	8003de8 <serial_readable>
 8003e0c:	2800      	cmp	r0, #0
 8003e0e:	d0fa      	beq.n	8003e06 <serial_getc+0x6>
 8003e10:	2370      	movs	r3, #112	; 0x70
 8003e12:	4a05      	ldr	r2, [pc, #20]	; (8003e28 <serial_getc+0x28>)
 8003e14:	68c9      	ldr	r1, [r1, #12]
 8003e16:	4363      	muls	r3, r4
 8003e18:	58d3      	ldr	r3, [r2, r3]
 8003e1a:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 8003e1c:	b909      	cbnz	r1, 8003e22 <serial_getc+0x22>
 8003e1e:	b2c0      	uxtb	r0, r0
 8003e20:	bd10      	pop	{r4, pc}
 8003e22:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003e26:	bd10      	pop	{r4, pc}
 8003e28:	200012d0 	.word	0x200012d0

08003e2c <serial_writable>:
 8003e2c:	6842      	ldr	r2, [r0, #4]
 8003e2e:	2370      	movs	r3, #112	; 0x70
 8003e30:	4353      	muls	r3, r2
 8003e32:	4a03      	ldr	r2, [pc, #12]	; (8003e40 <serial_writable+0x14>)
 8003e34:	58d3      	ldr	r3, [r2, r3]
 8003e36:	69d8      	ldr	r0, [r3, #28]
 8003e38:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003e3c:	4770      	bx	lr
 8003e3e:	bf00      	nop
 8003e40:	200012d0 	.word	0x200012d0

08003e44 <serial_putc>:
 8003e44:	b538      	push	{r3, r4, r5, lr}
 8003e46:	6845      	ldr	r5, [r0, #4]
 8003e48:	4604      	mov	r4, r0
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	f7ff ffee 	bl	8003e2c <serial_writable>
 8003e50:	2800      	cmp	r0, #0
 8003e52:	d0fa      	beq.n	8003e4a <serial_putc+0x6>
 8003e54:	2370      	movs	r3, #112	; 0x70
 8003e56:	4a05      	ldr	r2, [pc, #20]	; (8003e6c <serial_putc+0x28>)
 8003e58:	68e0      	ldr	r0, [r4, #12]
 8003e5a:	436b      	muls	r3, r5
 8003e5c:	58d3      	ldr	r3, [r2, r3]
 8003e5e:	b910      	cbnz	r0, 8003e66 <serial_putc+0x22>
 8003e60:	b2c9      	uxtb	r1, r1
 8003e62:	8519      	strh	r1, [r3, #40]	; 0x28
 8003e64:	bd38      	pop	{r3, r4, r5, pc}
 8003e66:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003e6a:	e7fa      	b.n	8003e62 <serial_putc+0x1e>
 8003e6c:	200012d0 	.word	0x200012d0

08003e70 <mbed_sdk_init>:
 8003e70:	b508      	push	{r3, lr}
 8003e72:	f000 f805 	bl	8003e80 <SystemCoreClockUpdate>
 8003e76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003e7a:	f000 b973 	b.w	8004164 <HAL_Init>
	...

08003e80 <SystemCoreClockUpdate>:
 8003e80:	4a14      	ldr	r2, [pc, #80]	; (8003ed4 <SystemCoreClockUpdate+0x54>)
 8003e82:	4915      	ldr	r1, [pc, #84]	; (8003ed8 <SystemCoreClockUpdate+0x58>)
 8003e84:	6853      	ldr	r3, [r2, #4]
 8003e86:	f003 030c 	and.w	r3, r3, #12
 8003e8a:	2b04      	cmp	r3, #4
 8003e8c:	b510      	push	{r4, lr}
 8003e8e:	d001      	beq.n	8003e94 <SystemCoreClockUpdate+0x14>
 8003e90:	2b08      	cmp	r3, #8
 8003e92:	d00a      	beq.n	8003eaa <SystemCoreClockUpdate+0x2a>
 8003e94:	4b11      	ldr	r3, [pc, #68]	; (8003edc <SystemCoreClockUpdate+0x5c>)
 8003e96:	600b      	str	r3, [r1, #0]
 8003e98:	6853      	ldr	r3, [r2, #4]
 8003e9a:	4a11      	ldr	r2, [pc, #68]	; (8003ee0 <SystemCoreClockUpdate+0x60>)
 8003e9c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003ea0:	5cd2      	ldrb	r2, [r2, r3]
 8003ea2:	680b      	ldr	r3, [r1, #0]
 8003ea4:	40d3      	lsrs	r3, r2
 8003ea6:	600b      	str	r3, [r1, #0]
 8003ea8:	bd10      	pop	{r4, pc}
 8003eaa:	6853      	ldr	r3, [r2, #4]
 8003eac:	6850      	ldr	r0, [r2, #4]
 8003eae:	03c0      	lsls	r0, r0, #15
 8003eb0:	bf49      	itett	mi
 8003eb2:	6ad0      	ldrmi	r0, [r2, #44]	; 0x2c
 8003eb4:	480b      	ldrpl	r0, [pc, #44]	; (8003ee4 <SystemCoreClockUpdate+0x64>)
 8003eb6:	4c09      	ldrmi	r4, [pc, #36]	; (8003edc <SystemCoreClockUpdate+0x5c>)
 8003eb8:	f000 000f 	andmi.w	r0, r0, #15
 8003ebc:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003ec0:	bf48      	it	mi
 8003ec2:	3001      	addmi	r0, #1
 8003ec4:	f103 0302 	add.w	r3, r3, #2
 8003ec8:	bf48      	it	mi
 8003eca:	fbb4 f0f0 	udivmi	r0, r4, r0
 8003ece:	4343      	muls	r3, r0
 8003ed0:	e7e1      	b.n	8003e96 <SystemCoreClockUpdate+0x16>
 8003ed2:	bf00      	nop
 8003ed4:	40021000 	.word	0x40021000
 8003ed8:	200001a4 	.word	0x200001a4
 8003edc:	007a1200 	.word	0x007a1200
 8003ee0:	080070a8 	.word	0x080070a8
 8003ee4:	003d0900 	.word	0x003d0900

08003ee8 <SetSysClock_PLL_HSI>:
 8003ee8:	b530      	push	{r4, r5, lr}
 8003eea:	b091      	sub	sp, #68	; 0x44
 8003eec:	2303      	movs	r3, #3
 8003eee:	9306      	str	r3, [sp, #24]
 8003ef0:	2301      	movs	r3, #1
 8003ef2:	930a      	str	r3, [sp, #40]	; 0x28
 8003ef4:	2310      	movs	r3, #16
 8003ef6:	2400      	movs	r4, #0
 8003ef8:	930b      	str	r3, [sp, #44]	; 0x2c
 8003efa:	2502      	movs	r5, #2
 8003efc:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8003f00:	a806      	add	r0, sp, #24
 8003f02:	9407      	str	r4, [sp, #28]
 8003f04:	950d      	str	r5, [sp, #52]	; 0x34
 8003f06:	940e      	str	r4, [sp, #56]	; 0x38
 8003f08:	930f      	str	r3, [sp, #60]	; 0x3c
 8003f0a:	f000 fbd3 	bl	80046b4 <HAL_RCC_OscConfig>
 8003f0e:	b980      	cbnz	r0, 8003f32 <SetSysClock_PLL_HSI+0x4a>
 8003f10:	230f      	movs	r3, #15
 8003f12:	9301      	str	r3, [sp, #4]
 8003f14:	9003      	str	r0, [sp, #12]
 8003f16:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f1a:	9005      	str	r0, [sp, #20]
 8003f1c:	4629      	mov	r1, r5
 8003f1e:	a801      	add	r0, sp, #4
 8003f20:	9502      	str	r5, [sp, #8]
 8003f22:	9304      	str	r3, [sp, #16]
 8003f24:	f000 fe6a 	bl	8004bfc <HAL_RCC_ClockConfig>
 8003f28:	fab0 f080 	clz	r0, r0
 8003f2c:	0940      	lsrs	r0, r0, #5
 8003f2e:	b011      	add	sp, #68	; 0x44
 8003f30:	bd30      	pop	{r4, r5, pc}
 8003f32:	4620      	mov	r0, r4
 8003f34:	e7fb      	b.n	8003f2e <SetSysClock_PLL_HSI+0x46>

08003f36 <SetSysClock>:
 8003f36:	b508      	push	{r3, lr}
 8003f38:	f7ff ffd6 	bl	8003ee8 <SetSysClock_PLL_HSI>
 8003f3c:	b900      	cbnz	r0, 8003f40 <SetSysClock+0xa>
 8003f3e:	e7fe      	b.n	8003f3e <SetSysClock+0x8>
 8003f40:	bd08      	pop	{r3, pc}
	...

08003f44 <SystemInit>:
 8003f44:	4a1d      	ldr	r2, [pc, #116]	; (8003fbc <SystemInit+0x78>)
 8003f46:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003f4a:	b510      	push	{r4, lr}
 8003f4c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003f50:	4c1b      	ldr	r4, [pc, #108]	; (8003fc0 <SystemInit+0x7c>)
 8003f52:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003f56:	6823      	ldr	r3, [r4, #0]
 8003f58:	f043 0301 	orr.w	r3, r3, #1
 8003f5c:	6023      	str	r3, [r4, #0]
 8003f5e:	6861      	ldr	r1, [r4, #4]
 8003f60:	4b18      	ldr	r3, [pc, #96]	; (8003fc4 <SystemInit+0x80>)
 8003f62:	400b      	ands	r3, r1
 8003f64:	6063      	str	r3, [r4, #4]
 8003f66:	6823      	ldr	r3, [r4, #0]
 8003f68:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003f6c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003f70:	6023      	str	r3, [r4, #0]
 8003f72:	6823      	ldr	r3, [r4, #0]
 8003f74:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003f78:	6023      	str	r3, [r4, #0]
 8003f7a:	6863      	ldr	r3, [r4, #4]
 8003f7c:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8003f80:	6063      	str	r3, [r4, #4]
 8003f82:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003f84:	f023 030f 	bic.w	r3, r3, #15
 8003f88:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f8a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003f8c:	4b0e      	ldr	r3, [pc, #56]	; (8003fc8 <SystemInit+0x84>)
 8003f8e:	400b      	ands	r3, r1
 8003f90:	6323      	str	r3, [r4, #48]	; 0x30
 8003f92:	2300      	movs	r3, #0
 8003f94:	60a3      	str	r3, [r4, #8]
 8003f96:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003f9a:	6093      	str	r3, [r2, #8]
 8003f9c:	4b0b      	ldr	r3, [pc, #44]	; (8003fcc <SystemInit+0x88>)
 8003f9e:	4a0c      	ldr	r2, [pc, #48]	; (8003fd0 <SystemInit+0x8c>)
 8003fa0:	601a      	str	r2, [r3, #0]
 8003fa2:	f000 f8df 	bl	8004164 <HAL_Init>
 8003fa6:	f7ff ffc6 	bl	8003f36 <SetSysClock>
 8003faa:	6923      	ldr	r3, [r4, #16]
 8003fac:	f043 0301 	orr.w	r3, r3, #1
 8003fb0:	6123      	str	r3, [r4, #16]
 8003fb2:	6923      	ldr	r3, [r4, #16]
 8003fb4:	f023 0301 	bic.w	r3, r3, #1
 8003fb8:	6123      	str	r3, [r4, #16]
 8003fba:	bd10      	pop	{r4, pc}
 8003fbc:	e000ed00 	.word	0xe000ed00
 8003fc0:	40021000 	.word	0x40021000
 8003fc4:	f87fc00c 	.word	0xf87fc00c
 8003fc8:	ff00fccc 	.word	0xff00fccc
 8003fcc:	200001a4 	.word	0x200001a4
 8003fd0:	007a1200 	.word	0x007a1200

08003fd4 <__NVIC_SetVector>:
 8003fd4:	b530      	push	{r4, r5, lr}
 8003fd6:	4c0c      	ldr	r4, [pc, #48]	; (8004008 <__NVIC_SetVector+0x34>)
 8003fd8:	68a2      	ldr	r2, [r4, #8]
 8003fda:	68a4      	ldr	r4, [r4, #8]
 8003fdc:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003fe0:	4613      	mov	r3, r2
 8003fe2:	d10c      	bne.n	8003ffe <__NVIC_SetVector+0x2a>
 8003fe4:	1f13      	subs	r3, r2, #4
 8003fe6:	4c09      	ldr	r4, [pc, #36]	; (800400c <__NVIC_SetVector+0x38>)
 8003fe8:	4a09      	ldr	r2, [pc, #36]	; (8004010 <__NVIC_SetVector+0x3c>)
 8003fea:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003fee:	f842 5f04 	str.w	r5, [r2, #4]!
 8003ff2:	42a2      	cmp	r2, r4
 8003ff4:	d1f9      	bne.n	8003fea <__NVIC_SetVector+0x16>
 8003ff6:	4a04      	ldr	r2, [pc, #16]	; (8004008 <__NVIC_SetVector+0x34>)
 8003ff8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003ffc:	6093      	str	r3, [r2, #8]
 8003ffe:	3010      	adds	r0, #16
 8004000:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8004004:	bd30      	pop	{r4, r5, pc}
 8004006:	bf00      	nop
 8004008:	e000ed00 	.word	0xe000ed00
 800400c:	20000184 	.word	0x20000184
 8004010:	1ffffffc 	.word	0x1ffffffc

08004014 <HAL_PWR_EnterSLEEPMode>:
 8004014:	4a06      	ldr	r2, [pc, #24]	; (8004030 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8004016:	6913      	ldr	r3, [r2, #16]
 8004018:	2901      	cmp	r1, #1
 800401a:	f023 0304 	bic.w	r3, r3, #4
 800401e:	6113      	str	r3, [r2, #16]
 8004020:	d101      	bne.n	8004026 <HAL_PWR_EnterSLEEPMode+0x12>
 8004022:	bf30      	wfi
 8004024:	4770      	bx	lr
 8004026:	bf40      	sev
 8004028:	bf20      	wfe
 800402a:	bf20      	wfe
 800402c:	4770      	bx	lr
 800402e:	bf00      	nop
 8004030:	e000ed00 	.word	0xe000ed00

08004034 <HAL_TIM_OC_MspInit>:
 8004034:	4770      	bx	lr
	...

08004038 <TIM_Base_SetConfig>:
 8004038:	4a21      	ldr	r2, [pc, #132]	; (80040c0 <TIM_Base_SetConfig+0x88>)
 800403a:	6803      	ldr	r3, [r0, #0]
 800403c:	4290      	cmp	r0, r2
 800403e:	b510      	push	{r4, lr}
 8004040:	d005      	beq.n	800404e <TIM_Base_SetConfig+0x16>
 8004042:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004046:	d002      	beq.n	800404e <TIM_Base_SetConfig+0x16>
 8004048:	4c1e      	ldr	r4, [pc, #120]	; (80040c4 <TIM_Base_SetConfig+0x8c>)
 800404a:	42a0      	cmp	r0, r4
 800404c:	d10c      	bne.n	8004068 <TIM_Base_SetConfig+0x30>
 800404e:	684c      	ldr	r4, [r1, #4]
 8004050:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004054:	4290      	cmp	r0, r2
 8004056:	ea43 0304 	orr.w	r3, r3, r4
 800405a:	d010      	beq.n	800407e <TIM_Base_SetConfig+0x46>
 800405c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004060:	d00d      	beq.n	800407e <TIM_Base_SetConfig+0x46>
 8004062:	4a18      	ldr	r2, [pc, #96]	; (80040c4 <TIM_Base_SetConfig+0x8c>)
 8004064:	4290      	cmp	r0, r2
 8004066:	d00a      	beq.n	800407e <TIM_Base_SetConfig+0x46>
 8004068:	4a17      	ldr	r2, [pc, #92]	; (80040c8 <TIM_Base_SetConfig+0x90>)
 800406a:	4290      	cmp	r0, r2
 800406c:	d007      	beq.n	800407e <TIM_Base_SetConfig+0x46>
 800406e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004072:	4290      	cmp	r0, r2
 8004074:	d003      	beq.n	800407e <TIM_Base_SetConfig+0x46>
 8004076:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800407a:	4290      	cmp	r0, r2
 800407c:	d103      	bne.n	8004086 <TIM_Base_SetConfig+0x4e>
 800407e:	68ca      	ldr	r2, [r1, #12]
 8004080:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004084:	4313      	orrs	r3, r2
 8004086:	694a      	ldr	r2, [r1, #20]
 8004088:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800408c:	4313      	orrs	r3, r2
 800408e:	6003      	str	r3, [r0, #0]
 8004090:	688b      	ldr	r3, [r1, #8]
 8004092:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004094:	680b      	ldr	r3, [r1, #0]
 8004096:	6283      	str	r3, [r0, #40]	; 0x28
 8004098:	4b09      	ldr	r3, [pc, #36]	; (80040c0 <TIM_Base_SetConfig+0x88>)
 800409a:	4298      	cmp	r0, r3
 800409c:	d00b      	beq.n	80040b6 <TIM_Base_SetConfig+0x7e>
 800409e:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 80040a2:	4298      	cmp	r0, r3
 80040a4:	d007      	beq.n	80040b6 <TIM_Base_SetConfig+0x7e>
 80040a6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80040aa:	4298      	cmp	r0, r3
 80040ac:	d003      	beq.n	80040b6 <TIM_Base_SetConfig+0x7e>
 80040ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80040b2:	4298      	cmp	r0, r3
 80040b4:	d101      	bne.n	80040ba <TIM_Base_SetConfig+0x82>
 80040b6:	690b      	ldr	r3, [r1, #16]
 80040b8:	6303      	str	r3, [r0, #48]	; 0x30
 80040ba:	2301      	movs	r3, #1
 80040bc:	6143      	str	r3, [r0, #20]
 80040be:	bd10      	pop	{r4, pc}
 80040c0:	40012c00 	.word	0x40012c00
 80040c4:	40000400 	.word	0x40000400
 80040c8:	40014000 	.word	0x40014000

080040cc <HAL_TIM_OC_Init>:
 80040cc:	b510      	push	{r4, lr}
 80040ce:	4604      	mov	r4, r0
 80040d0:	b1a0      	cbz	r0, 80040fc <HAL_TIM_OC_Init+0x30>
 80040d2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80040d6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80040da:	b91b      	cbnz	r3, 80040e4 <HAL_TIM_OC_Init+0x18>
 80040dc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 80040e0:	f7ff ffa8 	bl	8004034 <HAL_TIM_OC_MspInit>
 80040e4:	2302      	movs	r3, #2
 80040e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80040ea:	6820      	ldr	r0, [r4, #0]
 80040ec:	1d21      	adds	r1, r4, #4
 80040ee:	f7ff ffa3 	bl	8004038 <TIM_Base_SetConfig>
 80040f2:	2301      	movs	r3, #1
 80040f4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80040f8:	2000      	movs	r0, #0
 80040fa:	bd10      	pop	{r4, pc}
 80040fc:	2001      	movs	r0, #1
 80040fe:	bd10      	pop	{r4, pc}

08004100 <TIM_CCxChannelCmd>:
 8004100:	6a03      	ldr	r3, [r0, #32]
 8004102:	b510      	push	{r4, lr}
 8004104:	2401      	movs	r4, #1
 8004106:	408c      	lsls	r4, r1
 8004108:	ea23 0304 	bic.w	r3, r3, r4
 800410c:	6203      	str	r3, [r0, #32]
 800410e:	6a03      	ldr	r3, [r0, #32]
 8004110:	408a      	lsls	r2, r1
 8004112:	431a      	orrs	r2, r3
 8004114:	6202      	str	r2, [r0, #32]
 8004116:	bd10      	pop	{r4, pc}

08004118 <HAL_TIM_PWM_Start>:
 8004118:	b510      	push	{r4, lr}
 800411a:	4604      	mov	r4, r0
 800411c:	2201      	movs	r2, #1
 800411e:	6800      	ldr	r0, [r0, #0]
 8004120:	f7ff ffee 	bl	8004100 <TIM_CCxChannelCmd>
 8004124:	6823      	ldr	r3, [r4, #0]
 8004126:	4a0c      	ldr	r2, [pc, #48]	; (8004158 <HAL_TIM_PWM_Start+0x40>)
 8004128:	4293      	cmp	r3, r2
 800412a:	d00b      	beq.n	8004144 <HAL_TIM_PWM_Start+0x2c>
 800412c:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 8004130:	4293      	cmp	r3, r2
 8004132:	d007      	beq.n	8004144 <HAL_TIM_PWM_Start+0x2c>
 8004134:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004138:	4293      	cmp	r3, r2
 800413a:	d003      	beq.n	8004144 <HAL_TIM_PWM_Start+0x2c>
 800413c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004140:	4293      	cmp	r3, r2
 8004142:	d103      	bne.n	800414c <HAL_TIM_PWM_Start+0x34>
 8004144:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004146:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800414a:	645a      	str	r2, [r3, #68]	; 0x44
 800414c:	681a      	ldr	r2, [r3, #0]
 800414e:	f042 0201 	orr.w	r2, r2, #1
 8004152:	601a      	str	r2, [r3, #0]
 8004154:	2000      	movs	r0, #0
 8004156:	bd10      	pop	{r4, pc}
 8004158:	40012c00 	.word	0x40012c00

0800415c <HAL_TIM_OC_Start>:
 800415c:	f7ff bfdc 	b.w	8004118 <HAL_TIM_PWM_Start>

08004160 <HAL_MspInit>:
 8004160:	4770      	bx	lr
	...

08004164 <HAL_Init>:
 8004164:	4a07      	ldr	r2, [pc, #28]	; (8004184 <HAL_Init+0x20>)
 8004166:	b508      	push	{r3, lr}
 8004168:	6813      	ldr	r3, [r2, #0]
 800416a:	f043 0310 	orr.w	r3, r3, #16
 800416e:	6013      	str	r3, [r2, #0]
 8004170:	2003      	movs	r0, #3
 8004172:	f000 fe53 	bl	8004e1c <HAL_NVIC_SetPriorityGrouping>
 8004176:	200f      	movs	r0, #15
 8004178:	f7fe ffd8 	bl	800312c <HAL_InitTick>
 800417c:	f7ff fff0 	bl	8004160 <HAL_MspInit>
 8004180:	2000      	movs	r0, #0
 8004182:	bd08      	pop	{r3, pc}
 8004184:	40022000 	.word	0x40022000

08004188 <HAL_IncTick>:
 8004188:	4a02      	ldr	r2, [pc, #8]	; (8004194 <HAL_IncTick+0xc>)
 800418a:	6813      	ldr	r3, [r2, #0]
 800418c:	3301      	adds	r3, #1
 800418e:	6013      	str	r3, [r2, #0]
 8004190:	4770      	bx	lr
 8004192:	bf00      	nop
 8004194:	20001f1c 	.word	0x20001f1c

08004198 <HAL_GetTick>:
 8004198:	4b01      	ldr	r3, [pc, #4]	; (80041a0 <HAL_GetTick+0x8>)
 800419a:	6818      	ldr	r0, [r3, #0]
 800419c:	4770      	bx	lr
 800419e:	bf00      	nop
 80041a0:	20001f1c 	.word	0x20001f1c

080041a4 <HAL_CAN_ConfigFilter>:
 80041a4:	6803      	ldr	r3, [r0, #0]
 80041a6:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 80041aa:	b570      	push	{r4, r5, r6, lr}
 80041ac:	f040 0001 	orr.w	r0, r0, #1
 80041b0:	694c      	ldr	r4, [r1, #20]
 80041b2:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 80041b6:	2201      	movs	r2, #1
 80041b8:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
 80041bc:	40a2      	lsls	r2, r4
 80041be:	43d0      	mvns	r0, r2
 80041c0:	4005      	ands	r5, r0
 80041c2:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c
 80041c6:	69cd      	ldr	r5, [r1, #28]
 80041c8:	bb85      	cbnz	r5, 800422c <HAL_CAN_ConfigFilter+0x88>
 80041ca:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 80041ce:	68ce      	ldr	r6, [r1, #12]
 80041d0:	4005      	ands	r5, r0
 80041d2:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 80041d6:	888d      	ldrh	r5, [r1, #4]
 80041d8:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 80041dc:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80041e0:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80041e4:	688e      	ldr	r6, [r1, #8]
 80041e6:	880d      	ldrh	r5, [r1, #0]
 80041e8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80041ec:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 80041f0:	698c      	ldr	r4, [r1, #24]
 80041f2:	bb6c      	cbnz	r4, 8004250 <HAL_CAN_ConfigFilter+0xac>
 80041f4:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 80041f8:	4004      	ands	r4, r0
 80041fa:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 80041fe:	690c      	ldr	r4, [r1, #16]
 8004200:	bb54      	cbnz	r4, 8004258 <HAL_CAN_ConfigFilter+0xb4>
 8004202:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
 8004206:	4020      	ands	r0, r4
 8004208:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 800420c:	6a09      	ldr	r1, [r1, #32]
 800420e:	2901      	cmp	r1, #1
 8004210:	bf02      	ittt	eq
 8004212:	f8d3 121c 	ldreq.w	r1, [r3, #540]	; 0x21c
 8004216:	430a      	orreq	r2, r1
 8004218:	f8c3 221c 	streq.w	r2, [r3, #540]	; 0x21c
 800421c:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8004220:	f022 0201 	bic.w	r2, r2, #1
 8004224:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8004228:	2000      	movs	r0, #0
 800422a:	bd70      	pop	{r4, r5, r6, pc}
 800422c:	2d01      	cmp	r5, #1
 800422e:	d1df      	bne.n	80041f0 <HAL_CAN_ConfigFilter+0x4c>
 8004230:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 8004234:	680e      	ldr	r6, [r1, #0]
 8004236:	4315      	orrs	r5, r2
 8004238:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 800423c:	888d      	ldrh	r5, [r1, #4]
 800423e:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8004242:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004246:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 800424a:	688e      	ldr	r6, [r1, #8]
 800424c:	898d      	ldrh	r5, [r1, #12]
 800424e:	e7cb      	b.n	80041e8 <HAL_CAN_ConfigFilter+0x44>
 8004250:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 8004254:	4314      	orrs	r4, r2
 8004256:	e7d0      	b.n	80041fa <HAL_CAN_ConfigFilter+0x56>
 8004258:	2c01      	cmp	r4, #1
 800425a:	d1d7      	bne.n	800420c <HAL_CAN_ConfigFilter+0x68>
 800425c:	f8d3 0214 	ldr.w	r0, [r3, #532]	; 0x214
 8004260:	4310      	orrs	r0, r2
 8004262:	e7d1      	b.n	8004208 <HAL_CAN_ConfigFilter+0x64>

08004264 <HAL_CAN_MspInit>:
 8004264:	4770      	bx	lr

08004266 <HAL_CAN_Init>:
 8004266:	b570      	push	{r4, r5, r6, lr}
 8004268:	4604      	mov	r4, r0
 800426a:	2800      	cmp	r0, #0
 800426c:	d072      	beq.n	8004354 <HAL_CAN_Init+0xee>
 800426e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004272:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004276:	b91b      	cbnz	r3, 8004280 <HAL_CAN_Init+0x1a>
 8004278:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800427c:	f7ff fff2 	bl	8004264 <HAL_CAN_MspInit>
 8004280:	2302      	movs	r3, #2
 8004282:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004286:	6823      	ldr	r3, [r4, #0]
 8004288:	681a      	ldr	r2, [r3, #0]
 800428a:	f022 0202 	bic.w	r2, r2, #2
 800428e:	601a      	str	r2, [r3, #0]
 8004290:	681a      	ldr	r2, [r3, #0]
 8004292:	f042 0201 	orr.w	r2, r2, #1
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	f7ff ff7e 	bl	8004198 <HAL_GetTick>
 800429c:	4606      	mov	r6, r0
 800429e:	6823      	ldr	r3, [r4, #0]
 80042a0:	685d      	ldr	r5, [r3, #4]
 80042a2:	f015 0501 	ands.w	r5, r5, #1
 80042a6:	d057      	beq.n	8004358 <HAL_CAN_Init+0xf2>
 80042a8:	685a      	ldr	r2, [r3, #4]
 80042aa:	07d1      	lsls	r1, r2, #31
 80042ac:	d54f      	bpl.n	800434e <HAL_CAN_Init+0xe8>
 80042ae:	69a2      	ldr	r2, [r4, #24]
 80042b0:	2a01      	cmp	r2, #1
 80042b2:	681a      	ldr	r2, [r3, #0]
 80042b4:	bf0c      	ite	eq
 80042b6:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 80042ba:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 80042be:	601a      	str	r2, [r3, #0]
 80042c0:	69e2      	ldr	r2, [r4, #28]
 80042c2:	2a01      	cmp	r2, #1
 80042c4:	681a      	ldr	r2, [r3, #0]
 80042c6:	bf0c      	ite	eq
 80042c8:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 80042cc:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 80042d0:	601a      	str	r2, [r3, #0]
 80042d2:	6a22      	ldr	r2, [r4, #32]
 80042d4:	2a01      	cmp	r2, #1
 80042d6:	681a      	ldr	r2, [r3, #0]
 80042d8:	bf0c      	ite	eq
 80042da:	f042 0220 	orreq.w	r2, r2, #32
 80042de:	f022 0220 	bicne.w	r2, r2, #32
 80042e2:	601a      	str	r2, [r3, #0]
 80042e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80042e6:	2a01      	cmp	r2, #1
 80042e8:	681a      	ldr	r2, [r3, #0]
 80042ea:	bf0c      	ite	eq
 80042ec:	f042 0210 	orreq.w	r2, r2, #16
 80042f0:	f022 0210 	bicne.w	r2, r2, #16
 80042f4:	601a      	str	r2, [r3, #0]
 80042f6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80042f8:	2a01      	cmp	r2, #1
 80042fa:	681a      	ldr	r2, [r3, #0]
 80042fc:	bf0c      	ite	eq
 80042fe:	f042 0208 	orreq.w	r2, r2, #8
 8004302:	f022 0208 	bicne.w	r2, r2, #8
 8004306:	601a      	str	r2, [r3, #0]
 8004308:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800430a:	2a01      	cmp	r2, #1
 800430c:	681a      	ldr	r2, [r3, #0]
 800430e:	bf0c      	ite	eq
 8004310:	f042 0204 	orreq.w	r2, r2, #4
 8004314:	f022 0204 	bicne.w	r2, r2, #4
 8004318:	601a      	str	r2, [r3, #0]
 800431a:	68e1      	ldr	r1, [r4, #12]
 800431c:	68a2      	ldr	r2, [r4, #8]
 800431e:	430a      	orrs	r2, r1
 8004320:	6921      	ldr	r1, [r4, #16]
 8004322:	430a      	orrs	r2, r1
 8004324:	6961      	ldr	r1, [r4, #20]
 8004326:	430a      	orrs	r2, r1
 8004328:	6861      	ldr	r1, [r4, #4]
 800432a:	3901      	subs	r1, #1
 800432c:	430a      	orrs	r2, r1
 800432e:	61da      	str	r2, [r3, #28]
 8004330:	681a      	ldr	r2, [r3, #0]
 8004332:	f022 0201 	bic.w	r2, r2, #1
 8004336:	601a      	str	r2, [r3, #0]
 8004338:	f7ff ff2e 	bl	8004198 <HAL_GetTick>
 800433c:	4605      	mov	r5, r0
 800433e:	6823      	ldr	r3, [r4, #0]
 8004340:	685a      	ldr	r2, [r3, #4]
 8004342:	07d2      	lsls	r2, r2, #31
 8004344:	d413      	bmi.n	800436e <HAL_CAN_Init+0x108>
 8004346:	6858      	ldr	r0, [r3, #4]
 8004348:	f010 0001 	ands.w	r0, r0, #1
 800434c:	d01b      	beq.n	8004386 <HAL_CAN_Init+0x120>
 800434e:	2304      	movs	r3, #4
 8004350:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004354:	2001      	movs	r0, #1
 8004356:	bd70      	pop	{r4, r5, r6, pc}
 8004358:	f7ff ff1e 	bl	8004198 <HAL_GetTick>
 800435c:	1b80      	subs	r0, r0, r6
 800435e:	280a      	cmp	r0, #10
 8004360:	d99d      	bls.n	800429e <HAL_CAN_Init+0x38>
 8004362:	2003      	movs	r0, #3
 8004364:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004368:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 800436c:	bd70      	pop	{r4, r5, r6, pc}
 800436e:	f7ff ff13 	bl	8004198 <HAL_GetTick>
 8004372:	1b40      	subs	r0, r0, r5
 8004374:	280a      	cmp	r0, #10
 8004376:	d9e2      	bls.n	800433e <HAL_CAN_Init+0xd8>
 8004378:	2003      	movs	r0, #3
 800437a:	2300      	movs	r3, #0
 800437c:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004380:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004384:	bd70      	pop	{r4, r5, r6, pc}
 8004386:	2301      	movs	r3, #1
 8004388:	63e0      	str	r0, [r4, #60]	; 0x3c
 800438a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800438e:	bd70      	pop	{r4, r5, r6, pc}

08004390 <HAL_UART_MspInit>:
 8004390:	4770      	bx	lr
	...

08004394 <UART_SetConfig>:
 8004394:	b538      	push	{r3, r4, r5, lr}
 8004396:	4604      	mov	r4, r0
 8004398:	6805      	ldr	r5, [r0, #0]
 800439a:	6921      	ldr	r1, [r4, #16]
 800439c:	68a3      	ldr	r3, [r4, #8]
 800439e:	69c2      	ldr	r2, [r0, #28]
 80043a0:	6828      	ldr	r0, [r5, #0]
 80043a2:	430b      	orrs	r3, r1
 80043a4:	6961      	ldr	r1, [r4, #20]
 80043a6:	430b      	orrs	r3, r1
 80043a8:	4949      	ldr	r1, [pc, #292]	; (80044d0 <UART_SetConfig+0x13c>)
 80043aa:	4313      	orrs	r3, r2
 80043ac:	4001      	ands	r1, r0
 80043ae:	430b      	orrs	r3, r1
 80043b0:	602b      	str	r3, [r5, #0]
 80043b2:	686b      	ldr	r3, [r5, #4]
 80043b4:	68e1      	ldr	r1, [r4, #12]
 80043b6:	6a20      	ldr	r0, [r4, #32]
 80043b8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80043bc:	430b      	orrs	r3, r1
 80043be:	606b      	str	r3, [r5, #4]
 80043c0:	68a9      	ldr	r1, [r5, #8]
 80043c2:	69a3      	ldr	r3, [r4, #24]
 80043c4:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 80043c8:	4303      	orrs	r3, r0
 80043ca:	430b      	orrs	r3, r1
 80043cc:	60ab      	str	r3, [r5, #8]
 80043ce:	4b41      	ldr	r3, [pc, #260]	; (80044d4 <UART_SetConfig+0x140>)
 80043d0:	429d      	cmp	r5, r3
 80043d2:	d112      	bne.n	80043fa <UART_SetConfig+0x66>
 80043d4:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 80043d8:	493f      	ldr	r1, [pc, #252]	; (80044d8 <UART_SetConfig+0x144>)
 80043da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043dc:	f003 0303 	and.w	r3, r3, #3
 80043e0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80043e4:	5ccb      	ldrb	r3, [r1, r3]
 80043e6:	d13b      	bne.n	8004460 <UART_SetConfig+0xcc>
 80043e8:	2b08      	cmp	r3, #8
 80043ea:	d836      	bhi.n	800445a <UART_SetConfig+0xc6>
 80043ec:	e8df f003 	tbb	[pc, r3]
 80043f0:	3524210f 	.word	0x3524210f
 80043f4:	3535352d 	.word	0x3535352d
 80043f8:	30          	.byte	0x30
 80043f9:	00          	.byte	0x00
 80043fa:	4b38      	ldr	r3, [pc, #224]	; (80044dc <UART_SetConfig+0x148>)
 80043fc:	429d      	cmp	r5, r3
 80043fe:	d003      	beq.n	8004408 <UART_SetConfig+0x74>
 8004400:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004404:	429d      	cmp	r5, r3
 8004406:	d15e      	bne.n	80044c6 <UART_SetConfig+0x132>
 8004408:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800440c:	d131      	bne.n	8004472 <UART_SetConfig+0xde>
 800440e:	f000 fcb7 	bl	8004d80 <HAL_RCC_GetPCLK1Freq>
 8004412:	6861      	ldr	r1, [r4, #4]
 8004414:	084a      	lsrs	r2, r1, #1
 8004416:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 800441a:	fbb3 f3f1 	udiv	r3, r3, r1
 800441e:	b29b      	uxth	r3, r3
 8004420:	2000      	movs	r0, #0
 8004422:	f023 020f 	bic.w	r2, r3, #15
 8004426:	6821      	ldr	r1, [r4, #0]
 8004428:	f3c3 0342 	ubfx	r3, r3, #1, #3
 800442c:	4313      	orrs	r3, r2
 800442e:	60cb      	str	r3, [r1, #12]
 8004430:	bd38      	pop	{r3, r4, r5, pc}
 8004432:	f000 fcbd 	bl	8004db0 <HAL_RCC_GetPCLK2Freq>
 8004436:	e7ec      	b.n	8004412 <UART_SetConfig+0x7e>
 8004438:	6860      	ldr	r0, [r4, #4]
 800443a:	0843      	lsrs	r3, r0, #1
 800443c:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8004440:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8004444:	fbb3 f3f0 	udiv	r3, r3, r0
 8004448:	e7e9      	b.n	800441e <UART_SetConfig+0x8a>
 800444a:	f000 fba5 	bl	8004b98 <HAL_RCC_GetSysClockFreq>
 800444e:	e7e0      	b.n	8004412 <UART_SetConfig+0x7e>
 8004450:	6860      	ldr	r0, [r4, #4]
 8004452:	0843      	lsrs	r3, r0, #1
 8004454:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004458:	e7f4      	b.n	8004444 <UART_SetConfig+0xb0>
 800445a:	2001      	movs	r0, #1
 800445c:	2300      	movs	r3, #0
 800445e:	e7e0      	b.n	8004422 <UART_SetConfig+0x8e>
 8004460:	2b08      	cmp	r3, #8
 8004462:	d833      	bhi.n	80044cc <UART_SetConfig+0x138>
 8004464:	e8df f003 	tbb	[pc, r3]
 8004468:	321b1005 	.word	0x321b1005
 800446c:	32323227 	.word	0x32323227
 8004470:	2a          	.byte	0x2a
 8004471:	00          	.byte	0x00
 8004472:	f000 fc85 	bl	8004d80 <HAL_RCC_GetPCLK1Freq>
 8004476:	6863      	ldr	r3, [r4, #4]
 8004478:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 800447c:	fbb0 f0f3 	udiv	r0, r0, r3
 8004480:	b280      	uxth	r0, r0
 8004482:	60e8      	str	r0, [r5, #12]
 8004484:	2000      	movs	r0, #0
 8004486:	bd38      	pop	{r3, r4, r5, pc}
 8004488:	f000 fc92 	bl	8004db0 <HAL_RCC_GetPCLK2Freq>
 800448c:	6863      	ldr	r3, [r4, #4]
 800448e:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004492:	fbb0 f0f3 	udiv	r0, r0, r3
 8004496:	4b0f      	ldr	r3, [pc, #60]	; (80044d4 <UART_SetConfig+0x140>)
 8004498:	b280      	uxth	r0, r0
 800449a:	60d8      	str	r0, [r3, #12]
 800449c:	e7f2      	b.n	8004484 <UART_SetConfig+0xf0>
 800449e:	6862      	ldr	r2, [r4, #4]
 80044a0:	0853      	lsrs	r3, r2, #1
 80044a2:	f503 03f4 	add.w	r3, r3, #7995392	; 0x7a0000
 80044a6:	f503 5390 	add.w	r3, r3, #4608	; 0x1200
 80044aa:	fbb3 f3f2 	udiv	r3, r3, r2
 80044ae:	4a09      	ldr	r2, [pc, #36]	; (80044d4 <UART_SetConfig+0x140>)
 80044b0:	b29b      	uxth	r3, r3
 80044b2:	60d3      	str	r3, [r2, #12]
 80044b4:	e7e6      	b.n	8004484 <UART_SetConfig+0xf0>
 80044b6:	f000 fb6f 	bl	8004b98 <HAL_RCC_GetSysClockFreq>
 80044ba:	e7e7      	b.n	800448c <UART_SetConfig+0xf8>
 80044bc:	6862      	ldr	r2, [r4, #4]
 80044be:	0853      	lsrs	r3, r2, #1
 80044c0:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 80044c4:	e7f1      	b.n	80044aa <UART_SetConfig+0x116>
 80044c6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80044ca:	d0c6      	beq.n	800445a <UART_SetConfig+0xc6>
 80044cc:	2001      	movs	r0, #1
 80044ce:	bd38      	pop	{r3, r4, r5, pc}
 80044d0:	efff69f3 	.word	0xefff69f3
 80044d4:	40013800 	.word	0x40013800
 80044d8:	080070c0 	.word	0x080070c0
 80044dc:	40004400 	.word	0x40004400

080044e0 <UART_AdvFeatureConfig>:
 80044e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80044e2:	07da      	lsls	r2, r3, #31
 80044e4:	b510      	push	{r4, lr}
 80044e6:	d506      	bpl.n	80044f6 <UART_AdvFeatureConfig+0x16>
 80044e8:	6801      	ldr	r1, [r0, #0]
 80044ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80044ec:	684a      	ldr	r2, [r1, #4]
 80044ee:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80044f2:	4322      	orrs	r2, r4
 80044f4:	604a      	str	r2, [r1, #4]
 80044f6:	079c      	lsls	r4, r3, #30
 80044f8:	d506      	bpl.n	8004508 <UART_AdvFeatureConfig+0x28>
 80044fa:	6801      	ldr	r1, [r0, #0]
 80044fc:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80044fe:	684a      	ldr	r2, [r1, #4]
 8004500:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004504:	4322      	orrs	r2, r4
 8004506:	604a      	str	r2, [r1, #4]
 8004508:	0759      	lsls	r1, r3, #29
 800450a:	d506      	bpl.n	800451a <UART_AdvFeatureConfig+0x3a>
 800450c:	6801      	ldr	r1, [r0, #0]
 800450e:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004510:	684a      	ldr	r2, [r1, #4]
 8004512:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004516:	4322      	orrs	r2, r4
 8004518:	604a      	str	r2, [r1, #4]
 800451a:	071a      	lsls	r2, r3, #28
 800451c:	d506      	bpl.n	800452c <UART_AdvFeatureConfig+0x4c>
 800451e:	6801      	ldr	r1, [r0, #0]
 8004520:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004522:	684a      	ldr	r2, [r1, #4]
 8004524:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004528:	4322      	orrs	r2, r4
 800452a:	604a      	str	r2, [r1, #4]
 800452c:	06dc      	lsls	r4, r3, #27
 800452e:	d506      	bpl.n	800453e <UART_AdvFeatureConfig+0x5e>
 8004530:	6801      	ldr	r1, [r0, #0]
 8004532:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004534:	688a      	ldr	r2, [r1, #8]
 8004536:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800453a:	4322      	orrs	r2, r4
 800453c:	608a      	str	r2, [r1, #8]
 800453e:	0699      	lsls	r1, r3, #26
 8004540:	d506      	bpl.n	8004550 <UART_AdvFeatureConfig+0x70>
 8004542:	6801      	ldr	r1, [r0, #0]
 8004544:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8004546:	688a      	ldr	r2, [r1, #8]
 8004548:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800454c:	4322      	orrs	r2, r4
 800454e:	608a      	str	r2, [r1, #8]
 8004550:	065a      	lsls	r2, r3, #25
 8004552:	d50f      	bpl.n	8004574 <UART_AdvFeatureConfig+0x94>
 8004554:	6801      	ldr	r1, [r0, #0]
 8004556:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004558:	684a      	ldr	r2, [r1, #4]
 800455a:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800455e:	4322      	orrs	r2, r4
 8004560:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004564:	604a      	str	r2, [r1, #4]
 8004566:	d105      	bne.n	8004574 <UART_AdvFeatureConfig+0x94>
 8004568:	684a      	ldr	r2, [r1, #4]
 800456a:	6c44      	ldr	r4, [r0, #68]	; 0x44
 800456c:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004570:	4322      	orrs	r2, r4
 8004572:	604a      	str	r2, [r1, #4]
 8004574:	061b      	lsls	r3, r3, #24
 8004576:	d506      	bpl.n	8004586 <UART_AdvFeatureConfig+0xa6>
 8004578:	6802      	ldr	r2, [r0, #0]
 800457a:	6c81      	ldr	r1, [r0, #72]	; 0x48
 800457c:	6853      	ldr	r3, [r2, #4]
 800457e:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004582:	430b      	orrs	r3, r1
 8004584:	6053      	str	r3, [r2, #4]
 8004586:	bd10      	pop	{r4, pc}

08004588 <UART_WaitOnFlagUntilTimeout>:
 8004588:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800458c:	9d06      	ldr	r5, [sp, #24]
 800458e:	4604      	mov	r4, r0
 8004590:	460f      	mov	r7, r1
 8004592:	4616      	mov	r6, r2
 8004594:	4698      	mov	r8, r3
 8004596:	6821      	ldr	r1, [r4, #0]
 8004598:	69ca      	ldr	r2, [r1, #28]
 800459a:	ea37 0302 	bics.w	r3, r7, r2
 800459e:	bf0c      	ite	eq
 80045a0:	2201      	moveq	r2, #1
 80045a2:	2200      	movne	r2, #0
 80045a4:	42b2      	cmp	r2, r6
 80045a6:	d002      	beq.n	80045ae <UART_WaitOnFlagUntilTimeout+0x26>
 80045a8:	2000      	movs	r0, #0
 80045aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045ae:	1c6b      	adds	r3, r5, #1
 80045b0:	d0f2      	beq.n	8004598 <UART_WaitOnFlagUntilTimeout+0x10>
 80045b2:	b99d      	cbnz	r5, 80045dc <UART_WaitOnFlagUntilTimeout+0x54>
 80045b4:	6823      	ldr	r3, [r4, #0]
 80045b6:	681a      	ldr	r2, [r3, #0]
 80045b8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80045bc:	601a      	str	r2, [r3, #0]
 80045be:	689a      	ldr	r2, [r3, #8]
 80045c0:	f022 0201 	bic.w	r2, r2, #1
 80045c4:	609a      	str	r2, [r3, #8]
 80045c6:	2320      	movs	r3, #32
 80045c8:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80045cc:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80045d0:	2300      	movs	r3, #0
 80045d2:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 80045d6:	2003      	movs	r0, #3
 80045d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045dc:	f7ff fddc 	bl	8004198 <HAL_GetTick>
 80045e0:	eba0 0008 	sub.w	r0, r0, r8
 80045e4:	4285      	cmp	r5, r0
 80045e6:	d2d6      	bcs.n	8004596 <UART_WaitOnFlagUntilTimeout+0xe>
 80045e8:	e7e4      	b.n	80045b4 <UART_WaitOnFlagUntilTimeout+0x2c>

080045ea <UART_CheckIdleState>:
 80045ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80045ec:	4604      	mov	r4, r0
 80045ee:	2600      	movs	r6, #0
 80045f0:	66c6      	str	r6, [r0, #108]	; 0x6c
 80045f2:	f7ff fdd1 	bl	8004198 <HAL_GetTick>
 80045f6:	6823      	ldr	r3, [r4, #0]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	071a      	lsls	r2, r3, #28
 80045fc:	4605      	mov	r5, r0
 80045fe:	d417      	bmi.n	8004630 <UART_CheckIdleState+0x46>
 8004600:	6823      	ldr	r3, [r4, #0]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	075b      	lsls	r3, r3, #29
 8004606:	d50a      	bpl.n	800461e <UART_CheckIdleState+0x34>
 8004608:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800460c:	9300      	str	r3, [sp, #0]
 800460e:	2200      	movs	r2, #0
 8004610:	462b      	mov	r3, r5
 8004612:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004616:	4620      	mov	r0, r4
 8004618:	f7ff ffb6 	bl	8004588 <UART_WaitOnFlagUntilTimeout>
 800461c:	b9a0      	cbnz	r0, 8004648 <UART_CheckIdleState+0x5e>
 800461e:	2320      	movs	r3, #32
 8004620:	2000      	movs	r0, #0
 8004622:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004626:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 800462a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800462e:	e00c      	b.n	800464a <UART_CheckIdleState+0x60>
 8004630:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004634:	9300      	str	r3, [sp, #0]
 8004636:	4632      	mov	r2, r6
 8004638:	4603      	mov	r3, r0
 800463a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800463e:	4620      	mov	r0, r4
 8004640:	f7ff ffa2 	bl	8004588 <UART_WaitOnFlagUntilTimeout>
 8004644:	2800      	cmp	r0, #0
 8004646:	d0db      	beq.n	8004600 <UART_CheckIdleState+0x16>
 8004648:	2003      	movs	r0, #3
 800464a:	b002      	add	sp, #8
 800464c:	bd70      	pop	{r4, r5, r6, pc}

0800464e <HAL_UART_Init>:
 800464e:	b510      	push	{r4, lr}
 8004650:	4604      	mov	r4, r0
 8004652:	b360      	cbz	r0, 80046ae <HAL_UART_Init+0x60>
 8004654:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 8004658:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800465c:	b91b      	cbnz	r3, 8004666 <HAL_UART_Init+0x18>
 800465e:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 8004662:	f7ff fe95 	bl	8004390 <HAL_UART_MspInit>
 8004666:	6822      	ldr	r2, [r4, #0]
 8004668:	2324      	movs	r3, #36	; 0x24
 800466a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800466e:	6813      	ldr	r3, [r2, #0]
 8004670:	f023 0301 	bic.w	r3, r3, #1
 8004674:	6013      	str	r3, [r2, #0]
 8004676:	4620      	mov	r0, r4
 8004678:	f7ff fe8c 	bl	8004394 <UART_SetConfig>
 800467c:	2801      	cmp	r0, #1
 800467e:	d016      	beq.n	80046ae <HAL_UART_Init+0x60>
 8004680:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004682:	b113      	cbz	r3, 800468a <HAL_UART_Init+0x3c>
 8004684:	4620      	mov	r0, r4
 8004686:	f7ff ff2b 	bl	80044e0 <UART_AdvFeatureConfig>
 800468a:	6823      	ldr	r3, [r4, #0]
 800468c:	685a      	ldr	r2, [r3, #4]
 800468e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004692:	605a      	str	r2, [r3, #4]
 8004694:	689a      	ldr	r2, [r3, #8]
 8004696:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800469a:	609a      	str	r2, [r3, #8]
 800469c:	681a      	ldr	r2, [r3, #0]
 800469e:	f042 0201 	orr.w	r2, r2, #1
 80046a2:	4620      	mov	r0, r4
 80046a4:	601a      	str	r2, [r3, #0]
 80046a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80046aa:	f7ff bf9e 	b.w	80045ea <UART_CheckIdleState>
 80046ae:	2001      	movs	r0, #1
 80046b0:	bd10      	pop	{r4, pc}
	...

080046b4 <HAL_RCC_OscConfig>:
 80046b4:	6803      	ldr	r3, [r0, #0]
 80046b6:	07da      	lsls	r2, r3, #31
 80046b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 80046bc:	4605      	mov	r5, r0
 80046be:	d411      	bmi.n	80046e4 <HAL_RCC_OscConfig+0x30>
 80046c0:	682b      	ldr	r3, [r5, #0]
 80046c2:	079b      	lsls	r3, r3, #30
 80046c4:	f100 8088 	bmi.w	80047d8 <HAL_RCC_OscConfig+0x124>
 80046c8:	682b      	ldr	r3, [r5, #0]
 80046ca:	071c      	lsls	r4, r3, #28
 80046cc:	f100 80f8 	bmi.w	80048c0 <HAL_RCC_OscConfig+0x20c>
 80046d0:	682b      	ldr	r3, [r5, #0]
 80046d2:	0758      	lsls	r0, r3, #29
 80046d4:	f100 8141 	bmi.w	800495a <HAL_RCC_OscConfig+0x2a6>
 80046d8:	69ea      	ldr	r2, [r5, #28]
 80046da:	2a00      	cmp	r2, #0
 80046dc:	f040 81d7 	bne.w	8004a8e <HAL_RCC_OscConfig+0x3da>
 80046e0:	2000      	movs	r0, #0
 80046e2:	e021      	b.n	8004728 <HAL_RCC_OscConfig+0x74>
 80046e4:	4cba      	ldr	r4, [pc, #744]	; (80049d0 <HAL_RCC_OscConfig+0x31c>)
 80046e6:	6863      	ldr	r3, [r4, #4]
 80046e8:	f003 030c 	and.w	r3, r3, #12
 80046ec:	2b04      	cmp	r3, #4
 80046ee:	d007      	beq.n	8004700 <HAL_RCC_OscConfig+0x4c>
 80046f0:	6863      	ldr	r3, [r4, #4]
 80046f2:	f003 030c 	and.w	r3, r3, #12
 80046f6:	2b08      	cmp	r3, #8
 80046f8:	d119      	bne.n	800472e <HAL_RCC_OscConfig+0x7a>
 80046fa:	6863      	ldr	r3, [r4, #4]
 80046fc:	03df      	lsls	r7, r3, #15
 80046fe:	d516      	bpl.n	800472e <HAL_RCC_OscConfig+0x7a>
 8004700:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004704:	fa93 f2a3 	rbit	r2, r3
 8004708:	6821      	ldr	r1, [r4, #0]
 800470a:	fa93 f3a3 	rbit	r3, r3
 800470e:	fab3 f383 	clz	r3, r3
 8004712:	f003 031f 	and.w	r3, r3, #31
 8004716:	2201      	movs	r2, #1
 8004718:	fa02 f303 	lsl.w	r3, r2, r3
 800471c:	420b      	tst	r3, r1
 800471e:	d0cf      	beq.n	80046c0 <HAL_RCC_OscConfig+0xc>
 8004720:	686b      	ldr	r3, [r5, #4]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d1cc      	bne.n	80046c0 <HAL_RCC_OscConfig+0xc>
 8004726:	2001      	movs	r0, #1
 8004728:	b002      	add	sp, #8
 800472a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800472e:	686a      	ldr	r2, [r5, #4]
 8004730:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8004734:	d125      	bne.n	8004782 <HAL_RCC_OscConfig+0xce>
 8004736:	6823      	ldr	r3, [r4, #0]
 8004738:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800473c:	6023      	str	r3, [r4, #0]
 800473e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004740:	68a9      	ldr	r1, [r5, #8]
 8004742:	f023 030f 	bic.w	r3, r3, #15
 8004746:	430b      	orrs	r3, r1
 8004748:	62e3      	str	r3, [r4, #44]	; 0x2c
 800474a:	b352      	cbz	r2, 80047a2 <HAL_RCC_OscConfig+0xee>
 800474c:	f7ff fd24 	bl	8004198 <HAL_GetTick>
 8004750:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8004754:	4680      	mov	r8, r0
 8004756:	2701      	movs	r7, #1
 8004758:	fa96 f3a6 	rbit	r3, r6
 800475c:	6822      	ldr	r2, [r4, #0]
 800475e:	fa96 f3a6 	rbit	r3, r6
 8004762:	fab3 f383 	clz	r3, r3
 8004766:	f003 031f 	and.w	r3, r3, #31
 800476a:	fa07 f303 	lsl.w	r3, r7, r3
 800476e:	4213      	tst	r3, r2
 8004770:	d1a6      	bne.n	80046c0 <HAL_RCC_OscConfig+0xc>
 8004772:	f7ff fd11 	bl	8004198 <HAL_GetTick>
 8004776:	eba0 0008 	sub.w	r0, r0, r8
 800477a:	2864      	cmp	r0, #100	; 0x64
 800477c:	d9ec      	bls.n	8004758 <HAL_RCC_OscConfig+0xa4>
 800477e:	2003      	movs	r0, #3
 8004780:	e7d2      	b.n	8004728 <HAL_RCC_OscConfig+0x74>
 8004782:	6823      	ldr	r3, [r4, #0]
 8004784:	b932      	cbnz	r2, 8004794 <HAL_RCC_OscConfig+0xe0>
 8004786:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800478a:	6023      	str	r3, [r4, #0]
 800478c:	6823      	ldr	r3, [r4, #0]
 800478e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004792:	e7d3      	b.n	800473c <HAL_RCC_OscConfig+0x88>
 8004794:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8004798:	d1f5      	bne.n	8004786 <HAL_RCC_OscConfig+0xd2>
 800479a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800479e:	6023      	str	r3, [r4, #0]
 80047a0:	e7c9      	b.n	8004736 <HAL_RCC_OscConfig+0x82>
 80047a2:	f7ff fcf9 	bl	8004198 <HAL_GetTick>
 80047a6:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 80047aa:	4680      	mov	r8, r0
 80047ac:	2701      	movs	r7, #1
 80047ae:	fa96 f3a6 	rbit	r3, r6
 80047b2:	6822      	ldr	r2, [r4, #0]
 80047b4:	fa96 f3a6 	rbit	r3, r6
 80047b8:	fab3 f383 	clz	r3, r3
 80047bc:	f003 031f 	and.w	r3, r3, #31
 80047c0:	fa07 f303 	lsl.w	r3, r7, r3
 80047c4:	4213      	tst	r3, r2
 80047c6:	f43f af7b 	beq.w	80046c0 <HAL_RCC_OscConfig+0xc>
 80047ca:	f7ff fce5 	bl	8004198 <HAL_GetTick>
 80047ce:	eba0 0008 	sub.w	r0, r0, r8
 80047d2:	2864      	cmp	r0, #100	; 0x64
 80047d4:	d9eb      	bls.n	80047ae <HAL_RCC_OscConfig+0xfa>
 80047d6:	e7d2      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 80047d8:	4c7d      	ldr	r4, [pc, #500]	; (80049d0 <HAL_RCC_OscConfig+0x31c>)
 80047da:	6863      	ldr	r3, [r4, #4]
 80047dc:	f013 0f0c 	tst.w	r3, #12
 80047e0:	d007      	beq.n	80047f2 <HAL_RCC_OscConfig+0x13e>
 80047e2:	6863      	ldr	r3, [r4, #4]
 80047e4:	f003 030c 	and.w	r3, r3, #12
 80047e8:	2b08      	cmp	r3, #8
 80047ea:	d121      	bne.n	8004830 <HAL_RCC_OscConfig+0x17c>
 80047ec:	6863      	ldr	r3, [r4, #4]
 80047ee:	03de      	lsls	r6, r3, #15
 80047f0:	d41e      	bmi.n	8004830 <HAL_RCC_OscConfig+0x17c>
 80047f2:	2302      	movs	r3, #2
 80047f4:	fa93 f2a3 	rbit	r2, r3
 80047f8:	6821      	ldr	r1, [r4, #0]
 80047fa:	fa93 f3a3 	rbit	r3, r3
 80047fe:	fab3 f383 	clz	r3, r3
 8004802:	f003 031f 	and.w	r3, r3, #31
 8004806:	2201      	movs	r2, #1
 8004808:	fa02 f303 	lsl.w	r3, r2, r3
 800480c:	420b      	tst	r3, r1
 800480e:	d002      	beq.n	8004816 <HAL_RCC_OscConfig+0x162>
 8004810:	692b      	ldr	r3, [r5, #16]
 8004812:	4293      	cmp	r3, r2
 8004814:	d187      	bne.n	8004726 <HAL_RCC_OscConfig+0x72>
 8004816:	6821      	ldr	r1, [r4, #0]
 8004818:	23f8      	movs	r3, #248	; 0xf8
 800481a:	fa93 f3a3 	rbit	r3, r3
 800481e:	fab3 f283 	clz	r2, r3
 8004822:	696b      	ldr	r3, [r5, #20]
 8004824:	4093      	lsls	r3, r2
 8004826:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 800482a:	4313      	orrs	r3, r2
 800482c:	6023      	str	r3, [r4, #0]
 800482e:	e74b      	b.n	80046c8 <HAL_RCC_OscConfig+0x14>
 8004830:	692a      	ldr	r2, [r5, #16]
 8004832:	2601      	movs	r6, #1
 8004834:	b30a      	cbz	r2, 800487a <HAL_RCC_OscConfig+0x1c6>
 8004836:	fa96 f3a6 	rbit	r3, r6
 800483a:	fab3 f383 	clz	r3, r3
 800483e:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004842:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004846:	009b      	lsls	r3, r3, #2
 8004848:	2702      	movs	r7, #2
 800484a:	601e      	str	r6, [r3, #0]
 800484c:	f7ff fca4 	bl	8004198 <HAL_GetTick>
 8004850:	4680      	mov	r8, r0
 8004852:	fa97 f3a7 	rbit	r3, r7
 8004856:	6822      	ldr	r2, [r4, #0]
 8004858:	fa97 f3a7 	rbit	r3, r7
 800485c:	fab3 f383 	clz	r3, r3
 8004860:	f003 031f 	and.w	r3, r3, #31
 8004864:	fa06 f303 	lsl.w	r3, r6, r3
 8004868:	4213      	tst	r3, r2
 800486a:	d1d4      	bne.n	8004816 <HAL_RCC_OscConfig+0x162>
 800486c:	f7ff fc94 	bl	8004198 <HAL_GetTick>
 8004870:	eba0 0008 	sub.w	r0, r0, r8
 8004874:	2802      	cmp	r0, #2
 8004876:	d9ec      	bls.n	8004852 <HAL_RCC_OscConfig+0x19e>
 8004878:	e781      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 800487a:	fa96 f3a6 	rbit	r3, r6
 800487e:	fab3 f383 	clz	r3, r3
 8004882:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004886:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800488a:	009b      	lsls	r3, r3, #2
 800488c:	2702      	movs	r7, #2
 800488e:	601a      	str	r2, [r3, #0]
 8004890:	f7ff fc82 	bl	8004198 <HAL_GetTick>
 8004894:	4680      	mov	r8, r0
 8004896:	fa97 f3a7 	rbit	r3, r7
 800489a:	6822      	ldr	r2, [r4, #0]
 800489c:	fa97 f3a7 	rbit	r3, r7
 80048a0:	fab3 f383 	clz	r3, r3
 80048a4:	f003 031f 	and.w	r3, r3, #31
 80048a8:	fa06 f303 	lsl.w	r3, r6, r3
 80048ac:	4213      	tst	r3, r2
 80048ae:	f43f af0b 	beq.w	80046c8 <HAL_RCC_OscConfig+0x14>
 80048b2:	f7ff fc71 	bl	8004198 <HAL_GetTick>
 80048b6:	eba0 0008 	sub.w	r0, r0, r8
 80048ba:	2802      	cmp	r0, #2
 80048bc:	d9eb      	bls.n	8004896 <HAL_RCC_OscConfig+0x1e2>
 80048be:	e75e      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 80048c0:	69aa      	ldr	r2, [r5, #24]
 80048c2:	4e43      	ldr	r6, [pc, #268]	; (80049d0 <HAL_RCC_OscConfig+0x31c>)
 80048c4:	4943      	ldr	r1, [pc, #268]	; (80049d4 <HAL_RCC_OscConfig+0x320>)
 80048c6:	2401      	movs	r4, #1
 80048c8:	b31a      	cbz	r2, 8004912 <HAL_RCC_OscConfig+0x25e>
 80048ca:	fa94 f3a4 	rbit	r3, r4
 80048ce:	fab3 f383 	clz	r3, r3
 80048d2:	440b      	add	r3, r1
 80048d4:	009b      	lsls	r3, r3, #2
 80048d6:	2702      	movs	r7, #2
 80048d8:	601c      	str	r4, [r3, #0]
 80048da:	f7ff fc5d 	bl	8004198 <HAL_GetTick>
 80048de:	4680      	mov	r8, r0
 80048e0:	fa97 f3a7 	rbit	r3, r7
 80048e4:	fa97 f3a7 	rbit	r3, r7
 80048e8:	fa97 f3a7 	rbit	r3, r7
 80048ec:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80048ee:	fa97 f3a7 	rbit	r3, r7
 80048f2:	fab3 f383 	clz	r3, r3
 80048f6:	f003 031f 	and.w	r3, r3, #31
 80048fa:	fa04 f303 	lsl.w	r3, r4, r3
 80048fe:	4213      	tst	r3, r2
 8004900:	f47f aee6 	bne.w	80046d0 <HAL_RCC_OscConfig+0x1c>
 8004904:	f7ff fc48 	bl	8004198 <HAL_GetTick>
 8004908:	eba0 0008 	sub.w	r0, r0, r8
 800490c:	2802      	cmp	r0, #2
 800490e:	d9e7      	bls.n	80048e0 <HAL_RCC_OscConfig+0x22c>
 8004910:	e735      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004912:	fa94 f3a4 	rbit	r3, r4
 8004916:	fab3 f383 	clz	r3, r3
 800491a:	440b      	add	r3, r1
 800491c:	009b      	lsls	r3, r3, #2
 800491e:	2702      	movs	r7, #2
 8004920:	601a      	str	r2, [r3, #0]
 8004922:	f7ff fc39 	bl	8004198 <HAL_GetTick>
 8004926:	4680      	mov	r8, r0
 8004928:	fa97 f3a7 	rbit	r3, r7
 800492c:	fa97 f3a7 	rbit	r3, r7
 8004930:	fa97 f3a7 	rbit	r3, r7
 8004934:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8004936:	fa97 f3a7 	rbit	r3, r7
 800493a:	fab3 f383 	clz	r3, r3
 800493e:	f003 031f 	and.w	r3, r3, #31
 8004942:	fa04 f303 	lsl.w	r3, r4, r3
 8004946:	4213      	tst	r3, r2
 8004948:	f43f aec2 	beq.w	80046d0 <HAL_RCC_OscConfig+0x1c>
 800494c:	f7ff fc24 	bl	8004198 <HAL_GetTick>
 8004950:	eba0 0008 	sub.w	r0, r0, r8
 8004954:	2802      	cmp	r0, #2
 8004956:	d9e7      	bls.n	8004928 <HAL_RCC_OscConfig+0x274>
 8004958:	e711      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 800495a:	4c1d      	ldr	r4, [pc, #116]	; (80049d0 <HAL_RCC_OscConfig+0x31c>)
 800495c:	69e3      	ldr	r3, [r4, #28]
 800495e:	00d9      	lsls	r1, r3, #3
 8004960:	d434      	bmi.n	80049cc <HAL_RCC_OscConfig+0x318>
 8004962:	69e3      	ldr	r3, [r4, #28]
 8004964:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004968:	61e3      	str	r3, [r4, #28]
 800496a:	69e3      	ldr	r3, [r4, #28]
 800496c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004970:	9301      	str	r3, [sp, #4]
 8004972:	9b01      	ldr	r3, [sp, #4]
 8004974:	2601      	movs	r6, #1
 8004976:	4f18      	ldr	r7, [pc, #96]	; (80049d8 <HAL_RCC_OscConfig+0x324>)
 8004978:	683b      	ldr	r3, [r7, #0]
 800497a:	05da      	lsls	r2, r3, #23
 800497c:	d52e      	bpl.n	80049dc <HAL_RCC_OscConfig+0x328>
 800497e:	68eb      	ldr	r3, [r5, #12]
 8004980:	2b01      	cmp	r3, #1
 8004982:	d13c      	bne.n	80049fe <HAL_RCC_OscConfig+0x34a>
 8004984:	6a23      	ldr	r3, [r4, #32]
 8004986:	f043 0301 	orr.w	r3, r3, #1
 800498a:	6223      	str	r3, [r4, #32]
 800498c:	f7ff fc04 	bl	8004198 <HAL_GetTick>
 8004990:	2702      	movs	r7, #2
 8004992:	4682      	mov	r10, r0
 8004994:	46b9      	mov	r9, r7
 8004996:	f04f 0801 	mov.w	r8, #1
 800499a:	fa97 f3a7 	rbit	r3, r7
 800499e:	fa97 f3a7 	rbit	r3, r7
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d06b      	beq.n	8004a7e <HAL_RCC_OscConfig+0x3ca>
 80049a6:	6a22      	ldr	r2, [r4, #32]
 80049a8:	fa99 f3a9 	rbit	r3, r9
 80049ac:	fab3 f383 	clz	r3, r3
 80049b0:	f003 031f 	and.w	r3, r3, #31
 80049b4:	fa08 f303 	lsl.w	r3, r8, r3
 80049b8:	4213      	tst	r3, r2
 80049ba:	d057      	beq.n	8004a6c <HAL_RCC_OscConfig+0x3b8>
 80049bc:	2e00      	cmp	r6, #0
 80049be:	f43f ae8b 	beq.w	80046d8 <HAL_RCC_OscConfig+0x24>
 80049c2:	69e3      	ldr	r3, [r4, #28]
 80049c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80049c8:	61e3      	str	r3, [r4, #28]
 80049ca:	e685      	b.n	80046d8 <HAL_RCC_OscConfig+0x24>
 80049cc:	2600      	movs	r6, #0
 80049ce:	e7d2      	b.n	8004976 <HAL_RCC_OscConfig+0x2c2>
 80049d0:	40021000 	.word	0x40021000
 80049d4:	10908120 	.word	0x10908120
 80049d8:	40007000 	.word	0x40007000
 80049dc:	683b      	ldr	r3, [r7, #0]
 80049de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049e2:	603b      	str	r3, [r7, #0]
 80049e4:	f7ff fbd8 	bl	8004198 <HAL_GetTick>
 80049e8:	4680      	mov	r8, r0
 80049ea:	683b      	ldr	r3, [r7, #0]
 80049ec:	05db      	lsls	r3, r3, #23
 80049ee:	d4c6      	bmi.n	800497e <HAL_RCC_OscConfig+0x2ca>
 80049f0:	f7ff fbd2 	bl	8004198 <HAL_GetTick>
 80049f4:	eba0 0008 	sub.w	r0, r0, r8
 80049f8:	2864      	cmp	r0, #100	; 0x64
 80049fa:	d9f6      	bls.n	80049ea <HAL_RCC_OscConfig+0x336>
 80049fc:	e6bf      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 80049fe:	bb3b      	cbnz	r3, 8004a50 <HAL_RCC_OscConfig+0x39c>
 8004a00:	6a23      	ldr	r3, [r4, #32]
 8004a02:	f023 0301 	bic.w	r3, r3, #1
 8004a06:	6223      	str	r3, [r4, #32]
 8004a08:	6a23      	ldr	r3, [r4, #32]
 8004a0a:	f023 0304 	bic.w	r3, r3, #4
 8004a0e:	6223      	str	r3, [r4, #32]
 8004a10:	f7ff fbc2 	bl	8004198 <HAL_GetTick>
 8004a14:	2702      	movs	r7, #2
 8004a16:	4682      	mov	r10, r0
 8004a18:	46b9      	mov	r9, r7
 8004a1a:	f04f 0801 	mov.w	r8, #1
 8004a1e:	fa97 f3a7 	rbit	r3, r7
 8004a22:	fa97 f3a7 	rbit	r3, r7
 8004a26:	b373      	cbz	r3, 8004a86 <HAL_RCC_OscConfig+0x3d2>
 8004a28:	6a22      	ldr	r2, [r4, #32]
 8004a2a:	fa99 f3a9 	rbit	r3, r9
 8004a2e:	fab3 f383 	clz	r3, r3
 8004a32:	f003 031f 	and.w	r3, r3, #31
 8004a36:	fa08 f303 	lsl.w	r3, r8, r3
 8004a3a:	4213      	tst	r3, r2
 8004a3c:	d0be      	beq.n	80049bc <HAL_RCC_OscConfig+0x308>
 8004a3e:	f7ff fbab 	bl	8004198 <HAL_GetTick>
 8004a42:	f241 3388 	movw	r3, #5000	; 0x1388
 8004a46:	eba0 000a 	sub.w	r0, r0, r10
 8004a4a:	4298      	cmp	r0, r3
 8004a4c:	d9e7      	bls.n	8004a1e <HAL_RCC_OscConfig+0x36a>
 8004a4e:	e696      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004a50:	2b05      	cmp	r3, #5
 8004a52:	6a23      	ldr	r3, [r4, #32]
 8004a54:	d103      	bne.n	8004a5e <HAL_RCC_OscConfig+0x3aa>
 8004a56:	f043 0304 	orr.w	r3, r3, #4
 8004a5a:	6223      	str	r3, [r4, #32]
 8004a5c:	e792      	b.n	8004984 <HAL_RCC_OscConfig+0x2d0>
 8004a5e:	f023 0301 	bic.w	r3, r3, #1
 8004a62:	6223      	str	r3, [r4, #32]
 8004a64:	6a23      	ldr	r3, [r4, #32]
 8004a66:	f023 0304 	bic.w	r3, r3, #4
 8004a6a:	e78e      	b.n	800498a <HAL_RCC_OscConfig+0x2d6>
 8004a6c:	f7ff fb94 	bl	8004198 <HAL_GetTick>
 8004a70:	f241 3388 	movw	r3, #5000	; 0x1388
 8004a74:	eba0 000a 	sub.w	r0, r0, r10
 8004a78:	4298      	cmp	r0, r3
 8004a7a:	d98e      	bls.n	800499a <HAL_RCC_OscConfig+0x2e6>
 8004a7c:	e67f      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004a7e:	fa97 f3a7 	rbit	r3, r7
 8004a82:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004a84:	e790      	b.n	80049a8 <HAL_RCC_OscConfig+0x2f4>
 8004a86:	fa97 f3a7 	rbit	r3, r7
 8004a8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004a8c:	e7cd      	b.n	8004a2a <HAL_RCC_OscConfig+0x376>
 8004a8e:	4c41      	ldr	r4, [pc, #260]	; (8004b94 <HAL_RCC_OscConfig+0x4e0>)
 8004a90:	6863      	ldr	r3, [r4, #4]
 8004a92:	f003 030c 	and.w	r3, r3, #12
 8004a96:	2b08      	cmp	r3, #8
 8004a98:	f43f ae45 	beq.w	8004726 <HAL_RCC_OscConfig+0x72>
 8004a9c:	2a02      	cmp	r2, #2
 8004a9e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004aa2:	d152      	bne.n	8004b4a <HAL_RCC_OscConfig+0x496>
 8004aa4:	fa93 f3a3 	rbit	r3, r3
 8004aa8:	fab3 f383 	clz	r3, r3
 8004aac:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004ab0:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004ab4:	009b      	lsls	r3, r3, #2
 8004ab6:	2200      	movs	r2, #0
 8004ab8:	601a      	str	r2, [r3, #0]
 8004aba:	f7ff fb6d 	bl	8004198 <HAL_GetTick>
 8004abe:	f04f 7700 	mov.w	r7, #33554432	; 0x2000000
 8004ac2:	4680      	mov	r8, r0
 8004ac4:	2601      	movs	r6, #1
 8004ac6:	fa97 f3a7 	rbit	r3, r7
 8004aca:	6822      	ldr	r2, [r4, #0]
 8004acc:	fa97 f3a7 	rbit	r3, r7
 8004ad0:	fab3 f383 	clz	r3, r3
 8004ad4:	f003 031f 	and.w	r3, r3, #31
 8004ad8:	fa06 f303 	lsl.w	r3, r6, r3
 8004adc:	4213      	tst	r3, r2
 8004ade:	d12d      	bne.n	8004b3c <HAL_RCC_OscConfig+0x488>
 8004ae0:	6862      	ldr	r2, [r4, #4]
 8004ae2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004ae4:	6a29      	ldr	r1, [r5, #32]
 8004ae6:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 8004aea:	430b      	orrs	r3, r1
 8004aec:	4313      	orrs	r3, r2
 8004aee:	6063      	str	r3, [r4, #4]
 8004af0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004af4:	fa93 f3a3 	rbit	r3, r3
 8004af8:	fab3 f383 	clz	r3, r3
 8004afc:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004b00:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004b04:	009b      	lsls	r3, r3, #2
 8004b06:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004b0a:	601e      	str	r6, [r3, #0]
 8004b0c:	f7ff fb44 	bl	8004198 <HAL_GetTick>
 8004b10:	2601      	movs	r6, #1
 8004b12:	4607      	mov	r7, r0
 8004b14:	fa95 f3a5 	rbit	r3, r5
 8004b18:	6822      	ldr	r2, [r4, #0]
 8004b1a:	fa95 f3a5 	rbit	r3, r5
 8004b1e:	fab3 f383 	clz	r3, r3
 8004b22:	f003 031f 	and.w	r3, r3, #31
 8004b26:	fa06 f303 	lsl.w	r3, r6, r3
 8004b2a:	4213      	tst	r3, r2
 8004b2c:	f47f add8 	bne.w	80046e0 <HAL_RCC_OscConfig+0x2c>
 8004b30:	f7ff fb32 	bl	8004198 <HAL_GetTick>
 8004b34:	1bc0      	subs	r0, r0, r7
 8004b36:	2802      	cmp	r0, #2
 8004b38:	d9ec      	bls.n	8004b14 <HAL_RCC_OscConfig+0x460>
 8004b3a:	e620      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004b3c:	f7ff fb2c 	bl	8004198 <HAL_GetTick>
 8004b40:	eba0 0008 	sub.w	r0, r0, r8
 8004b44:	2802      	cmp	r0, #2
 8004b46:	d9be      	bls.n	8004ac6 <HAL_RCC_OscConfig+0x412>
 8004b48:	e619      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004b4a:	fa93 f3a3 	rbit	r3, r3
 8004b4e:	fab3 f383 	clz	r3, r3
 8004b52:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004b56:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004b5a:	009b      	lsls	r3, r3, #2
 8004b5c:	2200      	movs	r2, #0
 8004b5e:	601a      	str	r2, [r3, #0]
 8004b60:	f7ff fb1a 	bl	8004198 <HAL_GetTick>
 8004b64:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004b68:	4607      	mov	r7, r0
 8004b6a:	2601      	movs	r6, #1
 8004b6c:	fa95 f3a5 	rbit	r3, r5
 8004b70:	6822      	ldr	r2, [r4, #0]
 8004b72:	fa95 f3a5 	rbit	r3, r5
 8004b76:	fab3 f383 	clz	r3, r3
 8004b7a:	f003 031f 	and.w	r3, r3, #31
 8004b7e:	fa06 f303 	lsl.w	r3, r6, r3
 8004b82:	4213      	tst	r3, r2
 8004b84:	f43f adac 	beq.w	80046e0 <HAL_RCC_OscConfig+0x2c>
 8004b88:	f7ff fb06 	bl	8004198 <HAL_GetTick>
 8004b8c:	1bc0      	subs	r0, r0, r7
 8004b8e:	2802      	cmp	r0, #2
 8004b90:	d9ec      	bls.n	8004b6c <HAL_RCC_OscConfig+0x4b8>
 8004b92:	e5f4      	b.n	800477e <HAL_RCC_OscConfig+0xca>
 8004b94:	40021000 	.word	0x40021000

08004b98 <HAL_RCC_GetSysClockFreq>:
 8004b98:	b510      	push	{r4, lr}
 8004b9a:	4c13      	ldr	r4, [pc, #76]	; (8004be8 <HAL_RCC_GetSysClockFreq+0x50>)
 8004b9c:	6861      	ldr	r1, [r4, #4]
 8004b9e:	f001 030c 	and.w	r3, r1, #12
 8004ba2:	2b08      	cmp	r3, #8
 8004ba4:	d11e      	bne.n	8004be4 <HAL_RCC_GetSysClockFreq+0x4c>
 8004ba6:	f44f 1370 	mov.w	r3, #3932160	; 0x3c0000
 8004baa:	fa93 f3a3 	rbit	r3, r3
 8004bae:	f401 1270 	and.w	r2, r1, #3932160	; 0x3c0000
 8004bb2:	fab3 f383 	clz	r3, r3
 8004bb6:	fa22 f303 	lsr.w	r3, r2, r3
 8004bba:	4a0c      	ldr	r2, [pc, #48]	; (8004bec <HAL_RCC_GetSysClockFreq+0x54>)
 8004bbc:	5cd0      	ldrb	r0, [r2, r3]
 8004bbe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004bc0:	220f      	movs	r2, #15
 8004bc2:	fa92 f2a2 	rbit	r2, r2
 8004bc6:	fab2 f282 	clz	r2, r2
 8004bca:	f003 030f 	and.w	r3, r3, #15
 8004bce:	40d3      	lsrs	r3, r2
 8004bd0:	4a07      	ldr	r2, [pc, #28]	; (8004bf0 <HAL_RCC_GetSysClockFreq+0x58>)
 8004bd2:	5cd2      	ldrb	r2, [r2, r3]
 8004bd4:	03cb      	lsls	r3, r1, #15
 8004bd6:	bf4a      	itet	mi
 8004bd8:	4b06      	ldrmi	r3, [pc, #24]	; (8004bf4 <HAL_RCC_GetSysClockFreq+0x5c>)
 8004bda:	4b07      	ldrpl	r3, [pc, #28]	; (8004bf8 <HAL_RCC_GetSysClockFreq+0x60>)
 8004bdc:	fbb3 f3f2 	udivmi	r3, r3, r2
 8004be0:	4358      	muls	r0, r3
 8004be2:	bd10      	pop	{r4, pc}
 8004be4:	4803      	ldr	r0, [pc, #12]	; (8004bf4 <HAL_RCC_GetSysClockFreq+0x5c>)
 8004be6:	bd10      	pop	{r4, pc}
 8004be8:	40021000 	.word	0x40021000
 8004bec:	080070c4 	.word	0x080070c4
 8004bf0:	080070d4 	.word	0x080070d4
 8004bf4:	007a1200 	.word	0x007a1200
 8004bf8:	003d0900 	.word	0x003d0900

08004bfc <HAL_RCC_ClockConfig>:
 8004bfc:	4a5c      	ldr	r2, [pc, #368]	; (8004d70 <HAL_RCC_ClockConfig+0x174>)
 8004bfe:	6813      	ldr	r3, [r2, #0]
 8004c00:	f003 0307 	and.w	r3, r3, #7
 8004c04:	428b      	cmp	r3, r1
 8004c06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c0a:	4606      	mov	r6, r0
 8004c0c:	460d      	mov	r5, r1
 8004c0e:	d330      	bcc.n	8004c72 <HAL_RCC_ClockConfig+0x76>
 8004c10:	6832      	ldr	r2, [r6, #0]
 8004c12:	0791      	lsls	r1, r2, #30
 8004c14:	d43a      	bmi.n	8004c8c <HAL_RCC_ClockConfig+0x90>
 8004c16:	07d2      	lsls	r2, r2, #31
 8004c18:	d440      	bmi.n	8004c9c <HAL_RCC_ClockConfig+0xa0>
 8004c1a:	4a55      	ldr	r2, [pc, #340]	; (8004d70 <HAL_RCC_ClockConfig+0x174>)
 8004c1c:	6813      	ldr	r3, [r2, #0]
 8004c1e:	f003 0307 	and.w	r3, r3, #7
 8004c22:	429d      	cmp	r5, r3
 8004c24:	f0c0 8092 	bcc.w	8004d4c <HAL_RCC_ClockConfig+0x150>
 8004c28:	6832      	ldr	r2, [r6, #0]
 8004c2a:	4c52      	ldr	r4, [pc, #328]	; (8004d74 <HAL_RCC_ClockConfig+0x178>)
 8004c2c:	f012 0f04 	tst.w	r2, #4
 8004c30:	f040 8097 	bne.w	8004d62 <HAL_RCC_ClockConfig+0x166>
 8004c34:	0713      	lsls	r3, r2, #28
 8004c36:	d506      	bpl.n	8004c46 <HAL_RCC_ClockConfig+0x4a>
 8004c38:	6863      	ldr	r3, [r4, #4]
 8004c3a:	6932      	ldr	r2, [r6, #16]
 8004c3c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8004c40:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004c44:	6063      	str	r3, [r4, #4]
 8004c46:	f7ff ffa7 	bl	8004b98 <HAL_RCC_GetSysClockFreq>
 8004c4a:	6863      	ldr	r3, [r4, #4]
 8004c4c:	22f0      	movs	r2, #240	; 0xf0
 8004c4e:	fa92 f2a2 	rbit	r2, r2
 8004c52:	fab2 f282 	clz	r2, r2
 8004c56:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004c5a:	40d3      	lsrs	r3, r2
 8004c5c:	4a46      	ldr	r2, [pc, #280]	; (8004d78 <HAL_RCC_ClockConfig+0x17c>)
 8004c5e:	5cd3      	ldrb	r3, [r2, r3]
 8004c60:	40d8      	lsrs	r0, r3
 8004c62:	4b46      	ldr	r3, [pc, #280]	; (8004d7c <HAL_RCC_ClockConfig+0x180>)
 8004c64:	6018      	str	r0, [r3, #0]
 8004c66:	200f      	movs	r0, #15
 8004c68:	f7fe fa60 	bl	800312c <HAL_InitTick>
 8004c6c:	2000      	movs	r0, #0
 8004c6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c72:	6813      	ldr	r3, [r2, #0]
 8004c74:	f023 0307 	bic.w	r3, r3, #7
 8004c78:	430b      	orrs	r3, r1
 8004c7a:	6013      	str	r3, [r2, #0]
 8004c7c:	6813      	ldr	r3, [r2, #0]
 8004c7e:	f003 0307 	and.w	r3, r3, #7
 8004c82:	4299      	cmp	r1, r3
 8004c84:	d0c4      	beq.n	8004c10 <HAL_RCC_ClockConfig+0x14>
 8004c86:	2001      	movs	r0, #1
 8004c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c8c:	4939      	ldr	r1, [pc, #228]	; (8004d74 <HAL_RCC_ClockConfig+0x178>)
 8004c8e:	68b0      	ldr	r0, [r6, #8]
 8004c90:	684b      	ldr	r3, [r1, #4]
 8004c92:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004c96:	4303      	orrs	r3, r0
 8004c98:	604b      	str	r3, [r1, #4]
 8004c9a:	e7bc      	b.n	8004c16 <HAL_RCC_ClockConfig+0x1a>
 8004c9c:	6872      	ldr	r2, [r6, #4]
 8004c9e:	4c35      	ldr	r4, [pc, #212]	; (8004d74 <HAL_RCC_ClockConfig+0x178>)
 8004ca0:	2a01      	cmp	r2, #1
 8004ca2:	d128      	bne.n	8004cf6 <HAL_RCC_ClockConfig+0xfa>
 8004ca4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004ca8:	fa93 f1a3 	rbit	r1, r3
 8004cac:	6821      	ldr	r1, [r4, #0]
 8004cae:	fa93 f3a3 	rbit	r3, r3
 8004cb2:	fab3 f383 	clz	r3, r3
 8004cb6:	f003 031f 	and.w	r3, r3, #31
 8004cba:	fa02 f303 	lsl.w	r3, r2, r3
 8004cbe:	420b      	tst	r3, r1
 8004cc0:	d0e1      	beq.n	8004c86 <HAL_RCC_ClockConfig+0x8a>
 8004cc2:	6863      	ldr	r3, [r4, #4]
 8004cc4:	f023 0303 	bic.w	r3, r3, #3
 8004cc8:	431a      	orrs	r2, r3
 8004cca:	6062      	str	r2, [r4, #4]
 8004ccc:	f7ff fa64 	bl	8004198 <HAL_GetTick>
 8004cd0:	6873      	ldr	r3, [r6, #4]
 8004cd2:	2b01      	cmp	r3, #1
 8004cd4:	4607      	mov	r7, r0
 8004cd6:	f241 3888 	movw	r8, #5000	; 0x1388
 8004cda:	d11f      	bne.n	8004d1c <HAL_RCC_ClockConfig+0x120>
 8004cdc:	6863      	ldr	r3, [r4, #4]
 8004cde:	f003 030c 	and.w	r3, r3, #12
 8004ce2:	2b04      	cmp	r3, #4
 8004ce4:	d099      	beq.n	8004c1a <HAL_RCC_ClockConfig+0x1e>
 8004ce6:	f7ff fa57 	bl	8004198 <HAL_GetTick>
 8004cea:	1bc0      	subs	r0, r0, r7
 8004cec:	4540      	cmp	r0, r8
 8004cee:	d9f5      	bls.n	8004cdc <HAL_RCC_ClockConfig+0xe0>
 8004cf0:	2003      	movs	r0, #3
 8004cf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004cf6:	2a02      	cmp	r2, #2
 8004cf8:	bf0c      	ite	eq
 8004cfa:	f04f 7300 	moveq.w	r3, #33554432	; 0x2000000
 8004cfe:	2302      	movne	r3, #2
 8004d00:	fa93 f1a3 	rbit	r1, r3
 8004d04:	6820      	ldr	r0, [r4, #0]
 8004d06:	fa93 f3a3 	rbit	r3, r3
 8004d0a:	fab3 f383 	clz	r3, r3
 8004d0e:	f003 031f 	and.w	r3, r3, #31
 8004d12:	2101      	movs	r1, #1
 8004d14:	fa01 f303 	lsl.w	r3, r1, r3
 8004d18:	4203      	tst	r3, r0
 8004d1a:	e7d1      	b.n	8004cc0 <HAL_RCC_ClockConfig+0xc4>
 8004d1c:	2b02      	cmp	r3, #2
 8004d1e:	d110      	bne.n	8004d42 <HAL_RCC_ClockConfig+0x146>
 8004d20:	6863      	ldr	r3, [r4, #4]
 8004d22:	f003 030c 	and.w	r3, r3, #12
 8004d26:	2b08      	cmp	r3, #8
 8004d28:	f43f af77 	beq.w	8004c1a <HAL_RCC_ClockConfig+0x1e>
 8004d2c:	f7ff fa34 	bl	8004198 <HAL_GetTick>
 8004d30:	1bc0      	subs	r0, r0, r7
 8004d32:	4540      	cmp	r0, r8
 8004d34:	d9f4      	bls.n	8004d20 <HAL_RCC_ClockConfig+0x124>
 8004d36:	e7db      	b.n	8004cf0 <HAL_RCC_ClockConfig+0xf4>
 8004d38:	f7ff fa2e 	bl	8004198 <HAL_GetTick>
 8004d3c:	1bc0      	subs	r0, r0, r7
 8004d3e:	4540      	cmp	r0, r8
 8004d40:	d8d6      	bhi.n	8004cf0 <HAL_RCC_ClockConfig+0xf4>
 8004d42:	6863      	ldr	r3, [r4, #4]
 8004d44:	f013 0f0c 	tst.w	r3, #12
 8004d48:	d1f6      	bne.n	8004d38 <HAL_RCC_ClockConfig+0x13c>
 8004d4a:	e766      	b.n	8004c1a <HAL_RCC_ClockConfig+0x1e>
 8004d4c:	6813      	ldr	r3, [r2, #0]
 8004d4e:	f023 0307 	bic.w	r3, r3, #7
 8004d52:	432b      	orrs	r3, r5
 8004d54:	6013      	str	r3, [r2, #0]
 8004d56:	6813      	ldr	r3, [r2, #0]
 8004d58:	f003 0307 	and.w	r3, r3, #7
 8004d5c:	429d      	cmp	r5, r3
 8004d5e:	d192      	bne.n	8004c86 <HAL_RCC_ClockConfig+0x8a>
 8004d60:	e762      	b.n	8004c28 <HAL_RCC_ClockConfig+0x2c>
 8004d62:	6863      	ldr	r3, [r4, #4]
 8004d64:	68f1      	ldr	r1, [r6, #12]
 8004d66:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004d6a:	430b      	orrs	r3, r1
 8004d6c:	6063      	str	r3, [r4, #4]
 8004d6e:	e761      	b.n	8004c34 <HAL_RCC_ClockConfig+0x38>
 8004d70:	40022000 	.word	0x40022000
 8004d74:	40021000 	.word	0x40021000
 8004d78:	080070a8 	.word	0x080070a8
 8004d7c:	200001a4 	.word	0x200001a4

08004d80 <HAL_RCC_GetPCLK1Freq>:
 8004d80:	4b08      	ldr	r3, [pc, #32]	; (8004da4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004d82:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8004d86:	685b      	ldr	r3, [r3, #4]
 8004d88:	fa92 f2a2 	rbit	r2, r2
 8004d8c:	fab2 f282 	clz	r2, r2
 8004d90:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004d94:	40d3      	lsrs	r3, r2
 8004d96:	4a04      	ldr	r2, [pc, #16]	; (8004da8 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004d98:	5cd3      	ldrb	r3, [r2, r3]
 8004d9a:	4a04      	ldr	r2, [pc, #16]	; (8004dac <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004d9c:	6810      	ldr	r0, [r2, #0]
 8004d9e:	40d8      	lsrs	r0, r3
 8004da0:	4770      	bx	lr
 8004da2:	bf00      	nop
 8004da4:	40021000 	.word	0x40021000
 8004da8:	080070b8 	.word	0x080070b8
 8004dac:	200001a4 	.word	0x200001a4

08004db0 <HAL_RCC_GetPCLK2Freq>:
 8004db0:	4b08      	ldr	r3, [pc, #32]	; (8004dd4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004db2:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004db6:	685b      	ldr	r3, [r3, #4]
 8004db8:	fa92 f2a2 	rbit	r2, r2
 8004dbc:	fab2 f282 	clz	r2, r2
 8004dc0:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8004dc4:	40d3      	lsrs	r3, r2
 8004dc6:	4a04      	ldr	r2, [pc, #16]	; (8004dd8 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004dc8:	5cd3      	ldrb	r3, [r2, r3]
 8004dca:	4a04      	ldr	r2, [pc, #16]	; (8004ddc <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004dcc:	6810      	ldr	r0, [r2, #0]
 8004dce:	40d8      	lsrs	r0, r3
 8004dd0:	4770      	bx	lr
 8004dd2:	bf00      	nop
 8004dd4:	40021000 	.word	0x40021000
 8004dd8:	080070b8 	.word	0x080070b8
 8004ddc:	200001a4 	.word	0x200001a4

08004de0 <HAL_RCC_GetClockConfig>:
 8004de0:	230f      	movs	r3, #15
 8004de2:	6003      	str	r3, [r0, #0]
 8004de4:	4b0b      	ldr	r3, [pc, #44]	; (8004e14 <HAL_RCC_GetClockConfig+0x34>)
 8004de6:	685a      	ldr	r2, [r3, #4]
 8004de8:	f002 0203 	and.w	r2, r2, #3
 8004dec:	6042      	str	r2, [r0, #4]
 8004dee:	685a      	ldr	r2, [r3, #4]
 8004df0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8004df4:	6082      	str	r2, [r0, #8]
 8004df6:	685a      	ldr	r2, [r3, #4]
 8004df8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8004dfc:	60c2      	str	r2, [r0, #12]
 8004dfe:	685b      	ldr	r3, [r3, #4]
 8004e00:	08db      	lsrs	r3, r3, #3
 8004e02:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004e06:	6103      	str	r3, [r0, #16]
 8004e08:	4b03      	ldr	r3, [pc, #12]	; (8004e18 <HAL_RCC_GetClockConfig+0x38>)
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	f003 0307 	and.w	r3, r3, #7
 8004e10:	600b      	str	r3, [r1, #0]
 8004e12:	4770      	bx	lr
 8004e14:	40021000 	.word	0x40021000
 8004e18:	40022000 	.word	0x40022000

08004e1c <HAL_NVIC_SetPriorityGrouping>:
 8004e1c:	4a07      	ldr	r2, [pc, #28]	; (8004e3c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004e1e:	68d3      	ldr	r3, [r2, #12]
 8004e20:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004e24:	041b      	lsls	r3, r3, #16
 8004e26:	0c1b      	lsrs	r3, r3, #16
 8004e28:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004e2c:	0200      	lsls	r0, r0, #8
 8004e2e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004e32:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8004e36:	4303      	orrs	r3, r0
 8004e38:	60d3      	str	r3, [r2, #12]
 8004e3a:	4770      	bx	lr
 8004e3c:	e000ed00 	.word	0xe000ed00

08004e40 <mbed::Callback<void (int)>::~Callback()>:
 8004e40:	68c3      	ldr	r3, [r0, #12]
 8004e42:	b510      	push	{r4, lr}
 8004e44:	4604      	mov	r4, r0
 8004e46:	b10b      	cbz	r3, 8004e4c <mbed::Callback<void (int)>::~Callback()+0xc>
 8004e48:	689b      	ldr	r3, [r3, #8]
 8004e4a:	4798      	blx	r3
 8004e4c:	4620      	mov	r0, r4
 8004e4e:	bd10      	pop	{r4, pc}

08004e50 <mbed::donothing()>:
 8004e50:	4770      	bx	lr

08004e52 <mbed::SerialBase::lock()>:
 8004e52:	4770      	bx	lr

08004e54 <mbed::SerialBase::unlock()>:
 8004e54:	4770      	bx	lr

08004e56 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8004e56:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004e5a:	f102 0028 	add.w	r0, r2, #40	; 0x28
 8004e5e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	4718      	bx	r3

08004e64 <mbed::SerialBase::baud(int)>:
 8004e64:	b570      	push	{r4, r5, r6, lr}
 8004e66:	4605      	mov	r5, r0
 8004e68:	4604      	mov	r4, r0
 8004e6a:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e6e:	460e      	mov	r6, r1
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	4798      	blx	r3
 8004e74:	4628      	mov	r0, r5
 8004e76:	4631      	mov	r1, r6
 8004e78:	f7fe ff46 	bl	8003d08 <serial_baud>
 8004e7c:	6823      	ldr	r3, [r4, #0]
 8004e7e:	64a6      	str	r6, [r4, #72]	; 0x48
 8004e80:	4620      	mov	r0, r4
 8004e82:	685b      	ldr	r3, [r3, #4]
 8004e84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004e88:	4718      	bx	r3

08004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004e8a:	4288      	cmp	r0, r1
 8004e8c:	b538      	push	{r3, r4, r5, lr}
 8004e8e:	4604      	mov	r4, r0
 8004e90:	460d      	mov	r5, r1
 8004e92:	d00a      	beq.n	8004eaa <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004e94:	f7fc fa43 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8004e98:	b13c      	cbz	r4, 8004eaa <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004e9a:	68eb      	ldr	r3, [r5, #12]
 8004e9c:	b11b      	cbz	r3, 8004ea6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004e9e:	685b      	ldr	r3, [r3, #4]
 8004ea0:	4629      	mov	r1, r5
 8004ea2:	4620      	mov	r0, r4
 8004ea4:	4798      	blx	r3
 8004ea6:	68eb      	ldr	r3, [r5, #12]
 8004ea8:	60e3      	str	r3, [r4, #12]
 8004eaa:	4620      	mov	r0, r4
 8004eac:	bd38      	pop	{r3, r4, r5, pc}
	...

08004eb0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8004eb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004eb4:	4605      	mov	r5, r0
 8004eb6:	461e      	mov	r6, r3
 8004eb8:	4b1b      	ldr	r3, [pc, #108]	; (8004f28 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
 8004eba:	f845 3b04 	str.w	r3, [r5], #4
 8004ebe:	b085      	sub	sp, #20
 8004ec0:	4604      	mov	r4, r0
 8004ec2:	4688      	mov	r8, r1
 8004ec4:	4691      	mov	r9, r2
 8004ec6:	2100      	movs	r1, #0
 8004ec8:	2224      	movs	r2, #36	; 0x24
 8004eca:	4628      	mov	r0, r5
 8004ecc:	f001 f855 	bl	8005f7a <memset>
 8004ed0:	2200      	movs	r2, #0
 8004ed2:	6362      	str	r2, [r4, #52]	; 0x34
 8004ed4:	6462      	str	r2, [r4, #68]	; 0x44
 8004ed6:	4669      	mov	r1, sp
 8004ed8:	64a6      	str	r6, [r4, #72]	; 0x48
 8004eda:	4f14      	ldr	r7, [pc, #80]	; (8004f2c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
 8004edc:	4e14      	ldr	r6, [pc, #80]	; (8004f30 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x80>)
 8004ede:	9700      	str	r7, [sp, #0]
 8004ee0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8004ee4:	9603      	str	r6, [sp, #12]
 8004ee6:	f7ff ffd0 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004eea:	4668      	mov	r0, sp
 8004eec:	f7fc fa17 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8004ef0:	4669      	mov	r1, sp
 8004ef2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8004ef6:	9700      	str	r7, [sp, #0]
 8004ef8:	9603      	str	r6, [sp, #12]
 8004efa:	f7ff ffc6 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004efe:	4668      	mov	r0, sp
 8004f00:	f7fc fa0d 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8004f04:	464a      	mov	r2, r9
 8004f06:	4641      	mov	r1, r8
 8004f08:	4628      	mov	r0, r5
 8004f0a:	f7fe fe57 	bl	8003bbc <serial_init>
 8004f0e:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8004f10:	4628      	mov	r0, r5
 8004f12:	f7fe fef9 	bl	8003d08 <serial_baud>
 8004f16:	4628      	mov	r0, r5
 8004f18:	4622      	mov	r2, r4
 8004f1a:	4906      	ldr	r1, [pc, #24]	; (8004f34 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x84>)
 8004f1c:	f7fe fef8 	bl	8003d10 <serial_irq_handler>
 8004f20:	4620      	mov	r0, r4
 8004f22:	b005      	add	sp, #20
 8004f24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004f28:	080070ec 	.word	0x080070ec
 8004f2c:	08004e51 	.word	0x08004e51
 8004f30:	08006ab4 	.word	0x08006ab4
 8004f34:	08004e57 	.word	0x08004e57

08004f38 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8004f38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004f3c:	4605      	mov	r5, r0
 8004f3e:	4688      	mov	r8, r1
 8004f40:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	4604      	mov	r4, r0
 8004f48:	4616      	mov	r6, r2
 8004f4a:	4798      	blx	r3
 8004f4c:	f7fc fda4 	bl	8001a98 <core_util_critical_section_enter>
 8004f50:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004f54:	0130      	lsls	r0, r6, #4
 8004f56:	b197      	cbz	r7, 8004f7e <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8004f58:	3028      	adds	r0, #40	; 0x28
 8004f5a:	4641      	mov	r1, r8
 8004f5c:	4420      	add	r0, r4
 8004f5e:	f7ff ff94 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004f62:	2201      	movs	r2, #1
 8004f64:	4631      	mov	r1, r6
 8004f66:	4628      	mov	r0, r5
 8004f68:	f7fe fede 	bl	8003d28 <serial_irq_set>
 8004f6c:	f7fc fdaa 	bl	8001ac4 <core_util_critical_section_exit>
 8004f70:	6823      	ldr	r3, [r4, #0]
 8004f72:	4620      	mov	r0, r4
 8004f74:	685b      	ldr	r3, [r3, #4]
 8004f76:	4798      	blx	r3
 8004f78:	b004      	add	sp, #16
 8004f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f7e:	4b07      	ldr	r3, [pc, #28]	; (8004f9c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8004f80:	9300      	str	r3, [sp, #0]
 8004f82:	3028      	adds	r0, #40	; 0x28
 8004f84:	4b06      	ldr	r3, [pc, #24]	; (8004fa0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8004f86:	9303      	str	r3, [sp, #12]
 8004f88:	4669      	mov	r1, sp
 8004f8a:	4420      	add	r0, r4
 8004f8c:	f7ff ff7d 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004f90:	4668      	mov	r0, sp
 8004f92:	f7fc f9c4 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8004f96:	463a      	mov	r2, r7
 8004f98:	e7e4      	b.n	8004f64 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8004f9a:	bf00      	nop
 8004f9c:	08004e51 	.word	0x08004e51
 8004fa0:	08006ab4 	.word	0x08006ab4

08004fa4 <mbed::RawSerial::lock()>:
 8004fa4:	4770      	bx	lr
	...

08004fa8 <mbed::RawSerial::~RawSerial()>:
 8004fa8:	b510      	push	{r4, lr}
 8004faa:	4b03      	ldr	r3, [pc, #12]	; (8004fb8 <mbed::RawSerial::~RawSerial()+0x10>)
 8004fac:	6003      	str	r3, [r0, #0]
 8004fae:	4604      	mov	r4, r0
 8004fb0:	f7fc f9be 	bl	8001330 <mbed::SerialBase::~SerialBase()>
 8004fb4:	4620      	mov	r0, r4
 8004fb6:	bd10      	pop	{r4, pc}
 8004fb8:	08007104 	.word	0x08007104

08004fbc <mbed::RawSerial::~RawSerial()>:
 8004fbc:	b510      	push	{r4, lr}
 8004fbe:	4604      	mov	r4, r0
 8004fc0:	f7ff fff2 	bl	8004fa8 <mbed::RawSerial::~RawSerial()>
 8004fc4:	4620      	mov	r0, r4
 8004fc6:	f000 fac3 	bl	8005550 <operator delete(void*)>
 8004fca:	4620      	mov	r0, r4
 8004fcc:	bd10      	pop	{r4, pc}
	...

08004fd0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004fd0:	b510      	push	{r4, lr}
 8004fd2:	4604      	mov	r4, r0
 8004fd4:	f7ff ff6c 	bl	8004eb0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004fd8:	4b01      	ldr	r3, [pc, #4]	; (8004fe0 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004fda:	6023      	str	r3, [r4, #0]
 8004fdc:	4620      	mov	r0, r4
 8004fde:	bd10      	pop	{r4, pc}
 8004fe0:	08007104 	.word	0x08007104

08004fe4 <mbed::Timer::start()>:
 8004fe4:	b510      	push	{r4, lr}
 8004fe6:	4604      	mov	r4, r0
 8004fe8:	f7fc fd56 	bl	8001a98 <core_util_critical_section_enter>
 8004fec:	6823      	ldr	r3, [r4, #0]
 8004fee:	b92b      	cbnz	r3, 8004ffc <mbed::Timer::start()+0x18>
 8004ff0:	68e0      	ldr	r0, [r4, #12]
 8004ff2:	f7fc fcf2 	bl	80019da <ticker_read>
 8004ff6:	2301      	movs	r3, #1
 8004ff8:	6060      	str	r0, [r4, #4]
 8004ffa:	6023      	str	r3, [r4, #0]
 8004ffc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005000:	f7fc bd60 	b.w	8001ac4 <core_util_critical_section_exit>

08005004 <mbed::Timer::slicetime()>:
 8005004:	b538      	push	{r3, r4, r5, lr}
 8005006:	4605      	mov	r5, r0
 8005008:	f7fc fd46 	bl	8001a98 <core_util_critical_section_enter>
 800500c:	682c      	ldr	r4, [r5, #0]
 800500e:	b124      	cbz	r4, 800501a <mbed::Timer::slicetime()+0x16>
 8005010:	68e8      	ldr	r0, [r5, #12]
 8005012:	f7fc fce2 	bl	80019da <ticker_read>
 8005016:	686c      	ldr	r4, [r5, #4]
 8005018:	1b04      	subs	r4, r0, r4
 800501a:	f7fc fd53 	bl	8001ac4 <core_util_critical_section_exit>
 800501e:	4620      	mov	r0, r4
 8005020:	bd38      	pop	{r3, r4, r5, pc}

08005022 <mbed::Timer::read_us()>:
 8005022:	b538      	push	{r3, r4, r5, lr}
 8005024:	4605      	mov	r5, r0
 8005026:	f7fc fd37 	bl	8001a98 <core_util_critical_section_enter>
 800502a:	4628      	mov	r0, r5
 800502c:	68ac      	ldr	r4, [r5, #8]
 800502e:	f7ff ffe9 	bl	8005004 <mbed::Timer::slicetime()>
 8005032:	4404      	add	r4, r0
 8005034:	f7fc fd46 	bl	8001ac4 <core_util_critical_section_exit>
 8005038:	4620      	mov	r0, r4
 800503a:	bd38      	pop	{r3, r4, r5, pc}

0800503c <mbed::Timer::read_ms()>:
 800503c:	b508      	push	{r3, lr}
 800503e:	f7ff fff0 	bl	8005022 <mbed::Timer::read_us()>
 8005042:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005046:	fb90 f0f3 	sdiv	r0, r0, r3
 800504a:	bd08      	pop	{r3, pc}

0800504c <mbed::Timer::reset()>:
 800504c:	b510      	push	{r4, lr}
 800504e:	4604      	mov	r4, r0
 8005050:	f7fc fd22 	bl	8001a98 <core_util_critical_section_enter>
 8005054:	68e0      	ldr	r0, [r4, #12]
 8005056:	f7fc fcc0 	bl	80019da <ticker_read>
 800505a:	2300      	movs	r3, #0
 800505c:	6060      	str	r0, [r4, #4]
 800505e:	60a3      	str	r3, [r4, #8]
 8005060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005064:	f7fc bd2e 	b.w	8001ac4 <core_util_critical_section_exit>

08005068 <mbed::Timer::Timer()>:
 8005068:	2300      	movs	r3, #0
 800506a:	b510      	push	{r4, lr}
 800506c:	6003      	str	r3, [r0, #0]
 800506e:	6043      	str	r3, [r0, #4]
 8005070:	6083      	str	r3, [r0, #8]
 8005072:	4604      	mov	r4, r0
 8005074:	f7fc fc84 	bl	8001980 <get_us_ticker_data>
 8005078:	60e0      	str	r0, [r4, #12]
 800507a:	4620      	mov	r0, r4
 800507c:	f7ff ffe6 	bl	800504c <mbed::Timer::reset()>
 8005080:	4620      	mov	r0, r4
 8005082:	bd10      	pop	{r4, pc}

08005084 <mbed::donothing()>:
 8005084:	4770      	bx	lr

08005086 <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8005086:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 800508a:	f102 000c 	add.w	r0, r2, #12
 800508e:	6993      	ldr	r3, [r2, #24]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	4718      	bx	r3

08005094 <mbed::CAN::lock()>:
 8005094:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005098:	309c      	adds	r0, #156	; 0x9c
 800509a:	f000 ba7d 	b.w	8005598 <rtos::Mutex::lock(unsigned long)>

0800509e <mbed::CAN::unlock()>:
 800509e:	309c      	adds	r0, #156	; 0x9c
 80050a0:	f000 ba7d 	b.w	800559e <rtos::Mutex::unlock()>

080050a4 <mbed::CAN::frequency(int)>:
 80050a4:	b570      	push	{r4, r5, r6, lr}
 80050a6:	4605      	mov	r5, r0
 80050a8:	460e      	mov	r6, r1
 80050aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80050ae:	689b      	ldr	r3, [r3, #8]
 80050b0:	4604      	mov	r4, r0
 80050b2:	4798      	blx	r3
 80050b4:	4631      	mov	r1, r6
 80050b6:	4628      	mov	r0, r5
 80050b8:	f7fe fa1e 	bl	80034f8 <can_frequency>
 80050bc:	6823      	ldr	r3, [r4, #0]
 80050be:	4605      	mov	r5, r0
 80050c0:	68db      	ldr	r3, [r3, #12]
 80050c2:	4620      	mov	r0, r4
 80050c4:	4798      	blx	r3
 80050c6:	4628      	mov	r0, r5
 80050c8:	bd70      	pop	{r4, r5, r6, pc}

080050ca <mbed::CAN::write(mbed::CANMessage)>:
 80050ca:	b084      	sub	sp, #16
 80050cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80050ce:	4606      	mov	r6, r0
 80050d0:	ac07      	add	r4, sp, #28
 80050d2:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 80050d6:	f856 3b04 	ldr.w	r3, [r6], #4
 80050da:	689b      	ldr	r3, [r3, #8]
 80050dc:	4605      	mov	r5, r0
 80050de:	4798      	blx	r3
 80050e0:	2300      	movs	r3, #0
 80050e2:	9301      	str	r3, [sp, #4]
 80050e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80050e6:	9300      	str	r3, [sp, #0]
 80050e8:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80050ec:	4630      	mov	r0, r6
 80050ee:	f7fe fa49 	bl	8003584 <can_write>
 80050f2:	682b      	ldr	r3, [r5, #0]
 80050f4:	4604      	mov	r4, r0
 80050f6:	68db      	ldr	r3, [r3, #12]
 80050f8:	4628      	mov	r0, r5
 80050fa:	4798      	blx	r3
 80050fc:	4620      	mov	r0, r4
 80050fe:	b002      	add	sp, #8
 8005100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005104:	b004      	add	sp, #16
 8005106:	4770      	bx	lr

08005108 <mbed::CAN::read(mbed::CANMessage&, int)>:
 8005108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800510a:	4605      	mov	r5, r0
 800510c:	460e      	mov	r6, r1
 800510e:	f855 3b04 	ldr.w	r3, [r5], #4
 8005112:	4617      	mov	r7, r2
 8005114:	689b      	ldr	r3, [r3, #8]
 8005116:	4604      	mov	r4, r0
 8005118:	4798      	blx	r3
 800511a:	463a      	mov	r2, r7
 800511c:	4631      	mov	r1, r6
 800511e:	4628      	mov	r0, r5
 8005120:	f7fe fa81 	bl	8003626 <can_read>
 8005124:	6823      	ldr	r3, [r4, #0]
 8005126:	4605      	mov	r5, r0
 8005128:	68db      	ldr	r3, [r3, #12]
 800512a:	4620      	mov	r0, r4
 800512c:	4798      	blx	r3
 800512e:	4628      	mov	r0, r5
 8005130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005134 <mbed::CAN::~CAN()>:
 8005134:	b570      	push	{r4, r5, r6, lr}
 8005136:	4604      	mov	r4, r0
 8005138:	4b0d      	ldr	r3, [pc, #52]	; (8005170 <mbed::CAN::~CAN()+0x3c>)
 800513a:	f844 3b04 	str.w	r3, [r4], #4
 800513e:	4605      	mov	r5, r0
 8005140:	4620      	mov	r0, r4
 8005142:	f7fe f9b5 	bl	80034b0 <can_irq_free>
 8005146:	4620      	mov	r0, r4
 8005148:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 800514c:	f7fe f9be 	bl	80034cc <can_free>
 8005150:	4620      	mov	r0, r4
 8005152:	f000 fa27 	bl	80055a4 <rtos::Mutex::~Mutex()>
 8005156:	f115 060c 	adds.w	r6, r5, #12
 800515a:	d006      	beq.n	800516a <mbed::CAN::~CAN()+0x36>
 800515c:	42b4      	cmp	r4, r6
 800515e:	d004      	beq.n	800516a <mbed::CAN::~CAN()+0x36>
 8005160:	3c10      	subs	r4, #16
 8005162:	4620      	mov	r0, r4
 8005164:	f7fc f8db 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 8005168:	e7f8      	b.n	800515c <mbed::CAN::~CAN()+0x28>
 800516a:	4628      	mov	r0, r5
 800516c:	bd70      	pop	{r4, r5, r6, pc}
 800516e:	bf00      	nop
 8005170:	0800711c 	.word	0x0800711c

08005174 <mbed::CAN::~CAN()>:
 8005174:	b510      	push	{r4, lr}
 8005176:	4604      	mov	r4, r0
 8005178:	f7ff ffdc 	bl	8005134 <mbed::CAN::~CAN()>
 800517c:	4620      	mov	r0, r4
 800517e:	f000 f9e7 	bl	8005550 <operator delete(void*)>
 8005182:	4620      	mov	r0, r4
 8005184:	bd10      	pop	{r4, pc}
	...

08005188 <mbed::CAN::CAN(PinName, PinName)>:
 8005188:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 800518c:	4b1a      	ldr	r3, [pc, #104]	; (80051f8 <mbed::CAN::CAN(PinName, PinName)+0x70>)
 800518e:	6003      	str	r3, [r0, #0]
 8005190:	4617      	mov	r7, r2
 8005192:	f100 030c 	add.w	r3, r0, #12
 8005196:	2200      	movs	r2, #0
 8005198:	4604      	mov	r4, r0
 800519a:	460e      	mov	r6, r1
 800519c:	6042      	str	r2, [r0, #4]
 800519e:	6082      	str	r2, [r0, #8]
 80051a0:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 80051a4:	461d      	mov	r5, r3
 80051a6:	60da      	str	r2, [r3, #12]
 80051a8:	3310      	adds	r3, #16
 80051aa:	4543      	cmp	r3, r8
 80051ac:	d1fb      	bne.n	80051a6 <mbed::CAN::CAN(PinName, PinName)+0x1e>
 80051ae:	4640      	mov	r0, r8
 80051b0:	f000 f9da 	bl	8005568 <rtos::Mutex::Mutex()>
 80051b4:	f8df a048 	ldr.w	r10, [pc, #72]	; 8005200 <mbed::CAN::CAN(PinName, PinName)+0x78>
 80051b8:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8005204 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 80051bc:	4545      	cmp	r5, r8
 80051be:	d00c      	beq.n	80051da <mbed::CAN::CAN(PinName, PinName)+0x52>
 80051c0:	4669      	mov	r1, sp
 80051c2:	4628      	mov	r0, r5
 80051c4:	f8cd a000 	str.w	r10, [sp]
 80051c8:	f8cd 900c 	str.w	r9, [sp, #12]
 80051cc:	f7ff fe5d 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80051d0:	4668      	mov	r0, sp
 80051d2:	f7fc f8a4 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 80051d6:	3510      	adds	r5, #16
 80051d8:	e7f0      	b.n	80051bc <mbed::CAN::CAN(PinName, PinName)+0x34>
 80051da:	1d25      	adds	r5, r4, #4
 80051dc:	463a      	mov	r2, r7
 80051de:	4631      	mov	r1, r6
 80051e0:	4628      	mov	r0, r5
 80051e2:	f7fe faa1 	bl	8003728 <can_init>
 80051e6:	4628      	mov	r0, r5
 80051e8:	4622      	mov	r2, r4
 80051ea:	4904      	ldr	r1, [pc, #16]	; (80051fc <mbed::CAN::CAN(PinName, PinName)+0x74>)
 80051ec:	f7fe f954 	bl	8003498 <can_irq_init>
 80051f0:	4620      	mov	r0, r4
 80051f2:	b004      	add	sp, #16
 80051f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80051f8:	0800711c 	.word	0x0800711c
 80051fc:	08005087 	.word	0x08005087
 8005200:	08005085 	.word	0x08005085
 8005204:	08006ab4 	.word	0x08006ab4

08005208 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>:
 8005208:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800520c:	4605      	mov	r5, r0
 800520e:	4688      	mov	r8, r1
 8005210:	f855 3b04 	ldr.w	r3, [r5], #4
 8005214:	689b      	ldr	r3, [r3, #8]
 8005216:	4604      	mov	r4, r0
 8005218:	4616      	mov	r6, r2
 800521a:	4798      	blx	r3
 800521c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005220:	0130      	lsls	r0, r6, #4
 8005222:	b187      	cbz	r7, 8005246 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x3e>
 8005224:	300c      	adds	r0, #12
 8005226:	4641      	mov	r1, r8
 8005228:	4420      	add	r0, r4
 800522a:	f7ff fe2e 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800522e:	2201      	movs	r2, #1
 8005230:	4631      	mov	r1, r6
 8005232:	4628      	mov	r0, r5
 8005234:	f7fe fae8 	bl	8003808 <can_irq_set>
 8005238:	6823      	ldr	r3, [r4, #0]
 800523a:	4620      	mov	r0, r4
 800523c:	68db      	ldr	r3, [r3, #12]
 800523e:	4798      	blx	r3
 8005240:	b004      	add	sp, #16
 8005242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005246:	4b07      	ldr	r3, [pc, #28]	; (8005264 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x5c>)
 8005248:	9300      	str	r3, [sp, #0]
 800524a:	300c      	adds	r0, #12
 800524c:	4b06      	ldr	r3, [pc, #24]	; (8005268 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x60>)
 800524e:	9303      	str	r3, [sp, #12]
 8005250:	4669      	mov	r1, sp
 8005252:	4420      	add	r0, r4
 8005254:	f7ff fe19 	bl	8004e8a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005258:	4668      	mov	r0, sp
 800525a:	f7fc f860 	bl	800131e <mbed::Callback<void ()>::~Callback()>
 800525e:	463a      	mov	r2, r7
 8005260:	e7e6      	b.n	8005230 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x28>
 8005262:	bf00      	nop
 8005264:	08005085 	.word	0x08005085
 8005268:	08006ab4 	.word	0x08006ab4

0800526c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 800526c:	b538      	push	{r3, r4, r5, lr}
 800526e:	4604      	mov	r4, r0
 8005270:	b148      	cbz	r0, 8005286 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005272:	3058      	adds	r0, #88	; 0x58
 8005274:	42a0      	cmp	r0, r4
 8005276:	d006      	beq.n	8005286 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005278:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 800527c:	3814      	subs	r0, #20
 800527e:	f7ff fddf 	bl	8004e40 <mbed::Callback<void (int)>::~Callback()>
 8005282:	4628      	mov	r0, r5
 8005284:	e7f6      	b.n	8005274 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8005286:	4620      	mov	r0, r4
 8005288:	bd38      	pop	{r3, r4, r5, pc}
	...

0800528c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 800528c:	b570      	push	{r4, r5, r6, lr}
 800528e:	4c0e      	ldr	r4, [pc, #56]	; (80052c8 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005290:	4620      	mov	r0, r4
 8005292:	2500      	movs	r5, #0
 8005294:	2628      	movs	r6, #40	; 0x28
 8005296:	4632      	mov	r2, r6
 8005298:	4629      	mov	r1, r5
 800529a:	f840 5b04 	str.w	r5, [r0], #4
 800529e:	f000 fe6c 	bl	8005f7a <memset>
 80052a2:	4632      	mov	r2, r6
 80052a4:	4629      	mov	r1, r5
 80052a6:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80052aa:	62e5      	str	r5, [r4, #44]	; 0x2c
 80052ac:	f000 fe65 	bl	8005f7a <memset>
 80052b0:	65a5      	str	r5, [r4, #88]	; 0x58
 80052b2:	4620      	mov	r0, r4
 80052b4:	65e5      	str	r5, [r4, #92]	; 0x5c
 80052b6:	4a05      	ldr	r2, [pc, #20]	; (80052cc <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 80052b8:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 80052bc:	4904      	ldr	r1, [pc, #16]	; (80052d0 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 80052be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80052c2:	f000 b927 	b.w	8005514 <__aeabi_atexit>
 80052c6:	bf00      	nop
 80052c8:	20001500 	.word	0x20001500
 80052cc:	20000188 	.word	0x20000188
 80052d0:	0800526d 	.word	0x0800526d

080052d4 <__wrap__malloc_r>:
 80052d4:	f000 bea8 	b.w	8006028 <_malloc_r>

080052d8 <__wrap__realloc_r>:
 80052d8:	f000 bf04 	b.w	80060e4 <_realloc_r>

080052dc <__wrap__free_r>:
 80052dc:	f000 be56 	b.w	8005f8c <_free_r>

080052e0 <wait_us>:
 80052e0:	b570      	push	{r4, r5, r6, lr}
 80052e2:	4605      	mov	r5, r0
 80052e4:	f7fe fade 	bl	80038a4 <us_ticker_read>
 80052e8:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80052ec:	fb95 f4f4 	sdiv	r4, r5, r4
 80052f0:	2c00      	cmp	r4, #0
 80052f2:	4606      	mov	r6, r0
 80052f4:	dd02      	ble.n	80052fc <wait_us+0x1c>
 80052f6:	f7fc fbc9 	bl	8001a8c <core_util_are_interrupts_enabled>
 80052fa:	b928      	cbnz	r0, 8005308 <wait_us+0x28>
 80052fc:	f7fe fad2 	bl	80038a4 <us_ticker_read>
 8005300:	1b80      	subs	r0, r0, r6
 8005302:	42a8      	cmp	r0, r5
 8005304:	d3fa      	bcc.n	80052fc <wait_us+0x1c>
 8005306:	bd70      	pop	{r4, r5, r6, pc}
 8005308:	4620      	mov	r0, r4
 800530a:	f000 f92b 	bl	8005564 <rtos::Thread::wait(unsigned long)>
 800530e:	e7f5      	b.n	80052fc <wait_us+0x1c>

08005310 <wait_ms>:
 8005310:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005314:	4358      	muls	r0, r3
 8005316:	f7ff bfe3 	b.w	80052e0 <wait_us>
	...

0800531c <init_serial()>:
 800531c:	b508      	push	{r3, lr}
 800531e:	4b08      	ldr	r3, [pc, #32]	; (8005340 <init_serial()+0x24>)
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	b95b      	cbnz	r3, 800533c <init_serial()+0x20>
 8005324:	2102      	movs	r1, #2
 8005326:	4807      	ldr	r0, [pc, #28]	; (8005344 <init_serial()+0x28>)
 8005328:	220f      	movs	r2, #15
 800532a:	f7fe fc47 	bl	8003bbc <serial_init>
 800532e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8005332:	4804      	ldr	r0, [pc, #16]	; (8005344 <init_serial()+0x28>)
 8005334:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005338:	f7fe bce6 	b.w	8003d08 <serial_baud>
 800533c:	bd08      	pop	{r3, pc}
 800533e:	bf00      	nop
 8005340:	200012cc 	.word	0x200012cc
 8005344:	20001ef8 	.word	0x20001ef8

08005348 <_close>:
 8005348:	2802      	cmp	r0, #2
 800534a:	b510      	push	{r4, lr}
 800534c:	4604      	mov	r4, r0
 800534e:	dc01      	bgt.n	8005354 <_close+0xc>
 8005350:	2000      	movs	r0, #0
 8005352:	bd10      	pop	{r4, pc}
 8005354:	f000 fbce 	bl	8005af4 <__errno>
 8005358:	2309      	movs	r3, #9
 800535a:	6003      	str	r3, [r0, #0]
 800535c:	3c03      	subs	r4, #3
 800535e:	4b09      	ldr	r3, [pc, #36]	; (8005384 <_close+0x3c>)
 8005360:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005364:	2200      	movs	r2, #0
 8005366:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800536a:	b140      	cbz	r0, 800537e <_close+0x36>
 800536c:	6803      	ldr	r3, [r0, #0]
 800536e:	691b      	ldr	r3, [r3, #16]
 8005370:	4798      	blx	r3
 8005372:	1e04      	subs	r4, r0, #0
 8005374:	daec      	bge.n	8005350 <_close+0x8>
 8005376:	f000 fbbd 	bl	8005af4 <__errno>
 800537a:	4264      	negs	r4, r4
 800537c:	6004      	str	r4, [r0, #0]
 800537e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005382:	bd10      	pop	{r4, pc}
 8005384:	20001564 	.word	0x20001564

08005388 <_write>:
 8005388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800538a:	4605      	mov	r5, r0
 800538c:	460e      	mov	r6, r1
 800538e:	4614      	mov	r4, r2
 8005390:	f000 fbb0 	bl	8005af4 <__errno>
 8005394:	2309      	movs	r3, #9
 8005396:	2d02      	cmp	r5, #2
 8005398:	6003      	str	r3, [r0, #0]
 800539a:	dc0f      	bgt.n	80053bc <_write+0x34>
 800539c:	4b12      	ldr	r3, [pc, #72]	; (80053e8 <_write+0x60>)
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	b90b      	cbnz	r3, 80053a6 <_write+0x1e>
 80053a2:	f7ff ffbb 	bl	800531c <init_serial()>
 80053a6:	4635      	mov	r5, r6
 80053a8:	1937      	adds	r7, r6, r4
 80053aa:	4e10      	ldr	r6, [pc, #64]	; (80053ec <_write+0x64>)
 80053ac:	42bd      	cmp	r5, r7
 80053ae:	d015      	beq.n	80053dc <_write+0x54>
 80053b0:	f815 1b01 	ldrb.w	r1, [r5], #1
 80053b4:	4630      	mov	r0, r6
 80053b6:	f7fe fd45 	bl	8003e44 <serial_putc>
 80053ba:	e7f7      	b.n	80053ac <_write+0x24>
 80053bc:	3d03      	subs	r5, #3
 80053be:	4b0c      	ldr	r3, [pc, #48]	; (80053f0 <_write+0x68>)
 80053c0:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80053c4:	b160      	cbz	r0, 80053e0 <_write+0x58>
 80053c6:	6803      	ldr	r3, [r0, #0]
 80053c8:	4622      	mov	r2, r4
 80053ca:	68db      	ldr	r3, [r3, #12]
 80053cc:	4631      	mov	r1, r6
 80053ce:	4798      	blx	r3
 80053d0:	1e04      	subs	r4, r0, #0
 80053d2:	da03      	bge.n	80053dc <_write+0x54>
 80053d4:	f000 fb8e 	bl	8005af4 <__errno>
 80053d8:	4263      	negs	r3, r4
 80053da:	6003      	str	r3, [r0, #0]
 80053dc:	4620      	mov	r0, r4
 80053de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053e0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80053e4:	e7fa      	b.n	80053dc <_write+0x54>
 80053e6:	bf00      	nop
 80053e8:	200012cc 	.word	0x200012cc
 80053ec:	20001ef8 	.word	0x20001ef8
 80053f0:	20001564 	.word	0x20001564

080053f4 <_read>:
 80053f4:	b570      	push	{r4, r5, r6, lr}
 80053f6:	4604      	mov	r4, r0
 80053f8:	460d      	mov	r5, r1
 80053fa:	4616      	mov	r6, r2
 80053fc:	f000 fb7a 	bl	8005af4 <__errno>
 8005400:	2309      	movs	r3, #9
 8005402:	2c02      	cmp	r4, #2
 8005404:	6003      	str	r3, [r0, #0]
 8005406:	dc0b      	bgt.n	8005420 <_read+0x2c>
 8005408:	4b0f      	ldr	r3, [pc, #60]	; (8005448 <_read+0x54>)
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	b90b      	cbnz	r3, 8005412 <_read+0x1e>
 800540e:	f7ff ff85 	bl	800531c <init_serial()>
 8005412:	480e      	ldr	r0, [pc, #56]	; (800544c <_read+0x58>)
 8005414:	f7fe fcf4 	bl	8003e00 <serial_getc>
 8005418:	2401      	movs	r4, #1
 800541a:	7028      	strb	r0, [r5, #0]
 800541c:	4620      	mov	r0, r4
 800541e:	bd70      	pop	{r4, r5, r6, pc}
 8005420:	3c03      	subs	r4, #3
 8005422:	4b0b      	ldr	r3, [pc, #44]	; (8005450 <_read+0x5c>)
 8005424:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005428:	b158      	cbz	r0, 8005442 <_read+0x4e>
 800542a:	6803      	ldr	r3, [r0, #0]
 800542c:	4632      	mov	r2, r6
 800542e:	689b      	ldr	r3, [r3, #8]
 8005430:	4629      	mov	r1, r5
 8005432:	4798      	blx	r3
 8005434:	1e04      	subs	r4, r0, #0
 8005436:	daf1      	bge.n	800541c <_read+0x28>
 8005438:	f000 fb5c 	bl	8005af4 <__errno>
 800543c:	4263      	negs	r3, r4
 800543e:	6003      	str	r3, [r0, #0]
 8005440:	e7ec      	b.n	800541c <_read+0x28>
 8005442:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005446:	e7e9      	b.n	800541c <_read+0x28>
 8005448:	200012cc 	.word	0x200012cc
 800544c:	20001ef8 	.word	0x20001ef8
 8005450:	20001564 	.word	0x20001564

08005454 <_lseek>:
 8005454:	b570      	push	{r4, r5, r6, lr}
 8005456:	4604      	mov	r4, r0
 8005458:	460d      	mov	r5, r1
 800545a:	4616      	mov	r6, r2
 800545c:	f000 fb4a 	bl	8005af4 <__errno>
 8005460:	2309      	movs	r3, #9
 8005462:	2c02      	cmp	r4, #2
 8005464:	6003      	str	r3, [r0, #0]
 8005466:	dd0b      	ble.n	8005480 <_lseek+0x2c>
 8005468:	3c03      	subs	r4, #3
 800546a:	4b08      	ldr	r3, [pc, #32]	; (800548c <_lseek+0x38>)
 800546c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005470:	b140      	cbz	r0, 8005484 <_lseek+0x30>
 8005472:	6803      	ldr	r3, [r0, #0]
 8005474:	4632      	mov	r2, r6
 8005476:	4629      	mov	r1, r5
 8005478:	69db      	ldr	r3, [r3, #28]
 800547a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800547e:	4718      	bx	r3
 8005480:	2000      	movs	r0, #0
 8005482:	bd70      	pop	{r4, r5, r6, pc}
 8005484:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005488:	bd70      	pop	{r4, r5, r6, pc}
 800548a:	bf00      	nop
 800548c:	20001564 	.word	0x20001564

08005490 <software_init_hook>:
 8005490:	b508      	push	{r3, lr}
 8005492:	f7fe fced 	bl	8003e70 <mbed_sdk_init>
 8005496:	f7fc fc89 	bl	8001dac <software_init_hook_rtos>
 800549a:	bd08      	pop	{r3, pc}

0800549c <mbed_main>:
 800549c:	4770      	bx	lr

0800549e <__wrap_main>:
 800549e:	b508      	push	{r3, lr}
 80054a0:	f7ff fffc 	bl	800549c <mbed_main>
 80054a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80054a8:	f7fb be94 	b.w	80011d4 <main>

080054ac <_sbrk>:
 80054ac:	4a0c      	ldr	r2, [pc, #48]	; (80054e0 <_sbrk+0x34>)
 80054ae:	6813      	ldr	r3, [r2, #0]
 80054b0:	b510      	push	{r4, lr}
 80054b2:	4418      	add	r0, r3
 80054b4:	f3ef 8108 	mrs	r1, MSP
 80054b8:	4288      	cmp	r0, r1
 80054ba:	d305      	bcc.n	80054c8 <_sbrk+0x1c>
 80054bc:	4b09      	ldr	r3, [pc, #36]	; (80054e4 <_sbrk+0x38>)
 80054be:	220c      	movs	r2, #12
 80054c0:	601a      	str	r2, [r3, #0]
 80054c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80054c6:	bd10      	pop	{r4, pc}
 80054c8:	4907      	ldr	r1, [pc, #28]	; (80054e8 <_sbrk+0x3c>)
 80054ca:	680c      	ldr	r4, [r1, #0]
 80054cc:	b124      	cbz	r4, 80054d8 <_sbrk+0x2c>
 80054ce:	4907      	ldr	r1, [pc, #28]	; (80054ec <_sbrk+0x40>)
 80054d0:	6809      	ldr	r1, [r1, #0]
 80054d2:	4421      	add	r1, r4
 80054d4:	4288      	cmp	r0, r1
 80054d6:	d2f1      	bcs.n	80054bc <_sbrk+0x10>
 80054d8:	6010      	str	r0, [r2, #0]
 80054da:	4618      	mov	r0, r3
 80054dc:	bd10      	pop	{r4, pc}
 80054de:	bf00      	nop
 80054e0:	200001a8 	.word	0x200001a8
 80054e4:	20001f20 	.word	0x20001f20
 80054e8:	20001664 	.word	0x20001664
 80054ec:	20001668 	.word	0x20001668

080054f0 <_exit>:
 80054f0:	4c07      	ldr	r4, [pc, #28]	; (8005510 <_exit+0x20>)
 80054f2:	b508      	push	{r3, lr}
 80054f4:	6823      	ldr	r3, [r4, #0]
 80054f6:	4605      	mov	r5, r0
 80054f8:	6898      	ldr	r0, [r3, #8]
 80054fa:	f000 fbb3 	bl	8005c64 <fflush>
 80054fe:	6823      	ldr	r3, [r4, #0]
 8005500:	68d8      	ldr	r0, [r3, #12]
 8005502:	f000 fbaf 	bl	8005c64 <fflush>
 8005506:	b10d      	cbz	r5, 800550c <_exit+0x1c>
 8005508:	f7fc fab6 	bl	8001a78 <mbed_die>
 800550c:	e7fe      	b.n	800550c <_exit+0x1c>
 800550e:	bf00      	nop
 8005510:	200001ac 	.word	0x200001ac

08005514 <__aeabi_atexit>:
 8005514:	2001      	movs	r0, #1
 8005516:	4770      	bx	lr

08005518 <__wrap_exit>:
 8005518:	b508      	push	{r3, lr}
 800551a:	f7ff ffe9 	bl	80054f0 <_exit>

0800551e <__malloc_lock>:
 800551e:	b508      	push	{r3, lr}
 8005520:	f7fc fc52 	bl	8001dc8 <__rtos_malloc_lock>
 8005524:	bd08      	pop	{r3, pc}

08005526 <__malloc_unlock>:
 8005526:	b508      	push	{r3, lr}
 8005528:	f7fc fc56 	bl	8001dd8 <__rtos_malloc_unlock>
 800552c:	bd08      	pop	{r3, pc}
	...

08005530 <operator new[](unsigned int)>:
 8005530:	b510      	push	{r4, lr}
 8005532:	f000 fc97 	bl	8005e64 <malloc>
 8005536:	4604      	mov	r4, r0
 8005538:	b910      	cbnz	r0, 8005540 <operator new[](unsigned int)+0x10>
 800553a:	4802      	ldr	r0, [pc, #8]	; (8005544 <operator new[](unsigned int)+0x14>)
 800553c:	f7fc fad6 	bl	8001aec <error>
 8005540:	4620      	mov	r0, r4
 8005542:	bd10      	pop	{r4, pc}
 8005544:	0800712c 	.word	0x0800712c

08005548 <operator delete[](void*)>:
 8005548:	b108      	cbz	r0, 800554e <operator delete[](void*)+0x6>
 800554a:	f000 bc93 	b.w	8005e74 <free>
 800554e:	4770      	bx	lr

08005550 <operator delete(void*)>:
 8005550:	f7ff bffa 	b.w	8005548 <operator delete[](void*)>

08005554 <thread_terminate_hook>:
 8005554:	4b02      	ldr	r3, [pc, #8]	; (8005560 <thread_terminate_hook+0xc>)
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	b103      	cbz	r3, 800555c <thread_terminate_hook+0x8>
 800555a:	4718      	bx	r3
 800555c:	4770      	bx	lr
 800555e:	bf00      	nop
 8005560:	2000166c 	.word	0x2000166c

08005564 <rtos::Thread::wait(unsigned long)>:
 8005564:	f7fd b80e 	b.w	8002584 <osDelay>

08005568 <rtos::Mutex::Mutex()>:
 8005568:	b538      	push	{r3, r4, r5, lr}
 800556a:	f100 0508 	add.w	r5, r0, #8
 800556e:	4604      	mov	r4, r0
 8005570:	2210      	movs	r2, #16
 8005572:	2100      	movs	r1, #0
 8005574:	4628      	mov	r0, r5
 8005576:	f000 fd00 	bl	8005f7a <memset>
 800557a:	4620      	mov	r0, r4
 800557c:	f840 5f04 	str.w	r5, [r0, #4]!
 8005580:	f7fd f872 	bl	8002668 <osMutexCreate>
 8005584:	6020      	str	r0, [r4, #0]
 8005586:	b910      	cbnz	r0, 800558e <rtos::Mutex::Mutex()+0x26>
 8005588:	4802      	ldr	r0, [pc, #8]	; (8005594 <rtos::Mutex::Mutex()+0x2c>)
 800558a:	f7fc faaf 	bl	8001aec <error>
 800558e:	4620      	mov	r0, r4
 8005590:	bd38      	pop	{r3, r4, r5, pc}
 8005592:	bf00      	nop
 8005594:	0800714b 	.word	0x0800714b

08005598 <rtos::Mutex::lock(unsigned long)>:
 8005598:	6800      	ldr	r0, [r0, #0]
 800559a:	f7fd b883 	b.w	80026a4 <osMutexWait>

0800559e <rtos::Mutex::unlock()>:
 800559e:	6800      	ldr	r0, [r0, #0]
 80055a0:	f7fd b8a8 	b.w	80026f4 <osMutexRelease>

080055a4 <rtos::Mutex::~Mutex()>:
 80055a4:	b510      	push	{r4, lr}
 80055a6:	4604      	mov	r4, r0
 80055a8:	6800      	ldr	r0, [r0, #0]
 80055aa:	f7fd f8e9 	bl	8002780 <osMutexDelete>
 80055ae:	4620      	mov	r0, r4
 80055b0:	bd10      	pop	{r4, pc}
	...

080055b4 <rt_set_PSP>:
 80055b4:	f380 8809 	msr	PSP, r0
 80055b8:	4770      	bx	lr

080055ba <rt_get_PSP>:
 80055ba:	f3ef 8009 	mrs	r0, PSP
 80055be:	4770      	bx	lr

080055c0 <os_set_env>:
 80055c0:	4668      	mov	r0, sp
 80055c2:	f380 8809 	msr	PSP, r0
 80055c6:	485a      	ldr	r0, [pc, #360]	; (8005730 <OS_Tick_Handler+0x10>)
 80055c8:	7800      	ldrb	r0, [r0, #0]
 80055ca:	07c0      	lsls	r0, r0, #31
 80055cc:	bf14      	ite	ne
 80055ce:	2002      	movne	r0, #2
 80055d0:	2003      	moveq	r0, #3
 80055d2:	f380 8814 	msr	CONTROL, r0
 80055d6:	4770      	bx	lr

080055d8 <_alloc_box>:
 80055d8:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005734 <OS_Tick_Handler+0x14>
 80055dc:	f3ef 8305 	mrs	r3, IPSR
 80055e0:	061b      	lsls	r3, r3, #24
 80055e2:	bf18      	it	ne
 80055e4:	4760      	bxne	r12
 80055e6:	f3ef 8314 	mrs	r3, CONTROL
 80055ea:	07db      	lsls	r3, r3, #31
 80055ec:	bf08      	it	eq
 80055ee:	4760      	bxeq	r12
 80055f0:	df00      	svc	0
 80055f2:	4770      	bx	lr

080055f4 <_free_box>:
 80055f4:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005738 <OS_Tick_Handler+0x18>
 80055f8:	f3ef 8305 	mrs	r3, IPSR
 80055fc:	061b      	lsls	r3, r3, #24
 80055fe:	bf18      	it	ne
 8005600:	4760      	bxne	r12
 8005602:	f3ef 8314 	mrs	r3, CONTROL
 8005606:	07db      	lsls	r3, r3, #31
 8005608:	bf08      	it	eq
 800560a:	4760      	bxeq	r12
 800560c:	df00      	svc	0
 800560e:	4770      	bx	lr

08005610 <SVC_Handler>:
 8005610:	f3ef 8009 	mrs	r0, PSP
 8005614:	6981      	ldr	r1, [r0, #24]
 8005616:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800561a:	bbe1      	cbnz	r1, 8005696 <SVC_User>
 800561c:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005620:	b510      	push	{r4, lr}
 8005622:	47e0      	blx	r12
 8005624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005628:	f3ef 8c09 	mrs	r12, PSP
 800562c:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005630:	4b42      	ldr	r3, [pc, #264]	; (800573c <OS_Tick_Handler+0x1c>)
 8005632:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005636:	4291      	cmp	r1, r2
 8005638:	bf08      	it	eq
 800563a:	4770      	bxeq	lr
 800563c:	b941      	cbnz	r1, 8005650 <SVC_ContextSave>
 800563e:	f01e 0f10 	tst.w	lr, #16
 8005642:	d116      	bne.n	8005672 <SVC_ContextRestore>
 8005644:	493e      	ldr	r1, [pc, #248]	; (8005740 <OS_Tick_Handler+0x20>)
 8005646:	6808      	ldr	r0, [r1, #0]
 8005648:	f020 0001 	bic.w	r0, r0, #1
 800564c:	6008      	str	r0, [r1, #0]
 800564e:	e010      	b.n	8005672 <SVC_ContextRestore>

08005650 <SVC_ContextSave>:
 8005650:	f01e 0f10 	tst.w	lr, #16
 8005654:	bf06      	itte	eq
 8005656:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800565a:	2001      	moveq	r0, #1
 800565c:	2000      	movne	r0, #0
 800565e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005662:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005666:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800566a:	b40c      	push	{r2, r3}
 800566c:	f7fc fca0 	bl	8001fb0 <rt_stk_check>
 8005670:	bc0c      	pop	{r2, r3}

08005672 <SVC_ContextRestore>:
 8005672:	601a      	str	r2, [r3, #0]
 8005674:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005678:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800567c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005680:	2800      	cmp	r0, #0
 8005682:	bf0e      	itee	eq
 8005684:	f06f 0e02 	mvneq.w	lr, #2
 8005688:	f06f 0e12 	mvnne.w	lr, #18
 800568c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005690:	f38c 8809 	msr	PSP, r12

08005694 <SVC_Exit>:
 8005694:	4770      	bx	lr

08005696 <SVC_User>:
 8005696:	b510      	push	{r4, lr}
 8005698:	4a2a      	ldr	r2, [pc, #168]	; (8005744 <OS_Tick_Handler+0x24>)
 800569a:	6812      	ldr	r2, [r2, #0]
 800569c:	4291      	cmp	r1, r2
 800569e:	d809      	bhi.n	80056b4 <SVC_Done>
 80056a0:	4c29      	ldr	r4, [pc, #164]	; (8005748 <OS_Tick_Handler+0x28>)
 80056a2:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 80056a6:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80056aa:	47a0      	blx	r4
 80056ac:	f3ef 8c09 	mrs	r12, PSP
 80056b0:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

080056b4 <SVC_Done>:
 80056b4:	bd10      	pop	{r4, pc}

080056b6 <PendSV_Handler>:
 80056b6:	b510      	push	{r4, lr}
 80056b8:	f7fc fc06 	bl	8001ec8 <rt_pop_req>

080056bc <Sys_Switch>:
 80056bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80056c0:	4b1e      	ldr	r3, [pc, #120]	; (800573c <OS_Tick_Handler+0x1c>)
 80056c2:	e893 0006 	ldmia.w	r3, {r1, r2}
 80056c6:	4291      	cmp	r1, r2
 80056c8:	bf08      	it	eq
 80056ca:	4770      	bxeq	lr
 80056cc:	f3ef 8c09 	mrs	r12, PSP
 80056d0:	f01e 0f10 	tst.w	lr, #16
 80056d4:	bf06      	itte	eq
 80056d6:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80056da:	2001      	moveq	r0, #1
 80056dc:	2000      	movne	r0, #0
 80056de:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80056e2:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80056e6:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80056ea:	b40c      	push	{r2, r3}
 80056ec:	f7fc fc60 	bl	8001fb0 <rt_stk_check>
 80056f0:	bc0c      	pop	{r2, r3}
 80056f2:	601a      	str	r2, [r3, #0]
 80056f4:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80056f8:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80056fc:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005700:	2800      	cmp	r0, #0
 8005702:	bf0e      	itee	eq
 8005704:	f06f 0e02 	mvneq.w	lr, #2
 8005708:	f06f 0e12 	mvnne.w	lr, #18
 800570c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005710:	f38c 8809 	msr	PSP, r12

08005714 <Sys_Exit>:
 8005714:	4770      	bx	lr

08005716 <SysTick_Handler>:
 8005716:	b510      	push	{r4, lr}
 8005718:	f7fc fc2c 	bl	8001f74 <rt_systick>
 800571c:	f7ff bfce 	b.w	80056bc <Sys_Switch>

08005720 <OS_Tick_Handler>:
 8005720:	b510      	push	{r4, lr}
 8005722:	f7fc fc25 	bl	8001f70 <os_tick_irqack>
 8005726:	f7fc fc25 	bl	8001f74 <rt_systick>
 800572a:	f7ff bfc7 	b.w	80056bc <Sys_Switch>
 800572e:	0000      	.short	0x0000
 8005730:	08006e62 	.word	0x08006e62
 8005734:	0800201f 	.word	0x0800201f
 8005738:	08002039 	.word	0x08002039
 800573c:	20001e6c 	.word	0x20001e6c
 8005740:	e000ef34 	.word	0xe000ef34
 8005744:	00000000 	.word	0x00000000
 8005748:	fffffffc 	.word	0xfffffffc

0800574c <Reset_Handler>:
 800574c:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005770 <LoopForever+0x2>
 8005750:	2100      	movs	r1, #0
 8005752:	e003      	b.n	800575c <LoopCopyDataInit>

08005754 <CopyDataInit>:
 8005754:	4b07      	ldr	r3, [pc, #28]	; (8005774 <LoopForever+0x6>)
 8005756:	585b      	ldr	r3, [r3, r1]
 8005758:	5043      	str	r3, [r0, r1]
 800575a:	3104      	adds	r1, #4

0800575c <LoopCopyDataInit>:
 800575c:	4806      	ldr	r0, [pc, #24]	; (8005778 <LoopForever+0xa>)
 800575e:	4b07      	ldr	r3, [pc, #28]	; (800577c <LoopForever+0xe>)
 8005760:	1842      	adds	r2, r0, r1
 8005762:	429a      	cmp	r2, r3
 8005764:	d3f6      	bcc.n	8005754 <CopyDataInit>
 8005766:	f7fe fbed 	bl	8003f44 <SystemInit>
 800576a:	f7fb fd8b 	bl	8001284 <_start>

0800576e <LoopForever>:
 800576e:	e7fe      	b.n	800576e <LoopForever>
 8005770:	20003000 	.word	0x20003000
 8005774:	08007214 	.word	0x08007214
 8005778:	20000188 	.word	0x20000188
 800577c:	20000224 	.word	0x20000224

08005780 <ADC1_2_IRQHandler>:
 8005780:	e7fe      	b.n	8005780 <ADC1_2_IRQHandler>
	...

08005784 <__aeabi_drsub>:
 8005784:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8005788:	e002      	b.n	8005790 <__adddf3>
 800578a:	bf00      	nop

0800578c <__aeabi_dsub>:
 800578c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08005790 <__adddf3>:
 8005790:	b530      	push	{r4, r5, lr}
 8005792:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8005796:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800579a:	ea94 0f05 	teq	r4, r5
 800579e:	bf08      	it	eq
 80057a0:	ea90 0f02 	teqeq	r0, r2
 80057a4:	bf1f      	itttt	ne
 80057a6:	ea54 0c00 	orrsne.w	r12, r4, r0
 80057aa:	ea55 0c02 	orrsne.w	r12, r5, r2
 80057ae:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 80057b2:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 80057b6:	f000 80e2 	beq.w	800597e <__adddf3+0x1ee>
 80057ba:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80057be:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80057c2:	bfb8      	it	lt
 80057c4:	426d      	neglt	r5, r5
 80057c6:	dd0c      	ble.n	80057e2 <__adddf3+0x52>
 80057c8:	442c      	add	r4, r5
 80057ca:	ea80 0202 	eor.w	r2, r0, r2
 80057ce:	ea81 0303 	eor.w	r3, r1, r3
 80057d2:	ea82 0000 	eor.w	r0, r2, r0
 80057d6:	ea83 0101 	eor.w	r1, r3, r1
 80057da:	ea80 0202 	eor.w	r2, r0, r2
 80057de:	ea81 0303 	eor.w	r3, r1, r3
 80057e2:	2d36      	cmp	r5, #54	; 0x36
 80057e4:	bf88      	it	hi
 80057e6:	bd30      	pophi	{r4, r5, pc}
 80057e8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80057ec:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80057f0:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 80057f4:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 80057f8:	d002      	beq.n	8005800 <__adddf3+0x70>
 80057fa:	4240      	negs	r0, r0
 80057fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005800:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8005804:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8005808:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 800580c:	d002      	beq.n	8005814 <__adddf3+0x84>
 800580e:	4252      	negs	r2, r2
 8005810:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8005814:	ea94 0f05 	teq	r4, r5
 8005818:	f000 80a7 	beq.w	800596a <__adddf3+0x1da>
 800581c:	f1a4 0401 	sub.w	r4, r4, #1
 8005820:	f1d5 0e20 	rsbs	lr, r5, #32
 8005824:	db0d      	blt.n	8005842 <__adddf3+0xb2>
 8005826:	fa02 fc0e 	lsl.w	r12, r2, lr
 800582a:	fa22 f205 	lsr.w	r2, r2, r5
 800582e:	1880      	adds	r0, r0, r2
 8005830:	f141 0100 	adc.w	r1, r1, #0
 8005834:	fa03 f20e 	lsl.w	r2, r3, lr
 8005838:	1880      	adds	r0, r0, r2
 800583a:	fa43 f305 	asr.w	r3, r3, r5
 800583e:	4159      	adcs	r1, r3
 8005840:	e00e      	b.n	8005860 <__adddf3+0xd0>
 8005842:	f1a5 0520 	sub.w	r5, r5, #32
 8005846:	f10e 0e20 	add.w	lr, lr, #32
 800584a:	2a01      	cmp	r2, #1
 800584c:	fa03 fc0e 	lsl.w	r12, r3, lr
 8005850:	bf28      	it	cs
 8005852:	f04c 0c02 	orrcs.w	r12, r12, #2
 8005856:	fa43 f305 	asr.w	r3, r3, r5
 800585a:	18c0      	adds	r0, r0, r3
 800585c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8005860:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005864:	d507      	bpl.n	8005876 <__adddf3+0xe6>
 8005866:	f04f 0e00 	mov.w	lr, #0
 800586a:	f1dc 0c00 	rsbs	r12, r12, #0
 800586e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8005872:	eb6e 0101 	sbc.w	r1, lr, r1
 8005876:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800587a:	d31b      	bcc.n	80058b4 <__adddf3+0x124>
 800587c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8005880:	d30c      	bcc.n	800589c <__adddf3+0x10c>
 8005882:	0849      	lsrs	r1, r1, #1
 8005884:	ea5f 0030 	movs.w	r0, r0, rrx
 8005888:	ea4f 0c3c 	mov.w	r12, r12, rrx
 800588c:	f104 0401 	add.w	r4, r4, #1
 8005890:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8005894:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8005898:	f080 809a 	bcs.w	80059d0 <__adddf3+0x240>
 800589c:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 80058a0:	bf08      	it	eq
 80058a2:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 80058a6:	f150 0000 	adcs.w	r0, r0, #0
 80058aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80058ae:	ea41 0105 	orr.w	r1, r1, r5
 80058b2:	bd30      	pop	{r4, r5, pc}
 80058b4:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 80058b8:	4140      	adcs	r0, r0
 80058ba:	eb41 0101 	adc.w	r1, r1, r1
 80058be:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80058c2:	f1a4 0401 	sub.w	r4, r4, #1
 80058c6:	d1e9      	bne.n	800589c <__adddf3+0x10c>
 80058c8:	f091 0f00 	teq	r1, #0
 80058cc:	bf04      	itt	eq
 80058ce:	4601      	moveq	r1, r0
 80058d0:	2000      	moveq	r0, #0
 80058d2:	fab1 f381 	clz	r3, r1
 80058d6:	bf08      	it	eq
 80058d8:	3320      	addeq	r3, #32
 80058da:	f1a3 030b 	sub.w	r3, r3, #11
 80058de:	f1b3 0220 	subs.w	r2, r3, #32
 80058e2:	da0c      	bge.n	80058fe <__adddf3+0x16e>
 80058e4:	320c      	adds	r2, #12
 80058e6:	dd08      	ble.n	80058fa <__adddf3+0x16a>
 80058e8:	f102 0c14 	add.w	r12, r2, #20
 80058ec:	f1c2 020c 	rsb	r2, r2, #12
 80058f0:	fa01 f00c 	lsl.w	r0, r1, r12
 80058f4:	fa21 f102 	lsr.w	r1, r1, r2
 80058f8:	e00c      	b.n	8005914 <__adddf3+0x184>
 80058fa:	f102 0214 	add.w	r2, r2, #20
 80058fe:	bfd8      	it	le
 8005900:	f1c2 0c20 	rsble	r12, r2, #32
 8005904:	fa01 f102 	lsl.w	r1, r1, r2
 8005908:	fa20 fc0c 	lsr.w	r12, r0, r12
 800590c:	bfdc      	itt	le
 800590e:	ea41 010c 	orrle.w	r1, r1, r12
 8005912:	4090      	lslle	r0, r2
 8005914:	1ae4      	subs	r4, r4, r3
 8005916:	bfa2      	ittt	ge
 8005918:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800591c:	4329      	orrge	r1, r5
 800591e:	bd30      	popge	{r4, r5, pc}
 8005920:	ea6f 0404 	mvn.w	r4, r4
 8005924:	3c1f      	subs	r4, #31
 8005926:	da1c      	bge.n	8005962 <__adddf3+0x1d2>
 8005928:	340c      	adds	r4, #12
 800592a:	dc0e      	bgt.n	800594a <__adddf3+0x1ba>
 800592c:	f104 0414 	add.w	r4, r4, #20
 8005930:	f1c4 0220 	rsb	r2, r4, #32
 8005934:	fa20 f004 	lsr.w	r0, r0, r4
 8005938:	fa01 f302 	lsl.w	r3, r1, r2
 800593c:	ea40 0003 	orr.w	r0, r0, r3
 8005940:	fa21 f304 	lsr.w	r3, r1, r4
 8005944:	ea45 0103 	orr.w	r1, r5, r3
 8005948:	bd30      	pop	{r4, r5, pc}
 800594a:	f1c4 040c 	rsb	r4, r4, #12
 800594e:	f1c4 0220 	rsb	r2, r4, #32
 8005952:	fa20 f002 	lsr.w	r0, r0, r2
 8005956:	fa01 f304 	lsl.w	r3, r1, r4
 800595a:	ea40 0003 	orr.w	r0, r0, r3
 800595e:	4629      	mov	r1, r5
 8005960:	bd30      	pop	{r4, r5, pc}
 8005962:	fa21 f004 	lsr.w	r0, r1, r4
 8005966:	4629      	mov	r1, r5
 8005968:	bd30      	pop	{r4, r5, pc}
 800596a:	f094 0f00 	teq	r4, #0
 800596e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8005972:	bf06      	itte	eq
 8005974:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8005978:	3401      	addeq	r4, #1
 800597a:	3d01      	subne	r5, #1
 800597c:	e74e      	b.n	800581c <__adddf3+0x8c>
 800597e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005982:	bf18      	it	ne
 8005984:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8005988:	d029      	beq.n	80059de <__adddf3+0x24e>
 800598a:	ea94 0f05 	teq	r4, r5
 800598e:	bf08      	it	eq
 8005990:	ea90 0f02 	teqeq	r0, r2
 8005994:	d005      	beq.n	80059a2 <__adddf3+0x212>
 8005996:	ea54 0c00 	orrs.w	r12, r4, r0
 800599a:	bf04      	itt	eq
 800599c:	4619      	moveq	r1, r3
 800599e:	4610      	moveq	r0, r2
 80059a0:	bd30      	pop	{r4, r5, pc}
 80059a2:	ea91 0f03 	teq	r1, r3
 80059a6:	bf1e      	ittt	ne
 80059a8:	2100      	movne	r1, #0
 80059aa:	2000      	movne	r0, #0
 80059ac:	bd30      	popne	{r4, r5, pc}
 80059ae:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 80059b2:	d105      	bne.n	80059c0 <__adddf3+0x230>
 80059b4:	0040      	lsls	r0, r0, #1
 80059b6:	4149      	adcs	r1, r1
 80059b8:	bf28      	it	cs
 80059ba:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80059be:	bd30      	pop	{r4, r5, pc}
 80059c0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80059c4:	bf3c      	itt	cc
 80059c6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80059ca:	bd30      	popcc	{r4, r5, pc}
 80059cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80059d0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80059d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80059d8:	f04f 0000 	mov.w	r0, #0
 80059dc:	bd30      	pop	{r4, r5, pc}
 80059de:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80059e2:	bf1a      	itte	ne
 80059e4:	4619      	movne	r1, r3
 80059e6:	4610      	movne	r0, r2
 80059e8:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 80059ec:	bf1c      	itt	ne
 80059ee:	460b      	movne	r3, r1
 80059f0:	4602      	movne	r2, r0
 80059f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80059f6:	bf06      	itte	eq
 80059f8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80059fc:	ea91 0f03 	teqeq	r1, r3
 8005a00:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8005a04:	bd30      	pop	{r4, r5, pc}
 8005a06:	bf00      	nop

08005a08 <__aeabi_ui2d>:
 8005a08:	f090 0f00 	teq	r0, #0
 8005a0c:	bf04      	itt	eq
 8005a0e:	2100      	moveq	r1, #0
 8005a10:	4770      	bxeq	lr
 8005a12:	b530      	push	{r4, r5, lr}
 8005a14:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005a18:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005a1c:	f04f 0500 	mov.w	r5, #0
 8005a20:	f04f 0100 	mov.w	r1, #0
 8005a24:	e750      	b.n	80058c8 <__adddf3+0x138>
 8005a26:	bf00      	nop

08005a28 <__aeabi_i2d>:
 8005a28:	f090 0f00 	teq	r0, #0
 8005a2c:	bf04      	itt	eq
 8005a2e:	2100      	moveq	r1, #0
 8005a30:	4770      	bxeq	lr
 8005a32:	b530      	push	{r4, r5, lr}
 8005a34:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005a38:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005a3c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8005a40:	bf48      	it	mi
 8005a42:	4240      	negmi	r0, r0
 8005a44:	f04f 0100 	mov.w	r1, #0
 8005a48:	e73e      	b.n	80058c8 <__adddf3+0x138>
 8005a4a:	bf00      	nop

08005a4c <__aeabi_f2d>:
 8005a4c:	0042      	lsls	r2, r0, #1
 8005a4e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8005a52:	ea4f 0131 	mov.w	r1, r1, rrx
 8005a56:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8005a5a:	bf1f      	itttt	ne
 8005a5c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8005a60:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005a64:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8005a68:	4770      	bxne	lr
 8005a6a:	f092 0f00 	teq	r2, #0
 8005a6e:	bf14      	ite	ne
 8005a70:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005a74:	4770      	bxeq	lr
 8005a76:	b530      	push	{r4, r5, lr}
 8005a78:	f44f 7460 	mov.w	r4, #896	; 0x380
 8005a7c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005a80:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8005a84:	e720      	b.n	80058c8 <__adddf3+0x138>
 8005a86:	bf00      	nop

08005a88 <__aeabi_ul2d>:
 8005a88:	ea50 0201 	orrs.w	r2, r0, r1
 8005a8c:	bf08      	it	eq
 8005a8e:	4770      	bxeq	lr
 8005a90:	b530      	push	{r4, r5, lr}
 8005a92:	f04f 0500 	mov.w	r5, #0
 8005a96:	e00a      	b.n	8005aae <__aeabi_l2d+0x16>

08005a98 <__aeabi_l2d>:
 8005a98:	ea50 0201 	orrs.w	r2, r0, r1
 8005a9c:	bf08      	it	eq
 8005a9e:	4770      	bxeq	lr
 8005aa0:	b530      	push	{r4, r5, lr}
 8005aa2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8005aa6:	d502      	bpl.n	8005aae <__aeabi_l2d+0x16>
 8005aa8:	4240      	negs	r0, r0
 8005aaa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005aae:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005ab2:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005ab6:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 8005aba:	f43f aedc 	beq.w	8005876 <__adddf3+0xe6>
 8005abe:	f04f 0203 	mov.w	r2, #3
 8005ac2:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005ac6:	bf18      	it	ne
 8005ac8:	3203      	addne	r2, #3
 8005aca:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005ace:	bf18      	it	ne
 8005ad0:	3203      	addne	r2, #3
 8005ad2:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8005ad6:	f1c2 0320 	rsb	r3, r2, #32
 8005ada:	fa00 fc03 	lsl.w	r12, r0, r3
 8005ade:	fa20 f002 	lsr.w	r0, r0, r2
 8005ae2:	fa01 fe03 	lsl.w	lr, r1, r3
 8005ae6:	ea40 000e 	orr.w	r0, r0, lr
 8005aea:	fa21 f102 	lsr.w	r1, r1, r2
 8005aee:	4414      	add	r4, r2
 8005af0:	e6c1      	b.n	8005876 <__adddf3+0xe6>
 8005af2:	bf00      	nop

08005af4 <__errno>:
 8005af4:	4b01      	ldr	r3, [pc, #4]	; (8005afc <__errno+0x8>)
 8005af6:	6818      	ldr	r0, [r3, #0]
 8005af8:	4770      	bx	lr
 8005afa:	bf00      	nop
 8005afc:	200001ac 	.word	0x200001ac

08005b00 <__sflush_r>:
 8005b00:	898a      	ldrh	r2, [r1, #12]
 8005b02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005b06:	4605      	mov	r5, r0
 8005b08:	0710      	lsls	r0, r2, #28
 8005b0a:	460c      	mov	r4, r1
 8005b0c:	d45a      	bmi.n	8005bc4 <__sflush_r+0xc4>
 8005b0e:	684b      	ldr	r3, [r1, #4]
 8005b10:	2b00      	cmp	r3, #0
 8005b12:	dc05      	bgt.n	8005b20 <__sflush_r+0x20>
 8005b14:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	dc02      	bgt.n	8005b20 <__sflush_r+0x20>
 8005b1a:	2000      	movs	r0, #0
 8005b1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005b20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005b22:	2e00      	cmp	r6, #0
 8005b24:	d0f9      	beq.n	8005b1a <__sflush_r+0x1a>
 8005b26:	2300      	movs	r3, #0
 8005b28:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005b2c:	682f      	ldr	r7, [r5, #0]
 8005b2e:	602b      	str	r3, [r5, #0]
 8005b30:	d033      	beq.n	8005b9a <__sflush_r+0x9a>
 8005b32:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005b34:	89a3      	ldrh	r3, [r4, #12]
 8005b36:	075a      	lsls	r2, r3, #29
 8005b38:	d505      	bpl.n	8005b46 <__sflush_r+0x46>
 8005b3a:	6863      	ldr	r3, [r4, #4]
 8005b3c:	1ac0      	subs	r0, r0, r3
 8005b3e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005b40:	b10b      	cbz	r3, 8005b46 <__sflush_r+0x46>
 8005b42:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005b44:	1ac0      	subs	r0, r0, r3
 8005b46:	2300      	movs	r3, #0
 8005b48:	4602      	mov	r2, r0
 8005b4a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005b4c:	6a21      	ldr	r1, [r4, #32]
 8005b4e:	4628      	mov	r0, r5
 8005b50:	47b0      	blx	r6
 8005b52:	1c43      	adds	r3, r0, #1
 8005b54:	89a3      	ldrh	r3, [r4, #12]
 8005b56:	d106      	bne.n	8005b66 <__sflush_r+0x66>
 8005b58:	6829      	ldr	r1, [r5, #0]
 8005b5a:	291d      	cmp	r1, #29
 8005b5c:	d84b      	bhi.n	8005bf6 <__sflush_r+0xf6>
 8005b5e:	4a2b      	ldr	r2, [pc, #172]	; (8005c0c <__sflush_r+0x10c>)
 8005b60:	40ca      	lsrs	r2, r1
 8005b62:	07d6      	lsls	r6, r2, #31
 8005b64:	d547      	bpl.n	8005bf6 <__sflush_r+0xf6>
 8005b66:	2200      	movs	r2, #0
 8005b68:	6062      	str	r2, [r4, #4]
 8005b6a:	04d9      	lsls	r1, r3, #19
 8005b6c:	6922      	ldr	r2, [r4, #16]
 8005b6e:	6022      	str	r2, [r4, #0]
 8005b70:	d504      	bpl.n	8005b7c <__sflush_r+0x7c>
 8005b72:	1c42      	adds	r2, r0, #1
 8005b74:	d101      	bne.n	8005b7a <__sflush_r+0x7a>
 8005b76:	682b      	ldr	r3, [r5, #0]
 8005b78:	b903      	cbnz	r3, 8005b7c <__sflush_r+0x7c>
 8005b7a:	6560      	str	r0, [r4, #84]	; 0x54
 8005b7c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005b7e:	602f      	str	r7, [r5, #0]
 8005b80:	2900      	cmp	r1, #0
 8005b82:	d0ca      	beq.n	8005b1a <__sflush_r+0x1a>
 8005b84:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005b88:	4299      	cmp	r1, r3
 8005b8a:	d002      	beq.n	8005b92 <__sflush_r+0x92>
 8005b8c:	4628      	mov	r0, r5
 8005b8e:	f7ff fba5 	bl	80052dc <__wrap__free_r>
 8005b92:	2000      	movs	r0, #0
 8005b94:	6360      	str	r0, [r4, #52]	; 0x34
 8005b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005b9a:	6a21      	ldr	r1, [r4, #32]
 8005b9c:	2301      	movs	r3, #1
 8005b9e:	4628      	mov	r0, r5
 8005ba0:	47b0      	blx	r6
 8005ba2:	1c41      	adds	r1, r0, #1
 8005ba4:	d1c6      	bne.n	8005b34 <__sflush_r+0x34>
 8005ba6:	682b      	ldr	r3, [r5, #0]
 8005ba8:	2b00      	cmp	r3, #0
 8005baa:	d0c3      	beq.n	8005b34 <__sflush_r+0x34>
 8005bac:	2b1d      	cmp	r3, #29
 8005bae:	d001      	beq.n	8005bb4 <__sflush_r+0xb4>
 8005bb0:	2b16      	cmp	r3, #22
 8005bb2:	d101      	bne.n	8005bb8 <__sflush_r+0xb8>
 8005bb4:	602f      	str	r7, [r5, #0]
 8005bb6:	e7b0      	b.n	8005b1a <__sflush_r+0x1a>
 8005bb8:	89a3      	ldrh	r3, [r4, #12]
 8005bba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005bbe:	81a3      	strh	r3, [r4, #12]
 8005bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005bc4:	690f      	ldr	r7, [r1, #16]
 8005bc6:	2f00      	cmp	r7, #0
 8005bc8:	d0a7      	beq.n	8005b1a <__sflush_r+0x1a>
 8005bca:	0793      	lsls	r3, r2, #30
 8005bcc:	680e      	ldr	r6, [r1, #0]
 8005bce:	bf08      	it	eq
 8005bd0:	694b      	ldreq	r3, [r1, #20]
 8005bd2:	600f      	str	r7, [r1, #0]
 8005bd4:	bf18      	it	ne
 8005bd6:	2300      	movne	r3, #0
 8005bd8:	eba6 0807 	sub.w	r8, r6, r7
 8005bdc:	608b      	str	r3, [r1, #8]
 8005bde:	f1b8 0f00 	cmp.w	r8, #0
 8005be2:	dd9a      	ble.n	8005b1a <__sflush_r+0x1a>
 8005be4:	4643      	mov	r3, r8
 8005be6:	463a      	mov	r2, r7
 8005be8:	6a21      	ldr	r1, [r4, #32]
 8005bea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005bec:	4628      	mov	r0, r5
 8005bee:	47b0      	blx	r6
 8005bf0:	2800      	cmp	r0, #0
 8005bf2:	dc07      	bgt.n	8005c04 <__sflush_r+0x104>
 8005bf4:	89a3      	ldrh	r3, [r4, #12]
 8005bf6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005bfa:	81a3      	strh	r3, [r4, #12]
 8005bfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c04:	4407      	add	r7, r0
 8005c06:	eba8 0800 	sub.w	r8, r8, r0
 8005c0a:	e7e8      	b.n	8005bde <__sflush_r+0xde>
 8005c0c:	20400001 	.word	0x20400001

08005c10 <_fflush_r>:
 8005c10:	b538      	push	{r3, r4, r5, lr}
 8005c12:	690b      	ldr	r3, [r1, #16]
 8005c14:	4605      	mov	r5, r0
 8005c16:	460c      	mov	r4, r1
 8005c18:	b1db      	cbz	r3, 8005c52 <_fflush_r+0x42>
 8005c1a:	b118      	cbz	r0, 8005c24 <_fflush_r+0x14>
 8005c1c:	6983      	ldr	r3, [r0, #24]
 8005c1e:	b90b      	cbnz	r3, 8005c24 <_fflush_r+0x14>
 8005c20:	f000 f872 	bl	8005d08 <__sinit>
 8005c24:	4b0c      	ldr	r3, [pc, #48]	; (8005c58 <_fflush_r+0x48>)
 8005c26:	429c      	cmp	r4, r3
 8005c28:	d109      	bne.n	8005c3e <_fflush_r+0x2e>
 8005c2a:	686c      	ldr	r4, [r5, #4]
 8005c2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005c30:	b17b      	cbz	r3, 8005c52 <_fflush_r+0x42>
 8005c32:	4621      	mov	r1, r4
 8005c34:	4628      	mov	r0, r5
 8005c36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005c3a:	f7ff bf61 	b.w	8005b00 <__sflush_r>
 8005c3e:	4b07      	ldr	r3, [pc, #28]	; (8005c5c <_fflush_r+0x4c>)
 8005c40:	429c      	cmp	r4, r3
 8005c42:	d101      	bne.n	8005c48 <_fflush_r+0x38>
 8005c44:	68ac      	ldr	r4, [r5, #8]
 8005c46:	e7f1      	b.n	8005c2c <_fflush_r+0x1c>
 8005c48:	4b05      	ldr	r3, [pc, #20]	; (8005c60 <_fflush_r+0x50>)
 8005c4a:	429c      	cmp	r4, r3
 8005c4c:	bf08      	it	eq
 8005c4e:	68ec      	ldreq	r4, [r5, #12]
 8005c50:	e7ec      	b.n	8005c2c <_fflush_r+0x1c>
 8005c52:	2000      	movs	r0, #0
 8005c54:	bd38      	pop	{r3, r4, r5, pc}
 8005c56:	bf00      	nop
 8005c58:	08007190 	.word	0x08007190
 8005c5c:	080071b0 	.word	0x080071b0
 8005c60:	08007170 	.word	0x08007170

08005c64 <fflush>:
 8005c64:	4601      	mov	r1, r0
 8005c66:	b920      	cbnz	r0, 8005c72 <fflush+0xe>
 8005c68:	4b04      	ldr	r3, [pc, #16]	; (8005c7c <fflush+0x18>)
 8005c6a:	4905      	ldr	r1, [pc, #20]	; (8005c80 <fflush+0x1c>)
 8005c6c:	6818      	ldr	r0, [r3, #0]
 8005c6e:	f000 b8b7 	b.w	8005de0 <_fwalk_reent>
 8005c72:	4b04      	ldr	r3, [pc, #16]	; (8005c84 <fflush+0x20>)
 8005c74:	6818      	ldr	r0, [r3, #0]
 8005c76:	f7ff bfcb 	b.w	8005c10 <_fflush_r>
 8005c7a:	bf00      	nop
 8005c7c:	080071d0 	.word	0x080071d0
 8005c80:	08005c11 	.word	0x08005c11
 8005c84:	200001ac 	.word	0x200001ac

08005c88 <_cleanup_r>:
 8005c88:	4901      	ldr	r1, [pc, #4]	; (8005c90 <_cleanup_r+0x8>)
 8005c8a:	f000 b8a9 	b.w	8005de0 <_fwalk_reent>
 8005c8e:	bf00      	nop
 8005c90:	08005c11 	.word	0x08005c11

08005c94 <std.isra.0>:
 8005c94:	2300      	movs	r3, #0
 8005c96:	b510      	push	{r4, lr}
 8005c98:	4604      	mov	r4, r0
 8005c9a:	6003      	str	r3, [r0, #0]
 8005c9c:	6043      	str	r3, [r0, #4]
 8005c9e:	6083      	str	r3, [r0, #8]
 8005ca0:	8181      	strh	r1, [r0, #12]
 8005ca2:	6643      	str	r3, [r0, #100]	; 0x64
 8005ca4:	81c2      	strh	r2, [r0, #14]
 8005ca6:	6103      	str	r3, [r0, #16]
 8005ca8:	6143      	str	r3, [r0, #20]
 8005caa:	6183      	str	r3, [r0, #24]
 8005cac:	4619      	mov	r1, r3
 8005cae:	2208      	movs	r2, #8
 8005cb0:	305c      	adds	r0, #92	; 0x5c
 8005cb2:	f000 f962 	bl	8005f7a <memset>
 8005cb6:	4b05      	ldr	r3, [pc, #20]	; (8005ccc <std.isra.0+0x38>)
 8005cb8:	6263      	str	r3, [r4, #36]	; 0x24
 8005cba:	4b05      	ldr	r3, [pc, #20]	; (8005cd0 <std.isra.0+0x3c>)
 8005cbc:	62a3      	str	r3, [r4, #40]	; 0x28
 8005cbe:	4b05      	ldr	r3, [pc, #20]	; (8005cd4 <std.isra.0+0x40>)
 8005cc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005cc2:	4b05      	ldr	r3, [pc, #20]	; (8005cd8 <std.isra.0+0x44>)
 8005cc4:	6224      	str	r4, [r4, #32]
 8005cc6:	6323      	str	r3, [r4, #48]	; 0x30
 8005cc8:	bd10      	pop	{r4, pc}
 8005cca:	bf00      	nop
 8005ccc:	0800648d 	.word	0x0800648d
 8005cd0:	080064af 	.word	0x080064af
 8005cd4:	080064e7 	.word	0x080064e7
 8005cd8:	0800650b 	.word	0x0800650b

08005cdc <__sfmoreglue>:
 8005cdc:	b570      	push	{r4, r5, r6, lr}
 8005cde:	1e4a      	subs	r2, r1, #1
 8005ce0:	2568      	movs	r5, #104	; 0x68
 8005ce2:	4355      	muls	r5, r2
 8005ce4:	460e      	mov	r6, r1
 8005ce6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005cea:	f7ff faf3 	bl	80052d4 <__wrap__malloc_r>
 8005cee:	4604      	mov	r4, r0
 8005cf0:	b140      	cbz	r0, 8005d04 <__sfmoreglue+0x28>
 8005cf2:	2100      	movs	r1, #0
 8005cf4:	e880 0042 	stmia.w	r0, {r1, r6}
 8005cf8:	300c      	adds	r0, #12
 8005cfa:	60a0      	str	r0, [r4, #8]
 8005cfc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005d00:	f000 f93b 	bl	8005f7a <memset>
 8005d04:	4620      	mov	r0, r4
 8005d06:	bd70      	pop	{r4, r5, r6, pc}

08005d08 <__sinit>:
 8005d08:	6983      	ldr	r3, [r0, #24]
 8005d0a:	b510      	push	{r4, lr}
 8005d0c:	4604      	mov	r4, r0
 8005d0e:	bb33      	cbnz	r3, 8005d5e <__sinit+0x56>
 8005d10:	6483      	str	r3, [r0, #72]	; 0x48
 8005d12:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005d14:	6503      	str	r3, [r0, #80]	; 0x50
 8005d16:	4b12      	ldr	r3, [pc, #72]	; (8005d60 <__sinit+0x58>)
 8005d18:	4a12      	ldr	r2, [pc, #72]	; (8005d64 <__sinit+0x5c>)
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	6282      	str	r2, [r0, #40]	; 0x28
 8005d1e:	4298      	cmp	r0, r3
 8005d20:	bf04      	itt	eq
 8005d22:	2301      	moveq	r3, #1
 8005d24:	6183      	streq	r3, [r0, #24]
 8005d26:	f000 f81f 	bl	8005d68 <__sfp>
 8005d2a:	6060      	str	r0, [r4, #4]
 8005d2c:	4620      	mov	r0, r4
 8005d2e:	f000 f81b 	bl	8005d68 <__sfp>
 8005d32:	60a0      	str	r0, [r4, #8]
 8005d34:	4620      	mov	r0, r4
 8005d36:	f000 f817 	bl	8005d68 <__sfp>
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	60e0      	str	r0, [r4, #12]
 8005d3e:	2104      	movs	r1, #4
 8005d40:	6860      	ldr	r0, [r4, #4]
 8005d42:	f7ff ffa7 	bl	8005c94 <std.isra.0>
 8005d46:	2201      	movs	r2, #1
 8005d48:	2109      	movs	r1, #9
 8005d4a:	68a0      	ldr	r0, [r4, #8]
 8005d4c:	f7ff ffa2 	bl	8005c94 <std.isra.0>
 8005d50:	2202      	movs	r2, #2
 8005d52:	2112      	movs	r1, #18
 8005d54:	68e0      	ldr	r0, [r4, #12]
 8005d56:	f7ff ff9d 	bl	8005c94 <std.isra.0>
 8005d5a:	2301      	movs	r3, #1
 8005d5c:	61a3      	str	r3, [r4, #24]
 8005d5e:	bd10      	pop	{r4, pc}
 8005d60:	080071d0 	.word	0x080071d0
 8005d64:	08005c89 	.word	0x08005c89

08005d68 <__sfp>:
 8005d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d6a:	4b1c      	ldr	r3, [pc, #112]	; (8005ddc <__sfp+0x74>)
 8005d6c:	681e      	ldr	r6, [r3, #0]
 8005d6e:	69b3      	ldr	r3, [r6, #24]
 8005d70:	4607      	mov	r7, r0
 8005d72:	b913      	cbnz	r3, 8005d7a <__sfp+0x12>
 8005d74:	4630      	mov	r0, r6
 8005d76:	f7ff ffc7 	bl	8005d08 <__sinit>
 8005d7a:	3648      	adds	r6, #72	; 0x48
 8005d7c:	68b4      	ldr	r4, [r6, #8]
 8005d7e:	6873      	ldr	r3, [r6, #4]
 8005d80:	3b01      	subs	r3, #1
 8005d82:	d503      	bpl.n	8005d8c <__sfp+0x24>
 8005d84:	6833      	ldr	r3, [r6, #0]
 8005d86:	b133      	cbz	r3, 8005d96 <__sfp+0x2e>
 8005d88:	6836      	ldr	r6, [r6, #0]
 8005d8a:	e7f7      	b.n	8005d7c <__sfp+0x14>
 8005d8c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005d90:	b16d      	cbz	r5, 8005dae <__sfp+0x46>
 8005d92:	3468      	adds	r4, #104	; 0x68
 8005d94:	e7f4      	b.n	8005d80 <__sfp+0x18>
 8005d96:	2104      	movs	r1, #4
 8005d98:	4638      	mov	r0, r7
 8005d9a:	f7ff ff9f 	bl	8005cdc <__sfmoreglue>
 8005d9e:	6030      	str	r0, [r6, #0]
 8005da0:	2800      	cmp	r0, #0
 8005da2:	d1f1      	bne.n	8005d88 <__sfp+0x20>
 8005da4:	230c      	movs	r3, #12
 8005da6:	603b      	str	r3, [r7, #0]
 8005da8:	4604      	mov	r4, r0
 8005daa:	4620      	mov	r0, r4
 8005dac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005dae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005db2:	81e3      	strh	r3, [r4, #14]
 8005db4:	2301      	movs	r3, #1
 8005db6:	81a3      	strh	r3, [r4, #12]
 8005db8:	6665      	str	r5, [r4, #100]	; 0x64
 8005dba:	6025      	str	r5, [r4, #0]
 8005dbc:	60a5      	str	r5, [r4, #8]
 8005dbe:	6065      	str	r5, [r4, #4]
 8005dc0:	6125      	str	r5, [r4, #16]
 8005dc2:	6165      	str	r5, [r4, #20]
 8005dc4:	61a5      	str	r5, [r4, #24]
 8005dc6:	2208      	movs	r2, #8
 8005dc8:	4629      	mov	r1, r5
 8005dca:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005dce:	f000 f8d4 	bl	8005f7a <memset>
 8005dd2:	6365      	str	r5, [r4, #52]	; 0x34
 8005dd4:	63a5      	str	r5, [r4, #56]	; 0x38
 8005dd6:	64a5      	str	r5, [r4, #72]	; 0x48
 8005dd8:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005dda:	e7e6      	b.n	8005daa <__sfp+0x42>
 8005ddc:	080071d0 	.word	0x080071d0

08005de0 <_fwalk_reent>:
 8005de0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005de4:	4680      	mov	r8, r0
 8005de6:	4689      	mov	r9, r1
 8005de8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005dec:	2600      	movs	r6, #0
 8005dee:	b914      	cbnz	r4, 8005df6 <_fwalk_reent+0x16>
 8005df0:	4630      	mov	r0, r6
 8005df2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005df6:	68a5      	ldr	r5, [r4, #8]
 8005df8:	6867      	ldr	r7, [r4, #4]
 8005dfa:	3f01      	subs	r7, #1
 8005dfc:	d501      	bpl.n	8005e02 <_fwalk_reent+0x22>
 8005dfe:	6824      	ldr	r4, [r4, #0]
 8005e00:	e7f5      	b.n	8005dee <_fwalk_reent+0xe>
 8005e02:	89ab      	ldrh	r3, [r5, #12]
 8005e04:	2b01      	cmp	r3, #1
 8005e06:	d907      	bls.n	8005e18 <_fwalk_reent+0x38>
 8005e08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005e0c:	3301      	adds	r3, #1
 8005e0e:	d003      	beq.n	8005e18 <_fwalk_reent+0x38>
 8005e10:	4629      	mov	r1, r5
 8005e12:	4640      	mov	r0, r8
 8005e14:	47c8      	blx	r9
 8005e16:	4306      	orrs	r6, r0
 8005e18:	3568      	adds	r5, #104	; 0x68
 8005e1a:	e7ee      	b.n	8005dfa <_fwalk_reent+0x1a>

08005e1c <__libc_init_array>:
 8005e1c:	b570      	push	{r4, r5, r6, lr}
 8005e1e:	4e0d      	ldr	r6, [pc, #52]	; (8005e54 <__libc_init_array+0x38>)
 8005e20:	4c0d      	ldr	r4, [pc, #52]	; (8005e58 <__libc_init_array+0x3c>)
 8005e22:	1ba4      	subs	r4, r4, r6
 8005e24:	10a4      	asrs	r4, r4, #2
 8005e26:	2500      	movs	r5, #0
 8005e28:	42a5      	cmp	r5, r4
 8005e2a:	d109      	bne.n	8005e40 <__libc_init_array+0x24>
 8005e2c:	4e0b      	ldr	r6, [pc, #44]	; (8005e5c <__libc_init_array+0x40>)
 8005e2e:	4c0c      	ldr	r4, [pc, #48]	; (8005e60 <__libc_init_array+0x44>)
 8005e30:	f000 fd8e 	bl	8006950 <_init>
 8005e34:	1ba4      	subs	r4, r4, r6
 8005e36:	10a4      	asrs	r4, r4, #2
 8005e38:	2500      	movs	r5, #0
 8005e3a:	42a5      	cmp	r5, r4
 8005e3c:	d105      	bne.n	8005e4a <__libc_init_array+0x2e>
 8005e3e:	bd70      	pop	{r4, r5, r6, pc}
 8005e40:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005e44:	4798      	blx	r3
 8005e46:	3501      	adds	r5, #1
 8005e48:	e7ee      	b.n	8005e28 <__libc_init_array+0xc>
 8005e4a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005e4e:	4798      	blx	r3
 8005e50:	3501      	adds	r5, #1
 8005e52:	e7f2      	b.n	8005e3a <__libc_init_array+0x1e>
 8005e54:	20000210 	.word	0x20000210
 8005e58:	20000210 	.word	0x20000210
 8005e5c:	20000210 	.word	0x20000210
 8005e60:	2000021c 	.word	0x2000021c

08005e64 <malloc>:
 8005e64:	4b02      	ldr	r3, [pc, #8]	; (8005e70 <malloc+0xc>)
 8005e66:	4601      	mov	r1, r0
 8005e68:	6818      	ldr	r0, [r3, #0]
 8005e6a:	f7ff ba33 	b.w	80052d4 <__wrap__malloc_r>
 8005e6e:	bf00      	nop
 8005e70:	200001ac 	.word	0x200001ac

08005e74 <free>:
 8005e74:	4b02      	ldr	r3, [pc, #8]	; (8005e80 <free+0xc>)
 8005e76:	4601      	mov	r1, r0
 8005e78:	6818      	ldr	r0, [r3, #0]
 8005e7a:	f7ff ba2f 	b.w	80052dc <__wrap__free_r>
 8005e7e:	bf00      	nop
 8005e80:	200001ac 	.word	0x200001ac
	...

08005e90 <memchr>:
 8005e90:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005e94:	2a10      	cmp	r2, #16
 8005e96:	db2b      	blt.n	8005ef0 <memchr+0x60>
 8005e98:	f010 0f07 	tst.w	r0, #7
 8005e9c:	d008      	beq.n	8005eb0 <memchr+0x20>
 8005e9e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005ea2:	3a01      	subs	r2, #1
 8005ea4:	428b      	cmp	r3, r1
 8005ea6:	d02d      	beq.n	8005f04 <memchr+0x74>
 8005ea8:	f010 0f07 	tst.w	r0, #7
 8005eac:	b342      	cbz	r2, 8005f00 <memchr+0x70>
 8005eae:	d1f6      	bne.n	8005e9e <memchr+0xe>
 8005eb0:	b4f0      	push	{r4, r5, r6, r7}
 8005eb2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005eb6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8005eba:	f022 0407 	bic.w	r4, r2, #7
 8005ebe:	f07f 0700 	mvns.w	r7, #0
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005ec8:	3c08      	subs	r4, #8
 8005eca:	ea85 0501 	eor.w	r5, r5, r1
 8005ece:	ea86 0601 	eor.w	r6, r6, r1
 8005ed2:	fa85 f547 	uadd8	r5, r5, r7
 8005ed6:	faa3 f587 	sel	r5, r3, r7
 8005eda:	fa86 f647 	uadd8	r6, r6, r7
 8005ede:	faa5 f687 	sel	r6, r5, r7
 8005ee2:	b98e      	cbnz	r6, 8005f08 <memchr+0x78>
 8005ee4:	d1ee      	bne.n	8005ec4 <memchr+0x34>
 8005ee6:	bcf0      	pop	{r4, r5, r6, r7}
 8005ee8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005eec:	f002 0207 	and.w	r2, r2, #7
 8005ef0:	b132      	cbz	r2, 8005f00 <memchr+0x70>
 8005ef2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005ef6:	3a01      	subs	r2, #1
 8005ef8:	ea83 0301 	eor.w	r3, r3, r1
 8005efc:	b113      	cbz	r3, 8005f04 <memchr+0x74>
 8005efe:	d1f8      	bne.n	8005ef2 <memchr+0x62>
 8005f00:	2000      	movs	r0, #0
 8005f02:	4770      	bx	lr
 8005f04:	3801      	subs	r0, #1
 8005f06:	4770      	bx	lr
 8005f08:	2d00      	cmp	r5, #0
 8005f0a:	bf06      	itte	eq
 8005f0c:	4635      	moveq	r5, r6
 8005f0e:	3803      	subeq	r0, #3
 8005f10:	3807      	subne	r0, #7
 8005f12:	f015 0f01 	tst.w	r5, #1
 8005f16:	d107      	bne.n	8005f28 <memchr+0x98>
 8005f18:	3001      	adds	r0, #1
 8005f1a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8005f1e:	bf02      	ittt	eq
 8005f20:	3001      	addeq	r0, #1
 8005f22:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005f26:	3001      	addeq	r0, #1
 8005f28:	bcf0      	pop	{r4, r5, r6, r7}
 8005f2a:	3801      	subs	r0, #1
 8005f2c:	4770      	bx	lr
 8005f2e:	bf00      	nop

08005f30 <memcpy>:
 8005f30:	b510      	push	{r4, lr}
 8005f32:	1e43      	subs	r3, r0, #1
 8005f34:	440a      	add	r2, r1
 8005f36:	4291      	cmp	r1, r2
 8005f38:	d100      	bne.n	8005f3c <memcpy+0xc>
 8005f3a:	bd10      	pop	{r4, pc}
 8005f3c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005f40:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005f44:	e7f7      	b.n	8005f36 <memcpy+0x6>

08005f46 <memmove>:
 8005f46:	4288      	cmp	r0, r1
 8005f48:	b510      	push	{r4, lr}
 8005f4a:	eb01 0302 	add.w	r3, r1, r2
 8005f4e:	d803      	bhi.n	8005f58 <memmove+0x12>
 8005f50:	1e42      	subs	r2, r0, #1
 8005f52:	4299      	cmp	r1, r3
 8005f54:	d10c      	bne.n	8005f70 <memmove+0x2a>
 8005f56:	bd10      	pop	{r4, pc}
 8005f58:	4298      	cmp	r0, r3
 8005f5a:	d2f9      	bcs.n	8005f50 <memmove+0xa>
 8005f5c:	1881      	adds	r1, r0, r2
 8005f5e:	1ad2      	subs	r2, r2, r3
 8005f60:	42d3      	cmn	r3, r2
 8005f62:	d100      	bne.n	8005f66 <memmove+0x20>
 8005f64:	bd10      	pop	{r4, pc}
 8005f66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005f6a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005f6e:	e7f7      	b.n	8005f60 <memmove+0x1a>
 8005f70:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005f74:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005f78:	e7eb      	b.n	8005f52 <memmove+0xc>

08005f7a <memset>:
 8005f7a:	4402      	add	r2, r0
 8005f7c:	4603      	mov	r3, r0
 8005f7e:	4293      	cmp	r3, r2
 8005f80:	d100      	bne.n	8005f84 <memset+0xa>
 8005f82:	4770      	bx	lr
 8005f84:	f803 1b01 	strb.w	r1, [r3], #1
 8005f88:	e7f9      	b.n	8005f7e <memset+0x4>
	...

08005f8c <_free_r>:
 8005f8c:	b538      	push	{r3, r4, r5, lr}
 8005f8e:	4605      	mov	r5, r0
 8005f90:	2900      	cmp	r1, #0
 8005f92:	d045      	beq.n	8006020 <_free_r+0x94>
 8005f94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005f98:	1f0c      	subs	r4, r1, #4
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	bfb8      	it	lt
 8005f9e:	18e4      	addlt	r4, r4, r3
 8005fa0:	f7ff fabd 	bl	800551e <__malloc_lock>
 8005fa4:	4a1f      	ldr	r2, [pc, #124]	; (8006024 <_free_r+0x98>)
 8005fa6:	6813      	ldr	r3, [r2, #0]
 8005fa8:	4610      	mov	r0, r2
 8005faa:	b933      	cbnz	r3, 8005fba <_free_r+0x2e>
 8005fac:	6063      	str	r3, [r4, #4]
 8005fae:	6014      	str	r4, [r2, #0]
 8005fb0:	4628      	mov	r0, r5
 8005fb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005fb6:	f7ff bab6 	b.w	8005526 <__malloc_unlock>
 8005fba:	42a3      	cmp	r3, r4
 8005fbc:	d90c      	bls.n	8005fd8 <_free_r+0x4c>
 8005fbe:	6821      	ldr	r1, [r4, #0]
 8005fc0:	1862      	adds	r2, r4, r1
 8005fc2:	4293      	cmp	r3, r2
 8005fc4:	bf04      	itt	eq
 8005fc6:	681a      	ldreq	r2, [r3, #0]
 8005fc8:	685b      	ldreq	r3, [r3, #4]
 8005fca:	6063      	str	r3, [r4, #4]
 8005fcc:	bf04      	itt	eq
 8005fce:	1852      	addeq	r2, r2, r1
 8005fd0:	6022      	streq	r2, [r4, #0]
 8005fd2:	6004      	str	r4, [r0, #0]
 8005fd4:	e7ec      	b.n	8005fb0 <_free_r+0x24>
 8005fd6:	4613      	mov	r3, r2
 8005fd8:	685a      	ldr	r2, [r3, #4]
 8005fda:	b10a      	cbz	r2, 8005fe0 <_free_r+0x54>
 8005fdc:	42a2      	cmp	r2, r4
 8005fde:	d9fa      	bls.n	8005fd6 <_free_r+0x4a>
 8005fe0:	6819      	ldr	r1, [r3, #0]
 8005fe2:	1858      	adds	r0, r3, r1
 8005fe4:	42a0      	cmp	r0, r4
 8005fe6:	d10b      	bne.n	8006000 <_free_r+0x74>
 8005fe8:	6820      	ldr	r0, [r4, #0]
 8005fea:	4401      	add	r1, r0
 8005fec:	1858      	adds	r0, r3, r1
 8005fee:	4282      	cmp	r2, r0
 8005ff0:	6019      	str	r1, [r3, #0]
 8005ff2:	d1dd      	bne.n	8005fb0 <_free_r+0x24>
 8005ff4:	6810      	ldr	r0, [r2, #0]
 8005ff6:	6852      	ldr	r2, [r2, #4]
 8005ff8:	605a      	str	r2, [r3, #4]
 8005ffa:	4401      	add	r1, r0
 8005ffc:	6019      	str	r1, [r3, #0]
 8005ffe:	e7d7      	b.n	8005fb0 <_free_r+0x24>
 8006000:	d902      	bls.n	8006008 <_free_r+0x7c>
 8006002:	230c      	movs	r3, #12
 8006004:	602b      	str	r3, [r5, #0]
 8006006:	e7d3      	b.n	8005fb0 <_free_r+0x24>
 8006008:	6820      	ldr	r0, [r4, #0]
 800600a:	1821      	adds	r1, r4, r0
 800600c:	428a      	cmp	r2, r1
 800600e:	bf04      	itt	eq
 8006010:	6811      	ldreq	r1, [r2, #0]
 8006012:	6852      	ldreq	r2, [r2, #4]
 8006014:	6062      	str	r2, [r4, #4]
 8006016:	bf04      	itt	eq
 8006018:	1809      	addeq	r1, r1, r0
 800601a:	6021      	streq	r1, [r4, #0]
 800601c:	605c      	str	r4, [r3, #4]
 800601e:	e7c7      	b.n	8005fb0 <_free_r+0x24>
 8006020:	bd38      	pop	{r3, r4, r5, pc}
 8006022:	bf00      	nop
 8006024:	20001670 	.word	0x20001670

08006028 <_malloc_r>:
 8006028:	b570      	push	{r4, r5, r6, lr}
 800602a:	1ccd      	adds	r5, r1, #3
 800602c:	f025 0503 	bic.w	r5, r5, #3
 8006030:	3508      	adds	r5, #8
 8006032:	2d0c      	cmp	r5, #12
 8006034:	bf38      	it	cc
 8006036:	250c      	movcc	r5, #12
 8006038:	2d00      	cmp	r5, #0
 800603a:	4606      	mov	r6, r0
 800603c:	db01      	blt.n	8006042 <_malloc_r+0x1a>
 800603e:	42a9      	cmp	r1, r5
 8006040:	d903      	bls.n	800604a <_malloc_r+0x22>
 8006042:	230c      	movs	r3, #12
 8006044:	6033      	str	r3, [r6, #0]
 8006046:	2000      	movs	r0, #0
 8006048:	bd70      	pop	{r4, r5, r6, pc}
 800604a:	f7ff fa68 	bl	800551e <__malloc_lock>
 800604e:	4a23      	ldr	r2, [pc, #140]	; (80060dc <_malloc_r+0xb4>)
 8006050:	6814      	ldr	r4, [r2, #0]
 8006052:	4621      	mov	r1, r4
 8006054:	b991      	cbnz	r1, 800607c <_malloc_r+0x54>
 8006056:	4c22      	ldr	r4, [pc, #136]	; (80060e0 <_malloc_r+0xb8>)
 8006058:	6823      	ldr	r3, [r4, #0]
 800605a:	b91b      	cbnz	r3, 8006064 <_malloc_r+0x3c>
 800605c:	4630      	mov	r0, r6
 800605e:	f000 fa05 	bl	800646c <_sbrk_r>
 8006062:	6020      	str	r0, [r4, #0]
 8006064:	4629      	mov	r1, r5
 8006066:	4630      	mov	r0, r6
 8006068:	f000 fa00 	bl	800646c <_sbrk_r>
 800606c:	1c43      	adds	r3, r0, #1
 800606e:	d126      	bne.n	80060be <_malloc_r+0x96>
 8006070:	230c      	movs	r3, #12
 8006072:	6033      	str	r3, [r6, #0]
 8006074:	4630      	mov	r0, r6
 8006076:	f7ff fa56 	bl	8005526 <__malloc_unlock>
 800607a:	e7e4      	b.n	8006046 <_malloc_r+0x1e>
 800607c:	680b      	ldr	r3, [r1, #0]
 800607e:	1b5b      	subs	r3, r3, r5
 8006080:	d41a      	bmi.n	80060b8 <_malloc_r+0x90>
 8006082:	2b0b      	cmp	r3, #11
 8006084:	d90f      	bls.n	80060a6 <_malloc_r+0x7e>
 8006086:	600b      	str	r3, [r1, #0]
 8006088:	50cd      	str	r5, [r1, r3]
 800608a:	18cc      	adds	r4, r1, r3
 800608c:	4630      	mov	r0, r6
 800608e:	f7ff fa4a 	bl	8005526 <__malloc_unlock>
 8006092:	f104 000b 	add.w	r0, r4, #11
 8006096:	1d23      	adds	r3, r4, #4
 8006098:	f020 0007 	bic.w	r0, r0, #7
 800609c:	1ac3      	subs	r3, r0, r3
 800609e:	d01b      	beq.n	80060d8 <_malloc_r+0xb0>
 80060a0:	425a      	negs	r2, r3
 80060a2:	50e2      	str	r2, [r4, r3]
 80060a4:	bd70      	pop	{r4, r5, r6, pc}
 80060a6:	428c      	cmp	r4, r1
 80060a8:	bf0d      	iteet	eq
 80060aa:	6863      	ldreq	r3, [r4, #4]
 80060ac:	684b      	ldrne	r3, [r1, #4]
 80060ae:	6063      	strne	r3, [r4, #4]
 80060b0:	6013      	streq	r3, [r2, #0]
 80060b2:	bf18      	it	ne
 80060b4:	460c      	movne	r4, r1
 80060b6:	e7e9      	b.n	800608c <_malloc_r+0x64>
 80060b8:	460c      	mov	r4, r1
 80060ba:	6849      	ldr	r1, [r1, #4]
 80060bc:	e7ca      	b.n	8006054 <_malloc_r+0x2c>
 80060be:	1cc4      	adds	r4, r0, #3
 80060c0:	f024 0403 	bic.w	r4, r4, #3
 80060c4:	42a0      	cmp	r0, r4
 80060c6:	d005      	beq.n	80060d4 <_malloc_r+0xac>
 80060c8:	1a21      	subs	r1, r4, r0
 80060ca:	4630      	mov	r0, r6
 80060cc:	f000 f9ce 	bl	800646c <_sbrk_r>
 80060d0:	3001      	adds	r0, #1
 80060d2:	d0cd      	beq.n	8006070 <_malloc_r+0x48>
 80060d4:	6025      	str	r5, [r4, #0]
 80060d6:	e7d9      	b.n	800608c <_malloc_r+0x64>
 80060d8:	bd70      	pop	{r4, r5, r6, pc}
 80060da:	bf00      	nop
 80060dc:	20001670 	.word	0x20001670
 80060e0:	20001674 	.word	0x20001674

080060e4 <_realloc_r>:
 80060e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060e6:	4607      	mov	r7, r0
 80060e8:	4614      	mov	r4, r2
 80060ea:	460e      	mov	r6, r1
 80060ec:	b921      	cbnz	r1, 80060f8 <_realloc_r+0x14>
 80060ee:	4611      	mov	r1, r2
 80060f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80060f4:	f7ff b8ee 	b.w	80052d4 <__wrap__malloc_r>
 80060f8:	b922      	cbnz	r2, 8006104 <_realloc_r+0x20>
 80060fa:	f7ff f8ef 	bl	80052dc <__wrap__free_r>
 80060fe:	4625      	mov	r5, r4
 8006100:	4628      	mov	r0, r5
 8006102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006104:	f000 fa64 	bl	80065d0 <_malloc_usable_size_r>
 8006108:	4284      	cmp	r4, r0
 800610a:	d90f      	bls.n	800612c <_realloc_r+0x48>
 800610c:	4621      	mov	r1, r4
 800610e:	4638      	mov	r0, r7
 8006110:	f7ff f8e0 	bl	80052d4 <__wrap__malloc_r>
 8006114:	4605      	mov	r5, r0
 8006116:	2800      	cmp	r0, #0
 8006118:	d0f2      	beq.n	8006100 <_realloc_r+0x1c>
 800611a:	4631      	mov	r1, r6
 800611c:	4622      	mov	r2, r4
 800611e:	f7ff ff07 	bl	8005f30 <memcpy>
 8006122:	4631      	mov	r1, r6
 8006124:	4638      	mov	r0, r7
 8006126:	f7ff f8d9 	bl	80052dc <__wrap__free_r>
 800612a:	e7e9      	b.n	8006100 <_realloc_r+0x1c>
 800612c:	4635      	mov	r5, r6
 800612e:	e7e7      	b.n	8006100 <_realloc_r+0x1c>

08006130 <_printf_common>:
 8006130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006134:	4691      	mov	r9, r2
 8006136:	461f      	mov	r7, r3
 8006138:	688a      	ldr	r2, [r1, #8]
 800613a:	690b      	ldr	r3, [r1, #16]
 800613c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006140:	4293      	cmp	r3, r2
 8006142:	bfb8      	it	lt
 8006144:	4613      	movlt	r3, r2
 8006146:	f8c9 3000 	str.w	r3, [r9]
 800614a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800614e:	4606      	mov	r6, r0
 8006150:	460c      	mov	r4, r1
 8006152:	b112      	cbz	r2, 800615a <_printf_common+0x2a>
 8006154:	3301      	adds	r3, #1
 8006156:	f8c9 3000 	str.w	r3, [r9]
 800615a:	6823      	ldr	r3, [r4, #0]
 800615c:	0699      	lsls	r1, r3, #26
 800615e:	bf42      	ittt	mi
 8006160:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006164:	3302      	addmi	r3, #2
 8006166:	f8c9 3000 	strmi.w	r3, [r9]
 800616a:	6825      	ldr	r5, [r4, #0]
 800616c:	f015 0506 	ands.w	r5, r5, #6
 8006170:	d107      	bne.n	8006182 <_printf_common+0x52>
 8006172:	f104 0a19 	add.w	r10, r4, #25
 8006176:	68e3      	ldr	r3, [r4, #12]
 8006178:	f8d9 2000 	ldr.w	r2, [r9]
 800617c:	1a9b      	subs	r3, r3, r2
 800617e:	429d      	cmp	r5, r3
 8006180:	db29      	blt.n	80061d6 <_printf_common+0xa6>
 8006182:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006186:	6822      	ldr	r2, [r4, #0]
 8006188:	3300      	adds	r3, #0
 800618a:	bf18      	it	ne
 800618c:	2301      	movne	r3, #1
 800618e:	0692      	lsls	r2, r2, #26
 8006190:	d42e      	bmi.n	80061f0 <_printf_common+0xc0>
 8006192:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006196:	4639      	mov	r1, r7
 8006198:	4630      	mov	r0, r6
 800619a:	47c0      	blx	r8
 800619c:	3001      	adds	r0, #1
 800619e:	d021      	beq.n	80061e4 <_printf_common+0xb4>
 80061a0:	6823      	ldr	r3, [r4, #0]
 80061a2:	68e5      	ldr	r5, [r4, #12]
 80061a4:	f8d9 2000 	ldr.w	r2, [r9]
 80061a8:	f003 0306 	and.w	r3, r3, #6
 80061ac:	2b04      	cmp	r3, #4
 80061ae:	bf08      	it	eq
 80061b0:	1aad      	subeq	r5, r5, r2
 80061b2:	68a3      	ldr	r3, [r4, #8]
 80061b4:	6922      	ldr	r2, [r4, #16]
 80061b6:	bf0c      	ite	eq
 80061b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80061bc:	2500      	movne	r5, #0
 80061be:	4293      	cmp	r3, r2
 80061c0:	bfc4      	itt	gt
 80061c2:	1a9b      	subgt	r3, r3, r2
 80061c4:	18ed      	addgt	r5, r5, r3
 80061c6:	f04f 0900 	mov.w	r9, #0
 80061ca:	341a      	adds	r4, #26
 80061cc:	454d      	cmp	r5, r9
 80061ce:	d11b      	bne.n	8006208 <_printf_common+0xd8>
 80061d0:	2000      	movs	r0, #0
 80061d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80061d6:	2301      	movs	r3, #1
 80061d8:	4652      	mov	r2, r10
 80061da:	4639      	mov	r1, r7
 80061dc:	4630      	mov	r0, r6
 80061de:	47c0      	blx	r8
 80061e0:	3001      	adds	r0, #1
 80061e2:	d103      	bne.n	80061ec <_printf_common+0xbc>
 80061e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80061ec:	3501      	adds	r5, #1
 80061ee:	e7c2      	b.n	8006176 <_printf_common+0x46>
 80061f0:	18e1      	adds	r1, r4, r3
 80061f2:	1c5a      	adds	r2, r3, #1
 80061f4:	2030      	movs	r0, #48	; 0x30
 80061f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80061fa:	4422      	add	r2, r4
 80061fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006200:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006204:	3302      	adds	r3, #2
 8006206:	e7c4      	b.n	8006192 <_printf_common+0x62>
 8006208:	2301      	movs	r3, #1
 800620a:	4622      	mov	r2, r4
 800620c:	4639      	mov	r1, r7
 800620e:	4630      	mov	r0, r6
 8006210:	47c0      	blx	r8
 8006212:	3001      	adds	r0, #1
 8006214:	d0e6      	beq.n	80061e4 <_printf_common+0xb4>
 8006216:	f109 0901 	add.w	r9, r9, #1
 800621a:	e7d7      	b.n	80061cc <_printf_common+0x9c>

0800621c <_printf_i>:
 800621c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006220:	4617      	mov	r7, r2
 8006222:	7e0a      	ldrb	r2, [r1, #24]
 8006224:	b085      	sub	sp, #20
 8006226:	2a6e      	cmp	r2, #110	; 0x6e
 8006228:	4698      	mov	r8, r3
 800622a:	4606      	mov	r6, r0
 800622c:	460c      	mov	r4, r1
 800622e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006230:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8006234:	f000 80bc 	beq.w	80063b0 <_printf_i+0x194>
 8006238:	d81a      	bhi.n	8006270 <_printf_i+0x54>
 800623a:	2a63      	cmp	r2, #99	; 0x63
 800623c:	d02e      	beq.n	800629c <_printf_i+0x80>
 800623e:	d80a      	bhi.n	8006256 <_printf_i+0x3a>
 8006240:	2a00      	cmp	r2, #0
 8006242:	f000 80c8 	beq.w	80063d6 <_printf_i+0x1ba>
 8006246:	2a58      	cmp	r2, #88	; 0x58
 8006248:	f000 808a 	beq.w	8006360 <_printf_i+0x144>
 800624c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006250:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8006254:	e02a      	b.n	80062ac <_printf_i+0x90>
 8006256:	2a64      	cmp	r2, #100	; 0x64
 8006258:	d001      	beq.n	800625e <_printf_i+0x42>
 800625a:	2a69      	cmp	r2, #105	; 0x69
 800625c:	d1f6      	bne.n	800624c <_printf_i+0x30>
 800625e:	6821      	ldr	r1, [r4, #0]
 8006260:	681a      	ldr	r2, [r3, #0]
 8006262:	f011 0f80 	tst.w	r1, #128	; 0x80
 8006266:	d023      	beq.n	80062b0 <_printf_i+0x94>
 8006268:	1d11      	adds	r1, r2, #4
 800626a:	6019      	str	r1, [r3, #0]
 800626c:	6813      	ldr	r3, [r2, #0]
 800626e:	e027      	b.n	80062c0 <_printf_i+0xa4>
 8006270:	2a73      	cmp	r2, #115	; 0x73
 8006272:	f000 80b4 	beq.w	80063de <_printf_i+0x1c2>
 8006276:	d808      	bhi.n	800628a <_printf_i+0x6e>
 8006278:	2a6f      	cmp	r2, #111	; 0x6f
 800627a:	d02a      	beq.n	80062d2 <_printf_i+0xb6>
 800627c:	2a70      	cmp	r2, #112	; 0x70
 800627e:	d1e5      	bne.n	800624c <_printf_i+0x30>
 8006280:	680a      	ldr	r2, [r1, #0]
 8006282:	f042 0220 	orr.w	r2, r2, #32
 8006286:	600a      	str	r2, [r1, #0]
 8006288:	e003      	b.n	8006292 <_printf_i+0x76>
 800628a:	2a75      	cmp	r2, #117	; 0x75
 800628c:	d021      	beq.n	80062d2 <_printf_i+0xb6>
 800628e:	2a78      	cmp	r2, #120	; 0x78
 8006290:	d1dc      	bne.n	800624c <_printf_i+0x30>
 8006292:	2278      	movs	r2, #120	; 0x78
 8006294:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006298:	496e      	ldr	r1, [pc, #440]	; (8006454 <_printf_i+0x238>)
 800629a:	e064      	b.n	8006366 <_printf_i+0x14a>
 800629c:	681a      	ldr	r2, [r3, #0]
 800629e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80062a2:	1d11      	adds	r1, r2, #4
 80062a4:	6019      	str	r1, [r3, #0]
 80062a6:	6813      	ldr	r3, [r2, #0]
 80062a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80062ac:	2301      	movs	r3, #1
 80062ae:	e0a3      	b.n	80063f8 <_printf_i+0x1dc>
 80062b0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80062b4:	f102 0104 	add.w	r1, r2, #4
 80062b8:	6019      	str	r1, [r3, #0]
 80062ba:	d0d7      	beq.n	800626c <_printf_i+0x50>
 80062bc:	f9b2 3000 	ldrsh.w	r3, [r2]
 80062c0:	2b00      	cmp	r3, #0
 80062c2:	da03      	bge.n	80062cc <_printf_i+0xb0>
 80062c4:	222d      	movs	r2, #45	; 0x2d
 80062c6:	425b      	negs	r3, r3
 80062c8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80062cc:	4962      	ldr	r1, [pc, #392]	; (8006458 <_printf_i+0x23c>)
 80062ce:	220a      	movs	r2, #10
 80062d0:	e017      	b.n	8006302 <_printf_i+0xe6>
 80062d2:	6820      	ldr	r0, [r4, #0]
 80062d4:	6819      	ldr	r1, [r3, #0]
 80062d6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80062da:	d003      	beq.n	80062e4 <_printf_i+0xc8>
 80062dc:	1d08      	adds	r0, r1, #4
 80062de:	6018      	str	r0, [r3, #0]
 80062e0:	680b      	ldr	r3, [r1, #0]
 80062e2:	e006      	b.n	80062f2 <_printf_i+0xd6>
 80062e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80062e8:	f101 0004 	add.w	r0, r1, #4
 80062ec:	6018      	str	r0, [r3, #0]
 80062ee:	d0f7      	beq.n	80062e0 <_printf_i+0xc4>
 80062f0:	880b      	ldrh	r3, [r1, #0]
 80062f2:	4959      	ldr	r1, [pc, #356]	; (8006458 <_printf_i+0x23c>)
 80062f4:	2a6f      	cmp	r2, #111	; 0x6f
 80062f6:	bf14      	ite	ne
 80062f8:	220a      	movne	r2, #10
 80062fa:	2208      	moveq	r2, #8
 80062fc:	2000      	movs	r0, #0
 80062fe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006302:	6865      	ldr	r5, [r4, #4]
 8006304:	60a5      	str	r5, [r4, #8]
 8006306:	2d00      	cmp	r5, #0
 8006308:	f2c0 809c 	blt.w	8006444 <_printf_i+0x228>
 800630c:	6820      	ldr	r0, [r4, #0]
 800630e:	f020 0004 	bic.w	r0, r0, #4
 8006312:	6020      	str	r0, [r4, #0]
 8006314:	2b00      	cmp	r3, #0
 8006316:	d13f      	bne.n	8006398 <_printf_i+0x17c>
 8006318:	2d00      	cmp	r5, #0
 800631a:	f040 8095 	bne.w	8006448 <_printf_i+0x22c>
 800631e:	4675      	mov	r5, lr
 8006320:	2a08      	cmp	r2, #8
 8006322:	d10b      	bne.n	800633c <_printf_i+0x120>
 8006324:	6823      	ldr	r3, [r4, #0]
 8006326:	07da      	lsls	r2, r3, #31
 8006328:	d508      	bpl.n	800633c <_printf_i+0x120>
 800632a:	6923      	ldr	r3, [r4, #16]
 800632c:	6862      	ldr	r2, [r4, #4]
 800632e:	429a      	cmp	r2, r3
 8006330:	bfde      	ittt	le
 8006332:	2330      	movle	r3, #48	; 0x30
 8006334:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006338:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800633c:	ebae 0305 	sub.w	r3, lr, r5
 8006340:	6123      	str	r3, [r4, #16]
 8006342:	f8cd 8000 	str.w	r8, [sp]
 8006346:	463b      	mov	r3, r7
 8006348:	aa03      	add	r2, sp, #12
 800634a:	4621      	mov	r1, r4
 800634c:	4630      	mov	r0, r6
 800634e:	f7ff feef 	bl	8006130 <_printf_common>
 8006352:	3001      	adds	r0, #1
 8006354:	d155      	bne.n	8006402 <_printf_i+0x1e6>
 8006356:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800635a:	b005      	add	sp, #20
 800635c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006360:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8006364:	493c      	ldr	r1, [pc, #240]	; (8006458 <_printf_i+0x23c>)
 8006366:	6822      	ldr	r2, [r4, #0]
 8006368:	6818      	ldr	r0, [r3, #0]
 800636a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800636e:	f100 0504 	add.w	r5, r0, #4
 8006372:	601d      	str	r5, [r3, #0]
 8006374:	d001      	beq.n	800637a <_printf_i+0x15e>
 8006376:	6803      	ldr	r3, [r0, #0]
 8006378:	e002      	b.n	8006380 <_printf_i+0x164>
 800637a:	0655      	lsls	r5, r2, #25
 800637c:	d5fb      	bpl.n	8006376 <_printf_i+0x15a>
 800637e:	8803      	ldrh	r3, [r0, #0]
 8006380:	07d0      	lsls	r0, r2, #31
 8006382:	bf44      	itt	mi
 8006384:	f042 0220 	orrmi.w	r2, r2, #32
 8006388:	6022      	strmi	r2, [r4, #0]
 800638a:	b91b      	cbnz	r3, 8006394 <_printf_i+0x178>
 800638c:	6822      	ldr	r2, [r4, #0]
 800638e:	f022 0220 	bic.w	r2, r2, #32
 8006392:	6022      	str	r2, [r4, #0]
 8006394:	2210      	movs	r2, #16
 8006396:	e7b1      	b.n	80062fc <_printf_i+0xe0>
 8006398:	4675      	mov	r5, lr
 800639a:	fbb3 f0f2 	udiv	r0, r3, r2
 800639e:	fb02 3310 	mls	r3, r2, r0, r3
 80063a2:	5ccb      	ldrb	r3, [r1, r3]
 80063a4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80063a8:	4603      	mov	r3, r0
 80063aa:	2800      	cmp	r0, #0
 80063ac:	d1f5      	bne.n	800639a <_printf_i+0x17e>
 80063ae:	e7b7      	b.n	8006320 <_printf_i+0x104>
 80063b0:	6808      	ldr	r0, [r1, #0]
 80063b2:	681a      	ldr	r2, [r3, #0]
 80063b4:	6949      	ldr	r1, [r1, #20]
 80063b6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80063ba:	d004      	beq.n	80063c6 <_printf_i+0x1aa>
 80063bc:	1d10      	adds	r0, r2, #4
 80063be:	6018      	str	r0, [r3, #0]
 80063c0:	6813      	ldr	r3, [r2, #0]
 80063c2:	6019      	str	r1, [r3, #0]
 80063c4:	e007      	b.n	80063d6 <_printf_i+0x1ba>
 80063c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80063ca:	f102 0004 	add.w	r0, r2, #4
 80063ce:	6018      	str	r0, [r3, #0]
 80063d0:	6813      	ldr	r3, [r2, #0]
 80063d2:	d0f6      	beq.n	80063c2 <_printf_i+0x1a6>
 80063d4:	8019      	strh	r1, [r3, #0]
 80063d6:	2300      	movs	r3, #0
 80063d8:	6123      	str	r3, [r4, #16]
 80063da:	4675      	mov	r5, lr
 80063dc:	e7b1      	b.n	8006342 <_printf_i+0x126>
 80063de:	681a      	ldr	r2, [r3, #0]
 80063e0:	1d11      	adds	r1, r2, #4
 80063e2:	6019      	str	r1, [r3, #0]
 80063e4:	6815      	ldr	r5, [r2, #0]
 80063e6:	6862      	ldr	r2, [r4, #4]
 80063e8:	2100      	movs	r1, #0
 80063ea:	4628      	mov	r0, r5
 80063ec:	f7ff fd50 	bl	8005e90 <memchr>
 80063f0:	b108      	cbz	r0, 80063f6 <_printf_i+0x1da>
 80063f2:	1b40      	subs	r0, r0, r5
 80063f4:	6060      	str	r0, [r4, #4]
 80063f6:	6863      	ldr	r3, [r4, #4]
 80063f8:	6123      	str	r3, [r4, #16]
 80063fa:	2300      	movs	r3, #0
 80063fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006400:	e79f      	b.n	8006342 <_printf_i+0x126>
 8006402:	6923      	ldr	r3, [r4, #16]
 8006404:	462a      	mov	r2, r5
 8006406:	4639      	mov	r1, r7
 8006408:	4630      	mov	r0, r6
 800640a:	47c0      	blx	r8
 800640c:	3001      	adds	r0, #1
 800640e:	d0a2      	beq.n	8006356 <_printf_i+0x13a>
 8006410:	6823      	ldr	r3, [r4, #0]
 8006412:	079b      	lsls	r3, r3, #30
 8006414:	d507      	bpl.n	8006426 <_printf_i+0x20a>
 8006416:	2500      	movs	r5, #0
 8006418:	f104 0919 	add.w	r9, r4, #25
 800641c:	68e3      	ldr	r3, [r4, #12]
 800641e:	9a03      	ldr	r2, [sp, #12]
 8006420:	1a9b      	subs	r3, r3, r2
 8006422:	429d      	cmp	r5, r3
 8006424:	db05      	blt.n	8006432 <_printf_i+0x216>
 8006426:	68e0      	ldr	r0, [r4, #12]
 8006428:	9b03      	ldr	r3, [sp, #12]
 800642a:	4298      	cmp	r0, r3
 800642c:	bfb8      	it	lt
 800642e:	4618      	movlt	r0, r3
 8006430:	e793      	b.n	800635a <_printf_i+0x13e>
 8006432:	2301      	movs	r3, #1
 8006434:	464a      	mov	r2, r9
 8006436:	4639      	mov	r1, r7
 8006438:	4630      	mov	r0, r6
 800643a:	47c0      	blx	r8
 800643c:	3001      	adds	r0, #1
 800643e:	d08a      	beq.n	8006356 <_printf_i+0x13a>
 8006440:	3501      	adds	r5, #1
 8006442:	e7eb      	b.n	800641c <_printf_i+0x200>
 8006444:	2b00      	cmp	r3, #0
 8006446:	d1a7      	bne.n	8006398 <_printf_i+0x17c>
 8006448:	780b      	ldrb	r3, [r1, #0]
 800644a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800644e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006452:	e765      	b.n	8006320 <_printf_i+0x104>
 8006454:	080071e5 	.word	0x080071e5
 8006458:	080071d4 	.word	0x080071d4

0800645c <realloc>:
 800645c:	4b02      	ldr	r3, [pc, #8]	; (8006468 <realloc+0xc>)
 800645e:	460a      	mov	r2, r1
 8006460:	4601      	mov	r1, r0
 8006462:	6818      	ldr	r0, [r3, #0]
 8006464:	f7fe bf38 	b.w	80052d8 <__wrap__realloc_r>
 8006468:	200001ac 	.word	0x200001ac

0800646c <_sbrk_r>:
 800646c:	b538      	push	{r3, r4, r5, lr}
 800646e:	4c06      	ldr	r4, [pc, #24]	; (8006488 <_sbrk_r+0x1c>)
 8006470:	2300      	movs	r3, #0
 8006472:	4605      	mov	r5, r0
 8006474:	4608      	mov	r0, r1
 8006476:	6023      	str	r3, [r4, #0]
 8006478:	f7ff f818 	bl	80054ac <_sbrk>
 800647c:	1c43      	adds	r3, r0, #1
 800647e:	d102      	bne.n	8006486 <_sbrk_r+0x1a>
 8006480:	6823      	ldr	r3, [r4, #0]
 8006482:	b103      	cbz	r3, 8006486 <_sbrk_r+0x1a>
 8006484:	602b      	str	r3, [r5, #0]
 8006486:	bd38      	pop	{r3, r4, r5, pc}
 8006488:	20001f20 	.word	0x20001f20

0800648c <__sread>:
 800648c:	b510      	push	{r4, lr}
 800648e:	460c      	mov	r4, r1
 8006490:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006494:	f000 f9f4 	bl	8006880 <_read_r>
 8006498:	2800      	cmp	r0, #0
 800649a:	bfab      	itete	ge
 800649c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800649e:	89a3      	ldrhlt	r3, [r4, #12]
 80064a0:	181b      	addge	r3, r3, r0
 80064a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80064a6:	bfac      	ite	ge
 80064a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80064aa:	81a3      	strhlt	r3, [r4, #12]
 80064ac:	bd10      	pop	{r4, pc}

080064ae <__swrite>:
 80064ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064b2:	461f      	mov	r7, r3
 80064b4:	898b      	ldrh	r3, [r1, #12]
 80064b6:	05db      	lsls	r3, r3, #23
 80064b8:	4605      	mov	r5, r0
 80064ba:	460c      	mov	r4, r1
 80064bc:	4616      	mov	r6, r2
 80064be:	d505      	bpl.n	80064cc <__swrite+0x1e>
 80064c0:	2302      	movs	r3, #2
 80064c2:	2200      	movs	r2, #0
 80064c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80064c8:	f000 f870 	bl	80065ac <_lseek_r>
 80064cc:	89a3      	ldrh	r3, [r4, #12]
 80064ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80064d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80064d6:	81a3      	strh	r3, [r4, #12]
 80064d8:	4632      	mov	r2, r6
 80064da:	463b      	mov	r3, r7
 80064dc:	4628      	mov	r0, r5
 80064de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80064e2:	f000 b841 	b.w	8006568 <_write_r>

080064e6 <__sseek>:
 80064e6:	b510      	push	{r4, lr}
 80064e8:	460c      	mov	r4, r1
 80064ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80064ee:	f000 f85d 	bl	80065ac <_lseek_r>
 80064f2:	1c43      	adds	r3, r0, #1
 80064f4:	89a3      	ldrh	r3, [r4, #12]
 80064f6:	bf15      	itete	ne
 80064f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80064fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80064fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006502:	81a3      	strheq	r3, [r4, #12]
 8006504:	bf18      	it	ne
 8006506:	81a3      	strhne	r3, [r4, #12]
 8006508:	bd10      	pop	{r4, pc}

0800650a <__sclose>:
 800650a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800650e:	f000 b83d 	b.w	800658c <_close_r>

08006512 <strlen>:
 8006512:	4603      	mov	r3, r0
 8006514:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006518:	2a00      	cmp	r2, #0
 800651a:	d1fb      	bne.n	8006514 <strlen+0x2>
 800651c:	1a18      	subs	r0, r3, r0
 800651e:	3801      	subs	r0, #1
 8006520:	4770      	bx	lr

08006522 <_vsiprintf_r>:
 8006522:	b510      	push	{r4, lr}
 8006524:	b09a      	sub	sp, #104	; 0x68
 8006526:	f44f 7402 	mov.w	r4, #520	; 0x208
 800652a:	9100      	str	r1, [sp, #0]
 800652c:	9104      	str	r1, [sp, #16]
 800652e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006532:	9102      	str	r1, [sp, #8]
 8006534:	9105      	str	r1, [sp, #20]
 8006536:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800653a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800653e:	4669      	mov	r1, sp
 8006540:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006544:	f000 f8a8 	bl	8006698 <_svfiprintf_r>
 8006548:	9b00      	ldr	r3, [sp, #0]
 800654a:	2200      	movs	r2, #0
 800654c:	701a      	strb	r2, [r3, #0]
 800654e:	b01a      	add	sp, #104	; 0x68
 8006550:	bd10      	pop	{r4, pc}
	...

08006554 <vsiprintf>:
 8006554:	4613      	mov	r3, r2
 8006556:	460a      	mov	r2, r1
 8006558:	4601      	mov	r1, r0
 800655a:	4802      	ldr	r0, [pc, #8]	; (8006564 <vsiprintf+0x10>)
 800655c:	6800      	ldr	r0, [r0, #0]
 800655e:	f7ff bfe0 	b.w	8006522 <_vsiprintf_r>
 8006562:	bf00      	nop
 8006564:	200001ac 	.word	0x200001ac

08006568 <_write_r>:
 8006568:	b538      	push	{r3, r4, r5, lr}
 800656a:	4c07      	ldr	r4, [pc, #28]	; (8006588 <_write_r+0x20>)
 800656c:	4605      	mov	r5, r0
 800656e:	4608      	mov	r0, r1
 8006570:	4611      	mov	r1, r2
 8006572:	2200      	movs	r2, #0
 8006574:	6022      	str	r2, [r4, #0]
 8006576:	461a      	mov	r2, r3
 8006578:	f7fe ff06 	bl	8005388 <_write>
 800657c:	1c43      	adds	r3, r0, #1
 800657e:	d102      	bne.n	8006586 <_write_r+0x1e>
 8006580:	6823      	ldr	r3, [r4, #0]
 8006582:	b103      	cbz	r3, 8006586 <_write_r+0x1e>
 8006584:	602b      	str	r3, [r5, #0]
 8006586:	bd38      	pop	{r3, r4, r5, pc}
 8006588:	20001f20 	.word	0x20001f20

0800658c <_close_r>:
 800658c:	b538      	push	{r3, r4, r5, lr}
 800658e:	4c06      	ldr	r4, [pc, #24]	; (80065a8 <_close_r+0x1c>)
 8006590:	2300      	movs	r3, #0
 8006592:	4605      	mov	r5, r0
 8006594:	4608      	mov	r0, r1
 8006596:	6023      	str	r3, [r4, #0]
 8006598:	f7fe fed6 	bl	8005348 <_close>
 800659c:	1c43      	adds	r3, r0, #1
 800659e:	d102      	bne.n	80065a6 <_close_r+0x1a>
 80065a0:	6823      	ldr	r3, [r4, #0]
 80065a2:	b103      	cbz	r3, 80065a6 <_close_r+0x1a>
 80065a4:	602b      	str	r3, [r5, #0]
 80065a6:	bd38      	pop	{r3, r4, r5, pc}
 80065a8:	20001f20 	.word	0x20001f20

080065ac <_lseek_r>:
 80065ac:	b538      	push	{r3, r4, r5, lr}
 80065ae:	4c07      	ldr	r4, [pc, #28]	; (80065cc <_lseek_r+0x20>)
 80065b0:	4605      	mov	r5, r0
 80065b2:	4608      	mov	r0, r1
 80065b4:	4611      	mov	r1, r2
 80065b6:	2200      	movs	r2, #0
 80065b8:	6022      	str	r2, [r4, #0]
 80065ba:	461a      	mov	r2, r3
 80065bc:	f7fe ff4a 	bl	8005454 <_lseek>
 80065c0:	1c43      	adds	r3, r0, #1
 80065c2:	d102      	bne.n	80065ca <_lseek_r+0x1e>
 80065c4:	6823      	ldr	r3, [r4, #0]
 80065c6:	b103      	cbz	r3, 80065ca <_lseek_r+0x1e>
 80065c8:	602b      	str	r3, [r5, #0]
 80065ca:	bd38      	pop	{r3, r4, r5, pc}
 80065cc:	20001f20 	.word	0x20001f20

080065d0 <_malloc_usable_size_r>:
 80065d0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80065d4:	2800      	cmp	r0, #0
 80065d6:	f1a0 0004 	sub.w	r0, r0, #4
 80065da:	bfbc      	itt	lt
 80065dc:	580b      	ldrlt	r3, [r1, r0]
 80065de:	18c0      	addlt	r0, r0, r3
 80065e0:	4770      	bx	lr

080065e2 <__ssputs_r>:
 80065e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80065e6:	688e      	ldr	r6, [r1, #8]
 80065e8:	429e      	cmp	r6, r3
 80065ea:	4682      	mov	r10, r0
 80065ec:	460c      	mov	r4, r1
 80065ee:	4691      	mov	r9, r2
 80065f0:	4698      	mov	r8, r3
 80065f2:	d835      	bhi.n	8006660 <__ssputs_r+0x7e>
 80065f4:	898a      	ldrh	r2, [r1, #12]
 80065f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80065fa:	d031      	beq.n	8006660 <__ssputs_r+0x7e>
 80065fc:	6825      	ldr	r5, [r4, #0]
 80065fe:	6909      	ldr	r1, [r1, #16]
 8006600:	1a6f      	subs	r7, r5, r1
 8006602:	6965      	ldr	r5, [r4, #20]
 8006604:	2302      	movs	r3, #2
 8006606:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800660a:	fb95 f5f3 	sdiv	r5, r5, r3
 800660e:	f108 0301 	add.w	r3, r8, #1
 8006612:	443b      	add	r3, r7
 8006614:	429d      	cmp	r5, r3
 8006616:	bf38      	it	cc
 8006618:	461d      	movcc	r5, r3
 800661a:	0553      	lsls	r3, r2, #21
 800661c:	d531      	bpl.n	8006682 <__ssputs_r+0xa0>
 800661e:	4629      	mov	r1, r5
 8006620:	f7fe fe58 	bl	80052d4 <__wrap__malloc_r>
 8006624:	4606      	mov	r6, r0
 8006626:	b950      	cbnz	r0, 800663e <__ssputs_r+0x5c>
 8006628:	230c      	movs	r3, #12
 800662a:	f8ca 3000 	str.w	r3, [r10]
 800662e:	89a3      	ldrh	r3, [r4, #12]
 8006630:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006634:	81a3      	strh	r3, [r4, #12]
 8006636:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800663a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800663e:	463a      	mov	r2, r7
 8006640:	6921      	ldr	r1, [r4, #16]
 8006642:	f7ff fc75 	bl	8005f30 <memcpy>
 8006646:	89a3      	ldrh	r3, [r4, #12]
 8006648:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800664c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006650:	81a3      	strh	r3, [r4, #12]
 8006652:	6126      	str	r6, [r4, #16]
 8006654:	6165      	str	r5, [r4, #20]
 8006656:	443e      	add	r6, r7
 8006658:	1bed      	subs	r5, r5, r7
 800665a:	6026      	str	r6, [r4, #0]
 800665c:	60a5      	str	r5, [r4, #8]
 800665e:	4646      	mov	r6, r8
 8006660:	4546      	cmp	r6, r8
 8006662:	bf28      	it	cs
 8006664:	4646      	movcs	r6, r8
 8006666:	4632      	mov	r2, r6
 8006668:	4649      	mov	r1, r9
 800666a:	6820      	ldr	r0, [r4, #0]
 800666c:	f7ff fc6b 	bl	8005f46 <memmove>
 8006670:	68a3      	ldr	r3, [r4, #8]
 8006672:	1b9b      	subs	r3, r3, r6
 8006674:	60a3      	str	r3, [r4, #8]
 8006676:	6823      	ldr	r3, [r4, #0]
 8006678:	441e      	add	r6, r3
 800667a:	6026      	str	r6, [r4, #0]
 800667c:	2000      	movs	r0, #0
 800667e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006682:	462a      	mov	r2, r5
 8006684:	f7fe fe28 	bl	80052d8 <__wrap__realloc_r>
 8006688:	4606      	mov	r6, r0
 800668a:	2800      	cmp	r0, #0
 800668c:	d1e1      	bne.n	8006652 <__ssputs_r+0x70>
 800668e:	6921      	ldr	r1, [r4, #16]
 8006690:	4650      	mov	r0, r10
 8006692:	f7fe fe23 	bl	80052dc <__wrap__free_r>
 8006696:	e7c7      	b.n	8006628 <__ssputs_r+0x46>

08006698 <_svfiprintf_r>:
 8006698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800669c:	b09d      	sub	sp, #116	; 0x74
 800669e:	4680      	mov	r8, r0
 80066a0:	9303      	str	r3, [sp, #12]
 80066a2:	898b      	ldrh	r3, [r1, #12]
 80066a4:	061c      	lsls	r4, r3, #24
 80066a6:	460d      	mov	r5, r1
 80066a8:	4616      	mov	r6, r2
 80066aa:	d50f      	bpl.n	80066cc <_svfiprintf_r+0x34>
 80066ac:	690b      	ldr	r3, [r1, #16]
 80066ae:	b96b      	cbnz	r3, 80066cc <_svfiprintf_r+0x34>
 80066b0:	2140      	movs	r1, #64	; 0x40
 80066b2:	f7fe fe0f 	bl	80052d4 <__wrap__malloc_r>
 80066b6:	6028      	str	r0, [r5, #0]
 80066b8:	6128      	str	r0, [r5, #16]
 80066ba:	b928      	cbnz	r0, 80066c8 <_svfiprintf_r+0x30>
 80066bc:	230c      	movs	r3, #12
 80066be:	f8c8 3000 	str.w	r3, [r8]
 80066c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80066c6:	e0c5      	b.n	8006854 <_svfiprintf_r+0x1bc>
 80066c8:	2340      	movs	r3, #64	; 0x40
 80066ca:	616b      	str	r3, [r5, #20]
 80066cc:	2300      	movs	r3, #0
 80066ce:	9309      	str	r3, [sp, #36]	; 0x24
 80066d0:	2320      	movs	r3, #32
 80066d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80066d6:	2330      	movs	r3, #48	; 0x30
 80066d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80066dc:	f04f 0b01 	mov.w	r11, #1
 80066e0:	4637      	mov	r7, r6
 80066e2:	463c      	mov	r4, r7
 80066e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	d13c      	bne.n	8006766 <_svfiprintf_r+0xce>
 80066ec:	ebb7 0a06 	subs.w	r10, r7, r6
 80066f0:	d00b      	beq.n	800670a <_svfiprintf_r+0x72>
 80066f2:	4653      	mov	r3, r10
 80066f4:	4632      	mov	r2, r6
 80066f6:	4629      	mov	r1, r5
 80066f8:	4640      	mov	r0, r8
 80066fa:	f7ff ff72 	bl	80065e2 <__ssputs_r>
 80066fe:	3001      	adds	r0, #1
 8006700:	f000 80a3 	beq.w	800684a <_svfiprintf_r+0x1b2>
 8006704:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006706:	4453      	add	r3, r10
 8006708:	9309      	str	r3, [sp, #36]	; 0x24
 800670a:	783b      	ldrb	r3, [r7, #0]
 800670c:	2b00      	cmp	r3, #0
 800670e:	f000 809c 	beq.w	800684a <_svfiprintf_r+0x1b2>
 8006712:	2300      	movs	r3, #0
 8006714:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006718:	9304      	str	r3, [sp, #16]
 800671a:	9307      	str	r3, [sp, #28]
 800671c:	9205      	str	r2, [sp, #20]
 800671e:	9306      	str	r3, [sp, #24]
 8006720:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006724:	931a      	str	r3, [sp, #104]	; 0x68
 8006726:	2205      	movs	r2, #5
 8006728:	7821      	ldrb	r1, [r4, #0]
 800672a:	4850      	ldr	r0, [pc, #320]	; (800686c <_svfiprintf_r+0x1d4>)
 800672c:	f7ff fbb0 	bl	8005e90 <memchr>
 8006730:	1c67      	adds	r7, r4, #1
 8006732:	9b04      	ldr	r3, [sp, #16]
 8006734:	b9d8      	cbnz	r0, 800676e <_svfiprintf_r+0xd6>
 8006736:	06d9      	lsls	r1, r3, #27
 8006738:	bf44      	itt	mi
 800673a:	2220      	movmi	r2, #32
 800673c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006740:	071a      	lsls	r2, r3, #28
 8006742:	bf44      	itt	mi
 8006744:	222b      	movmi	r2, #43	; 0x2b
 8006746:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800674a:	7822      	ldrb	r2, [r4, #0]
 800674c:	2a2a      	cmp	r2, #42	; 0x2a
 800674e:	d016      	beq.n	800677e <_svfiprintf_r+0xe6>
 8006750:	9a07      	ldr	r2, [sp, #28]
 8006752:	2100      	movs	r1, #0
 8006754:	200a      	movs	r0, #10
 8006756:	4627      	mov	r7, r4
 8006758:	3401      	adds	r4, #1
 800675a:	783b      	ldrb	r3, [r7, #0]
 800675c:	3b30      	subs	r3, #48	; 0x30
 800675e:	2b09      	cmp	r3, #9
 8006760:	d951      	bls.n	8006806 <_svfiprintf_r+0x16e>
 8006762:	b1c9      	cbz	r1, 8006798 <_svfiprintf_r+0x100>
 8006764:	e011      	b.n	800678a <_svfiprintf_r+0xf2>
 8006766:	2b25      	cmp	r3, #37	; 0x25
 8006768:	d0c0      	beq.n	80066ec <_svfiprintf_r+0x54>
 800676a:	4627      	mov	r7, r4
 800676c:	e7b9      	b.n	80066e2 <_svfiprintf_r+0x4a>
 800676e:	4a3f      	ldr	r2, [pc, #252]	; (800686c <_svfiprintf_r+0x1d4>)
 8006770:	1a80      	subs	r0, r0, r2
 8006772:	fa0b f000 	lsl.w	r0, r11, r0
 8006776:	4318      	orrs	r0, r3
 8006778:	9004      	str	r0, [sp, #16]
 800677a:	463c      	mov	r4, r7
 800677c:	e7d3      	b.n	8006726 <_svfiprintf_r+0x8e>
 800677e:	9a03      	ldr	r2, [sp, #12]
 8006780:	1d11      	adds	r1, r2, #4
 8006782:	6812      	ldr	r2, [r2, #0]
 8006784:	9103      	str	r1, [sp, #12]
 8006786:	2a00      	cmp	r2, #0
 8006788:	db01      	blt.n	800678e <_svfiprintf_r+0xf6>
 800678a:	9207      	str	r2, [sp, #28]
 800678c:	e004      	b.n	8006798 <_svfiprintf_r+0x100>
 800678e:	4252      	negs	r2, r2
 8006790:	f043 0302 	orr.w	r3, r3, #2
 8006794:	9207      	str	r2, [sp, #28]
 8006796:	9304      	str	r3, [sp, #16]
 8006798:	783b      	ldrb	r3, [r7, #0]
 800679a:	2b2e      	cmp	r3, #46	; 0x2e
 800679c:	d10e      	bne.n	80067bc <_svfiprintf_r+0x124>
 800679e:	787b      	ldrb	r3, [r7, #1]
 80067a0:	2b2a      	cmp	r3, #42	; 0x2a
 80067a2:	f107 0101 	add.w	r1, r7, #1
 80067a6:	d132      	bne.n	800680e <_svfiprintf_r+0x176>
 80067a8:	9b03      	ldr	r3, [sp, #12]
 80067aa:	1d1a      	adds	r2, r3, #4
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	9203      	str	r2, [sp, #12]
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	bfb8      	it	lt
 80067b4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80067b8:	3702      	adds	r7, #2
 80067ba:	9305      	str	r3, [sp, #20]
 80067bc:	4c2c      	ldr	r4, [pc, #176]	; (8006870 <_svfiprintf_r+0x1d8>)
 80067be:	7839      	ldrb	r1, [r7, #0]
 80067c0:	2203      	movs	r2, #3
 80067c2:	4620      	mov	r0, r4
 80067c4:	f7ff fb64 	bl	8005e90 <memchr>
 80067c8:	b138      	cbz	r0, 80067da <_svfiprintf_r+0x142>
 80067ca:	2340      	movs	r3, #64	; 0x40
 80067cc:	1b00      	subs	r0, r0, r4
 80067ce:	fa03 f000 	lsl.w	r0, r3, r0
 80067d2:	9b04      	ldr	r3, [sp, #16]
 80067d4:	4303      	orrs	r3, r0
 80067d6:	9304      	str	r3, [sp, #16]
 80067d8:	3701      	adds	r7, #1
 80067da:	7839      	ldrb	r1, [r7, #0]
 80067dc:	4825      	ldr	r0, [pc, #148]	; (8006874 <_svfiprintf_r+0x1dc>)
 80067de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80067e2:	2206      	movs	r2, #6
 80067e4:	1c7e      	adds	r6, r7, #1
 80067e6:	f7ff fb53 	bl	8005e90 <memchr>
 80067ea:	2800      	cmp	r0, #0
 80067ec:	d035      	beq.n	800685a <_svfiprintf_r+0x1c2>
 80067ee:	4b22      	ldr	r3, [pc, #136]	; (8006878 <_svfiprintf_r+0x1e0>)
 80067f0:	b9fb      	cbnz	r3, 8006832 <_svfiprintf_r+0x19a>
 80067f2:	9b03      	ldr	r3, [sp, #12]
 80067f4:	3307      	adds	r3, #7
 80067f6:	f023 0307 	bic.w	r3, r3, #7
 80067fa:	3308      	adds	r3, #8
 80067fc:	9303      	str	r3, [sp, #12]
 80067fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006800:	444b      	add	r3, r9
 8006802:	9309      	str	r3, [sp, #36]	; 0x24
 8006804:	e76c      	b.n	80066e0 <_svfiprintf_r+0x48>
 8006806:	fb00 3202 	mla	r2, r0, r2, r3
 800680a:	2101      	movs	r1, #1
 800680c:	e7a3      	b.n	8006756 <_svfiprintf_r+0xbe>
 800680e:	2300      	movs	r3, #0
 8006810:	9305      	str	r3, [sp, #20]
 8006812:	4618      	mov	r0, r3
 8006814:	240a      	movs	r4, #10
 8006816:	460f      	mov	r7, r1
 8006818:	3101      	adds	r1, #1
 800681a:	783a      	ldrb	r2, [r7, #0]
 800681c:	3a30      	subs	r2, #48	; 0x30
 800681e:	2a09      	cmp	r2, #9
 8006820:	d903      	bls.n	800682a <_svfiprintf_r+0x192>
 8006822:	2b00      	cmp	r3, #0
 8006824:	d0ca      	beq.n	80067bc <_svfiprintf_r+0x124>
 8006826:	9005      	str	r0, [sp, #20]
 8006828:	e7c8      	b.n	80067bc <_svfiprintf_r+0x124>
 800682a:	fb04 2000 	mla	r0, r4, r0, r2
 800682e:	2301      	movs	r3, #1
 8006830:	e7f1      	b.n	8006816 <_svfiprintf_r+0x17e>
 8006832:	ab03      	add	r3, sp, #12
 8006834:	9300      	str	r3, [sp, #0]
 8006836:	462a      	mov	r2, r5
 8006838:	4b10      	ldr	r3, [pc, #64]	; (800687c <_svfiprintf_r+0x1e4>)
 800683a:	a904      	add	r1, sp, #16
 800683c:	4640      	mov	r0, r8
 800683e:	f3af 8000 	nop.w
 8006842:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8006846:	4681      	mov	r9, r0
 8006848:	d1d9      	bne.n	80067fe <_svfiprintf_r+0x166>
 800684a:	89ab      	ldrh	r3, [r5, #12]
 800684c:	065b      	lsls	r3, r3, #25
 800684e:	f53f af38 	bmi.w	80066c2 <_svfiprintf_r+0x2a>
 8006852:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006854:	b01d      	add	sp, #116	; 0x74
 8006856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800685a:	ab03      	add	r3, sp, #12
 800685c:	9300      	str	r3, [sp, #0]
 800685e:	462a      	mov	r2, r5
 8006860:	4b06      	ldr	r3, [pc, #24]	; (800687c <_svfiprintf_r+0x1e4>)
 8006862:	a904      	add	r1, sp, #16
 8006864:	4640      	mov	r0, r8
 8006866:	f7ff fcd9 	bl	800621c <_printf_i>
 800686a:	e7ea      	b.n	8006842 <_svfiprintf_r+0x1aa>
 800686c:	080071f6 	.word	0x080071f6
 8006870:	080071fc 	.word	0x080071fc
 8006874:	08007200 	.word	0x08007200
 8006878:	00000000 	.word	0x00000000
 800687c:	080065e3 	.word	0x080065e3

08006880 <_read_r>:
 8006880:	b538      	push	{r3, r4, r5, lr}
 8006882:	4c07      	ldr	r4, [pc, #28]	; (80068a0 <_read_r+0x20>)
 8006884:	4605      	mov	r5, r0
 8006886:	4608      	mov	r0, r1
 8006888:	4611      	mov	r1, r2
 800688a:	2200      	movs	r2, #0
 800688c:	6022      	str	r2, [r4, #0]
 800688e:	461a      	mov	r2, r3
 8006890:	f7fe fdb0 	bl	80053f4 <_read>
 8006894:	1c43      	adds	r3, r0, #1
 8006896:	d102      	bne.n	800689e <_read_r+0x1e>
 8006898:	6823      	ldr	r3, [r4, #0]
 800689a:	b103      	cbz	r3, 800689e <_read_r+0x1e>
 800689c:	602b      	str	r3, [r5, #0]
 800689e:	bd38      	pop	{r3, r4, r5, pc}
 80068a0:	20001f20 	.word	0x20001f20

080068a4 <fmaxf>:
 80068a4:	b508      	push	{r3, lr}
 80068a6:	ed2d 8b02 	vpush	{d8}
 80068aa:	ee08 0a90 	vmov	s17, r0
 80068ae:	ee08 1a10 	vmov	s16, r1
 80068b2:	f000 f833 	bl	800691c <__fpclassifyf>
 80068b6:	b920      	cbnz	r0, 80068c2 <fmaxf+0x1e>
 80068b8:	ee18 0a10 	vmov	r0, s16
 80068bc:	ecbd 8b02 	vpop	{d8}
 80068c0:	bd08      	pop	{r3, pc}
 80068c2:	ee18 0a10 	vmov	r0, s16
 80068c6:	f000 f829 	bl	800691c <__fpclassifyf>
 80068ca:	b120      	cbz	r0, 80068d6 <fmaxf+0x32>
 80068cc:	eef4 8ac8 	vcmpe.f32	s17, s16
 80068d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80068d4:	ddf0      	ble.n	80068b8 <fmaxf+0x14>
 80068d6:	ee18 0a90 	vmov	r0, s17
 80068da:	ecbd 8b02 	vpop	{d8}
 80068de:	bd08      	pop	{r3, pc}

080068e0 <fminf>:
 80068e0:	b508      	push	{r3, lr}
 80068e2:	ed2d 8b02 	vpush	{d8}
 80068e6:	ee08 0a90 	vmov	s17, r0
 80068ea:	ee08 1a10 	vmov	s16, r1
 80068ee:	f000 f815 	bl	800691c <__fpclassifyf>
 80068f2:	b920      	cbnz	r0, 80068fe <fminf+0x1e>
 80068f4:	ee18 0a10 	vmov	r0, s16
 80068f8:	ecbd 8b02 	vpop	{d8}
 80068fc:	bd08      	pop	{r3, pc}
 80068fe:	ee18 0a10 	vmov	r0, s16
 8006902:	f000 f80b 	bl	800691c <__fpclassifyf>
 8006906:	b120      	cbz	r0, 8006912 <fminf+0x32>
 8006908:	eef4 8ac8 	vcmpe.f32	s17, s16
 800690c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006910:	d5f0      	bpl.n	80068f4 <fminf+0x14>
 8006912:	ee18 0a90 	vmov	r0, s17
 8006916:	ecbd 8b02 	vpop	{d8}
 800691a:	bd08      	pop	{r3, pc}

0800691c <__fpclassifyf>:
 800691c:	f030 4000 	bics.w	r0, r0, #2147483648	; 0x80000000
 8006920:	d101      	bne.n	8006926 <__fpclassifyf+0xa>
 8006922:	2002      	movs	r0, #2
 8006924:	4770      	bx	lr
 8006926:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
 800692a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 800692e:	d201      	bcs.n	8006934 <__fpclassifyf+0x18>
 8006930:	2004      	movs	r0, #4
 8006932:	4770      	bx	lr
 8006934:	4b05      	ldr	r3, [pc, #20]	; (800694c <__fpclassifyf+0x30>)
 8006936:	1e42      	subs	r2, r0, #1
 8006938:	429a      	cmp	r2, r3
 800693a:	d801      	bhi.n	8006940 <__fpclassifyf+0x24>
 800693c:	2003      	movs	r0, #3
 800693e:	4770      	bx	lr
 8006940:	f1a0 40ff 	sub.w	r0, r0, #2139095040	; 0x7f800000
 8006944:	fab0 f080 	clz	r0, r0
 8006948:	0940      	lsrs	r0, r0, #5
 800694a:	4770      	bx	lr
 800694c:	007ffffe 	.word	0x007ffffe

08006950 <_init>:
 8006950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006952:	bf00      	nop
 8006954:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006956:	bc08      	pop	{r3}
 8006958:	469e      	mov	lr, r3
 800695a:	4770      	bx	lr

0800695c <_fini>:
 800695c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800695e:	bf00      	nop
 8006960:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006962:	bc08      	pop	{r3}
 8006964:	469e      	mov	lr, r3
 8006966:	4770      	bx	lr

08006968 <vtable for std_msgs::Time>:
	...
 8006970:	01f5 0800 021d 0800 0259 0800 0261 0800     ........Y...a...

08006980 <vtable for rosserial_msgs::TopicInfo>:
	...
 8006988:	080b 0800 08e5 0800 0269 0800 0271 0800     ........i...q...

08006998 <vtable for rosserial_msgs::Log>:
	...
 80069a0:	07df 0800 08af 0800 0279 0800 0281 0800     ........y.......

080069b0 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80069b8:	06fd 0800 099b 0800 0289 0800 0291 0800     ................

080069c8 <vtable for std_srvs::EmptyRequest>:
	...
 80069d0:	0299 0800 029d 0800 02a1 0800 02a9 0800     ................

080069e0 <vtable for std_srvs::EmptyResponse>:
	...
 80069e8:	02b1 0800 02b5 0800 02b9 0800 02c1 0800     ................

080069f8 <vtable for AKROS_bridge::Initialize_singleRequest>:
	...
 8006a00:	02c9 0800 02cd 0800 02d1 0800 02d9 0800     ................

08006a10 <vtable for AKROS_bridge::Initialize_singleResponse>:
	...
 8006a18:	02e1 0800 0347 0800 0365 0800 036d 0800     ....G...e...m...

08006a28 <vtable for AKROS_bridge::motor_cmd_single>:
	...
 8006a30:	0375 0800 03cd 0800 03f5 0800 03fd 0800     u...............

08006a40 <vtable for AKROS_bridge::motor_reply_single>:
	...
 8006a48:	0405 0800 043d 0800 0459 0800 0461 0800     ....=...Y...a...

08006a58 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8006a60:	0ef5 0800 0fb5 0800 04cd 0800               ............

08006a6c <vtable for ros::Subscriber<AKROS_bridge::motor_cmd_single, void>>:
	...
 8006a74:	04a1 0800 04b9 0800 04bd 0800 04c5 0800     ................

08006a84 <vtable for ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>>:
	...
 8006a8c:	0513 0800 048d 0800 0491 0800 0499 0800     ................

08006a9c <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>>:
	...
 8006aa4:	04f7 0800 0477 0800 047d 0800 0485 0800     ....w...}.......

08006ab4 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006ab4:	0469 0800 046d 0800 0475 0800 6f6d 6f74     i...m...u...moto
 8006ac4:	5f72 6572 6c70 0079 6f6d 6f74 5f72 6d63     r_reply.motor_cm
 8006ad4:	0064 6e65 6574 5f72 6f63 746e 6f72 5f6c     d.enter_control_
 8006ae4:	6f6d 6564 6500 6978 5f74 6f63 746e 6f72     mode.exit_contro
 8006af4:	5f6c 6f6d 6564 7300 7465 705f 736f 7469     l_mode.set_posit
 8006b04:	6f69 5f6e 657a 6f72 6300 3565 3835 3834     ion_zero.ce55848
 8006b14:	3361 3864 6436 3230 3039 3531 3562 3364     a3d86d029015b5d3
 8006b24:	6339 6134 6664 6263 0034 4b41 4f52 5f53     9c4adfcb4.AKROS_
 8006b34:	7262 6469 6567 6d2f 746f 726f 635f 646d     bridge/motor_cmd
 8006b44:	735f 6e69 6c67 0065 3361 3030 3431 6233     _single.a300143b
 8006b54:	6435 3831 3462 3736 6532 6266 3666 3634     5d18b4672efbf646
 8006b64:	6333 3164 3635 3262 4100 524b 534f 625f     3cd156b2.AKROS_b
 8006b74:	6972 6764 2f65 6f6d 6f74 5f72 6572 6c70     ridge/motor_repl
 8006b84:	5f79 6973 676e 656c 3700 3665 3863 3633     y_single.7e6c836
 8006b94:	3630 3536 3566 6133 6535 3236 6265 6466     0665f53a5e62ebfd
 8006ba4:	3439 6465 3766 6137 0033                    94edf77a3.

08006bae <AKROS_bridge::INITIALIZE_SINGLE>:
 8006bae:	4b41 4f52 5f53 7262 6469 6567 492f 696e     AKROS_bridge/Ini
 8006bbe:	6974 6c61 7a69 5f65 6973 676e 656c 3900     tialize_single.9
 8006bce:	3066 3965 6238 6164 3536 3839 3931 3638     f0e98bda65981986
 8006bde:	6464 3566 6133 6166 6137 3034 3465 0039     ddf53afa7a40e49.
 8006bee:	3131 6261 3764 3133 3263 3935 3333 3632     11abd731c2593326
 8006bfe:	6331 3664 3831 6233 3164 6432 3236 3539     1cd6183bd12d6295
 8006c0e:	7200 736f 6573 6972 6c61 6d5f 6773 2f73     .rosserial_msgs/
 8006c1e:	6f4c 0067 6130 3564 6631 3838 6366 3434     Log.0ad51f88fc44
 8006c2e:	3938 6632 6338 3031 3836 3034 3737 3436     892f8c1068407764
 8006c3e:	3036 3530 7200 736f 6573 6972 6c61 6d5f     6005.rosserial_m
 8006c4e:	6773 2f73 6f54 6970 4963 666e 006f          sgs/TopicInfo.

08006c5c <rosserial_msgs::REQUESTPARAM>:
 8006c5c:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8006c6c:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8006c7c:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8006c8c:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8006c9c:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006cac:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8006cbc:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8006ccc:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8006cdc:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 8006cec:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 8006cfc:	3234 6537 7300                                   427e.

08006d01 <std_srvs::EMPTY>:
 8006d01:	7473 5f64 7273 7376 452f 706d 7974 0700          std_srvs/Empty.

08006d10 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006d10:	1307 0800 12f9 0800 1305 0800 682f 6d6f     ............/hom
 8006d20:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8006d30:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8006d40:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8006d50:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8006d60:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 8006d70:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 8006d80:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 8006d90:	6425 2129 0a0d 0000                         %d)!....

08006d98 <vtable for BufferedSerial>:
	...
 8006da0:	4fa5 0800 4fa5 0800 136d 0800 13c5 0800     .O...O..m.......
 8006db0:	12c9 0800 12d5 0800 12d9 0800 152f 0800     ............/...
 8006dc0:	1547 0800 15c1 0800 1585 0800               G...........

08006dcc <us_data>:
 8006dcc:	6dd4 0800 09dc 2000                         .m..... 

08006dd4 <us_interface>:
 8006dd4:	3885 0800 38a5 0800 38d5 0800 38ed 0800     .8...8...8...8..
 8006de4:	38bd 0800 6970 6d6e 7061 6d20 7369 6d2d     .8..pinmap mis-m
 8006df4:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8006e04:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8006e14:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8006e24:	6e69 756f 0074 0000                         inout...

08006e2c <mp_stk_size>:
 8006e2c:	0210 0000                                   ....

08006e30 <mp_tcb_size>:
 8006e30:	01cc                                        ..

08006e32 <mp_tmr_size>:
	...

08006e34 <os_clockrate>:
 8006e34:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006e44:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006e54:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006e61 <os_fifo_size>:
 8006e61:	0110                                             .

08006e62 <os_flags>:
 8006e62:	0001                                        ..

08006e64 <os_maxtaskrun>:
 8006e64:	0007 0000                                   ....

08006e68 <os_messageQ_def_osTimerMessageQ>:
 8006e68:	0004 0000 0a00 2000                         ....... 

08006e70 <os_mutex_def_env_mutex>:
 8006e70:	0a20 2000                                    .. 

08006e74 <os_mutex_def_malloc_mutex>:
 8006e74:	0a30 2000                                   0.. 

08006e78 <os_mutex_def_singleton_mutex>:
 8006e78:	0a40 2000                                   @.. 

08006e7c <os_rrobin>:
 8006e7c:	0005 0001                                   ....

08006e80 <os_stackinfo>:
 8006e80:	0200 0100                                   ....

08006e84 <os_thread_def_osTimerThread>:
 8006e84:	29b5 0800 0002 0000 0001 0000 0320 0000     .).......... ...
 8006e94:	1960 2000                                   `.. 

08006e98 <os_trv>:
 8006e98:	f9ff 0000                                   ....

08006e9c <os_mutex_def_osThreadMutex>:
 8006e9c:	1254 2000 6950 6d6e 7061 6520 7272 726f     T.. Pinmap error
 8006eac:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8006ebc:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8006ecc:	6169 696c 657a 4320 4e41 0000               ialize CAN..

08006ed8 <timing_pts>:
	...
 8006ee0:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 8006ef0:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 8006f00:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 8006f10:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 8006f20:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 8006f30:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 8006f40:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 8006f50:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 8006f60:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 8006f70:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 8006f80:	000f 0000 0006 0000 000f 0000 0007 0000     ................

08006f90 <ll_pin_defines>:
 8006f90:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8006fa0:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006fb0:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006fc0:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8006fd0:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8006fe0:	2065 4155 5452 000a                         e UART..

08006fe8 <PinMap_CAN_RD>:
 8006fe8:	000b 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8006ff8:	ffff ffff 0000 0000                         ........

08007000 <PinMap_CAN_TD>:
 8007000:	000c 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8007010:	ffff ffff 0000 0000                         ........

08007018 <PinMap_UART_RX>:
 8007018:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8007028:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8007038:	0712 0000 0014 0000 4400 4000 0712 0000     .........D.@....
 8007048:	0017 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 8007058:	ffff ffff 0000 0000                         ........

08007060 <PinMap_UART_TX>:
 8007060:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8007070:	3800 4001 0712 0000 000e 0000 4400 4000     .8.@.........D.@
 8007080:	0712 0000 0013 0000 4400 4000 0712 0000     .........D.@....
 8007090:	0016 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 80070a0:	ffff ffff 0000 0000                         ........

080070a8 <AHBPrescTable>:
	...
 80070b0:	0201 0403 0706 0908                         ........

080070b8 <APBPrescTable>:
 80070b8:	0000 0000 0201 0403                         ........

080070c0 <CSWTCH.45>:
 80070c0:	0400 0208                                   ....

080070c4 <aPLLMULFactorTable>:
 80070c4:	0302 0504 0706 0908 0b0a 0d0c 0f0e 1010     ................

080070d4 <aPredivFactorTable>:
 80070d4:	0201 0403 0605 0807 0a09 0c0b 0e0d 100f     ................

080070e4 <vtable for mbed::SerialBase>:
	...
 80070ec:	4e53 0800 4e55 0800 1331 0800 1359 0800     SN..UN..1...Y...

080070fc <vtable for mbed::RawSerial>:
	...
 8007104:	4fa5 0800 4fa5 0800 4fa9 0800 4fbd 0800     .O...O...O...O..

08007114 <vtable for mbed::CAN>:
	...
 800711c:	5135 0800 5175 0800 5095 0800 509f 0800     5Q..uQ...P...P..
 800712c:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 800713c:	7475 6f20 2066 656d 6f6d 7972 0a0d 4500     ut of memory...E
 800714c:	7272 726f 6920 696e 6974 6c61 7a69 6e69     rror initializin
 800715c:	2067 6874 2065 756d 6574 2078 626f 656a     g the mutex obje
 800716c:	7463 000a                                   ct..

08007170 <__sf_fake_stderr>:
	...

08007190 <__sf_fake_stdin>:
	...

080071b0 <__sf_fake_stdout>:
	...

080071d0 <_global_impure_ptr>:
 80071d0:	01b0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80071e0:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80071f0:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8007200:	6665 4567 4746 0000                         efgEFG..

08007208 <__EH_FRAME_BEGIN__>:
 8007208:	0000 0000                                   ....
