
NUCLEO_F303K8/ROS_mbed_single.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080056d1


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 30 00 20 d1 56 00 08 05 57 00 08 05 57 00 08     .0. .V...W...W..
 8000010:	05 57 00 08 05 57 00 08 05 57 00 08 00 00 00 00     .W...W...W......
	...
 800002c:	95 55 00 08 05 57 00 08 00 00 00 00 3b 56 00 08     .U...W......;V..
 800003c:	9b 56 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .V...W...W...W..
 800004c:	05 57 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .W...W...W...W..
 800005c:	05 57 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .W...W...W...W..
 800006c:	05 57 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .W...W...W...W..
 800007c:	05 57 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .W...W...W...W..
 800008c:	19 34 00 08 1d 34 00 08 05 57 00 08 19 33 00 08     .4...4...W...3..
 800009c:	05 57 00 08 05 57 00 08 05 57 00 08 05 57 00 08     .W...W...W...W..
 80000ac:	05 57 00 08 05 57 00 08 05 57 00 08 00 00 00 00     .W...W...W......
 80000bc:	05 57 00 08 05 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
 80000cc:	05 57 00 08 00 00 00 00 05 57 00 08 05 57 00 08     .W.......W...W..
 80000dc:	05 57 00 08 05 57 00 08 05 57 00 08 00 00 00 00     .W...W...W......
	...
 8000118:	05 57 00 08 05 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000140:	05 57 00 08 05 57 00 08 00 00 00 00 00 00 00 00     .W...W..........
	...
 8000184:	05 57 00 08                                         .W..

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000228 	.word	0x20000228
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08007184 	.word	0x08007184

080001ac <frame_dummy>:
 80001ac:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <frame_dummy+0x34>)
 80001ae:	b143      	cbz	r3, 80001c2 <frame_dummy+0x16>
 80001b0:	480c      	ldr	r0, [pc, #48]	; (80001e4 <frame_dummy+0x38>)
 80001b2:	490d      	ldr	r1, [pc, #52]	; (80001e8 <frame_dummy+0x3c>)
 80001b4:	b510      	push	{r4, lr}
 80001b6:	f3af 8000 	nop.w
 80001ba:	480c      	ldr	r0, [pc, #48]	; (80001ec <frame_dummy+0x40>)
 80001bc:	6803      	ldr	r3, [r0, #0]
 80001be:	b923      	cbnz	r3, 80001ca <frame_dummy+0x1e>
 80001c0:	bd10      	pop	{r4, pc}
 80001c2:	480a      	ldr	r0, [pc, #40]	; (80001ec <frame_dummy+0x40>)
 80001c4:	6803      	ldr	r3, [r0, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <frame_dummy+0x2a>
 80001c8:	4770      	bx	lr
 80001ca:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <frame_dummy+0x44>)
 80001cc:	2b00      	cmp	r3, #0
 80001ce:	d0f7      	beq.n	80001c0 <frame_dummy+0x14>
 80001d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001d4:	4718      	bx	r3
 80001d6:	4b06      	ldr	r3, [pc, #24]	; (80001f0 <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f5      	beq.n	80001c8 <frame_dummy+0x1c>
 80001dc:	4718      	bx	r3
 80001de:	bf00      	nop
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08007184 	.word	0x08007184
 80001e8:	2000022c 	.word	0x2000022c
 80001ec:	20000220 	.word	0x20000220
 80001f0:	00000000 	.word	0x00000000

080001f4 <std_msgs::Time::serialize(unsigned char*) const>:
 80001f4:	6843      	ldr	r3, [r0, #4]
 80001f6:	700b      	strb	r3, [r1, #0]
 80001f8:	6843      	ldr	r3, [r0, #4]
 80001fa:	0a1b      	lsrs	r3, r3, #8
 80001fc:	704b      	strb	r3, [r1, #1]
 80001fe:	88c3      	ldrh	r3, [r0, #6]
 8000200:	708b      	strb	r3, [r1, #2]
 8000202:	79c3      	ldrb	r3, [r0, #7]
 8000204:	70cb      	strb	r3, [r1, #3]
 8000206:	6883      	ldr	r3, [r0, #8]
 8000208:	710b      	strb	r3, [r1, #4]
 800020a:	6883      	ldr	r3, [r0, #8]
 800020c:	0a1b      	lsrs	r3, r3, #8
 800020e:	714b      	strb	r3, [r1, #5]
 8000210:	8943      	ldrh	r3, [r0, #10]
 8000212:	718b      	strb	r3, [r1, #6]
 8000214:	7ac3      	ldrb	r3, [r0, #11]
 8000216:	71cb      	strb	r3, [r1, #7]
 8000218:	2008      	movs	r0, #8
 800021a:	4770      	bx	lr

0800021c <std_msgs::Time::deserialize(unsigned char*)>:
 800021c:	780b      	ldrb	r3, [r1, #0]
 800021e:	6043      	str	r3, [r0, #4]
 8000220:	784a      	ldrb	r2, [r1, #1]
 8000222:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000226:	6043      	str	r3, [r0, #4]
 8000228:	788a      	ldrb	r2, [r1, #2]
 800022a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	78ca      	ldrb	r2, [r1, #3]
 8000232:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	790b      	ldrb	r3, [r1, #4]
 800023a:	6083      	str	r3, [r0, #8]
 800023c:	794a      	ldrb	r2, [r1, #5]
 800023e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000242:	6083      	str	r3, [r0, #8]
 8000244:	798a      	ldrb	r2, [r1, #6]
 8000246:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	79ca      	ldrb	r2, [r1, #7]
 800024e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::getType()>:
 8000258:	4800      	ldr	r0, [pc, #0]	; (800025c <std_msgs::Time::getType()+0x4>)
 800025a:	4770      	bx	lr
 800025c:	08006c52 	.word	0x08006c52

08000260 <std_msgs::Time::getMD5()>:
 8000260:	4800      	ldr	r0, [pc, #0]	; (8000264 <std_msgs::Time::getMD5()+0x4>)
 8000262:	4770      	bx	lr
 8000264:	08006c31 	.word	0x08006c31

08000268 <rosserial_msgs::TopicInfo::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08006bc3 	.word	0x08006bc3

08000270 <rosserial_msgs::TopicInfo::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08006ba2 	.word	0x08006ba2

08000278 <rosserial_msgs::Log::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::Log::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08006b8f 	.word	0x08006b8f

08000280 <rosserial_msgs::Log::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::Log::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08006b6e 	.word	0x08006b6e

08000288 <rosserial_msgs::RequestParamResponse::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08006bdc 	.word	0x08006bdc

08000290 <rosserial_msgs::RequestParamResponse::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08006b4d 	.word	0x08006b4d

08000298 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8000298:	2000      	movs	r0, #0
 800029a:	4770      	bx	lr

0800029c <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 800029c:	2000      	movs	r0, #0
 800029e:	4770      	bx	lr

080002a0 <std_srvs::EmptyRequest::getType()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <std_srvs::EmptyRequest::getType()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08006c81 	.word	0x08006c81

080002a8 <std_srvs::EmptyRequest::getMD5()>:
 80002a8:	4800      	ldr	r0, [pc, #0]	; (80002ac <std_srvs::EmptyRequest::getMD5()+0x4>)
 80002aa:	4770      	bx	lr
 80002ac:	08006c60 	.word	0x08006c60

080002b0 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr

080002b4 <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 80002b4:	2000      	movs	r0, #0
 80002b6:	4770      	bx	lr

080002b8 <std_srvs::EmptyResponse::getType()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_srvs::EmptyResponse::getType()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08006c81 	.word	0x08006c81

080002c0 <std_srvs::EmptyResponse::getMD5()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_srvs::EmptyResponse::getMD5()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	08006c60 	.word	0x08006c60

080002c8 <AKROS_bridge::Initialize_singleRequest::serialize(unsigned char*) const>:
 80002c8:	2000      	movs	r0, #0
 80002ca:	4770      	bx	lr

080002cc <AKROS_bridge::Initialize_singleRequest::deserialize(unsigned char*)>:
 80002cc:	2000      	movs	r0, #0
 80002ce:	4770      	bx	lr

080002d0 <AKROS_bridge::Initialize_singleRequest::getType()>:
 80002d0:	4800      	ldr	r0, [pc, #0]	; (80002d4 <AKROS_bridge::Initialize_singleRequest::getType()+0x4>)
 80002d2:	4770      	bx	lr
 80002d4:	08006b2e 	.word	0x08006b2e

080002d8 <AKROS_bridge::Initialize_singleRequest::getMD5()>:
 80002d8:	4800      	ldr	r0, [pc, #0]	; (80002dc <AKROS_bridge::Initialize_singleRequest::getMD5()+0x4>)
 80002da:	4770      	bx	lr
 80002dc:	08006c60 	.word	0x08006c60

080002e0 <AKROS_bridge::Initialize_singleResponse::serialize(unsigned char*) const>:
 80002e0:	6882      	ldr	r2, [r0, #8]
 80002e2:	68c3      	ldr	r3, [r0, #12]
 80002e4:	700a      	strb	r2, [r1, #0]
 80002e6:	b510      	push	{r4, lr}
 80002e8:	0a14      	lsrs	r4, r2, #8
 80002ea:	704c      	strb	r4, [r1, #1]
 80002ec:	0c14      	lsrs	r4, r2, #16
 80002ee:	0e12      	lsrs	r2, r2, #24
 80002f0:	70ca      	strb	r2, [r1, #3]
 80002f2:	0a1a      	lsrs	r2, r3, #8
 80002f4:	710b      	strb	r3, [r1, #4]
 80002f6:	714a      	strb	r2, [r1, #5]
 80002f8:	0c1a      	lsrs	r2, r3, #16
 80002fa:	0e1b      	lsrs	r3, r3, #24
 80002fc:	708c      	strb	r4, [r1, #2]
 80002fe:	718a      	strb	r2, [r1, #6]
 8000300:	71cb      	strb	r3, [r1, #7]
 8000302:	6902      	ldr	r2, [r0, #16]
 8000304:	6943      	ldr	r3, [r0, #20]
 8000306:	720a      	strb	r2, [r1, #8]
 8000308:	0a14      	lsrs	r4, r2, #8
 800030a:	724c      	strb	r4, [r1, #9]
 800030c:	0c14      	lsrs	r4, r2, #16
 800030e:	0e12      	lsrs	r2, r2, #24
 8000310:	72ca      	strb	r2, [r1, #11]
 8000312:	0a1a      	lsrs	r2, r3, #8
 8000314:	730b      	strb	r3, [r1, #12]
 8000316:	734a      	strb	r2, [r1, #13]
 8000318:	0c1a      	lsrs	r2, r3, #16
 800031a:	0e1b      	lsrs	r3, r3, #24
 800031c:	728c      	strb	r4, [r1, #10]
 800031e:	738a      	strb	r2, [r1, #14]
 8000320:	73cb      	strb	r3, [r1, #15]
 8000322:	6982      	ldr	r2, [r0, #24]
 8000324:	69c3      	ldr	r3, [r0, #28]
 8000326:	740a      	strb	r2, [r1, #16]
 8000328:	0a10      	lsrs	r0, r2, #8
 800032a:	7448      	strb	r0, [r1, #17]
 800032c:	0c10      	lsrs	r0, r2, #16
 800032e:	0e12      	lsrs	r2, r2, #24
 8000330:	74ca      	strb	r2, [r1, #19]
 8000332:	0a1a      	lsrs	r2, r3, #8
 8000334:	750b      	strb	r3, [r1, #20]
 8000336:	754a      	strb	r2, [r1, #21]
 8000338:	0c1a      	lsrs	r2, r3, #16
 800033a:	0e1b      	lsrs	r3, r3, #24
 800033c:	7488      	strb	r0, [r1, #18]
 800033e:	758a      	strb	r2, [r1, #22]
 8000340:	75cb      	strb	r3, [r1, #23]
 8000342:	2018      	movs	r0, #24
 8000344:	bd10      	pop	{r4, pc}

08000346 <AKROS_bridge::Initialize_singleResponse::deserialize(unsigned char*)>:
 8000346:	680a      	ldr	r2, [r1, #0]
 8000348:	684b      	ldr	r3, [r1, #4]
 800034a:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800034e:	688a      	ldr	r2, [r1, #8]
 8000350:	68cb      	ldr	r3, [r1, #12]
 8000352:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000356:	690a      	ldr	r2, [r1, #16]
 8000358:	694b      	ldr	r3, [r1, #20]
 800035a:	e9c0 2306 	strd	r2, r3, [r0, #24]
 800035e:	2018      	movs	r0, #24
 8000360:	4770      	bx	lr
	...

08000364 <AKROS_bridge::Initialize_singleResponse::getType()>:
 8000364:	4800      	ldr	r0, [pc, #0]	; (8000368 <AKROS_bridge::Initialize_singleResponse::getType()+0x4>)
 8000366:	4770      	bx	lr
 8000368:	08006b2e 	.word	0x08006b2e

0800036c <AKROS_bridge::Initialize_singleResponse::getMD5()>:
 800036c:	4800      	ldr	r0, [pc, #0]	; (8000370 <AKROS_bridge::Initialize_singleResponse::getMD5()+0x4>)
 800036e:	4770      	bx	lr
 8000370:	08006b0d 	.word	0x08006b0d

08000374 <AKROS_bridge::motor_cmd_single::serialize(unsigned char*) const>:
 8000374:	7903      	ldrb	r3, [r0, #4]
 8000376:	700b      	strb	r3, [r1, #0]
 8000378:	6883      	ldr	r3, [r0, #8]
 800037a:	704b      	strb	r3, [r1, #1]
 800037c:	0a1a      	lsrs	r2, r3, #8
 800037e:	708a      	strb	r2, [r1, #2]
 8000380:	0c1a      	lsrs	r2, r3, #16
 8000382:	0e1b      	lsrs	r3, r3, #24
 8000384:	70ca      	strb	r2, [r1, #3]
 8000386:	710b      	strb	r3, [r1, #4]
 8000388:	68c3      	ldr	r3, [r0, #12]
 800038a:	714b      	strb	r3, [r1, #5]
 800038c:	0a1a      	lsrs	r2, r3, #8
 800038e:	718a      	strb	r2, [r1, #6]
 8000390:	0c1a      	lsrs	r2, r3, #16
 8000392:	0e1b      	lsrs	r3, r3, #24
 8000394:	71ca      	strb	r2, [r1, #7]
 8000396:	720b      	strb	r3, [r1, #8]
 8000398:	6903      	ldr	r3, [r0, #16]
 800039a:	724b      	strb	r3, [r1, #9]
 800039c:	0a1a      	lsrs	r2, r3, #8
 800039e:	728a      	strb	r2, [r1, #10]
 80003a0:	0c1a      	lsrs	r2, r3, #16
 80003a2:	0e1b      	lsrs	r3, r3, #24
 80003a4:	72ca      	strb	r2, [r1, #11]
 80003a6:	730b      	strb	r3, [r1, #12]
 80003a8:	6943      	ldr	r3, [r0, #20]
 80003aa:	734b      	strb	r3, [r1, #13]
 80003ac:	0a1a      	lsrs	r2, r3, #8
 80003ae:	738a      	strb	r2, [r1, #14]
 80003b0:	0c1a      	lsrs	r2, r3, #16
 80003b2:	0e1b      	lsrs	r3, r3, #24
 80003b4:	73ca      	strb	r2, [r1, #15]
 80003b6:	740b      	strb	r3, [r1, #16]
 80003b8:	6983      	ldr	r3, [r0, #24]
 80003ba:	744b      	strb	r3, [r1, #17]
 80003bc:	0a1a      	lsrs	r2, r3, #8
 80003be:	748a      	strb	r2, [r1, #18]
 80003c0:	0c1a      	lsrs	r2, r3, #16
 80003c2:	0e1b      	lsrs	r3, r3, #24
 80003c4:	74ca      	strb	r2, [r1, #19]
 80003c6:	750b      	strb	r3, [r1, #20]
 80003c8:	2015      	movs	r0, #21
 80003ca:	4770      	bx	lr

080003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>:
 80003cc:	780b      	ldrb	r3, [r1, #0]
 80003ce:	7103      	strb	r3, [r0, #4]
 80003d0:	f8d1 3001 	ldr.w	r3, [r1, #1]
 80003d4:	6083      	str	r3, [r0, #8]
 80003d6:	f8d1 3005 	ldr.w	r3, [r1, #5]
 80003da:	60c3      	str	r3, [r0, #12]
 80003dc:	f8d1 3009 	ldr.w	r3, [r1, #9]
 80003e0:	6103      	str	r3, [r0, #16]
 80003e2:	f8d1 300d 	ldr.w	r3, [r1, #13]
 80003e6:	6143      	str	r3, [r0, #20]
 80003e8:	f8d1 3011 	ldr.w	r3, [r1, #17]
 80003ec:	6183      	str	r3, [r0, #24]
 80003ee:	2015      	movs	r0, #21
 80003f0:	4770      	bx	lr
	...

080003f4 <AKROS_bridge::motor_cmd_single::getType()>:
 80003f4:	4800      	ldr	r0, [pc, #0]	; (80003f8 <AKROS_bridge::motor_cmd_single::getType()+0x4>)
 80003f6:	4770      	bx	lr
 80003f8:	08006aae 	.word	0x08006aae

080003fc <AKROS_bridge::motor_cmd_single::getMD5()>:
 80003fc:	4800      	ldr	r0, [pc, #0]	; (8000400 <AKROS_bridge::motor_cmd_single::getMD5()+0x4>)
 80003fe:	4770      	bx	lr
 8000400:	08006a8d 	.word	0x08006a8d

08000404 <AKROS_bridge::motor_reply_single::serialize(unsigned char*) const>:
 8000404:	7903      	ldrb	r3, [r0, #4]
 8000406:	700b      	strb	r3, [r1, #0]
 8000408:	6883      	ldr	r3, [r0, #8]
 800040a:	704b      	strb	r3, [r1, #1]
 800040c:	0a1a      	lsrs	r2, r3, #8
 800040e:	708a      	strb	r2, [r1, #2]
 8000410:	0c1a      	lsrs	r2, r3, #16
 8000412:	0e1b      	lsrs	r3, r3, #24
 8000414:	70ca      	strb	r2, [r1, #3]
 8000416:	710b      	strb	r3, [r1, #4]
 8000418:	68c3      	ldr	r3, [r0, #12]
 800041a:	714b      	strb	r3, [r1, #5]
 800041c:	0a1a      	lsrs	r2, r3, #8
 800041e:	718a      	strb	r2, [r1, #6]
 8000420:	0c1a      	lsrs	r2, r3, #16
 8000422:	0e1b      	lsrs	r3, r3, #24
 8000424:	71ca      	strb	r2, [r1, #7]
 8000426:	720b      	strb	r3, [r1, #8]
 8000428:	6903      	ldr	r3, [r0, #16]
 800042a:	724b      	strb	r3, [r1, #9]
 800042c:	0a1a      	lsrs	r2, r3, #8
 800042e:	728a      	strb	r2, [r1, #10]
 8000430:	0c1a      	lsrs	r2, r3, #16
 8000432:	0e1b      	lsrs	r3, r3, #24
 8000434:	72ca      	strb	r2, [r1, #11]
 8000436:	730b      	strb	r3, [r1, #12]
 8000438:	200d      	movs	r0, #13
 800043a:	4770      	bx	lr

0800043c <AKROS_bridge::motor_reply_single::deserialize(unsigned char*)>:
 800043c:	780b      	ldrb	r3, [r1, #0]
 800043e:	7103      	strb	r3, [r0, #4]
 8000440:	f8d1 3001 	ldr.w	r3, [r1, #1]
 8000444:	6083      	str	r3, [r0, #8]
 8000446:	f8d1 3005 	ldr.w	r3, [r1, #5]
 800044a:	60c3      	str	r3, [r0, #12]
 800044c:	f8d1 3009 	ldr.w	r3, [r1, #9]
 8000450:	6103      	str	r3, [r0, #16]
 8000452:	200d      	movs	r0, #13
 8000454:	4770      	bx	lr
	...

08000458 <AKROS_bridge::motor_reply_single::getType()>:
 8000458:	4800      	ldr	r0, [pc, #0]	; (800045c <AKROS_bridge::motor_reply_single::getType()+0x4>)
 800045a:	4770      	bx	lr
 800045c:	08006aed 	.word	0x08006aed

08000460 <AKROS_bridge::motor_reply_single::getMD5()>:
 8000460:	4800      	ldr	r0, [pc, #0]	; (8000464 <AKROS_bridge::motor_reply_single::getMD5()+0x4>)
 8000462:	4770      	bx	lr
 8000464:	08006acc 	.word	0x08006acc

08000468 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8000468:	6803      	ldr	r3, [r0, #0]
 800046a:	4718      	bx	r3

0800046c <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 800046c:	b108      	cbz	r0, 8000472 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 800046e:	680b      	ldr	r3, [r1, #0]
 8000470:	6003      	str	r3, [r0, #0]
 8000472:	4770      	bx	lr

08000474 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8000474:	4770      	bx	lr

08000476 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getEndpointType()>:
 8000476:	2003      	movs	r0, #3
 8000478:	4770      	bx	lr
	...

0800047c <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()>:
 800047c:	4800      	ldr	r0, [pc, #0]	; (8000480 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()+0x4>)
 800047e:	4770      	bx	lr
 8000480:	08006c81 	.word	0x08006c81

08000484 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()>:
 8000484:	4800      	ldr	r0, [pc, #0]	; (8000488 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()+0x4>)
 8000486:	4770      	bx	lr
 8000488:	08006c60 	.word	0x08006c60

0800048c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getEndpointType()>:
 800048c:	2003      	movs	r0, #3
 800048e:	4770      	bx	lr

08000490 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()>:
 8000490:	4800      	ldr	r0, [pc, #0]	; (8000494 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgType()+0x4>)
 8000492:	4770      	bx	lr
 8000494:	08006b2e 	.word	0x08006b2e

08000498 <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()>:
 8000498:	4800      	ldr	r0, [pc, #0]	; (800049c <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::getMsgMD5()+0x4>)
 800049a:	4770      	bx	lr
 800049c:	08006c60 	.word	0x08006c60

080004a0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::callback(unsigned char*)>:
 80004a0:	b570      	push	{r4, r5, r6, lr}
 80004a2:	4605      	mov	r5, r0
 80004a4:	f100 040c 	add.w	r4, r0, #12
 80004a8:	4620      	mov	r0, r4
 80004aa:	f7ff ff8f 	bl	80003cc <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>
 80004ae:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80004b0:	4620      	mov	r0, r4
 80004b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004b6:	4718      	bx	r3

080004b8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getEndpointType()>:
 80004b8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80004ba:	4770      	bx	lr

080004bc <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()>:
 80004bc:	4800      	ldr	r0, [pc, #0]	; (80004c0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()+0x4>)
 80004be:	4770      	bx	lr
 80004c0:	08006aae 	.word	0x08006aae

080004c4 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()>:
 80004c4:	4800      	ldr	r0, [pc, #0]	; (80004c8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()+0x4>)
 80004c6:	4770      	bx	lr
 80004c8:	08006a8d 	.word	0x08006a8d

080004cc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80004cc:	f890 0578 	ldrb.w	r0, [r0, #1400]	; 0x578
 80004d0:	4770      	bx	lr
	...

080004d4 <exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 80004d4:	2101      	movs	r1, #1
 80004d6:	4801      	ldr	r0, [pc, #4]	; (80004dc <exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 80004d8:	f001 b8af 	b.w	800163a <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>
 80004dc:	20000244 	.word	0x20000244

080004e0 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 80004e0:	2101      	movs	r1, #1
 80004e2:	4801      	ldr	r0, [pc, #4]	; (80004e8 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 80004e4:	f001 b8d0 	b.w	8001688 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>
 80004e8:	20000244 	.word	0x20000244

080004ec <ros::Publisher::publish(ros::Msg const*)>:
 80004ec:	68c3      	ldr	r3, [r0, #12]
 80004ee:	681a      	ldr	r2, [r3, #0]
 80004f0:	b410      	push	{r4}
 80004f2:	6814      	ldr	r4, [r2, #0]
 80004f4:	460a      	mov	r2, r1
 80004f6:	6881      	ldr	r1, [r0, #8]
 80004f8:	4618      	mov	r0, r3
 80004fa:	4623      	mov	r3, r4
 80004fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000500:	4718      	bx	r3

08000502 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::callback(unsigned char*)>:
 8000502:	b538      	push	{r3, r4, r5, lr}
 8000504:	f100 0510 	add.w	r5, r0, #16
 8000508:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800050a:	4604      	mov	r4, r0
 800050c:	4629      	mov	r1, r5
 800050e:	300c      	adds	r0, #12
 8000510:	4798      	blx	r3
 8000512:	4629      	mov	r1, r5
 8000514:	f104 0014 	add.w	r0, r4, #20
 8000518:	f7ff ffe8 	bl	80004ec <ros::Publisher::publish(ros::Msg const*)>
 800051c:	bd38      	pop	{r3, r4, r5, pc}

0800051e <ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>::callback(unsigned char*)>:
 800051e:	b538      	push	{r3, r4, r5, lr}
 8000520:	f100 0510 	add.w	r5, r0, #16
 8000524:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8000526:	4604      	mov	r4, r0
 8000528:	4629      	mov	r1, r5
 800052a:	300c      	adds	r0, #12
 800052c:	4798      	blx	r3
 800052e:	4629      	mov	r1, r5
 8000530:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8000534:	f7ff ffda 	bl	80004ec <ros::Publisher::publish(ros::Msg const*)>
 8000538:	bd38      	pop	{r3, r4, r5, pc}

0800053a <mbed::CANMessage::CANMessage()>:
 800053a:	b510      	push	{r4, lr}
 800053c:	2210      	movs	r2, #16
 800053e:	4604      	mov	r4, r0
 8000540:	2100      	movs	r1, #0
 8000542:	f005 fcda 	bl	8005efa <memset>
 8000546:	2308      	movs	r3, #8
 8000548:	7323      	strb	r3, [r4, #12]
 800054a:	2300      	movs	r3, #0
 800054c:	6063      	str	r3, [r4, #4]
 800054e:	60a3      	str	r3, [r4, #8]
 8000550:	4620      	mov	r0, r4
 8000552:	bd10      	pop	{r4, pc}

08000554 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)>:
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	b087      	sub	sp, #28
 8000558:	4604      	mov	r4, r0
 800055a:	ad02      	add	r5, sp, #8
 800055c:	4628      	mov	r0, r5
 800055e:	f7ff ffec 	bl	800053a <mbed::CANMessage::CANMessage()>
 8000562:	7923      	ldrb	r3, [r4, #4]
 8000564:	68e2      	ldr	r2, [r4, #12]
 8000566:	68a1      	ldr	r1, [r4, #8]
 8000568:	3301      	adds	r3, #1
 800056a:	9302      	str	r3, [sp, #8]
 800056c:	69a3      	ldr	r3, [r4, #24]
 800056e:	9301      	str	r3, [sp, #4]
 8000570:	6963      	ldr	r3, [r4, #20]
 8000572:	9300      	str	r3, [sp, #0]
 8000574:	4628      	mov	r0, r5
 8000576:	6923      	ldr	r3, [r4, #16]
 8000578:	f001 f8ae 	bl	80016d8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>
 800057c:	9b05      	ldr	r3, [sp, #20]
 800057e:	9300      	str	r3, [sp, #0]
 8000580:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8000584:	4802      	ldr	r0, [pc, #8]	; (8000590 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)+0x3c>)
 8000586:	f004 fcb0 	bl	8004eea <mbed::CAN::write(mbed::CANMessage)>
 800058a:	b007      	add	sp, #28
 800058c:	bd30      	pop	{r4, r5, pc}
 800058e:	bf00      	nop
 8000590:	20000244 	.word	0x20000244

08000594 <CAN_Cb()>:
 8000594:	b510      	push	{r4, lr}
 8000596:	b08c      	sub	sp, #48	; 0x30
 8000598:	ac08      	add	r4, sp, #32
 800059a:	4620      	mov	r0, r4
 800059c:	f7ff ffcd 	bl	800053a <mbed::CANMessage::CANMessage()>
 80005a0:	2200      	movs	r2, #0
 80005a2:	4621      	mov	r1, r4
 80005a4:	480f      	ldr	r0, [pc, #60]	; (80005e4 <CAN_Cb()+0x50>)
 80005a6:	f004 fcbf 	bl	8004f28 <mbed::CAN::read(mbed::CANMessage&, int)>
 80005aa:	b1c8      	cbz	r0, 80005e0 <CAN_Cb()+0x4c>
 80005ac:	9b08      	ldr	r3, [sp, #32]
 80005ae:	b9bb      	cbnz	r3, 80005e0 <CAN_Cb()+0x4c>
 80005b0:	ab07      	add	r3, sp, #28
 80005b2:	9303      	str	r3, [sp, #12]
 80005b4:	ab06      	add	r3, sp, #24
 80005b6:	9302      	str	r3, [sp, #8]
 80005b8:	ab05      	add	r3, sp, #20
 80005ba:	9301      	str	r3, [sp, #4]
 80005bc:	f10d 0313 	add.w	r3, sp, #19
 80005c0:	9300      	str	r3, [sp, #0]
 80005c2:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80005c6:	f001 f901 	bl	80017cc <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 80005ca:	f89d 2013 	ldrb.w	r2, [sp, #19]
 80005ce:	4b06      	ldr	r3, [pc, #24]	; (80005e8 <CAN_Cb()+0x54>)
 80005d0:	3a01      	subs	r2, #1
 80005d2:	711a      	strb	r2, [r3, #4]
 80005d4:	9a05      	ldr	r2, [sp, #20]
 80005d6:	609a      	str	r2, [r3, #8]
 80005d8:	9a06      	ldr	r2, [sp, #24]
 80005da:	60da      	str	r2, [r3, #12]
 80005dc:	9a07      	ldr	r2, [sp, #28]
 80005de:	611a      	str	r2, [r3, #16]
 80005e0:	b00c      	add	sp, #48	; 0x30
 80005e2:	bd10      	pop	{r4, pc}
 80005e4:	20000244 	.word	0x20000244
 80005e8:	2000039c 	.word	0x2000039c

080005ec <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)>:
 80005ec:	b570      	push	{r4, r5, r6, lr}
 80005ee:	b090      	sub	sp, #64	; 0x40
 80005f0:	ac08      	add	r4, sp, #32
 80005f2:	4620      	mov	r0, r4
 80005f4:	460e      	mov	r6, r1
 80005f6:	f7ff ffa0 	bl	800053a <mbed::CANMessage::CANMessage()>
 80005fa:	2101      	movs	r1, #1
 80005fc:	481c      	ldr	r0, [pc, #112]	; (8000670 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 80005fe:	f000 fff5 	bl	80015ec <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>
 8000602:	200a      	movs	r0, #10
 8000604:	f004 fe46 	bl	8005294 <wait_ms>
 8000608:	2200      	movs	r2, #0
 800060a:	4621      	mov	r1, r4
 800060c:	4818      	ldr	r0, [pc, #96]	; (8000670 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 800060e:	f004 fc8b 	bl	8004f28 <mbed::CAN::read(mbed::CANMessage&, int)>
 8000612:	ad0c      	add	r5, sp, #48	; 0x30
 8000614:	b1e0      	cbz	r0, 8000650 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 8000616:	9b08      	ldr	r3, [sp, #32]
 8000618:	b9d3      	cbnz	r3, 8000650 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x64>
 800061a:	ab07      	add	r3, sp, #28
 800061c:	9302      	str	r3, [sp, #8]
 800061e:	ab06      	add	r3, sp, #24
 8000620:	9301      	str	r3, [sp, #4]
 8000622:	f10d 0317 	add.w	r3, sp, #23
 8000626:	9503      	str	r5, [sp, #12]
 8000628:	9300      	str	r3, [sp, #0]
 800062a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800062e:	f001 f8cd 	bl	80017cc <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 8000632:	9806      	ldr	r0, [sp, #24]
 8000634:	f005 f9cc 	bl	80059d0 <__aeabi_f2d>
 8000638:	e9c6 0102 	strd	r0, r1, [r6, #8]
 800063c:	9807      	ldr	r0, [sp, #28]
 800063e:	f005 f9c7 	bl	80059d0 <__aeabi_f2d>
 8000642:	e9c6 0104 	strd	r0, r1, [r6, #16]
 8000646:	980c      	ldr	r0, [sp, #48]	; 0x30
 8000648:	f005 f9c2 	bl	80059d0 <__aeabi_f2d>
 800064c:	e9c6 0106 	strd	r0, r1, [r6, #24]
 8000650:	4b08      	ldr	r3, [pc, #32]	; (8000674 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x88>)
 8000652:	930c      	str	r3, [sp, #48]	; 0x30
 8000654:	2200      	movs	r2, #0
 8000656:	4b08      	ldr	r3, [pc, #32]	; (8000678 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x8c>)
 8000658:	4805      	ldr	r0, [pc, #20]	; (8000670 <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x84>)
 800065a:	930f      	str	r3, [sp, #60]	; 0x3c
 800065c:	4629      	mov	r1, r5
 800065e:	f004 fcf5 	bl	800504c <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>
 8000662:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8000664:	b113      	cbz	r3, 800066c <enter_control_mode_Cb(AKROS_bridge::Initialize_singleRequest const&, AKROS_bridge::Initialize_singleResponse&)+0x80>
 8000666:	689b      	ldr	r3, [r3, #8]
 8000668:	4628      	mov	r0, r5
 800066a:	4798      	blx	r3
 800066c:	b010      	add	sp, #64	; 0x40
 800066e:	bd70      	pop	{r4, r5, r6, pc}
 8000670:	20000244 	.word	0x20000244
 8000674:	08000595 	.word	0x08000595
 8000678:	08006a34 	.word	0x08006a34

0800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 800067c:	3801      	subs	r0, #1
 800067e:	2300      	movs	r3, #0
 8000680:	fa21 f203 	lsr.w	r2, r1, r3
 8000684:	3308      	adds	r3, #8
 8000686:	2b20      	cmp	r3, #32
 8000688:	f800 2f01 	strb.w	r2, [r0, #1]!
 800068c:	d1f8      	bne.n	8000680 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800068e:	4770      	bx	lr

08000690 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000690:	6843      	ldr	r3, [r0, #4]
 8000692:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000696:	700b      	strb	r3, [r1, #0]
 8000698:	6843      	ldr	r3, [r0, #4]
 800069a:	0a1b      	lsrs	r3, r3, #8
 800069c:	704b      	strb	r3, [r1, #1]
 800069e:	88c3      	ldrh	r3, [r0, #6]
 80006a0:	708b      	strb	r3, [r1, #2]
 80006a2:	79c3      	ldrb	r3, [r0, #7]
 80006a4:	70cb      	strb	r3, [r1, #3]
 80006a6:	460d      	mov	r5, r1
 80006a8:	1d0a      	adds	r2, r1, #4
 80006aa:	4604      	mov	r4, r0
 80006ac:	2100      	movs	r1, #0
 80006ae:	6860      	ldr	r0, [r4, #4]
 80006b0:	4281      	cmp	r1, r0
 80006b2:	eba2 0305 	sub.w	r3, r2, r5
 80006b6:	f102 0204 	add.w	r2, r2, #4
 80006ba:	d20f      	bcs.n	80006dc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 80006bc:	68e3      	ldr	r3, [r4, #12]
 80006be:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80006c2:	f802 3c04 	strb.w	r3, [r2, #-4]
 80006c6:	0a18      	lsrs	r0, r3, #8
 80006c8:	f802 0c03 	strb.w	r0, [r2, #-3]
 80006cc:	0c18      	lsrs	r0, r3, #16
 80006ce:	0e1b      	lsrs	r3, r3, #24
 80006d0:	f802 0c02 	strb.w	r0, [r2, #-2]
 80006d4:	f802 3c01 	strb.w	r3, [r2, #-1]
 80006d8:	3101      	adds	r1, #1
 80006da:	e7e8      	b.n	80006ae <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 80006dc:	6922      	ldr	r2, [r4, #16]
 80006de:	54ea      	strb	r2, [r5, r3]
 80006e0:	6921      	ldr	r1, [r4, #16]
 80006e2:	18ea      	adds	r2, r5, r3
 80006e4:	0a09      	lsrs	r1, r1, #8
 80006e6:	7051      	strb	r1, [r2, #1]
 80006e8:	8a61      	ldrh	r1, [r4, #18]
 80006ea:	7091      	strb	r1, [r2, #2]
 80006ec:	7ce1      	ldrb	r1, [r4, #19]
 80006ee:	70d1      	strb	r1, [r2, #3]
 80006f0:	3304      	adds	r3, #4
 80006f2:	442b      	add	r3, r5
 80006f4:	2100      	movs	r1, #0
 80006f6:	6922      	ldr	r2, [r4, #16]
 80006f8:	4291      	cmp	r1, r2
 80006fa:	eba3 0605 	sub.w	r6, r3, r5
 80006fe:	f103 0304 	add.w	r3, r3, #4
 8000702:	d20f      	bcs.n	8000724 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000704:	69a2      	ldr	r2, [r4, #24]
 8000706:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800070a:	f803 2c04 	strb.w	r2, [r3, #-4]
 800070e:	0a10      	lsrs	r0, r2, #8
 8000710:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000714:	0c10      	lsrs	r0, r2, #16
 8000716:	0e12      	lsrs	r2, r2, #24
 8000718:	f803 0c02 	strb.w	r0, [r3, #-2]
 800071c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000720:	3101      	adds	r1, #1
 8000722:	e7e8      	b.n	80006f6 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000724:	69e3      	ldr	r3, [r4, #28]
 8000726:	55ab      	strb	r3, [r5, r6]
 8000728:	69e2      	ldr	r2, [r4, #28]
 800072a:	19ab      	adds	r3, r5, r6
 800072c:	0a12      	lsrs	r2, r2, #8
 800072e:	705a      	strb	r2, [r3, #1]
 8000730:	8be2      	ldrh	r2, [r4, #30]
 8000732:	709a      	strb	r2, [r3, #2]
 8000734:	7fe2      	ldrb	r2, [r4, #31]
 8000736:	70da      	strb	r2, [r3, #3]
 8000738:	3604      	adds	r6, #4
 800073a:	2700      	movs	r7, #0
 800073c:	69e3      	ldr	r3, [r4, #28]
 800073e:	429f      	cmp	r7, r3
 8000740:	d214      	bcs.n	800076c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 8000742:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000744:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000748:	f005 fea3 	bl	8006492 <strlen>
 800074c:	4680      	mov	r8, r0
 800074e:	4601      	mov	r1, r0
 8000750:	19a8      	adds	r0, r5, r6
 8000752:	f7ff ff93 	bl	800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000756:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000758:	3604      	adds	r6, #4
 800075a:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800075e:	19a8      	adds	r0, r5, r6
 8000760:	4642      	mov	r2, r8
 8000762:	f005 fba5 	bl	8005eb0 <memcpy>
 8000766:	4446      	add	r6, r8
 8000768:	3701      	adds	r7, #1
 800076a:	e7e7      	b.n	800073c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 800076c:	4630      	mov	r0, r6
 800076e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000772 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000772:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000774:	460e      	mov	r6, r1
 8000776:	7903      	ldrb	r3, [r0, #4]
 8000778:	f806 3b01 	strb.w	r3, [r6], #1
 800077c:	4605      	mov	r5, r0
 800077e:	6880      	ldr	r0, [r0, #8]
 8000780:	460f      	mov	r7, r1
 8000782:	f005 fe86 	bl	8006492 <strlen>
 8000786:	4604      	mov	r4, r0
 8000788:	4601      	mov	r1, r0
 800078a:	4630      	mov	r0, r6
 800078c:	f7ff ff76 	bl	800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000790:	4622      	mov	r2, r4
 8000792:	68a9      	ldr	r1, [r5, #8]
 8000794:	1d78      	adds	r0, r7, #5
 8000796:	f005 fb8b 	bl	8005eb0 <memcpy>
 800079a:	1d60      	adds	r0, r4, #5
 800079c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800079e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800079e:	8883      	ldrh	r3, [r0, #4]
 80007a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007a4:	700b      	strb	r3, [r1, #0]
 80007a6:	8883      	ldrh	r3, [r0, #4]
 80007a8:	0a1b      	lsrs	r3, r3, #8
 80007aa:	704b      	strb	r3, [r1, #1]
 80007ac:	4605      	mov	r5, r0
 80007ae:	6880      	ldr	r0, [r0, #8]
 80007b0:	460c      	mov	r4, r1
 80007b2:	f005 fe6e 	bl	8006492 <strlen>
 80007b6:	4607      	mov	r7, r0
 80007b8:	4601      	mov	r1, r0
 80007ba:	1ca0      	adds	r0, r4, #2
 80007bc:	f7ff ff5e 	bl	800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007c0:	463a      	mov	r2, r7
 80007c2:	68a9      	ldr	r1, [r5, #8]
 80007c4:	1da0      	adds	r0, r4, #6
 80007c6:	f005 fb73 	bl	8005eb0 <memcpy>
 80007ca:	68e8      	ldr	r0, [r5, #12]
 80007cc:	f005 fe61 	bl	8006492 <strlen>
 80007d0:	f107 0806 	add.w	r8, r7, #6
 80007d4:	4606      	mov	r6, r0
 80007d6:	4601      	mov	r1, r0
 80007d8:	370a      	adds	r7, #10
 80007da:	eb04 0008 	add.w	r0, r4, r8
 80007de:	f7ff ff4d 	bl	800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007e2:	4632      	mov	r2, r6
 80007e4:	68e9      	ldr	r1, [r5, #12]
 80007e6:	19e0      	adds	r0, r4, r7
 80007e8:	f005 fb62 	bl	8005eb0 <memcpy>
 80007ec:	6928      	ldr	r0, [r5, #16]
 80007ee:	f005 fe50 	bl	8006492 <strlen>
 80007f2:	443e      	add	r6, r7
 80007f4:	4601      	mov	r1, r0
 80007f6:	4607      	mov	r7, r0
 80007f8:	19a0      	adds	r0, r4, r6
 80007fa:	3604      	adds	r6, #4
 80007fc:	f7ff ff3e 	bl	800067c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000800:	463a      	mov	r2, r7
 8000802:	19a0      	adds	r0, r4, r6
 8000804:	6929      	ldr	r1, [r5, #16]
 8000806:	443e      	add	r6, r7
 8000808:	f005 fb52 	bl	8005eb0 <memcpy>
 800080c:	696b      	ldr	r3, [r5, #20]
 800080e:	55a3      	strb	r3, [r4, r6]
 8000810:	4434      	add	r4, r6
 8000812:	0a1a      	lsrs	r2, r3, #8
 8000814:	7062      	strb	r2, [r4, #1]
 8000816:	0c1a      	lsrs	r2, r3, #16
 8000818:	0e1b      	lsrs	r3, r3, #24
 800081a:	70a2      	strb	r2, [r4, #2]
 800081c:	70e3      	strb	r3, [r4, #3]
 800081e:	1d30      	adds	r0, r6, #4
 8000820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000824:	b510      	push	{r4, lr}
 8000826:	2300      	movs	r3, #0
 8000828:	6003      	str	r3, [r0, #0]
 800082a:	3901      	subs	r1, #1
 800082c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8000830:	fa02 f403 	lsl.w	r4, r2, r3
 8000834:	6802      	ldr	r2, [r0, #0]
 8000836:	3308      	adds	r3, #8
 8000838:	4322      	orrs	r2, r4
 800083a:	2b20      	cmp	r3, #32
 800083c:	6002      	str	r2, [r0, #0]
 800083e:	d1f5      	bne.n	800082c <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000840:	bd10      	pop	{r4, pc}

08000842 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000842:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000844:	460c      	mov	r4, r1
 8000846:	f811 3b01 	ldrb.w	r3, [r1], #1
 800084a:	7103      	strb	r3, [r0, #4]
 800084c:	4605      	mov	r5, r0
 800084e:	a801      	add	r0, sp, #4
 8000850:	f7ff ffe8 	bl	8000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000854:	9b01      	ldr	r3, [sp, #4]
 8000856:	1d62      	adds	r2, r4, #5
 8000858:	1d58      	adds	r0, r3, #5
 800085a:	1b11      	subs	r1, r2, r4
 800085c:	4288      	cmp	r0, r1
 800085e:	d904      	bls.n	800086a <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000860:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000864:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000868:	e7f7      	b.n	800085a <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 800086a:	4423      	add	r3, r4
 800086c:	2200      	movs	r2, #0
 800086e:	3404      	adds	r4, #4
 8000870:	711a      	strb	r2, [r3, #4]
 8000872:	60ac      	str	r4, [r5, #8]
 8000874:	b003      	add	sp, #12
 8000876:	bd30      	pop	{r4, r5, pc}

08000878 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000878:	b5f0      	push	{r4, r5, r6, r7, lr}
 800087a:	780b      	ldrb	r3, [r1, #0]
 800087c:	8083      	strh	r3, [r0, #4]
 800087e:	784a      	ldrb	r2, [r1, #1]
 8000880:	b085      	sub	sp, #20
 8000882:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000886:	8083      	strh	r3, [r0, #4]
 8000888:	460c      	mov	r4, r1
 800088a:	4606      	mov	r6, r0
 800088c:	3102      	adds	r1, #2
 800088e:	a801      	add	r0, sp, #4
 8000890:	f7ff ffc8 	bl	8000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000894:	9f01      	ldr	r7, [sp, #4]
 8000896:	1da3      	adds	r3, r4, #6
 8000898:	1dbd      	adds	r5, r7, #6
 800089a:	1b1a      	subs	r2, r3, r4
 800089c:	4295      	cmp	r5, r2
 800089e:	d904      	bls.n	80008aa <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 80008a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008a4:	f803 2c02 	strb.w	r2, [r3, #-2]
 80008a8:	e7f7      	b.n	800089a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 80008aa:	19e3      	adds	r3, r4, r7
 80008ac:	2200      	movs	r2, #0
 80008ae:	715a      	strb	r2, [r3, #5]
 80008b0:	1d63      	adds	r3, r4, #5
 80008b2:	60b3      	str	r3, [r6, #8]
 80008b4:	1961      	adds	r1, r4, r5
 80008b6:	a802      	add	r0, sp, #8
 80008b8:	f7ff ffb4 	bl	8000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008bc:	1d2b      	adds	r3, r5, #4
 80008be:	9d02      	ldr	r5, [sp, #8]
 80008c0:	f107 020a 	add.w	r2, r7, #10
 80008c4:	441d      	add	r5, r3
 80008c6:	4422      	add	r2, r4
 80008c8:	1b11      	subs	r1, r2, r4
 80008ca:	428d      	cmp	r5, r1
 80008cc:	d904      	bls.n	80008d8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 80008ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80008d2:	f802 1c02 	strb.w	r1, [r2, #-2]
 80008d6:	e7f7      	b.n	80008c8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 80008d8:	1961      	adds	r1, r4, r5
 80008da:	3b01      	subs	r3, #1
 80008dc:	4423      	add	r3, r4
 80008de:	2200      	movs	r2, #0
 80008e0:	f801 2c01 	strb.w	r2, [r1, #-1]
 80008e4:	a803      	add	r0, sp, #12
 80008e6:	60f3      	str	r3, [r6, #12]
 80008e8:	f7ff ff9c 	bl	8000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008ec:	9803      	ldr	r0, [sp, #12]
 80008ee:	3504      	adds	r5, #4
 80008f0:	4428      	add	r0, r5
 80008f2:	1963      	adds	r3, r4, r5
 80008f4:	1b1a      	subs	r2, r3, r4
 80008f6:	4290      	cmp	r0, r2
 80008f8:	d904      	bls.n	8000904 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 80008fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008fe:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000902:	e7f7      	b.n	80008f4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000904:	1822      	adds	r2, r4, r0
 8000906:	3d01      	subs	r5, #1
 8000908:	2300      	movs	r3, #0
 800090a:	4425      	add	r5, r4
 800090c:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000910:	6135      	str	r5, [r6, #16]
 8000912:	7893      	ldrb	r3, [r2, #2]
 8000914:	7851      	ldrb	r1, [r2, #1]
 8000916:	78d2      	ldrb	r2, [r2, #3]
 8000918:	041b      	lsls	r3, r3, #16
 800091a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800091e:	5c21      	ldrb	r1, [r4, r0]
 8000920:	430b      	orrs	r3, r1
 8000922:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000926:	3004      	adds	r0, #4
 8000928:	6173      	str	r3, [r6, #20]
 800092a:	b005      	add	sp, #20
 800092c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800092e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 800092e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000932:	6843      	ldr	r3, [r0, #4]
 8000934:	680d      	ldr	r5, [r1, #0]
 8000936:	429d      	cmp	r5, r3
 8000938:	4604      	mov	r4, r0
 800093a:	460e      	mov	r6, r1
 800093c:	d904      	bls.n	8000948 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 800093e:	00a9      	lsls	r1, r5, #2
 8000940:	68c0      	ldr	r0, [r0, #12]
 8000942:	f005 fd4b 	bl	80063dc <realloc>
 8000946:	60e0      	str	r0, [r4, #12]
 8000948:	6065      	str	r5, [r4, #4]
 800094a:	1d32      	adds	r2, r6, #4
 800094c:	2100      	movs	r1, #0
 800094e:	6860      	ldr	r0, [r4, #4]
 8000950:	4281      	cmp	r1, r0
 8000952:	eba2 0306 	sub.w	r3, r2, r6
 8000956:	f102 0204 	add.w	r2, r2, #4
 800095a:	d213      	bcs.n	8000984 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 800095c:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000960:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000964:	041b      	lsls	r3, r3, #16
 8000966:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800096a:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 800096e:	4303      	orrs	r3, r0
 8000970:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000974:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000978:	68e0      	ldr	r0, [r4, #12]
 800097a:	60a3      	str	r3, [r4, #8]
 800097c:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000980:	3101      	adds	r1, #1
 8000982:	e7e4      	b.n	800094e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000984:	18f2      	adds	r2, r6, r3
 8000986:	5cf1      	ldrb	r1, [r6, r3]
 8000988:	7895      	ldrb	r5, [r2, #2]
 800098a:	7850      	ldrb	r0, [r2, #1]
 800098c:	78d2      	ldrb	r2, [r2, #3]
 800098e:	042d      	lsls	r5, r5, #16
 8000990:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000994:	430d      	orrs	r5, r1
 8000996:	1d1f      	adds	r7, r3, #4
 8000998:	6923      	ldr	r3, [r4, #16]
 800099a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800099e:	429d      	cmp	r5, r3
 80009a0:	d904      	bls.n	80009ac <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 80009a2:	00a9      	lsls	r1, r5, #2
 80009a4:	69a0      	ldr	r0, [r4, #24]
 80009a6:	f005 fd19 	bl	80063dc <realloc>
 80009aa:	61a0      	str	r0, [r4, #24]
 80009ac:	6125      	str	r5, [r4, #16]
 80009ae:	19f3      	adds	r3, r6, r7
 80009b0:	2100      	movs	r1, #0
 80009b2:	6922      	ldr	r2, [r4, #16]
 80009b4:	4291      	cmp	r1, r2
 80009b6:	eba3 0506 	sub.w	r5, r3, r6
 80009ba:	f103 0304 	add.w	r3, r3, #4
 80009be:	d213      	bcs.n	80009e8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 80009c0:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 80009c4:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 80009c8:	0412      	lsls	r2, r2, #16
 80009ca:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80009ce:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 80009d2:	4302      	orrs	r2, r0
 80009d4:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 80009d8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80009dc:	69a0      	ldr	r0, [r4, #24]
 80009de:	6162      	str	r2, [r4, #20]
 80009e0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 80009e4:	3101      	adds	r1, #1
 80009e6:	e7e4      	b.n	80009b2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 80009e8:	1973      	adds	r3, r6, r5
 80009ea:	5d72      	ldrb	r2, [r6, r5]
 80009ec:	789f      	ldrb	r7, [r3, #2]
 80009ee:	7859      	ldrb	r1, [r3, #1]
 80009f0:	78db      	ldrb	r3, [r3, #3]
 80009f2:	043f      	lsls	r7, r7, #16
 80009f4:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80009f8:	4317      	orrs	r7, r2
 80009fa:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80009fe:	69e3      	ldr	r3, [r4, #28]
 8000a00:	429f      	cmp	r7, r3
 8000a02:	f105 0504 	add.w	r5, r5, #4
 8000a06:	d904      	bls.n	8000a12 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000a08:	00b9      	lsls	r1, r7, #2
 8000a0a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a0c:	f005 fce6 	bl	80063dc <realloc>
 8000a10:	6260      	str	r0, [r4, #36]	; 0x24
 8000a12:	61e7      	str	r7, [r4, #28]
 8000a14:	2700      	movs	r7, #0
 8000a16:	46b8      	mov	r8, r7
 8000a18:	69e3      	ldr	r3, [r4, #28]
 8000a1a:	429f      	cmp	r7, r3
 8000a1c:	d21a      	bcs.n	8000a54 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000a1e:	1971      	adds	r1, r6, r5
 8000a20:	a801      	add	r0, sp, #4
 8000a22:	f7ff feff 	bl	8000824 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000a26:	1d2b      	adds	r3, r5, #4
 8000a28:	9d01      	ldr	r5, [sp, #4]
 8000a2a:	18f2      	adds	r2, r6, r3
 8000a2c:	441d      	add	r5, r3
 8000a2e:	1b91      	subs	r1, r2, r6
 8000a30:	42a9      	cmp	r1, r5
 8000a32:	d204      	bcs.n	8000a3e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000a34:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000a38:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000a3c:	e7f7      	b.n	8000a2e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000a3e:	1972      	adds	r2, r6, r5
 8000a40:	3b01      	subs	r3, #1
 8000a42:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000a46:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000a48:	4433      	add	r3, r6
 8000a4a:	6223      	str	r3, [r4, #32]
 8000a4c:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000a50:	3701      	adds	r7, #1
 8000a52:	e7e1      	b.n	8000a18 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000a54:	4628      	mov	r0, r5
 8000a56:	b002      	add	sp, #8
 8000a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000a5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>:
 8000a5c:	b510      	push	{r4, lr}
 8000a5e:	f200 429c 	addw	r2, r0, #1180	; 0x49c
 8000a62:	2300      	movs	r3, #0
 8000a64:	f852 4b04 	ldr.w	r4, [r2], #4
 8000a68:	b944      	cbnz	r4, 8000a7c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x20>
 8000a6a:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8000a6e:	337d      	adds	r3, #125	; 0x7d
 8000a70:	f8c2 149c 	str.w	r1, [r2, #1180]	; 0x49c
 8000a74:	60c8      	str	r0, [r1, #12]
 8000a76:	608b      	str	r3, [r1, #8]
 8000a78:	2001      	movs	r0, #1
 8000a7a:	bd10      	pop	{r4, pc}
 8000a7c:	3301      	adds	r3, #1
 8000a7e:	2b19      	cmp	r3, #25
 8000a80:	d1f0      	bne.n	8000a64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x8>
 8000a82:	2000      	movs	r0, #0
 8000a84:	bd10      	pop	{r4, pc}

08000a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000a86:	b510      	push	{r4, lr}
 8000a88:	f500 62a0 	add.w	r2, r0, #1280	; 0x500
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	f852 4b04 	ldr.w	r4, [r2], #4
 8000a92:	b93c      	cbnz	r4, 8000aa4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000a94:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 8000a98:	3364      	adds	r3, #100	; 0x64
 8000a9a:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000a9e:	604b      	str	r3, [r1, #4]
 8000aa0:	2001      	movs	r0, #1
 8000aa2:	bd10      	pop	{r4, pc}
 8000aa4:	3301      	adds	r3, #1
 8000aa6:	2b19      	cmp	r3, #25
 8000aa8:	d1f1      	bne.n	8000a8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000aaa:	2000      	movs	r0, #0
 8000aac:	bd10      	pop	{r4, pc}

08000aae <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>:
 8000aae:	b570      	push	{r4, r5, r6, lr}
 8000ab0:	460c      	mov	r4, r1
 8000ab2:	3114      	adds	r1, #20
 8000ab4:	4606      	mov	r6, r0
 8000ab6:	f7ff ffd1 	bl	8000a5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000aba:	4621      	mov	r1, r4
 8000abc:	4605      	mov	r5, r0
 8000abe:	4630      	mov	r0, r6
 8000ac0:	f7ff ffe1 	bl	8000a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000ac4:	2d00      	cmp	r5, #0
 8000ac6:	bf08      	it	eq
 8000ac8:	2000      	moveq	r0, #0
 8000aca:	bd70      	pop	{r4, r5, r6, pc}

08000acc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000acc:	b530      	push	{r4, r5, lr}
 8000ace:	b085      	sub	sp, #20
 8000ad0:	4604      	mov	r4, r0
 8000ad2:	4b09      	ldr	r3, [pc, #36]	; (8000af8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000ad4:	9301      	str	r3, [sp, #4]
 8000ad6:	2300      	movs	r3, #0
 8000ad8:	9302      	str	r3, [sp, #8]
 8000ada:	9303      	str	r3, [sp, #12]
 8000adc:	f854 3b7c 	ldr.w	r3, [r4], #124
 8000ae0:	aa01      	add	r2, sp, #4
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	210a      	movs	r1, #10
 8000ae6:	4605      	mov	r5, r0
 8000ae8:	4798      	blx	r3
 8000aea:	4620      	mov	r0, r4
 8000aec:	f004 f997 	bl	8004e1e <mbed::Timer::read_ms()>
 8000af0:	f8c5 008c 	str.w	r0, [r5, #140]	; 0x8c
 8000af4:	b005      	add	sp, #20
 8000af6:	bd30      	pop	{r4, r5, pc}
 8000af8:	080068f0 	.word	0x080068f0

08000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000afc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b00:	b086      	sub	sp, #24
 8000b02:	4b2b      	ldr	r3, [pc, #172]	; (8000bb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000b04:	9300      	str	r3, [sp, #0]
 8000b06:	2200      	movs	r2, #0
 8000b08:	4b2a      	ldr	r3, [pc, #168]	; (8000bb4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000b0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b0e:	4605      	mov	r5, r0
 8000b10:	9302      	str	r3, [sp, #8]
 8000b12:	9303      	str	r3, [sp, #12]
 8000b14:	9304      	str	r3, [sp, #16]
 8000b16:	9205      	str	r2, [sp, #20]
 8000b18:	f200 449c 	addw	r4, r0, #1180	; 0x49c
 8000b1c:	f500 66a0 	add.w	r6, r0, #1280	; 0x500
 8000b20:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b24:	6823      	ldr	r3, [r4, #0]
 8000b26:	b1bb      	cbz	r3, 8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000b28:	6858      	ldr	r0, [r3, #4]
 8000b2a:	689a      	ldr	r2, [r3, #8]
 8000b2c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b30:	681a      	ldr	r2, [r3, #0]
 8000b32:	6803      	ldr	r3, [r0, #0]
 8000b34:	9202      	str	r2, [sp, #8]
 8000b36:	689b      	ldr	r3, [r3, #8]
 8000b38:	4798      	blx	r3
 8000b3a:	6823      	ldr	r3, [r4, #0]
 8000b3c:	9003      	str	r0, [sp, #12]
 8000b3e:	6858      	ldr	r0, [r3, #4]
 8000b40:	6803      	ldr	r3, [r0, #0]
 8000b42:	68db      	ldr	r3, [r3, #12]
 8000b44:	4798      	blx	r3
 8000b46:	6821      	ldr	r1, [r4, #0]
 8000b48:	682b      	ldr	r3, [r5, #0]
 8000b4a:	9004      	str	r0, [sp, #16]
 8000b4c:	9705      	str	r7, [sp, #20]
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	6909      	ldr	r1, [r1, #16]
 8000b52:	466a      	mov	r2, sp
 8000b54:	4628      	mov	r0, r5
 8000b56:	4798      	blx	r3
 8000b58:	3404      	adds	r4, #4
 8000b5a:	42b4      	cmp	r4, r6
 8000b5c:	d1e2      	bne.n	8000b24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000b5e:	f205 5664 	addw	r6, r5, #1380	; 0x564
 8000b62:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b66:	6820      	ldr	r0, [r4, #0]
 8000b68:	b1c8      	cbz	r0, 8000b9e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000b6a:	6843      	ldr	r3, [r0, #4]
 8000b6c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000b70:	6883      	ldr	r3, [r0, #8]
 8000b72:	9302      	str	r3, [sp, #8]
 8000b74:	6803      	ldr	r3, [r0, #0]
 8000b76:	689b      	ldr	r3, [r3, #8]
 8000b78:	4798      	blx	r3
 8000b7a:	9003      	str	r0, [sp, #12]
 8000b7c:	6820      	ldr	r0, [r4, #0]
 8000b7e:	6803      	ldr	r3, [r0, #0]
 8000b80:	68db      	ldr	r3, [r3, #12]
 8000b82:	4798      	blx	r3
 8000b84:	682b      	ldr	r3, [r5, #0]
 8000b86:	9004      	str	r0, [sp, #16]
 8000b88:	6820      	ldr	r0, [r4, #0]
 8000b8a:	f8d3 8000 	ldr.w	r8, [r3]
 8000b8e:	6803      	ldr	r3, [r0, #0]
 8000b90:	9705      	str	r7, [sp, #20]
 8000b92:	685b      	ldr	r3, [r3, #4]
 8000b94:	4798      	blx	r3
 8000b96:	466a      	mov	r2, sp
 8000b98:	4601      	mov	r1, r0
 8000b9a:	4628      	mov	r0, r5
 8000b9c:	47c0      	blx	r8
 8000b9e:	3404      	adds	r4, #4
 8000ba0:	42a6      	cmp	r6, r4
 8000ba2:	d1e0      	bne.n	8000b66 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000ba4:	2301      	movs	r3, #1
 8000ba6:	f885 3578 	strb.w	r3, [r5, #1400]	; 0x578
 8000baa:	b006      	add	sp, #24
 8000bac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bb0:	08006908 	.word	0x08006908
 8000bb4:	08006d11 	.word	0x08006d11

08000bb8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bba:	b085      	sub	sp, #20
 8000bbc:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8000bc0:	4b1e      	ldr	r3, [pc, #120]	; (8000c3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
 8000bc2:	9301      	str	r3, [sp, #4]
 8000bc4:	4604      	mov	r4, r0
 8000bc6:	2300      	movs	r3, #0
 8000bc8:	4628      	mov	r0, r5
 8000bca:	9302      	str	r3, [sp, #8]
 8000bcc:	9303      	str	r3, [sp, #12]
 8000bce:	460e      	mov	r6, r1
 8000bd0:	f004 f925 	bl	8004e1e <mbed::Timer::read_ms()>
 8000bd4:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8000bd8:	4631      	mov	r1, r6
 8000bda:	1a87      	subs	r7, r0, r2
 8000bdc:	a801      	add	r0, sp, #4
 8000bde:	f7ff fb1d 	bl	800021c <std_msgs::Time::deserialize(unsigned char*)>
 8000be2:	9b02      	ldr	r3, [sp, #8]
 8000be4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000be8:	fbb7 f2f6 	udiv	r2, r7, r6
 8000bec:	4413      	add	r3, r2
 8000bee:	9302      	str	r3, [sp, #8]
 8000bf0:	fb06 7212 	mls	r2, r6, r2, r7
 8000bf4:	9b03      	ldr	r3, [sp, #12]
 8000bf6:	4f12      	ldr	r7, [pc, #72]	; (8000c40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000bf8:	4628      	mov	r0, r5
 8000bfa:	fb07 3202 	mla	r2, r7, r2, r3
 8000bfe:	9203      	str	r2, [sp, #12]
 8000c00:	f004 f90d 	bl	8004e1e <mbed::Timer::read_ms()>
 8000c04:	9a02      	ldr	r2, [sp, #8]
 8000c06:	fbb0 f3f6 	udiv	r3, r0, r6
 8000c0a:	3a01      	subs	r2, #1
 8000c0c:	1ad2      	subs	r2, r2, r3
 8000c0e:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8000c12:	9903      	ldr	r1, [sp, #12]
 8000c14:	4a0b      	ldr	r2, [pc, #44]	; (8000c44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000c16:	fb06 0313 	mls	r3, r6, r3, r0
 8000c1a:	440a      	add	r2, r1
 8000c1c:	4621      	mov	r1, r4
 8000c1e:	fb07 2313 	mls	r3, r7, r3, r2
 8000c22:	f841 3f94 	str.w	r3, [r1, #148]!
 8000c26:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000c2a:	f000 fb03 	bl	8001234 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000c2e:	4628      	mov	r0, r5
 8000c30:	f004 f8f5 	bl	8004e1e <mbed::Timer::read_ms()>
 8000c34:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8000c38:	b005      	add	sp, #20
 8000c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c3c:	080068f0 	.word	0x080068f0
 8000c40:	000f4240 	.word	0x000f4240
 8000c44:	3b9aca00 	.word	0x3b9aca00

08000c48 <_GLOBAL__sub_I_can>:
 8000c48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c4a:	4c6c      	ldr	r4, [pc, #432]	; (8000dfc <_GLOBAL__sub_I_can+0x1b4>)
 8000c4c:	4f6c      	ldr	r7, [pc, #432]	; (8000e00 <_GLOBAL__sub_I_can+0x1b8>)
 8000c4e:	220c      	movs	r2, #12
 8000c50:	210b      	movs	r1, #11
 8000c52:	4620      	mov	r0, r4
 8000c54:	f004 f9ba 	bl	8004fcc <mbed::CAN::CAN(PinName, PinName)>
 8000c58:	4620      	mov	r0, r4
 8000c5a:	4c6a      	ldr	r4, [pc, #424]	; (8000e04 <_GLOBAL__sub_I_can+0x1bc>)
 8000c5c:	496a      	ldr	r1, [pc, #424]	; (8000e08 <_GLOBAL__sub_I_can+0x1c0>)
 8000c5e:	463a      	mov	r2, r7
 8000c60:	f004 fc1a 	bl	8005498 <__aeabi_atexit>
 8000c64:	221c      	movs	r2, #28
 8000c66:	2100      	movs	r1, #0
 8000c68:	4620      	mov	r0, r4
 8000c6a:	f005 f946 	bl	8005efa <memset>
 8000c6e:	4620      	mov	r0, r4
 8000c70:	4c66      	ldr	r4, [pc, #408]	; (8000e0c <_GLOBAL__sub_I_can+0x1c4>)
 8000c72:	2113      	movs	r1, #19
 8000c74:	f000 fe45 	bl	8001902 <gpio_init_out>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	4b65      	ldr	r3, [pc, #404]	; (8000e10 <_GLOBAL__sub_I_can+0x1c8>)
 8000c7c:	f840 3b04 	str.w	r3, [r0], #4
 8000c80:	2500      	movs	r5, #0
 8000c82:	2304      	movs	r3, #4
 8000c84:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000c88:	220f      	movs	r2, #15
 8000c8a:	2102      	movs	r1, #2
 8000c8c:	f104 067c 	add.w	r6, r4, #124	; 0x7c
 8000c90:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000c94:	f000 fba2 	bl	80013dc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000c98:	4630      	mov	r0, r6
 8000c9a:	f004 f8d6 	bl	8004e4a <mbed::Timer::Timer()>
 8000c9e:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000ca2:	67a3      	str	r3, [r4, #120]	; 0x78
 8000ca4:	4630      	mov	r0, r6
 8000ca6:	f44f 7600 	mov.w	r6, #512	; 0x200
 8000caa:	f004 f88c 	bl	8004dc6 <mbed::Timer::start()>
 8000cae:	4632      	mov	r2, r6
 8000cb0:	4629      	mov	r1, r5
 8000cb2:	f104 009c 	add.w	r0, r4, #156	; 0x9c
 8000cb6:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8000cba:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
 8000cbe:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8000cc2:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8000cc6:	f005 f918 	bl	8005efa <memset>
 8000cca:	4632      	mov	r2, r6
 8000ccc:	4629      	mov	r1, r5
 8000cce:	2664      	movs	r6, #100	; 0x64
 8000cd0:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8000cd4:	f005 f911 	bl	8005efa <memset>
 8000cd8:	4632      	mov	r2, r6
 8000cda:	4629      	mov	r1, r5
 8000cdc:	f204 409c 	addw	r0, r4, #1180	; 0x49c
 8000ce0:	f005 f90b 	bl	8005efa <memset>
 8000ce4:	4632      	mov	r2, r6
 8000ce6:	4629      	mov	r1, r5
 8000ce8:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 8000cec:	f005 f905 	bl	8005efa <memset>
 8000cf0:	4b48      	ldr	r3, [pc, #288]	; (8000e14 <_GLOBAL__sub_I_can+0x1cc>)
 8000cf2:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8000cf6:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
 8000cfa:	2600      	movs	r6, #0
 8000cfc:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 8000d00:	f8c4 5594 	str.w	r5, [r4, #1428]	; 0x594
 8000d04:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8000d08:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8000d0c:	601e      	str	r6, [r3, #0]
 8000d0e:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8000d12:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 8000d16:	f8c4 55ac 	str.w	r5, [r4, #1452]	; 0x5ac
 8000d1a:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 8000d1e:	463a      	mov	r2, r7
 8000d20:	493d      	ldr	r1, [pc, #244]	; (8000e18 <_GLOBAL__sub_I_can+0x1d0>)
 8000d22:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
 8000d26:	4620      	mov	r0, r4
 8000d28:	f8c4 5568 	str.w	r5, [r4, #1384]	; 0x568
 8000d2c:	f8c4 556c 	str.w	r5, [r4, #1388]	; 0x56c
 8000d30:	f8c4 5570 	str.w	r5, [r4, #1392]	; 0x570
 8000d34:	f8c4 5574 	str.w	r5, [r4, #1396]	; 0x574
 8000d38:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8000d3c:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000d40:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000d44:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8000d48:	f884 5588 	strb.w	r5, [r4, #1416]	; 0x588
 8000d4c:	f004 fba4 	bl	8005498 <__aeabi_atexit>
 8000d50:	4b32      	ldr	r3, [pc, #200]	; (8000e1c <_GLOBAL__sub_I_can+0x1d4>)
 8000d52:	4a33      	ldr	r2, [pc, #204]	; (8000e20 <_GLOBAL__sub_I_can+0x1d8>)
 8000d54:	601a      	str	r2, [r3, #0]
 8000d56:	4933      	ldr	r1, [pc, #204]	; (8000e24 <_GLOBAL__sub_I_can+0x1dc>)
 8000d58:	4a33      	ldr	r2, [pc, #204]	; (8000e28 <_GLOBAL__sub_I_can+0x1e0>)
 8000d5a:	60de      	str	r6, [r3, #12]
 8000d5c:	609e      	str	r6, [r3, #8]
 8000d5e:	611e      	str	r6, [r3, #16]
 8000d60:	e882 000a 	stmia.w	r2, {r1, r3}
 8000d64:	711d      	strb	r5, [r3, #4]
 8000d66:	4b31      	ldr	r3, [pc, #196]	; (8000e2c <_GLOBAL__sub_I_can+0x1e4>)
 8000d68:	6115      	str	r5, [r2, #16]
 8000d6a:	4a31      	ldr	r2, [pc, #196]	; (8000e30 <_GLOBAL__sub_I_can+0x1e8>)
 8000d6c:	601a      	str	r2, [r3, #0]
 8000d6e:	4a31      	ldr	r2, [pc, #196]	; (8000e34 <_GLOBAL__sub_I_can+0x1ec>)
 8000d70:	60da      	str	r2, [r3, #12]
 8000d72:	4a31      	ldr	r2, [pc, #196]	; (8000e38 <_GLOBAL__sub_I_can+0x1f0>)
 8000d74:	629a      	str	r2, [r3, #40]	; 0x28
 8000d76:	2201      	movs	r2, #1
 8000d78:	62da      	str	r2, [r3, #44]	; 0x2c
 8000d7a:	4a30      	ldr	r2, [pc, #192]	; (8000e3c <_GLOBAL__sub_I_can+0x1f4>)
 8000d7c:	741d      	strb	r5, [r3, #16]
 8000d7e:	619e      	str	r6, [r3, #24]
 8000d80:	61de      	str	r6, [r3, #28]
 8000d82:	621e      	str	r6, [r3, #32]
 8000d84:	625e      	str	r6, [r3, #36]	; 0x24
 8000d86:	609a      	str	r2, [r3, #8]
 8000d88:	615e      	str	r6, [r3, #20]
 8000d8a:	4b2d      	ldr	r3, [pc, #180]	; (8000e40 <_GLOBAL__sub_I_can+0x1f8>)
 8000d8c:	4a2d      	ldr	r2, [pc, #180]	; (8000e44 <_GLOBAL__sub_I_can+0x1fc>)
 8000d8e:	601a      	str	r2, [r3, #0]
 8000d90:	4a2d      	ldr	r2, [pc, #180]	; (8000e48 <_GLOBAL__sub_I_can+0x200>)
 8000d92:	60da      	str	r2, [r3, #12]
 8000d94:	2000      	movs	r0, #0
 8000d96:	2100      	movs	r1, #0
 8000d98:	4a2c      	ldr	r2, [pc, #176]	; (8000e4c <_GLOBAL__sub_I_can+0x204>)
 8000d9a:	611a      	str	r2, [r3, #16]
 8000d9c:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000da0:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000da4:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000da8:	f103 0210 	add.w	r2, r3, #16
 8000dac:	4928      	ldr	r1, [pc, #160]	; (8000e50 <_GLOBAL__sub_I_can+0x208>)
 8000dae:	6319      	str	r1, [r3, #48]	; 0x30
 8000db0:	635a      	str	r2, [r3, #52]	; 0x34
 8000db2:	6099      	str	r1, [r3, #8]
 8000db4:	2202      	movs	r2, #2
 8000db6:	4927      	ldr	r1, [pc, #156]	; (8000e54 <_GLOBAL__sub_I_can+0x20c>)
 8000db8:	641a      	str	r2, [r3, #64]	; 0x40
 8000dba:	6459      	str	r1, [r3, #68]	; 0x44
 8000dbc:	4b26      	ldr	r3, [pc, #152]	; (8000e58 <_GLOBAL__sub_I_can+0x210>)
 8000dbe:	4c27      	ldr	r4, [pc, #156]	; (8000e5c <_GLOBAL__sub_I_can+0x214>)
 8000dc0:	4827      	ldr	r0, [pc, #156]	; (8000e60 <_GLOBAL__sub_I_can+0x218>)
 8000dc2:	4928      	ldr	r1, [pc, #160]	; (8000e64 <_GLOBAL__sub_I_can+0x21c>)
 8000dc4:	4d28      	ldr	r5, [pc, #160]	; (8000e68 <_GLOBAL__sub_I_can+0x220>)
 8000dc6:	601c      	str	r4, [r3, #0]
 8000dc8:	60d8      	str	r0, [r3, #12]
 8000dca:	f103 0610 	add.w	r6, r3, #16
 8000dce:	6119      	str	r1, [r3, #16]
 8000dd0:	615d      	str	r5, [r3, #20]
 8000dd2:	609d      	str	r5, [r3, #8]
 8000dd4:	4d25      	ldr	r5, [pc, #148]	; (8000e6c <_GLOBAL__sub_I_can+0x224>)
 8000dd6:	625a      	str	r2, [r3, #36]	; 0x24
 8000dd8:	619e      	str	r6, [r3, #24]
 8000dda:	629d      	str	r5, [r3, #40]	; 0x28
 8000ddc:	4b24      	ldr	r3, [pc, #144]	; (8000e70 <_GLOBAL__sub_I_can+0x228>)
 8000dde:	6119      	str	r1, [r3, #16]
 8000de0:	625a      	str	r2, [r3, #36]	; 0x24
 8000de2:	4924      	ldr	r1, [pc, #144]	; (8000e74 <_GLOBAL__sub_I_can+0x22c>)
 8000de4:	4a24      	ldr	r2, [pc, #144]	; (8000e78 <_GLOBAL__sub_I_can+0x230>)
 8000de6:	60d8      	str	r0, [r3, #12]
 8000de8:	f103 0010 	add.w	r0, r3, #16
 8000dec:	601c      	str	r4, [r3, #0]
 8000dee:	6159      	str	r1, [r3, #20]
 8000df0:	6198      	str	r0, [r3, #24]
 8000df2:	6099      	str	r1, [r3, #8]
 8000df4:	629a      	str	r2, [r3, #40]	; 0x28
 8000df6:	b003      	add	sp, #12
 8000df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000dfa:	bf00      	nop
 8000dfc:	20000244 	.word	0x20000244
 8000e00:	20000188 	.word	0x20000188
 8000e04:	200003c4 	.word	0x200003c4
 8000e08:	08004f55 	.word	0x08004f55
 8000e0c:	200003e0 	.word	0x200003e0
 8000e10:	080069e0 	.word	0x080069e0
 8000e14:	08006938 	.word	0x08006938
 8000e18:	080011f5 	.word	0x080011f5
 8000e1c:	2000039c 	.word	0x2000039c
 8000e20:	080069c8 	.word	0x080069c8
 8000e24:	08006a40 	.word	0x08006a40
 8000e28:	200003b0 	.word	0x200003b0
 8000e2c:	2000036c 	.word	0x2000036c
 8000e30:	080069f4 	.word	0x080069f4
 8000e34:	080069b0 	.word	0x080069b0
 8000e38:	08000555 	.word	0x08000555
 8000e3c:	08006a4c 	.word	0x08006a4c
 8000e40:	200002f8 	.word	0x200002f8
 8000e44:	08006a0c 	.word	0x08006a0c
 8000e48:	08006980 	.word	0x08006980
 8000e4c:	08006998 	.word	0x08006998
 8000e50:	08006a56 	.word	0x08006a56
 8000e54:	080005ed 	.word	0x080005ed
 8000e58:	20000340 	.word	0x20000340
 8000e5c:	08006a24 	.word	0x08006a24
 8000e60:	08006950 	.word	0x08006950
 8000e64:	08006968 	.word	0x08006968
 8000e68:	08006a69 	.word	0x08006a69
 8000e6c:	080004d5 	.word	0x080004d5
 8000e70:	20000994 	.word	0x20000994
 8000e74:	08006a7b 	.word	0x08006a7b
 8000e78:	080004e1 	.word	0x080004e1

08000e7c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e7e:	2963      	cmp	r1, #99	; 0x63
 8000e80:	b085      	sub	sp, #20
 8000e82:	4604      	mov	r4, r0
 8000e84:	460e      	mov	r6, r1
 8000e86:	dd03      	ble.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000e88:	f890 5578 	ldrb.w	r5, [r0, #1400]	; 0x578
 8000e8c:	2d00      	cmp	r5, #0
 8000e8e:	d04d      	beq.n	8000f2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000e90:	6813      	ldr	r3, [r2, #0]
 8000e92:	f204 21a3 	addw	r1, r4, #675	; 0x2a3
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	4610      	mov	r0, r2
 8000e9a:	4798      	blx	r3
 8000e9c:	23ff      	movs	r3, #255	; 0xff
 8000e9e:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8000ea2:	23fe      	movs	r3, #254	; 0xfe
 8000ea4:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000ea8:	f884 329d 	strb.w	r3, [r4, #669]	; 0x29d
 8000eac:	b2c3      	uxtb	r3, r0
 8000eae:	f884 329e 	strb.w	r3, [r4, #670]	; 0x29e
 8000eb2:	4413      	add	r3, r2
 8000eb4:	43db      	mvns	r3, r3
 8000eb6:	f884 62a1 	strb.w	r6, [r4, #673]	; 0x2a1
 8000eba:	f346 2607 	sbfx	r6, r6, #8, #8
 8000ebe:	f884 229f 	strb.w	r2, [r4, #671]	; 0x29f
 8000ec2:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 8000ec6:	f884 62a2 	strb.w	r6, [r4, #674]	; 0x2a2
 8000eca:	f204 21a1 	addw	r1, r4, #673	; 0x2a1
 8000ece:	2205      	movs	r2, #5
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	1d86      	adds	r6, r0, #6
 8000ed4:	42b2      	cmp	r2, r6
 8000ed6:	dc04      	bgt.n	8000ee2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000ed8:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000edc:	3201      	adds	r2, #1
 8000ede:	442b      	add	r3, r5
 8000ee0:	e7f8      	b.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000ee2:	f100 0508 	add.w	r5, r0, #8
 8000ee6:	4420      	add	r0, r4
 8000ee8:	43db      	mvns	r3, r3
 8000eea:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000eee:	f880 32a3 	strb.w	r3, [r0, #675]	; 0x2a3
 8000ef2:	dc0c      	bgt.n	8000f0e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000ef4:	f504 7727 	add.w	r7, r4, #668	; 0x29c
 8000ef8:	463e      	mov	r6, r7
 8000efa:	3404      	adds	r4, #4
 8000efc:	1bf3      	subs	r3, r6, r7
 8000efe:	429d      	cmp	r5, r3
 8000f00:	dd14      	ble.n	8000f2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000f02:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000f06:	4620      	mov	r0, r4
 8000f08:	f000 fad5 	bl	80014b6 <BufferedSerial::putc(int)>
 8000f0c:	e7f6      	b.n	8000efc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000f0e:	4b09      	ldr	r3, [pc, #36]	; (8000f34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000f10:	9301      	str	r3, [sp, #4]
 8000f12:	2303      	movs	r3, #3
 8000f14:	f88d 3008 	strb.w	r3, [sp, #8]
 8000f18:	4b07      	ldr	r3, [pc, #28]	; (8000f38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000f1a:	9303      	str	r3, [sp, #12]
 8000f1c:	6823      	ldr	r3, [r4, #0]
 8000f1e:	aa01      	add	r2, sp, #4
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	2107      	movs	r1, #7
 8000f24:	4620      	mov	r0, r4
 8000f26:	4798      	blx	r3
 8000f28:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000f2c:	4628      	mov	r0, r5
 8000f2e:	b005      	add	sp, #20
 8000f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f32:	bf00      	nop
 8000f34:	08006920 	.word	0x08006920
 8000f38:	08006bf8 	.word	0x08006bf8

08000f3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000f3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000f40:	f100 087c 	add.w	r8, r0, #124	; 0x7c
 8000f44:	4604      	mov	r4, r0
 8000f46:	4640      	mov	r0, r8
 8000f48:	f003 ff69 	bl	8004e1e <mbed::Timer::read_ms()>
 8000f4c:	f8d4 3580 	ldr.w	r3, [r4, #1408]	; 0x580
 8000f50:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000f54:	1ac3      	subs	r3, r0, r3
 8000f56:	4293      	cmp	r3, r2
 8000f58:	bf84      	itt	hi
 8000f5a:	2300      	movhi	r3, #0
 8000f5c:	f884 3578 	strbhi.w	r3, [r4, #1400]	; 0x578
 8000f60:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
 8000f64:	4605      	mov	r5, r0
 8000f66:	b133      	cbz	r3, 8000f76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000f68:	f8d4 3584 	ldr.w	r3, [r4, #1412]	; 0x584
 8000f6c:	4283      	cmp	r3, r0
 8000f6e:	bf3c      	itt	cc
 8000f70:	2300      	movcc	r3, #0
 8000f72:	f8c4 3564 	strcc.w	r3, [r4, #1380]	; 0x564
 8000f76:	f104 0904 	add.w	r9, r4, #4
 8000f7a:	2600      	movs	r6, #0
 8000f7c:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8000f80:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000f84:	b9ab      	cbnz	r3, 8000fb2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000f86:	4648      	mov	r0, r9
 8000f88:	f000 f962 	bl	8001250 <BufferedSerial::readable()>
 8000f8c:	b9e8      	cbnz	r0, 8000fca <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000f8e:	f894 0578 	ldrb.w	r0, [r4, #1400]	; 0x578
 8000f92:	b160      	cbz	r0, 8000fae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000f94:	f8d4 357c 	ldr.w	r3, [r4, #1404]	; 0x57c
 8000f98:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000f9c:	1aeb      	subs	r3, r5, r3
 8000f9e:	4293      	cmp	r3, r2
 8000fa0:	d904      	bls.n	8000fac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000fa2:	4620      	mov	r0, r4
 8000fa4:	f7ff fd92 	bl	8000acc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000fa8:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000fac:	2000      	movs	r0, #0
 8000fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000fb2:	4640      	mov	r0, r8
 8000fb4:	f003 ff33 	bl	8004e1e <mbed::Timer::read_ms()>
 8000fb8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000fbc:	1b40      	subs	r0, r0, r5
 8000fbe:	4298      	cmp	r0, r3
 8000fc0:	d9e1      	bls.n	8000f86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000fc2:	f06f 0001 	mvn.w	r0, #1
 8000fc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000fca:	4648      	mov	r0, r9
 8000fcc:	f000 f948 	bl	8001260 <BufferedSerial::getc()>
 8000fd0:	2800      	cmp	r0, #0
 8000fd2:	dbdc      	blt.n	8000f8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000fd4:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
 8000fd8:	f8d4 a564 	ldr.w	r10, [r4, #1380]	; 0x564
 8000fdc:	4403      	add	r3, r0
 8000fde:	f1ba 0f07 	cmp.w	r10, #7
 8000fe2:	f8c4 3574 	str.w	r3, [r4, #1396]	; 0x574
 8000fe6:	d112      	bne.n	800100e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000fe8:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 8000fec:	1c5a      	adds	r2, r3, #1
 8000fee:	4423      	add	r3, r4
 8000ff0:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
 8000ff4:	f883 009c 	strb.w	r0, [r3, #156]	; 0x9c
 8000ff8:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000ffc:	3b01      	subs	r3, #1
 8000ffe:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 8001002:	2b00      	cmp	r3, #0
 8001004:	d1bc      	bne.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001006:	2308      	movs	r3, #8
 8001008:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 800100c:	e7b8      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800100e:	f1ba 0f00 	cmp.w	r10, #0
 8001012:	d114      	bne.n	800103e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8001014:	28ff      	cmp	r0, #255	; 0xff
 8001016:	d107      	bne.n	8001028 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8001018:	2301      	movs	r3, #1
 800101a:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 800101e:	f105 0314 	add.w	r3, r5, #20
 8001022:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 8001026:	e7ab      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001028:	4640      	mov	r0, r8
 800102a:	f003 fef8 	bl	8004e1e <mbed::Timer::read_ms()>
 800102e:	f241 3388 	movw	r3, #5000	; 0x1388
 8001032:	1b40      	subs	r0, r0, r5
 8001034:	4298      	cmp	r0, r3
 8001036:	d9a3      	bls.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001038:	f884 a578 	strb.w	r10, [r4, #1400]	; 0x578
 800103c:	e7c1      	b.n	8000fc2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 800103e:	f1ba 0f01 	cmp.w	r10, #1
 8001042:	d10d      	bne.n	8001060 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8001044:	28fe      	cmp	r0, #254	; 0xfe
 8001046:	d101      	bne.n	800104c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8001048:	2302      	movs	r3, #2
 800104a:	e7dd      	b.n	8001008 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 800104c:	f894 3578 	ldrb.w	r3, [r4, #1400]	; 0x578
 8001050:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8001054:	2b00      	cmp	r3, #0
 8001056:	d193      	bne.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001058:	4620      	mov	r0, r4
 800105a:	f7ff fd37 	bl	8000acc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800105e:	e78f      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001060:	f1ba 0f02 	cmp.w	r10, #2
 8001064:	d109      	bne.n	800107a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8001066:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 800106a:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
 800106e:	2303      	movs	r3, #3
 8001070:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8001074:	f8c4 0574 	str.w	r0, [r4, #1396]	; 0x574
 8001078:	e782      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800107a:	f1ba 0f03 	cmp.w	r10, #3
 800107e:	d107      	bne.n	8001090 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8001080:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8001084:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001088:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 800108c:	2304      	movs	r3, #4
 800108e:	e7bb      	b.n	8001008 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001090:	f1ba 0f04 	cmp.w	r10, #4
 8001094:	d10b      	bne.n	80010ae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8001096:	425a      	negs	r2, r3
 8001098:	b2d2      	uxtb	r2, r2
 800109a:	b2db      	uxtb	r3, r3
 800109c:	bf58      	it	pl
 800109e:	4253      	negpl	r3, r2
 80010a0:	2bff      	cmp	r3, #255	; 0xff
 80010a2:	d101      	bne.n	80010a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 80010a4:	2305      	movs	r3, #5
 80010a6:	e7af      	b.n	8001008 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 80010a8:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 80010ac:	e768      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010ae:	f1ba 0f05 	cmp.w	r10, #5
 80010b2:	d103      	bne.n	80010bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 80010b4:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 80010b8:	2306      	movs	r3, #6
 80010ba:	e7d9      	b.n	8001070 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 80010bc:	f1ba 0f06 	cmp.w	r10, #6
 80010c0:	d10b      	bne.n	80010da <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 80010c2:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 80010c6:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 80010ca:	2307      	movs	r3, #7
 80010cc:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80010d0:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 80010d4:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 80010d8:	e793      	b.n	8001002 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 80010da:	f1ba 0f08 	cmp.w	r10, #8
 80010de:	f47f af4f 	bne.w	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010e2:	425a      	negs	r2, r3
 80010e4:	b2d2      	uxtb	r2, r2
 80010e6:	b2db      	uxtb	r3, r3
 80010e8:	bf58      	it	pl
 80010ea:	4253      	negpl	r3, r2
 80010ec:	2bff      	cmp	r3, #255	; 0xff
 80010ee:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 80010f2:	f47f af45 	bne.w	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80010f6:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 80010fa:	b96b      	cbnz	r3, 8001118 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 80010fc:	4620      	mov	r0, r4
 80010fe:	f7ff fce5 	bl	8000acc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001102:	4620      	mov	r0, r4
 8001104:	f7ff fcfa 	bl	8000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001108:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 800110c:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8001110:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001114:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001118:	2b0a      	cmp	r3, #10
 800111a:	d104      	bne.n	8001126 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 800111c:	4639      	mov	r1, r7
 800111e:	4620      	mov	r0, r4
 8001120:	f7ff fd4a 	bl	8000bb8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8001124:	e72c      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001126:	2b06      	cmp	r3, #6
 8001128:	d108      	bne.n	800113c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 800112a:	4639      	mov	r1, r7
 800112c:	f204 508c 	addw	r0, r4, #1420	; 0x58c
 8001130:	f7ff fbfd 	bl	800092e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8001134:	2301      	movs	r3, #1
 8001136:	f884 3588 	strb.w	r3, [r4, #1416]	; 0x588
 800113a:	e721      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800113c:	2b0b      	cmp	r3, #11
 800113e:	d102      	bne.n	8001146 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8001140:	f884 6578 	strb.w	r6, [r4, #1400]	; 0x578
 8001144:	e71c      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001146:	33dc      	adds	r3, #220	; 0xdc
 8001148:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800114c:	2800      	cmp	r0, #0
 800114e:	f43f af17 	beq.w	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001152:	6803      	ldr	r3, [r0, #0]
 8001154:	4639      	mov	r1, r7
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	4798      	blx	r3
 800115a:	e711      	b.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

0800115c <main>:
 800115c:	b508      	push	{r3, lr}
 800115e:	4b1b      	ldr	r3, [pc, #108]	; (80011cc <main+0x70>)
 8001160:	4c1b      	ldr	r4, [pc, #108]	; (80011d0 <main+0x74>)
 8001162:	68da      	ldr	r2, [r3, #12]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	6013      	str	r3, [r2, #0]
 8001168:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800116c:	1d20      	adds	r0, r4, #4
 800116e:	67a1      	str	r1, [r4, #120]	; 0x78
 8001170:	f003 ffa8 	bl	80050c4 <mbed::SerialBase::baud(int)>
 8001174:	2300      	movs	r3, #0
 8001176:	4917      	ldr	r1, [pc, #92]	; (80011d4 <main+0x78>)
 8001178:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 800117c:	4620      	mov	r0, r4
 800117e:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 8001182:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 8001186:	f8c4 356c 	str.w	r3, [r4, #1388]	; 0x56c
 800118a:	f7ff fc67 	bl	8000a5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 800118e:	4912      	ldr	r1, [pc, #72]	; (80011d8 <main+0x7c>)
 8001190:	4620      	mov	r0, r4
 8001192:	f7ff fc78 	bl	8000a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8001196:	4911      	ldr	r1, [pc, #68]	; (80011dc <main+0x80>)
 8001198:	4620      	mov	r0, r4
 800119a:	f7ff fc88 	bl	8000aae <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>
 800119e:	4910      	ldr	r1, [pc, #64]	; (80011e0 <main+0x84>)
 80011a0:	4620      	mov	r0, r4
 80011a2:	f7ff fc84 	bl	8000aae <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>
 80011a6:	490f      	ldr	r1, [pc, #60]	; (80011e4 <main+0x88>)
 80011a8:	4620      	mov	r0, r4
 80011aa:	f7ff fc57 	bl	8000a5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 80011ae:	490e      	ldr	r1, [pc, #56]	; (80011e8 <main+0x8c>)
 80011b0:	4620      	mov	r0, r4
 80011b2:	f7ff fc68 	bl	8000a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80011b6:	490d      	ldr	r1, [pc, #52]	; (80011ec <main+0x90>)
 80011b8:	480d      	ldr	r0, [pc, #52]	; (80011f0 <main+0x94>)
 80011ba:	f003 fe83 	bl	8004ec4 <mbed::CAN::frequency(int)>
 80011be:	4620      	mov	r0, r4
 80011c0:	f7ff febc 	bl	8000f3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 80011c4:	200a      	movs	r0, #10
 80011c6:	f004 f865 	bl	8005294 <wait_ms>
 80011ca:	e7f8      	b.n	80011be <main+0x62>
 80011cc:	200003c4 	.word	0x200003c4
 80011d0:	200003e0 	.word	0x200003e0
 80011d4:	20000328 	.word	0x20000328
 80011d8:	200002f8 	.word	0x200002f8
 80011dc:	20000340 	.word	0x20000340
 80011e0:	20000994 	.word	0x20000994
 80011e4:	200003b0 	.word	0x200003b0
 80011e8:	2000036c 	.word	0x2000036c
 80011ec:	000f4240 	.word	0x000f4240
 80011f0:	20000244 	.word	0x20000244

080011f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 80011f4:	b510      	push	{r4, lr}
 80011f6:	4b04      	ldr	r3, [pc, #16]	; (8001208 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 80011f8:	4604      	mov	r4, r0
 80011fa:	f840 3b04 	str.w	r3, [r0], #4
 80011fe:	f000 f879 	bl	80012f4 <BufferedSerial::~BufferedSerial()>
 8001202:	4620      	mov	r0, r4
 8001204:	bd10      	pop	{r4, pc}
 8001206:	bf00      	nop
 8001208:	080069e0 	.word	0x080069e0

0800120c <_start>:
 800120c:	4807      	ldr	r0, [pc, #28]	; (800122c <_start+0x20>)
 800120e:	4a08      	ldr	r2, [pc, #32]	; (8001230 <_start+0x24>)
 8001210:	b508      	push	{r3, lr}
 8001212:	1a12      	subs	r2, r2, r0
 8001214:	2100      	movs	r1, #0
 8001216:	f004 fe70 	bl	8005efa <memset>
 800121a:	f004 f8fb 	bl	8005414 <software_init_hook>
 800121e:	f004 fdbf 	bl	8005da0 <__libc_init_array>
 8001222:	f004 f8fe 	bl	8005422 <__wrap_main>
 8001226:	f004 f939 	bl	800549c <__wrap_exit>
 800122a:	bf00      	nop
 800122c:	20000228 	.word	0x20000228
 8001230:	20001f0c 	.word	0x20001f0c

08001234 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8001234:	b530      	push	{r4, r5, lr}
 8001236:	6802      	ldr	r2, [r0, #0]
 8001238:	680d      	ldr	r5, [r1, #0]
 800123a:	4c04      	ldr	r4, [pc, #16]	; (800124c <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 800123c:	fbb5 f3f4 	udiv	r3, r5, r4
 8001240:	441a      	add	r2, r3
 8001242:	fb04 5313 	mls	r3, r4, r3, r5
 8001246:	6002      	str	r2, [r0, #0]
 8001248:	600b      	str	r3, [r1, #0]
 800124a:	bd30      	pop	{r4, r5, pc}
 800124c:	3b9aca00 	.word	0x3b9aca00

08001250 <BufferedSerial::readable()>:
 8001250:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001252:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8001254:	1a10      	subs	r0, r2, r0
 8001256:	bf18      	it	ne
 8001258:	2001      	movne	r0, #1
 800125a:	4770      	bx	lr

0800125c <BufferedSerial::writeable()>:
 800125c:	2001      	movs	r0, #1
 800125e:	4770      	bx	lr

08001260 <BufferedSerial::getc()>:
 8001260:	b510      	push	{r4, lr}
 8001262:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8001264:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8001266:	4603      	mov	r3, r0
 8001268:	1c50      	adds	r0, r2, #1
 800126a:	6558      	str	r0, [r3, #84]	; 0x54
 800126c:	5c88      	ldrb	r0, [r1, r2]
 800126e:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8001270:	6d5c      	ldr	r4, [r3, #84]	; 0x54
 8001272:	3a01      	subs	r2, #1
 8001274:	fbb4 f1f2 	udiv	r1, r4, r2
 8001278:	fb02 4211 	mls	r2, r2, r1, r4
 800127c:	655a      	str	r2, [r3, #84]	; 0x54
 800127e:	bd10      	pop	{r4, pc}

08001280 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001280:	4603      	mov	r3, r0
 8001282:	b110      	cbz	r0, 800128a <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8001284:	c907      	ldmia	r1, {r0, r1, r2}
 8001286:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800128a:	4770      	bx	lr

0800128c <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 800128c:	4770      	bx	lr

0800128e <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 800128e:	6842      	ldr	r2, [r0, #4]
 8001290:	6881      	ldr	r1, [r0, #8]
 8001292:	6803      	ldr	r3, [r0, #0]
 8001294:	f012 0f01 	tst.w	r2, #1
 8001298:	ea4f 0262 	mov.w	r2, r2, asr #1
 800129c:	bf1c      	itt	ne
 800129e:	5888      	ldrne	r0, [r1, r2]
 80012a0:	58c3      	ldrne	r3, [r0, r3]
 80012a2:	1888      	adds	r0, r1, r2
 80012a4:	4718      	bx	r3

080012a6 <mbed::Callback<void ()>::~Callback()>:
 80012a6:	68c3      	ldr	r3, [r0, #12]
 80012a8:	b510      	push	{r4, lr}
 80012aa:	4604      	mov	r4, r0
 80012ac:	b10b      	cbz	r3, 80012b2 <mbed::Callback<void ()>::~Callback()+0xc>
 80012ae:	689b      	ldr	r3, [r3, #8]
 80012b0:	4798      	blx	r3
 80012b2:	4620      	mov	r0, r4
 80012b4:	bd10      	pop	{r4, pc}
	...

080012b8 <mbed::SerialBase::~SerialBase()>:
 80012b8:	b570      	push	{r4, r5, r6, lr}
 80012ba:	4605      	mov	r5, r0
 80012bc:	4b07      	ldr	r3, [pc, #28]	; (80012dc <mbed::SerialBase::~SerialBase()+0x24>)
 80012be:	f845 3b28 	str.w	r3, [r5], #40
 80012c2:	4606      	mov	r6, r0
 80012c4:	b145      	cbz	r5, 80012d8 <mbed::SerialBase::~SerialBase()+0x20>
 80012c6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80012ca:	42ac      	cmp	r4, r5
 80012cc:	d004      	beq.n	80012d8 <mbed::SerialBase::~SerialBase()+0x20>
 80012ce:	3c10      	subs	r4, #16
 80012d0:	4620      	mov	r0, r4
 80012d2:	f7ff ffe8 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 80012d6:	e7f8      	b.n	80012ca <mbed::SerialBase::~SerialBase()+0x12>
 80012d8:	4630      	mov	r0, r6
 80012da:	bd70      	pop	{r4, r5, r6, pc}
 80012dc:	08007098 	.word	0x08007098

080012e0 <mbed::SerialBase::~SerialBase()>:
 80012e0:	b510      	push	{r4, lr}
 80012e2:	4604      	mov	r4, r0
 80012e4:	f7ff ffe8 	bl	80012b8 <mbed::SerialBase::~SerialBase()>
 80012e8:	4620      	mov	r0, r4
 80012ea:	f004 f8f3 	bl	80054d4 <operator delete(void*)>
 80012ee:	4620      	mov	r0, r4
 80012f0:	bd10      	pop	{r4, pc}
	...

080012f4 <BufferedSerial::~BufferedSerial()>:
 80012f4:	b530      	push	{r4, r5, lr}
 80012f6:	4b13      	ldr	r3, [pc, #76]	; (8001344 <BufferedSerial::~BufferedSerial()+0x50>)
 80012f8:	6003      	str	r3, [r0, #0]
 80012fa:	b085      	sub	sp, #20
 80012fc:	2500      	movs	r5, #0
 80012fe:	462a      	mov	r2, r5
 8001300:	4669      	mov	r1, sp
 8001302:	4604      	mov	r4, r0
 8001304:	9503      	str	r5, [sp, #12]
 8001306:	f003 ff35 	bl	8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800130a:	4668      	mov	r0, sp
 800130c:	f7ff ffcb 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8001310:	2201      	movs	r2, #1
 8001312:	4669      	mov	r1, sp
 8001314:	4620      	mov	r0, r4
 8001316:	9503      	str	r5, [sp, #12]
 8001318:	f003 ff2c 	bl	8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800131c:	4668      	mov	r0, sp
 800131e:	f7ff ffc2 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8001322:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001326:	f000 f945 	bl	80015b4 <Buffer<char>::~Buffer()>
 800132a:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 800132e:	f000 f941 	bl	80015b4 <Buffer<char>::~Buffer()>
 8001332:	4b05      	ldr	r3, [pc, #20]	; (8001348 <BufferedSerial::~BufferedSerial()+0x54>)
 8001334:	6023      	str	r3, [r4, #0]
 8001336:	4620      	mov	r0, r4
 8001338:	f7ff ffbe 	bl	80012b8 <mbed::SerialBase::~SerialBase()>
 800133c:	4620      	mov	r0, r4
 800133e:	b005      	add	sp, #20
 8001340:	bd30      	pop	{r4, r5, pc}
 8001342:	bf00      	nop
 8001344:	08006d1c 	.word	0x08006d1c
 8001348:	08007068 	.word	0x08007068

0800134c <BufferedSerial::~BufferedSerial()>:
 800134c:	b510      	push	{r4, lr}
 800134e:	4604      	mov	r4, r0
 8001350:	f7ff ffd0 	bl	80012f4 <BufferedSerial::~BufferedSerial()>
 8001354:	4620      	mov	r0, r4
 8001356:	f004 f8bd 	bl	80054d4 <operator delete(void*)>
 800135a:	4620      	mov	r0, r4
 800135c:	bd10      	pop	{r4, pc}

0800135e <BufferedSerial::txIrq()>:
 800135e:	b530      	push	{r4, r5, lr}
 8001360:	4604      	mov	r4, r0
 8001362:	b085      	sub	sp, #20
 8001364:	1d05      	adds	r5, r0, #4
 8001366:	4628      	mov	r0, r5
 8001368:	f002 fd24 	bl	8003db4 <serial_writable>
 800136c:	b1f0      	cbz	r0, 80013ac <BufferedSerial::txIrq()+0x4e>
 800136e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8001370:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001372:	429a      	cmp	r2, r3
 8001374:	d010      	beq.n	8001398 <BufferedSerial::txIrq()+0x3a>
 8001376:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001378:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800137a:	1c59      	adds	r1, r3, #1
 800137c:	6661      	str	r1, [r4, #100]	; 0x64
 800137e:	5cd1      	ldrb	r1, [r2, r3]
 8001380:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8001382:	6e60      	ldr	r0, [r4, #100]	; 0x64
 8001384:	3b01      	subs	r3, #1
 8001386:	fbb0 f2f3 	udiv	r2, r0, r3
 800138a:	fb03 0312 	mls	r3, r3, r2, r0
 800138e:	6663      	str	r3, [r4, #100]	; 0x64
 8001390:	4628      	mov	r0, r5
 8001392:	f002 fd1b 	bl	8003dcc <serial_putc>
 8001396:	e7e6      	b.n	8001366 <BufferedSerial::txIrq()+0x8>
 8001398:	2300      	movs	r3, #0
 800139a:	4620      	mov	r0, r4
 800139c:	2201      	movs	r2, #1
 800139e:	4669      	mov	r1, sp
 80013a0:	9303      	str	r3, [sp, #12]
 80013a2:	f003 fee7 	bl	8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80013a6:	4668      	mov	r0, sp
 80013a8:	f7ff ff7d 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 80013ac:	b005      	add	sp, #20
 80013ae:	bd30      	pop	{r4, r5, pc}

080013b0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 80013b0:	b510      	push	{r4, lr}
 80013b2:	b086      	sub	sp, #24
 80013b4:	e88d 000c 	stmia.w	sp, {r2, r3}
 80013b8:	9b01      	ldr	r3, [sp, #4]
 80013ba:	9202      	str	r2, [sp, #8]
 80013bc:	9303      	str	r3, [sp, #12]
 80013be:	9104      	str	r1, [sp, #16]
 80013c0:	4b05      	ldr	r3, [pc, #20]	; (80013d8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 80013c2:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80013c6:	9305      	str	r3, [sp, #20]
 80013c8:	a902      	add	r1, sp, #8
 80013ca:	f003 fed3 	bl	8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80013ce:	a802      	add	r0, sp, #8
 80013d0:	f7ff ff69 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 80013d4:	b006      	add	sp, #24
 80013d6:	bd10      	pop	{r4, pc}
 80013d8:	08006c90 	.word	0x08006c90

080013dc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80013dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80013de:	4604      	mov	r4, r0
 80013e0:	461d      	mov	r5, r3
 80013e2:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80013e6:	9e08      	ldr	r6, [sp, #32]
 80013e8:	f003 fd52 	bl	8004e90 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 80013ec:	4620      	mov	r0, r4
 80013ee:	4b0e      	ldr	r3, [pc, #56]	; (8001428 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
 80013f0:	f840 3b4c 	str.w	r3, [r0], #76
 80013f4:	4629      	mov	r1, r5
 80013f6:	f000 f8ec 	bl	80015d2 <Buffer<char>::Buffer(unsigned long)>
 80013fa:	fb06 f105 	mul.w	r1, r6, r5
 80013fe:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001402:	f000 f8e6 	bl	80015d2 <Buffer<char>::Buffer(unsigned long)>
 8001406:	4b09      	ldr	r3, [pc, #36]	; (800142c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001408:	9302      	str	r3, [sp, #8]
 800140a:	2300      	movs	r3, #0
 800140c:	9303      	str	r3, [sp, #12]
 800140e:	9300      	str	r3, [sp, #0]
 8001410:	ab04      	add	r3, sp, #16
 8001412:	4620      	mov	r0, r4
 8001414:	e913 000c 	ldmdb	r3, {r2, r3}
 8001418:	4621      	mov	r1, r4
 800141a:	f7ff ffc9 	bl	80013b0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 800141e:	4620      	mov	r0, r4
 8001420:	66e5      	str	r5, [r4, #108]	; 0x6c
 8001422:	6726      	str	r6, [r4, #112]	; 0x70
 8001424:	b004      	add	sp, #16
 8001426:	bd70      	pop	{r4, r5, r6, pc}
 8001428:	08006d1c 	.word	0x08006d1c
 800142c:	08001497 	.word	0x08001497

08001430 <BufferedSerial::prime()>:
 8001430:	b570      	push	{r4, r5, r6, lr}
 8001432:	4604      	mov	r4, r0
 8001434:	b086      	sub	sp, #24
 8001436:	3004      	adds	r0, #4
 8001438:	f002 fcbc 	bl	8003db4 <serial_writable>
 800143c:	b1c0      	cbz	r0, 8001470 <BufferedSerial::prime()+0x40>
 800143e:	ad02      	add	r5, sp, #8
 8001440:	2201      	movs	r2, #1
 8001442:	4629      	mov	r1, r5
 8001444:	2600      	movs	r6, #0
 8001446:	4620      	mov	r0, r4
 8001448:	9605      	str	r6, [sp, #20]
 800144a:	f003 fe93 	bl	8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800144e:	4628      	mov	r0, r5
 8001450:	f7ff ff29 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8001454:	4620      	mov	r0, r4
 8001456:	f7ff ff82 	bl	800135e <BufferedSerial::txIrq()>
 800145a:	4b06      	ldr	r3, [pc, #24]	; (8001474 <BufferedSerial::prime()+0x44>)
 800145c:	9302      	str	r3, [sp, #8]
 800145e:	2301      	movs	r3, #1
 8001460:	9603      	str	r6, [sp, #12]
 8001462:	9300      	str	r3, [sp, #0]
 8001464:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001468:	4621      	mov	r1, r4
 800146a:	4620      	mov	r0, r4
 800146c:	f7ff ffa0 	bl	80013b0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001470:	b006      	add	sp, #24
 8001472:	bd70      	pop	{r4, r5, r6, pc}
 8001474:	0800135f 	.word	0x0800135f

08001478 <Buffer<char>::put(char)>:
 8001478:	6843      	ldr	r3, [r0, #4]
 800147a:	6802      	ldr	r2, [r0, #0]
 800147c:	b510      	push	{r4, lr}
 800147e:	1c5c      	adds	r4, r3, #1
 8001480:	6044      	str	r4, [r0, #4]
 8001482:	54d1      	strb	r1, [r2, r3]
 8001484:	68c3      	ldr	r3, [r0, #12]
 8001486:	6841      	ldr	r1, [r0, #4]
 8001488:	3b01      	subs	r3, #1
 800148a:	fbb1 f2f3 	udiv	r2, r1, r3
 800148e:	fb03 1312 	mls	r3, r3, r2, r1
 8001492:	6043      	str	r3, [r0, #4]
 8001494:	bd10      	pop	{r4, pc}

08001496 <BufferedSerial::rxIrq()>:
 8001496:	b538      	push	{r3, r4, r5, lr}
 8001498:	1d05      	adds	r5, r0, #4
 800149a:	4604      	mov	r4, r0
 800149c:	4628      	mov	r0, r5
 800149e:	f002 fc67 	bl	8003d70 <serial_readable>
 80014a2:	b138      	cbz	r0, 80014b4 <BufferedSerial::rxIrq()+0x1e>
 80014a4:	4628      	mov	r0, r5
 80014a6:	f002 fc6f 	bl	8003d88 <serial_getc>
 80014aa:	b2c1      	uxtb	r1, r0
 80014ac:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 80014b0:	f7ff ffe2 	bl	8001478 <Buffer<char>::put(char)>
 80014b4:	bd38      	pop	{r3, r4, r5, pc}

080014b6 <BufferedSerial::putc(int)>:
 80014b6:	b538      	push	{r3, r4, r5, lr}
 80014b8:	4605      	mov	r5, r0
 80014ba:	460c      	mov	r4, r1
 80014bc:	305c      	adds	r0, #92	; 0x5c
 80014be:	b2c9      	uxtb	r1, r1
 80014c0:	f7ff ffda 	bl	8001478 <Buffer<char>::put(char)>
 80014c4:	4628      	mov	r0, r5
 80014c6:	f7ff ffb3 	bl	8001430 <BufferedSerial::prime()>
 80014ca:	4620      	mov	r0, r4
 80014cc:	bd38      	pop	{r3, r4, r5, pc}

080014ce <BufferedSerial::puts(char const*)>:
 80014ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014d2:	4607      	mov	r7, r0
 80014d4:	460c      	mov	r4, r1
 80014d6:	b1b1      	cbz	r1, 8001506 <BufferedSerial::puts(char const*)+0x38>
 80014d8:	460d      	mov	r5, r1
 80014da:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 80014de:	462e      	mov	r6, r5
 80014e0:	f816 1b01 	ldrb.w	r1, [r6], #1
 80014e4:	b121      	cbz	r1, 80014f0 <BufferedSerial::puts(char const*)+0x22>
 80014e6:	4640      	mov	r0, r8
 80014e8:	f7ff ffc6 	bl	8001478 <Buffer<char>::put(char)>
 80014ec:	4635      	mov	r5, r6
 80014ee:	e7f6      	b.n	80014de <BufferedSerial::puts(char const*)+0x10>
 80014f0:	210a      	movs	r1, #10
 80014f2:	4640      	mov	r0, r8
 80014f4:	f7ff ffc0 	bl	8001478 <Buffer<char>::put(char)>
 80014f8:	1b2c      	subs	r4, r5, r4
 80014fa:	4638      	mov	r0, r7
 80014fc:	f7ff ff98 	bl	8001430 <BufferedSerial::prime()>
 8001500:	1c60      	adds	r0, r4, #1
 8001502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001506:	4608      	mov	r0, r1
 8001508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800150c <BufferedSerial::write(void const*, unsigned int)>:
 800150c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001510:	4607      	mov	r7, r0
 8001512:	460d      	mov	r5, r1
 8001514:	b191      	cbz	r1, 800153c <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001516:	b1a2      	cbz	r2, 8001542 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001518:	188c      	adds	r4, r1, r2
 800151a:	460e      	mov	r6, r1
 800151c:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8001520:	42b4      	cmp	r4, r6
 8001522:	d005      	beq.n	8001530 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001524:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001528:	4640      	mov	r0, r8
 800152a:	f7ff ffa5 	bl	8001478 <Buffer<char>::put(char)>
 800152e:	e7f7      	b.n	8001520 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001530:	4638      	mov	r0, r7
 8001532:	f7ff ff7d 	bl	8001430 <BufferedSerial::prime()>
 8001536:	1b60      	subs	r0, r4, r5
 8001538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800153c:	4608      	mov	r0, r1
 800153e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001542:	4610      	mov	r0, r2
 8001544:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001548 <BufferedSerial::printf(char const*, ...)>:
 8001548:	b40e      	push	{r1, r2, r3}
 800154a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800154e:	b085      	sub	sp, #20
 8001550:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 8001552:	af02      	add	r7, sp, #8
 8001554:	1dd3      	adds	r3, r2, #7
 8001556:	f023 0307 	bic.w	r3, r3, #7
 800155a:	f107 0424 	add.w	r4, r7, #36	; 0x24
 800155e:	ebad 0d03 	sub.w	sp, sp, r3
 8001562:	f854 8b04 	ldr.w	r8, [r4], #4
 8001566:	ae02      	add	r6, sp, #8
 8001568:	4605      	mov	r5, r0
 800156a:	2100      	movs	r1, #0
 800156c:	4630      	mov	r0, r6
 800156e:	f004 fcc4 	bl	8005efa <memset>
 8001572:	4622      	mov	r2, r4
 8001574:	4641      	mov	r1, r8
 8001576:	4630      	mov	r0, r6
 8001578:	607c      	str	r4, [r7, #4]
 800157a:	f004 ffab 	bl	80064d4 <vsiprintf>
 800157e:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8001580:	4283      	cmp	r3, r0
 8001582:	4602      	mov	r2, r0
 8001584:	d20c      	bcs.n	80015a0 <BufferedSerial::printf(char const*, ...)+0x58>
 8001586:	9000      	str	r0, [sp, #0]
 8001588:	225d      	movs	r2, #93	; 0x5d
 800158a:	4808      	ldr	r0, [pc, #32]	; (80015ac <BufferedSerial::printf(char const*, ...)+0x64>)
 800158c:	4908      	ldr	r1, [pc, #32]	; (80015b0 <BufferedSerial::printf(char const*, ...)+0x68>)
 800158e:	f000 fa67 	bl	8001a60 <error>
 8001592:	2000      	movs	r0, #0
 8001594:	370c      	adds	r7, #12
 8001596:	46bd      	mov	sp, r7
 8001598:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800159c:	b003      	add	sp, #12
 800159e:	4770      	bx	lr
 80015a0:	4631      	mov	r1, r6
 80015a2:	4628      	mov	r0, r5
 80015a4:	f7ff ffb2 	bl	800150c <BufferedSerial::write(void const*, unsigned int)>
 80015a8:	e7f4      	b.n	8001594 <BufferedSerial::printf(char const*, ...)+0x4c>
 80015aa:	bf00      	nop
 80015ac:	08006cd8 	.word	0x08006cd8
 80015b0:	08006c9c 	.word	0x08006c9c

080015b4 <Buffer<char>::~Buffer()>:
 80015b4:	b510      	push	{r4, lr}
 80015b6:	4604      	mov	r4, r0
 80015b8:	6800      	ldr	r0, [r0, #0]
 80015ba:	b108      	cbz	r0, 80015c0 <Buffer<char>::~Buffer()+0xc>
 80015bc:	f003 ff86 	bl	80054cc <operator delete[](void*)>
 80015c0:	4620      	mov	r0, r4
 80015c2:	bd10      	pop	{r4, pc}

080015c4 <Buffer<char>::clear()>:
 80015c4:	2100      	movs	r1, #0
 80015c6:	6041      	str	r1, [r0, #4]
 80015c8:	68c2      	ldr	r2, [r0, #12]
 80015ca:	6081      	str	r1, [r0, #8]
 80015cc:	6800      	ldr	r0, [r0, #0]
 80015ce:	f004 bc94 	b.w	8005efa <memset>

080015d2 <Buffer<char>::Buffer(unsigned long)>:
 80015d2:	b538      	push	{r3, r4, r5, lr}
 80015d4:	4604      	mov	r4, r0
 80015d6:	4608      	mov	r0, r1
 80015d8:	460d      	mov	r5, r1
 80015da:	f003 ff6b 	bl	80054b4 <operator new[](unsigned int)>
 80015de:	60e5      	str	r5, [r4, #12]
 80015e0:	6020      	str	r0, [r4, #0]
 80015e2:	4620      	mov	r0, r4
 80015e4:	f7ff ffee 	bl	80015c4 <Buffer<char>::clear()>
 80015e8:	4620      	mov	r0, r4
 80015ea:	bd38      	pop	{r3, r4, r5, pc}

080015ec <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>:
 80015ec:	b570      	push	{r4, r5, r6, lr}
 80015ee:	b086      	sub	sp, #24
 80015f0:	ac02      	add	r4, sp, #8
 80015f2:	4605      	mov	r5, r0
 80015f4:	4620      	mov	r0, r4
 80015f6:	460e      	mov	r6, r1
 80015f8:	f7fe ff9f 	bl	800053a <mbed::CANMessage::CANMessage()>
 80015fc:	2308      	movs	r3, #8
 80015fe:	f88d 3014 	strb.w	r3, [sp, #20]
 8001602:	23ff      	movs	r3, #255	; 0xff
 8001604:	f88d 300c 	strb.w	r3, [sp, #12]
 8001608:	f88d 300d 	strb.w	r3, [sp, #13]
 800160c:	f88d 300e 	strb.w	r3, [sp, #14]
 8001610:	f88d 300f 	strb.w	r3, [sp, #15]
 8001614:	f88d 3010 	strb.w	r3, [sp, #16]
 8001618:	f88d 3011 	strb.w	r3, [sp, #17]
 800161c:	f88d 3012 	strb.w	r3, [sp, #18]
 8001620:	23fc      	movs	r3, #252	; 0xfc
 8001622:	f88d 3013 	strb.w	r3, [sp, #19]
 8001626:	9b05      	ldr	r3, [sp, #20]
 8001628:	9602      	str	r6, [sp, #8]
 800162a:	9300      	str	r3, [sp, #0]
 800162c:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8001630:	4628      	mov	r0, r5
 8001632:	f003 fc5a 	bl	8004eea <mbed::CAN::write(mbed::CANMessage)>
 8001636:	b006      	add	sp, #24
 8001638:	bd70      	pop	{r4, r5, r6, pc}

0800163a <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>:
 800163a:	b570      	push	{r4, r5, r6, lr}
 800163c:	b086      	sub	sp, #24
 800163e:	ac02      	add	r4, sp, #8
 8001640:	4605      	mov	r5, r0
 8001642:	4620      	mov	r0, r4
 8001644:	460e      	mov	r6, r1
 8001646:	f7fe ff78 	bl	800053a <mbed::CANMessage::CANMessage()>
 800164a:	2308      	movs	r3, #8
 800164c:	f88d 3014 	strb.w	r3, [sp, #20]
 8001650:	23ff      	movs	r3, #255	; 0xff
 8001652:	f88d 300c 	strb.w	r3, [sp, #12]
 8001656:	f88d 300d 	strb.w	r3, [sp, #13]
 800165a:	f88d 300e 	strb.w	r3, [sp, #14]
 800165e:	f88d 300f 	strb.w	r3, [sp, #15]
 8001662:	f88d 3010 	strb.w	r3, [sp, #16]
 8001666:	f88d 3011 	strb.w	r3, [sp, #17]
 800166a:	f88d 3012 	strb.w	r3, [sp, #18]
 800166e:	23fd      	movs	r3, #253	; 0xfd
 8001670:	f88d 3013 	strb.w	r3, [sp, #19]
 8001674:	9b05      	ldr	r3, [sp, #20]
 8001676:	9602      	str	r6, [sp, #8]
 8001678:	9300      	str	r3, [sp, #0]
 800167a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800167e:	4628      	mov	r0, r5
 8001680:	f003 fc33 	bl	8004eea <mbed::CAN::write(mbed::CANMessage)>
 8001684:	b006      	add	sp, #24
 8001686:	bd70      	pop	{r4, r5, r6, pc}

08001688 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>:
 8001688:	b570      	push	{r4, r5, r6, lr}
 800168a:	b086      	sub	sp, #24
 800168c:	ac02      	add	r4, sp, #8
 800168e:	4605      	mov	r5, r0
 8001690:	4620      	mov	r0, r4
 8001692:	460e      	mov	r6, r1
 8001694:	f7fe ff51 	bl	800053a <mbed::CANMessage::CANMessage()>
 8001698:	2308      	movs	r3, #8
 800169a:	f88d 3014 	strb.w	r3, [sp, #20]
 800169e:	23ff      	movs	r3, #255	; 0xff
 80016a0:	f88d 300c 	strb.w	r3, [sp, #12]
 80016a4:	f88d 300d 	strb.w	r3, [sp, #13]
 80016a8:	f88d 300e 	strb.w	r3, [sp, #14]
 80016ac:	f88d 300f 	strb.w	r3, [sp, #15]
 80016b0:	f88d 3010 	strb.w	r3, [sp, #16]
 80016b4:	f88d 3011 	strb.w	r3, [sp, #17]
 80016b8:	f88d 3012 	strb.w	r3, [sp, #18]
 80016bc:	23fe      	movs	r3, #254	; 0xfe
 80016be:	f88d 3013 	strb.w	r3, [sp, #19]
 80016c2:	9b05      	ldr	r3, [sp, #20]
 80016c4:	9602      	str	r6, [sp, #8]
 80016c6:	9300      	str	r3, [sp, #0]
 80016c8:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80016cc:	4628      	mov	r0, r5
 80016ce:	f003 fc0c 	bl	8004eea <mbed::CAN::write(mbed::CANMessage)>
 80016d2:	b006      	add	sp, #24
 80016d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080016d8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>:
 80016d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80016dc:	4f33      	ldr	r7, [pc, #204]	; (80017ac <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd4>)
 80016de:	4604      	mov	r4, r0
 80016e0:	4638      	mov	r0, r7
 80016e2:	461e      	mov	r6, r3
 80016e4:	4615      	mov	r5, r2
 80016e6:	f005 f89d 	bl	8006824 <fmaxf>
 80016ea:	4a31      	ldr	r2, [pc, #196]	; (80017b0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd8>)
 80016ec:	9201      	str	r2, [sp, #4]
 80016ee:	4611      	mov	r1, r2
 80016f0:	f005 f8b6 	bl	8006860 <fminf>
 80016f4:	4629      	mov	r1, r5
 80016f6:	4683      	mov	r11, r0
 80016f8:	482e      	ldr	r0, [pc, #184]	; (80017b4 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 80016fa:	f005 f893 	bl	8006824 <fmaxf>
 80016fe:	492e      	ldr	r1, [pc, #184]	; (80017b8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 8001700:	f005 f8ae 	bl	8006860 <fminf>
 8001704:	2500      	movs	r5, #0
 8001706:	4631      	mov	r1, r6
 8001708:	4e2c      	ldr	r6, [pc, #176]	; (80017bc <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe4>)
 800170a:	4682      	mov	r10, r0
 800170c:	4628      	mov	r0, r5
 800170e:	f005 f889 	bl	8006824 <fmaxf>
 8001712:	4631      	mov	r1, r6
 8001714:	f005 f8a4 	bl	8006860 <fminf>
 8001718:	990c      	ldr	r1, [sp, #48]	; 0x30
 800171a:	4681      	mov	r9, r0
 800171c:	4628      	mov	r0, r5
 800171e:	f005 f881 	bl	8006824 <fmaxf>
 8001722:	4927      	ldr	r1, [pc, #156]	; (80017c0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 8001724:	f005 f89c 	bl	8006860 <fminf>
 8001728:	990d      	ldr	r1, [sp, #52]	; 0x34
 800172a:	4680      	mov	r8, r0
 800172c:	4825      	ldr	r0, [pc, #148]	; (80017c4 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 800172e:	f005 f879 	bl	8006824 <fmaxf>
 8001732:	4925      	ldr	r1, [pc, #148]	; (80017c8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 8001734:	f005 f894 	bl	8006860 <fminf>
 8001738:	9a01      	ldr	r2, [sp, #4]
 800173a:	9000      	str	r0, [sp, #0]
 800173c:	4639      	mov	r1, r7
 800173e:	2310      	movs	r3, #16
 8001740:	4658      	mov	r0, r11
 8001742:	f000 f885 	bl	8001850 <float_to_uint(float, float, float, int)>
 8001746:	230c      	movs	r3, #12
 8001748:	4607      	mov	r7, r0
 800174a:	4a1b      	ldr	r2, [pc, #108]	; (80017b8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 800174c:	4919      	ldr	r1, [pc, #100]	; (80017b4 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 800174e:	4650      	mov	r0, r10
 8001750:	f000 f87e 	bl	8001850 <float_to_uint(float, float, float, int)>
 8001754:	4632      	mov	r2, r6
 8001756:	4682      	mov	r10, r0
 8001758:	4629      	mov	r1, r5
 800175a:	230c      	movs	r3, #12
 800175c:	4648      	mov	r0, r9
 800175e:	f000 f877 	bl	8001850 <float_to_uint(float, float, float, int)>
 8001762:	4629      	mov	r1, r5
 8001764:	4606      	mov	r6, r0
 8001766:	230c      	movs	r3, #12
 8001768:	4a15      	ldr	r2, [pc, #84]	; (80017c0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 800176a:	4640      	mov	r0, r8
 800176c:	f000 f870 	bl	8001850 <float_to_uint(float, float, float, int)>
 8001770:	230c      	movs	r3, #12
 8001772:	4605      	mov	r5, r0
 8001774:	4a14      	ldr	r2, [pc, #80]	; (80017c8 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 8001776:	4913      	ldr	r1, [pc, #76]	; (80017c4 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 8001778:	9800      	ldr	r0, [sp, #0]
 800177a:	f000 f869 	bl	8001850 <float_to_uint(float, float, float, int)>
 800177e:	123b      	asrs	r3, r7, #8
 8001780:	7123      	strb	r3, [r4, #4]
 8001782:	ea4f 132a 	mov.w	r3, r10, asr #4
 8001786:	71a3      	strb	r3, [r4, #6]
 8001788:	1233      	asrs	r3, r6, #8
 800178a:	ea43 130a 	orr.w	r3, r3, r10, lsl #4
 800178e:	71e3      	strb	r3, [r4, #7]
 8001790:	112b      	asrs	r3, r5, #4
 8001792:	7263      	strb	r3, [r4, #9]
 8001794:	1203      	asrs	r3, r0, #8
 8001796:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 800179a:	72e0      	strb	r0, [r4, #11]
 800179c:	2001      	movs	r0, #1
 800179e:	7167      	strb	r7, [r4, #5]
 80017a0:	7226      	strb	r6, [r4, #8]
 80017a2:	72a3      	strb	r3, [r4, #10]
 80017a4:	b003      	add	sp, #12
 80017a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80017aa:	bf00      	nop
 80017ac:	c2bf0000 	.word	0xc2bf0000
 80017b0:	42bf0000 	.word	0x42bf0000
 80017b4:	c1f00000 	.word	0xc1f00000
 80017b8:	41f00000 	.word	0x41f00000
 80017bc:	43fa0000 	.word	0x43fa0000
 80017c0:	40a00000 	.word	0x40a00000
 80017c4:	c1900000 	.word	0xc1900000
 80017c8:	41900000 	.word	0x41900000

080017cc <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>:
 80017cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80017ce:	ac04      	add	r4, sp, #16
 80017d0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80017d4:	9a08      	ldr	r2, [sp, #32]
 80017d6:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80017da:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80017de:	7011      	strb	r1, [r2, #0]
 80017e0:	f89d 6005 	ldrb.w	r6, [sp, #5]
 80017e4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80017e8:	f89d 0006 	ldrb.w	r0, [sp, #6]
 80017ec:	4912      	ldr	r1, [pc, #72]	; (8001838 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x6c>)
 80017ee:	111d      	asrs	r5, r3, #4
 80017f0:	021c      	lsls	r4, r3, #8
 80017f2:	f89d 3009 	ldrb.w	r3, [sp, #9]
 80017f6:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
 80017fa:	ea45 1502 	orr.w	r5, r5, r2, lsl #4
 80017fe:	431c      	orrs	r4, r3
 8001800:	4a0e      	ldr	r2, [pc, #56]	; (800183c <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x70>)
 8001802:	2310      	movs	r3, #16
 8001804:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
 8001808:	f000 f83d 	bl	8001886 <uint_to_float(int, float, float, int)>
 800180c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800180e:	4a0c      	ldr	r2, [pc, #48]	; (8001840 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x74>)
 8001810:	6018      	str	r0, [r3, #0]
 8001812:	490c      	ldr	r1, [pc, #48]	; (8001844 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x78>)
 8001814:	230c      	movs	r3, #12
 8001816:	4628      	mov	r0, r5
 8001818:	f000 f835 	bl	8001886 <uint_to_float(int, float, float, int)>
 800181c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800181e:	4a0a      	ldr	r2, [pc, #40]	; (8001848 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x7c>)
 8001820:	6018      	str	r0, [r3, #0]
 8001822:	490a      	ldr	r1, [pc, #40]	; (800184c <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x80>)
 8001824:	230c      	movs	r3, #12
 8001826:	4620      	mov	r0, r4
 8001828:	f000 f82d 	bl	8001886 <uint_to_float(int, float, float, int)>
 800182c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800182e:	6018      	str	r0, [r3, #0]
 8001830:	2001      	movs	r0, #1
 8001832:	b004      	add	sp, #16
 8001834:	bd70      	pop	{r4, r5, r6, pc}
 8001836:	bf00      	nop
 8001838:	c2bf0000 	.word	0xc2bf0000
 800183c:	42bf0000 	.word	0x42bf0000
 8001840:	41f00000 	.word	0x41f00000
 8001844:	c1f00000 	.word	0xc1f00000
 8001848:	41900000 	.word	0x41900000
 800184c:	c1900000 	.word	0xc1900000

08001850 <float_to_uint(float, float, float, int)>:
 8001850:	ee07 1a10 	vmov	s14, r1
 8001854:	2101      	movs	r1, #1
 8001856:	fa01 f303 	lsl.w	r3, r1, r3
 800185a:	3b01      	subs	r3, #1
 800185c:	ee07 3a90 	vmov	s15, r3
 8001860:	ee06 0a90 	vmov	s13, r0
 8001864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001868:	ee76 6ac7 	vsub.f32	s13, s13, s14
 800186c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001870:	ee06 2a90 	vmov	s13, r2
 8001874:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8001878:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800187c:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8001880:	ee17 0a90 	vmov	r0, s15
 8001884:	4770      	bx	lr

08001886 <uint_to_float(int, float, float, int)>:
 8001886:	ee06 1a90 	vmov	s13, r1
 800188a:	ee07 2a90 	vmov	s15, r2
 800188e:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8001892:	ee07 0a90 	vmov	s15, r0
 8001896:	2201      	movs	r2, #1
 8001898:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800189c:	fa02 f303 	lsl.w	r3, r2, r3
 80018a0:	3b01      	subs	r3, #1
 80018a2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80018a6:	ee07 3a90 	vmov	s15, r3
 80018aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018ae:	ee87 6a27 	vdiv.f32	s12, s14, s15
 80018b2:	ee76 7a26 	vadd.f32	s15, s12, s13
 80018b6:	ee17 0a90 	vmov	r0, s15
 80018ba:	4770      	bx	lr

080018bc <_gpio_init_out.part.1>:
 80018bc:	b538      	push	{r3, r4, r5, lr}
 80018be:	4604      	mov	r4, r0
 80018c0:	460d      	mov	r5, r1
 80018c2:	6803      	ldr	r3, [r0, #0]
 80018c4:	b15a      	cbz	r2, 80018de <_gpio_init_out.part.1+0x22>
 80018c6:	6882      	ldr	r2, [r0, #8]
 80018c8:	6013      	str	r3, [r2, #0]
 80018ca:	4620      	mov	r0, r4
 80018cc:	2101      	movs	r1, #1
 80018ce:	f001 fcef 	bl	80032b0 <gpio_dir>
 80018d2:	4629      	mov	r1, r5
 80018d4:	4620      	mov	r0, r4
 80018d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80018da:	f001 bce5 	b.w	80032a8 <gpio_mode>
 80018de:	68c2      	ldr	r2, [r0, #12]
 80018e0:	e7f2      	b.n	80018c8 <_gpio_init_out.part.1+0xc>

080018e2 <gpio_init_out_ex>:
 80018e2:	b570      	push	{r4, r5, r6, lr}
 80018e4:	460e      	mov	r6, r1
 80018e6:	4604      	mov	r4, r0
 80018e8:	4615      	mov	r5, r2
 80018ea:	f001 fcbb 	bl	8003264 <gpio_init>
 80018ee:	3601      	adds	r6, #1
 80018f0:	d006      	beq.n	8001900 <gpio_init_out_ex+0x1e>
 80018f2:	462a      	mov	r2, r5
 80018f4:	4620      	mov	r0, r4
 80018f6:	2100      	movs	r1, #0
 80018f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80018fc:	f7ff bfde 	b.w	80018bc <_gpio_init_out.part.1>
 8001900:	bd70      	pop	{r4, r5, r6, pc}

08001902 <gpio_init_out>:
 8001902:	2200      	movs	r2, #0
 8001904:	f7ff bfed 	b.w	80018e2 <gpio_init_out_ex>

08001908 <get_us_ticker_data>:
 8001908:	4800      	ldr	r0, [pc, #0]	; (800190c <get_us_ticker_data+0x4>)
 800190a:	4770      	bx	lr
 800190c:	08006d48 	.word	0x08006d48

08001910 <us_ticker_irq_handler>:
 8001910:	4801      	ldr	r0, [pc, #4]	; (8001918 <us_ticker_irq_handler+0x8>)
 8001912:	f000 b803 	b.w	800191c <ticker_irq_handler>
 8001916:	bf00      	nop
 8001918:	08006d48 	.word	0x08006d48

0800191c <ticker_irq_handler>:
 800191c:	6803      	ldr	r3, [r0, #0]
 800191e:	b570      	push	{r4, r5, r6, lr}
 8001920:	68db      	ldr	r3, [r3, #12]
 8001922:	4604      	mov	r4, r0
 8001924:	4798      	blx	r3
 8001926:	6863      	ldr	r3, [r4, #4]
 8001928:	685a      	ldr	r2, [r3, #4]
 800192a:	6823      	ldr	r3, [r4, #0]
 800192c:	b91a      	cbnz	r2, 8001936 <ticker_irq_handler+0x1a>
 800192e:	689b      	ldr	r3, [r3, #8]
 8001930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001934:	4718      	bx	r3
 8001936:	685b      	ldr	r3, [r3, #4]
 8001938:	6815      	ldr	r5, [r2, #0]
 800193a:	4798      	blx	r3
 800193c:	6863      	ldr	r3, [r4, #4]
 800193e:	1a28      	subs	r0, r5, r0
 8001940:	2800      	cmp	r0, #0
 8001942:	685a      	ldr	r2, [r3, #4]
 8001944:	dc07      	bgt.n	8001956 <ticker_irq_handler+0x3a>
 8001946:	6891      	ldr	r1, [r2, #8]
 8001948:	6059      	str	r1, [r3, #4]
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	2b00      	cmp	r3, #0
 800194e:	d0ea      	beq.n	8001926 <ticker_irq_handler+0xa>
 8001950:	6850      	ldr	r0, [r2, #4]
 8001952:	4798      	blx	r3
 8001954:	e7e7      	b.n	8001926 <ticker_irq_handler+0xa>
 8001956:	6823      	ldr	r3, [r4, #0]
 8001958:	6810      	ldr	r0, [r2, #0]
 800195a:	691b      	ldr	r3, [r3, #16]
 800195c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001960:	4718      	bx	r3

08001962 <ticker_read>:
 8001962:	6803      	ldr	r3, [r0, #0]
 8001964:	685b      	ldr	r3, [r3, #4]
 8001966:	4718      	bx	r3

08001968 <pinmap_pinout>:
 8001968:	b510      	push	{r4, lr}
 800196a:	4604      	mov	r4, r0
 800196c:	3001      	adds	r0, #1
 800196e:	d10d      	bne.n	800198c <pinmap_pinout+0x24>
 8001970:	bd10      	pop	{r4, pc}
 8001972:	429c      	cmp	r4, r3
 8001974:	d109      	bne.n	800198a <pinmap_pinout+0x22>
 8001976:	4620      	mov	r0, r4
 8001978:	6889      	ldr	r1, [r1, #8]
 800197a:	f001 ffa3 	bl	80038c4 <pin_function>
 800197e:	4620      	mov	r0, r4
 8001980:	2100      	movs	r1, #0
 8001982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001986:	f002 b81f 	b.w	80039c8 <pin_mode>
 800198a:	310c      	adds	r1, #12
 800198c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001990:	1c5a      	adds	r2, r3, #1
 8001992:	d1ee      	bne.n	8001972 <pinmap_pinout+0xa>
 8001994:	4802      	ldr	r0, [pc, #8]	; (80019a0 <pinmap_pinout+0x38>)
 8001996:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800199a:	f000 b861 	b.w	8001a60 <error>
 800199e:	bf00      	nop
 80019a0:	08006d95 	.word	0x08006d95

080019a4 <pinmap_merge>:
 80019a4:	4288      	cmp	r0, r1
 80019a6:	b508      	push	{r3, lr}
 80019a8:	d008      	beq.n	80019bc <pinmap_merge+0x18>
 80019aa:	1c43      	adds	r3, r0, #1
 80019ac:	d006      	beq.n	80019bc <pinmap_merge+0x18>
 80019ae:	3101      	adds	r1, #1
 80019b0:	d006      	beq.n	80019c0 <pinmap_merge+0x1c>
 80019b2:	4804      	ldr	r0, [pc, #16]	; (80019c4 <pinmap_merge+0x20>)
 80019b4:	f000 f854 	bl	8001a60 <error>
 80019b8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80019bc:	4608      	mov	r0, r1
 80019be:	bd08      	pop	{r3, pc}
 80019c0:	4601      	mov	r1, r0
 80019c2:	e7fb      	b.n	80019bc <pinmap_merge+0x18>
 80019c4:	08006d64 	.word	0x08006d64

080019c8 <pinmap_find_peripheral>:
 80019c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80019cc:	1c5a      	adds	r2, r3, #1
 80019ce:	d101      	bne.n	80019d4 <pinmap_find_peripheral+0xc>
 80019d0:	4618      	mov	r0, r3
 80019d2:	4770      	bx	lr
 80019d4:	4283      	cmp	r3, r0
 80019d6:	d101      	bne.n	80019dc <pinmap_find_peripheral+0x14>
 80019d8:	6848      	ldr	r0, [r1, #4]
 80019da:	4770      	bx	lr
 80019dc:	310c      	adds	r1, #12
 80019de:	e7f3      	b.n	80019c8 <pinmap_find_peripheral>

080019e0 <pinmap_peripheral>:
 80019e0:	1c42      	adds	r2, r0, #1
 80019e2:	b510      	push	{r4, lr}
 80019e4:	4604      	mov	r4, r0
 80019e6:	d007      	beq.n	80019f8 <pinmap_peripheral+0x18>
 80019e8:	f7ff ffee 	bl	80019c8 <pinmap_find_peripheral>
 80019ec:	1c43      	adds	r3, r0, #1
 80019ee:	4604      	mov	r4, r0
 80019f0:	d102      	bne.n	80019f8 <pinmap_peripheral+0x18>
 80019f2:	4802      	ldr	r0, [pc, #8]	; (80019fc <pinmap_peripheral+0x1c>)
 80019f4:	f000 f834 	bl	8001a60 <error>
 80019f8:	4620      	mov	r0, r4
 80019fa:	bd10      	pop	{r4, pc}
 80019fc:	08006d75 	.word	0x08006d75

08001a00 <core_util_are_interrupts_enabled>:
 8001a00:	f3ef 8010 	mrs	r0, PRIMASK
 8001a04:	43c0      	mvns	r0, r0
 8001a06:	f000 0001 	and.w	r0, r0, #1
 8001a0a:	4770      	bx	lr

08001a0c <core_util_critical_section_enter>:
 8001a0c:	b508      	push	{r3, lr}
 8001a0e:	f7ff fff7 	bl	8001a00 <core_util_are_interrupts_enabled>
 8001a12:	b672      	cpsid	i
 8001a14:	4b06      	ldr	r3, [pc, #24]	; (8001a30 <core_util_critical_section_enter+0x24>)
 8001a16:	681a      	ldr	r2, [r3, #0]
 8001a18:	b922      	cbnz	r2, 8001a24 <core_util_critical_section_enter+0x18>
 8001a1a:	f080 0001 	eor.w	r0, r0, #1
 8001a1e:	4a05      	ldr	r2, [pc, #20]	; (8001a34 <core_util_critical_section_enter+0x28>)
 8001a20:	b2c0      	uxtb	r0, r0
 8001a22:	7010      	strb	r0, [r2, #0]
 8001a24:	681a      	ldr	r2, [r3, #0]
 8001a26:	681a      	ldr	r2, [r3, #0]
 8001a28:	3201      	adds	r2, #1
 8001a2a:	601a      	str	r2, [r3, #0]
 8001a2c:	bd08      	pop	{r3, pc}
 8001a2e:	bf00      	nop
 8001a30:	200009cc 	.word	0x200009cc
 8001a34:	200009c8 	.word	0x200009c8

08001a38 <core_util_critical_section_exit>:
 8001a38:	b508      	push	{r3, lr}
 8001a3a:	4b07      	ldr	r3, [pc, #28]	; (8001a58 <core_util_critical_section_exit+0x20>)
 8001a3c:	681a      	ldr	r2, [r3, #0]
 8001a3e:	b152      	cbz	r2, 8001a56 <core_util_critical_section_exit+0x1e>
 8001a40:	f7ff ffde 	bl	8001a00 <core_util_are_interrupts_enabled>
 8001a44:	681a      	ldr	r2, [r3, #0]
 8001a46:	3a01      	subs	r2, #1
 8001a48:	601a      	str	r2, [r3, #0]
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	b91b      	cbnz	r3, 8001a56 <core_util_critical_section_exit+0x1e>
 8001a4e:	4b03      	ldr	r3, [pc, #12]	; (8001a5c <core_util_critical_section_exit+0x24>)
 8001a50:	781b      	ldrb	r3, [r3, #0]
 8001a52:	b903      	cbnz	r3, 8001a56 <core_util_critical_section_exit+0x1e>
 8001a54:	b662      	cpsie	i
 8001a56:	bd08      	pop	{r3, pc}
 8001a58:	200009cc 	.word	0x200009cc
 8001a5c:	200009c8 	.word	0x200009c8

08001a60 <error>:
 8001a60:	b40f      	push	{r0, r1, r2, r3}
 8001a62:	2001      	movs	r0, #1
 8001a64:	b508      	push	{r3, lr}
 8001a66:	f003 fd19 	bl	800549c <__wrap_exit>

08001a6a <mbed_die>:
 8001a6a:	b508      	push	{r3, lr}
 8001a6c:	f7ff ffce 	bl	8001a0c <core_util_critical_section_enter>
 8001a70:	2096      	movs	r0, #150	; 0x96
 8001a72:	f003 fc0f 	bl	8005294 <wait_ms>
 8001a76:	2096      	movs	r0, #150	; 0x96
 8001a78:	f003 fc0c 	bl	8005294 <wait_ms>
 8001a7c:	e7f8      	b.n	8001a70 <mbed_die+0x6>

08001a7e <default_idle_hook>:
 8001a7e:	f001 bc40 	b.w	8003302 <hal_sleep>
	...

08001a84 <rtos_idle_loop>:
 8001a84:	b508      	push	{r3, lr}
 8001a86:	4c02      	ldr	r4, [pc, #8]	; (8001a90 <rtos_idle_loop+0xc>)
 8001a88:	6823      	ldr	r3, [r4, #0]
 8001a8a:	4798      	blx	r3
 8001a8c:	e7fc      	b.n	8001a88 <rtos_idle_loop+0x4>
 8001a8e:	bf00      	nop
 8001a90:	2000018c 	.word	0x2000018c

08001a94 <pre_main>:
 8001a94:	b508      	push	{r3, lr}
 8001a96:	480b      	ldr	r0, [pc, #44]	; (8001ac4 <pre_main+0x30>)
 8001a98:	f000 fdaa 	bl	80025f0 <osMutexCreate>
 8001a9c:	4b0a      	ldr	r3, [pc, #40]	; (8001ac8 <pre_main+0x34>)
 8001a9e:	6018      	str	r0, [r3, #0]
 8001aa0:	480a      	ldr	r0, [pc, #40]	; (8001acc <pre_main+0x38>)
 8001aa2:	f000 fda5 	bl	80025f0 <osMutexCreate>
 8001aa6:	4b0a      	ldr	r3, [pc, #40]	; (8001ad0 <pre_main+0x3c>)
 8001aa8:	6018      	str	r0, [r3, #0]
 8001aaa:	480a      	ldr	r0, [pc, #40]	; (8001ad4 <pre_main+0x40>)
 8001aac:	f000 fda0 	bl	80025f0 <osMutexCreate>
 8001ab0:	4b09      	ldr	r3, [pc, #36]	; (8001ad8 <pre_main+0x44>)
 8001ab2:	6018      	str	r0, [r3, #0]
 8001ab4:	f004 f974 	bl	8005da0 <__libc_init_array>
 8001ab8:	2100      	movs	r1, #0
 8001aba:	4608      	mov	r0, r1
 8001abc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001ac0:	f003 bcaf 	b.w	8005422 <__wrap_main>
 8001ac4:	08006df4 	.word	0x08006df4
 8001ac8:	20001914 	.word	0x20001914
 8001acc:	08006df0 	.word	0x08006df0
 8001ad0:	200009d8 	.word	0x200009d8
 8001ad4:	08006dec 	.word	0x08006dec
 8001ad8:	200009d0 	.word	0x200009d0

08001adc <os_idle_demon>:
 8001adc:	f7ff bfd2 	b.w	8001a84 <rtos_idle_loop>

08001ae0 <os_error>:
 8001ae0:	b510      	push	{r4, lr}
 8001ae2:	4604      	mov	r4, r0
 8001ae4:	f000 fce4 	bl	80024b0 <svcThreadGetId>
 8001ae8:	4621      	mov	r1, r4
 8001aea:	4602      	mov	r2, r0
 8001aec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001af0:	4801      	ldr	r0, [pc, #4]	; (8001af8 <os_error+0x18>)
 8001af2:	f7ff bfb5 	b.w	8001a60 <error>
 8001af6:	bf00      	nop
 8001af8:	08006db4 	.word	0x08006db4

08001afc <sysThreadTerminate>:
 8001afc:	f003 bcec 	b.w	80054d8 <thread_terminate_hook>

08001b00 <set_stack_heap>:
 8001b00:	4a0b      	ldr	r2, [pc, #44]	; (8001b30 <set_stack_heap+0x30>)
 8001b02:	4b0c      	ldr	r3, [pc, #48]	; (8001b34 <set_stack_heap+0x34>)
 8001b04:	480c      	ldr	r0, [pc, #48]	; (8001b38 <set_stack_heap+0x38>)
 8001b06:	b430      	push	{r4, r5}
 8001b08:	601a      	str	r2, [r3, #0]
 8001b0a:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001b0e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8001b12:	f5b3 7fe0 	cmp.w	r3, #448	; 0x1c0
 8001b16:	4619      	mov	r1, r3
 8001b18:	bf28      	it	cs
 8001b1a:	f44f 71e0 	movcs.w	r1, #448	; 0x1c0
 8001b1e:	4d07      	ldr	r5, [pc, #28]	; (8001b3c <set_stack_heap+0x3c>)
 8001b20:	4c07      	ldr	r4, [pc, #28]	; (8001b40 <set_stack_heap+0x40>)
 8001b22:	6001      	str	r1, [r0, #0]
 8001b24:	1a5b      	subs	r3, r3, r1
 8001b26:	441a      	add	r2, r3
 8001b28:	602a      	str	r2, [r5, #0]
 8001b2a:	6023      	str	r3, [r4, #0]
 8001b2c:	bc30      	pop	{r4, r5}
 8001b2e:	4770      	bx	lr
 8001b30:	20001f0c 	.word	0x20001f0c
 8001b34:	2000164c 	.word	0x2000164c
 8001b38:	200009dc 	.word	0x200009dc
 8001b3c:	200009e0 	.word	0x200009e0
 8001b40:	20001648 	.word	0x20001648

08001b44 <software_init_hook_rtos>:
 8001b44:	f000 fe38 	bl	80027b8 <osKernelInitialize>
 8001b48:	f7ff ffda 	bl	8001b00 <set_stack_heap>
 8001b4c:	4803      	ldr	r0, [pc, #12]	; (8001b5c <software_init_hook_rtos+0x18>)
 8001b4e:	2100      	movs	r1, #0
 8001b50:	f000 fdd6 	bl	8002700 <osThreadCreate>
 8001b54:	f000 fc2e 	bl	80023b4 <osKernelStart>
 8001b58:	e7fe      	b.n	8001b58 <software_init_hook_rtos+0x14>
 8001b5a:	0000      	.short	0x0000
 8001b5c:	20000190 	.word	0x20000190

08001b60 <__rtos_malloc_lock>:
 8001b60:	4b02      	ldr	r3, [pc, #8]	; (8001b6c <__rtos_malloc_lock+0xc>)
 8001b62:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001b66:	6818      	ldr	r0, [r3, #0]
 8001b68:	f000 bd60 	b.w	800262c <osMutexWait>
 8001b6c:	200009d8 	.word	0x200009d8

08001b70 <__rtos_malloc_unlock>:
 8001b70:	4b01      	ldr	r3, [pc, #4]	; (8001b78 <__rtos_malloc_unlock+0x8>)
 8001b72:	6818      	ldr	r0, [r3, #0]
 8001b74:	f000 bd82 	b.w	800267c <osMutexRelease>
 8001b78:	200009d8 	.word	0x200009d8

08001b7c <rt_put_prio>:
 8001b7c:	b530      	push	{r4, r5, lr}
 8001b7e:	7802      	ldrb	r2, [r0, #0]
 8001b80:	788c      	ldrb	r4, [r1, #2]
 8001b82:	6843      	ldr	r3, [r0, #4]
 8001b84:	3a01      	subs	r2, #1
 8001b86:	b2d2      	uxtb	r2, r2
 8001b88:	b113      	cbz	r3, 8001b90 <rt_put_prio+0x14>
 8001b8a:	789d      	ldrb	r5, [r3, #2]
 8001b8c:	42a5      	cmp	r5, r4
 8001b8e:	d207      	bcs.n	8001ba0 <rt_put_prio+0x24>
 8001b90:	2a02      	cmp	r2, #2
 8001b92:	604b      	str	r3, [r1, #4]
 8001b94:	6041      	str	r1, [r0, #4]
 8001b96:	d806      	bhi.n	8001ba6 <rt_put_prio+0x2a>
 8001b98:	b103      	cbz	r3, 8001b9c <rt_put_prio+0x20>
 8001b9a:	6099      	str	r1, [r3, #8]
 8001b9c:	6088      	str	r0, [r1, #8]
 8001b9e:	bd30      	pop	{r4, r5, pc}
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	685b      	ldr	r3, [r3, #4]
 8001ba4:	e7f0      	b.n	8001b88 <rt_put_prio+0xc>
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	608b      	str	r3, [r1, #8]
 8001baa:	bd30      	pop	{r4, r5, pc}

08001bac <rt_get_first>:
 8001bac:	7802      	ldrb	r2, [r0, #0]
 8001bae:	6843      	ldr	r3, [r0, #4]
 8001bb0:	3a01      	subs	r2, #1
 8001bb2:	6859      	ldr	r1, [r3, #4]
 8001bb4:	6041      	str	r1, [r0, #4]
 8001bb6:	2a02      	cmp	r2, #2
 8001bb8:	f04f 0200 	mov.w	r2, #0
 8001bbc:	d805      	bhi.n	8001bca <rt_get_first+0x1e>
 8001bbe:	b109      	cbz	r1, 8001bc4 <rt_get_first+0x18>
 8001bc0:	6088      	str	r0, [r1, #8]
 8001bc2:	605a      	str	r2, [r3, #4]
 8001bc4:	609a      	str	r2, [r3, #8]
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	4770      	bx	lr
 8001bca:	605a      	str	r2, [r3, #4]
 8001bcc:	e7fb      	b.n	8001bc6 <rt_get_first+0x1a>
	...

08001bd0 <rt_put_rdy_first>:
 8001bd0:	4b03      	ldr	r3, [pc, #12]	; (8001be0 <rt_put_rdy_first+0x10>)
 8001bd2:	685a      	ldr	r2, [r3, #4]
 8001bd4:	6042      	str	r2, [r0, #4]
 8001bd6:	2200      	movs	r2, #0
 8001bd8:	6082      	str	r2, [r0, #8]
 8001bda:	6058      	str	r0, [r3, #4]
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	20001e08 	.word	0x20001e08

08001be4 <rt_put_dly>:
 8001be4:	4b10      	ldr	r3, [pc, #64]	; (8001c28 <rt_put_dly+0x44>)
 8001be6:	68da      	ldr	r2, [r3, #12]
 8001be8:	b510      	push	{r4, lr}
 8001bea:	b18a      	cbz	r2, 8001c10 <rt_put_dly+0x2c>
 8001bec:	8a9a      	ldrh	r2, [r3, #20]
 8001bee:	68dc      	ldr	r4, [r3, #12]
 8001bf0:	428a      	cmp	r2, r1
 8001bf2:	d30c      	bcc.n	8001c0e <rt_put_dly+0x2a>
 8001bf4:	60c4      	str	r4, [r0, #12]
 8001bf6:	60d8      	str	r0, [r3, #12]
 8001bf8:	68c4      	ldr	r4, [r0, #12]
 8001bfa:	6103      	str	r3, [r0, #16]
 8001bfc:	b104      	cbz	r4, 8001c00 <rt_put_dly+0x1c>
 8001bfe:	6120      	str	r0, [r4, #16]
 8001c00:	1a52      	subs	r2, r2, r1
 8001c02:	b292      	uxth	r2, r2
 8001c04:	8282      	strh	r2, [r0, #20]
 8001c06:	8a99      	ldrh	r1, [r3, #20]
 8001c08:	1a8a      	subs	r2, r1, r2
 8001c0a:	829a      	strh	r2, [r3, #20]
 8001c0c:	bd10      	pop	{r4, pc}
 8001c0e:	b93c      	cbnz	r4, 8001c20 <rt_put_dly+0x3c>
 8001c10:	2400      	movs	r4, #0
 8001c12:	1a8a      	subs	r2, r1, r2
 8001c14:	60c4      	str	r4, [r0, #12]
 8001c16:	60d8      	str	r0, [r3, #12]
 8001c18:	6103      	str	r3, [r0, #16]
 8001c1a:	829a      	strh	r2, [r3, #20]
 8001c1c:	8284      	strh	r4, [r0, #20]
 8001c1e:	bd10      	pop	{r4, pc}
 8001c20:	8aa3      	ldrh	r3, [r4, #20]
 8001c22:	441a      	add	r2, r3
 8001c24:	4623      	mov	r3, r4
 8001c26:	e7e2      	b.n	8001bee <rt_put_dly+0xa>
 8001c28:	20001e20 	.word	0x20001e20

08001c2c <rt_dec_dly>:
 8001c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001c30:	4d17      	ldr	r5, [pc, #92]	; (8001c90 <rt_dec_dly+0x64>)
 8001c32:	68eb      	ldr	r3, [r5, #12]
 8001c34:	b153      	cbz	r3, 8001c4c <rt_dec_dly+0x20>
 8001c36:	8aab      	ldrh	r3, [r5, #20]
 8001c38:	4f16      	ldr	r7, [pc, #88]	; (8001c94 <rt_dec_dly+0x68>)
 8001c3a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001c98 <rt_dec_dly+0x6c>
 8001c3e:	3b01      	subs	r3, #1
 8001c40:	82ab      	strh	r3, [r5, #20]
 8001c42:	2600      	movs	r6, #0
 8001c44:	8aaa      	ldrh	r2, [r5, #20]
 8001c46:	b90a      	cbnz	r2, 8001c4c <rt_dec_dly+0x20>
 8001c48:	68ec      	ldr	r4, [r5, #12]
 8001c4a:	b90c      	cbnz	r4, 8001c50 <rt_dec_dly+0x24>
 8001c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c50:	68a3      	ldr	r3, [r4, #8]
 8001c52:	b133      	cbz	r3, 8001c62 <rt_dec_dly+0x36>
 8001c54:	6861      	ldr	r1, [r4, #4]
 8001c56:	6059      	str	r1, [r3, #4]
 8001c58:	6861      	ldr	r1, [r4, #4]
 8001c5a:	b109      	cbz	r1, 8001c60 <rt_dec_dly+0x34>
 8001c5c:	608b      	str	r3, [r1, #8]
 8001c5e:	6062      	str	r2, [r4, #4]
 8001c60:	60a6      	str	r6, [r4, #8]
 8001c62:	4621      	mov	r1, r4
 8001c64:	4638      	mov	r0, r7
 8001c66:	f7ff ff89 	bl	8001b7c <rt_put_prio>
 8001c6a:	8aa3      	ldrh	r3, [r4, #20]
 8001c6c:	82ab      	strh	r3, [r5, #20]
 8001c6e:	7863      	ldrb	r3, [r4, #1]
 8001c70:	2b04      	cmp	r3, #4
 8001c72:	bf01      	itttt	eq
 8001c74:	f8d8 3000 	ldreq.w	r3, [r8]
 8001c78:	8ae2      	ldrheq	r2, [r4, #22]
 8001c7a:	189b      	addeq	r3, r3, r2
 8001c7c:	82a3      	strheq	r3, [r4, #20]
 8001c7e:	2301      	movs	r3, #1
 8001c80:	7063      	strb	r3, [r4, #1]
 8001c82:	68e3      	ldr	r3, [r4, #12]
 8001c84:	60eb      	str	r3, [r5, #12]
 8001c86:	b10b      	cbz	r3, 8001c8c <rt_dec_dly+0x60>
 8001c88:	611d      	str	r5, [r3, #16]
 8001c8a:	60e6      	str	r6, [r4, #12]
 8001c8c:	6126      	str	r6, [r4, #16]
 8001c8e:	e7d9      	b.n	8001c44 <rt_dec_dly+0x18>
 8001c90:	20001e20 	.word	0x20001e20
 8001c94:	20001e08 	.word	0x20001e08
 8001c98:	20001e9c 	.word	0x20001e9c

08001c9c <rt_rmv_list>:
 8001c9c:	6883      	ldr	r3, [r0, #8]
 8001c9e:	b12b      	cbz	r3, 8001cac <rt_rmv_list+0x10>
 8001ca0:	6842      	ldr	r2, [r0, #4]
 8001ca2:	605a      	str	r2, [r3, #4]
 8001ca4:	6842      	ldr	r2, [r0, #4]
 8001ca6:	b15a      	cbz	r2, 8001cc0 <rt_rmv_list+0x24>
 8001ca8:	6093      	str	r3, [r2, #8]
 8001caa:	4770      	bx	lr
 8001cac:	4b05      	ldr	r3, [pc, #20]	; (8001cc4 <rt_rmv_list+0x28>)
 8001cae:	685a      	ldr	r2, [r3, #4]
 8001cb0:	4290      	cmp	r0, r2
 8001cb2:	d102      	bne.n	8001cba <rt_rmv_list+0x1e>
 8001cb4:	6842      	ldr	r2, [r0, #4]
 8001cb6:	605a      	str	r2, [r3, #4]
 8001cb8:	4770      	bx	lr
 8001cba:	4613      	mov	r3, r2
 8001cbc:	2a00      	cmp	r2, #0
 8001cbe:	d1f6      	bne.n	8001cae <rt_rmv_list+0x12>
 8001cc0:	4770      	bx	lr
 8001cc2:	bf00      	nop
 8001cc4:	20001e08 	.word	0x20001e08

08001cc8 <rt_resort_prio>:
 8001cc8:	b510      	push	{r4, lr}
 8001cca:	6884      	ldr	r4, [r0, #8]
 8001ccc:	4601      	mov	r1, r0
 8001cce:	b92c      	cbnz	r4, 8001cdc <rt_resort_prio+0x14>
 8001cd0:	7843      	ldrb	r3, [r0, #1]
 8001cd2:	2b01      	cmp	r3, #1
 8001cd4:	d10d      	bne.n	8001cf2 <rt_resort_prio+0x2a>
 8001cd6:	4c07      	ldr	r4, [pc, #28]	; (8001cf4 <rt_resort_prio+0x2c>)
 8001cd8:	e003      	b.n	8001ce2 <rt_resort_prio+0x1a>
 8001cda:	68a4      	ldr	r4, [r4, #8]
 8001cdc:	7823      	ldrb	r3, [r4, #0]
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d0fb      	beq.n	8001cda <rt_resort_prio+0x12>
 8001ce2:	4608      	mov	r0, r1
 8001ce4:	f7ff ffda 	bl	8001c9c <rt_rmv_list>
 8001ce8:	4620      	mov	r0, r4
 8001cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001cee:	f7ff bf45 	b.w	8001b7c <rt_put_prio>
 8001cf2:	bd10      	pop	{r4, pc}
 8001cf4:	20001e08 	.word	0x20001e08

08001cf8 <rt_rmv_dly>:
 8001cf8:	6903      	ldr	r3, [r0, #16]
 8001cfa:	b510      	push	{r4, lr}
 8001cfc:	b163      	cbz	r3, 8001d18 <rt_rmv_dly+0x20>
 8001cfe:	68c2      	ldr	r2, [r0, #12]
 8001d00:	60da      	str	r2, [r3, #12]
 8001d02:	68c2      	ldr	r2, [r0, #12]
 8001d04:	b14a      	cbz	r2, 8001d1a <rt_rmv_dly+0x22>
 8001d06:	8a99      	ldrh	r1, [r3, #20]
 8001d08:	8a84      	ldrh	r4, [r0, #20]
 8001d0a:	4421      	add	r1, r4
 8001d0c:	8299      	strh	r1, [r3, #20]
 8001d0e:	6113      	str	r3, [r2, #16]
 8001d10:	2300      	movs	r3, #0
 8001d12:	60c3      	str	r3, [r0, #12]
 8001d14:	2300      	movs	r3, #0
 8001d16:	6103      	str	r3, [r0, #16]
 8001d18:	bd10      	pop	{r4, pc}
 8001d1a:	829a      	strh	r2, [r3, #20]
 8001d1c:	e7fa      	b.n	8001d14 <rt_rmv_dly+0x1c>
	...

08001d20 <rt_psq_enq>:
 8001d20:	b470      	push	{r4, r5, r6}
 8001d22:	4b11      	ldr	r3, [pc, #68]	; (8001d68 <rt_psq_enq+0x48>)
 8001d24:	78dd      	ldrb	r5, [r3, #3]
 8001d26:	f3ef 8610 	mrs	r6, PRIMASK
 8001d2a:	f3ef 8210 	mrs	r2, PRIMASK
 8001d2e:	b672      	cpsid	i
 8001d30:	789a      	ldrb	r2, [r3, #2]
 8001d32:	4295      	cmp	r5, r2
 8001d34:	d911      	bls.n	8001d5a <rt_psq_enq+0x3a>
 8001d36:	3201      	adds	r2, #1
 8001d38:	709a      	strb	r2, [r3, #2]
 8001d3a:	781a      	ldrb	r2, [r3, #0]
 8001d3c:	1c54      	adds	r4, r2, #1
 8001d3e:	42a5      	cmp	r5, r4
 8001d40:	bf08      	it	eq
 8001d42:	2400      	moveq	r4, #0
 8001d44:	701c      	strb	r4, [r3, #0]
 8001d46:	b906      	cbnz	r6, 8001d4a <rt_psq_enq+0x2a>
 8001d48:	b662      	cpsie	i
 8001d4a:	4295      	cmp	r5, r2
 8001d4c:	d907      	bls.n	8001d5e <rt_psq_enq+0x3e>
 8001d4e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001d52:	bc70      	pop	{r4, r5, r6}
 8001d54:	6058      	str	r0, [r3, #4]
 8001d56:	6099      	str	r1, [r3, #8]
 8001d58:	4770      	bx	lr
 8001d5a:	2e00      	cmp	r6, #0
 8001d5c:	d0f4      	beq.n	8001d48 <rt_psq_enq+0x28>
 8001d5e:	2002      	movs	r0, #2
 8001d60:	bc70      	pop	{r4, r5, r6}
 8001d62:	f7ff bebd 	b.w	8001ae0 <os_error>
 8001d66:	bf00      	nop
 8001d68:	2000188c 	.word	0x2000188c

08001d6c <rt_psh_req>:
 8001d6c:	4b05      	ldr	r3, [pc, #20]	; (8001d84 <rt_psh_req+0x18>)
 8001d6e:	781b      	ldrb	r3, [r3, #0]
 8001d70:	b923      	cbnz	r3, 8001d7c <rt_psh_req+0x10>
 8001d72:	4b05      	ldr	r3, [pc, #20]	; (8001d88 <rt_psh_req+0x1c>)
 8001d74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001d78:	601a      	str	r2, [r3, #0]
 8001d7a:	4770      	bx	lr
 8001d7c:	4b03      	ldr	r3, [pc, #12]	; (8001d8c <rt_psh_req+0x20>)
 8001d7e:	2201      	movs	r2, #1
 8001d80:	701a      	strb	r2, [r3, #0]
 8001d82:	4770      	bx	lr
 8001d84:	20001234 	.word	0x20001234
 8001d88:	e000ed04 	.word	0xe000ed04
 8001d8c:	20001235 	.word	0x20001235

08001d90 <rt_pop_req>:
 8001d90:	b538      	push	{r3, r4, r5, lr}
 8001d92:	4b1a      	ldr	r3, [pc, #104]	; (8001dfc <rt_pop_req+0x6c>)
 8001d94:	4c1a      	ldr	r4, [pc, #104]	; (8001e00 <rt_pop_req+0x70>)
 8001d96:	6818      	ldr	r0, [r3, #0]
 8001d98:	2301      	movs	r3, #1
 8001d9a:	7043      	strb	r3, [r0, #1]
 8001d9c:	f7ff ff18 	bl	8001bd0 <rt_put_rdy_first>
 8001da0:	7865      	ldrb	r5, [r4, #1]
 8001da2:	78a3      	ldrb	r3, [r4, #2]
 8001da4:	b93b      	cbnz	r3, 8001db6 <rt_pop_req+0x26>
 8001da6:	4817      	ldr	r0, [pc, #92]	; (8001e04 <rt_pop_req+0x74>)
 8001da8:	7065      	strb	r5, [r4, #1]
 8001daa:	f7ff feff 	bl	8001bac <rt_get_first>
 8001dae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001db2:	f000 bddb 	b.w	800296c <rt_switch_req>
 8001db6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001dba:	6858      	ldr	r0, [r3, #4]
 8001dbc:	7802      	ldrb	r2, [r0, #0]
 8001dbe:	b99a      	cbnz	r2, 8001de8 <rt_pop_req+0x58>
 8001dc0:	8919      	ldrh	r1, [r3, #8]
 8001dc2:	f000 fa1b 	bl	80021fc <rt_evt_psh>
 8001dc6:	78e3      	ldrb	r3, [r4, #3]
 8001dc8:	3501      	adds	r5, #1
 8001dca:	429d      	cmp	r5, r3
 8001dcc:	bf08      	it	eq
 8001dce:	2500      	moveq	r5, #0
 8001dd0:	f3ef 8310 	mrs	r3, PRIMASK
 8001dd4:	f3ef 8210 	mrs	r2, PRIMASK
 8001dd8:	b672      	cpsid	i
 8001dda:	78a2      	ldrb	r2, [r4, #2]
 8001ddc:	3a01      	subs	r2, #1
 8001dde:	70a2      	strb	r2, [r4, #2]
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d1de      	bne.n	8001da2 <rt_pop_req+0x12>
 8001de4:	b662      	cpsie	i
 8001de6:	e7dc      	b.n	8001da2 <rt_pop_req+0x12>
 8001de8:	2a01      	cmp	r2, #1
 8001dea:	d103      	bne.n	8001df4 <rt_pop_req+0x64>
 8001dec:	6899      	ldr	r1, [r3, #8]
 8001dee:	f000 f993 	bl	8002118 <rt_mbx_psh>
 8001df2:	e7e8      	b.n	8001dc6 <rt_pop_req+0x36>
 8001df4:	f001 f918 	bl	8003028 <rt_sem_psh>
 8001df8:	e7e5      	b.n	8001dc6 <rt_pop_req+0x36>
 8001dfa:	bf00      	nop
 8001dfc:	20001e54 	.word	0x20001e54
 8001e00:	2000188c 	.word	0x2000188c
 8001e04:	20001e08 	.word	0x20001e08

08001e08 <os_tick_init>:
 8001e08:	4b08      	ldr	r3, [pc, #32]	; (8001e2c <os_tick_init+0x24>)
 8001e0a:	681a      	ldr	r2, [r3, #0]
 8001e0c:	4b08      	ldr	r3, [pc, #32]	; (8001e30 <os_tick_init+0x28>)
 8001e0e:	601a      	str	r2, [r3, #0]
 8001e10:	2200      	movs	r2, #0
 8001e12:	605a      	str	r2, [r3, #4]
 8001e14:	2207      	movs	r2, #7
 8001e16:	f843 2c04 	str.w	r2, [r3, #-4]
 8001e1a:	4a06      	ldr	r2, [pc, #24]	; (8001e34 <os_tick_init+0x2c>)
 8001e1c:	6813      	ldr	r3, [r2, #0]
 8001e1e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001e22:	6013      	str	r3, [r2, #0]
 8001e24:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e28:	4770      	bx	lr
 8001e2a:	bf00      	nop
 8001e2c:	08006e14 	.word	0x08006e14
 8001e30:	e000e014 	.word	0xe000e014
 8001e34:	e000ed20 	.word	0xe000ed20

08001e38 <os_tick_irqack>:
 8001e38:	4770      	bx	lr
	...

08001e3c <rt_systick>:
 8001e3c:	b508      	push	{r3, lr}
 8001e3e:	4b0b      	ldr	r3, [pc, #44]	; (8001e6c <rt_systick+0x30>)
 8001e40:	6818      	ldr	r0, [r3, #0]
 8001e42:	2301      	movs	r3, #1
 8001e44:	7043      	strb	r3, [r0, #1]
 8001e46:	f7ff fec3 	bl	8001bd0 <rt_put_rdy_first>
 8001e4a:	f000 fa0d 	bl	8002268 <rt_chk_robin>
 8001e4e:	4a08      	ldr	r2, [pc, #32]	; (8001e70 <rt_systick+0x34>)
 8001e50:	6813      	ldr	r3, [r2, #0]
 8001e52:	3301      	adds	r3, #1
 8001e54:	6013      	str	r3, [r2, #0]
 8001e56:	f7ff fee9 	bl	8001c2c <rt_dec_dly>
 8001e5a:	f000 fd0f 	bl	800287c <sysTimerTick>
 8001e5e:	4805      	ldr	r0, [pc, #20]	; (8001e74 <rt_systick+0x38>)
 8001e60:	f7ff fea4 	bl	8001bac <rt_get_first>
 8001e64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001e68:	f000 bd80 	b.w	800296c <rt_switch_req>
 8001e6c:	20001e54 	.word	0x20001e54
 8001e70:	20001e9c 	.word	0x20001e9c
 8001e74:	20001e08 	.word	0x20001e08

08001e78 <rt_stk_check>:
 8001e78:	4b06      	ldr	r3, [pc, #24]	; (8001e94 <rt_stk_check+0x1c>)
 8001e7a:	681a      	ldr	r2, [r3, #0]
 8001e7c:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001e7e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001e80:	4293      	cmp	r3, r2
 8001e82:	d803      	bhi.n	8001e8c <rt_stk_check+0x14>
 8001e84:	681a      	ldr	r2, [r3, #0]
 8001e86:	4b04      	ldr	r3, [pc, #16]	; (8001e98 <rt_stk_check+0x20>)
 8001e88:	429a      	cmp	r2, r3
 8001e8a:	d002      	beq.n	8001e92 <rt_stk_check+0x1a>
 8001e8c:	2001      	movs	r0, #1
 8001e8e:	f7ff be27 	b.w	8001ae0 <os_error>
 8001e92:	4770      	bx	lr
 8001e94:	20001e54 	.word	0x20001e54
 8001e98:	e25a2ea5 	.word	0xe25a2ea5

08001e9c <rt_init_stack>:
 8001e9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001e9e:	089b      	lsrs	r3, r3, #2
 8001ea0:	bf04      	itt	eq
 8001ea2:	4b22      	ldreq	r3, [pc, #136]	; (8001f2c <rt_init_stack+0x90>)
 8001ea4:	881b      	ldrheq	r3, [r3, #0]
 8001ea6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ea8:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001eaa:	bf08      	it	eq
 8001eac:	089b      	lsreq	r3, r3, #2
 8001eae:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001eb2:	0754      	lsls	r4, r2, #29
 8001eb4:	bf48      	it	mi
 8001eb6:	3a04      	submi	r2, #4
 8001eb8:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001ebc:	e902 0042 	stmdb	r2, {r1, r6}
 8001ec0:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001ec4:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001ec8:	f1a2 070c 	sub.w	r7, r2, #12
 8001ecc:	f04f 0e00 	mov.w	lr, #0
 8001ed0:	f846 ef04 	str.w	lr, [r6, #4]!
 8001ed4:	42be      	cmp	r6, r7
 8001ed6:	d1fb      	bne.n	8001ed0 <rt_init_stack+0x34>
 8001ed8:	69c6      	ldr	r6, [r0, #28]
 8001eda:	f842 6c20 	str.w	r6, [r2, #-32]
 8001ede:	6341      	str	r1, [r0, #52]	; 0x34
 8001ee0:	4912      	ldr	r1, [pc, #72]	; (8001f2c <rt_init_stack+0x90>)
 8001ee2:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001ee4:	6809      	ldr	r1, [r1, #0]
 8001ee6:	00c9      	lsls	r1, r1, #3
 8001ee8:	d517      	bpl.n	8001f1a <rt_init_stack+0x7e>
 8001eea:	2b11      	cmp	r3, #17
 8001eec:	d915      	bls.n	8001f1a <rt_init_stack+0x7e>
 8001eee:	3b10      	subs	r3, #16
 8001ef0:	f06f 0107 	mvn.w	r1, #7
 8001ef4:	085b      	lsrs	r3, r3, #1
 8001ef6:	434b      	muls	r3, r1
 8001ef8:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001efc:	440a      	add	r2, r1
 8001efe:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001f02:	4621      	mov	r1, r4
 8001f04:	4291      	cmp	r1, r2
 8001f06:	d10b      	bne.n	8001f20 <rt_init_stack+0x84>
 8001f08:	3308      	adds	r3, #8
 8001f0a:	441c      	add	r4, r3
 8001f0c:	1f23      	subs	r3, r4, #4
 8001f0e:	429d      	cmp	r5, r3
 8001f10:	bf3c      	itt	cc
 8001f12:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001f16:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001f1a:	4b05      	ldr	r3, [pc, #20]	; (8001f30 <rt_init_stack+0x94>)
 8001f1c:	602b      	str	r3, [r5, #0]
 8001f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f20:	f841 0c04 	str.w	r0, [r1, #-4]
 8001f24:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001f28:	e7ec      	b.n	8001f04 <rt_init_stack+0x68>
 8001f2a:	bf00      	nop
 8001f2c:	08006dfc 	.word	0x08006dfc
 8001f30:	e25a2ea5 	.word	0xe25a2ea5

08001f34 <rt_ret_val>:
 8001f34:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001f38:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001f3a:	b112      	cbz	r2, 8001f42 <rt_ret_val+0xe>
 8001f3c:	3360      	adds	r3, #96	; 0x60
 8001f3e:	6019      	str	r1, [r3, #0]
 8001f40:	4770      	bx	lr
 8001f42:	3320      	adds	r3, #32
 8001f44:	e7fb      	b.n	8001f3e <rt_ret_val+0xa>

08001f46 <rt_ret_val2>:
 8001f46:	b510      	push	{r4, lr}
 8001f48:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001f4c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001f4e:	b11c      	cbz	r4, 8001f58 <rt_ret_val2+0x12>
 8001f50:	3360      	adds	r3, #96	; 0x60
 8001f52:	e883 0006 	stmia.w	r3, {r1, r2}
 8001f56:	bd10      	pop	{r4, pc}
 8001f58:	3320      	adds	r3, #32
 8001f5a:	e7fa      	b.n	8001f52 <rt_ret_val2+0xc>

08001f5c <_init_box>:
 8001f5c:	2a00      	cmp	r2, #0
 8001f5e:	bfbb      	ittet	lt
 8001f60:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001f64:	3207      	addlt	r2, #7
 8001f66:	3203      	addge	r2, #3
 8001f68:	f022 0207 	biclt.w	r2, r2, #7
 8001f6c:	bfa8      	it	ge
 8001f6e:	f022 0203 	bicge.w	r2, r2, #3
 8001f72:	b510      	push	{r4, lr}
 8001f74:	bfb4      	ite	lt
 8001f76:	2310      	movlt	r3, #16
 8001f78:	230c      	movge	r3, #12
 8001f7a:	b192      	cbz	r2, 8001fa2 <_init_box+0x46>
 8001f7c:	18d4      	adds	r4, r2, r3
 8001f7e:	428c      	cmp	r4, r1
 8001f80:	d80f      	bhi.n	8001fa2 <_init_box+0x46>
 8001f82:	4401      	add	r1, r0
 8001f84:	4403      	add	r3, r0
 8001f86:	4254      	negs	r4, r2
 8001f88:	6041      	str	r1, [r0, #4]
 8001f8a:	6003      	str	r3, [r0, #0]
 8001f8c:	6082      	str	r2, [r0, #8]
 8001f8e:	4421      	add	r1, r4
 8001f90:	1898      	adds	r0, r3, r2
 8001f92:	4281      	cmp	r1, r0
 8001f94:	d302      	bcc.n	8001f9c <_init_box+0x40>
 8001f96:	5100      	str	r0, [r0, r4]
 8001f98:	4603      	mov	r3, r0
 8001f9a:	e7f9      	b.n	8001f90 <_init_box+0x34>
 8001f9c:	2000      	movs	r0, #0
 8001f9e:	6018      	str	r0, [r3, #0]
 8001fa0:	bd10      	pop	{r4, pc}
 8001fa2:	2001      	movs	r0, #1
 8001fa4:	bd10      	pop	{r4, pc}

08001fa6 <rt_alloc_box>:
 8001fa6:	f3ef 8310 	mrs	r3, PRIMASK
 8001faa:	b672      	cpsid	i
 8001fac:	6802      	ldr	r2, [r0, #0]
 8001fae:	f003 0301 	and.w	r3, r3, #1
 8001fb2:	b10a      	cbz	r2, 8001fb8 <rt_alloc_box+0x12>
 8001fb4:	6811      	ldr	r1, [r2, #0]
 8001fb6:	6001      	str	r1, [r0, #0]
 8001fb8:	b903      	cbnz	r3, 8001fbc <rt_alloc_box+0x16>
 8001fba:	b662      	cpsie	i
 8001fbc:	4610      	mov	r0, r2
 8001fbe:	4770      	bx	lr

08001fc0 <rt_free_box>:
 8001fc0:	4281      	cmp	r1, r0
 8001fc2:	d30d      	bcc.n	8001fe0 <rt_free_box+0x20>
 8001fc4:	6843      	ldr	r3, [r0, #4]
 8001fc6:	4299      	cmp	r1, r3
 8001fc8:	d20a      	bcs.n	8001fe0 <rt_free_box+0x20>
 8001fca:	f3ef 8310 	mrs	r3, PRIMASK
 8001fce:	b672      	cpsid	i
 8001fd0:	6802      	ldr	r2, [r0, #0]
 8001fd2:	600a      	str	r2, [r1, #0]
 8001fd4:	6001      	str	r1, [r0, #0]
 8001fd6:	f013 0001 	ands.w	r0, r3, #1
 8001fda:	d103      	bne.n	8001fe4 <rt_free_box+0x24>
 8001fdc:	b662      	cpsie	i
 8001fde:	4770      	bx	lr
 8001fe0:	2001      	movs	r0, #1
 8001fe2:	4770      	bx	lr
 8001fe4:	2000      	movs	r0, #0
 8001fe6:	4770      	bx	lr

08001fe8 <rt_mbx_init>:
 8001fe8:	2301      	movs	r3, #1
 8001fea:	3910      	subs	r1, #16
 8001fec:	7003      	strb	r3, [r0, #0]
 8001fee:	0889      	lsrs	r1, r1, #2
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	7043      	strb	r3, [r0, #1]
 8001ff4:	7083      	strb	r3, [r0, #2]
 8001ff6:	6043      	str	r3, [r0, #4]
 8001ff8:	8103      	strh	r3, [r0, #8]
 8001ffa:	8143      	strh	r3, [r0, #10]
 8001ffc:	8183      	strh	r3, [r0, #12]
 8001ffe:	81c1      	strh	r1, [r0, #14]
 8002000:	4770      	bx	lr
	...

08002004 <rt_mbx_wait>:
 8002004:	b570      	push	{r4, r5, r6, lr}
 8002006:	8985      	ldrh	r5, [r0, #12]
 8002008:	4604      	mov	r4, r0
 800200a:	4616      	mov	r6, r2
 800200c:	2d00      	cmp	r5, #0
 800200e:	d038      	beq.n	8002082 <rt_mbx_wait+0x7e>
 8002010:	8943      	ldrh	r3, [r0, #10]
 8002012:	1d1a      	adds	r2, r3, #4
 8002014:	3301      	adds	r3, #1
 8002016:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800201a:	600a      	str	r2, [r1, #0]
 800201c:	89c2      	ldrh	r2, [r0, #14]
 800201e:	b29b      	uxth	r3, r3
 8002020:	429a      	cmp	r2, r3
 8002022:	8143      	strh	r3, [r0, #10]
 8002024:	bf04      	itt	eq
 8002026:	2300      	moveq	r3, #0
 8002028:	8143      	strheq	r3, [r0, #10]
 800202a:	6843      	ldr	r3, [r0, #4]
 800202c:	b1f3      	cbz	r3, 800206c <rt_mbx_wait+0x68>
 800202e:	7843      	ldrb	r3, [r0, #1]
 8002030:	2b02      	cmp	r3, #2
 8002032:	d11b      	bne.n	800206c <rt_mbx_wait+0x68>
 8002034:	f7ff fdba 	bl	8001bac <rt_get_first>
 8002038:	2100      	movs	r1, #0
 800203a:	4605      	mov	r5, r0
 800203c:	f7ff ff7a 	bl	8001f34 <rt_ret_val>
 8002040:	8923      	ldrh	r3, [r4, #8]
 8002042:	69e9      	ldr	r1, [r5, #28]
 8002044:	1d1a      	adds	r2, r3, #4
 8002046:	3301      	adds	r3, #1
 8002048:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 800204c:	89e2      	ldrh	r2, [r4, #14]
 800204e:	b29b      	uxth	r3, r3
 8002050:	429a      	cmp	r2, r3
 8002052:	8123      	strh	r3, [r4, #8]
 8002054:	bf08      	it	eq
 8002056:	2300      	moveq	r3, #0
 8002058:	4628      	mov	r0, r5
 800205a:	bf08      	it	eq
 800205c:	8123      	strheq	r3, [r4, #8]
 800205e:	f7ff fe4b 	bl	8001cf8 <rt_rmv_dly>
 8002062:	4628      	mov	r0, r5
 8002064:	f000 fc9c 	bl	80029a0 <rt_dispatch>
 8002068:	2000      	movs	r0, #0
 800206a:	bd70      	pop	{r4, r5, r6, pc}
 800206c:	f3ef 8010 	mrs	r0, PRIMASK
 8002070:	f3ef 8310 	mrs	r3, PRIMASK
 8002074:	b672      	cpsid	i
 8002076:	3d01      	subs	r5, #1
 8002078:	81a5      	strh	r5, [r4, #12]
 800207a:	2800      	cmp	r0, #0
 800207c:	d1f4      	bne.n	8002068 <rt_mbx_wait+0x64>
 800207e:	b662      	cpsie	i
 8002080:	bd70      	pop	{r4, r5, r6, pc}
 8002082:	b14a      	cbz	r2, 8002098 <rt_mbx_wait+0x94>
 8002084:	6842      	ldr	r2, [r0, #4]
 8002086:	4b09      	ldr	r3, [pc, #36]	; (80020ac <rt_mbx_wait+0xa8>)
 8002088:	b142      	cbz	r2, 800209c <rt_mbx_wait+0x98>
 800208a:	6819      	ldr	r1, [r3, #0]
 800208c:	f7ff fd76 	bl	8001b7c <rt_put_prio>
 8002090:	2108      	movs	r1, #8
 8002092:	4630      	mov	r0, r6
 8002094:	f000 fca8 	bl	80029e8 <rt_block>
 8002098:	2001      	movs	r0, #1
 800209a:	bd70      	pop	{r4, r5, r6, pc}
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	6043      	str	r3, [r0, #4]
 80020a0:	605a      	str	r2, [r3, #4]
 80020a2:	6098      	str	r0, [r3, #8]
 80020a4:	2301      	movs	r3, #1
 80020a6:	7043      	strb	r3, [r0, #1]
 80020a8:	e7f2      	b.n	8002090 <rt_mbx_wait+0x8c>
 80020aa:	bf00      	nop
 80020ac:	20001e54 	.word	0x20001e54

080020b0 <rt_mbx_check>:
 80020b0:	89c2      	ldrh	r2, [r0, #14]
 80020b2:	8980      	ldrh	r0, [r0, #12]
 80020b4:	1a10      	subs	r0, r2, r0
 80020b6:	4770      	bx	lr

080020b8 <isr_mbx_send>:
 80020b8:	b508      	push	{r3, lr}
 80020ba:	f7ff fe31 	bl	8001d20 <rt_psq_enq>
 80020be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80020c2:	f7ff be53 	b.w	8001d6c <rt_psh_req>

080020c6 <isr_mbx_receive>:
 80020c6:	8983      	ldrh	r3, [r0, #12]
 80020c8:	b510      	push	{r4, lr}
 80020ca:	4604      	mov	r4, r0
 80020cc:	b30b      	cbz	r3, 8002112 <isr_mbx_receive+0x4c>
 80020ce:	8943      	ldrh	r3, [r0, #10]
 80020d0:	3304      	adds	r3, #4
 80020d2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80020d6:	600b      	str	r3, [r1, #0]
 80020d8:	7843      	ldrb	r3, [r0, #1]
 80020da:	2b02      	cmp	r3, #2
 80020dc:	d104      	bne.n	80020e8 <isr_mbx_receive+0x22>
 80020de:	2100      	movs	r1, #0
 80020e0:	f7ff fe1e 	bl	8001d20 <rt_psq_enq>
 80020e4:	f7ff fe42 	bl	8001d6c <rt_psh_req>
 80020e8:	f3ef 8310 	mrs	r3, PRIMASK
 80020ec:	f3ef 8210 	mrs	r2, PRIMASK
 80020f0:	b672      	cpsid	i
 80020f2:	89a2      	ldrh	r2, [r4, #12]
 80020f4:	3a01      	subs	r2, #1
 80020f6:	81a2      	strh	r2, [r4, #12]
 80020f8:	b903      	cbnz	r3, 80020fc <isr_mbx_receive+0x36>
 80020fa:	b662      	cpsie	i
 80020fc:	8963      	ldrh	r3, [r4, #10]
 80020fe:	89e2      	ldrh	r2, [r4, #14]
 8002100:	3301      	adds	r3, #1
 8002102:	b29b      	uxth	r3, r3
 8002104:	429a      	cmp	r2, r3
 8002106:	8163      	strh	r3, [r4, #10]
 8002108:	d101      	bne.n	800210e <isr_mbx_receive+0x48>
 800210a:	2300      	movs	r3, #0
 800210c:	8163      	strh	r3, [r4, #10]
 800210e:	2004      	movs	r0, #4
 8002110:	bd10      	pop	{r4, pc}
 8002112:	4618      	mov	r0, r3
 8002114:	bd10      	pop	{r4, pc}
	...

08002118 <rt_mbx_psh>:
 8002118:	6843      	ldr	r3, [r0, #4]
 800211a:	b570      	push	{r4, r5, r6, lr}
 800211c:	4604      	mov	r4, r0
 800211e:	460e      	mov	r6, r1
 8002120:	2b00      	cmp	r3, #0
 8002122:	d04b      	beq.n	80021bc <rt_mbx_psh+0xa4>
 8002124:	7845      	ldrb	r5, [r0, #1]
 8002126:	2d02      	cmp	r5, #2
 8002128:	d020      	beq.n	800216c <rt_mbx_psh+0x54>
 800212a:	2d03      	cmp	r5, #3
 800212c:	d00a      	beq.n	8002144 <rt_mbx_psh+0x2c>
 800212e:	2d01      	cmp	r5, #1
 8002130:	d161      	bne.n	80021f6 <rt_mbx_psh+0xde>
 8002132:	f7ff fd3b 	bl	8001bac <rt_get_first>
 8002136:	4604      	mov	r4, r0
 8002138:	4632      	mov	r2, r6
 800213a:	2110      	movs	r1, #16
 800213c:	f7ff ff03 	bl	8001f46 <rt_ret_val2>
 8002140:	7065      	strb	r5, [r4, #1]
 8002142:	e00e      	b.n	8002162 <rt_mbx_psh+0x4a>
 8002144:	4608      	mov	r0, r1
 8002146:	f7ff ff2e 	bl	8001fa6 <rt_alloc_box>
 800214a:	4605      	mov	r5, r0
 800214c:	2800      	cmp	r0, #0
 800214e:	d052      	beq.n	80021f6 <rt_mbx_psh+0xde>
 8002150:	4620      	mov	r0, r4
 8002152:	f7ff fd2b 	bl	8001bac <rt_get_first>
 8002156:	4629      	mov	r1, r5
 8002158:	4604      	mov	r4, r0
 800215a:	f7ff feeb 	bl	8001f34 <rt_ret_val>
 800215e:	2301      	movs	r3, #1
 8002160:	7063      	strb	r3, [r4, #1]
 8002162:	4620      	mov	r0, r4
 8002164:	f7ff fdc8 	bl	8001cf8 <rt_rmv_dly>
 8002168:	4621      	mov	r1, r4
 800216a:	e022      	b.n	80021b2 <rt_mbx_psh+0x9a>
 800216c:	f7ff fd1e 	bl	8001bac <rt_get_first>
 8002170:	2100      	movs	r1, #0
 8002172:	4605      	mov	r5, r0
 8002174:	f7ff fede 	bl	8001f34 <rt_ret_val>
 8002178:	8923      	ldrh	r3, [r4, #8]
 800217a:	69e9      	ldr	r1, [r5, #28]
 800217c:	1d1a      	adds	r2, r3, #4
 800217e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002182:	f3ef 8210 	mrs	r2, PRIMASK
 8002186:	f3ef 8110 	mrs	r1, PRIMASK
 800218a:	b672      	cpsid	i
 800218c:	89a1      	ldrh	r1, [r4, #12]
 800218e:	3101      	adds	r1, #1
 8002190:	81a1      	strh	r1, [r4, #12]
 8002192:	b902      	cbnz	r2, 8002196 <rt_mbx_psh+0x7e>
 8002194:	b662      	cpsie	i
 8002196:	89e2      	ldrh	r2, [r4, #14]
 8002198:	3301      	adds	r3, #1
 800219a:	b29b      	uxth	r3, r3
 800219c:	429a      	cmp	r2, r3
 800219e:	8123      	strh	r3, [r4, #8]
 80021a0:	bf04      	itt	eq
 80021a2:	2300      	moveq	r3, #0
 80021a4:	8123      	strheq	r3, [r4, #8]
 80021a6:	2301      	movs	r3, #1
 80021a8:	706b      	strb	r3, [r5, #1]
 80021aa:	4628      	mov	r0, r5
 80021ac:	f7ff fda4 	bl	8001cf8 <rt_rmv_dly>
 80021b0:	4629      	mov	r1, r5
 80021b2:	4811      	ldr	r0, [pc, #68]	; (80021f8 <rt_mbx_psh+0xe0>)
 80021b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021b8:	f7ff bce0 	b.w	8001b7c <rt_put_prio>
 80021bc:	8980      	ldrh	r0, [r0, #12]
 80021be:	89e1      	ldrh	r1, [r4, #14]
 80021c0:	4288      	cmp	r0, r1
 80021c2:	d213      	bcs.n	80021ec <rt_mbx_psh+0xd4>
 80021c4:	8923      	ldrh	r3, [r4, #8]
 80021c6:	1d1a      	adds	r2, r3, #4
 80021c8:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 80021cc:	f3ef 8210 	mrs	r2, PRIMASK
 80021d0:	f3ef 8510 	mrs	r5, PRIMASK
 80021d4:	b672      	cpsid	i
 80021d6:	3001      	adds	r0, #1
 80021d8:	81a0      	strh	r0, [r4, #12]
 80021da:	b902      	cbnz	r2, 80021de <rt_mbx_psh+0xc6>
 80021dc:	b662      	cpsie	i
 80021de:	3301      	adds	r3, #1
 80021e0:	b29b      	uxth	r3, r3
 80021e2:	4299      	cmp	r1, r3
 80021e4:	bf08      	it	eq
 80021e6:	2300      	moveq	r3, #0
 80021e8:	8123      	strh	r3, [r4, #8]
 80021ea:	bd70      	pop	{r4, r5, r6, pc}
 80021ec:	2003      	movs	r0, #3
 80021ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021f2:	f7ff bc75 	b.w	8001ae0 <os_error>
 80021f6:	bd70      	pop	{r4, r5, r6, pc}
 80021f8:	20001e08 	.word	0x20001e08

080021fc <rt_evt_psh>:
 80021fc:	b510      	push	{r4, lr}
 80021fe:	8b03      	ldrh	r3, [r0, #24]
 8002200:	7842      	ldrb	r2, [r0, #1]
 8002202:	4319      	orrs	r1, r3
 8002204:	2a06      	cmp	r2, #6
 8002206:	4604      	mov	r4, r0
 8002208:	8301      	strh	r1, [r0, #24]
 800220a:	8b43      	ldrh	r3, [r0, #26]
 800220c:	d115      	bne.n	800223a <rt_evt_psh+0x3e>
 800220e:	ea33 0201 	bics.w	r2, r3, r1
 8002212:	d119      	bne.n	8002248 <rt_evt_psh+0x4c>
 8002214:	ea21 0103 	bic.w	r1, r1, r3
 8002218:	8321      	strh	r1, [r4, #24]
 800221a:	4620      	mov	r0, r4
 800221c:	f7ff fd6c 	bl	8001cf8 <rt_rmv_dly>
 8002220:	2301      	movs	r3, #1
 8002222:	4620      	mov	r0, r4
 8002224:	7063      	strb	r3, [r4, #1]
 8002226:	8b62      	ldrh	r2, [r4, #26]
 8002228:	2108      	movs	r1, #8
 800222a:	f7ff fe8c 	bl	8001f46 <rt_ret_val2>
 800222e:	4621      	mov	r1, r4
 8002230:	4806      	ldr	r0, [pc, #24]	; (800224c <rt_evt_psh+0x50>)
 8002232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002236:	f7ff bca1 	b.w	8001b7c <rt_put_prio>
 800223a:	2a05      	cmp	r2, #5
 800223c:	d104      	bne.n	8002248 <rt_evt_psh+0x4c>
 800223e:	ea11 0203 	ands.w	r2, r1, r3
 8002242:	d001      	beq.n	8002248 <rt_evt_psh+0x4c>
 8002244:	8342      	strh	r2, [r0, #26]
 8002246:	e7e5      	b.n	8002214 <rt_evt_psh+0x18>
 8002248:	bd10      	pop	{r4, pc}
 800224a:	bf00      	nop
 800224c:	20001e08 	.word	0x20001e08

08002250 <rt_init_robin>:
 8002250:	4b03      	ldr	r3, [pc, #12]	; (8002260 <rt_init_robin+0x10>)
 8002252:	2200      	movs	r2, #0
 8002254:	601a      	str	r2, [r3, #0]
 8002256:	4a03      	ldr	r2, [pc, #12]	; (8002264 <rt_init_robin+0x14>)
 8002258:	6812      	ldr	r2, [r2, #0]
 800225a:	80da      	strh	r2, [r3, #6]
 800225c:	4770      	bx	lr
 800225e:	bf00      	nop
 8002260:	20001e40 	.word	0x20001e40
 8002264:	08006df8 	.word	0x08006df8

08002268 <rt_chk_robin>:
 8002268:	b508      	push	{r3, lr}
 800226a:	4b0e      	ldr	r3, [pc, #56]	; (80022a4 <rt_chk_robin+0x3c>)
 800226c:	685a      	ldr	r2, [r3, #4]
 800226e:	4b0e      	ldr	r3, [pc, #56]	; (80022a8 <rt_chk_robin+0x40>)
 8002270:	6819      	ldr	r1, [r3, #0]
 8002272:	4291      	cmp	r1, r2
 8002274:	490d      	ldr	r1, [pc, #52]	; (80022ac <rt_chk_robin+0x44>)
 8002276:	d005      	beq.n	8002284 <rt_chk_robin+0x1c>
 8002278:	601a      	str	r2, [r3, #0]
 800227a:	88da      	ldrh	r2, [r3, #6]
 800227c:	6808      	ldr	r0, [r1, #0]
 800227e:	3a01      	subs	r2, #1
 8002280:	4402      	add	r2, r0
 8002282:	809a      	strh	r2, [r3, #4]
 8002284:	8898      	ldrh	r0, [r3, #4]
 8002286:	880a      	ldrh	r2, [r1, #0]
 8002288:	4290      	cmp	r0, r2
 800228a:	d10a      	bne.n	80022a2 <rt_chk_robin+0x3a>
 800228c:	2200      	movs	r2, #0
 800228e:	4805      	ldr	r0, [pc, #20]	; (80022a4 <rt_chk_robin+0x3c>)
 8002290:	601a      	str	r2, [r3, #0]
 8002292:	f7ff fc8b 	bl	8001bac <rt_get_first>
 8002296:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800229a:	4601      	mov	r1, r0
 800229c:	4801      	ldr	r0, [pc, #4]	; (80022a4 <rt_chk_robin+0x3c>)
 800229e:	f7ff bc6d 	b.w	8001b7c <rt_put_prio>
 80022a2:	bd08      	pop	{r3, pc}
 80022a4:	20001e08 	.word	0x20001e08
 80022a8:	20001e40 	.word	0x20001e40
 80022ac:	20001e9c 	.word	0x20001e9c

080022b0 <rt_timer_insert>:
 80022b0:	4a0b      	ldr	r2, [pc, #44]	; (80022e0 <rt_timer_insert+0x30>)
 80022b2:	6813      	ldr	r3, [r2, #0]
 80022b4:	b530      	push	{r4, r5, lr}
 80022b6:	2400      	movs	r4, #0
 80022b8:	b943      	cbnz	r3, 80022cc <rt_timer_insert+0x1c>
 80022ba:	6003      	str	r3, [r0, #0]
 80022bc:	6081      	str	r1, [r0, #8]
 80022be:	b113      	cbz	r3, 80022c6 <rt_timer_insert+0x16>
 80022c0:	689d      	ldr	r5, [r3, #8]
 80022c2:	1a69      	subs	r1, r5, r1
 80022c4:	6099      	str	r1, [r3, #8]
 80022c6:	b144      	cbz	r4, 80022da <rt_timer_insert+0x2a>
 80022c8:	6020      	str	r0, [r4, #0]
 80022ca:	bd30      	pop	{r4, r5, pc}
 80022cc:	689d      	ldr	r5, [r3, #8]
 80022ce:	42a9      	cmp	r1, r5
 80022d0:	d3f3      	bcc.n	80022ba <rt_timer_insert+0xa>
 80022d2:	461c      	mov	r4, r3
 80022d4:	1b49      	subs	r1, r1, r5
 80022d6:	681b      	ldr	r3, [r3, #0]
 80022d8:	e7ee      	b.n	80022b8 <rt_timer_insert+0x8>
 80022da:	6010      	str	r0, [r2, #0]
 80022dc:	bd30      	pop	{r4, r5, pc}
 80022de:	bf00      	nop
 80022e0:	20001e50 	.word	0x20001e50

080022e4 <rt_ms2tick>:
 80022e4:	b1c0      	cbz	r0, 8002318 <rt_ms2tick+0x34>
 80022e6:	1c43      	adds	r3, r0, #1
 80022e8:	d011      	beq.n	800230e <rt_ms2tick+0x2a>
 80022ea:	4b0c      	ldr	r3, [pc, #48]	; (800231c <rt_ms2tick+0x38>)
 80022ec:	4298      	cmp	r0, r3
 80022ee:	d811      	bhi.n	8002314 <rt_ms2tick+0x30>
 80022f0:	4b0b      	ldr	r3, [pc, #44]	; (8002320 <rt_ms2tick+0x3c>)
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80022f8:	1e5a      	subs	r2, r3, #1
 80022fa:	fb01 2000 	mla	r0, r1, r0, r2
 80022fe:	fbb0 f3f3 	udiv	r3, r0, r3
 8002302:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002306:	4283      	cmp	r3, r0
 8002308:	d806      	bhi.n	8002318 <rt_ms2tick+0x34>
 800230a:	b298      	uxth	r0, r3
 800230c:	4770      	bx	lr
 800230e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002312:	4770      	bx	lr
 8002314:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002318:	4770      	bx	lr
 800231a:	bf00      	nop
 800231c:	003d0900 	.word	0x003d0900
 8002320:	08006db0 	.word	0x08006db0

08002324 <rt_tid2ptcb>:
 8002324:	b138      	cbz	r0, 8002336 <rt_tid2ptcb+0x12>
 8002326:	0783      	lsls	r3, r0, #30
 8002328:	d104      	bne.n	8002334 <rt_tid2ptcb+0x10>
 800232a:	7803      	ldrb	r3, [r0, #0]
 800232c:	2b00      	cmp	r3, #0
 800232e:	bf18      	it	ne
 8002330:	2000      	movne	r0, #0
 8002332:	4770      	bx	lr
 8002334:	2000      	movs	r0, #0
 8002336:	4770      	bx	lr

08002338 <svcKernelStart>:
 8002338:	b5b0      	push	{r4, r5, r7, lr}
 800233a:	4d0e      	ldr	r5, [pc, #56]	; (8002374 <svcKernelStart+0x3c>)
 800233c:	7828      	ldrb	r0, [r5, #0]
 800233e:	af00      	add	r7, sp, #0
 8002340:	b9a8      	cbnz	r0, 800236e <svcKernelStart+0x36>
 8002342:	4c0d      	ldr	r4, [pc, #52]	; (8002378 <svcKernelStart+0x40>)
 8002344:	6823      	ldr	r3, [r4, #0]
 8002346:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 800234a:	f000 fb6f 	bl	8002a2c <rt_tsk_prio>
 800234e:	6823      	ldr	r3, [r4, #0]
 8002350:	78da      	ldrb	r2, [r3, #3]
 8002352:	2aff      	cmp	r2, #255	; 0xff
 8002354:	d103      	bne.n	800235e <svcKernelStart+0x26>
 8002356:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002358:	3220      	adds	r2, #32
 800235a:	f382 8809 	msr	PSP, r2
 800235e:	6862      	ldr	r2, [r4, #4]
 8002360:	b90a      	cbnz	r2, 8002366 <svcKernelStart+0x2e>
 8002362:	e884 000c 	stmia.w	r4, {r2, r3}
 8002366:	f000 fd19 	bl	8002d9c <rt_sys_start>
 800236a:	2301      	movs	r3, #1
 800236c:	702b      	strb	r3, [r5, #0]
 800236e:	2000      	movs	r0, #0
 8002370:	bdb0      	pop	{r4, r5, r7, pc}
 8002372:	bf00      	nop
 8002374:	20001e4d 	.word	0x20001e4d
 8002378:	20001e54 	.word	0x20001e54

0800237c <svcKernelRunning>:
 800237c:	4b01      	ldr	r3, [pc, #4]	; (8002384 <svcKernelRunning+0x8>)
 800237e:	7818      	ldrb	r0, [r3, #0]
 8002380:	4770      	bx	lr
 8002382:	bf00      	nop
 8002384:	20001e4d 	.word	0x20001e4d

08002388 <osKernelRunning>:
 8002388:	b510      	push	{r4, lr}
 800238a:	f3ef 8410 	mrs	r4, PRIMASK
 800238e:	b934      	cbnz	r4, 800239e <osKernelRunning+0x16>
 8002390:	f3ef 8405 	mrs	r4, IPSR
 8002394:	b91c      	cbnz	r4, 800239e <osKernelRunning+0x16>
 8002396:	f3ef 8414 	mrs	r4, CONTROL
 800239a:	07e4      	lsls	r4, r4, #31
 800239c:	d402      	bmi.n	80023a4 <osKernelRunning+0x1c>
 800239e:	4b03      	ldr	r3, [pc, #12]	; (80023ac <osKernelRunning+0x24>)
 80023a0:	7818      	ldrb	r0, [r3, #0]
 80023a2:	bd10      	pop	{r4, pc}
 80023a4:	f8df c008 	ldr.w	r12, [pc, #8]	; 80023b0 <osKernelRunning+0x28>
 80023a8:	df00      	svc	0
 80023aa:	bd10      	pop	{r4, pc}
 80023ac:	20001e4d 	.word	0x20001e4d
 80023b0:	0800237d 	.word	0x0800237d

080023b4 <osKernelStart>:
 80023b4:	b590      	push	{r4, r7, lr}
 80023b6:	b089      	sub	sp, #36	; 0x24
 80023b8:	af00      	add	r7, sp, #0
 80023ba:	f3ef 8310 	mrs	r3, PRIMASK
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d137      	bne.n	8002432 <osKernelStart+0x7e>
 80023c2:	f3ef 8305 	mrs	r3, IPSR
 80023c6:	2b00      	cmp	r3, #0
 80023c8:	d133      	bne.n	8002432 <osKernelStart+0x7e>
 80023ca:	f7ff ffdd 	bl	8002388 <osKernelRunning>
 80023ce:	b928      	cbnz	r0, 80023dc <osKernelStart+0x28>
 80023d0:	4c19      	ldr	r4, [pc, #100]	; (8002438 <osKernelStart+0x84>)
 80023d2:	6824      	ldr	r4, [r4, #0]
 80023d4:	b114      	cbz	r4, 80023dc <osKernelStart+0x28>
 80023d6:	6864      	ldr	r4, [r4, #4]
 80023d8:	b104      	cbz	r4, 80023dc <osKernelStart+0x28>
 80023da:	47a0      	blx	r4
 80023dc:	f3ef 8414 	mrs	r4, CONTROL
 80023e0:	f004 0403 	and.w	r4, r4, #3
 80023e4:	2c02      	cmp	r4, #2
 80023e6:	d018      	beq.n	800241a <osKernelStart+0x66>
 80023e8:	2c03      	cmp	r4, #3
 80023ea:	d01c      	beq.n	8002426 <osKernelStart+0x72>
 80023ec:	2c01      	cmp	r4, #1
 80023ee:	d01e      	beq.n	800242e <osKernelStart+0x7a>
 80023f0:	f107 0420 	add.w	r4, r7, #32
 80023f4:	f384 8809 	msr	PSP, r4
 80023f8:	4c10      	ldr	r4, [pc, #64]	; (800243c <osKernelStart+0x88>)
 80023fa:	7824      	ldrb	r4, [r4, #0]
 80023fc:	07e4      	lsls	r4, r4, #31
 80023fe:	d510      	bpl.n	8002422 <osKernelStart+0x6e>
 8002400:	2402      	movs	r4, #2
 8002402:	f384 8814 	msr	CONTROL, r4
 8002406:	f3bf 8f4f 	dsb	sy
 800240a:	f3bf 8f6f 	isb	sy
 800240e:	f8df c030 	ldr.w	r12, [pc, #48]	; 8002440 <osKernelStart+0x8c>
 8002412:	df00      	svc	0
 8002414:	3724      	adds	r7, #36	; 0x24
 8002416:	46bd      	mov	sp, r7
 8002418:	bd90      	pop	{r4, r7, pc}
 800241a:	4c08      	ldr	r4, [pc, #32]	; (800243c <osKernelStart+0x88>)
 800241c:	7824      	ldrb	r4, [r4, #0]
 800241e:	07e4      	lsls	r4, r4, #31
 8002420:	d4f5      	bmi.n	800240e <osKernelStart+0x5a>
 8002422:	2403      	movs	r4, #3
 8002424:	e7ed      	b.n	8002402 <osKernelStart+0x4e>
 8002426:	4c05      	ldr	r4, [pc, #20]	; (800243c <osKernelStart+0x88>)
 8002428:	7824      	ldrb	r4, [r4, #0]
 800242a:	07e4      	lsls	r4, r4, #31
 800242c:	d5ef      	bpl.n	800240e <osKernelStart+0x5a>
 800242e:	20ff      	movs	r0, #255	; 0xff
 8002430:	e7f0      	b.n	8002414 <osKernelStart+0x60>
 8002432:	2082      	movs	r0, #130	; 0x82
 8002434:	e7ee      	b.n	8002414 <osKernelStart+0x60>
 8002436:	bf00      	nop
 8002438:	20001e3c 	.word	0x20001e3c
 800243c:	08006dde 	.word	0x08006dde
 8002440:	08002339 	.word	0x08002339

08002444 <svcThreadCreate>:
 8002444:	b570      	push	{r4, r5, r6, lr}
 8002446:	460b      	mov	r3, r1
 8002448:	4616      	mov	r6, r2
 800244a:	4602      	mov	r2, r0
 800244c:	b910      	cbnz	r0, 8002454 <svcThreadCreate+0x10>
 800244e:	2400      	movs	r4, #0
 8002450:	4620      	mov	r0, r4
 8002452:	bd70      	pop	{r4, r5, r6, pc}
 8002454:	6800      	ldr	r0, [r0, #0]
 8002456:	2800      	cmp	r0, #0
 8002458:	d0f9      	beq.n	800244e <svcThreadCreate+0xa>
 800245a:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800245e:	1ce5      	adds	r5, r4, #3
 8002460:	b2ad      	uxth	r5, r5
 8002462:	2d06      	cmp	r5, #6
 8002464:	d8f3      	bhi.n	800244e <svcThreadCreate+0xa>
 8002466:	68d1      	ldr	r1, [r2, #12]
 8002468:	b1c1      	cbz	r1, 800249c <svcThreadCreate+0x58>
 800246a:	6912      	ldr	r2, [r2, #16]
 800246c:	3404      	adds	r4, #4
 800246e:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8002472:	f000 fb19 	bl	8002aa8 <rt_tsk_create>
 8002476:	2800      	cmp	r0, #0
 8002478:	d0e9      	beq.n	800244e <svcThreadCreate+0xa>
 800247a:	4b0a      	ldr	r3, [pc, #40]	; (80024a4 <svcThreadCreate+0x60>)
 800247c:	4a0a      	ldr	r2, [pc, #40]	; (80024a8 <svcThreadCreate+0x64>)
 800247e:	3801      	subs	r0, #1
 8002480:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002484:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002486:	635a      	str	r2, [r3, #52]	; 0x34
 8002488:	4b08      	ldr	r3, [pc, #32]	; (80024ac <svcThreadCreate+0x68>)
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	b143      	cbz	r3, 80024a0 <svcThreadCreate+0x5c>
 800248e:	689b      	ldr	r3, [r3, #8]
 8002490:	b133      	cbz	r3, 80024a0 <svcThreadCreate+0x5c>
 8002492:	4631      	mov	r1, r6
 8002494:	78e0      	ldrb	r0, [r4, #3]
 8002496:	4798      	blx	r3
 8002498:	63e0      	str	r0, [r4, #60]	; 0x3c
 800249a:	e7d9      	b.n	8002450 <svcThreadCreate+0xc>
 800249c:	460a      	mov	r2, r1
 800249e:	e7e5      	b.n	800246c <svcThreadCreate+0x28>
 80024a0:	63e6      	str	r6, [r4, #60]	; 0x3c
 80024a2:	e7d5      	b.n	8002450 <svcThreadCreate+0xc>
 80024a4:	20001870 	.word	0x20001870
 80024a8:	0800264d 	.word	0x0800264d
 80024ac:	20001e3c 	.word	0x20001e3c

080024b0 <svcThreadGetId>:
 80024b0:	b508      	push	{r3, lr}
 80024b2:	f000 fab3 	bl	8002a1c <rt_tsk_self>
 80024b6:	b118      	cbz	r0, 80024c0 <svcThreadGetId+0x10>
 80024b8:	3801      	subs	r0, #1
 80024ba:	4b02      	ldr	r3, [pc, #8]	; (80024c4 <svcThreadGetId+0x14>)
 80024bc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80024c0:	bd08      	pop	{r3, pc}
 80024c2:	bf00      	nop
 80024c4:	20001870 	.word	0x20001870

080024c8 <svcThreadTerminate>:
 80024c8:	b510      	push	{r4, lr}
 80024ca:	f7ff ff2b 	bl	8002324 <rt_tid2ptcb>
 80024ce:	4604      	mov	r4, r0
 80024d0:	b170      	cbz	r0, 80024f0 <svcThreadTerminate+0x28>
 80024d2:	4b08      	ldr	r3, [pc, #32]	; (80024f4 <svcThreadTerminate+0x2c>)
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	b11b      	cbz	r3, 80024e0 <svcThreadTerminate+0x18>
 80024d8:	68db      	ldr	r3, [r3, #12]
 80024da:	b10b      	cbz	r3, 80024e0 <svcThreadTerminate+0x18>
 80024dc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80024de:	4798      	blx	r3
 80024e0:	78e0      	ldrb	r0, [r4, #3]
 80024e2:	f000 fb37 	bl	8002b54 <rt_tsk_delete>
 80024e6:	28ff      	cmp	r0, #255	; 0xff
 80024e8:	bf0c      	ite	eq
 80024ea:	2081      	moveq	r0, #129	; 0x81
 80024ec:	2000      	movne	r0, #0
 80024ee:	bd10      	pop	{r4, pc}
 80024f0:	2080      	movs	r0, #128	; 0x80
 80024f2:	bd10      	pop	{r4, pc}
 80024f4:	20001e3c 	.word	0x20001e3c

080024f8 <svcDelay>:
 80024f8:	b508      	push	{r3, lr}
 80024fa:	b128      	cbz	r0, 8002508 <svcDelay+0x10>
 80024fc:	f7ff fef2 	bl	80022e4 <rt_ms2tick>
 8002500:	f000 fd8e 	bl	8003020 <rt_dly_wait>
 8002504:	2040      	movs	r0, #64	; 0x40
 8002506:	bd08      	pop	{r3, pc}
 8002508:	bd08      	pop	{r3, pc}
	...

0800250c <osDelay>:
 800250c:	b510      	push	{r4, lr}
 800250e:	f3ef 8410 	mrs	r4, PRIMASK
 8002512:	b934      	cbnz	r4, 8002522 <osDelay+0x16>
 8002514:	f3ef 8405 	mrs	r4, IPSR
 8002518:	b91c      	cbnz	r4, 8002522 <osDelay+0x16>
 800251a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002528 <osDelay+0x1c>
 800251e:	df00      	svc	0
 8002520:	bd10      	pop	{r4, pc}
 8002522:	2082      	movs	r0, #130	; 0x82
 8002524:	bd10      	pop	{r4, pc}
 8002526:	0000      	.short	0x0000
 8002528:	080024f9 	.word	0x080024f9

0800252c <svcTimerCall>:
 800252c:	0783      	lsls	r3, r0, #30
 800252e:	d105      	bne.n	800253c <svcTimerCall+0x10>
 8002530:	b138      	cbz	r0, 8002542 <svcTimerCall+0x16>
 8002532:	6943      	ldr	r3, [r0, #20]
 8002534:	6901      	ldr	r1, [r0, #16]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	4618      	mov	r0, r3
 800253a:	4770      	bx	lr
 800253c:	2300      	movs	r3, #0
 800253e:	4619      	mov	r1, r3
 8002540:	e7fa      	b.n	8002538 <svcTimerCall+0xc>
 8002542:	4603      	mov	r3, r0
 8002544:	e7fb      	b.n	800253e <svcTimerCall+0x12>
	...

08002548 <osTimerCall>:
 8002548:	b510      	push	{r4, lr}
 800254a:	4604      	mov	r4, r0
 800254c:	4608      	mov	r0, r1
 800254e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800255c <osTimerCall+0x14>
 8002552:	df00      	svc	0
 8002554:	e884 0003 	stmia.w	r4, {r0, r1}
 8002558:	4620      	mov	r0, r4
 800255a:	bd10      	pop	{r4, pc}
 800255c:	0800252d 	.word	0x0800252d

08002560 <svcMutexCreate>:
 8002560:	b510      	push	{r4, lr}
 8002562:	b148      	cbz	r0, 8002578 <svcMutexCreate+0x18>
 8002564:	6804      	ldr	r4, [r0, #0]
 8002566:	b124      	cbz	r4, 8002572 <svcMutexCreate+0x12>
 8002568:	7823      	ldrb	r3, [r4, #0]
 800256a:	b923      	cbnz	r3, 8002576 <svcMutexCreate+0x16>
 800256c:	4620      	mov	r0, r4
 800256e:	f000 fc5b 	bl	8002e28 <rt_mut_init>
 8002572:	4620      	mov	r0, r4
 8002574:	bd10      	pop	{r4, pc}
 8002576:	2000      	movs	r0, #0
 8002578:	bd10      	pop	{r4, pc}

0800257a <svcMutexWait>:
 800257a:	b570      	push	{r4, r5, r6, lr}
 800257c:	f010 0403 	ands.w	r4, r0, #3
 8002580:	4605      	mov	r5, r0
 8002582:	460e      	mov	r6, r1
 8002584:	d111      	bne.n	80025aa <svcMutexWait+0x30>
 8002586:	b180      	cbz	r0, 80025aa <svcMutexWait+0x30>
 8002588:	7803      	ldrb	r3, [r0, #0]
 800258a:	2b03      	cmp	r3, #3
 800258c:	d10d      	bne.n	80025aa <svcMutexWait+0x30>
 800258e:	4608      	mov	r0, r1
 8002590:	f7ff fea8 	bl	80022e4 <rt_ms2tick>
 8002594:	4601      	mov	r1, r0
 8002596:	4628      	mov	r0, r5
 8002598:	f000 fd14 	bl	8002fc4 <rt_mut_wait>
 800259c:	2801      	cmp	r0, #1
 800259e:	d106      	bne.n	80025ae <svcMutexWait+0x34>
 80025a0:	2e00      	cmp	r6, #0
 80025a2:	bf14      	ite	ne
 80025a4:	20c1      	movne	r0, #193	; 0xc1
 80025a6:	2081      	moveq	r0, #129	; 0x81
 80025a8:	bd70      	pop	{r4, r5, r6, pc}
 80025aa:	2080      	movs	r0, #128	; 0x80
 80025ac:	bd70      	pop	{r4, r5, r6, pc}
 80025ae:	4620      	mov	r0, r4
 80025b0:	bd70      	pop	{r4, r5, r6, pc}

080025b2 <svcMutexRelease>:
 80025b2:	0782      	lsls	r2, r0, #30
 80025b4:	b508      	push	{r3, lr}
 80025b6:	d10a      	bne.n	80025ce <svcMutexRelease+0x1c>
 80025b8:	b148      	cbz	r0, 80025ce <svcMutexRelease+0x1c>
 80025ba:	7803      	ldrb	r3, [r0, #0]
 80025bc:	2b03      	cmp	r3, #3
 80025be:	d106      	bne.n	80025ce <svcMutexRelease+0x1c>
 80025c0:	f000 fc90 	bl	8002ee4 <rt_mut_release>
 80025c4:	28ff      	cmp	r0, #255	; 0xff
 80025c6:	bf0c      	ite	eq
 80025c8:	2081      	moveq	r0, #129	; 0x81
 80025ca:	2000      	movne	r0, #0
 80025cc:	bd08      	pop	{r3, pc}
 80025ce:	2080      	movs	r0, #128	; 0x80
 80025d0:	bd08      	pop	{r3, pc}

080025d2 <svcMutexDelete>:
 80025d2:	b510      	push	{r4, lr}
 80025d4:	f010 0403 	ands.w	r4, r0, #3
 80025d8:	d107      	bne.n	80025ea <svcMutexDelete+0x18>
 80025da:	b130      	cbz	r0, 80025ea <svcMutexDelete+0x18>
 80025dc:	7803      	ldrb	r3, [r0, #0]
 80025de:	2b03      	cmp	r3, #3
 80025e0:	d103      	bne.n	80025ea <svcMutexDelete+0x18>
 80025e2:	f000 fc29 	bl	8002e38 <rt_mut_delete>
 80025e6:	4620      	mov	r0, r4
 80025e8:	bd10      	pop	{r4, pc}
 80025ea:	2080      	movs	r0, #128	; 0x80
 80025ec:	bd10      	pop	{r4, pc}
	...

080025f0 <osMutexCreate>:
 80025f0:	b570      	push	{r4, r5, r6, lr}
 80025f2:	4605      	mov	r5, r0
 80025f4:	f3ef 8410 	mrs	r4, PRIMASK
 80025f8:	b994      	cbnz	r4, 8002620 <osMutexCreate+0x30>
 80025fa:	f3ef 8605 	mrs	r6, IPSR
 80025fe:	b97e      	cbnz	r6, 8002620 <osMutexCreate+0x30>
 8002600:	f3ef 8414 	mrs	r4, CONTROL
 8002604:	07e4      	lsls	r4, r4, #31
 8002606:	d406      	bmi.n	8002616 <osMutexCreate+0x26>
 8002608:	4c06      	ldr	r4, [pc, #24]	; (8002624 <osMutexCreate+0x34>)
 800260a:	7824      	ldrb	r4, [r4, #0]
 800260c:	b91c      	cbnz	r4, 8002616 <osMutexCreate+0x26>
 800260e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002612:	f7ff bfa5 	b.w	8002560 <svcMutexCreate>
 8002616:	4628      	mov	r0, r5
 8002618:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002628 <osMutexCreate+0x38>
 800261c:	df00      	svc	0
 800261e:	bd70      	pop	{r4, r5, r6, pc}
 8002620:	2000      	movs	r0, #0
 8002622:	bd70      	pop	{r4, r5, r6, pc}
 8002624:	20001e4d 	.word	0x20001e4d
 8002628:	08002561 	.word	0x08002561

0800262c <osMutexWait>:
 800262c:	b510      	push	{r4, lr}
 800262e:	f3ef 8410 	mrs	r4, PRIMASK
 8002632:	b934      	cbnz	r4, 8002642 <osMutexWait+0x16>
 8002634:	f3ef 8405 	mrs	r4, IPSR
 8002638:	b91c      	cbnz	r4, 8002642 <osMutexWait+0x16>
 800263a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002648 <osMutexWait+0x1c>
 800263e:	df00      	svc	0
 8002640:	bd10      	pop	{r4, pc}
 8002642:	2082      	movs	r0, #130	; 0x82
 8002644:	bd10      	pop	{r4, pc}
 8002646:	0000      	.short	0x0000
 8002648:	0800257b 	.word	0x0800257b

0800264c <osThreadExit>:
 800264c:	4808      	ldr	r0, [pc, #32]	; (8002670 <osThreadExit+0x24>)
 800264e:	b508      	push	{r3, lr}
 8002650:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002654:	6800      	ldr	r0, [r0, #0]
 8002656:	f7ff ffe9 	bl	800262c <osMutexWait>
 800265a:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002674 <osThreadExit+0x28>
 800265e:	df00      	svc	0
 8002660:	4604      	mov	r4, r0
 8002662:	f7ff fa4b 	bl	8001afc <sysThreadTerminate>
 8002666:	4620      	mov	r0, r4
 8002668:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002678 <osThreadExit+0x2c>
 800266c:	df00      	svc	0
 800266e:	e7fe      	b.n	800266e <osThreadExit+0x22>
 8002670:	20001e48 	.word	0x20001e48
 8002674:	080024b1 	.word	0x080024b1
 8002678:	080024c9 	.word	0x080024c9

0800267c <osMutexRelease>:
 800267c:	b510      	push	{r4, lr}
 800267e:	f3ef 8410 	mrs	r4, PRIMASK
 8002682:	b934      	cbnz	r4, 8002692 <osMutexRelease+0x16>
 8002684:	f3ef 8405 	mrs	r4, IPSR
 8002688:	b91c      	cbnz	r4, 8002692 <osMutexRelease+0x16>
 800268a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002698 <osMutexRelease+0x1c>
 800268e:	df00      	svc	0
 8002690:	bd10      	pop	{r4, pc}
 8002692:	2082      	movs	r0, #130	; 0x82
 8002694:	bd10      	pop	{r4, pc}
 8002696:	0000      	.short	0x0000
 8002698:	080025b3 	.word	0x080025b3

0800269c <osThreadContextCreate>:
 800269c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026a0:	4680      	mov	r8, r0
 80026a2:	460f      	mov	r7, r1
 80026a4:	4616      	mov	r6, r2
 80026a6:	f3ef 8410 	mrs	r4, PRIMASK
 80026aa:	bb04      	cbnz	r4, 80026ee <osThreadContextCreate+0x52>
 80026ac:	f3ef 8305 	mrs	r3, IPSR
 80026b0:	b9d3      	cbnz	r3, 80026e8 <osThreadContextCreate+0x4c>
 80026b2:	f3ef 8314 	mrs	r3, CONTROL
 80026b6:	07db      	lsls	r3, r3, #31
 80026b8:	d406      	bmi.n	80026c8 <osThreadContextCreate+0x2c>
 80026ba:	4b0e      	ldr	r3, [pc, #56]	; (80026f4 <osThreadContextCreate+0x58>)
 80026bc:	781b      	ldrb	r3, [r3, #0]
 80026be:	b91b      	cbnz	r3, 80026c8 <osThreadContextCreate+0x2c>
 80026c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80026c4:	f7ff bebe 	b.w	8002444 <svcThreadCreate>
 80026c8:	4d0b      	ldr	r5, [pc, #44]	; (80026f8 <osThreadContextCreate+0x5c>)
 80026ca:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026ce:	6828      	ldr	r0, [r5, #0]
 80026d0:	f7ff ffac 	bl	800262c <osMutexWait>
 80026d4:	4640      	mov	r0, r8
 80026d6:	4639      	mov	r1, r7
 80026d8:	4632      	mov	r2, r6
 80026da:	f8df c020 	ldr.w	r12, [pc, #32]	; 80026fc <osThreadContextCreate+0x60>
 80026de:	df00      	svc	0
 80026e0:	4604      	mov	r4, r0
 80026e2:	6828      	ldr	r0, [r5, #0]
 80026e4:	f7ff ffca 	bl	800267c <osMutexRelease>
 80026e8:	4620      	mov	r0, r4
 80026ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80026ee:	2400      	movs	r4, #0
 80026f0:	e7fa      	b.n	80026e8 <osThreadContextCreate+0x4c>
 80026f2:	bf00      	nop
 80026f4:	20001e4d 	.word	0x20001e4d
 80026f8:	20001e48 	.word	0x20001e48
 80026fc:	08002445 	.word	0x08002445

08002700 <osThreadCreate>:
 8002700:	2200      	movs	r2, #0
 8002702:	f7ff bfcb 	b.w	800269c <osThreadContextCreate>
	...

08002708 <osMutexDelete>:
 8002708:	b510      	push	{r4, lr}
 800270a:	f3ef 8410 	mrs	r4, PRIMASK
 800270e:	b934      	cbnz	r4, 800271e <osMutexDelete+0x16>
 8002710:	f3ef 8405 	mrs	r4, IPSR
 8002714:	b91c      	cbnz	r4, 800271e <osMutexDelete+0x16>
 8002716:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002724 <osMutexDelete+0x1c>
 800271a:	df00      	svc	0
 800271c:	bd10      	pop	{r4, pc}
 800271e:	2082      	movs	r0, #130	; 0x82
 8002720:	bd10      	pop	{r4, pc}
 8002722:	0000      	.short	0x0000
 8002724:	080025d3 	.word	0x080025d3

08002728 <svcMessageCreate>:
 8002728:	b510      	push	{r4, lr}
 800272a:	4604      	mov	r4, r0
 800272c:	b160      	cbz	r0, 8002748 <svcMessageCreate+0x20>
 800272e:	6801      	ldr	r1, [r0, #0]
 8002730:	b151      	cbz	r1, 8002748 <svcMessageCreate+0x20>
 8002732:	6840      	ldr	r0, [r0, #4]
 8002734:	b148      	cbz	r0, 800274a <svcMessageCreate+0x22>
 8002736:	7803      	ldrb	r3, [r0, #0]
 8002738:	b933      	cbnz	r3, 8002748 <svcMessageCreate+0x20>
 800273a:	3104      	adds	r1, #4
 800273c:	0089      	lsls	r1, r1, #2
 800273e:	b289      	uxth	r1, r1
 8002740:	f7ff fc52 	bl	8001fe8 <rt_mbx_init>
 8002744:	6860      	ldr	r0, [r4, #4]
 8002746:	bd10      	pop	{r4, pc}
 8002748:	2000      	movs	r0, #0
 800274a:	bd10      	pop	{r4, pc}

0800274c <svcKernelInitialize>:
 800274c:	b538      	push	{r3, r4, r5, lr}
 800274e:	4c11      	ldr	r4, [pc, #68]	; (8002794 <svcKernelInitialize+0x48>)
 8002750:	7823      	ldrb	r3, [r4, #0]
 8002752:	b90b      	cbnz	r3, 8002758 <svcKernelInitialize+0xc>
 8002754:	f000 faa8 	bl	8002ca8 <rt_sys_init>
 8002758:	4b0f      	ldr	r3, [pc, #60]	; (8002798 <svcKernelInitialize+0x4c>)
 800275a:	7825      	ldrb	r5, [r4, #0]
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	22ff      	movs	r2, #255	; 0xff
 8002760:	709a      	strb	r2, [r3, #2]
 8002762:	b98d      	cbnz	r5, 8002788 <svcKernelInitialize+0x3c>
 8002764:	4629      	mov	r1, r5
 8002766:	480d      	ldr	r0, [pc, #52]	; (800279c <svcKernelInitialize+0x50>)
 8002768:	f7ff ffde 	bl	8002728 <svcMessageCreate>
 800276c:	4b0c      	ldr	r3, [pc, #48]	; (80027a0 <svcKernelInitialize+0x54>)
 800276e:	462a      	mov	r2, r5
 8002770:	6018      	str	r0, [r3, #0]
 8002772:	4629      	mov	r1, r5
 8002774:	480b      	ldr	r0, [pc, #44]	; (80027a4 <svcKernelInitialize+0x58>)
 8002776:	f7ff fe65 	bl	8002444 <svcThreadCreate>
 800277a:	4b0b      	ldr	r3, [pc, #44]	; (80027a8 <svcKernelInitialize+0x5c>)
 800277c:	6018      	str	r0, [r3, #0]
 800277e:	480b      	ldr	r0, [pc, #44]	; (80027ac <svcKernelInitialize+0x60>)
 8002780:	f7ff ff36 	bl	80025f0 <osMutexCreate>
 8002784:	4b0a      	ldr	r3, [pc, #40]	; (80027b0 <svcKernelInitialize+0x64>)
 8002786:	6018      	str	r0, [r3, #0]
 8002788:	2301      	movs	r3, #1
 800278a:	7023      	strb	r3, [r4, #0]
 800278c:	4b09      	ldr	r3, [pc, #36]	; (80027b4 <svcKernelInitialize+0x68>)
 800278e:	2000      	movs	r0, #0
 8002790:	7018      	strb	r0, [r3, #0]
 8002792:	bd38      	pop	{r3, r4, r5, pc}
 8002794:	20001e4c 	.word	0x20001e4c
 8002798:	20001e54 	.word	0x20001e54
 800279c:	08006de4 	.word	0x08006de4
 80027a0:	20001910 	.word	0x20001910
 80027a4:	08006e00 	.word	0x08006e00
 80027a8:	20001e04 	.word	0x20001e04
 80027ac:	08006e18 	.word	0x08006e18
 80027b0:	20001e48 	.word	0x20001e48
 80027b4:	20001e4d 	.word	0x20001e4d

080027b8 <osKernelInitialize>:
 80027b8:	b510      	push	{r4, lr}
 80027ba:	f3ef 8410 	mrs	r4, PRIMASK
 80027be:	b974      	cbnz	r4, 80027de <osKernelInitialize+0x26>
 80027c0:	f3ef 8405 	mrs	r4, IPSR
 80027c4:	b95c      	cbnz	r4, 80027de <osKernelInitialize+0x26>
 80027c6:	f3ef 8414 	mrs	r4, CONTROL
 80027ca:	07e4      	lsls	r4, r4, #31
 80027cc:	d403      	bmi.n	80027d6 <osKernelInitialize+0x1e>
 80027ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027d2:	f7ff bfbb 	b.w	800274c <svcKernelInitialize>
 80027d6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80027e4 <osKernelInitialize+0x2c>
 80027da:	df00      	svc	0
 80027dc:	bd10      	pop	{r4, pc}
 80027de:	2082      	movs	r0, #130	; 0x82
 80027e0:	bd10      	pop	{r4, pc}
 80027e2:	0000      	.short	0x0000
 80027e4:	0800274d 	.word	0x0800274d

080027e8 <svcMessageGet>:
 80027e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80027ec:	460c      	mov	r4, r1
 80027ee:	4680      	mov	r8, r0
 80027f0:	b318      	cbz	r0, 800283a <svcMessageGet+0x52>
 80027f2:	7803      	ldrb	r3, [r0, #0]
 80027f4:	2b01      	cmp	r3, #1
 80027f6:	d125      	bne.n	8002844 <svcMessageGet+0x5c>
 80027f8:	4608      	mov	r0, r1
 80027fa:	f7ff fd73 	bl	80022e4 <rt_ms2tick>
 80027fe:	a902      	add	r1, sp, #8
 8002800:	4602      	mov	r2, r0
 8002802:	4640      	mov	r0, r8
 8002804:	f7ff fbfe 	bl	8002004 <rt_mbx_wait>
 8002808:	2801      	cmp	r0, #1
 800280a:	d111      	bne.n	8002830 <svcMessageGet+0x48>
 800280c:	2000      	movs	r0, #0
 800280e:	2c00      	cmp	r4, #0
 8002810:	4602      	mov	r2, r0
 8002812:	4603      	mov	r3, r0
 8002814:	bf18      	it	ne
 8002816:	2040      	movne	r0, #64	; 0x40
 8002818:	9902      	ldr	r1, [sp, #8]
 800281a:	4604      	mov	r4, r0
 800281c:	460d      	mov	r5, r1
 800281e:	4616      	mov	r6, r2
 8002820:	461f      	mov	r7, r3
 8002822:	4620      	mov	r0, r4
 8002824:	4629      	mov	r1, r5
 8002826:	4632      	mov	r2, r6
 8002828:	463b      	mov	r3, r7
 800282a:	b004      	add	sp, #16
 800282c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002830:	2000      	movs	r0, #0
 8002832:	4602      	mov	r2, r0
 8002834:	4603      	mov	r3, r0
 8002836:	2010      	movs	r0, #16
 8002838:	e7ee      	b.n	8002818 <svcMessageGet+0x30>
 800283a:	2480      	movs	r4, #128	; 0x80
 800283c:	4605      	mov	r5, r0
 800283e:	4606      	mov	r6, r0
 8002840:	4607      	mov	r7, r0
 8002842:	e7ee      	b.n	8002822 <svcMessageGet+0x3a>
 8002844:	2500      	movs	r5, #0
 8002846:	2480      	movs	r4, #128	; 0x80
 8002848:	462e      	mov	r6, r5
 800284a:	462f      	mov	r7, r5
 800284c:	e7e9      	b.n	8002822 <svcMessageGet+0x3a>

0800284e <isrMessagePut>:
 800284e:	b570      	push	{r4, r5, r6, lr}
 8002850:	460e      	mov	r6, r1
 8002852:	4614      	mov	r4, r2
 8002854:	4605      	mov	r5, r0
 8002856:	b160      	cbz	r0, 8002872 <isrMessagePut+0x24>
 8002858:	b95a      	cbnz	r2, 8002872 <isrMessagePut+0x24>
 800285a:	7803      	ldrb	r3, [r0, #0]
 800285c:	2b01      	cmp	r3, #1
 800285e:	d108      	bne.n	8002872 <isrMessagePut+0x24>
 8002860:	f7ff fc26 	bl	80020b0 <rt_mbx_check>
 8002864:	b138      	cbz	r0, 8002876 <isrMessagePut+0x28>
 8002866:	4628      	mov	r0, r5
 8002868:	4631      	mov	r1, r6
 800286a:	f7ff fc25 	bl	80020b8 <isr_mbx_send>
 800286e:	4620      	mov	r0, r4
 8002870:	bd70      	pop	{r4, r5, r6, pc}
 8002872:	2080      	movs	r0, #128	; 0x80
 8002874:	bd70      	pop	{r4, r5, r6, pc}
 8002876:	2081      	movs	r0, #129	; 0x81
 8002878:	bd70      	pop	{r4, r5, r6, pc}
	...

0800287c <sysTimerTick>:
 800287c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800287e:	4e11      	ldr	r6, [pc, #68]	; (80028c4 <sysTimerTick+0x48>)
 8002880:	6834      	ldr	r4, [r6, #0]
 8002882:	b12c      	cbz	r4, 8002890 <sysTimerTick+0x14>
 8002884:	68a3      	ldr	r3, [r4, #8]
 8002886:	4f10      	ldr	r7, [pc, #64]	; (80028c8 <sysTimerTick+0x4c>)
 8002888:	3b01      	subs	r3, #1
 800288a:	60a3      	str	r3, [r4, #8]
 800288c:	68a2      	ldr	r2, [r4, #8]
 800288e:	b102      	cbz	r2, 8002892 <sysTimerTick+0x16>
 8002890:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002892:	6825      	ldr	r5, [r4, #0]
 8002894:	6838      	ldr	r0, [r7, #0]
 8002896:	6035      	str	r5, [r6, #0]
 8002898:	4621      	mov	r1, r4
 800289a:	f7ff ffd8 	bl	800284e <isrMessagePut>
 800289e:	b110      	cbz	r0, 80028a6 <sysTimerTick+0x2a>
 80028a0:	2004      	movs	r0, #4
 80028a2:	f7ff f91d 	bl	8001ae0 <os_error>
 80028a6:	7963      	ldrb	r3, [r4, #5]
 80028a8:	2b01      	cmp	r3, #1
 80028aa:	d107      	bne.n	80028bc <sysTimerTick+0x40>
 80028ac:	68e1      	ldr	r1, [r4, #12]
 80028ae:	4620      	mov	r0, r4
 80028b0:	f7ff fcfe 	bl	80022b0 <rt_timer_insert>
 80028b4:	2d00      	cmp	r5, #0
 80028b6:	d0eb      	beq.n	8002890 <sysTimerTick+0x14>
 80028b8:	462c      	mov	r4, r5
 80028ba:	e7e7      	b.n	800288c <sysTimerTick+0x10>
 80028bc:	2301      	movs	r3, #1
 80028be:	7123      	strb	r3, [r4, #4]
 80028c0:	e7f8      	b.n	80028b4 <sysTimerTick+0x38>
 80028c2:	bf00      	nop
 80028c4:	20001e50 	.word	0x20001e50
 80028c8:	20001910 	.word	0x20001910

080028cc <isrMessageGet>:
 80028cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80028ce:	4604      	mov	r4, r0
 80028d0:	4616      	mov	r6, r2
 80028d2:	4608      	mov	r0, r1
 80028d4:	b101      	cbz	r1, 80028d8 <isrMessageGet+0xc>
 80028d6:	b122      	cbz	r2, 80028e2 <isrMessageGet+0x16>
 80028d8:	2380      	movs	r3, #128	; 0x80
 80028da:	6023      	str	r3, [r4, #0]
 80028dc:	4620      	mov	r0, r4
 80028de:	b004      	add	sp, #16
 80028e0:	bd70      	pop	{r4, r5, r6, pc}
 80028e2:	780b      	ldrb	r3, [r1, #0]
 80028e4:	2b01      	cmp	r3, #1
 80028e6:	d1f7      	bne.n	80028d8 <isrMessageGet+0xc>
 80028e8:	a902      	add	r1, sp, #8
 80028ea:	f7ff fbec 	bl	80020c6 <isr_mbx_receive>
 80028ee:	2804      	cmp	r0, #4
 80028f0:	bf08      	it	eq
 80028f2:	2310      	moveq	r3, #16
 80028f4:	ad01      	add	r5, sp, #4
 80028f6:	bf14      	ite	ne
 80028f8:	9601      	strne	r6, [sp, #4]
 80028fa:	9301      	streq	r3, [sp, #4]
 80028fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002900:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002904:	e7ea      	b.n	80028dc <isrMessageGet+0x10>
	...

08002908 <osMessageGet>:
 8002908:	b538      	push	{r3, r4, r5, lr}
 800290a:	4604      	mov	r4, r0
 800290c:	4615      	mov	r5, r2
 800290e:	f3ef 8010 	mrs	r0, PRIMASK
 8002912:	b910      	cbnz	r0, 800291a <osMessageGet+0x12>
 8002914:	f3ef 8005 	mrs	r0, IPSR
 8002918:	b128      	cbz	r0, 8002926 <osMessageGet+0x1e>
 800291a:	462a      	mov	r2, r5
 800291c:	4620      	mov	r0, r4
 800291e:	f7ff ffd5 	bl	80028cc <isrMessageGet>
 8002922:	4620      	mov	r0, r4
 8002924:	bd38      	pop	{r3, r4, r5, pc}
 8002926:	4608      	mov	r0, r1
 8002928:	4611      	mov	r1, r2
 800292a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002938 <osMessageGet+0x30>
 800292e:	df00      	svc	0
 8002930:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002934:	e7f5      	b.n	8002922 <osMessageGet+0x1a>
 8002936:	0000      	.short	0x0000
 8002938:	080027e9 	.word	0x080027e9

0800293c <osTimerThread>:
 800293c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800293e:	4c0a      	ldr	r4, [pc, #40]	; (8002968 <osTimerThread+0x2c>)
 8002940:	6821      	ldr	r1, [r4, #0]
 8002942:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002946:	a803      	add	r0, sp, #12
 8002948:	f7ff ffde 	bl	8002908 <osMessageGet>
 800294c:	9b03      	ldr	r3, [sp, #12]
 800294e:	2b10      	cmp	r3, #16
 8002950:	d1f6      	bne.n	8002940 <osTimerThread+0x4>
 8002952:	9904      	ldr	r1, [sp, #16]
 8002954:	a801      	add	r0, sp, #4
 8002956:	f7ff fdf7 	bl	8002548 <osTimerCall>
 800295a:	9b01      	ldr	r3, [sp, #4]
 800295c:	2b00      	cmp	r3, #0
 800295e:	d0ef      	beq.n	8002940 <osTimerThread+0x4>
 8002960:	9802      	ldr	r0, [sp, #8]
 8002962:	4798      	blx	r3
 8002964:	e7ec      	b.n	8002940 <osTimerThread+0x4>
 8002966:	bf00      	nop
 8002968:	20001910 	.word	0x20001910

0800296c <rt_switch_req>:
 800296c:	4b05      	ldr	r3, [pc, #20]	; (8002984 <rt_switch_req+0x18>)
 800296e:	6058      	str	r0, [r3, #4]
 8002970:	2302      	movs	r3, #2
 8002972:	7043      	strb	r3, [r0, #1]
 8002974:	4b04      	ldr	r3, [pc, #16]	; (8002988 <rt_switch_req+0x1c>)
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	b11b      	cbz	r3, 8002982 <rt_switch_req+0x16>
 800297a:	691b      	ldr	r3, [r3, #16]
 800297c:	b10b      	cbz	r3, 8002982 <rt_switch_req+0x16>
 800297e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002980:	4718      	bx	r3
 8002982:	4770      	bx	lr
 8002984:	20001e54 	.word	0x20001e54
 8002988:	20001e3c 	.word	0x20001e3c

0800298c <rt_dispatch.part.0>:
 800298c:	b508      	push	{r3, lr}
 800298e:	4803      	ldr	r0, [pc, #12]	; (800299c <rt_dispatch.part.0+0x10>)
 8002990:	f7ff f90c 	bl	8001bac <rt_get_first>
 8002994:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002998:	f7ff bfe8 	b.w	800296c <rt_switch_req>
 800299c:	20001e08 	.word	0x20001e08

080029a0 <rt_dispatch>:
 80029a0:	b570      	push	{r4, r5, r6, lr}
 80029a2:	4604      	mov	r4, r0
 80029a4:	b918      	cbnz	r0, 80029ae <rt_dispatch+0xe>
 80029a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80029aa:	f7ff bfef 	b.w	800298c <rt_dispatch.part.0>
 80029ae:	4e0c      	ldr	r6, [pc, #48]	; (80029e0 <rt_dispatch+0x40>)
 80029b0:	78a2      	ldrb	r2, [r4, #2]
 80029b2:	6830      	ldr	r0, [r6, #0]
 80029b4:	7883      	ldrb	r3, [r0, #2]
 80029b6:	429a      	cmp	r2, r3
 80029b8:	f04f 0501 	mov.w	r5, #1
 80029bc:	d908      	bls.n	80029d0 <rt_dispatch+0x30>
 80029be:	f7ff f907 	bl	8001bd0 <rt_put_rdy_first>
 80029c2:	6833      	ldr	r3, [r6, #0]
 80029c4:	705d      	strb	r5, [r3, #1]
 80029c6:	4620      	mov	r0, r4
 80029c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80029cc:	f7ff bfce 	b.w	800296c <rt_switch_req>
 80029d0:	7065      	strb	r5, [r4, #1]
 80029d2:	4621      	mov	r1, r4
 80029d4:	4803      	ldr	r0, [pc, #12]	; (80029e4 <rt_dispatch+0x44>)
 80029d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80029da:	f7ff b8cf 	b.w	8001b7c <rt_put_prio>
 80029de:	bf00      	nop
 80029e0:	20001e54 	.word	0x20001e54
 80029e4:	20001e08 	.word	0x20001e08

080029e8 <rt_block>:
 80029e8:	b538      	push	{r3, r4, r5, lr}
 80029ea:	460d      	mov	r5, r1
 80029ec:	4601      	mov	r1, r0
 80029ee:	b180      	cbz	r0, 8002a12 <rt_block+0x2a>
 80029f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029f4:	4298      	cmp	r0, r3
 80029f6:	4c07      	ldr	r4, [pc, #28]	; (8002a14 <rt_block+0x2c>)
 80029f8:	d002      	beq.n	8002a00 <rt_block+0x18>
 80029fa:	6820      	ldr	r0, [r4, #0]
 80029fc:	f7ff f8f2 	bl	8001be4 <rt_put_dly>
 8002a00:	6823      	ldr	r3, [r4, #0]
 8002a02:	4805      	ldr	r0, [pc, #20]	; (8002a18 <rt_block+0x30>)
 8002a04:	705d      	strb	r5, [r3, #1]
 8002a06:	f7ff f8d1 	bl	8001bac <rt_get_first>
 8002a0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002a0e:	f7ff bfad 	b.w	800296c <rt_switch_req>
 8002a12:	bd38      	pop	{r3, r4, r5, pc}
 8002a14:	20001e54 	.word	0x20001e54
 8002a18:	20001e08 	.word	0x20001e08

08002a1c <rt_tsk_self>:
 8002a1c:	4b02      	ldr	r3, [pc, #8]	; (8002a28 <rt_tsk_self+0xc>)
 8002a1e:	6818      	ldr	r0, [r3, #0]
 8002a20:	b100      	cbz	r0, 8002a24 <rt_tsk_self+0x8>
 8002a22:	78c0      	ldrb	r0, [r0, #3]
 8002a24:	4770      	bx	lr
 8002a26:	bf00      	nop
 8002a28:	20001e54 	.word	0x20001e54

08002a2c <rt_tsk_prio>:
 8002a2c:	b510      	push	{r4, lr}
 8002a2e:	b9a8      	cbnz	r0, 8002a5c <rt_tsk_prio+0x30>
 8002a30:	4b19      	ldr	r3, [pc, #100]	; (8002a98 <rt_tsk_prio+0x6c>)
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	7099      	strb	r1, [r3, #2]
 8002a36:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002a3a:	4818      	ldr	r0, [pc, #96]	; (8002a9c <rt_tsk_prio+0x70>)
 8002a3c:	6843      	ldr	r3, [r0, #4]
 8002a3e:	789b      	ldrb	r3, [r3, #2]
 8002a40:	428b      	cmp	r3, r1
 8002a42:	d801      	bhi.n	8002a48 <rt_tsk_prio+0x1c>
 8002a44:	2000      	movs	r0, #0
 8002a46:	bd10      	pop	{r4, pc}
 8002a48:	4c13      	ldr	r4, [pc, #76]	; (8002a98 <rt_tsk_prio+0x6c>)
 8002a4a:	6821      	ldr	r1, [r4, #0]
 8002a4c:	f7ff f896 	bl	8001b7c <rt_put_prio>
 8002a50:	6823      	ldr	r3, [r4, #0]
 8002a52:	2201      	movs	r2, #1
 8002a54:	705a      	strb	r2, [r3, #1]
 8002a56:	f7ff ff99 	bl	800298c <rt_dispatch.part.0>
 8002a5a:	e7f3      	b.n	8002a44 <rt_tsk_prio+0x18>
 8002a5c:	4b10      	ldr	r3, [pc, #64]	; (8002aa0 <rt_tsk_prio+0x74>)
 8002a5e:	881b      	ldrh	r3, [r3, #0]
 8002a60:	4298      	cmp	r0, r3
 8002a62:	d817      	bhi.n	8002a94 <rt_tsk_prio+0x68>
 8002a64:	3801      	subs	r0, #1
 8002a66:	4b0f      	ldr	r3, [pc, #60]	; (8002aa4 <rt_tsk_prio+0x78>)
 8002a68:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002a6c:	b194      	cbz	r4, 8002a94 <rt_tsk_prio+0x68>
 8002a6e:	4b0a      	ldr	r3, [pc, #40]	; (8002a98 <rt_tsk_prio+0x6c>)
 8002a70:	70a1      	strb	r1, [r4, #2]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002a78:	429c      	cmp	r4, r3
 8002a7a:	d0de      	beq.n	8002a3a <rt_tsk_prio+0xe>
 8002a7c:	4620      	mov	r0, r4
 8002a7e:	f7ff f923 	bl	8001cc8 <rt_resort_prio>
 8002a82:	7863      	ldrb	r3, [r4, #1]
 8002a84:	2b01      	cmp	r3, #1
 8002a86:	d1dd      	bne.n	8002a44 <rt_tsk_prio+0x18>
 8002a88:	4804      	ldr	r0, [pc, #16]	; (8002a9c <rt_tsk_prio+0x70>)
 8002a8a:	f7ff f88f 	bl	8001bac <rt_get_first>
 8002a8e:	f7ff ff87 	bl	80029a0 <rt_dispatch>
 8002a92:	e7d7      	b.n	8002a44 <rt_tsk_prio+0x18>
 8002a94:	20ff      	movs	r0, #255	; 0xff
 8002a96:	bd10      	pop	{r4, pc}
 8002a98:	20001e54 	.word	0x20001e54
 8002a9c:	20001e08 	.word	0x20001e08
 8002aa0:	08006de0 	.word	0x08006de0
 8002aa4:	20001870 	.word	0x20001870

08002aa8 <rt_tsk_create>:
 8002aa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002aac:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002ab0:	460d      	mov	r5, r1
 8002ab2:	4680      	mov	r8, r0
 8002ab4:	4823      	ldr	r0, [pc, #140]	; (8002b44 <rt_tsk_create+0x9c>)
 8002ab6:	4616      	mov	r6, r2
 8002ab8:	469a      	mov	r10, r3
 8002aba:	bf08      	it	eq
 8002abc:	3501      	addeq	r5, #1
 8002abe:	f7ff fa72 	bl	8001fa6 <rt_alloc_box>
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	b920      	cbnz	r0, 8002ad0 <rt_tsk_create+0x28>
 8002ac6:	f04f 0900 	mov.w	r9, #0
 8002aca:	4648      	mov	r0, r9
 8002acc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002ad0:	4b1d      	ldr	r3, [pc, #116]	; (8002b48 <rt_tsk_create+0xa0>)
 8002ad2:	6306      	str	r6, [r0, #48]	; 0x30
 8002ad4:	881b      	ldrh	r3, [r3, #0]
 8002ad6:	4e1d      	ldr	r6, [pc, #116]	; (8002b4c <rt_tsk_create+0xa4>)
 8002ad8:	0a28      	lsrs	r0, r5, #8
 8002ada:	62a0      	str	r0, [r4, #40]	; 0x28
 8002adc:	2100      	movs	r1, #0
 8002ade:	428b      	cmp	r3, r1
 8002ae0:	f101 0901 	add.w	r9, r1, #1
 8002ae4:	d0ef      	beq.n	8002ac6 <rt_tsk_create+0x1e>
 8002ae6:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8002aea:	460f      	mov	r7, r1
 8002aec:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002af0:	4649      	mov	r1, r9
 8002af2:	2a00      	cmp	r2, #0
 8002af4:	d1f3      	bne.n	8002ade <rt_tsk_create+0x36>
 8002af6:	b2ed      	uxtb	r5, r5
 8002af8:	2301      	movs	r3, #1
 8002afa:	f884 9003 	strb.w	r9, [r4, #3]
 8002afe:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002b02:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002b06:	7022      	strb	r2, [r4, #0]
 8002b08:	7063      	strb	r3, [r4, #1]
 8002b0a:	70a5      	strb	r5, [r4, #2]
 8002b0c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002b10:	6062      	str	r2, [r4, #4]
 8002b12:	60a2      	str	r2, [r4, #8]
 8002b14:	60e2      	str	r2, [r4, #12]
 8002b16:	6122      	str	r2, [r4, #16]
 8002b18:	6222      	str	r2, [r4, #32]
 8002b1a:	82a2      	strh	r2, [r4, #20]
 8002b1c:	82e2      	strh	r2, [r4, #22]
 8002b1e:	8322      	strh	r2, [r4, #24]
 8002b20:	8362      	strh	r2, [r4, #26]
 8002b22:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002b26:	b918      	cbnz	r0, 8002b30 <rt_tsk_create+0x88>
 8002b28:	4809      	ldr	r0, [pc, #36]	; (8002b50 <rt_tsk_create+0xa8>)
 8002b2a:	f7ff fa3c 	bl	8001fa6 <rt_alloc_box>
 8002b2e:	6320      	str	r0, [r4, #48]	; 0x30
 8002b30:	4620      	mov	r0, r4
 8002b32:	4641      	mov	r1, r8
 8002b34:	f7ff f9b2 	bl	8001e9c <rt_init_stack>
 8002b38:	4620      	mov	r0, r4
 8002b3a:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002b3e:	f7ff ff2f 	bl	80029a0 <rt_dispatch>
 8002b42:	e7c2      	b.n	8002aca <rt_tsk_create+0x22>
 8002b44:	20001c38 	.word	0x20001c38
 8002b48:	08006de0 	.word	0x08006de0
 8002b4c:	20001870 	.word	0x20001870
 8002b50:	20001660 	.word	0x20001660

08002b54 <rt_tsk_delete>:
 8002b54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002b58:	4d4d      	ldr	r5, [pc, #308]	; (8002c90 <rt_tsk_delete+0x13c>)
 8002b5a:	b118      	cbz	r0, 8002b64 <rt_tsk_delete+0x10>
 8002b5c:	682b      	ldr	r3, [r5, #0]
 8002b5e:	78db      	ldrb	r3, [r3, #3]
 8002b60:	4298      	cmp	r0, r3
 8002b62:	d141      	bne.n	8002be8 <rt_tsk_delete+0x94>
 8002b64:	682c      	ldr	r4, [r5, #0]
 8002b66:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002ca4 <rt_tsk_delete+0x150>
 8002b6a:	2300      	movs	r3, #0
 8002b6c:	7063      	strb	r3, [r4, #1]
 8002b6e:	f002 fce6 	bl	800553e <rt_get_PSP>
 8002b72:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002b74:	f7ff f980 	bl	8001e78 <rt_stk_check>
 8002b78:	682b      	ldr	r3, [r5, #0]
 8002b7a:	6a1c      	ldr	r4, [r3, #32]
 8002b7c:	2701      	movs	r7, #1
 8002b7e:	b9a4      	cbnz	r4, 8002baa <rt_tsk_delete+0x56>
 8002b80:	682a      	ldr	r2, [r5, #0]
 8002b82:	4944      	ldr	r1, [pc, #272]	; (8002c94 <rt_tsk_delete+0x140>)
 8002b84:	78d3      	ldrb	r3, [r2, #3]
 8002b86:	4844      	ldr	r0, [pc, #272]	; (8002c98 <rt_tsk_delete+0x144>)
 8002b88:	3b01      	subs	r3, #1
 8002b8a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002b8e:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002b90:	f7ff fa16 	bl	8001fc0 <rt_free_box>
 8002b94:	6829      	ldr	r1, [r5, #0]
 8002b96:	4841      	ldr	r0, [pc, #260]	; (8002c9c <rt_tsk_delete+0x148>)
 8002b98:	630c      	str	r4, [r1, #48]	; 0x30
 8002b9a:	f7ff fa11 	bl	8001fc0 <rt_free_box>
 8002b9e:	602c      	str	r4, [r5, #0]
 8002ba0:	f7ff fef4 	bl	800298c <rt_dispatch.part.0>
 8002ba4:	4620      	mov	r0, r4
 8002ba6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002baa:	6863      	ldr	r3, [r4, #4]
 8002bac:	b1b3      	cbz	r3, 8002bdc <rt_tsk_delete+0x88>
 8002bae:	4620      	mov	r0, r4
 8002bb0:	f7fe fffc 	bl	8001bac <rt_get_first>
 8002bb4:	2100      	movs	r1, #0
 8002bb6:	4606      	mov	r6, r0
 8002bb8:	f7ff f9bc 	bl	8001f34 <rt_ret_val>
 8002bbc:	4630      	mov	r0, r6
 8002bbe:	f7ff f89b 	bl	8001cf8 <rt_rmv_dly>
 8002bc2:	7077      	strb	r7, [r6, #1]
 8002bc4:	4631      	mov	r1, r6
 8002bc6:	4640      	mov	r0, r8
 8002bc8:	f7fe ffd8 	bl	8001b7c <rt_put_prio>
 8002bcc:	68e3      	ldr	r3, [r4, #12]
 8002bce:	6a32      	ldr	r2, [r6, #32]
 8002bd0:	8067      	strh	r7, [r4, #2]
 8002bd2:	60a6      	str	r6, [r4, #8]
 8002bd4:	60e2      	str	r2, [r4, #12]
 8002bd6:	6234      	str	r4, [r6, #32]
 8002bd8:	461c      	mov	r4, r3
 8002bda:	e7d0      	b.n	8002b7e <rt_tsk_delete+0x2a>
 8002bdc:	68e2      	ldr	r2, [r4, #12]
 8002bde:	8063      	strh	r3, [r4, #2]
 8002be0:	60a3      	str	r3, [r4, #8]
 8002be2:	60e3      	str	r3, [r4, #12]
 8002be4:	4614      	mov	r4, r2
 8002be6:	e7ca      	b.n	8002b7e <rt_tsk_delete+0x2a>
 8002be8:	4b2d      	ldr	r3, [pc, #180]	; (8002ca0 <rt_tsk_delete+0x14c>)
 8002bea:	881b      	ldrh	r3, [r3, #0]
 8002bec:	4298      	cmp	r0, r3
 8002bee:	d84d      	bhi.n	8002c8c <rt_tsk_delete+0x138>
 8002bf0:	4b28      	ldr	r3, [pc, #160]	; (8002c94 <rt_tsk_delete+0x140>)
 8002bf2:	1e47      	subs	r7, r0, #1
 8002bf4:	4699      	mov	r9, r3
 8002bf6:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002bfa:	2e00      	cmp	r6, #0
 8002bfc:	d046      	beq.n	8002c8c <rt_tsk_delete+0x138>
 8002bfe:	4630      	mov	r0, r6
 8002c00:	f7ff f84c 	bl	8001c9c <rt_rmv_list>
 8002c04:	4630      	mov	r0, r6
 8002c06:	f7ff f877 	bl	8001cf8 <rt_rmv_dly>
 8002c0a:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002ca4 <rt_tsk_delete+0x150>
 8002c0e:	6a34      	ldr	r4, [r6, #32]
 8002c10:	f04f 0a01 	mov.w	r10, #1
 8002c14:	b9b4      	cbnz	r4, 8002c44 <rt_tsk_delete+0xf0>
 8002c16:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002c18:	481f      	ldr	r0, [pc, #124]	; (8002c98 <rt_tsk_delete+0x144>)
 8002c1a:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002c1e:	f7ff f9cf 	bl	8001fc0 <rt_free_box>
 8002c22:	4631      	mov	r1, r6
 8002c24:	6334      	str	r4, [r6, #48]	; 0x30
 8002c26:	481d      	ldr	r0, [pc, #116]	; (8002c9c <rt_tsk_delete+0x148>)
 8002c28:	f7ff f9ca 	bl	8001fc0 <rt_free_box>
 8002c2c:	481d      	ldr	r0, [pc, #116]	; (8002ca4 <rt_tsk_delete+0x150>)
 8002c2e:	6829      	ldr	r1, [r5, #0]
 8002c30:	6843      	ldr	r3, [r0, #4]
 8002c32:	789a      	ldrb	r2, [r3, #2]
 8002c34:	788b      	ldrb	r3, [r1, #2]
 8002c36:	429a      	cmp	r2, r3
 8002c38:	d9b4      	bls.n	8002ba4 <rt_tsk_delete+0x50>
 8002c3a:	2301      	movs	r3, #1
 8002c3c:	704b      	strb	r3, [r1, #1]
 8002c3e:	f7fe ff9d 	bl	8001b7c <rt_put_prio>
 8002c42:	e7ad      	b.n	8002ba0 <rt_tsk_delete+0x4c>
 8002c44:	6863      	ldr	r3, [r4, #4]
 8002c46:	b1db      	cbz	r3, 8002c80 <rt_tsk_delete+0x12c>
 8002c48:	4620      	mov	r0, r4
 8002c4a:	f7fe ffaf 	bl	8001bac <rt_get_first>
 8002c4e:	2100      	movs	r1, #0
 8002c50:	4680      	mov	r8, r0
 8002c52:	f7ff f96f 	bl	8001f34 <rt_ret_val>
 8002c56:	4640      	mov	r0, r8
 8002c58:	f7ff f84e 	bl	8001cf8 <rt_rmv_dly>
 8002c5c:	f888 a001 	strb.w	r10, [r8, #1]
 8002c60:	4641      	mov	r1, r8
 8002c62:	4658      	mov	r0, r11
 8002c64:	f7fe ff8a 	bl	8001b7c <rt_put_prio>
 8002c68:	68e3      	ldr	r3, [r4, #12]
 8002c6a:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002c6e:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002c72:	f8c4 8008 	str.w	r8, [r4, #8]
 8002c76:	60e2      	str	r2, [r4, #12]
 8002c78:	f8c8 4020 	str.w	r4, [r8, #32]
 8002c7c:	461c      	mov	r4, r3
 8002c7e:	e7c9      	b.n	8002c14 <rt_tsk_delete+0xc0>
 8002c80:	68e2      	ldr	r2, [r4, #12]
 8002c82:	8063      	strh	r3, [r4, #2]
 8002c84:	60a3      	str	r3, [r4, #8]
 8002c86:	60e3      	str	r3, [r4, #12]
 8002c88:	4614      	mov	r4, r2
 8002c8a:	e7c3      	b.n	8002c14 <rt_tsk_delete+0xc0>
 8002c8c:	24ff      	movs	r4, #255	; 0xff
 8002c8e:	e789      	b.n	8002ba4 <rt_tsk_delete+0x50>
 8002c90:	20001e54 	.word	0x20001e54
 8002c94:	20001870 	.word	0x20001870
 8002c98:	20001660 	.word	0x20001660
 8002c9c:	20001c38 	.word	0x20001c38
 8002ca0:	08006de0 	.word	0x08006de0
 8002ca4:	20001e08 	.word	0x20001e08

08002ca8 <rt_sys_init>:
 8002ca8:	b538      	push	{r3, r4, r5, lr}
 8002caa:	4b2c      	ldr	r3, [pc, #176]	; (8002d5c <rt_sys_init+0xb4>)
 8002cac:	492c      	ldr	r1, [pc, #176]	; (8002d60 <rt_sys_init+0xb8>)
 8002cae:	881a      	ldrh	r2, [r3, #0]
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	4293      	cmp	r3, r2
 8002cb6:	d34d      	bcc.n	8002d54 <rt_sys_init+0xac>
 8002cb8:	4b2a      	ldr	r3, [pc, #168]	; (8002d64 <rt_sys_init+0xbc>)
 8002cba:	482b      	ldr	r0, [pc, #172]	; (8002d68 <rt_sys_init+0xc0>)
 8002cbc:	8819      	ldrh	r1, [r3, #0]
 8002cbe:	4c2b      	ldr	r4, [pc, #172]	; (8002d6c <rt_sys_init+0xc4>)
 8002cc0:	2240      	movs	r2, #64	; 0x40
 8002cc2:	f7ff f94b 	bl	8001f5c <_init_box>
 8002cc6:	4b2a      	ldr	r3, [pc, #168]	; (8002d70 <rt_sys_init+0xc8>)
 8002cc8:	482a      	ldr	r0, [pc, #168]	; (8002d74 <rt_sys_init+0xcc>)
 8002cca:	881a      	ldrh	r2, [r3, #0]
 8002ccc:	4b2a      	ldr	r3, [pc, #168]	; (8002d78 <rt_sys_init+0xd0>)
 8002cce:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002cd2:	6819      	ldr	r1, [r3, #0]
 8002cd4:	f7ff f942 	bl	8001f5c <_init_box>
 8002cd8:	4b28      	ldr	r3, [pc, #160]	; (8002d7c <rt_sys_init+0xd4>)
 8002cda:	8819      	ldrh	r1, [r3, #0]
 8002cdc:	4b28      	ldr	r3, [pc, #160]	; (8002d80 <rt_sys_init+0xd8>)
 8002cde:	2208      	movs	r2, #8
 8002ce0:	6818      	ldr	r0, [r3, #0]
 8002ce2:	f7ff f93b 	bl	8001f5c <_init_box>
 8002ce6:	23ff      	movs	r3, #255	; 0xff
 8002ce8:	2500      	movs	r5, #0
 8002cea:	70e3      	strb	r3, [r4, #3]
 8002cec:	4821      	ldr	r0, [pc, #132]	; (8002d74 <rt_sys_init+0xcc>)
 8002cee:	62a5      	str	r5, [r4, #40]	; 0x28
 8002cf0:	2301      	movs	r3, #1
 8002cf2:	7063      	strb	r3, [r4, #1]
 8002cf4:	7025      	strb	r5, [r4, #0]
 8002cf6:	70a5      	strb	r5, [r4, #2]
 8002cf8:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002cfc:	6065      	str	r5, [r4, #4]
 8002cfe:	60a5      	str	r5, [r4, #8]
 8002d00:	60e5      	str	r5, [r4, #12]
 8002d02:	6125      	str	r5, [r4, #16]
 8002d04:	6225      	str	r5, [r4, #32]
 8002d06:	82a5      	strh	r5, [r4, #20]
 8002d08:	82e5      	strh	r5, [r4, #22]
 8002d0a:	8325      	strh	r5, [r4, #24]
 8002d0c:	8365      	strh	r5, [r4, #26]
 8002d0e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002d12:	f7ff f948 	bl	8001fa6 <rt_alloc_box>
 8002d16:	491b      	ldr	r1, [pc, #108]	; (8002d84 <rt_sys_init+0xdc>)
 8002d18:	6320      	str	r0, [r4, #48]	; 0x30
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	f7ff f8be 	bl	8001e9c <rt_init_stack>
 8002d20:	4b19      	ldr	r3, [pc, #100]	; (8002d88 <rt_sys_init+0xe0>)
 8002d22:	2204      	movs	r2, #4
 8002d24:	701a      	strb	r2, [r3, #0]
 8002d26:	605d      	str	r5, [r3, #4]
 8002d28:	4b18      	ldr	r3, [pc, #96]	; (8002d8c <rt_sys_init+0xe4>)
 8002d2a:	701a      	strb	r2, [r3, #0]
 8002d2c:	60dd      	str	r5, [r3, #12]
 8002d2e:	611d      	str	r5, [r3, #16]
 8002d30:	829d      	strh	r5, [r3, #20]
 8002d32:	4b17      	ldr	r3, [pc, #92]	; (8002d90 <rt_sys_init+0xe8>)
 8002d34:	4620      	mov	r0, r4
 8002d36:	601c      	str	r4, [r3, #0]
 8002d38:	2302      	movs	r3, #2
 8002d3a:	7063      	strb	r3, [r4, #1]
 8002d3c:	f7ff fe16 	bl	800296c <rt_switch_req>
 8002d40:	4a14      	ldr	r2, [pc, #80]	; (8002d94 <rt_sys_init+0xec>)
 8002d42:	4b15      	ldr	r3, [pc, #84]	; (8002d98 <rt_sys_init+0xf0>)
 8002d44:	7812      	ldrb	r2, [r2, #0]
 8002d46:	701d      	strb	r5, [r3, #0]
 8002d48:	705d      	strb	r5, [r3, #1]
 8002d4a:	70da      	strb	r2, [r3, #3]
 8002d4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002d50:	f7ff ba7e 	b.w	8002250 <rt_init_robin>
 8002d54:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002d58:	3301      	adds	r3, #1
 8002d5a:	e7ab      	b.n	8002cb4 <rt_sys_init+0xc>
 8002d5c:	08006de0 	.word	0x08006de0
 8002d60:	20001870 	.word	0x20001870
 8002d64:	08006dac 	.word	0x08006dac
 8002d68:	20001c38 	.word	0x20001c38
 8002d6c:	20001e5c 	.word	0x20001e5c
 8002d70:	08006dfc 	.word	0x08006dfc
 8002d74:	20001660 	.word	0x20001660
 8002d78:	08006da8 	.word	0x08006da8
 8002d7c:	08006dae 	.word	0x08006dae
 8002d80:	200009d4 	.word	0x200009d4
 8002d84:	08001add 	.word	0x08001add
 8002d88:	20001e08 	.word	0x20001e08
 8002d8c:	20001e20 	.word	0x20001e20
 8002d90:	20001e54 	.word	0x20001e54
 8002d94:	08006ddd 	.word	0x08006ddd
 8002d98:	2000188c 	.word	0x2000188c

08002d9c <rt_sys_start>:
 8002d9c:	b508      	push	{r3, lr}
 8002d9e:	4b1e      	ldr	r3, [pc, #120]	; (8002e18 <rt_sys_start+0x7c>)
 8002da0:	681a      	ldr	r2, [r3, #0]
 8002da2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	021b      	lsls	r3, r3, #8
 8002dac:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002db0:	43db      	mvns	r3, r3
 8002db2:	fab3 f383 	clz	r3, r3
 8002db6:	4a19      	ldr	r2, [pc, #100]	; (8002e1c <rt_sys_start+0x80>)
 8002db8:	4819      	ldr	r0, [pc, #100]	; (8002e20 <rt_sys_start+0x84>)
 8002dba:	6812      	ldr	r2, [r2, #0]
 8002dbc:	6801      	ldr	r1, [r0, #0]
 8002dbe:	b2db      	uxtb	r3, r3
 8002dc0:	f1c3 0308 	rsb	r3, r3, #8
 8002dc4:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002dc8:	4293      	cmp	r3, r2
 8002dca:	bf98      	it	ls
 8002dcc:	1c53      	addls	r3, r2, #1
 8002dce:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002dd2:	fa02 f303 	lsl.w	r3, r2, r3
 8002dd6:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002dda:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002dde:	4313      	orrs	r3, r2
 8002de0:	6003      	str	r3, [r0, #0]
 8002de2:	f7ff f811 	bl	8001e08 <os_tick_init>
 8002de6:	4b0f      	ldr	r3, [pc, #60]	; (8002e24 <rt_sys_start+0x88>)
 8002de8:	2800      	cmp	r0, #0
 8002dea:	6018      	str	r0, [r3, #0]
 8002dec:	db12      	blt.n	8002e14 <rt_sys_start+0x78>
 8002dee:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002df2:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002df6:	22ff      	movs	r2, #255	; 0xff
 8002df8:	7002      	strb	r2, [r0, #0]
 8002dfa:	681a      	ldr	r2, [r3, #0]
 8002dfc:	0953      	lsrs	r3, r2, #5
 8002dfe:	009b      	lsls	r3, r3, #2
 8002e00:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002e04:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002e08:	f002 021f 	and.w	r2, r2, #31
 8002e0c:	2101      	movs	r1, #1
 8002e0e:	fa01 f202 	lsl.w	r2, r1, r2
 8002e12:	601a      	str	r2, [r3, #0]
 8002e14:	bd08      	pop	{r3, pc}
 8002e16:	bf00      	nop
 8002e18:	e000ed20 	.word	0xe000ed20
 8002e1c:	e000ed0c 	.word	0xe000ed0c
 8002e20:	e000ed1c 	.word	0xe000ed1c
 8002e24:	20001e38 	.word	0x20001e38

08002e28 <rt_mut_init>:
 8002e28:	2303      	movs	r3, #3
 8002e2a:	7003      	strb	r3, [r0, #0]
 8002e2c:	2300      	movs	r3, #0
 8002e2e:	8043      	strh	r3, [r0, #2]
 8002e30:	6043      	str	r3, [r0, #4]
 8002e32:	6083      	str	r3, [r0, #8]
 8002e34:	60c3      	str	r3, [r0, #12]
 8002e36:	4770      	bx	lr

08002e38 <rt_mut_delete>:
 8002e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e3a:	8843      	ldrh	r3, [r0, #2]
 8002e3c:	4604      	mov	r4, r0
 8002e3e:	b19b      	cbz	r3, 8002e68 <rt_mut_delete+0x30>
 8002e40:	6880      	ldr	r0, [r0, #8]
 8002e42:	6a03      	ldr	r3, [r0, #32]
 8002e44:	429c      	cmp	r4, r3
 8002e46:	d128      	bne.n	8002e9a <rt_mut_delete+0x62>
 8002e48:	68e3      	ldr	r3, [r4, #12]
 8002e4a:	6203      	str	r3, [r0, #32]
 8002e4c:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002e50:	6a02      	ldr	r2, [r0, #32]
 8002e52:	bb52      	cbnz	r2, 8002eaa <rt_mut_delete+0x72>
 8002e54:	7882      	ldrb	r2, [r0, #2]
 8002e56:	429a      	cmp	r2, r3
 8002e58:	d006      	beq.n	8002e68 <rt_mut_delete+0x30>
 8002e5a:	7083      	strb	r3, [r0, #2]
 8002e5c:	4b1f      	ldr	r3, [pc, #124]	; (8002edc <rt_mut_delete+0xa4>)
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	4298      	cmp	r0, r3
 8002e62:	d001      	beq.n	8002e68 <rt_mut_delete+0x30>
 8002e64:	f7fe ff30 	bl	8001cc8 <rt_resort_prio>
 8002e68:	4f1d      	ldr	r7, [pc, #116]	; (8002ee0 <rt_mut_delete+0xa8>)
 8002e6a:	2601      	movs	r6, #1
 8002e6c:	6865      	ldr	r5, [r4, #4]
 8002e6e:	bb25      	cbnz	r5, 8002eba <rt_mut_delete+0x82>
 8002e70:	481b      	ldr	r0, [pc, #108]	; (8002ee0 <rt_mut_delete+0xa8>)
 8002e72:	6843      	ldr	r3, [r0, #4]
 8002e74:	b16b      	cbz	r3, 8002e92 <rt_mut_delete+0x5a>
 8002e76:	4e19      	ldr	r6, [pc, #100]	; (8002edc <rt_mut_delete+0xa4>)
 8002e78:	789a      	ldrb	r2, [r3, #2]
 8002e7a:	6831      	ldr	r1, [r6, #0]
 8002e7c:	788b      	ldrb	r3, [r1, #2]
 8002e7e:	429a      	cmp	r2, r3
 8002e80:	d907      	bls.n	8002e92 <rt_mut_delete+0x5a>
 8002e82:	f7fe fe7b 	bl	8001b7c <rt_put_prio>
 8002e86:	6833      	ldr	r3, [r6, #0]
 8002e88:	2201      	movs	r2, #1
 8002e8a:	705a      	strb	r2, [r3, #1]
 8002e8c:	4628      	mov	r0, r5
 8002e8e:	f7ff fd87 	bl	80029a0 <rt_dispatch>
 8002e92:	2000      	movs	r0, #0
 8002e94:	7020      	strb	r0, [r4, #0]
 8002e96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e98:	4613      	mov	r3, r2
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d0d6      	beq.n	8002e4c <rt_mut_delete+0x14>
 8002e9e:	68da      	ldr	r2, [r3, #12]
 8002ea0:	4294      	cmp	r4, r2
 8002ea2:	d1f9      	bne.n	8002e98 <rt_mut_delete+0x60>
 8002ea4:	68e2      	ldr	r2, [r4, #12]
 8002ea6:	60da      	str	r2, [r3, #12]
 8002ea8:	e7d0      	b.n	8002e4c <rt_mut_delete+0x14>
 8002eaa:	6851      	ldr	r1, [r2, #4]
 8002eac:	b119      	cbz	r1, 8002eb6 <rt_mut_delete+0x7e>
 8002eae:	7889      	ldrb	r1, [r1, #2]
 8002eb0:	428b      	cmp	r3, r1
 8002eb2:	bf38      	it	cc
 8002eb4:	460b      	movcc	r3, r1
 8002eb6:	68d2      	ldr	r2, [r2, #12]
 8002eb8:	e7cb      	b.n	8002e52 <rt_mut_delete+0x1a>
 8002eba:	4620      	mov	r0, r4
 8002ebc:	f7fe fe76 	bl	8001bac <rt_get_first>
 8002ec0:	2100      	movs	r1, #0
 8002ec2:	4605      	mov	r5, r0
 8002ec4:	f7ff f836 	bl	8001f34 <rt_ret_val>
 8002ec8:	4628      	mov	r0, r5
 8002eca:	f7fe ff15 	bl	8001cf8 <rt_rmv_dly>
 8002ece:	706e      	strb	r6, [r5, #1]
 8002ed0:	4629      	mov	r1, r5
 8002ed2:	4638      	mov	r0, r7
 8002ed4:	f7fe fe52 	bl	8001b7c <rt_put_prio>
 8002ed8:	e7c8      	b.n	8002e6c <rt_mut_delete+0x34>
 8002eda:	bf00      	nop
 8002edc:	20001e54 	.word	0x20001e54
 8002ee0:	20001e08 	.word	0x20001e08

08002ee4 <rt_mut_release>:
 8002ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ee8:	8843      	ldrh	r3, [r0, #2]
 8002eea:	4605      	mov	r5, r0
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d063      	beq.n	8002fb8 <rt_mut_release+0xd4>
 8002ef0:	4f32      	ldr	r7, [pc, #200]	; (8002fbc <rt_mut_release+0xd8>)
 8002ef2:	6881      	ldr	r1, [r0, #8]
 8002ef4:	683a      	ldr	r2, [r7, #0]
 8002ef6:	4291      	cmp	r1, r2
 8002ef8:	d15e      	bne.n	8002fb8 <rt_mut_release+0xd4>
 8002efa:	3b01      	subs	r3, #1
 8002efc:	b29b      	uxth	r3, r3
 8002efe:	8043      	strh	r3, [r0, #2]
 8002f00:	b11b      	cbz	r3, 8002f0a <rt_mut_release+0x26>
 8002f02:	2400      	movs	r4, #0
 8002f04:	4620      	mov	r0, r4
 8002f06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f0a:	6a0b      	ldr	r3, [r1, #32]
 8002f0c:	4298      	cmp	r0, r3
 8002f0e:	d129      	bne.n	8002f64 <rt_mut_release+0x80>
 8002f10:	68c3      	ldr	r3, [r0, #12]
 8002f12:	620b      	str	r3, [r1, #32]
 8002f14:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002f18:	6a0c      	ldr	r4, [r1, #32]
 8002f1a:	bb5c      	cbnz	r4, 8002f74 <rt_mut_release+0x90>
 8002f1c:	708b      	strb	r3, [r1, #2]
 8002f1e:	686a      	ldr	r2, [r5, #4]
 8002f20:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002fc0 <rt_mut_release+0xdc>
 8002f24:	2a00      	cmp	r2, #0
 8002f26:	d03b      	beq.n	8002fa0 <rt_mut_release+0xbc>
 8002f28:	4628      	mov	r0, r5
 8002f2a:	f7fe fe3f 	bl	8001bac <rt_get_first>
 8002f2e:	4621      	mov	r1, r4
 8002f30:	4606      	mov	r6, r0
 8002f32:	f7fe ffff 	bl	8001f34 <rt_ret_val>
 8002f36:	4630      	mov	r0, r6
 8002f38:	f7fe fede 	bl	8001cf8 <rt_rmv_dly>
 8002f3c:	6a33      	ldr	r3, [r6, #32]
 8002f3e:	60eb      	str	r3, [r5, #12]
 8002f40:	f04f 0901 	mov.w	r9, #1
 8002f44:	6839      	ldr	r1, [r7, #0]
 8002f46:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002f4a:	f8a5 9002 	strh.w	r9, [r5, #2]
 8002f4e:	60ae      	str	r6, [r5, #8]
 8002f50:	6235      	str	r5, [r6, #32]
 8002f52:	788a      	ldrb	r2, [r1, #2]
 8002f54:	789b      	ldrb	r3, [r3, #2]
 8002f56:	429a      	cmp	r2, r3
 8002f58:	d314      	bcc.n	8002f84 <rt_mut_release+0xa0>
 8002f5a:	4630      	mov	r0, r6
 8002f5c:	f7ff fd20 	bl	80029a0 <rt_dispatch>
 8002f60:	e7d0      	b.n	8002f04 <rt_mut_release+0x20>
 8002f62:	4613      	mov	r3, r2
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d0d5      	beq.n	8002f14 <rt_mut_release+0x30>
 8002f68:	68da      	ldr	r2, [r3, #12]
 8002f6a:	4295      	cmp	r5, r2
 8002f6c:	d1f9      	bne.n	8002f62 <rt_mut_release+0x7e>
 8002f6e:	68ea      	ldr	r2, [r5, #12]
 8002f70:	60da      	str	r2, [r3, #12]
 8002f72:	e7cf      	b.n	8002f14 <rt_mut_release+0x30>
 8002f74:	6862      	ldr	r2, [r4, #4]
 8002f76:	b11a      	cbz	r2, 8002f80 <rt_mut_release+0x9c>
 8002f78:	7892      	ldrb	r2, [r2, #2]
 8002f7a:	4293      	cmp	r3, r2
 8002f7c:	bf38      	it	cc
 8002f7e:	4613      	movcc	r3, r2
 8002f80:	68e4      	ldr	r4, [r4, #12]
 8002f82:	e7ca      	b.n	8002f1a <rt_mut_release+0x36>
 8002f84:	4640      	mov	r0, r8
 8002f86:	f7fe fdf9 	bl	8001b7c <rt_put_prio>
 8002f8a:	4631      	mov	r1, r6
 8002f8c:	4640      	mov	r0, r8
 8002f8e:	f7fe fdf5 	bl	8001b7c <rt_put_prio>
 8002f92:	683b      	ldr	r3, [r7, #0]
 8002f94:	f883 9001 	strb.w	r9, [r3, #1]
 8002f98:	f886 9001 	strb.w	r9, [r6, #1]
 8002f9c:	4620      	mov	r0, r4
 8002f9e:	e7dd      	b.n	8002f5c <rt_mut_release+0x78>
 8002fa0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002fa4:	7892      	ldrb	r2, [r2, #2]
 8002fa6:	429a      	cmp	r2, r3
 8002fa8:	d9ab      	bls.n	8002f02 <rt_mut_release+0x1e>
 8002faa:	4640      	mov	r0, r8
 8002fac:	f7fe fde6 	bl	8001b7c <rt_put_prio>
 8002fb0:	683b      	ldr	r3, [r7, #0]
 8002fb2:	2201      	movs	r2, #1
 8002fb4:	705a      	strb	r2, [r3, #1]
 8002fb6:	e7f1      	b.n	8002f9c <rt_mut_release+0xb8>
 8002fb8:	24ff      	movs	r4, #255	; 0xff
 8002fba:	e7a3      	b.n	8002f04 <rt_mut_release+0x20>
 8002fbc:	20001e54 	.word	0x20001e54
 8002fc0:	20001e08 	.word	0x20001e08

08002fc4 <rt_mut_wait>:
 8002fc4:	8843      	ldrh	r3, [r0, #2]
 8002fc6:	b570      	push	{r4, r5, r6, lr}
 8002fc8:	4604      	mov	r4, r0
 8002fca:	460e      	mov	r6, r1
 8002fcc:	4d13      	ldr	r5, [pc, #76]	; (800301c <rt_mut_wait+0x58>)
 8002fce:	b943      	cbnz	r3, 8002fe2 <rt_mut_wait+0x1e>
 8002fd0:	682a      	ldr	r2, [r5, #0]
 8002fd2:	6082      	str	r2, [r0, #8]
 8002fd4:	6a11      	ldr	r1, [r2, #32]
 8002fd6:	60c1      	str	r1, [r0, #12]
 8002fd8:	6210      	str	r0, [r2, #32]
 8002fda:	3301      	adds	r3, #1
 8002fdc:	8063      	strh	r3, [r4, #2]
 8002fde:	2000      	movs	r0, #0
 8002fe0:	bd70      	pop	{r4, r5, r6, pc}
 8002fe2:	6880      	ldr	r0, [r0, #8]
 8002fe4:	682a      	ldr	r2, [r5, #0]
 8002fe6:	4290      	cmp	r0, r2
 8002fe8:	d0f7      	beq.n	8002fda <rt_mut_wait+0x16>
 8002fea:	b181      	cbz	r1, 800300e <rt_mut_wait+0x4a>
 8002fec:	7893      	ldrb	r3, [r2, #2]
 8002fee:	7882      	ldrb	r2, [r0, #2]
 8002ff0:	429a      	cmp	r2, r3
 8002ff2:	d202      	bcs.n	8002ffa <rt_mut_wait+0x36>
 8002ff4:	7083      	strb	r3, [r0, #2]
 8002ff6:	f7fe fe67 	bl	8001cc8 <rt_resort_prio>
 8002ffa:	6862      	ldr	r2, [r4, #4]
 8002ffc:	b14a      	cbz	r2, 8003012 <rt_mut_wait+0x4e>
 8002ffe:	6829      	ldr	r1, [r5, #0]
 8003000:	4620      	mov	r0, r4
 8003002:	f7fe fdbb 	bl	8001b7c <rt_put_prio>
 8003006:	2109      	movs	r1, #9
 8003008:	4630      	mov	r0, r6
 800300a:	f7ff fced 	bl	80029e8 <rt_block>
 800300e:	2001      	movs	r0, #1
 8003010:	bd70      	pop	{r4, r5, r6, pc}
 8003012:	682b      	ldr	r3, [r5, #0]
 8003014:	6063      	str	r3, [r4, #4]
 8003016:	605a      	str	r2, [r3, #4]
 8003018:	609c      	str	r4, [r3, #8]
 800301a:	e7f4      	b.n	8003006 <rt_mut_wait+0x42>
 800301c:	20001e54 	.word	0x20001e54

08003020 <rt_dly_wait>:
 8003020:	2103      	movs	r1, #3
 8003022:	f7ff bce1 	b.w	80029e8 <rt_block>
	...

08003028 <rt_sem_psh>:
 8003028:	6842      	ldr	r2, [r0, #4]
 800302a:	b510      	push	{r4, lr}
 800302c:	b17a      	cbz	r2, 800304e <rt_sem_psh+0x26>
 800302e:	f7fe fdbd 	bl	8001bac <rt_get_first>
 8003032:	4604      	mov	r4, r0
 8003034:	f7fe fe60 	bl	8001cf8 <rt_rmv_dly>
 8003038:	2101      	movs	r1, #1
 800303a:	7061      	strb	r1, [r4, #1]
 800303c:	4620      	mov	r0, r4
 800303e:	f7fe ff79 	bl	8001f34 <rt_ret_val>
 8003042:	4621      	mov	r1, r4
 8003044:	4804      	ldr	r0, [pc, #16]	; (8003058 <rt_sem_psh+0x30>)
 8003046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800304a:	f7fe bd97 	b.w	8001b7c <rt_put_prio>
 800304e:	8842      	ldrh	r2, [r0, #2]
 8003050:	3201      	adds	r2, #1
 8003052:	8042      	strh	r2, [r0, #2]
 8003054:	bd10      	pop	{r4, pc}
 8003056:	bf00      	nop
 8003058:	20001e08 	.word	0x20001e08

0800305c <timer_irq_handler>:
 800305c:	b570      	push	{r4, r5, r6, lr}
 800305e:	4c13      	ldr	r4, [pc, #76]	; (80030ac <timer_irq_handler+0x50>)
 8003060:	6823      	ldr	r3, [r4, #0]
 8003062:	691a      	ldr	r2, [r3, #16]
 8003064:	0795      	lsls	r5, r2, #30
 8003066:	d507      	bpl.n	8003078 <timer_irq_handler+0x1c>
 8003068:	68da      	ldr	r2, [r3, #12]
 800306a:	0790      	lsls	r0, r2, #30
 800306c:	d504      	bpl.n	8003078 <timer_irq_handler+0x1c>
 800306e:	f06f 0202 	mvn.w	r2, #2
 8003072:	611a      	str	r2, [r3, #16]
 8003074:	f7fe fc4c 	bl	8001910 <us_ticker_irq_handler>
 8003078:	6823      	ldr	r3, [r4, #0]
 800307a:	691a      	ldr	r2, [r3, #16]
 800307c:	0751      	lsls	r1, r2, #29
 800307e:	d513      	bpl.n	80030a8 <timer_irq_handler+0x4c>
 8003080:	68da      	ldr	r2, [r3, #12]
 8003082:	0752      	lsls	r2, r2, #29
 8003084:	d510      	bpl.n	80030a8 <timer_irq_handler+0x4c>
 8003086:	f06f 0204 	mvn.w	r2, #4
 800308a:	4e09      	ldr	r6, [pc, #36]	; (80030b0 <timer_irq_handler+0x54>)
 800308c:	611a      	str	r2, [r3, #16]
 800308e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003090:	6833      	ldr	r3, [r6, #0]
 8003092:	1aeb      	subs	r3, r5, r3
 8003094:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003098:	d306      	bcc.n	80030a8 <timer_irq_handler+0x4c>
 800309a:	f001 fb57 	bl	800474c <HAL_IncTick>
 800309e:	6823      	ldr	r3, [r4, #0]
 80030a0:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 80030a4:	639a      	str	r2, [r3, #56]	; 0x38
 80030a6:	6035      	str	r5, [r6, #0]
 80030a8:	bd70      	pop	{r4, r5, r6, pc}
 80030aa:	bf00      	nop
 80030ac:	20001ea0 	.word	0x20001ea0
 80030b0:	20001248 	.word	0x20001248

080030b4 <HAL_InitTick>:
 80030b4:	b530      	push	{r4, r5, lr}
 80030b6:	b089      	sub	sp, #36	; 0x24
 80030b8:	a901      	add	r1, sp, #4
 80030ba:	a803      	add	r0, sp, #12
 80030bc:	f001 fb14 	bl	80046e8 <HAL_RCC_GetClockConfig>
 80030c0:	f001 fae2 	bl	8004688 <HAL_RCC_GetPCLK1Freq>
 80030c4:	4b24      	ldr	r3, [pc, #144]	; (8003158 <HAL_InitTick+0xa4>)
 80030c6:	9001      	str	r0, [sp, #4]
 80030c8:	69da      	ldr	r2, [r3, #28]
 80030ca:	4c24      	ldr	r4, [pc, #144]	; (800315c <HAL_InitTick+0xa8>)
 80030cc:	f042 0201 	orr.w	r2, r2, #1
 80030d0:	61da      	str	r2, [r3, #28]
 80030d2:	69da      	ldr	r2, [r3, #28]
 80030d4:	f002 0201 	and.w	r2, r2, #1
 80030d8:	9202      	str	r2, [sp, #8]
 80030da:	9a02      	ldr	r2, [sp, #8]
 80030dc:	691a      	ldr	r2, [r3, #16]
 80030de:	f042 0201 	orr.w	r2, r2, #1
 80030e2:	611a      	str	r2, [r3, #16]
 80030e4:	691a      	ldr	r2, [r3, #16]
 80030e6:	f022 0201 	bic.w	r2, r2, #1
 80030ea:	611a      	str	r2, [r3, #16]
 80030ec:	9a06      	ldr	r2, [sp, #24]
 80030ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80030f2:	6023      	str	r3, [r4, #0]
 80030f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80030f8:	60e3      	str	r3, [r4, #12]
 80030fa:	4b19      	ldr	r3, [pc, #100]	; (8003160 <HAL_InitTick+0xac>)
 80030fc:	bb4a      	cbnz	r2, 8003152 <HAL_InitTick+0x9e>
 80030fe:	fbb0 f0f3 	udiv	r0, r0, r3
 8003102:	3801      	subs	r0, #1
 8003104:	2500      	movs	r5, #0
 8003106:	6060      	str	r0, [r4, #4]
 8003108:	4814      	ldr	r0, [pc, #80]	; (800315c <HAL_InitTick+0xa8>)
 800310a:	6125      	str	r5, [r4, #16]
 800310c:	60a5      	str	r5, [r4, #8]
 800310e:	6165      	str	r5, [r4, #20]
 8003110:	f001 fc7e 	bl	8004a10 <HAL_TIM_OC_Init>
 8003114:	4913      	ldr	r1, [pc, #76]	; (8003164 <HAL_InitTick+0xb0>)
 8003116:	201c      	movs	r0, #28
 8003118:	f000 ff20 	bl	8003f5c <__NVIC_SetVector>
 800311c:	4b12      	ldr	r3, [pc, #72]	; (8003168 <HAL_InitTick+0xb4>)
 800311e:	480f      	ldr	r0, [pc, #60]	; (800315c <HAL_InitTick+0xa8>)
 8003120:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003124:	601a      	str	r2, [r3, #0]
 8003126:	4629      	mov	r1, r5
 8003128:	f001 fcba 	bl	8004aa0 <HAL_TIM_OC_Start>
 800312c:	2104      	movs	r1, #4
 800312e:	480b      	ldr	r0, [pc, #44]	; (800315c <HAL_InitTick+0xa8>)
 8003130:	f001 fcb6 	bl	8004aa0 <HAL_TIM_OC_Start>
 8003134:	6823      	ldr	r3, [r4, #0]
 8003136:	4a0d      	ldr	r2, [pc, #52]	; (800316c <HAL_InitTick+0xb8>)
 8003138:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800313a:	6011      	str	r1, [r2, #0]
 800313c:	6812      	ldr	r2, [r2, #0]
 800313e:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8003142:	639a      	str	r2, [r3, #56]	; 0x38
 8003144:	68da      	ldr	r2, [r3, #12]
 8003146:	4628      	mov	r0, r5
 8003148:	f042 0204 	orr.w	r2, r2, #4
 800314c:	60da      	str	r2, [r3, #12]
 800314e:	b009      	add	sp, #36	; 0x24
 8003150:	bd30      	pop	{r4, r5, pc}
 8003152:	0040      	lsls	r0, r0, #1
 8003154:	e7d3      	b.n	80030fe <HAL_InitTick+0x4a>
 8003156:	bf00      	nop
 8003158:	40021000 	.word	0x40021000
 800315c:	20001ea0 	.word	0x20001ea0
 8003160:	000f4240 	.word	0x000f4240
 8003164:	0800305d 	.word	0x0800305d
 8003168:	e000e100 	.word	0xe000e100
 800316c:	20001248 	.word	0x20001248

08003170 <HAL_SuspendTick>:
 8003170:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003174:	4a03      	ldr	r2, [pc, #12]	; (8003184 <HAL_SuspendTick+0x14>)
 8003176:	6013      	str	r3, [r2, #0]
 8003178:	68da      	ldr	r2, [r3, #12]
 800317a:	f022 0204 	bic.w	r2, r2, #4
 800317e:	60da      	str	r2, [r3, #12]
 8003180:	4770      	bx	lr
 8003182:	bf00      	nop
 8003184:	20001ea0 	.word	0x20001ea0

08003188 <HAL_ResumeTick>:
 8003188:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800318c:	4a03      	ldr	r2, [pc, #12]	; (800319c <HAL_ResumeTick+0x14>)
 800318e:	6013      	str	r3, [r2, #0]
 8003190:	68da      	ldr	r2, [r3, #12]
 8003192:	f042 0204 	orr.w	r2, r2, #4
 8003196:	60da      	str	r2, [r3, #12]
 8003198:	4770      	bx	lr
 800319a:	bf00      	nop
 800319c:	20001ea0 	.word	0x20001ea0

080031a0 <Set_GPIO_Clock>:
 80031a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80031a2:	2805      	cmp	r0, #5
 80031a4:	d843      	bhi.n	800322e <Set_GPIO_Clock+0x8e>
 80031a6:	e8df f000 	tbb	[pc, r0]
 80031aa:	1203      	.short	0x1203
 80031ac:	36422a1e 	.word	0x36422a1e
 80031b0:	4b21      	ldr	r3, [pc, #132]	; (8003238 <Set_GPIO_Clock+0x98>)
 80031b2:	695a      	ldr	r2, [r3, #20]
 80031b4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80031b8:	615a      	str	r2, [r3, #20]
 80031ba:	695b      	ldr	r3, [r3, #20]
 80031bc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031c0:	9301      	str	r3, [sp, #4]
 80031c2:	9b01      	ldr	r3, [sp, #4]
 80031c4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80031c8:	b007      	add	sp, #28
 80031ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80031ce:	4b1a      	ldr	r3, [pc, #104]	; (8003238 <Set_GPIO_Clock+0x98>)
 80031d0:	481a      	ldr	r0, [pc, #104]	; (800323c <Set_GPIO_Clock+0x9c>)
 80031d2:	695a      	ldr	r2, [r3, #20]
 80031d4:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80031d8:	615a      	str	r2, [r3, #20]
 80031da:	695b      	ldr	r3, [r3, #20]
 80031dc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80031e0:	9302      	str	r3, [sp, #8]
 80031e2:	9b02      	ldr	r3, [sp, #8]
 80031e4:	e7f0      	b.n	80031c8 <Set_GPIO_Clock+0x28>
 80031e6:	4b14      	ldr	r3, [pc, #80]	; (8003238 <Set_GPIO_Clock+0x98>)
 80031e8:	4815      	ldr	r0, [pc, #84]	; (8003240 <Set_GPIO_Clock+0xa0>)
 80031ea:	695a      	ldr	r2, [r3, #20]
 80031ec:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80031f0:	615a      	str	r2, [r3, #20]
 80031f2:	695b      	ldr	r3, [r3, #20]
 80031f4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80031f8:	9303      	str	r3, [sp, #12]
 80031fa:	9b03      	ldr	r3, [sp, #12]
 80031fc:	e7e4      	b.n	80031c8 <Set_GPIO_Clock+0x28>
 80031fe:	4b0e      	ldr	r3, [pc, #56]	; (8003238 <Set_GPIO_Clock+0x98>)
 8003200:	4810      	ldr	r0, [pc, #64]	; (8003244 <Set_GPIO_Clock+0xa4>)
 8003202:	695a      	ldr	r2, [r3, #20]
 8003204:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003208:	615a      	str	r2, [r3, #20]
 800320a:	695b      	ldr	r3, [r3, #20]
 800320c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003210:	9304      	str	r3, [sp, #16]
 8003212:	9b04      	ldr	r3, [sp, #16]
 8003214:	e7d8      	b.n	80031c8 <Set_GPIO_Clock+0x28>
 8003216:	4b08      	ldr	r3, [pc, #32]	; (8003238 <Set_GPIO_Clock+0x98>)
 8003218:	480b      	ldr	r0, [pc, #44]	; (8003248 <Set_GPIO_Clock+0xa8>)
 800321a:	695a      	ldr	r2, [r3, #20]
 800321c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003220:	615a      	str	r2, [r3, #20]
 8003222:	695b      	ldr	r3, [r3, #20]
 8003224:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003228:	9305      	str	r3, [sp, #20]
 800322a:	9b05      	ldr	r3, [sp, #20]
 800322c:	e7cc      	b.n	80031c8 <Set_GPIO_Clock+0x28>
 800322e:	4807      	ldr	r0, [pc, #28]	; (800324c <Set_GPIO_Clock+0xac>)
 8003230:	f7fe fc16 	bl	8001a60 <error>
 8003234:	2000      	movs	r0, #0
 8003236:	e7c7      	b.n	80031c8 <Set_GPIO_Clock+0x28>
 8003238:	40021000 	.word	0x40021000
 800323c:	48000400 	.word	0x48000400
 8003240:	48000800 	.word	0x48000800
 8003244:	48000c00 	.word	0x48000c00
 8003248:	48001400 	.word	0x48001400
 800324c:	08006e1c 	.word	0x08006e1c

08003250 <gpio_set>:
 8003250:	b510      	push	{r4, lr}
 8003252:	2100      	movs	r1, #0
 8003254:	4604      	mov	r4, r0
 8003256:	f004 040f 	and.w	r4, r4, #15
 800325a:	f000 fb33 	bl	80038c4 <pin_function>
 800325e:	2001      	movs	r0, #1
 8003260:	40a0      	lsls	r0, r4
 8003262:	bd10      	pop	{r4, pc}

08003264 <gpio_init>:
 8003264:	b570      	push	{r4, r5, r6, lr}
 8003266:	4604      	mov	r4, r0
 8003268:	1c4b      	adds	r3, r1, #1
 800326a:	460e      	mov	r6, r1
 800326c:	8221      	strh	r1, [r4, #16]
 800326e:	d018      	beq.n	80032a2 <gpio_init+0x3e>
 8003270:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003274:	f7ff ff94 	bl	80031a0 <Set_GPIO_Clock>
 8003278:	4605      	mov	r5, r0
 800327a:	4630      	mov	r0, r6
 800327c:	f7ff ffe8 	bl	8003250 <gpio_set>
 8003280:	8a23      	ldrh	r3, [r4, #16]
 8003282:	4a08      	ldr	r2, [pc, #32]	; (80032a4 <gpio_init+0x40>)
 8003284:	6165      	str	r5, [r4, #20]
 8003286:	f003 030f 	and.w	r3, r3, #15
 800328a:	6020      	str	r0, [r4, #0]
 800328c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003290:	61a3      	str	r3, [r4, #24]
 8003292:	f105 0310 	add.w	r3, r5, #16
 8003296:	6063      	str	r3, [r4, #4]
 8003298:	f105 0318 	add.w	r3, r5, #24
 800329c:	3528      	adds	r5, #40	; 0x28
 800329e:	60a3      	str	r3, [r4, #8]
 80032a0:	60e5      	str	r5, [r4, #12]
 80032a2:	bd70      	pop	{r4, r5, r6, pc}
 80032a4:	08006f0c 	.word	0x08006f0c

080032a8 <gpio_mode>:
 80032a8:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 80032ac:	f000 bb8c 	b.w	80039c8 <pin_mode>

080032b0 <gpio_dir>:
 80032b0:	b510      	push	{r4, lr}
 80032b2:	6983      	ldr	r3, [r0, #24]
 80032b4:	6944      	ldr	r4, [r0, #20]
 80032b6:	b971      	cbnz	r1, 80032d6 <gpio_dir+0x26>
 80032b8:	6821      	ldr	r1, [r4, #0]
 80032ba:	fa93 f2a3 	rbit	r2, r3
 80032be:	fab2 f282 	clz	r2, r2
 80032c2:	2003      	movs	r0, #3
 80032c4:	0052      	lsls	r2, r2, #1
 80032c6:	fa00 f202 	lsl.w	r2, r0, r2
 80032ca:	ea21 0202 	bic.w	r2, r1, r2
 80032ce:	fa93 f3a3 	rbit	r3, r3
 80032d2:	6022      	str	r2, [r4, #0]
 80032d4:	bd10      	pop	{r4, pc}
 80032d6:	6822      	ldr	r2, [r4, #0]
 80032d8:	fa93 f1a3 	rbit	r1, r3
 80032dc:	fab1 f181 	clz	r1, r1
 80032e0:	fa93 f3a3 	rbit	r3, r3
 80032e4:	2003      	movs	r0, #3
 80032e6:	0049      	lsls	r1, r1, #1
 80032e8:	fa00 f101 	lsl.w	r1, r0, r1
 80032ec:	fab3 f383 	clz	r3, r3
 80032f0:	ea22 0201 	bic.w	r2, r2, r1
 80032f4:	005b      	lsls	r3, r3, #1
 80032f6:	2101      	movs	r1, #1
 80032f8:	fa01 f303 	lsl.w	r3, r1, r3
 80032fc:	4313      	orrs	r3, r2
 80032fe:	6023      	str	r3, [r4, #0]
 8003300:	bd10      	pop	{r4, pc}

08003302 <hal_sleep>:
 8003302:	b508      	push	{r3, lr}
 8003304:	f7ff ff34 	bl	8003170 <HAL_SuspendTick>
 8003308:	2101      	movs	r1, #1
 800330a:	2000      	movs	r0, #0
 800330c:	f000 fe46 	bl	8003f9c <HAL_PWR_EnterSLEEPMode>
 8003310:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003314:	f7ff bf38 	b.w	8003188 <HAL_ResumeTick>

08003318 <CAN_SCE_IRQHandler>:
 8003318:	4b38      	ldr	r3, [pc, #224]	; (80033fc <CAN_SCE_IRQHandler+0xe4>)
 800331a:	695a      	ldr	r2, [r3, #20]
 800331c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003320:	4c37      	ldr	r4, [pc, #220]	; (8003400 <CAN_SCE_IRQHandler+0xe8>)
 8003322:	07d2      	lsls	r2, r2, #31
 8003324:	6023      	str	r3, [r4, #0]
 8003326:	d52a      	bpl.n	800337e <CAN_SCE_IRQHandler+0x66>
 8003328:	6898      	ldr	r0, [r3, #8]
 800332a:	4f36      	ldr	r7, [pc, #216]	; (8003404 <CAN_SCE_IRQHandler+0xec>)
 800332c:	6899      	ldr	r1, [r3, #8]
 800332e:	4e36      	ldr	r6, [pc, #216]	; (8003408 <CAN_SCE_IRQHandler+0xf0>)
 8003330:	689a      	ldr	r2, [r3, #8]
 8003332:	4d36      	ldr	r5, [pc, #216]	; (800340c <CAN_SCE_IRQHandler+0xf4>)
 8003334:	4038      	ands	r0, r7
 8003336:	42b8      	cmp	r0, r7
 8003338:	ea01 0106 	and.w	r1, r1, r6
 800333c:	bf04      	itt	eq
 800333e:	2701      	moveq	r7, #1
 8003340:	609f      	streq	r7, [r3, #8]
 8003342:	42b1      	cmp	r1, r6
 8003344:	bf08      	it	eq
 8003346:	4b2d      	ldreq	r3, [pc, #180]	; (80033fc <CAN_SCE_IRQHandler+0xe4>)
 8003348:	ea02 0205 	and.w	r2, r2, r5
 800334c:	bf04      	itt	eq
 800334e:	f44f 7680 	moveq.w	r6, #256	; 0x100
 8003352:	609e      	streq	r6, [r3, #8]
 8003354:	42aa      	cmp	r2, r5
 8003356:	bf02      	ittt	eq
 8003358:	4b28      	ldreq	r3, [pc, #160]	; (80033fc <CAN_SCE_IRQHandler+0xe4>)
 800335a:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 800335e:	609d      	streq	r5, [r3, #8]
 8003360:	4b28      	ldr	r3, [pc, #160]	; (8003404 <CAN_SCE_IRQHandler+0xec>)
 8003362:	4298      	cmp	r0, r3
 8003364:	d005      	beq.n	8003372 <CAN_SCE_IRQHandler+0x5a>
 8003366:	4b28      	ldr	r3, [pc, #160]	; (8003408 <CAN_SCE_IRQHandler+0xf0>)
 8003368:	4299      	cmp	r1, r3
 800336a:	d002      	beq.n	8003372 <CAN_SCE_IRQHandler+0x5a>
 800336c:	4b27      	ldr	r3, [pc, #156]	; (800340c <CAN_SCE_IRQHandler+0xf4>)
 800336e:	429a      	cmp	r2, r3
 8003370:	d105      	bne.n	800337e <CAN_SCE_IRQHandler+0x66>
 8003372:	4b27      	ldr	r3, [pc, #156]	; (8003410 <CAN_SCE_IRQHandler+0xf8>)
 8003374:	4a27      	ldr	r2, [pc, #156]	; (8003414 <CAN_SCE_IRQHandler+0xfc>)
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	6810      	ldr	r0, [r2, #0]
 800337a:	2101      	movs	r1, #1
 800337c:	4798      	blx	r3
 800337e:	6823      	ldr	r3, [r4, #0]
 8003380:	68da      	ldr	r2, [r3, #12]
 8003382:	695b      	ldr	r3, [r3, #20]
 8003384:	0797      	lsls	r7, r2, #30
 8003386:	d007      	beq.n	8003398 <CAN_SCE_IRQHandler+0x80>
 8003388:	079e      	lsls	r6, r3, #30
 800338a:	d505      	bpl.n	8003398 <CAN_SCE_IRQHandler+0x80>
 800338c:	4b20      	ldr	r3, [pc, #128]	; (8003410 <CAN_SCE_IRQHandler+0xf8>)
 800338e:	4a21      	ldr	r2, [pc, #132]	; (8003414 <CAN_SCE_IRQHandler+0xfc>)
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	6810      	ldr	r0, [r2, #0]
 8003394:	2100      	movs	r1, #0
 8003396:	4798      	blx	r3
 8003398:	6823      	ldr	r3, [r4, #0]
 800339a:	6999      	ldr	r1, [r3, #24]
 800339c:	695a      	ldr	r2, [r3, #20]
 800339e:	695b      	ldr	r3, [r3, #20]
 80033a0:	078d      	lsls	r5, r1, #30
 80033a2:	d509      	bpl.n	80033b8 <CAN_SCE_IRQHandler+0xa0>
 80033a4:	0590      	lsls	r0, r2, #22
 80033a6:	d507      	bpl.n	80033b8 <CAN_SCE_IRQHandler+0xa0>
 80033a8:	0419      	lsls	r1, r3, #16
 80033aa:	d505      	bpl.n	80033b8 <CAN_SCE_IRQHandler+0xa0>
 80033ac:	4b18      	ldr	r3, [pc, #96]	; (8003410 <CAN_SCE_IRQHandler+0xf8>)
 80033ae:	4a19      	ldr	r2, [pc, #100]	; (8003414 <CAN_SCE_IRQHandler+0xfc>)
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	6810      	ldr	r0, [r2, #0]
 80033b4:	2105      	movs	r1, #5
 80033b6:	4798      	blx	r3
 80033b8:	6822      	ldr	r2, [r4, #0]
 80033ba:	6996      	ldr	r6, [r2, #24]
 80033bc:	6955      	ldr	r5, [r2, #20]
 80033be:	6952      	ldr	r2, [r2, #20]
 80033c0:	f016 0604 	ands.w	r6, r6, #4
 80033c4:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 80033c8:	d008      	beq.n	80033dc <CAN_SCE_IRQHandler+0xc4>
 80033ca:	b13d      	cbz	r5, 80033dc <CAN_SCE_IRQHandler+0xc4>
 80033cc:	0412      	lsls	r2, r2, #16
 80033ce:	d505      	bpl.n	80033dc <CAN_SCE_IRQHandler+0xc4>
 80033d0:	4b0f      	ldr	r3, [pc, #60]	; (8003410 <CAN_SCE_IRQHandler+0xf8>)
 80033d2:	4a10      	ldr	r2, [pc, #64]	; (8003414 <CAN_SCE_IRQHandler+0xfc>)
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	6810      	ldr	r0, [r2, #0]
 80033d8:	2107      	movs	r1, #7
 80033da:	4798      	blx	r3
 80033dc:	6823      	ldr	r3, [r4, #0]
 80033de:	695b      	ldr	r3, [r3, #20]
 80033e0:	b156      	cbz	r6, 80033f8 <CAN_SCE_IRQHandler+0xe0>
 80033e2:	b14d      	cbz	r5, 80033f8 <CAN_SCE_IRQHandler+0xe0>
 80033e4:	041b      	lsls	r3, r3, #16
 80033e6:	d507      	bpl.n	80033f8 <CAN_SCE_IRQHandler+0xe0>
 80033e8:	4b09      	ldr	r3, [pc, #36]	; (8003410 <CAN_SCE_IRQHandler+0xf8>)
 80033ea:	4a0a      	ldr	r2, [pc, #40]	; (8003414 <CAN_SCE_IRQHandler+0xfc>)
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	6810      	ldr	r0, [r2, #0]
 80033f0:	2102      	movs	r1, #2
 80033f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80033f6:	4718      	bx	r3
 80033f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033fc:	40006400 	.word	0x40006400
 8003400:	2000124c 	.word	0x2000124c
 8003404:	04000003 	.word	0x04000003
 8003408:	08000300 	.word	0x08000300
 800340c:	10030000 	.word	0x10030000
 8003410:	20001290 	.word	0x20001290
 8003414:	2000128c 	.word	0x2000128c

08003418 <CAN_TX_IRQHandler>:
 8003418:	f7ff bf7e 	b.w	8003318 <CAN_SCE_IRQHandler>

0800341c <CAN_RX0_IRQHandler>:
 800341c:	f7ff bf7c 	b.w	8003318 <CAN_SCE_IRQHandler>

08003420 <can_irq_init>:
 8003420:	4b03      	ldr	r3, [pc, #12]	; (8003430 <can_irq_init+0x10>)
 8003422:	6019      	str	r1, [r3, #0]
 8003424:	6841      	ldr	r1, [r0, #4]
 8003426:	4b03      	ldr	r3, [pc, #12]	; (8003434 <can_irq_init+0x14>)
 8003428:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 800342c:	4770      	bx	lr
 800342e:	bf00      	nop
 8003430:	20001290 	.word	0x20001290
 8003434:	2000128c 	.word	0x2000128c

08003438 <can_irq_free>:
 8003438:	6802      	ldr	r2, [r0, #0]
 800343a:	6953      	ldr	r3, [r2, #20]
 800343c:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 8003440:	f023 0313 	bic.w	r3, r3, #19
 8003444:	6153      	str	r3, [r2, #20]
 8003446:	4b02      	ldr	r3, [pc, #8]	; (8003450 <can_irq_free+0x18>)
 8003448:	2100      	movs	r1, #0
 800344a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800344e:	4770      	bx	lr
 8003450:	2000128c 	.word	0x2000128c

08003454 <can_free>:
 8003454:	6802      	ldr	r2, [r0, #0]
 8003456:	4b09      	ldr	r3, [pc, #36]	; (800347c <can_free+0x28>)
 8003458:	429a      	cmp	r2, r3
 800345a:	d10d      	bne.n	8003478 <can_free+0x24>
 800345c:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 8003460:	691a      	ldr	r2, [r3, #16]
 8003462:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8003466:	611a      	str	r2, [r3, #16]
 8003468:	691a      	ldr	r2, [r3, #16]
 800346a:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800346e:	611a      	str	r2, [r3, #16]
 8003470:	69da      	ldr	r2, [r3, #28]
 8003472:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8003476:	61da      	str	r2, [r3, #28]
 8003478:	4770      	bx	lr
 800347a:	bf00      	nop
 800347c:	40006400 	.word	0x40006400

08003480 <can_frequency>:
 8003480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003482:	460d      	mov	r5, r1
 8003484:	4604      	mov	r4, r0
 8003486:	f001 f8ff 	bl	8004688 <HAL_RCC_GetPCLK1Freq>
 800348a:	2318      	movs	r3, #24
 800348c:	fbb0 f0f5 	udiv	r0, r0, r5
 8003490:	2119      	movs	r1, #25
 8003492:	fbb0 f3f3 	udiv	r3, r0, r3
 8003496:	0886      	lsrs	r6, r0, #2
 8003498:	b29b      	uxth	r3, r3
 800349a:	42b3      	cmp	r3, r6
 800349c:	d315      	bcc.n	80034ca <can_frequency+0x4a>
 800349e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	6822      	ldr	r2, [r4, #0]
 80034a6:	dd1c      	ble.n	80034e2 <can_frequency+0x62>
 80034a8:	6811      	ldr	r1, [r2, #0]
 80034aa:	f041 0101 	orr.w	r1, r1, #1
 80034ae:	6011      	str	r1, [r2, #0]
 80034b0:	6851      	ldr	r1, [r2, #4]
 80034b2:	07c9      	lsls	r1, r1, #31
 80034b4:	d5fc      	bpl.n	80034b0 <can_frequency+0x30>
 80034b6:	61d3      	str	r3, [r2, #28]
 80034b8:	6813      	ldr	r3, [r2, #0]
 80034ba:	f023 0301 	bic.w	r3, r3, #1
 80034be:	6013      	str	r3, [r2, #0]
 80034c0:	6853      	ldr	r3, [r2, #4]
 80034c2:	07db      	lsls	r3, r3, #31
 80034c4:	d4fc      	bmi.n	80034c0 <can_frequency+0x40>
 80034c6:	2001      	movs	r0, #1
 80034c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80034ca:	3301      	adds	r3, #1
 80034cc:	b29b      	uxth	r3, r3
 80034ce:	43df      	mvns	r7, r3
 80034d0:	fb03 1201 	mla	r2, r3, r1, r1
 80034d4:	2516      	movs	r5, #22
 80034d6:	4290      	cmp	r0, r2
 80034d8:	d005      	beq.n	80034e6 <can_frequency+0x66>
 80034da:	3d01      	subs	r5, #1
 80034dc:	443a      	add	r2, r7
 80034de:	d1fa      	bne.n	80034d6 <can_frequency+0x56>
 80034e0:	e7db      	b.n	800349a <can_frequency+0x1a>
 80034e2:	2000      	movs	r0, #0
 80034e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80034e6:	4908      	ldr	r1, [pc, #32]	; (8003508 <can_frequency+0x88>)
 80034e8:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 80034ec:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 80034f0:	6852      	ldr	r2, [r2, #4]
 80034f2:	0409      	lsls	r1, r1, #16
 80034f4:	0512      	lsls	r2, r2, #20
 80034f6:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 80034fa:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80034fe:	430a      	orrs	r2, r1
 8003500:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003504:	4313      	orrs	r3, r2
 8003506:	e7cc      	b.n	80034a2 <can_frequency+0x22>
 8003508:	08006e54 	.word	0x08006e54

0800350c <can_write>:
 800350c:	b084      	sub	sp, #16
 800350e:	b530      	push	{r4, r5, lr}
 8003510:	ac04      	add	r4, sp, #16
 8003512:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8003516:	6804      	ldr	r4, [r0, #0]
 8003518:	f89d 201e 	ldrb.w	r2, [sp, #30]
 800351c:	68a3      	ldr	r3, [r4, #8]
 800351e:	0158      	lsls	r0, r3, #5
 8003520:	d43a      	bmi.n	8003598 <can_write+0x8c>
 8003522:	68a3      	ldr	r3, [r4, #8]
 8003524:	011b      	lsls	r3, r3, #4
 8003526:	d439      	bmi.n	800359c <can_write+0x90>
 8003528:	68a0      	ldr	r0, [r4, #8]
 800352a:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 800352e:	d02f      	beq.n	8003590 <can_write+0x84>
 8003530:	2002      	movs	r0, #2
 8003532:	0100      	lsls	r0, r0, #4
 8003534:	1823      	adds	r3, r4, r0
 8003536:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 800353a:	f005 0501 	and.w	r5, r5, #1
 800353e:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 8003542:	f89d 501d 	ldrb.w	r5, [sp, #29]
 8003546:	bb5d      	cbnz	r5, 80035a0 <can_write+0x94>
 8003548:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 800354c:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 8003550:	4329      	orrs	r1, r5
 8003552:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8003556:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 800355a:	f021 010f 	bic.w	r1, r1, #15
 800355e:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 8003562:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8003566:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 800356a:	f001 010f 	and.w	r1, r1, #15
 800356e:	4311      	orrs	r1, r2
 8003570:	1822      	adds	r2, r4, r0
 8003572:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 8003576:	9905      	ldr	r1, [sp, #20]
 8003578:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 800357c:	9906      	ldr	r1, [sp, #24]
 800357e:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 8003582:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 8003586:	f042 0201 	orr.w	r2, r2, #1
 800358a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 800358e:	2001      	movs	r0, #1
 8003590:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003594:	b004      	add	sp, #16
 8003596:	4770      	bx	lr
 8003598:	2000      	movs	r0, #0
 800359a:	e7ca      	b.n	8003532 <can_write+0x26>
 800359c:	2001      	movs	r0, #1
 800359e:	e7c8      	b.n	8003532 <can_write+0x26>
 80035a0:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 80035a4:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80035a8:	f041 0104 	orr.w	r1, r1, #4
 80035ac:	e7d0      	b.n	8003550 <can_write+0x44>

080035ae <can_read>:
 80035ae:	b530      	push	{r4, r5, lr}
 80035b0:	6804      	ldr	r4, [r0, #0]
 80035b2:	68e0      	ldr	r0, [r4, #12]
 80035b4:	f010 0003 	ands.w	r0, r0, #3
 80035b8:	d03a      	beq.n	8003630 <can_read+0x82>
 80035ba:	0113      	lsls	r3, r2, #4
 80035bc:	18e0      	adds	r0, r4, r3
 80035be:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80035c2:	f3c5 0580 	ubfx	r5, r5, #2, #1
 80035c6:	734d      	strb	r5, [r1, #13]
 80035c8:	bb9d      	cbnz	r5, 8003632 <can_read+0x84>
 80035ca:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80035ce:	0d6d      	lsrs	r5, r5, #21
 80035d0:	600d      	str	r5, [r1, #0]
 80035d2:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80035d6:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 80035da:	4423      	add	r3, r4
 80035dc:	f000 000f 	and.w	r0, r0, #15
 80035e0:	7308      	strb	r0, [r1, #12]
 80035e2:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80035e6:	7108      	strb	r0, [r1, #4]
 80035e8:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80035ec:	0a00      	lsrs	r0, r0, #8
 80035ee:	7148      	strb	r0, [r1, #5]
 80035f0:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80035f4:	0c00      	lsrs	r0, r0, #16
 80035f6:	7188      	strb	r0, [r1, #6]
 80035f8:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80035fc:	0e00      	lsrs	r0, r0, #24
 80035fe:	71c8      	strb	r0, [r1, #7]
 8003600:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8003604:	7208      	strb	r0, [r1, #8]
 8003606:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 800360a:	0a00      	lsrs	r0, r0, #8
 800360c:	7248      	strb	r0, [r1, #9]
 800360e:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8003612:	0c00      	lsrs	r0, r0, #16
 8003614:	7288      	strb	r0, [r1, #10]
 8003616:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 800361a:	f3c5 0540 	ubfx	r5, r5, #1, #1
 800361e:	0e1b      	lsrs	r3, r3, #24
 8003620:	738d      	strb	r5, [r1, #14]
 8003622:	72cb      	strb	r3, [r1, #11]
 8003624:	b94a      	cbnz	r2, 800363a <can_read+0x8c>
 8003626:	68e3      	ldr	r3, [r4, #12]
 8003628:	f043 0320 	orr.w	r3, r3, #32
 800362c:	60e3      	str	r3, [r4, #12]
 800362e:	2001      	movs	r0, #1
 8003630:	bd30      	pop	{r4, r5, pc}
 8003632:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003636:	08ed      	lsrs	r5, r5, #3
 8003638:	e7ca      	b.n	80035d0 <can_read+0x22>
 800363a:	6923      	ldr	r3, [r4, #16]
 800363c:	f043 0320 	orr.w	r3, r3, #32
 8003640:	6123      	str	r3, [r4, #16]
 8003642:	e7f4      	b.n	800362e <can_read+0x80>

08003644 <can_filter>:
 8003644:	b530      	push	{r4, r5, lr}
 8003646:	b08b      	sub	sp, #44	; 0x2c
 8003648:	2b01      	cmp	r3, #1
 800364a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800364c:	d82b      	bhi.n	80036a6 <can_filter+0x62>
 800364e:	6805      	ldr	r5, [r0, #0]
 8003650:	4816      	ldr	r0, [pc, #88]	; (80036ac <can_filter+0x68>)
 8003652:	9405      	str	r4, [sp, #20]
 8003654:	6005      	str	r5, [r0, #0]
 8003656:	2000      	movs	r0, #0
 8003658:	9006      	str	r0, [sp, #24]
 800365a:	2001      	movs	r0, #1
 800365c:	9007      	str	r0, [sp, #28]
 800365e:	b99b      	cbnz	r3, 8003688 <can_filter+0x44>
 8003660:	0149      	lsls	r1, r1, #5
 8003662:	e88d 000a 	stmia.w	sp, {r1, r3}
 8003666:	0152      	lsls	r2, r2, #5
 8003668:	9202      	str	r2, [sp, #8]
 800366a:	9303      	str	r3, [sp, #12]
 800366c:	2300      	movs	r3, #0
 800366e:	9304      	str	r3, [sp, #16]
 8003670:	2301      	movs	r3, #1
 8003672:	9308      	str	r3, [sp, #32]
 8003674:	4669      	mov	r1, sp
 8003676:	f104 030e 	add.w	r3, r4, #14
 800367a:	480c      	ldr	r0, [pc, #48]	; (80036ac <can_filter+0x68>)
 800367c:	9309      	str	r3, [sp, #36]	; 0x24
 800367e:	f001 f885 	bl	800478c <HAL_CAN_ConfigFilter>
 8003682:	4620      	mov	r0, r4
 8003684:	b00b      	add	sp, #44	; 0x2c
 8003686:	bd30      	pop	{r4, r5, pc}
 8003688:	0b4b      	lsrs	r3, r1, #13
 800368a:	9300      	str	r3, [sp, #0]
 800368c:	00c9      	lsls	r1, r1, #3
 800368e:	0b53      	lsrs	r3, r2, #13
 8003690:	00d2      	lsls	r2, r2, #3
 8003692:	b2c9      	uxtb	r1, r1
 8003694:	b2d2      	uxtb	r2, r2
 8003696:	f041 0104 	orr.w	r1, r1, #4
 800369a:	f042 0204 	orr.w	r2, r2, #4
 800369e:	9101      	str	r1, [sp, #4]
 80036a0:	9302      	str	r3, [sp, #8]
 80036a2:	9203      	str	r2, [sp, #12]
 80036a4:	e7e2      	b.n	800366c <can_filter+0x28>
 80036a6:	2000      	movs	r0, #0
 80036a8:	e7ec      	b.n	8003684 <can_filter+0x40>
 80036aa:	bf00      	nop
 80036ac:	2000124c 	.word	0x2000124c

080036b0 <can_init>:
 80036b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036b2:	460e      	mov	r6, r1
 80036b4:	b085      	sub	sp, #20
 80036b6:	4604      	mov	r4, r0
 80036b8:	492f      	ldr	r1, [pc, #188]	; (8003778 <can_init+0xc8>)
 80036ba:	4630      	mov	r0, r6
 80036bc:	4615      	mov	r5, r2
 80036be:	f7fe f98f 	bl	80019e0 <pinmap_peripheral>
 80036c2:	492e      	ldr	r1, [pc, #184]	; (800377c <can_init+0xcc>)
 80036c4:	4607      	mov	r7, r0
 80036c6:	4628      	mov	r0, r5
 80036c8:	f7fe f98a 	bl	80019e0 <pinmap_peripheral>
 80036cc:	4601      	mov	r1, r0
 80036ce:	4638      	mov	r0, r7
 80036d0:	f7fe f968 	bl	80019a4 <pinmap_merge>
 80036d4:	4b2a      	ldr	r3, [pc, #168]	; (8003780 <can_init+0xd0>)
 80036d6:	6020      	str	r0, [r4, #0]
 80036d8:	4298      	cmp	r0, r3
 80036da:	d14b      	bne.n	8003774 <can_init+0xc4>
 80036dc:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 80036e0:	4925      	ldr	r1, [pc, #148]	; (8003778 <can_init+0xc8>)
 80036e2:	69da      	ldr	r2, [r3, #28]
 80036e4:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80036e8:	61da      	str	r2, [r3, #28]
 80036ea:	69db      	ldr	r3, [r3, #28]
 80036ec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80036f0:	9303      	str	r3, [sp, #12]
 80036f2:	9b03      	ldr	r3, [sp, #12]
 80036f4:	2300      	movs	r3, #0
 80036f6:	6063      	str	r3, [r4, #4]
 80036f8:	4630      	mov	r0, r6
 80036fa:	f7fe f935 	bl	8001968 <pinmap_pinout>
 80036fe:	491f      	ldr	r1, [pc, #124]	; (800377c <can_init+0xcc>)
 8003700:	4628      	mov	r0, r5
 8003702:	f7fe f931 	bl	8001968 <pinmap_pinout>
 8003706:	1c72      	adds	r2, r6, #1
 8003708:	d003      	beq.n	8003712 <can_init+0x62>
 800370a:	2101      	movs	r1, #1
 800370c:	4630      	mov	r0, r6
 800370e:	f000 f95b 	bl	80039c8 <pin_mode>
 8003712:	1c6b      	adds	r3, r5, #1
 8003714:	d003      	beq.n	800371e <can_init+0x6e>
 8003716:	2101      	movs	r1, #1
 8003718:	4628      	mov	r0, r5
 800371a:	f000 f955 	bl	80039c8 <pin_mode>
 800371e:	4819      	ldr	r0, [pc, #100]	; (8003784 <can_init+0xd4>)
 8003720:	6823      	ldr	r3, [r4, #0]
 8003722:	6003      	str	r3, [r0, #0]
 8003724:	2300      	movs	r3, #0
 8003726:	6183      	str	r3, [r0, #24]
 8003728:	61c3      	str	r3, [r0, #28]
 800372a:	6203      	str	r3, [r0, #32]
 800372c:	6243      	str	r3, [r0, #36]	; 0x24
 800372e:	6283      	str	r3, [r0, #40]	; 0x28
 8003730:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003732:	6083      	str	r3, [r0, #8]
 8003734:	60c3      	str	r3, [r0, #12]
 8003736:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 800373a:	6103      	str	r3, [r0, #16]
 800373c:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 8003740:	6143      	str	r3, [r0, #20]
 8003742:	2302      	movs	r3, #2
 8003744:	6043      	str	r3, [r0, #4]
 8003746:	f001 f882 	bl	800484e <HAL_CAN_Init>
 800374a:	b110      	cbz	r0, 8003752 <can_init+0xa2>
 800374c:	480e      	ldr	r0, [pc, #56]	; (8003788 <can_init+0xd8>)
 800374e:	f7fe f987 	bl	8001a60 <error>
 8003752:	490e      	ldr	r1, [pc, #56]	; (800378c <can_init+0xdc>)
 8003754:	4620      	mov	r0, r4
 8003756:	f7ff fe93 	bl	8003480 <can_frequency>
 800375a:	4a09      	ldr	r2, [pc, #36]	; (8003780 <can_init+0xd0>)
 800375c:	6823      	ldr	r3, [r4, #0]
 800375e:	4293      	cmp	r3, r2
 8003760:	bf14      	ite	ne
 8003762:	230e      	movne	r3, #14
 8003764:	2300      	moveq	r3, #0
 8003766:	9300      	str	r3, [sp, #0]
 8003768:	2300      	movs	r3, #0
 800376a:	461a      	mov	r2, r3
 800376c:	4619      	mov	r1, r3
 800376e:	4620      	mov	r0, r4
 8003770:	f7ff ff68 	bl	8003644 <can_filter>
 8003774:	b005      	add	sp, #20
 8003776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003778:	08006f64 	.word	0x08006f64
 800377c:	08006f7c 	.word	0x08006f7c
 8003780:	40006400 	.word	0x40006400
 8003784:	2000124c 	.word	0x2000124c
 8003788:	08006e3d 	.word	0x08006e3d
 800378c:	000186a0 	.word	0x000186a0

08003790 <can_irq_set>:
 8003790:	4b19      	ldr	r3, [pc, #100]	; (80037f8 <can_irq_set+0x68>)
 8003792:	6800      	ldr	r0, [r0, #0]
 8003794:	4298      	cmp	r0, r3
 8003796:	b510      	push	{r4, lr}
 8003798:	4618      	mov	r0, r3
 800379a:	d116      	bne.n	80037ca <can_irq_set+0x3a>
 800379c:	2907      	cmp	r1, #7
 800379e:	d814      	bhi.n	80037ca <can_irq_set+0x3a>
 80037a0:	e8df f001 	tbb	[pc, r1]
 80037a4:	13181404 	.word	0x13181404
 80037a8:	21131d13 	.word	0x21131d13
 80037ac:	4913      	ldr	r1, [pc, #76]	; (80037fc <can_irq_set+0x6c>)
 80037ae:	2302      	movs	r3, #2
 80037b0:	2414      	movs	r4, #20
 80037b2:	b1e2      	cbz	r2, 80037ee <can_irq_set+0x5e>
 80037b4:	6942      	ldr	r2, [r0, #20]
 80037b6:	4313      	orrs	r3, r2
 80037b8:	6143      	str	r3, [r0, #20]
 80037ba:	4620      	mov	r0, r4
 80037bc:	f000 fbce 	bl	8003f5c <__NVIC_SetVector>
 80037c0:	2301      	movs	r3, #1
 80037c2:	fa03 f404 	lsl.w	r4, r3, r4
 80037c6:	4b0e      	ldr	r3, [pc, #56]	; (8003800 <can_irq_set+0x70>)
 80037c8:	601c      	str	r4, [r3, #0]
 80037ca:	bd10      	pop	{r4, pc}
 80037cc:	490d      	ldr	r1, [pc, #52]	; (8003804 <can_irq_set+0x74>)
 80037ce:	2301      	movs	r3, #1
 80037d0:	2413      	movs	r4, #19
 80037d2:	e7ee      	b.n	80037b2 <can_irq_set+0x22>
 80037d4:	490c      	ldr	r1, [pc, #48]	; (8003808 <can_irq_set+0x78>)
 80037d6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80037da:	2416      	movs	r4, #22
 80037dc:	e7e9      	b.n	80037b2 <can_irq_set+0x22>
 80037de:	490a      	ldr	r1, [pc, #40]	; (8003808 <can_irq_set+0x78>)
 80037e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80037e4:	e7f9      	b.n	80037da <can_irq_set+0x4a>
 80037e6:	4908      	ldr	r1, [pc, #32]	; (8003808 <can_irq_set+0x78>)
 80037e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80037ec:	e7f5      	b.n	80037da <can_irq_set+0x4a>
 80037ee:	6942      	ldr	r2, [r0, #20]
 80037f0:	ea22 0303 	bic.w	r3, r2, r3
 80037f4:	e7e0      	b.n	80037b8 <can_irq_set+0x28>
 80037f6:	bf00      	nop
 80037f8:	40006400 	.word	0x40006400
 80037fc:	0800341d 	.word	0x0800341d
 8003800:	e000e100 	.word	0xe000e100
 8003804:	08003419 	.word	0x08003419
 8003808:	08003319 	.word	0x08003319

0800380c <us_ticker_init>:
 800380c:	4b05      	ldr	r3, [pc, #20]	; (8003824 <us_ticker_init+0x18>)
 800380e:	6818      	ldr	r0, [r3, #0]
 8003810:	b938      	cbnz	r0, 8003822 <us_ticker_init+0x16>
 8003812:	2201      	movs	r2, #1
 8003814:	601a      	str	r2, [r3, #0]
 8003816:	4b04      	ldr	r3, [pc, #16]	; (8003828 <us_ticker_init+0x1c>)
 8003818:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800381c:	601a      	str	r2, [r3, #0]
 800381e:	f7ff bc49 	b.w	80030b4 <HAL_InitTick>
 8003822:	4770      	bx	lr
 8003824:	20001294 	.word	0x20001294
 8003828:	20001ea0 	.word	0x20001ea0

0800382c <us_ticker_read>:
 800382c:	b508      	push	{r3, lr}
 800382e:	4b04      	ldr	r3, [pc, #16]	; (8003840 <us_ticker_read+0x14>)
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	b90b      	cbnz	r3, 8003838 <us_ticker_read+0xc>
 8003834:	f7ff ffea 	bl	800380c <us_ticker_init>
 8003838:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800383c:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800383e:	bd08      	pop	{r3, pc}
 8003840:	20001294 	.word	0x20001294

08003844 <us_ticker_set_interrupt>:
 8003844:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003848:	4a03      	ldr	r2, [pc, #12]	; (8003858 <us_ticker_set_interrupt+0x14>)
 800384a:	6013      	str	r3, [r2, #0]
 800384c:	6358      	str	r0, [r3, #52]	; 0x34
 800384e:	68da      	ldr	r2, [r3, #12]
 8003850:	f042 0202 	orr.w	r2, r2, #2
 8003854:	60da      	str	r2, [r3, #12]
 8003856:	4770      	bx	lr
 8003858:	20001ea0 	.word	0x20001ea0

0800385c <us_ticker_disable_interrupt>:
 800385c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003860:	4a03      	ldr	r2, [pc, #12]	; (8003870 <us_ticker_disable_interrupt+0x14>)
 8003862:	6013      	str	r3, [r2, #0]
 8003864:	68da      	ldr	r2, [r3, #12]
 8003866:	f022 0202 	bic.w	r2, r2, #2
 800386a:	60da      	str	r2, [r3, #12]
 800386c:	4770      	bx	lr
 800386e:	bf00      	nop
 8003870:	20001ea0 	.word	0x20001ea0

08003874 <us_ticker_clear_interrupt>:
 8003874:	4a03      	ldr	r2, [pc, #12]	; (8003884 <us_ticker_clear_interrupt+0x10>)
 8003876:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800387a:	6013      	str	r3, [r2, #0]
 800387c:	f06f 0202 	mvn.w	r2, #2
 8003880:	611a      	str	r2, [r3, #16]
 8003882:	4770      	bx	lr
 8003884:	20001ea0 	.word	0x20001ea0

08003888 <LL_GPIO_SetPinPull>:
 8003888:	b530      	push	{r4, r5, lr}
 800388a:	68c3      	ldr	r3, [r0, #12]
 800388c:	fa91 f4a1 	rbit	r4, r1
 8003890:	fab4 f484 	clz	r4, r4
 8003894:	fa91 f1a1 	rbit	r1, r1
 8003898:	2503      	movs	r5, #3
 800389a:	fab1 f181 	clz	r1, r1
 800389e:	0064      	lsls	r4, r4, #1
 80038a0:	fa05 f404 	lsl.w	r4, r5, r4
 80038a4:	0049      	lsls	r1, r1, #1
 80038a6:	ea23 0304 	bic.w	r3, r3, r4
 80038aa:	fa02 f101 	lsl.w	r1, r2, r1
 80038ae:	4319      	orrs	r1, r3
 80038b0:	60c1      	str	r1, [r0, #12]
 80038b2:	bd30      	pop	{r4, r5, pc}

080038b4 <stm_pin_PullConfig>:
 80038b4:	2a01      	cmp	r2, #1
 80038b6:	d002      	beq.n	80038be <stm_pin_PullConfig+0xa>
 80038b8:	2a02      	cmp	r2, #2
 80038ba:	bf18      	it	ne
 80038bc:	2200      	movne	r2, #0
 80038be:	f7ff bfe3 	b.w	8003888 <LL_GPIO_SetPinPull>
	...

080038c4 <pin_function>:
 80038c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038c8:	4b3e      	ldr	r3, [pc, #248]	; (80039c4 <pin_function+0x100>)
 80038ca:	f000 080f 	and.w	r8, r0, #15
 80038ce:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80038d2:	460e      	mov	r6, r1
 80038d4:	f001 0507 	and.w	r5, r1, #7
 80038d8:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 80038dc:	f7ff fc60 	bl	80031a0 <Set_GPIO_Clock>
 80038e0:	6882      	ldr	r2, [r0, #8]
 80038e2:	fa94 f3a4 	rbit	r3, r4
 80038e6:	fab3 f383 	clz	r3, r3
 80038ea:	fa94 f1a4 	rbit	r1, r4
 80038ee:	2703      	movs	r7, #3
 80038f0:	005b      	lsls	r3, r3, #1
 80038f2:	fab1 f181 	clz	r1, r1
 80038f6:	fa07 f303 	lsl.w	r3, r7, r3
 80038fa:	ea22 0303 	bic.w	r3, r2, r3
 80038fe:	004a      	lsls	r2, r1, #1
 8003900:	fa07 f202 	lsl.w	r2, r7, r2
 8003904:	4313      	orrs	r3, r2
 8003906:	2d02      	cmp	r5, #2
 8003908:	6083      	str	r3, [r0, #8]
 800390a:	d028      	beq.n	800395e <pin_function+0x9a>
 800390c:	42bd      	cmp	r5, r7
 800390e:	d041      	beq.n	8003994 <pin_function+0xd0>
 8003910:	2d01      	cmp	r5, #1
 8003912:	d03f      	beq.n	8003994 <pin_function+0xd0>
 8003914:	2300      	movs	r3, #0
 8003916:	6802      	ldr	r2, [r0, #0]
 8003918:	fa94 f7a4 	rbit	r7, r4
 800391c:	fab7 f787 	clz	r7, r7
 8003920:	fa94 f1a4 	rbit	r1, r4
 8003924:	f04f 0e03 	mov.w	lr, #3
 8003928:	fab1 f181 	clz	r1, r1
 800392c:	007f      	lsls	r7, r7, #1
 800392e:	fa0e f707 	lsl.w	r7, lr, r7
 8003932:	0049      	lsls	r1, r1, #1
 8003934:	ea22 0207 	bic.w	r2, r2, r7
 8003938:	408b      	lsls	r3, r1
 800393a:	3d01      	subs	r5, #1
 800393c:	4313      	orrs	r3, r2
 800393e:	2d01      	cmp	r5, #1
 8003940:	6003      	str	r3, [r0, #0]
 8003942:	d805      	bhi.n	8003950 <pin_function+0x8c>
 8003944:	6843      	ldr	r3, [r0, #4]
 8003946:	0732      	lsls	r2, r6, #28
 8003948:	bf4c      	ite	mi
 800394a:	4323      	orrmi	r3, r4
 800394c:	43a3      	bicpl	r3, r4
 800394e:	6043      	str	r3, [r0, #4]
 8003950:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8003954:	4621      	mov	r1, r4
 8003956:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800395a:	f7ff bfab 	b.w	80038b4 <stm_pin_PullConfig>
 800395e:	f1b8 0f07 	cmp.w	r8, #7
 8003962:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003966:	d917      	bls.n	8003998 <pin_function+0xd4>
 8003968:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800396a:	0a23      	lsrs	r3, r4, #8
 800396c:	fa93 f1a3 	rbit	r1, r3
 8003970:	fab1 f181 	clz	r1, r1
 8003974:	fa93 f3a3 	rbit	r3, r3
 8003978:	f04f 0e0f 	mov.w	lr, #15
 800397c:	fab3 f383 	clz	r3, r3
 8003980:	0089      	lsls	r1, r1, #2
 8003982:	fa0e f101 	lsl.w	r1, lr, r1
 8003986:	009b      	lsls	r3, r3, #2
 8003988:	ea22 0201 	bic.w	r2, r2, r1
 800398c:	fa07 f303 	lsl.w	r3, r7, r3
 8003990:	4313      	orrs	r3, r2
 8003992:	6243      	str	r3, [r0, #36]	; 0x24
 8003994:	462b      	mov	r3, r5
 8003996:	e7be      	b.n	8003916 <pin_function+0x52>
 8003998:	6a02      	ldr	r2, [r0, #32]
 800399a:	fa94 f3a4 	rbit	r3, r4
 800399e:	fab3 f383 	clz	r3, r3
 80039a2:	fa94 f1a4 	rbit	r1, r4
 80039a6:	f04f 0e0f 	mov.w	lr, #15
 80039aa:	fab1 f181 	clz	r1, r1
 80039ae:	009b      	lsls	r3, r3, #2
 80039b0:	fa0e f303 	lsl.w	r3, lr, r3
 80039b4:	0089      	lsls	r1, r1, #2
 80039b6:	ea22 0203 	bic.w	r2, r2, r3
 80039ba:	fa07 f301 	lsl.w	r3, r7, r1
 80039be:	4313      	orrs	r3, r2
 80039c0:	6203      	str	r3, [r0, #32]
 80039c2:	e7e7      	b.n	8003994 <pin_function+0xd0>
 80039c4:	08006f0c 	.word	0x08006f0c

080039c8 <pin_mode>:
 80039c8:	f000 020f 	and.w	r2, r0, #15
 80039cc:	4b1c      	ldr	r3, [pc, #112]	; (8003a40 <pin_mode+0x78>)
 80039ce:	b570      	push	{r4, r5, r6, lr}
 80039d0:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80039d4:	460d      	mov	r5, r1
 80039d6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80039da:	f7ff fbe1 	bl	80031a0 <Set_GPIO_Clock>
 80039de:	6806      	ldr	r6, [r0, #0]
 80039e0:	fa94 f1a4 	rbit	r1, r4
 80039e4:	fab1 f381 	clz	r3, r1
 80039e8:	fa94 f2a4 	rbit	r2, r4
 80039ec:	0059      	lsls	r1, r3, #1
 80039ee:	2303      	movs	r3, #3
 80039f0:	fab2 f282 	clz	r2, r2
 80039f4:	408b      	lsls	r3, r1
 80039f6:	4033      	ands	r3, r6
 80039f8:	0052      	lsls	r2, r2, #1
 80039fa:	40d3      	lsrs	r3, r2
 80039fc:	3b01      	subs	r3, #1
 80039fe:	2b01      	cmp	r3, #1
 8003a00:	d805      	bhi.n	8003a0e <pin_mode+0x46>
 8003a02:	1eeb      	subs	r3, r5, #3
 8003a04:	2b02      	cmp	r3, #2
 8003a06:	6843      	ldr	r3, [r0, #4]
 8003a08:	d809      	bhi.n	8003a1e <pin_mode+0x56>
 8003a0a:	4323      	orrs	r3, r4
 8003a0c:	6043      	str	r3, [r0, #4]
 8003a0e:	2d03      	cmp	r5, #3
 8003a10:	d108      	bne.n	8003a24 <pin_mode+0x5c>
 8003a12:	2201      	movs	r2, #1
 8003a14:	4621      	mov	r1, r4
 8003a16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003a1a:	f7ff bf4b 	b.w	80038b4 <stm_pin_PullConfig>
 8003a1e:	ea23 0304 	bic.w	r3, r3, r4
 8003a22:	6043      	str	r3, [r0, #4]
 8003a24:	2d01      	cmp	r5, #1
 8003a26:	d0f4      	beq.n	8003a12 <pin_mode+0x4a>
 8003a28:	2d05      	cmp	r5, #5
 8003a2a:	d001      	beq.n	8003a30 <pin_mode+0x68>
 8003a2c:	2d02      	cmp	r5, #2
 8003a2e:	d101      	bne.n	8003a34 <pin_mode+0x6c>
 8003a30:	2202      	movs	r2, #2
 8003a32:	e7ef      	b.n	8003a14 <pin_mode+0x4c>
 8003a34:	4621      	mov	r1, r4
 8003a36:	2200      	movs	r2, #0
 8003a38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003a3c:	f7ff bf24 	b.w	8003888 <LL_GPIO_SetPinPull>
 8003a40:	08006f0c 	.word	0x08006f0c

08003a44 <init_uart>:
 8003a44:	6843      	ldr	r3, [r0, #4]
 8003a46:	4918      	ldr	r1, [pc, #96]	; (8003aa8 <init_uart+0x64>)
 8003a48:	2270      	movs	r2, #112	; 0x70
 8003a4a:	435a      	muls	r2, r3
 8003a4c:	b510      	push	{r4, lr}
 8003a4e:	188b      	adds	r3, r1, r2
 8003a50:	6804      	ldr	r4, [r0, #0]
 8003a52:	508c      	str	r4, [r1, r2]
 8003a54:	6882      	ldr	r2, [r0, #8]
 8003a56:	605a      	str	r2, [r3, #4]
 8003a58:	68c2      	ldr	r2, [r0, #12]
 8003a5a:	609a      	str	r2, [r3, #8]
 8003a5c:	6902      	ldr	r2, [r0, #16]
 8003a5e:	60da      	str	r2, [r3, #12]
 8003a60:	6942      	ldr	r2, [r0, #20]
 8003a62:	611a      	str	r2, [r3, #16]
 8003a64:	69c2      	ldr	r2, [r0, #28]
 8003a66:	619a      	str	r2, [r3, #24]
 8003a68:	2200      	movs	r2, #0
 8003a6a:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003a6e:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8003a72:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8003a76:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8003a7a:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003a7e:	3201      	adds	r2, #1
 8003a80:	d10a      	bne.n	8003a98 <init_uart+0x54>
 8003a82:	2208      	movs	r2, #8
 8003a84:	615a      	str	r2, [r3, #20]
 8003a86:	4618      	mov	r0, r3
 8003a88:	f001 f96b 	bl	8004d62 <HAL_UART_Init>
 8003a8c:	b158      	cbz	r0, 8003aa6 <init_uart+0x62>
 8003a8e:	4807      	ldr	r0, [pc, #28]	; (8003aac <init_uart+0x68>)
 8003a90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a94:	f7fd bfe4 	b.w	8001a60 <error>
 8003a98:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003a9c:	3201      	adds	r2, #1
 8003a9e:	bf0c      	ite	eq
 8003aa0:	2204      	moveq	r2, #4
 8003aa2:	220c      	movne	r2, #12
 8003aa4:	e7ee      	b.n	8003a84 <init_uart+0x40>
 8003aa6:	bd10      	pop	{r4, pc}
 8003aa8:	200012b4 	.word	0x200012b4
 8003aac:	08006f4c 	.word	0x08006f4c

08003ab0 <uart_irq>:
 8003ab0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003ab2:	4f1c      	ldr	r7, [pc, #112]	; (8003b24 <uart_irq+0x74>)
 8003ab4:	4605      	mov	r5, r0
 8003ab6:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8003aba:	2800      	cmp	r0, #0
 8003abc:	d02f      	beq.n	8003b1e <uart_irq+0x6e>
 8003abe:	2670      	movs	r6, #112	; 0x70
 8003ac0:	4c19      	ldr	r4, [pc, #100]	; (8003b28 <uart_irq+0x78>)
 8003ac2:	436e      	muls	r6, r5
 8003ac4:	59a3      	ldr	r3, [r4, r6]
 8003ac6:	69da      	ldr	r2, [r3, #28]
 8003ac8:	0652      	lsls	r2, r2, #25
 8003aca:	d509      	bpl.n	8003ae0 <uart_irq+0x30>
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	0659      	lsls	r1, r3, #25
 8003ad0:	d506      	bpl.n	8003ae0 <uart_irq+0x30>
 8003ad2:	4b16      	ldr	r3, [pc, #88]	; (8003b2c <uart_irq+0x7c>)
 8003ad4:	2101      	movs	r1, #1
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	4798      	blx	r3
 8003ada:	59a3      	ldr	r3, [r4, r6]
 8003adc:	2240      	movs	r2, #64	; 0x40
 8003ade:	621a      	str	r2, [r3, #32]
 8003ae0:	2670      	movs	r6, #112	; 0x70
 8003ae2:	436e      	muls	r6, r5
 8003ae4:	59a3      	ldr	r3, [r4, r6]
 8003ae6:	69da      	ldr	r2, [r3, #28]
 8003ae8:	0692      	lsls	r2, r2, #26
 8003aea:	d50d      	bpl.n	8003b08 <uart_irq+0x58>
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	0698      	lsls	r0, r3, #26
 8003af0:	d50a      	bpl.n	8003b08 <uart_irq+0x58>
 8003af2:	4b0e      	ldr	r3, [pc, #56]	; (8003b2c <uart_irq+0x7c>)
 8003af4:	f857 0025 	ldr.w	r0, [r7, r5, lsl #2]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	2100      	movs	r1, #0
 8003afc:	4798      	blx	r3
 8003afe:	59a3      	ldr	r3, [r4, r6]
 8003b00:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003b02:	b29b      	uxth	r3, r3
 8003b04:	9301      	str	r3, [sp, #4]
 8003b06:	9b01      	ldr	r3, [sp, #4]
 8003b08:	2370      	movs	r3, #112	; 0x70
 8003b0a:	435d      	muls	r5, r3
 8003b0c:	5963      	ldr	r3, [r4, r5]
 8003b0e:	69da      	ldr	r2, [r3, #28]
 8003b10:	0711      	lsls	r1, r2, #28
 8003b12:	d504      	bpl.n	8003b1e <uart_irq+0x6e>
 8003b14:	689a      	ldr	r2, [r3, #8]
 8003b16:	07d2      	lsls	r2, r2, #31
 8003b18:	bf44      	itt	mi
 8003b1a:	2208      	movmi	r2, #8
 8003b1c:	621a      	strmi	r2, [r3, #32]
 8003b1e:	b003      	add	sp, #12
 8003b20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b22:	bf00      	nop
 8003b24:	2000129c 	.word	0x2000129c
 8003b28:	200012b4 	.word	0x200012b4
 8003b2c:	20001298 	.word	0x20001298

08003b30 <uart1_irq>:
 8003b30:	2000      	movs	r0, #0
 8003b32:	f7ff bfbd 	b.w	8003ab0 <uart_irq>

08003b36 <uart2_irq>:
 8003b36:	2001      	movs	r0, #1
 8003b38:	f7ff bfba 	b.w	8003ab0 <uart_irq>

08003b3c <uart3_irq>:
 8003b3c:	2002      	movs	r0, #2
 8003b3e:	f7ff bfb7 	b.w	8003ab0 <uart_irq>
	...

08003b44 <serial_init>:
 8003b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b46:	460e      	mov	r6, r1
 8003b48:	b085      	sub	sp, #20
 8003b4a:	4604      	mov	r4, r0
 8003b4c:	4949      	ldr	r1, [pc, #292]	; (8003c74 <serial_init+0x130>)
 8003b4e:	4630      	mov	r0, r6
 8003b50:	4615      	mov	r5, r2
 8003b52:	f7fd ff45 	bl	80019e0 <pinmap_peripheral>
 8003b56:	4948      	ldr	r1, [pc, #288]	; (8003c78 <serial_init+0x134>)
 8003b58:	4607      	mov	r7, r0
 8003b5a:	4628      	mov	r0, r5
 8003b5c:	f7fd ff40 	bl	80019e0 <pinmap_peripheral>
 8003b60:	4601      	mov	r1, r0
 8003b62:	4638      	mov	r0, r7
 8003b64:	f7fd ff1e 	bl	80019a4 <pinmap_merge>
 8003b68:	4b44      	ldr	r3, [pc, #272]	; (8003c7c <serial_init+0x138>)
 8003b6a:	6020      	str	r0, [r4, #0]
 8003b6c:	4298      	cmp	r0, r3
 8003b6e:	d151      	bne.n	8003c14 <serial_init+0xd0>
 8003b70:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8003b74:	68da      	ldr	r2, [r3, #12]
 8003b76:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003b7a:	60da      	str	r2, [r3, #12]
 8003b7c:	68da      	ldr	r2, [r3, #12]
 8003b7e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003b82:	60da      	str	r2, [r3, #12]
 8003b84:	699a      	ldr	r2, [r3, #24]
 8003b86:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003b8a:	619a      	str	r2, [r3, #24]
 8003b8c:	699a      	ldr	r2, [r3, #24]
 8003b8e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003b92:	9201      	str	r2, [sp, #4]
 8003b94:	9a01      	ldr	r2, [sp, #4]
 8003b96:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003b98:	f022 0203 	bic.w	r2, r2, #3
 8003b9c:	f042 0201 	orr.w	r2, r2, #1
 8003ba0:	631a      	str	r2, [r3, #48]	; 0x30
 8003ba2:	2300      	movs	r3, #0
 8003ba4:	6063      	str	r3, [r4, #4]
 8003ba6:	4933      	ldr	r1, [pc, #204]	; (8003c74 <serial_init+0x130>)
 8003ba8:	4630      	mov	r0, r6
 8003baa:	f7fd fedd 	bl	8001968 <pinmap_pinout>
 8003bae:	4932      	ldr	r1, [pc, #200]	; (8003c78 <serial_init+0x134>)
 8003bb0:	4628      	mov	r0, r5
 8003bb2:	f7fd fed9 	bl	8001968 <pinmap_pinout>
 8003bb6:	1c72      	adds	r2, r6, #1
 8003bb8:	d003      	beq.n	8003bc2 <serial_init+0x7e>
 8003bba:	2101      	movs	r1, #1
 8003bbc:	4630      	mov	r0, r6
 8003bbe:	f7ff ff03 	bl	80039c8 <pin_mode>
 8003bc2:	1c6b      	adds	r3, r5, #1
 8003bc4:	d003      	beq.n	8003bce <serial_init+0x8a>
 8003bc6:	2101      	movs	r1, #1
 8003bc8:	4628      	mov	r0, r5
 8003bca:	f7ff fefd 	bl	80039c8 <pin_mode>
 8003bce:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003bd2:	60a3      	str	r3, [r4, #8]
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	60e3      	str	r3, [r4, #12]
 8003bd8:	6123      	str	r3, [r4, #16]
 8003bda:	6163      	str	r3, [r4, #20]
 8003bdc:	61e3      	str	r3, [r4, #28]
 8003bde:	8326      	strh	r6, [r4, #24]
 8003be0:	8365      	strh	r5, [r4, #26]
 8003be2:	4620      	mov	r0, r4
 8003be4:	f7ff ff2e 	bl	8003a44 <init_uart>
 8003be8:	6822      	ldr	r2, [r4, #0]
 8003bea:	4b25      	ldr	r3, [pc, #148]	; (8003c80 <serial_init+0x13c>)
 8003bec:	429a      	cmp	r2, r3
 8003bee:	d10f      	bne.n	8003c10 <serial_init+0xcc>
 8003bf0:	4b24      	ldr	r3, [pc, #144]	; (8003c84 <serial_init+0x140>)
 8003bf2:	2201      	movs	r2, #1
 8003bf4:	601a      	str	r2, [r3, #0]
 8003bf6:	4b24      	ldr	r3, [pc, #144]	; (8003c88 <serial_init+0x144>)
 8003bf8:	f104 0520 	add.w	r5, r4, #32
 8003bfc:	6820      	ldr	r0, [r4, #0]
 8003bfe:	6861      	ldr	r1, [r4, #4]
 8003c00:	461a      	mov	r2, r3
 8003c02:	c203      	stmia	r2!, {r0, r1}
 8003c04:	3408      	adds	r4, #8
 8003c06:	42ac      	cmp	r4, r5
 8003c08:	4613      	mov	r3, r2
 8003c0a:	d1f7      	bne.n	8003bfc <serial_init+0xb8>
 8003c0c:	6820      	ldr	r0, [r4, #0]
 8003c0e:	6010      	str	r0, [r2, #0]
 8003c10:	b005      	add	sp, #20
 8003c12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c14:	4b1a      	ldr	r3, [pc, #104]	; (8003c80 <serial_init+0x13c>)
 8003c16:	4298      	cmp	r0, r3
 8003c18:	d114      	bne.n	8003c44 <serial_init+0x100>
 8003c1a:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8003c1e:	691a      	ldr	r2, [r3, #16]
 8003c20:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003c24:	611a      	str	r2, [r3, #16]
 8003c26:	691a      	ldr	r2, [r3, #16]
 8003c28:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003c2c:	611a      	str	r2, [r3, #16]
 8003c2e:	69da      	ldr	r2, [r3, #28]
 8003c30:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003c34:	61da      	str	r2, [r3, #28]
 8003c36:	69db      	ldr	r3, [r3, #28]
 8003c38:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003c3c:	9302      	str	r3, [sp, #8]
 8003c3e:	9b02      	ldr	r3, [sp, #8]
 8003c40:	2301      	movs	r3, #1
 8003c42:	e7af      	b.n	8003ba4 <serial_init+0x60>
 8003c44:	4b11      	ldr	r3, [pc, #68]	; (8003c8c <serial_init+0x148>)
 8003c46:	4298      	cmp	r0, r3
 8003c48:	d1ad      	bne.n	8003ba6 <serial_init+0x62>
 8003c4a:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8003c4e:	691a      	ldr	r2, [r3, #16]
 8003c50:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003c54:	611a      	str	r2, [r3, #16]
 8003c56:	691a      	ldr	r2, [r3, #16]
 8003c58:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003c5c:	611a      	str	r2, [r3, #16]
 8003c5e:	69da      	ldr	r2, [r3, #28]
 8003c60:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003c64:	61da      	str	r2, [r3, #28]
 8003c66:	69db      	ldr	r3, [r3, #28]
 8003c68:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003c6c:	9303      	str	r3, [sp, #12]
 8003c6e:	9b03      	ldr	r3, [sp, #12]
 8003c70:	2302      	movs	r3, #2
 8003c72:	e797      	b.n	8003ba4 <serial_init+0x60>
 8003c74:	08006fdc 	.word	0x08006fdc
 8003c78:	08006f94 	.word	0x08006f94
 8003c7c:	40013800 	.word	0x40013800
 8003c80:	40004400 	.word	0x40004400
 8003c84:	200012b0 	.word	0x200012b0
 8003c88:	20001ee0 	.word	0x20001ee0
 8003c8c:	40004800 	.word	0x40004800

08003c90 <serial_baud>:
 8003c90:	6081      	str	r1, [r0, #8]
 8003c92:	f7ff bed7 	b.w	8003a44 <init_uart>
	...

08003c98 <serial_irq_handler>:
 8003c98:	4b03      	ldr	r3, [pc, #12]	; (8003ca8 <serial_irq_handler+0x10>)
 8003c9a:	6019      	str	r1, [r3, #0]
 8003c9c:	6841      	ldr	r1, [r0, #4]
 8003c9e:	4b03      	ldr	r3, [pc, #12]	; (8003cac <serial_irq_handler+0x14>)
 8003ca0:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003ca4:	4770      	bx	lr
 8003ca6:	bf00      	nop
 8003ca8:	20001298 	.word	0x20001298
 8003cac:	2000129c 	.word	0x2000129c

08003cb0 <serial_irq_set>:
 8003cb0:	b570      	push	{r4, r5, r6, lr}
 8003cb2:	e890 0028 	ldmia.w	r0, {r3, r5}
 8003cb6:	460e      	mov	r6, r1
 8003cb8:	4925      	ldr	r1, [pc, #148]	; (8003d50 <serial_irq_set+0xa0>)
 8003cba:	428b      	cmp	r3, r1
 8003cbc:	d118      	bne.n	8003cf0 <serial_irq_set+0x40>
 8003cbe:	4925      	ldr	r1, [pc, #148]	; (8003d54 <serial_irq_set+0xa4>)
 8003cc0:	2425      	movs	r4, #37	; 0x25
 8003cc2:	2370      	movs	r3, #112	; 0x70
 8003cc4:	4824      	ldr	r0, [pc, #144]	; (8003d58 <serial_irq_set+0xa8>)
 8003cc6:	436b      	muls	r3, r5
 8003cc8:	b31a      	cbz	r2, 8003d12 <serial_irq_set+0x62>
 8003cca:	58c2      	ldr	r2, [r0, r3]
 8003ccc:	6813      	ldr	r3, [r2, #0]
 8003cce:	b9ee      	cbnz	r6, 8003d0c <serial_irq_set+0x5c>
 8003cd0:	f043 0320 	orr.w	r3, r3, #32
 8003cd4:	6013      	str	r3, [r2, #0]
 8003cd6:	4620      	mov	r0, r4
 8003cd8:	f000 f940 	bl	8003f5c <__NVIC_SetVector>
 8003cdc:	0962      	lsrs	r2, r4, #5
 8003cde:	2301      	movs	r3, #1
 8003ce0:	f004 0407 	and.w	r4, r4, #7
 8003ce4:	fa03 f404 	lsl.w	r4, r3, r4
 8003ce8:	4b1c      	ldr	r3, [pc, #112]	; (8003d5c <serial_irq_set+0xac>)
 8003cea:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003cee:	bd70      	pop	{r4, r5, r6, pc}
 8003cf0:	491b      	ldr	r1, [pc, #108]	; (8003d60 <serial_irq_set+0xb0>)
 8003cf2:	428b      	cmp	r3, r1
 8003cf4:	d102      	bne.n	8003cfc <serial_irq_set+0x4c>
 8003cf6:	491b      	ldr	r1, [pc, #108]	; (8003d64 <serial_irq_set+0xb4>)
 8003cf8:	2426      	movs	r4, #38	; 0x26
 8003cfa:	e7e2      	b.n	8003cc2 <serial_irq_set+0x12>
 8003cfc:	491a      	ldr	r1, [pc, #104]	; (8003d68 <serial_irq_set+0xb8>)
 8003cfe:	428b      	cmp	r3, r1
 8003d00:	bf13      	iteet	ne
 8003d02:	2100      	movne	r1, #0
 8003d04:	4919      	ldreq	r1, [pc, #100]	; (8003d6c <serial_irq_set+0xbc>)
 8003d06:	2427      	moveq	r4, #39	; 0x27
 8003d08:	460c      	movne	r4, r1
 8003d0a:	e7da      	b.n	8003cc2 <serial_irq_set+0x12>
 8003d0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003d10:	e7e0      	b.n	8003cd4 <serial_irq_set+0x24>
 8003d12:	58c3      	ldr	r3, [r0, r3]
 8003d14:	681a      	ldr	r2, [r3, #0]
 8003d16:	b936      	cbnz	r6, 8003d26 <serial_irq_set+0x76>
 8003d18:	f022 0220 	bic.w	r2, r2, #32
 8003d1c:	601a      	str	r2, [r3, #0]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	061a      	lsls	r2, r3, #24
 8003d22:	d506      	bpl.n	8003d32 <serial_irq_set+0x82>
 8003d24:	bd70      	pop	{r4, r5, r6, pc}
 8003d26:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003d2a:	601a      	str	r2, [r3, #0]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	069b      	lsls	r3, r3, #26
 8003d30:	d40d      	bmi.n	8003d4e <serial_irq_set+0x9e>
 8003d32:	0963      	lsrs	r3, r4, #5
 8003d34:	2201      	movs	r2, #1
 8003d36:	f004 0407 	and.w	r4, r4, #7
 8003d3a:	fa02 f404 	lsl.w	r4, r2, r4
 8003d3e:	3320      	adds	r3, #32
 8003d40:	4a06      	ldr	r2, [pc, #24]	; (8003d5c <serial_irq_set+0xac>)
 8003d42:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8003d46:	f3bf 8f4f 	dsb	sy
 8003d4a:	f3bf 8f6f 	isb	sy
 8003d4e:	bd70      	pop	{r4, r5, r6, pc}
 8003d50:	40013800 	.word	0x40013800
 8003d54:	08003b31 	.word	0x08003b31
 8003d58:	200012b4 	.word	0x200012b4
 8003d5c:	e000e100 	.word	0xe000e100
 8003d60:	40004400 	.word	0x40004400
 8003d64:	08003b37 	.word	0x08003b37
 8003d68:	40004800 	.word	0x40004800
 8003d6c:	08003b3d 	.word	0x08003b3d

08003d70 <serial_readable>:
 8003d70:	6842      	ldr	r2, [r0, #4]
 8003d72:	2370      	movs	r3, #112	; 0x70
 8003d74:	4353      	muls	r3, r2
 8003d76:	4a03      	ldr	r2, [pc, #12]	; (8003d84 <serial_readable+0x14>)
 8003d78:	58d3      	ldr	r3, [r2, r3]
 8003d7a:	69d8      	ldr	r0, [r3, #28]
 8003d7c:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003d80:	4770      	bx	lr
 8003d82:	bf00      	nop
 8003d84:	200012b4 	.word	0x200012b4

08003d88 <serial_getc>:
 8003d88:	b510      	push	{r4, lr}
 8003d8a:	6844      	ldr	r4, [r0, #4]
 8003d8c:	4601      	mov	r1, r0
 8003d8e:	4608      	mov	r0, r1
 8003d90:	f7ff ffee 	bl	8003d70 <serial_readable>
 8003d94:	2800      	cmp	r0, #0
 8003d96:	d0fa      	beq.n	8003d8e <serial_getc+0x6>
 8003d98:	2370      	movs	r3, #112	; 0x70
 8003d9a:	4a05      	ldr	r2, [pc, #20]	; (8003db0 <serial_getc+0x28>)
 8003d9c:	68c9      	ldr	r1, [r1, #12]
 8003d9e:	4363      	muls	r3, r4
 8003da0:	58d3      	ldr	r3, [r2, r3]
 8003da2:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 8003da4:	b909      	cbnz	r1, 8003daa <serial_getc+0x22>
 8003da6:	b2c0      	uxtb	r0, r0
 8003da8:	bd10      	pop	{r4, pc}
 8003daa:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003dae:	bd10      	pop	{r4, pc}
 8003db0:	200012b4 	.word	0x200012b4

08003db4 <serial_writable>:
 8003db4:	6842      	ldr	r2, [r0, #4]
 8003db6:	2370      	movs	r3, #112	; 0x70
 8003db8:	4353      	muls	r3, r2
 8003dba:	4a03      	ldr	r2, [pc, #12]	; (8003dc8 <serial_writable+0x14>)
 8003dbc:	58d3      	ldr	r3, [r2, r3]
 8003dbe:	69d8      	ldr	r0, [r3, #28]
 8003dc0:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003dc4:	4770      	bx	lr
 8003dc6:	bf00      	nop
 8003dc8:	200012b4 	.word	0x200012b4

08003dcc <serial_putc>:
 8003dcc:	b538      	push	{r3, r4, r5, lr}
 8003dce:	6845      	ldr	r5, [r0, #4]
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	4620      	mov	r0, r4
 8003dd4:	f7ff ffee 	bl	8003db4 <serial_writable>
 8003dd8:	2800      	cmp	r0, #0
 8003dda:	d0fa      	beq.n	8003dd2 <serial_putc+0x6>
 8003ddc:	2370      	movs	r3, #112	; 0x70
 8003dde:	4a05      	ldr	r2, [pc, #20]	; (8003df4 <serial_putc+0x28>)
 8003de0:	68e0      	ldr	r0, [r4, #12]
 8003de2:	436b      	muls	r3, r5
 8003de4:	58d3      	ldr	r3, [r2, r3]
 8003de6:	b910      	cbnz	r0, 8003dee <serial_putc+0x22>
 8003de8:	b2c9      	uxtb	r1, r1
 8003dea:	8519      	strh	r1, [r3, #40]	; 0x28
 8003dec:	bd38      	pop	{r3, r4, r5, pc}
 8003dee:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003df2:	e7fa      	b.n	8003dea <serial_putc+0x1e>
 8003df4:	200012b4 	.word	0x200012b4

08003df8 <mbed_sdk_init>:
 8003df8:	b508      	push	{r3, lr}
 8003dfa:	f000 f805 	bl	8003e08 <SystemCoreClockUpdate>
 8003dfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003e02:	f000 bc91 	b.w	8004728 <HAL_Init>
	...

08003e08 <SystemCoreClockUpdate>:
 8003e08:	4a14      	ldr	r2, [pc, #80]	; (8003e5c <SystemCoreClockUpdate+0x54>)
 8003e0a:	4915      	ldr	r1, [pc, #84]	; (8003e60 <SystemCoreClockUpdate+0x58>)
 8003e0c:	6853      	ldr	r3, [r2, #4]
 8003e0e:	f003 030c 	and.w	r3, r3, #12
 8003e12:	2b04      	cmp	r3, #4
 8003e14:	b510      	push	{r4, lr}
 8003e16:	d001      	beq.n	8003e1c <SystemCoreClockUpdate+0x14>
 8003e18:	2b08      	cmp	r3, #8
 8003e1a:	d00a      	beq.n	8003e32 <SystemCoreClockUpdate+0x2a>
 8003e1c:	4b11      	ldr	r3, [pc, #68]	; (8003e64 <SystemCoreClockUpdate+0x5c>)
 8003e1e:	600b      	str	r3, [r1, #0]
 8003e20:	6853      	ldr	r3, [r2, #4]
 8003e22:	4a11      	ldr	r2, [pc, #68]	; (8003e68 <SystemCoreClockUpdate+0x60>)
 8003e24:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003e28:	5cd2      	ldrb	r2, [r2, r3]
 8003e2a:	680b      	ldr	r3, [r1, #0]
 8003e2c:	40d3      	lsrs	r3, r2
 8003e2e:	600b      	str	r3, [r1, #0]
 8003e30:	bd10      	pop	{r4, pc}
 8003e32:	6853      	ldr	r3, [r2, #4]
 8003e34:	6850      	ldr	r0, [r2, #4]
 8003e36:	03c0      	lsls	r0, r0, #15
 8003e38:	bf49      	itett	mi
 8003e3a:	6ad0      	ldrmi	r0, [r2, #44]	; 0x2c
 8003e3c:	480b      	ldrpl	r0, [pc, #44]	; (8003e6c <SystemCoreClockUpdate+0x64>)
 8003e3e:	4c09      	ldrmi	r4, [pc, #36]	; (8003e64 <SystemCoreClockUpdate+0x5c>)
 8003e40:	f000 000f 	andmi.w	r0, r0, #15
 8003e44:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003e48:	bf48      	it	mi
 8003e4a:	3001      	addmi	r0, #1
 8003e4c:	f103 0302 	add.w	r3, r3, #2
 8003e50:	bf48      	it	mi
 8003e52:	fbb4 f0f0 	udivmi	r0, r4, r0
 8003e56:	4343      	muls	r3, r0
 8003e58:	e7e1      	b.n	8003e1e <SystemCoreClockUpdate+0x16>
 8003e5a:	bf00      	nop
 8003e5c:	40021000 	.word	0x40021000
 8003e60:	200001a4 	.word	0x200001a4
 8003e64:	007a1200 	.word	0x007a1200
 8003e68:	08007024 	.word	0x08007024
 8003e6c:	003d0900 	.word	0x003d0900

08003e70 <SetSysClock_PLL_HSI>:
 8003e70:	b530      	push	{r4, r5, lr}
 8003e72:	b091      	sub	sp, #68	; 0x44
 8003e74:	2303      	movs	r3, #3
 8003e76:	9306      	str	r3, [sp, #24]
 8003e78:	2301      	movs	r3, #1
 8003e7a:	930a      	str	r3, [sp, #40]	; 0x28
 8003e7c:	2310      	movs	r3, #16
 8003e7e:	2400      	movs	r4, #0
 8003e80:	930b      	str	r3, [sp, #44]	; 0x2c
 8003e82:	2502      	movs	r5, #2
 8003e84:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8003e88:	a806      	add	r0, sp, #24
 8003e8a:	9407      	str	r4, [sp, #28]
 8003e8c:	950d      	str	r5, [sp, #52]	; 0x34
 8003e8e:	940e      	str	r4, [sp, #56]	; 0x38
 8003e90:	930f      	str	r3, [sp, #60]	; 0x3c
 8003e92:	f000 f893 	bl	8003fbc <HAL_RCC_OscConfig>
 8003e96:	b980      	cbnz	r0, 8003eba <SetSysClock_PLL_HSI+0x4a>
 8003e98:	230f      	movs	r3, #15
 8003e9a:	9301      	str	r3, [sp, #4]
 8003e9c:	9003      	str	r0, [sp, #12]
 8003e9e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003ea2:	9005      	str	r0, [sp, #20]
 8003ea4:	4629      	mov	r1, r5
 8003ea6:	a801      	add	r0, sp, #4
 8003ea8:	9502      	str	r5, [sp, #8]
 8003eaa:	9304      	str	r3, [sp, #16]
 8003eac:	f000 fb2a 	bl	8004504 <HAL_RCC_ClockConfig>
 8003eb0:	fab0 f080 	clz	r0, r0
 8003eb4:	0940      	lsrs	r0, r0, #5
 8003eb6:	b011      	add	sp, #68	; 0x44
 8003eb8:	bd30      	pop	{r4, r5, pc}
 8003eba:	4620      	mov	r0, r4
 8003ebc:	e7fb      	b.n	8003eb6 <SetSysClock_PLL_HSI+0x46>

08003ebe <SetSysClock>:
 8003ebe:	b508      	push	{r3, lr}
 8003ec0:	f7ff ffd6 	bl	8003e70 <SetSysClock_PLL_HSI>
 8003ec4:	b900      	cbnz	r0, 8003ec8 <SetSysClock+0xa>
 8003ec6:	e7fe      	b.n	8003ec6 <SetSysClock+0x8>
 8003ec8:	bd08      	pop	{r3, pc}
	...

08003ecc <SystemInit>:
 8003ecc:	4a1d      	ldr	r2, [pc, #116]	; (8003f44 <SystemInit+0x78>)
 8003ece:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003ed2:	b510      	push	{r4, lr}
 8003ed4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003ed8:	4c1b      	ldr	r4, [pc, #108]	; (8003f48 <SystemInit+0x7c>)
 8003eda:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003ede:	6823      	ldr	r3, [r4, #0]
 8003ee0:	f043 0301 	orr.w	r3, r3, #1
 8003ee4:	6023      	str	r3, [r4, #0]
 8003ee6:	6861      	ldr	r1, [r4, #4]
 8003ee8:	4b18      	ldr	r3, [pc, #96]	; (8003f4c <SystemInit+0x80>)
 8003eea:	400b      	ands	r3, r1
 8003eec:	6063      	str	r3, [r4, #4]
 8003eee:	6823      	ldr	r3, [r4, #0]
 8003ef0:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003ef4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003ef8:	6023      	str	r3, [r4, #0]
 8003efa:	6823      	ldr	r3, [r4, #0]
 8003efc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003f00:	6023      	str	r3, [r4, #0]
 8003f02:	6863      	ldr	r3, [r4, #4]
 8003f04:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8003f08:	6063      	str	r3, [r4, #4]
 8003f0a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003f0c:	f023 030f 	bic.w	r3, r3, #15
 8003f10:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f12:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003f14:	4b0e      	ldr	r3, [pc, #56]	; (8003f50 <SystemInit+0x84>)
 8003f16:	400b      	ands	r3, r1
 8003f18:	6323      	str	r3, [r4, #48]	; 0x30
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	60a3      	str	r3, [r4, #8]
 8003f1e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003f22:	6093      	str	r3, [r2, #8]
 8003f24:	4b0b      	ldr	r3, [pc, #44]	; (8003f54 <SystemInit+0x88>)
 8003f26:	4a0c      	ldr	r2, [pc, #48]	; (8003f58 <SystemInit+0x8c>)
 8003f28:	601a      	str	r2, [r3, #0]
 8003f2a:	f000 fbfd 	bl	8004728 <HAL_Init>
 8003f2e:	f7ff ffc6 	bl	8003ebe <SetSysClock>
 8003f32:	6923      	ldr	r3, [r4, #16]
 8003f34:	f043 0301 	orr.w	r3, r3, #1
 8003f38:	6123      	str	r3, [r4, #16]
 8003f3a:	6923      	ldr	r3, [r4, #16]
 8003f3c:	f023 0301 	bic.w	r3, r3, #1
 8003f40:	6123      	str	r3, [r4, #16]
 8003f42:	bd10      	pop	{r4, pc}
 8003f44:	e000ed00 	.word	0xe000ed00
 8003f48:	40021000 	.word	0x40021000
 8003f4c:	f87fc00c 	.word	0xf87fc00c
 8003f50:	ff00fccc 	.word	0xff00fccc
 8003f54:	200001a4 	.word	0x200001a4
 8003f58:	007a1200 	.word	0x007a1200

08003f5c <__NVIC_SetVector>:
 8003f5c:	b530      	push	{r4, r5, lr}
 8003f5e:	4c0c      	ldr	r4, [pc, #48]	; (8003f90 <__NVIC_SetVector+0x34>)
 8003f60:	68a2      	ldr	r2, [r4, #8]
 8003f62:	68a4      	ldr	r4, [r4, #8]
 8003f64:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003f68:	4613      	mov	r3, r2
 8003f6a:	d10c      	bne.n	8003f86 <__NVIC_SetVector+0x2a>
 8003f6c:	1f13      	subs	r3, r2, #4
 8003f6e:	4c09      	ldr	r4, [pc, #36]	; (8003f94 <__NVIC_SetVector+0x38>)
 8003f70:	4a09      	ldr	r2, [pc, #36]	; (8003f98 <__NVIC_SetVector+0x3c>)
 8003f72:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003f76:	f842 5f04 	str.w	r5, [r2, #4]!
 8003f7a:	42a2      	cmp	r2, r4
 8003f7c:	d1f9      	bne.n	8003f72 <__NVIC_SetVector+0x16>
 8003f7e:	4a04      	ldr	r2, [pc, #16]	; (8003f90 <__NVIC_SetVector+0x34>)
 8003f80:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003f84:	6093      	str	r3, [r2, #8]
 8003f86:	3010      	adds	r0, #16
 8003f88:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003f8c:	bd30      	pop	{r4, r5, pc}
 8003f8e:	bf00      	nop
 8003f90:	e000ed00 	.word	0xe000ed00
 8003f94:	20000184 	.word	0x20000184
 8003f98:	1ffffffc 	.word	0x1ffffffc

08003f9c <HAL_PWR_EnterSLEEPMode>:
 8003f9c:	4a06      	ldr	r2, [pc, #24]	; (8003fb8 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8003f9e:	6913      	ldr	r3, [r2, #16]
 8003fa0:	2901      	cmp	r1, #1
 8003fa2:	f023 0304 	bic.w	r3, r3, #4
 8003fa6:	6113      	str	r3, [r2, #16]
 8003fa8:	d101      	bne.n	8003fae <HAL_PWR_EnterSLEEPMode+0x12>
 8003faa:	bf30      	wfi
 8003fac:	4770      	bx	lr
 8003fae:	bf40      	sev
 8003fb0:	bf20      	wfe
 8003fb2:	bf20      	wfe
 8003fb4:	4770      	bx	lr
 8003fb6:	bf00      	nop
 8003fb8:	e000ed00 	.word	0xe000ed00

08003fbc <HAL_RCC_OscConfig>:
 8003fbc:	6803      	ldr	r3, [r0, #0]
 8003fbe:	07da      	lsls	r2, r3, #31
 8003fc0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 8003fc4:	4605      	mov	r5, r0
 8003fc6:	d411      	bmi.n	8003fec <HAL_RCC_OscConfig+0x30>
 8003fc8:	682b      	ldr	r3, [r5, #0]
 8003fca:	079b      	lsls	r3, r3, #30
 8003fcc:	f100 8088 	bmi.w	80040e0 <HAL_RCC_OscConfig+0x124>
 8003fd0:	682b      	ldr	r3, [r5, #0]
 8003fd2:	071c      	lsls	r4, r3, #28
 8003fd4:	f100 80f8 	bmi.w	80041c8 <HAL_RCC_OscConfig+0x20c>
 8003fd8:	682b      	ldr	r3, [r5, #0]
 8003fda:	0758      	lsls	r0, r3, #29
 8003fdc:	f100 8141 	bmi.w	8004262 <HAL_RCC_OscConfig+0x2a6>
 8003fe0:	69ea      	ldr	r2, [r5, #28]
 8003fe2:	2a00      	cmp	r2, #0
 8003fe4:	f040 81d7 	bne.w	8004396 <HAL_RCC_OscConfig+0x3da>
 8003fe8:	2000      	movs	r0, #0
 8003fea:	e021      	b.n	8004030 <HAL_RCC_OscConfig+0x74>
 8003fec:	4cba      	ldr	r4, [pc, #744]	; (80042d8 <HAL_RCC_OscConfig+0x31c>)
 8003fee:	6863      	ldr	r3, [r4, #4]
 8003ff0:	f003 030c 	and.w	r3, r3, #12
 8003ff4:	2b04      	cmp	r3, #4
 8003ff6:	d007      	beq.n	8004008 <HAL_RCC_OscConfig+0x4c>
 8003ff8:	6863      	ldr	r3, [r4, #4]
 8003ffa:	f003 030c 	and.w	r3, r3, #12
 8003ffe:	2b08      	cmp	r3, #8
 8004000:	d119      	bne.n	8004036 <HAL_RCC_OscConfig+0x7a>
 8004002:	6863      	ldr	r3, [r4, #4]
 8004004:	03df      	lsls	r7, r3, #15
 8004006:	d516      	bpl.n	8004036 <HAL_RCC_OscConfig+0x7a>
 8004008:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800400c:	fa93 f2a3 	rbit	r2, r3
 8004010:	6821      	ldr	r1, [r4, #0]
 8004012:	fa93 f3a3 	rbit	r3, r3
 8004016:	fab3 f383 	clz	r3, r3
 800401a:	f003 031f 	and.w	r3, r3, #31
 800401e:	2201      	movs	r2, #1
 8004020:	fa02 f303 	lsl.w	r3, r2, r3
 8004024:	420b      	tst	r3, r1
 8004026:	d0cf      	beq.n	8003fc8 <HAL_RCC_OscConfig+0xc>
 8004028:	686b      	ldr	r3, [r5, #4]
 800402a:	2b00      	cmp	r3, #0
 800402c:	d1cc      	bne.n	8003fc8 <HAL_RCC_OscConfig+0xc>
 800402e:	2001      	movs	r0, #1
 8004030:	b002      	add	sp, #8
 8004032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004036:	686a      	ldr	r2, [r5, #4]
 8004038:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800403c:	d125      	bne.n	800408a <HAL_RCC_OscConfig+0xce>
 800403e:	6823      	ldr	r3, [r4, #0]
 8004040:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004044:	6023      	str	r3, [r4, #0]
 8004046:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004048:	68a9      	ldr	r1, [r5, #8]
 800404a:	f023 030f 	bic.w	r3, r3, #15
 800404e:	430b      	orrs	r3, r1
 8004050:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004052:	b352      	cbz	r2, 80040aa <HAL_RCC_OscConfig+0xee>
 8004054:	f000 fb82 	bl	800475c <HAL_GetTick>
 8004058:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 800405c:	4680      	mov	r8, r0
 800405e:	2701      	movs	r7, #1
 8004060:	fa96 f3a6 	rbit	r3, r6
 8004064:	6822      	ldr	r2, [r4, #0]
 8004066:	fa96 f3a6 	rbit	r3, r6
 800406a:	fab3 f383 	clz	r3, r3
 800406e:	f003 031f 	and.w	r3, r3, #31
 8004072:	fa07 f303 	lsl.w	r3, r7, r3
 8004076:	4213      	tst	r3, r2
 8004078:	d1a6      	bne.n	8003fc8 <HAL_RCC_OscConfig+0xc>
 800407a:	f000 fb6f 	bl	800475c <HAL_GetTick>
 800407e:	eba0 0008 	sub.w	r0, r0, r8
 8004082:	2864      	cmp	r0, #100	; 0x64
 8004084:	d9ec      	bls.n	8004060 <HAL_RCC_OscConfig+0xa4>
 8004086:	2003      	movs	r0, #3
 8004088:	e7d2      	b.n	8004030 <HAL_RCC_OscConfig+0x74>
 800408a:	6823      	ldr	r3, [r4, #0]
 800408c:	b932      	cbnz	r2, 800409c <HAL_RCC_OscConfig+0xe0>
 800408e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004092:	6023      	str	r3, [r4, #0]
 8004094:	6823      	ldr	r3, [r4, #0]
 8004096:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800409a:	e7d3      	b.n	8004044 <HAL_RCC_OscConfig+0x88>
 800409c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80040a0:	d1f5      	bne.n	800408e <HAL_RCC_OscConfig+0xd2>
 80040a2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80040a6:	6023      	str	r3, [r4, #0]
 80040a8:	e7c9      	b.n	800403e <HAL_RCC_OscConfig+0x82>
 80040aa:	f000 fb57 	bl	800475c <HAL_GetTick>
 80040ae:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 80040b2:	4680      	mov	r8, r0
 80040b4:	2701      	movs	r7, #1
 80040b6:	fa96 f3a6 	rbit	r3, r6
 80040ba:	6822      	ldr	r2, [r4, #0]
 80040bc:	fa96 f3a6 	rbit	r3, r6
 80040c0:	fab3 f383 	clz	r3, r3
 80040c4:	f003 031f 	and.w	r3, r3, #31
 80040c8:	fa07 f303 	lsl.w	r3, r7, r3
 80040cc:	4213      	tst	r3, r2
 80040ce:	f43f af7b 	beq.w	8003fc8 <HAL_RCC_OscConfig+0xc>
 80040d2:	f000 fb43 	bl	800475c <HAL_GetTick>
 80040d6:	eba0 0008 	sub.w	r0, r0, r8
 80040da:	2864      	cmp	r0, #100	; 0x64
 80040dc:	d9eb      	bls.n	80040b6 <HAL_RCC_OscConfig+0xfa>
 80040de:	e7d2      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 80040e0:	4c7d      	ldr	r4, [pc, #500]	; (80042d8 <HAL_RCC_OscConfig+0x31c>)
 80040e2:	6863      	ldr	r3, [r4, #4]
 80040e4:	f013 0f0c 	tst.w	r3, #12
 80040e8:	d007      	beq.n	80040fa <HAL_RCC_OscConfig+0x13e>
 80040ea:	6863      	ldr	r3, [r4, #4]
 80040ec:	f003 030c 	and.w	r3, r3, #12
 80040f0:	2b08      	cmp	r3, #8
 80040f2:	d121      	bne.n	8004138 <HAL_RCC_OscConfig+0x17c>
 80040f4:	6863      	ldr	r3, [r4, #4]
 80040f6:	03de      	lsls	r6, r3, #15
 80040f8:	d41e      	bmi.n	8004138 <HAL_RCC_OscConfig+0x17c>
 80040fa:	2302      	movs	r3, #2
 80040fc:	fa93 f2a3 	rbit	r2, r3
 8004100:	6821      	ldr	r1, [r4, #0]
 8004102:	fa93 f3a3 	rbit	r3, r3
 8004106:	fab3 f383 	clz	r3, r3
 800410a:	f003 031f 	and.w	r3, r3, #31
 800410e:	2201      	movs	r2, #1
 8004110:	fa02 f303 	lsl.w	r3, r2, r3
 8004114:	420b      	tst	r3, r1
 8004116:	d002      	beq.n	800411e <HAL_RCC_OscConfig+0x162>
 8004118:	692b      	ldr	r3, [r5, #16]
 800411a:	4293      	cmp	r3, r2
 800411c:	d187      	bne.n	800402e <HAL_RCC_OscConfig+0x72>
 800411e:	6821      	ldr	r1, [r4, #0]
 8004120:	23f8      	movs	r3, #248	; 0xf8
 8004122:	fa93 f3a3 	rbit	r3, r3
 8004126:	fab3 f283 	clz	r2, r3
 800412a:	696b      	ldr	r3, [r5, #20]
 800412c:	4093      	lsls	r3, r2
 800412e:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8004132:	4313      	orrs	r3, r2
 8004134:	6023      	str	r3, [r4, #0]
 8004136:	e74b      	b.n	8003fd0 <HAL_RCC_OscConfig+0x14>
 8004138:	692a      	ldr	r2, [r5, #16]
 800413a:	2601      	movs	r6, #1
 800413c:	b30a      	cbz	r2, 8004182 <HAL_RCC_OscConfig+0x1c6>
 800413e:	fa96 f3a6 	rbit	r3, r6
 8004142:	fab3 f383 	clz	r3, r3
 8004146:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800414a:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800414e:	009b      	lsls	r3, r3, #2
 8004150:	2702      	movs	r7, #2
 8004152:	601e      	str	r6, [r3, #0]
 8004154:	f000 fb02 	bl	800475c <HAL_GetTick>
 8004158:	4680      	mov	r8, r0
 800415a:	fa97 f3a7 	rbit	r3, r7
 800415e:	6822      	ldr	r2, [r4, #0]
 8004160:	fa97 f3a7 	rbit	r3, r7
 8004164:	fab3 f383 	clz	r3, r3
 8004168:	f003 031f 	and.w	r3, r3, #31
 800416c:	fa06 f303 	lsl.w	r3, r6, r3
 8004170:	4213      	tst	r3, r2
 8004172:	d1d4      	bne.n	800411e <HAL_RCC_OscConfig+0x162>
 8004174:	f000 faf2 	bl	800475c <HAL_GetTick>
 8004178:	eba0 0008 	sub.w	r0, r0, r8
 800417c:	2802      	cmp	r0, #2
 800417e:	d9ec      	bls.n	800415a <HAL_RCC_OscConfig+0x19e>
 8004180:	e781      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004182:	fa96 f3a6 	rbit	r3, r6
 8004186:	fab3 f383 	clz	r3, r3
 800418a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800418e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004192:	009b      	lsls	r3, r3, #2
 8004194:	2702      	movs	r7, #2
 8004196:	601a      	str	r2, [r3, #0]
 8004198:	f000 fae0 	bl	800475c <HAL_GetTick>
 800419c:	4680      	mov	r8, r0
 800419e:	fa97 f3a7 	rbit	r3, r7
 80041a2:	6822      	ldr	r2, [r4, #0]
 80041a4:	fa97 f3a7 	rbit	r3, r7
 80041a8:	fab3 f383 	clz	r3, r3
 80041ac:	f003 031f 	and.w	r3, r3, #31
 80041b0:	fa06 f303 	lsl.w	r3, r6, r3
 80041b4:	4213      	tst	r3, r2
 80041b6:	f43f af0b 	beq.w	8003fd0 <HAL_RCC_OscConfig+0x14>
 80041ba:	f000 facf 	bl	800475c <HAL_GetTick>
 80041be:	eba0 0008 	sub.w	r0, r0, r8
 80041c2:	2802      	cmp	r0, #2
 80041c4:	d9eb      	bls.n	800419e <HAL_RCC_OscConfig+0x1e2>
 80041c6:	e75e      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 80041c8:	69aa      	ldr	r2, [r5, #24]
 80041ca:	4e43      	ldr	r6, [pc, #268]	; (80042d8 <HAL_RCC_OscConfig+0x31c>)
 80041cc:	4943      	ldr	r1, [pc, #268]	; (80042dc <HAL_RCC_OscConfig+0x320>)
 80041ce:	2401      	movs	r4, #1
 80041d0:	b31a      	cbz	r2, 800421a <HAL_RCC_OscConfig+0x25e>
 80041d2:	fa94 f3a4 	rbit	r3, r4
 80041d6:	fab3 f383 	clz	r3, r3
 80041da:	440b      	add	r3, r1
 80041dc:	009b      	lsls	r3, r3, #2
 80041de:	2702      	movs	r7, #2
 80041e0:	601c      	str	r4, [r3, #0]
 80041e2:	f000 fabb 	bl	800475c <HAL_GetTick>
 80041e6:	4680      	mov	r8, r0
 80041e8:	fa97 f3a7 	rbit	r3, r7
 80041ec:	fa97 f3a7 	rbit	r3, r7
 80041f0:	fa97 f3a7 	rbit	r3, r7
 80041f4:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80041f6:	fa97 f3a7 	rbit	r3, r7
 80041fa:	fab3 f383 	clz	r3, r3
 80041fe:	f003 031f 	and.w	r3, r3, #31
 8004202:	fa04 f303 	lsl.w	r3, r4, r3
 8004206:	4213      	tst	r3, r2
 8004208:	f47f aee6 	bne.w	8003fd8 <HAL_RCC_OscConfig+0x1c>
 800420c:	f000 faa6 	bl	800475c <HAL_GetTick>
 8004210:	eba0 0008 	sub.w	r0, r0, r8
 8004214:	2802      	cmp	r0, #2
 8004216:	d9e7      	bls.n	80041e8 <HAL_RCC_OscConfig+0x22c>
 8004218:	e735      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 800421a:	fa94 f3a4 	rbit	r3, r4
 800421e:	fab3 f383 	clz	r3, r3
 8004222:	440b      	add	r3, r1
 8004224:	009b      	lsls	r3, r3, #2
 8004226:	2702      	movs	r7, #2
 8004228:	601a      	str	r2, [r3, #0]
 800422a:	f000 fa97 	bl	800475c <HAL_GetTick>
 800422e:	4680      	mov	r8, r0
 8004230:	fa97 f3a7 	rbit	r3, r7
 8004234:	fa97 f3a7 	rbit	r3, r7
 8004238:	fa97 f3a7 	rbit	r3, r7
 800423c:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800423e:	fa97 f3a7 	rbit	r3, r7
 8004242:	fab3 f383 	clz	r3, r3
 8004246:	f003 031f 	and.w	r3, r3, #31
 800424a:	fa04 f303 	lsl.w	r3, r4, r3
 800424e:	4213      	tst	r3, r2
 8004250:	f43f aec2 	beq.w	8003fd8 <HAL_RCC_OscConfig+0x1c>
 8004254:	f000 fa82 	bl	800475c <HAL_GetTick>
 8004258:	eba0 0008 	sub.w	r0, r0, r8
 800425c:	2802      	cmp	r0, #2
 800425e:	d9e7      	bls.n	8004230 <HAL_RCC_OscConfig+0x274>
 8004260:	e711      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004262:	4c1d      	ldr	r4, [pc, #116]	; (80042d8 <HAL_RCC_OscConfig+0x31c>)
 8004264:	69e3      	ldr	r3, [r4, #28]
 8004266:	00d9      	lsls	r1, r3, #3
 8004268:	d434      	bmi.n	80042d4 <HAL_RCC_OscConfig+0x318>
 800426a:	69e3      	ldr	r3, [r4, #28]
 800426c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004270:	61e3      	str	r3, [r4, #28]
 8004272:	69e3      	ldr	r3, [r4, #28]
 8004274:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004278:	9301      	str	r3, [sp, #4]
 800427a:	9b01      	ldr	r3, [sp, #4]
 800427c:	2601      	movs	r6, #1
 800427e:	4f18      	ldr	r7, [pc, #96]	; (80042e0 <HAL_RCC_OscConfig+0x324>)
 8004280:	683b      	ldr	r3, [r7, #0]
 8004282:	05da      	lsls	r2, r3, #23
 8004284:	d52e      	bpl.n	80042e4 <HAL_RCC_OscConfig+0x328>
 8004286:	68eb      	ldr	r3, [r5, #12]
 8004288:	2b01      	cmp	r3, #1
 800428a:	d13c      	bne.n	8004306 <HAL_RCC_OscConfig+0x34a>
 800428c:	6a23      	ldr	r3, [r4, #32]
 800428e:	f043 0301 	orr.w	r3, r3, #1
 8004292:	6223      	str	r3, [r4, #32]
 8004294:	f000 fa62 	bl	800475c <HAL_GetTick>
 8004298:	2702      	movs	r7, #2
 800429a:	4682      	mov	r10, r0
 800429c:	46b9      	mov	r9, r7
 800429e:	f04f 0801 	mov.w	r8, #1
 80042a2:	fa97 f3a7 	rbit	r3, r7
 80042a6:	fa97 f3a7 	rbit	r3, r7
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d06b      	beq.n	8004386 <HAL_RCC_OscConfig+0x3ca>
 80042ae:	6a22      	ldr	r2, [r4, #32]
 80042b0:	fa99 f3a9 	rbit	r3, r9
 80042b4:	fab3 f383 	clz	r3, r3
 80042b8:	f003 031f 	and.w	r3, r3, #31
 80042bc:	fa08 f303 	lsl.w	r3, r8, r3
 80042c0:	4213      	tst	r3, r2
 80042c2:	d057      	beq.n	8004374 <HAL_RCC_OscConfig+0x3b8>
 80042c4:	2e00      	cmp	r6, #0
 80042c6:	f43f ae8b 	beq.w	8003fe0 <HAL_RCC_OscConfig+0x24>
 80042ca:	69e3      	ldr	r3, [r4, #28]
 80042cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80042d0:	61e3      	str	r3, [r4, #28]
 80042d2:	e685      	b.n	8003fe0 <HAL_RCC_OscConfig+0x24>
 80042d4:	2600      	movs	r6, #0
 80042d6:	e7d2      	b.n	800427e <HAL_RCC_OscConfig+0x2c2>
 80042d8:	40021000 	.word	0x40021000
 80042dc:	10908120 	.word	0x10908120
 80042e0:	40007000 	.word	0x40007000
 80042e4:	683b      	ldr	r3, [r7, #0]
 80042e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80042ea:	603b      	str	r3, [r7, #0]
 80042ec:	f000 fa36 	bl	800475c <HAL_GetTick>
 80042f0:	4680      	mov	r8, r0
 80042f2:	683b      	ldr	r3, [r7, #0]
 80042f4:	05db      	lsls	r3, r3, #23
 80042f6:	d4c6      	bmi.n	8004286 <HAL_RCC_OscConfig+0x2ca>
 80042f8:	f000 fa30 	bl	800475c <HAL_GetTick>
 80042fc:	eba0 0008 	sub.w	r0, r0, r8
 8004300:	2864      	cmp	r0, #100	; 0x64
 8004302:	d9f6      	bls.n	80042f2 <HAL_RCC_OscConfig+0x336>
 8004304:	e6bf      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004306:	bb3b      	cbnz	r3, 8004358 <HAL_RCC_OscConfig+0x39c>
 8004308:	6a23      	ldr	r3, [r4, #32]
 800430a:	f023 0301 	bic.w	r3, r3, #1
 800430e:	6223      	str	r3, [r4, #32]
 8004310:	6a23      	ldr	r3, [r4, #32]
 8004312:	f023 0304 	bic.w	r3, r3, #4
 8004316:	6223      	str	r3, [r4, #32]
 8004318:	f000 fa20 	bl	800475c <HAL_GetTick>
 800431c:	2702      	movs	r7, #2
 800431e:	4682      	mov	r10, r0
 8004320:	46b9      	mov	r9, r7
 8004322:	f04f 0801 	mov.w	r8, #1
 8004326:	fa97 f3a7 	rbit	r3, r7
 800432a:	fa97 f3a7 	rbit	r3, r7
 800432e:	b373      	cbz	r3, 800438e <HAL_RCC_OscConfig+0x3d2>
 8004330:	6a22      	ldr	r2, [r4, #32]
 8004332:	fa99 f3a9 	rbit	r3, r9
 8004336:	fab3 f383 	clz	r3, r3
 800433a:	f003 031f 	and.w	r3, r3, #31
 800433e:	fa08 f303 	lsl.w	r3, r8, r3
 8004342:	4213      	tst	r3, r2
 8004344:	d0be      	beq.n	80042c4 <HAL_RCC_OscConfig+0x308>
 8004346:	f000 fa09 	bl	800475c <HAL_GetTick>
 800434a:	f241 3388 	movw	r3, #5000	; 0x1388
 800434e:	eba0 000a 	sub.w	r0, r0, r10
 8004352:	4298      	cmp	r0, r3
 8004354:	d9e7      	bls.n	8004326 <HAL_RCC_OscConfig+0x36a>
 8004356:	e696      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004358:	2b05      	cmp	r3, #5
 800435a:	6a23      	ldr	r3, [r4, #32]
 800435c:	d103      	bne.n	8004366 <HAL_RCC_OscConfig+0x3aa>
 800435e:	f043 0304 	orr.w	r3, r3, #4
 8004362:	6223      	str	r3, [r4, #32]
 8004364:	e792      	b.n	800428c <HAL_RCC_OscConfig+0x2d0>
 8004366:	f023 0301 	bic.w	r3, r3, #1
 800436a:	6223      	str	r3, [r4, #32]
 800436c:	6a23      	ldr	r3, [r4, #32]
 800436e:	f023 0304 	bic.w	r3, r3, #4
 8004372:	e78e      	b.n	8004292 <HAL_RCC_OscConfig+0x2d6>
 8004374:	f000 f9f2 	bl	800475c <HAL_GetTick>
 8004378:	f241 3388 	movw	r3, #5000	; 0x1388
 800437c:	eba0 000a 	sub.w	r0, r0, r10
 8004380:	4298      	cmp	r0, r3
 8004382:	d98e      	bls.n	80042a2 <HAL_RCC_OscConfig+0x2e6>
 8004384:	e67f      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004386:	fa97 f3a7 	rbit	r3, r7
 800438a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800438c:	e790      	b.n	80042b0 <HAL_RCC_OscConfig+0x2f4>
 800438e:	fa97 f3a7 	rbit	r3, r7
 8004392:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004394:	e7cd      	b.n	8004332 <HAL_RCC_OscConfig+0x376>
 8004396:	4c41      	ldr	r4, [pc, #260]	; (800449c <HAL_RCC_OscConfig+0x4e0>)
 8004398:	6863      	ldr	r3, [r4, #4]
 800439a:	f003 030c 	and.w	r3, r3, #12
 800439e:	2b08      	cmp	r3, #8
 80043a0:	f43f ae45 	beq.w	800402e <HAL_RCC_OscConfig+0x72>
 80043a4:	2a02      	cmp	r2, #2
 80043a6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80043aa:	d152      	bne.n	8004452 <HAL_RCC_OscConfig+0x496>
 80043ac:	fa93 f3a3 	rbit	r3, r3
 80043b0:	fab3 f383 	clz	r3, r3
 80043b4:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80043b8:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80043bc:	009b      	lsls	r3, r3, #2
 80043be:	2200      	movs	r2, #0
 80043c0:	601a      	str	r2, [r3, #0]
 80043c2:	f000 f9cb 	bl	800475c <HAL_GetTick>
 80043c6:	f04f 7700 	mov.w	r7, #33554432	; 0x2000000
 80043ca:	4680      	mov	r8, r0
 80043cc:	2601      	movs	r6, #1
 80043ce:	fa97 f3a7 	rbit	r3, r7
 80043d2:	6822      	ldr	r2, [r4, #0]
 80043d4:	fa97 f3a7 	rbit	r3, r7
 80043d8:	fab3 f383 	clz	r3, r3
 80043dc:	f003 031f 	and.w	r3, r3, #31
 80043e0:	fa06 f303 	lsl.w	r3, r6, r3
 80043e4:	4213      	tst	r3, r2
 80043e6:	d12d      	bne.n	8004444 <HAL_RCC_OscConfig+0x488>
 80043e8:	6862      	ldr	r2, [r4, #4]
 80043ea:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80043ec:	6a29      	ldr	r1, [r5, #32]
 80043ee:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 80043f2:	430b      	orrs	r3, r1
 80043f4:	4313      	orrs	r3, r2
 80043f6:	6063      	str	r3, [r4, #4]
 80043f8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80043fc:	fa93 f3a3 	rbit	r3, r3
 8004400:	fab3 f383 	clz	r3, r3
 8004404:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004408:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800440c:	009b      	lsls	r3, r3, #2
 800440e:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004412:	601e      	str	r6, [r3, #0]
 8004414:	f000 f9a2 	bl	800475c <HAL_GetTick>
 8004418:	2601      	movs	r6, #1
 800441a:	4607      	mov	r7, r0
 800441c:	fa95 f3a5 	rbit	r3, r5
 8004420:	6822      	ldr	r2, [r4, #0]
 8004422:	fa95 f3a5 	rbit	r3, r5
 8004426:	fab3 f383 	clz	r3, r3
 800442a:	f003 031f 	and.w	r3, r3, #31
 800442e:	fa06 f303 	lsl.w	r3, r6, r3
 8004432:	4213      	tst	r3, r2
 8004434:	f47f add8 	bne.w	8003fe8 <HAL_RCC_OscConfig+0x2c>
 8004438:	f000 f990 	bl	800475c <HAL_GetTick>
 800443c:	1bc0      	subs	r0, r0, r7
 800443e:	2802      	cmp	r0, #2
 8004440:	d9ec      	bls.n	800441c <HAL_RCC_OscConfig+0x460>
 8004442:	e620      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004444:	f000 f98a 	bl	800475c <HAL_GetTick>
 8004448:	eba0 0008 	sub.w	r0, r0, r8
 800444c:	2802      	cmp	r0, #2
 800444e:	d9be      	bls.n	80043ce <HAL_RCC_OscConfig+0x412>
 8004450:	e619      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 8004452:	fa93 f3a3 	rbit	r3, r3
 8004456:	fab3 f383 	clz	r3, r3
 800445a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800445e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004462:	009b      	lsls	r3, r3, #2
 8004464:	2200      	movs	r2, #0
 8004466:	601a      	str	r2, [r3, #0]
 8004468:	f000 f978 	bl	800475c <HAL_GetTick>
 800446c:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004470:	4607      	mov	r7, r0
 8004472:	2601      	movs	r6, #1
 8004474:	fa95 f3a5 	rbit	r3, r5
 8004478:	6822      	ldr	r2, [r4, #0]
 800447a:	fa95 f3a5 	rbit	r3, r5
 800447e:	fab3 f383 	clz	r3, r3
 8004482:	f003 031f 	and.w	r3, r3, #31
 8004486:	fa06 f303 	lsl.w	r3, r6, r3
 800448a:	4213      	tst	r3, r2
 800448c:	f43f adac 	beq.w	8003fe8 <HAL_RCC_OscConfig+0x2c>
 8004490:	f000 f964 	bl	800475c <HAL_GetTick>
 8004494:	1bc0      	subs	r0, r0, r7
 8004496:	2802      	cmp	r0, #2
 8004498:	d9ec      	bls.n	8004474 <HAL_RCC_OscConfig+0x4b8>
 800449a:	e5f4      	b.n	8004086 <HAL_RCC_OscConfig+0xca>
 800449c:	40021000 	.word	0x40021000

080044a0 <HAL_RCC_GetSysClockFreq>:
 80044a0:	b510      	push	{r4, lr}
 80044a2:	4c13      	ldr	r4, [pc, #76]	; (80044f0 <HAL_RCC_GetSysClockFreq+0x50>)
 80044a4:	6861      	ldr	r1, [r4, #4]
 80044a6:	f001 030c 	and.w	r3, r1, #12
 80044aa:	2b08      	cmp	r3, #8
 80044ac:	d11e      	bne.n	80044ec <HAL_RCC_GetSysClockFreq+0x4c>
 80044ae:	f44f 1370 	mov.w	r3, #3932160	; 0x3c0000
 80044b2:	fa93 f3a3 	rbit	r3, r3
 80044b6:	f401 1270 	and.w	r2, r1, #3932160	; 0x3c0000
 80044ba:	fab3 f383 	clz	r3, r3
 80044be:	fa22 f303 	lsr.w	r3, r2, r3
 80044c2:	4a0c      	ldr	r2, [pc, #48]	; (80044f4 <HAL_RCC_GetSysClockFreq+0x54>)
 80044c4:	5cd0      	ldrb	r0, [r2, r3]
 80044c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80044c8:	220f      	movs	r2, #15
 80044ca:	fa92 f2a2 	rbit	r2, r2
 80044ce:	fab2 f282 	clz	r2, r2
 80044d2:	f003 030f 	and.w	r3, r3, #15
 80044d6:	40d3      	lsrs	r3, r2
 80044d8:	4a07      	ldr	r2, [pc, #28]	; (80044f8 <HAL_RCC_GetSysClockFreq+0x58>)
 80044da:	5cd2      	ldrb	r2, [r2, r3]
 80044dc:	03cb      	lsls	r3, r1, #15
 80044de:	bf4a      	itet	mi
 80044e0:	4b06      	ldrmi	r3, [pc, #24]	; (80044fc <HAL_RCC_GetSysClockFreq+0x5c>)
 80044e2:	4b07      	ldrpl	r3, [pc, #28]	; (8004500 <HAL_RCC_GetSysClockFreq+0x60>)
 80044e4:	fbb3 f3f2 	udivmi	r3, r3, r2
 80044e8:	4358      	muls	r0, r3
 80044ea:	bd10      	pop	{r4, pc}
 80044ec:	4803      	ldr	r0, [pc, #12]	; (80044fc <HAL_RCC_GetSysClockFreq+0x5c>)
 80044ee:	bd10      	pop	{r4, pc}
 80044f0:	40021000 	.word	0x40021000
 80044f4:	0800703c 	.word	0x0800703c
 80044f8:	0800704c 	.word	0x0800704c
 80044fc:	007a1200 	.word	0x007a1200
 8004500:	003d0900 	.word	0x003d0900

08004504 <HAL_RCC_ClockConfig>:
 8004504:	4a5c      	ldr	r2, [pc, #368]	; (8004678 <HAL_RCC_ClockConfig+0x174>)
 8004506:	6813      	ldr	r3, [r2, #0]
 8004508:	f003 0307 	and.w	r3, r3, #7
 800450c:	428b      	cmp	r3, r1
 800450e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004512:	4606      	mov	r6, r0
 8004514:	460d      	mov	r5, r1
 8004516:	d330      	bcc.n	800457a <HAL_RCC_ClockConfig+0x76>
 8004518:	6832      	ldr	r2, [r6, #0]
 800451a:	0791      	lsls	r1, r2, #30
 800451c:	d43a      	bmi.n	8004594 <HAL_RCC_ClockConfig+0x90>
 800451e:	07d2      	lsls	r2, r2, #31
 8004520:	d440      	bmi.n	80045a4 <HAL_RCC_ClockConfig+0xa0>
 8004522:	4a55      	ldr	r2, [pc, #340]	; (8004678 <HAL_RCC_ClockConfig+0x174>)
 8004524:	6813      	ldr	r3, [r2, #0]
 8004526:	f003 0307 	and.w	r3, r3, #7
 800452a:	429d      	cmp	r5, r3
 800452c:	f0c0 8092 	bcc.w	8004654 <HAL_RCC_ClockConfig+0x150>
 8004530:	6832      	ldr	r2, [r6, #0]
 8004532:	4c52      	ldr	r4, [pc, #328]	; (800467c <HAL_RCC_ClockConfig+0x178>)
 8004534:	f012 0f04 	tst.w	r2, #4
 8004538:	f040 8097 	bne.w	800466a <HAL_RCC_ClockConfig+0x166>
 800453c:	0713      	lsls	r3, r2, #28
 800453e:	d506      	bpl.n	800454e <HAL_RCC_ClockConfig+0x4a>
 8004540:	6863      	ldr	r3, [r4, #4]
 8004542:	6932      	ldr	r2, [r6, #16]
 8004544:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8004548:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800454c:	6063      	str	r3, [r4, #4]
 800454e:	f7ff ffa7 	bl	80044a0 <HAL_RCC_GetSysClockFreq>
 8004552:	6863      	ldr	r3, [r4, #4]
 8004554:	22f0      	movs	r2, #240	; 0xf0
 8004556:	fa92 f2a2 	rbit	r2, r2
 800455a:	fab2 f282 	clz	r2, r2
 800455e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004562:	40d3      	lsrs	r3, r2
 8004564:	4a46      	ldr	r2, [pc, #280]	; (8004680 <HAL_RCC_ClockConfig+0x17c>)
 8004566:	5cd3      	ldrb	r3, [r2, r3]
 8004568:	40d8      	lsrs	r0, r3
 800456a:	4b46      	ldr	r3, [pc, #280]	; (8004684 <HAL_RCC_ClockConfig+0x180>)
 800456c:	6018      	str	r0, [r3, #0]
 800456e:	200f      	movs	r0, #15
 8004570:	f7fe fda0 	bl	80030b4 <HAL_InitTick>
 8004574:	2000      	movs	r0, #0
 8004576:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800457a:	6813      	ldr	r3, [r2, #0]
 800457c:	f023 0307 	bic.w	r3, r3, #7
 8004580:	430b      	orrs	r3, r1
 8004582:	6013      	str	r3, [r2, #0]
 8004584:	6813      	ldr	r3, [r2, #0]
 8004586:	f003 0307 	and.w	r3, r3, #7
 800458a:	4299      	cmp	r1, r3
 800458c:	d0c4      	beq.n	8004518 <HAL_RCC_ClockConfig+0x14>
 800458e:	2001      	movs	r0, #1
 8004590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004594:	4939      	ldr	r1, [pc, #228]	; (800467c <HAL_RCC_ClockConfig+0x178>)
 8004596:	68b0      	ldr	r0, [r6, #8]
 8004598:	684b      	ldr	r3, [r1, #4]
 800459a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800459e:	4303      	orrs	r3, r0
 80045a0:	604b      	str	r3, [r1, #4]
 80045a2:	e7bc      	b.n	800451e <HAL_RCC_ClockConfig+0x1a>
 80045a4:	6872      	ldr	r2, [r6, #4]
 80045a6:	4c35      	ldr	r4, [pc, #212]	; (800467c <HAL_RCC_ClockConfig+0x178>)
 80045a8:	2a01      	cmp	r2, #1
 80045aa:	d128      	bne.n	80045fe <HAL_RCC_ClockConfig+0xfa>
 80045ac:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80045b0:	fa93 f1a3 	rbit	r1, r3
 80045b4:	6821      	ldr	r1, [r4, #0]
 80045b6:	fa93 f3a3 	rbit	r3, r3
 80045ba:	fab3 f383 	clz	r3, r3
 80045be:	f003 031f 	and.w	r3, r3, #31
 80045c2:	fa02 f303 	lsl.w	r3, r2, r3
 80045c6:	420b      	tst	r3, r1
 80045c8:	d0e1      	beq.n	800458e <HAL_RCC_ClockConfig+0x8a>
 80045ca:	6863      	ldr	r3, [r4, #4]
 80045cc:	f023 0303 	bic.w	r3, r3, #3
 80045d0:	431a      	orrs	r2, r3
 80045d2:	6062      	str	r2, [r4, #4]
 80045d4:	f000 f8c2 	bl	800475c <HAL_GetTick>
 80045d8:	6873      	ldr	r3, [r6, #4]
 80045da:	2b01      	cmp	r3, #1
 80045dc:	4607      	mov	r7, r0
 80045de:	f241 3888 	movw	r8, #5000	; 0x1388
 80045e2:	d11f      	bne.n	8004624 <HAL_RCC_ClockConfig+0x120>
 80045e4:	6863      	ldr	r3, [r4, #4]
 80045e6:	f003 030c 	and.w	r3, r3, #12
 80045ea:	2b04      	cmp	r3, #4
 80045ec:	d099      	beq.n	8004522 <HAL_RCC_ClockConfig+0x1e>
 80045ee:	f000 f8b5 	bl	800475c <HAL_GetTick>
 80045f2:	1bc0      	subs	r0, r0, r7
 80045f4:	4540      	cmp	r0, r8
 80045f6:	d9f5      	bls.n	80045e4 <HAL_RCC_ClockConfig+0xe0>
 80045f8:	2003      	movs	r0, #3
 80045fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045fe:	2a02      	cmp	r2, #2
 8004600:	bf0c      	ite	eq
 8004602:	f04f 7300 	moveq.w	r3, #33554432	; 0x2000000
 8004606:	2302      	movne	r3, #2
 8004608:	fa93 f1a3 	rbit	r1, r3
 800460c:	6820      	ldr	r0, [r4, #0]
 800460e:	fa93 f3a3 	rbit	r3, r3
 8004612:	fab3 f383 	clz	r3, r3
 8004616:	f003 031f 	and.w	r3, r3, #31
 800461a:	2101      	movs	r1, #1
 800461c:	fa01 f303 	lsl.w	r3, r1, r3
 8004620:	4203      	tst	r3, r0
 8004622:	e7d1      	b.n	80045c8 <HAL_RCC_ClockConfig+0xc4>
 8004624:	2b02      	cmp	r3, #2
 8004626:	d110      	bne.n	800464a <HAL_RCC_ClockConfig+0x146>
 8004628:	6863      	ldr	r3, [r4, #4]
 800462a:	f003 030c 	and.w	r3, r3, #12
 800462e:	2b08      	cmp	r3, #8
 8004630:	f43f af77 	beq.w	8004522 <HAL_RCC_ClockConfig+0x1e>
 8004634:	f000 f892 	bl	800475c <HAL_GetTick>
 8004638:	1bc0      	subs	r0, r0, r7
 800463a:	4540      	cmp	r0, r8
 800463c:	d9f4      	bls.n	8004628 <HAL_RCC_ClockConfig+0x124>
 800463e:	e7db      	b.n	80045f8 <HAL_RCC_ClockConfig+0xf4>
 8004640:	f000 f88c 	bl	800475c <HAL_GetTick>
 8004644:	1bc0      	subs	r0, r0, r7
 8004646:	4540      	cmp	r0, r8
 8004648:	d8d6      	bhi.n	80045f8 <HAL_RCC_ClockConfig+0xf4>
 800464a:	6863      	ldr	r3, [r4, #4]
 800464c:	f013 0f0c 	tst.w	r3, #12
 8004650:	d1f6      	bne.n	8004640 <HAL_RCC_ClockConfig+0x13c>
 8004652:	e766      	b.n	8004522 <HAL_RCC_ClockConfig+0x1e>
 8004654:	6813      	ldr	r3, [r2, #0]
 8004656:	f023 0307 	bic.w	r3, r3, #7
 800465a:	432b      	orrs	r3, r5
 800465c:	6013      	str	r3, [r2, #0]
 800465e:	6813      	ldr	r3, [r2, #0]
 8004660:	f003 0307 	and.w	r3, r3, #7
 8004664:	429d      	cmp	r5, r3
 8004666:	d192      	bne.n	800458e <HAL_RCC_ClockConfig+0x8a>
 8004668:	e762      	b.n	8004530 <HAL_RCC_ClockConfig+0x2c>
 800466a:	6863      	ldr	r3, [r4, #4]
 800466c:	68f1      	ldr	r1, [r6, #12]
 800466e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004672:	430b      	orrs	r3, r1
 8004674:	6063      	str	r3, [r4, #4]
 8004676:	e761      	b.n	800453c <HAL_RCC_ClockConfig+0x38>
 8004678:	40022000 	.word	0x40022000
 800467c:	40021000 	.word	0x40021000
 8004680:	08007024 	.word	0x08007024
 8004684:	200001a4 	.word	0x200001a4

08004688 <HAL_RCC_GetPCLK1Freq>:
 8004688:	4b08      	ldr	r3, [pc, #32]	; (80046ac <HAL_RCC_GetPCLK1Freq+0x24>)
 800468a:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800468e:	685b      	ldr	r3, [r3, #4]
 8004690:	fa92 f2a2 	rbit	r2, r2
 8004694:	fab2 f282 	clz	r2, r2
 8004698:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800469c:	40d3      	lsrs	r3, r2
 800469e:	4a04      	ldr	r2, [pc, #16]	; (80046b0 <HAL_RCC_GetPCLK1Freq+0x28>)
 80046a0:	5cd3      	ldrb	r3, [r2, r3]
 80046a2:	4a04      	ldr	r2, [pc, #16]	; (80046b4 <HAL_RCC_GetPCLK1Freq+0x2c>)
 80046a4:	6810      	ldr	r0, [r2, #0]
 80046a6:	40d8      	lsrs	r0, r3
 80046a8:	4770      	bx	lr
 80046aa:	bf00      	nop
 80046ac:	40021000 	.word	0x40021000
 80046b0:	08007034 	.word	0x08007034
 80046b4:	200001a4 	.word	0x200001a4

080046b8 <HAL_RCC_GetPCLK2Freq>:
 80046b8:	4b08      	ldr	r3, [pc, #32]	; (80046dc <HAL_RCC_GetPCLK2Freq+0x24>)
 80046ba:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80046be:	685b      	ldr	r3, [r3, #4]
 80046c0:	fa92 f2a2 	rbit	r2, r2
 80046c4:	fab2 f282 	clz	r2, r2
 80046c8:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 80046cc:	40d3      	lsrs	r3, r2
 80046ce:	4a04      	ldr	r2, [pc, #16]	; (80046e0 <HAL_RCC_GetPCLK2Freq+0x28>)
 80046d0:	5cd3      	ldrb	r3, [r2, r3]
 80046d2:	4a04      	ldr	r2, [pc, #16]	; (80046e4 <HAL_RCC_GetPCLK2Freq+0x2c>)
 80046d4:	6810      	ldr	r0, [r2, #0]
 80046d6:	40d8      	lsrs	r0, r3
 80046d8:	4770      	bx	lr
 80046da:	bf00      	nop
 80046dc:	40021000 	.word	0x40021000
 80046e0:	08007034 	.word	0x08007034
 80046e4:	200001a4 	.word	0x200001a4

080046e8 <HAL_RCC_GetClockConfig>:
 80046e8:	230f      	movs	r3, #15
 80046ea:	6003      	str	r3, [r0, #0]
 80046ec:	4b0b      	ldr	r3, [pc, #44]	; (800471c <HAL_RCC_GetClockConfig+0x34>)
 80046ee:	685a      	ldr	r2, [r3, #4]
 80046f0:	f002 0203 	and.w	r2, r2, #3
 80046f4:	6042      	str	r2, [r0, #4]
 80046f6:	685a      	ldr	r2, [r3, #4]
 80046f8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80046fc:	6082      	str	r2, [r0, #8]
 80046fe:	685a      	ldr	r2, [r3, #4]
 8004700:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8004704:	60c2      	str	r2, [r0, #12]
 8004706:	685b      	ldr	r3, [r3, #4]
 8004708:	08db      	lsrs	r3, r3, #3
 800470a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800470e:	6103      	str	r3, [r0, #16]
 8004710:	4b03      	ldr	r3, [pc, #12]	; (8004720 <HAL_RCC_GetClockConfig+0x38>)
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	f003 0307 	and.w	r3, r3, #7
 8004718:	600b      	str	r3, [r1, #0]
 800471a:	4770      	bx	lr
 800471c:	40021000 	.word	0x40021000
 8004720:	40022000 	.word	0x40022000

08004724 <HAL_MspInit>:
 8004724:	4770      	bx	lr
	...

08004728 <HAL_Init>:
 8004728:	4a07      	ldr	r2, [pc, #28]	; (8004748 <HAL_Init+0x20>)
 800472a:	b508      	push	{r3, lr}
 800472c:	6813      	ldr	r3, [r2, #0]
 800472e:	f043 0310 	orr.w	r3, r3, #16
 8004732:	6013      	str	r3, [r2, #0]
 8004734:	2003      	movs	r0, #3
 8004736:	f000 f817 	bl	8004768 <HAL_NVIC_SetPriorityGrouping>
 800473a:	200f      	movs	r0, #15
 800473c:	f7fe fcba 	bl	80030b4 <HAL_InitTick>
 8004740:	f7ff fff0 	bl	8004724 <HAL_MspInit>
 8004744:	2000      	movs	r0, #0
 8004746:	bd08      	pop	{r3, pc}
 8004748:	40022000 	.word	0x40022000

0800474c <HAL_IncTick>:
 800474c:	4a02      	ldr	r2, [pc, #8]	; (8004758 <HAL_IncTick+0xc>)
 800474e:	6813      	ldr	r3, [r2, #0]
 8004750:	3301      	adds	r3, #1
 8004752:	6013      	str	r3, [r2, #0]
 8004754:	4770      	bx	lr
 8004756:	bf00      	nop
 8004758:	20001f04 	.word	0x20001f04

0800475c <HAL_GetTick>:
 800475c:	4b01      	ldr	r3, [pc, #4]	; (8004764 <HAL_GetTick+0x8>)
 800475e:	6818      	ldr	r0, [r3, #0]
 8004760:	4770      	bx	lr
 8004762:	bf00      	nop
 8004764:	20001f04 	.word	0x20001f04

08004768 <HAL_NVIC_SetPriorityGrouping>:
 8004768:	4a07      	ldr	r2, [pc, #28]	; (8004788 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800476a:	68d3      	ldr	r3, [r2, #12]
 800476c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004770:	041b      	lsls	r3, r3, #16
 8004772:	0c1b      	lsrs	r3, r3, #16
 8004774:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004778:	0200      	lsls	r0, r0, #8
 800477a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800477e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8004782:	4303      	orrs	r3, r0
 8004784:	60d3      	str	r3, [r2, #12]
 8004786:	4770      	bx	lr
 8004788:	e000ed00 	.word	0xe000ed00

0800478c <HAL_CAN_ConfigFilter>:
 800478c:	6803      	ldr	r3, [r0, #0]
 800478e:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8004792:	b570      	push	{r4, r5, r6, lr}
 8004794:	f040 0001 	orr.w	r0, r0, #1
 8004798:	694c      	ldr	r4, [r1, #20]
 800479a:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 800479e:	2201      	movs	r2, #1
 80047a0:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
 80047a4:	40a2      	lsls	r2, r4
 80047a6:	43d0      	mvns	r0, r2
 80047a8:	4005      	ands	r5, r0
 80047aa:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c
 80047ae:	69cd      	ldr	r5, [r1, #28]
 80047b0:	bb85      	cbnz	r5, 8004814 <HAL_CAN_ConfigFilter+0x88>
 80047b2:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 80047b6:	68ce      	ldr	r6, [r1, #12]
 80047b8:	4005      	ands	r5, r0
 80047ba:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 80047be:	888d      	ldrh	r5, [r1, #4]
 80047c0:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 80047c4:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80047c8:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80047cc:	688e      	ldr	r6, [r1, #8]
 80047ce:	880d      	ldrh	r5, [r1, #0]
 80047d0:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80047d4:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 80047d8:	698c      	ldr	r4, [r1, #24]
 80047da:	bb6c      	cbnz	r4, 8004838 <HAL_CAN_ConfigFilter+0xac>
 80047dc:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 80047e0:	4004      	ands	r4, r0
 80047e2:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 80047e6:	690c      	ldr	r4, [r1, #16]
 80047e8:	bb54      	cbnz	r4, 8004840 <HAL_CAN_ConfigFilter+0xb4>
 80047ea:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
 80047ee:	4020      	ands	r0, r4
 80047f0:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 80047f4:	6a09      	ldr	r1, [r1, #32]
 80047f6:	2901      	cmp	r1, #1
 80047f8:	bf02      	ittt	eq
 80047fa:	f8d3 121c 	ldreq.w	r1, [r3, #540]	; 0x21c
 80047fe:	430a      	orreq	r2, r1
 8004800:	f8c3 221c 	streq.w	r2, [r3, #540]	; 0x21c
 8004804:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8004808:	f022 0201 	bic.w	r2, r2, #1
 800480c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8004810:	2000      	movs	r0, #0
 8004812:	bd70      	pop	{r4, r5, r6, pc}
 8004814:	2d01      	cmp	r5, #1
 8004816:	d1df      	bne.n	80047d8 <HAL_CAN_ConfigFilter+0x4c>
 8004818:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 800481c:	680e      	ldr	r6, [r1, #0]
 800481e:	4315      	orrs	r5, r2
 8004820:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 8004824:	888d      	ldrh	r5, [r1, #4]
 8004826:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800482a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800482e:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 8004832:	688e      	ldr	r6, [r1, #8]
 8004834:	898d      	ldrh	r5, [r1, #12]
 8004836:	e7cb      	b.n	80047d0 <HAL_CAN_ConfigFilter+0x44>
 8004838:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 800483c:	4314      	orrs	r4, r2
 800483e:	e7d0      	b.n	80047e2 <HAL_CAN_ConfigFilter+0x56>
 8004840:	2c01      	cmp	r4, #1
 8004842:	d1d7      	bne.n	80047f4 <HAL_CAN_ConfigFilter+0x68>
 8004844:	f8d3 0214 	ldr.w	r0, [r3, #532]	; 0x214
 8004848:	4310      	orrs	r0, r2
 800484a:	e7d1      	b.n	80047f0 <HAL_CAN_ConfigFilter+0x64>

0800484c <HAL_CAN_MspInit>:
 800484c:	4770      	bx	lr

0800484e <HAL_CAN_Init>:
 800484e:	b570      	push	{r4, r5, r6, lr}
 8004850:	4604      	mov	r4, r0
 8004852:	2800      	cmp	r0, #0
 8004854:	d072      	beq.n	800493c <HAL_CAN_Init+0xee>
 8004856:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800485a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800485e:	b91b      	cbnz	r3, 8004868 <HAL_CAN_Init+0x1a>
 8004860:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004864:	f7ff fff2 	bl	800484c <HAL_CAN_MspInit>
 8004868:	2302      	movs	r3, #2
 800486a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800486e:	6823      	ldr	r3, [r4, #0]
 8004870:	681a      	ldr	r2, [r3, #0]
 8004872:	f022 0202 	bic.w	r2, r2, #2
 8004876:	601a      	str	r2, [r3, #0]
 8004878:	681a      	ldr	r2, [r3, #0]
 800487a:	f042 0201 	orr.w	r2, r2, #1
 800487e:	601a      	str	r2, [r3, #0]
 8004880:	f7ff ff6c 	bl	800475c <HAL_GetTick>
 8004884:	4606      	mov	r6, r0
 8004886:	6823      	ldr	r3, [r4, #0]
 8004888:	685d      	ldr	r5, [r3, #4]
 800488a:	f015 0501 	ands.w	r5, r5, #1
 800488e:	d057      	beq.n	8004940 <HAL_CAN_Init+0xf2>
 8004890:	685a      	ldr	r2, [r3, #4]
 8004892:	07d1      	lsls	r1, r2, #31
 8004894:	d54f      	bpl.n	8004936 <HAL_CAN_Init+0xe8>
 8004896:	69a2      	ldr	r2, [r4, #24]
 8004898:	2a01      	cmp	r2, #1
 800489a:	681a      	ldr	r2, [r3, #0]
 800489c:	bf0c      	ite	eq
 800489e:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 80048a2:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 80048a6:	601a      	str	r2, [r3, #0]
 80048a8:	69e2      	ldr	r2, [r4, #28]
 80048aa:	2a01      	cmp	r2, #1
 80048ac:	681a      	ldr	r2, [r3, #0]
 80048ae:	bf0c      	ite	eq
 80048b0:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 80048b4:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 80048b8:	601a      	str	r2, [r3, #0]
 80048ba:	6a22      	ldr	r2, [r4, #32]
 80048bc:	2a01      	cmp	r2, #1
 80048be:	681a      	ldr	r2, [r3, #0]
 80048c0:	bf0c      	ite	eq
 80048c2:	f042 0220 	orreq.w	r2, r2, #32
 80048c6:	f022 0220 	bicne.w	r2, r2, #32
 80048ca:	601a      	str	r2, [r3, #0]
 80048cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80048ce:	2a01      	cmp	r2, #1
 80048d0:	681a      	ldr	r2, [r3, #0]
 80048d2:	bf0c      	ite	eq
 80048d4:	f042 0210 	orreq.w	r2, r2, #16
 80048d8:	f022 0210 	bicne.w	r2, r2, #16
 80048dc:	601a      	str	r2, [r3, #0]
 80048de:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80048e0:	2a01      	cmp	r2, #1
 80048e2:	681a      	ldr	r2, [r3, #0]
 80048e4:	bf0c      	ite	eq
 80048e6:	f042 0208 	orreq.w	r2, r2, #8
 80048ea:	f022 0208 	bicne.w	r2, r2, #8
 80048ee:	601a      	str	r2, [r3, #0]
 80048f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80048f2:	2a01      	cmp	r2, #1
 80048f4:	681a      	ldr	r2, [r3, #0]
 80048f6:	bf0c      	ite	eq
 80048f8:	f042 0204 	orreq.w	r2, r2, #4
 80048fc:	f022 0204 	bicne.w	r2, r2, #4
 8004900:	601a      	str	r2, [r3, #0]
 8004902:	68e1      	ldr	r1, [r4, #12]
 8004904:	68a2      	ldr	r2, [r4, #8]
 8004906:	430a      	orrs	r2, r1
 8004908:	6921      	ldr	r1, [r4, #16]
 800490a:	430a      	orrs	r2, r1
 800490c:	6961      	ldr	r1, [r4, #20]
 800490e:	430a      	orrs	r2, r1
 8004910:	6861      	ldr	r1, [r4, #4]
 8004912:	3901      	subs	r1, #1
 8004914:	430a      	orrs	r2, r1
 8004916:	61da      	str	r2, [r3, #28]
 8004918:	681a      	ldr	r2, [r3, #0]
 800491a:	f022 0201 	bic.w	r2, r2, #1
 800491e:	601a      	str	r2, [r3, #0]
 8004920:	f7ff ff1c 	bl	800475c <HAL_GetTick>
 8004924:	4605      	mov	r5, r0
 8004926:	6823      	ldr	r3, [r4, #0]
 8004928:	685a      	ldr	r2, [r3, #4]
 800492a:	07d2      	lsls	r2, r2, #31
 800492c:	d413      	bmi.n	8004956 <HAL_CAN_Init+0x108>
 800492e:	6858      	ldr	r0, [r3, #4]
 8004930:	f010 0001 	ands.w	r0, r0, #1
 8004934:	d01b      	beq.n	800496e <HAL_CAN_Init+0x120>
 8004936:	2304      	movs	r3, #4
 8004938:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800493c:	2001      	movs	r0, #1
 800493e:	bd70      	pop	{r4, r5, r6, pc}
 8004940:	f7ff ff0c 	bl	800475c <HAL_GetTick>
 8004944:	1b80      	subs	r0, r0, r6
 8004946:	280a      	cmp	r0, #10
 8004948:	d99d      	bls.n	8004886 <HAL_CAN_Init+0x38>
 800494a:	2003      	movs	r0, #3
 800494c:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004950:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 8004954:	bd70      	pop	{r4, r5, r6, pc}
 8004956:	f7ff ff01 	bl	800475c <HAL_GetTick>
 800495a:	1b40      	subs	r0, r0, r5
 800495c:	280a      	cmp	r0, #10
 800495e:	d9e2      	bls.n	8004926 <HAL_CAN_Init+0xd8>
 8004960:	2003      	movs	r0, #3
 8004962:	2300      	movs	r3, #0
 8004964:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004968:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800496c:	bd70      	pop	{r4, r5, r6, pc}
 800496e:	2301      	movs	r3, #1
 8004970:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004972:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004976:	bd70      	pop	{r4, r5, r6, pc}

08004978 <HAL_TIM_OC_MspInit>:
 8004978:	4770      	bx	lr
	...

0800497c <TIM_Base_SetConfig>:
 800497c:	4a21      	ldr	r2, [pc, #132]	; (8004a04 <TIM_Base_SetConfig+0x88>)
 800497e:	6803      	ldr	r3, [r0, #0]
 8004980:	4290      	cmp	r0, r2
 8004982:	b510      	push	{r4, lr}
 8004984:	d005      	beq.n	8004992 <TIM_Base_SetConfig+0x16>
 8004986:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800498a:	d002      	beq.n	8004992 <TIM_Base_SetConfig+0x16>
 800498c:	4c1e      	ldr	r4, [pc, #120]	; (8004a08 <TIM_Base_SetConfig+0x8c>)
 800498e:	42a0      	cmp	r0, r4
 8004990:	d10c      	bne.n	80049ac <TIM_Base_SetConfig+0x30>
 8004992:	684c      	ldr	r4, [r1, #4]
 8004994:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004998:	4290      	cmp	r0, r2
 800499a:	ea43 0304 	orr.w	r3, r3, r4
 800499e:	d010      	beq.n	80049c2 <TIM_Base_SetConfig+0x46>
 80049a0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80049a4:	d00d      	beq.n	80049c2 <TIM_Base_SetConfig+0x46>
 80049a6:	4a18      	ldr	r2, [pc, #96]	; (8004a08 <TIM_Base_SetConfig+0x8c>)
 80049a8:	4290      	cmp	r0, r2
 80049aa:	d00a      	beq.n	80049c2 <TIM_Base_SetConfig+0x46>
 80049ac:	4a17      	ldr	r2, [pc, #92]	; (8004a0c <TIM_Base_SetConfig+0x90>)
 80049ae:	4290      	cmp	r0, r2
 80049b0:	d007      	beq.n	80049c2 <TIM_Base_SetConfig+0x46>
 80049b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80049b6:	4290      	cmp	r0, r2
 80049b8:	d003      	beq.n	80049c2 <TIM_Base_SetConfig+0x46>
 80049ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80049be:	4290      	cmp	r0, r2
 80049c0:	d103      	bne.n	80049ca <TIM_Base_SetConfig+0x4e>
 80049c2:	68ca      	ldr	r2, [r1, #12]
 80049c4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80049c8:	4313      	orrs	r3, r2
 80049ca:	694a      	ldr	r2, [r1, #20]
 80049cc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80049d0:	4313      	orrs	r3, r2
 80049d2:	6003      	str	r3, [r0, #0]
 80049d4:	688b      	ldr	r3, [r1, #8]
 80049d6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80049d8:	680b      	ldr	r3, [r1, #0]
 80049da:	6283      	str	r3, [r0, #40]	; 0x28
 80049dc:	4b09      	ldr	r3, [pc, #36]	; (8004a04 <TIM_Base_SetConfig+0x88>)
 80049de:	4298      	cmp	r0, r3
 80049e0:	d00b      	beq.n	80049fa <TIM_Base_SetConfig+0x7e>
 80049e2:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 80049e6:	4298      	cmp	r0, r3
 80049e8:	d007      	beq.n	80049fa <TIM_Base_SetConfig+0x7e>
 80049ea:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049ee:	4298      	cmp	r0, r3
 80049f0:	d003      	beq.n	80049fa <TIM_Base_SetConfig+0x7e>
 80049f2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049f6:	4298      	cmp	r0, r3
 80049f8:	d101      	bne.n	80049fe <TIM_Base_SetConfig+0x82>
 80049fa:	690b      	ldr	r3, [r1, #16]
 80049fc:	6303      	str	r3, [r0, #48]	; 0x30
 80049fe:	2301      	movs	r3, #1
 8004a00:	6143      	str	r3, [r0, #20]
 8004a02:	bd10      	pop	{r4, pc}
 8004a04:	40012c00 	.word	0x40012c00
 8004a08:	40000400 	.word	0x40000400
 8004a0c:	40014000 	.word	0x40014000

08004a10 <HAL_TIM_OC_Init>:
 8004a10:	b510      	push	{r4, lr}
 8004a12:	4604      	mov	r4, r0
 8004a14:	b1a0      	cbz	r0, 8004a40 <HAL_TIM_OC_Init+0x30>
 8004a16:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004a1a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a1e:	b91b      	cbnz	r3, 8004a28 <HAL_TIM_OC_Init+0x18>
 8004a20:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8004a24:	f7ff ffa8 	bl	8004978 <HAL_TIM_OC_MspInit>
 8004a28:	2302      	movs	r3, #2
 8004a2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004a2e:	6820      	ldr	r0, [r4, #0]
 8004a30:	1d21      	adds	r1, r4, #4
 8004a32:	f7ff ffa3 	bl	800497c <TIM_Base_SetConfig>
 8004a36:	2301      	movs	r3, #1
 8004a38:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004a3c:	2000      	movs	r0, #0
 8004a3e:	bd10      	pop	{r4, pc}
 8004a40:	2001      	movs	r0, #1
 8004a42:	bd10      	pop	{r4, pc}

08004a44 <TIM_CCxChannelCmd>:
 8004a44:	6a03      	ldr	r3, [r0, #32]
 8004a46:	b510      	push	{r4, lr}
 8004a48:	2401      	movs	r4, #1
 8004a4a:	408c      	lsls	r4, r1
 8004a4c:	ea23 0304 	bic.w	r3, r3, r4
 8004a50:	6203      	str	r3, [r0, #32]
 8004a52:	6a03      	ldr	r3, [r0, #32]
 8004a54:	408a      	lsls	r2, r1
 8004a56:	431a      	orrs	r2, r3
 8004a58:	6202      	str	r2, [r0, #32]
 8004a5a:	bd10      	pop	{r4, pc}

08004a5c <HAL_TIM_PWM_Start>:
 8004a5c:	b510      	push	{r4, lr}
 8004a5e:	4604      	mov	r4, r0
 8004a60:	2201      	movs	r2, #1
 8004a62:	6800      	ldr	r0, [r0, #0]
 8004a64:	f7ff ffee 	bl	8004a44 <TIM_CCxChannelCmd>
 8004a68:	6823      	ldr	r3, [r4, #0]
 8004a6a:	4a0c      	ldr	r2, [pc, #48]	; (8004a9c <HAL_TIM_PWM_Start+0x40>)
 8004a6c:	4293      	cmp	r3, r2
 8004a6e:	d00b      	beq.n	8004a88 <HAL_TIM_PWM_Start+0x2c>
 8004a70:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 8004a74:	4293      	cmp	r3, r2
 8004a76:	d007      	beq.n	8004a88 <HAL_TIM_PWM_Start+0x2c>
 8004a78:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a7c:	4293      	cmp	r3, r2
 8004a7e:	d003      	beq.n	8004a88 <HAL_TIM_PWM_Start+0x2c>
 8004a80:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a84:	4293      	cmp	r3, r2
 8004a86:	d103      	bne.n	8004a90 <HAL_TIM_PWM_Start+0x34>
 8004a88:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004a8a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004a8e:	645a      	str	r2, [r3, #68]	; 0x44
 8004a90:	681a      	ldr	r2, [r3, #0]
 8004a92:	f042 0201 	orr.w	r2, r2, #1
 8004a96:	601a      	str	r2, [r3, #0]
 8004a98:	2000      	movs	r0, #0
 8004a9a:	bd10      	pop	{r4, pc}
 8004a9c:	40012c00 	.word	0x40012c00

08004aa0 <HAL_TIM_OC_Start>:
 8004aa0:	f7ff bfdc 	b.w	8004a5c <HAL_TIM_PWM_Start>

08004aa4 <HAL_UART_MspInit>:
 8004aa4:	4770      	bx	lr
	...

08004aa8 <UART_SetConfig>:
 8004aa8:	b538      	push	{r3, r4, r5, lr}
 8004aaa:	4604      	mov	r4, r0
 8004aac:	6805      	ldr	r5, [r0, #0]
 8004aae:	6921      	ldr	r1, [r4, #16]
 8004ab0:	68a3      	ldr	r3, [r4, #8]
 8004ab2:	69c2      	ldr	r2, [r0, #28]
 8004ab4:	6828      	ldr	r0, [r5, #0]
 8004ab6:	430b      	orrs	r3, r1
 8004ab8:	6961      	ldr	r1, [r4, #20]
 8004aba:	430b      	orrs	r3, r1
 8004abc:	4949      	ldr	r1, [pc, #292]	; (8004be4 <UART_SetConfig+0x13c>)
 8004abe:	4313      	orrs	r3, r2
 8004ac0:	4001      	ands	r1, r0
 8004ac2:	430b      	orrs	r3, r1
 8004ac4:	602b      	str	r3, [r5, #0]
 8004ac6:	686b      	ldr	r3, [r5, #4]
 8004ac8:	68e1      	ldr	r1, [r4, #12]
 8004aca:	6a20      	ldr	r0, [r4, #32]
 8004acc:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004ad0:	430b      	orrs	r3, r1
 8004ad2:	606b      	str	r3, [r5, #4]
 8004ad4:	68a9      	ldr	r1, [r5, #8]
 8004ad6:	69a3      	ldr	r3, [r4, #24]
 8004ad8:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 8004adc:	4303      	orrs	r3, r0
 8004ade:	430b      	orrs	r3, r1
 8004ae0:	60ab      	str	r3, [r5, #8]
 8004ae2:	4b41      	ldr	r3, [pc, #260]	; (8004be8 <UART_SetConfig+0x140>)
 8004ae4:	429d      	cmp	r5, r3
 8004ae6:	d112      	bne.n	8004b0e <UART_SetConfig+0x66>
 8004ae8:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8004aec:	493f      	ldr	r1, [pc, #252]	; (8004bec <UART_SetConfig+0x144>)
 8004aee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004af0:	f003 0303 	and.w	r3, r3, #3
 8004af4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004af8:	5ccb      	ldrb	r3, [r1, r3]
 8004afa:	d13b      	bne.n	8004b74 <UART_SetConfig+0xcc>
 8004afc:	2b08      	cmp	r3, #8
 8004afe:	d836      	bhi.n	8004b6e <UART_SetConfig+0xc6>
 8004b00:	e8df f003 	tbb	[pc, r3]
 8004b04:	3524210f 	.word	0x3524210f
 8004b08:	3535352d 	.word	0x3535352d
 8004b0c:	30          	.byte	0x30
 8004b0d:	00          	.byte	0x00
 8004b0e:	4b38      	ldr	r3, [pc, #224]	; (8004bf0 <UART_SetConfig+0x148>)
 8004b10:	429d      	cmp	r5, r3
 8004b12:	d003      	beq.n	8004b1c <UART_SetConfig+0x74>
 8004b14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b18:	429d      	cmp	r5, r3
 8004b1a:	d15e      	bne.n	8004bda <UART_SetConfig+0x132>
 8004b1c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004b20:	d131      	bne.n	8004b86 <UART_SetConfig+0xde>
 8004b22:	f7ff fdb1 	bl	8004688 <HAL_RCC_GetPCLK1Freq>
 8004b26:	6861      	ldr	r1, [r4, #4]
 8004b28:	084a      	lsrs	r2, r1, #1
 8004b2a:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8004b2e:	fbb3 f3f1 	udiv	r3, r3, r1
 8004b32:	b29b      	uxth	r3, r3
 8004b34:	2000      	movs	r0, #0
 8004b36:	f023 020f 	bic.w	r2, r3, #15
 8004b3a:	6821      	ldr	r1, [r4, #0]
 8004b3c:	f3c3 0342 	ubfx	r3, r3, #1, #3
 8004b40:	4313      	orrs	r3, r2
 8004b42:	60cb      	str	r3, [r1, #12]
 8004b44:	bd38      	pop	{r3, r4, r5, pc}
 8004b46:	f7ff fdb7 	bl	80046b8 <HAL_RCC_GetPCLK2Freq>
 8004b4a:	e7ec      	b.n	8004b26 <UART_SetConfig+0x7e>
 8004b4c:	6860      	ldr	r0, [r4, #4]
 8004b4e:	0843      	lsrs	r3, r0, #1
 8004b50:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8004b54:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8004b58:	fbb3 f3f0 	udiv	r3, r3, r0
 8004b5c:	e7e9      	b.n	8004b32 <UART_SetConfig+0x8a>
 8004b5e:	f7ff fc9f 	bl	80044a0 <HAL_RCC_GetSysClockFreq>
 8004b62:	e7e0      	b.n	8004b26 <UART_SetConfig+0x7e>
 8004b64:	6860      	ldr	r0, [r4, #4]
 8004b66:	0843      	lsrs	r3, r0, #1
 8004b68:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004b6c:	e7f4      	b.n	8004b58 <UART_SetConfig+0xb0>
 8004b6e:	2001      	movs	r0, #1
 8004b70:	2300      	movs	r3, #0
 8004b72:	e7e0      	b.n	8004b36 <UART_SetConfig+0x8e>
 8004b74:	2b08      	cmp	r3, #8
 8004b76:	d833      	bhi.n	8004be0 <UART_SetConfig+0x138>
 8004b78:	e8df f003 	tbb	[pc, r3]
 8004b7c:	321b1005 	.word	0x321b1005
 8004b80:	32323227 	.word	0x32323227
 8004b84:	2a          	.byte	0x2a
 8004b85:	00          	.byte	0x00
 8004b86:	f7ff fd7f 	bl	8004688 <HAL_RCC_GetPCLK1Freq>
 8004b8a:	6863      	ldr	r3, [r4, #4]
 8004b8c:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004b90:	fbb0 f0f3 	udiv	r0, r0, r3
 8004b94:	b280      	uxth	r0, r0
 8004b96:	60e8      	str	r0, [r5, #12]
 8004b98:	2000      	movs	r0, #0
 8004b9a:	bd38      	pop	{r3, r4, r5, pc}
 8004b9c:	f7ff fd8c 	bl	80046b8 <HAL_RCC_GetPCLK2Freq>
 8004ba0:	6863      	ldr	r3, [r4, #4]
 8004ba2:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004ba6:	fbb0 f0f3 	udiv	r0, r0, r3
 8004baa:	4b0f      	ldr	r3, [pc, #60]	; (8004be8 <UART_SetConfig+0x140>)
 8004bac:	b280      	uxth	r0, r0
 8004bae:	60d8      	str	r0, [r3, #12]
 8004bb0:	e7f2      	b.n	8004b98 <UART_SetConfig+0xf0>
 8004bb2:	6862      	ldr	r2, [r4, #4]
 8004bb4:	0853      	lsrs	r3, r2, #1
 8004bb6:	f503 03f4 	add.w	r3, r3, #7995392	; 0x7a0000
 8004bba:	f503 5390 	add.w	r3, r3, #4608	; 0x1200
 8004bbe:	fbb3 f3f2 	udiv	r3, r3, r2
 8004bc2:	4a09      	ldr	r2, [pc, #36]	; (8004be8 <UART_SetConfig+0x140>)
 8004bc4:	b29b      	uxth	r3, r3
 8004bc6:	60d3      	str	r3, [r2, #12]
 8004bc8:	e7e6      	b.n	8004b98 <UART_SetConfig+0xf0>
 8004bca:	f7ff fc69 	bl	80044a0 <HAL_RCC_GetSysClockFreq>
 8004bce:	e7e7      	b.n	8004ba0 <UART_SetConfig+0xf8>
 8004bd0:	6862      	ldr	r2, [r4, #4]
 8004bd2:	0853      	lsrs	r3, r2, #1
 8004bd4:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8004bd8:	e7f1      	b.n	8004bbe <UART_SetConfig+0x116>
 8004bda:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004bde:	d0c6      	beq.n	8004b6e <UART_SetConfig+0xc6>
 8004be0:	2001      	movs	r0, #1
 8004be2:	bd38      	pop	{r3, r4, r5, pc}
 8004be4:	efff69f3 	.word	0xefff69f3
 8004be8:	40013800 	.word	0x40013800
 8004bec:	0800705c 	.word	0x0800705c
 8004bf0:	40004400 	.word	0x40004400

08004bf4 <UART_AdvFeatureConfig>:
 8004bf4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004bf6:	07da      	lsls	r2, r3, #31
 8004bf8:	b510      	push	{r4, lr}
 8004bfa:	d506      	bpl.n	8004c0a <UART_AdvFeatureConfig+0x16>
 8004bfc:	6801      	ldr	r1, [r0, #0]
 8004bfe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8004c00:	684a      	ldr	r2, [r1, #4]
 8004c02:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004c06:	4322      	orrs	r2, r4
 8004c08:	604a      	str	r2, [r1, #4]
 8004c0a:	079c      	lsls	r4, r3, #30
 8004c0c:	d506      	bpl.n	8004c1c <UART_AdvFeatureConfig+0x28>
 8004c0e:	6801      	ldr	r1, [r0, #0]
 8004c10:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8004c12:	684a      	ldr	r2, [r1, #4]
 8004c14:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004c18:	4322      	orrs	r2, r4
 8004c1a:	604a      	str	r2, [r1, #4]
 8004c1c:	0759      	lsls	r1, r3, #29
 8004c1e:	d506      	bpl.n	8004c2e <UART_AdvFeatureConfig+0x3a>
 8004c20:	6801      	ldr	r1, [r0, #0]
 8004c22:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004c24:	684a      	ldr	r2, [r1, #4]
 8004c26:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004c2a:	4322      	orrs	r2, r4
 8004c2c:	604a      	str	r2, [r1, #4]
 8004c2e:	071a      	lsls	r2, r3, #28
 8004c30:	d506      	bpl.n	8004c40 <UART_AdvFeatureConfig+0x4c>
 8004c32:	6801      	ldr	r1, [r0, #0]
 8004c34:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004c36:	684a      	ldr	r2, [r1, #4]
 8004c38:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004c3c:	4322      	orrs	r2, r4
 8004c3e:	604a      	str	r2, [r1, #4]
 8004c40:	06dc      	lsls	r4, r3, #27
 8004c42:	d506      	bpl.n	8004c52 <UART_AdvFeatureConfig+0x5e>
 8004c44:	6801      	ldr	r1, [r0, #0]
 8004c46:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004c48:	688a      	ldr	r2, [r1, #8]
 8004c4a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004c4e:	4322      	orrs	r2, r4
 8004c50:	608a      	str	r2, [r1, #8]
 8004c52:	0699      	lsls	r1, r3, #26
 8004c54:	d506      	bpl.n	8004c64 <UART_AdvFeatureConfig+0x70>
 8004c56:	6801      	ldr	r1, [r0, #0]
 8004c58:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8004c5a:	688a      	ldr	r2, [r1, #8]
 8004c5c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004c60:	4322      	orrs	r2, r4
 8004c62:	608a      	str	r2, [r1, #8]
 8004c64:	065a      	lsls	r2, r3, #25
 8004c66:	d50f      	bpl.n	8004c88 <UART_AdvFeatureConfig+0x94>
 8004c68:	6801      	ldr	r1, [r0, #0]
 8004c6a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004c6c:	684a      	ldr	r2, [r1, #4]
 8004c6e:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004c72:	4322      	orrs	r2, r4
 8004c74:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004c78:	604a      	str	r2, [r1, #4]
 8004c7a:	d105      	bne.n	8004c88 <UART_AdvFeatureConfig+0x94>
 8004c7c:	684a      	ldr	r2, [r1, #4]
 8004c7e:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8004c80:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004c84:	4322      	orrs	r2, r4
 8004c86:	604a      	str	r2, [r1, #4]
 8004c88:	061b      	lsls	r3, r3, #24
 8004c8a:	d506      	bpl.n	8004c9a <UART_AdvFeatureConfig+0xa6>
 8004c8c:	6802      	ldr	r2, [r0, #0]
 8004c8e:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8004c90:	6853      	ldr	r3, [r2, #4]
 8004c92:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004c96:	430b      	orrs	r3, r1
 8004c98:	6053      	str	r3, [r2, #4]
 8004c9a:	bd10      	pop	{r4, pc}

08004c9c <UART_WaitOnFlagUntilTimeout>:
 8004c9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ca0:	9d06      	ldr	r5, [sp, #24]
 8004ca2:	4604      	mov	r4, r0
 8004ca4:	460f      	mov	r7, r1
 8004ca6:	4616      	mov	r6, r2
 8004ca8:	4698      	mov	r8, r3
 8004caa:	6821      	ldr	r1, [r4, #0]
 8004cac:	69ca      	ldr	r2, [r1, #28]
 8004cae:	ea37 0302 	bics.w	r3, r7, r2
 8004cb2:	bf0c      	ite	eq
 8004cb4:	2201      	moveq	r2, #1
 8004cb6:	2200      	movne	r2, #0
 8004cb8:	42b2      	cmp	r2, r6
 8004cba:	d002      	beq.n	8004cc2 <UART_WaitOnFlagUntilTimeout+0x26>
 8004cbc:	2000      	movs	r0, #0
 8004cbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004cc2:	1c6b      	adds	r3, r5, #1
 8004cc4:	d0f2      	beq.n	8004cac <UART_WaitOnFlagUntilTimeout+0x10>
 8004cc6:	b99d      	cbnz	r5, 8004cf0 <UART_WaitOnFlagUntilTimeout+0x54>
 8004cc8:	6823      	ldr	r3, [r4, #0]
 8004cca:	681a      	ldr	r2, [r3, #0]
 8004ccc:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004cd0:	601a      	str	r2, [r3, #0]
 8004cd2:	689a      	ldr	r2, [r3, #8]
 8004cd4:	f022 0201 	bic.w	r2, r2, #1
 8004cd8:	609a      	str	r2, [r3, #8]
 8004cda:	2320      	movs	r3, #32
 8004cdc:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004ce0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004ce4:	2300      	movs	r3, #0
 8004ce6:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8004cea:	2003      	movs	r0, #3
 8004cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004cf0:	f7ff fd34 	bl	800475c <HAL_GetTick>
 8004cf4:	eba0 0008 	sub.w	r0, r0, r8
 8004cf8:	4285      	cmp	r5, r0
 8004cfa:	d2d6      	bcs.n	8004caa <UART_WaitOnFlagUntilTimeout+0xe>
 8004cfc:	e7e4      	b.n	8004cc8 <UART_WaitOnFlagUntilTimeout+0x2c>

08004cfe <UART_CheckIdleState>:
 8004cfe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004d00:	4604      	mov	r4, r0
 8004d02:	2600      	movs	r6, #0
 8004d04:	66c6      	str	r6, [r0, #108]	; 0x6c
 8004d06:	f7ff fd29 	bl	800475c <HAL_GetTick>
 8004d0a:	6823      	ldr	r3, [r4, #0]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	071a      	lsls	r2, r3, #28
 8004d10:	4605      	mov	r5, r0
 8004d12:	d417      	bmi.n	8004d44 <UART_CheckIdleState+0x46>
 8004d14:	6823      	ldr	r3, [r4, #0]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	075b      	lsls	r3, r3, #29
 8004d1a:	d50a      	bpl.n	8004d32 <UART_CheckIdleState+0x34>
 8004d1c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004d20:	9300      	str	r3, [sp, #0]
 8004d22:	2200      	movs	r2, #0
 8004d24:	462b      	mov	r3, r5
 8004d26:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	f7ff ffb6 	bl	8004c9c <UART_WaitOnFlagUntilTimeout>
 8004d30:	b9a0      	cbnz	r0, 8004d5c <UART_CheckIdleState+0x5e>
 8004d32:	2320      	movs	r3, #32
 8004d34:	2000      	movs	r0, #0
 8004d36:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004d3a:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 8004d3e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004d42:	e00c      	b.n	8004d5e <UART_CheckIdleState+0x60>
 8004d44:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004d48:	9300      	str	r3, [sp, #0]
 8004d4a:	4632      	mov	r2, r6
 8004d4c:	4603      	mov	r3, r0
 8004d4e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004d52:	4620      	mov	r0, r4
 8004d54:	f7ff ffa2 	bl	8004c9c <UART_WaitOnFlagUntilTimeout>
 8004d58:	2800      	cmp	r0, #0
 8004d5a:	d0db      	beq.n	8004d14 <UART_CheckIdleState+0x16>
 8004d5c:	2003      	movs	r0, #3
 8004d5e:	b002      	add	sp, #8
 8004d60:	bd70      	pop	{r4, r5, r6, pc}

08004d62 <HAL_UART_Init>:
 8004d62:	b510      	push	{r4, lr}
 8004d64:	4604      	mov	r4, r0
 8004d66:	b360      	cbz	r0, 8004dc2 <HAL_UART_Init+0x60>
 8004d68:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 8004d6c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004d70:	b91b      	cbnz	r3, 8004d7a <HAL_UART_Init+0x18>
 8004d72:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 8004d76:	f7ff fe95 	bl	8004aa4 <HAL_UART_MspInit>
 8004d7a:	6822      	ldr	r2, [r4, #0]
 8004d7c:	2324      	movs	r3, #36	; 0x24
 8004d7e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004d82:	6813      	ldr	r3, [r2, #0]
 8004d84:	f023 0301 	bic.w	r3, r3, #1
 8004d88:	6013      	str	r3, [r2, #0]
 8004d8a:	4620      	mov	r0, r4
 8004d8c:	f7ff fe8c 	bl	8004aa8 <UART_SetConfig>
 8004d90:	2801      	cmp	r0, #1
 8004d92:	d016      	beq.n	8004dc2 <HAL_UART_Init+0x60>
 8004d94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d96:	b113      	cbz	r3, 8004d9e <HAL_UART_Init+0x3c>
 8004d98:	4620      	mov	r0, r4
 8004d9a:	f7ff ff2b 	bl	8004bf4 <UART_AdvFeatureConfig>
 8004d9e:	6823      	ldr	r3, [r4, #0]
 8004da0:	685a      	ldr	r2, [r3, #4]
 8004da2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004da6:	605a      	str	r2, [r3, #4]
 8004da8:	689a      	ldr	r2, [r3, #8]
 8004daa:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004dae:	609a      	str	r2, [r3, #8]
 8004db0:	681a      	ldr	r2, [r3, #0]
 8004db2:	f042 0201 	orr.w	r2, r2, #1
 8004db6:	4620      	mov	r0, r4
 8004db8:	601a      	str	r2, [r3, #0]
 8004dba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004dbe:	f7ff bf9e 	b.w	8004cfe <UART_CheckIdleState>
 8004dc2:	2001      	movs	r0, #1
 8004dc4:	bd10      	pop	{r4, pc}

08004dc6 <mbed::Timer::start()>:
 8004dc6:	b510      	push	{r4, lr}
 8004dc8:	4604      	mov	r4, r0
 8004dca:	f7fc fe1f 	bl	8001a0c <core_util_critical_section_enter>
 8004dce:	6823      	ldr	r3, [r4, #0]
 8004dd0:	b92b      	cbnz	r3, 8004dde <mbed::Timer::start()+0x18>
 8004dd2:	68e0      	ldr	r0, [r4, #12]
 8004dd4:	f7fc fdc5 	bl	8001962 <ticker_read>
 8004dd8:	2301      	movs	r3, #1
 8004dda:	6060      	str	r0, [r4, #4]
 8004ddc:	6023      	str	r3, [r4, #0]
 8004dde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004de2:	f7fc be29 	b.w	8001a38 <core_util_critical_section_exit>

08004de6 <mbed::Timer::slicetime()>:
 8004de6:	b538      	push	{r3, r4, r5, lr}
 8004de8:	4605      	mov	r5, r0
 8004dea:	f7fc fe0f 	bl	8001a0c <core_util_critical_section_enter>
 8004dee:	682c      	ldr	r4, [r5, #0]
 8004df0:	b124      	cbz	r4, 8004dfc <mbed::Timer::slicetime()+0x16>
 8004df2:	68e8      	ldr	r0, [r5, #12]
 8004df4:	f7fc fdb5 	bl	8001962 <ticker_read>
 8004df8:	686c      	ldr	r4, [r5, #4]
 8004dfa:	1b04      	subs	r4, r0, r4
 8004dfc:	f7fc fe1c 	bl	8001a38 <core_util_critical_section_exit>
 8004e00:	4620      	mov	r0, r4
 8004e02:	bd38      	pop	{r3, r4, r5, pc}

08004e04 <mbed::Timer::read_us()>:
 8004e04:	b538      	push	{r3, r4, r5, lr}
 8004e06:	4605      	mov	r5, r0
 8004e08:	f7fc fe00 	bl	8001a0c <core_util_critical_section_enter>
 8004e0c:	4628      	mov	r0, r5
 8004e0e:	68ac      	ldr	r4, [r5, #8]
 8004e10:	f7ff ffe9 	bl	8004de6 <mbed::Timer::slicetime()>
 8004e14:	4404      	add	r4, r0
 8004e16:	f7fc fe0f 	bl	8001a38 <core_util_critical_section_exit>
 8004e1a:	4620      	mov	r0, r4
 8004e1c:	bd38      	pop	{r3, r4, r5, pc}

08004e1e <mbed::Timer::read_ms()>:
 8004e1e:	b508      	push	{r3, lr}
 8004e20:	f7ff fff0 	bl	8004e04 <mbed::Timer::read_us()>
 8004e24:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004e28:	fb90 f0f3 	sdiv	r0, r0, r3
 8004e2c:	bd08      	pop	{r3, pc}

08004e2e <mbed::Timer::reset()>:
 8004e2e:	b510      	push	{r4, lr}
 8004e30:	4604      	mov	r4, r0
 8004e32:	f7fc fdeb 	bl	8001a0c <core_util_critical_section_enter>
 8004e36:	68e0      	ldr	r0, [r4, #12]
 8004e38:	f7fc fd93 	bl	8001962 <ticker_read>
 8004e3c:	2300      	movs	r3, #0
 8004e3e:	6060      	str	r0, [r4, #4]
 8004e40:	60a3      	str	r3, [r4, #8]
 8004e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004e46:	f7fc bdf7 	b.w	8001a38 <core_util_critical_section_exit>

08004e4a <mbed::Timer::Timer()>:
 8004e4a:	2300      	movs	r3, #0
 8004e4c:	b510      	push	{r4, lr}
 8004e4e:	6003      	str	r3, [r0, #0]
 8004e50:	6043      	str	r3, [r0, #4]
 8004e52:	6083      	str	r3, [r0, #8]
 8004e54:	4604      	mov	r4, r0
 8004e56:	f7fc fd57 	bl	8001908 <get_us_ticker_data>
 8004e5a:	60e0      	str	r0, [r4, #12]
 8004e5c:	4620      	mov	r0, r4
 8004e5e:	f7ff ffe6 	bl	8004e2e <mbed::Timer::reset()>
 8004e62:	4620      	mov	r0, r4
 8004e64:	bd10      	pop	{r4, pc}

08004e66 <mbed::RawSerial::lock()>:
 8004e66:	4770      	bx	lr

08004e68 <mbed::RawSerial::~RawSerial()>:
 8004e68:	b510      	push	{r4, lr}
 8004e6a:	4b03      	ldr	r3, [pc, #12]	; (8004e78 <mbed::RawSerial::~RawSerial()+0x10>)
 8004e6c:	6003      	str	r3, [r0, #0]
 8004e6e:	4604      	mov	r4, r0
 8004e70:	f7fc fa22 	bl	80012b8 <mbed::SerialBase::~SerialBase()>
 8004e74:	4620      	mov	r0, r4
 8004e76:	bd10      	pop	{r4, pc}
 8004e78:	08007068 	.word	0x08007068

08004e7c <mbed::RawSerial::~RawSerial()>:
 8004e7c:	b510      	push	{r4, lr}
 8004e7e:	4604      	mov	r4, r0
 8004e80:	f7ff fff2 	bl	8004e68 <mbed::RawSerial::~RawSerial()>
 8004e84:	4620      	mov	r0, r4
 8004e86:	f000 fb25 	bl	80054d4 <operator delete(void*)>
 8004e8a:	4620      	mov	r0, r4
 8004e8c:	bd10      	pop	{r4, pc}
	...

08004e90 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004e90:	b510      	push	{r4, lr}
 8004e92:	4604      	mov	r4, r0
 8004e94:	f000 f92a 	bl	80050ec <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004e98:	4b01      	ldr	r3, [pc, #4]	; (8004ea0 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004e9a:	6023      	str	r3, [r4, #0]
 8004e9c:	4620      	mov	r0, r4
 8004e9e:	bd10      	pop	{r4, pc}
 8004ea0:	08007068 	.word	0x08007068

08004ea4 <mbed::donothing()>:
 8004ea4:	4770      	bx	lr

08004ea6 <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8004ea6:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004eaa:	f102 000c 	add.w	r0, r2, #12
 8004eae:	6993      	ldr	r3, [r2, #24]
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	4718      	bx	r3

08004eb4 <mbed::CAN::lock()>:
 8004eb4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004eb8:	309c      	adds	r0, #156	; 0x9c
 8004eba:	f000 bb2f 	b.w	800551c <rtos::Mutex::lock(unsigned long)>

08004ebe <mbed::CAN::unlock()>:
 8004ebe:	309c      	adds	r0, #156	; 0x9c
 8004ec0:	f000 bb2f 	b.w	8005522 <rtos::Mutex::unlock()>

08004ec4 <mbed::CAN::frequency(int)>:
 8004ec4:	b570      	push	{r4, r5, r6, lr}
 8004ec6:	4605      	mov	r5, r0
 8004ec8:	460e      	mov	r6, r1
 8004eca:	f855 3b04 	ldr.w	r3, [r5], #4
 8004ece:	689b      	ldr	r3, [r3, #8]
 8004ed0:	4604      	mov	r4, r0
 8004ed2:	4798      	blx	r3
 8004ed4:	4631      	mov	r1, r6
 8004ed6:	4628      	mov	r0, r5
 8004ed8:	f7fe fad2 	bl	8003480 <can_frequency>
 8004edc:	6823      	ldr	r3, [r4, #0]
 8004ede:	4605      	mov	r5, r0
 8004ee0:	68db      	ldr	r3, [r3, #12]
 8004ee2:	4620      	mov	r0, r4
 8004ee4:	4798      	blx	r3
 8004ee6:	4628      	mov	r0, r5
 8004ee8:	bd70      	pop	{r4, r5, r6, pc}

08004eea <mbed::CAN::write(mbed::CANMessage)>:
 8004eea:	b084      	sub	sp, #16
 8004eec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004eee:	4606      	mov	r6, r0
 8004ef0:	ac07      	add	r4, sp, #28
 8004ef2:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8004ef6:	f856 3b04 	ldr.w	r3, [r6], #4
 8004efa:	689b      	ldr	r3, [r3, #8]
 8004efc:	4605      	mov	r5, r0
 8004efe:	4798      	blx	r3
 8004f00:	2300      	movs	r3, #0
 8004f02:	9301      	str	r3, [sp, #4]
 8004f04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004f06:	9300      	str	r3, [sp, #0]
 8004f08:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8004f0c:	4630      	mov	r0, r6
 8004f0e:	f7fe fafd 	bl	800350c <can_write>
 8004f12:	682b      	ldr	r3, [r5, #0]
 8004f14:	4604      	mov	r4, r0
 8004f16:	68db      	ldr	r3, [r3, #12]
 8004f18:	4628      	mov	r0, r5
 8004f1a:	4798      	blx	r3
 8004f1c:	4620      	mov	r0, r4
 8004f1e:	b002      	add	sp, #8
 8004f20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f24:	b004      	add	sp, #16
 8004f26:	4770      	bx	lr

08004f28 <mbed::CAN::read(mbed::CANMessage&, int)>:
 8004f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f2a:	4605      	mov	r5, r0
 8004f2c:	460e      	mov	r6, r1
 8004f2e:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f32:	4617      	mov	r7, r2
 8004f34:	689b      	ldr	r3, [r3, #8]
 8004f36:	4604      	mov	r4, r0
 8004f38:	4798      	blx	r3
 8004f3a:	463a      	mov	r2, r7
 8004f3c:	4631      	mov	r1, r6
 8004f3e:	4628      	mov	r0, r5
 8004f40:	f7fe fb35 	bl	80035ae <can_read>
 8004f44:	6823      	ldr	r3, [r4, #0]
 8004f46:	4605      	mov	r5, r0
 8004f48:	68db      	ldr	r3, [r3, #12]
 8004f4a:	4620      	mov	r0, r4
 8004f4c:	4798      	blx	r3
 8004f4e:	4628      	mov	r0, r5
 8004f50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004f54 <mbed::CAN::~CAN()>:
 8004f54:	b570      	push	{r4, r5, r6, lr}
 8004f56:	4604      	mov	r4, r0
 8004f58:	4b0d      	ldr	r3, [pc, #52]	; (8004f90 <mbed::CAN::~CAN()+0x3c>)
 8004f5a:	f844 3b04 	str.w	r3, [r4], #4
 8004f5e:	4605      	mov	r5, r0
 8004f60:	4620      	mov	r0, r4
 8004f62:	f7fe fa69 	bl	8003438 <can_irq_free>
 8004f66:	4620      	mov	r0, r4
 8004f68:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 8004f6c:	f7fe fa72 	bl	8003454 <can_free>
 8004f70:	4620      	mov	r0, r4
 8004f72:	f000 fad9 	bl	8005528 <rtos::Mutex::~Mutex()>
 8004f76:	f115 060c 	adds.w	r6, r5, #12
 8004f7a:	d006      	beq.n	8004f8a <mbed::CAN::~CAN()+0x36>
 8004f7c:	42b4      	cmp	r4, r6
 8004f7e:	d004      	beq.n	8004f8a <mbed::CAN::~CAN()+0x36>
 8004f80:	3c10      	subs	r4, #16
 8004f82:	4620      	mov	r0, r4
 8004f84:	f7fc f98f 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8004f88:	e7f8      	b.n	8004f7c <mbed::CAN::~CAN()+0x28>
 8004f8a:	4628      	mov	r0, r5
 8004f8c:	bd70      	pop	{r4, r5, r6, pc}
 8004f8e:	bf00      	nop
 8004f90:	08007080 	.word	0x08007080

08004f94 <mbed::CAN::~CAN()>:
 8004f94:	b510      	push	{r4, lr}
 8004f96:	4604      	mov	r4, r0
 8004f98:	f7ff ffdc 	bl	8004f54 <mbed::CAN::~CAN()>
 8004f9c:	4620      	mov	r0, r4
 8004f9e:	f000 fa99 	bl	80054d4 <operator delete(void*)>
 8004fa2:	4620      	mov	r0, r4
 8004fa4:	bd10      	pop	{r4, pc}

08004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004fa6:	4288      	cmp	r0, r1
 8004fa8:	b538      	push	{r3, r4, r5, lr}
 8004faa:	4604      	mov	r4, r0
 8004fac:	460d      	mov	r5, r1
 8004fae:	d00a      	beq.n	8004fc6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004fb0:	f7fc f979 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8004fb4:	b13c      	cbz	r4, 8004fc6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004fb6:	68eb      	ldr	r3, [r5, #12]
 8004fb8:	b11b      	cbz	r3, 8004fc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004fba:	685b      	ldr	r3, [r3, #4]
 8004fbc:	4629      	mov	r1, r5
 8004fbe:	4620      	mov	r0, r4
 8004fc0:	4798      	blx	r3
 8004fc2:	68eb      	ldr	r3, [r5, #12]
 8004fc4:	60e3      	str	r3, [r4, #12]
 8004fc6:	4620      	mov	r0, r4
 8004fc8:	bd38      	pop	{r3, r4, r5, pc}
	...

08004fcc <mbed::CAN::CAN(PinName, PinName)>:
 8004fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8004fd0:	4b1a      	ldr	r3, [pc, #104]	; (800503c <mbed::CAN::CAN(PinName, PinName)+0x70>)
 8004fd2:	6003      	str	r3, [r0, #0]
 8004fd4:	4617      	mov	r7, r2
 8004fd6:	f100 030c 	add.w	r3, r0, #12
 8004fda:	2200      	movs	r2, #0
 8004fdc:	4604      	mov	r4, r0
 8004fde:	460e      	mov	r6, r1
 8004fe0:	6042      	str	r2, [r0, #4]
 8004fe2:	6082      	str	r2, [r0, #8]
 8004fe4:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8004fe8:	461d      	mov	r5, r3
 8004fea:	60da      	str	r2, [r3, #12]
 8004fec:	3310      	adds	r3, #16
 8004fee:	4543      	cmp	r3, r8
 8004ff0:	d1fb      	bne.n	8004fea <mbed::CAN::CAN(PinName, PinName)+0x1e>
 8004ff2:	4640      	mov	r0, r8
 8004ff4:	f000 fa7a 	bl	80054ec <rtos::Mutex::Mutex()>
 8004ff8:	f8df a048 	ldr.w	r10, [pc, #72]	; 8005044 <mbed::CAN::CAN(PinName, PinName)+0x78>
 8004ffc:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8005048 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8005000:	4545      	cmp	r5, r8
 8005002:	d00c      	beq.n	800501e <mbed::CAN::CAN(PinName, PinName)+0x52>
 8005004:	4669      	mov	r1, sp
 8005006:	4628      	mov	r0, r5
 8005008:	f8cd a000 	str.w	r10, [sp]
 800500c:	f8cd 900c 	str.w	r9, [sp, #12]
 8005010:	f7ff ffc9 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005014:	4668      	mov	r0, sp
 8005016:	f7fc f946 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 800501a:	3510      	adds	r5, #16
 800501c:	e7f0      	b.n	8005000 <mbed::CAN::CAN(PinName, PinName)+0x34>
 800501e:	1d25      	adds	r5, r4, #4
 8005020:	463a      	mov	r2, r7
 8005022:	4631      	mov	r1, r6
 8005024:	4628      	mov	r0, r5
 8005026:	f7fe fb43 	bl	80036b0 <can_init>
 800502a:	4628      	mov	r0, r5
 800502c:	4622      	mov	r2, r4
 800502e:	4904      	ldr	r1, [pc, #16]	; (8005040 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 8005030:	f7fe f9f6 	bl	8003420 <can_irq_init>
 8005034:	4620      	mov	r0, r4
 8005036:	b004      	add	sp, #16
 8005038:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800503c:	08007080 	.word	0x08007080
 8005040:	08004ea7 	.word	0x08004ea7
 8005044:	08004ea5 	.word	0x08004ea5
 8005048:	08006a34 	.word	0x08006a34

0800504c <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>:
 800504c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005050:	4605      	mov	r5, r0
 8005052:	4688      	mov	r8, r1
 8005054:	f855 3b04 	ldr.w	r3, [r5], #4
 8005058:	689b      	ldr	r3, [r3, #8]
 800505a:	4604      	mov	r4, r0
 800505c:	4616      	mov	r6, r2
 800505e:	4798      	blx	r3
 8005060:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005064:	0130      	lsls	r0, r6, #4
 8005066:	b187      	cbz	r7, 800508a <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x3e>
 8005068:	300c      	adds	r0, #12
 800506a:	4641      	mov	r1, r8
 800506c:	4420      	add	r0, r4
 800506e:	f7ff ff9a 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005072:	2201      	movs	r2, #1
 8005074:	4631      	mov	r1, r6
 8005076:	4628      	mov	r0, r5
 8005078:	f7fe fb8a 	bl	8003790 <can_irq_set>
 800507c:	6823      	ldr	r3, [r4, #0]
 800507e:	4620      	mov	r0, r4
 8005080:	68db      	ldr	r3, [r3, #12]
 8005082:	4798      	blx	r3
 8005084:	b004      	add	sp, #16
 8005086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800508a:	4b07      	ldr	r3, [pc, #28]	; (80050a8 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x5c>)
 800508c:	9300      	str	r3, [sp, #0]
 800508e:	300c      	adds	r0, #12
 8005090:	4b06      	ldr	r3, [pc, #24]	; (80050ac <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x60>)
 8005092:	9303      	str	r3, [sp, #12]
 8005094:	4669      	mov	r1, sp
 8005096:	4420      	add	r0, r4
 8005098:	f7ff ff85 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800509c:	4668      	mov	r0, sp
 800509e:	f7fc f902 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 80050a2:	463a      	mov	r2, r7
 80050a4:	e7e6      	b.n	8005074 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x28>
 80050a6:	bf00      	nop
 80050a8:	08004ea5 	.word	0x08004ea5
 80050ac:	08006a34 	.word	0x08006a34

080050b0 <mbed::donothing()>:
 80050b0:	4770      	bx	lr

080050b2 <mbed::SerialBase::lock()>:
 80050b2:	4770      	bx	lr

080050b4 <mbed::SerialBase::unlock()>:
 80050b4:	4770      	bx	lr

080050b6 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 80050b6:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 80050ba:	f102 0028 	add.w	r0, r2, #40	; 0x28
 80050be:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	4718      	bx	r3

080050c4 <mbed::SerialBase::baud(int)>:
 80050c4:	b570      	push	{r4, r5, r6, lr}
 80050c6:	4605      	mov	r5, r0
 80050c8:	4604      	mov	r4, r0
 80050ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80050ce:	460e      	mov	r6, r1
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	4798      	blx	r3
 80050d4:	4628      	mov	r0, r5
 80050d6:	4631      	mov	r1, r6
 80050d8:	f7fe fdda 	bl	8003c90 <serial_baud>
 80050dc:	6823      	ldr	r3, [r4, #0]
 80050de:	64a6      	str	r6, [r4, #72]	; 0x48
 80050e0:	4620      	mov	r0, r4
 80050e2:	685b      	ldr	r3, [r3, #4]
 80050e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80050e8:	4718      	bx	r3
	...

080050ec <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 80050ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80050f0:	4605      	mov	r5, r0
 80050f2:	461e      	mov	r6, r3
 80050f4:	4b1b      	ldr	r3, [pc, #108]	; (8005164 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
 80050f6:	f845 3b04 	str.w	r3, [r5], #4
 80050fa:	b085      	sub	sp, #20
 80050fc:	4604      	mov	r4, r0
 80050fe:	4688      	mov	r8, r1
 8005100:	4691      	mov	r9, r2
 8005102:	2100      	movs	r1, #0
 8005104:	2224      	movs	r2, #36	; 0x24
 8005106:	4628      	mov	r0, r5
 8005108:	f000 fef7 	bl	8005efa <memset>
 800510c:	2200      	movs	r2, #0
 800510e:	6362      	str	r2, [r4, #52]	; 0x34
 8005110:	6462      	str	r2, [r4, #68]	; 0x44
 8005112:	4669      	mov	r1, sp
 8005114:	64a6      	str	r6, [r4, #72]	; 0x48
 8005116:	4f14      	ldr	r7, [pc, #80]	; (8005168 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
 8005118:	4e14      	ldr	r6, [pc, #80]	; (800516c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x80>)
 800511a:	9700      	str	r7, [sp, #0]
 800511c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8005120:	9603      	str	r6, [sp, #12]
 8005122:	f7ff ff40 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005126:	4668      	mov	r0, sp
 8005128:	f7fc f8bd 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 800512c:	4669      	mov	r1, sp
 800512e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8005132:	9700      	str	r7, [sp, #0]
 8005134:	9603      	str	r6, [sp, #12]
 8005136:	f7ff ff36 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800513a:	4668      	mov	r0, sp
 800513c:	f7fc f8b3 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 8005140:	464a      	mov	r2, r9
 8005142:	4641      	mov	r1, r8
 8005144:	4628      	mov	r0, r5
 8005146:	f7fe fcfd 	bl	8003b44 <serial_init>
 800514a:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800514c:	4628      	mov	r0, r5
 800514e:	f7fe fd9f 	bl	8003c90 <serial_baud>
 8005152:	4628      	mov	r0, r5
 8005154:	4622      	mov	r2, r4
 8005156:	4906      	ldr	r1, [pc, #24]	; (8005170 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x84>)
 8005158:	f7fe fd9e 	bl	8003c98 <serial_irq_handler>
 800515c:	4620      	mov	r0, r4
 800515e:	b005      	add	sp, #20
 8005160:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005164:	08007098 	.word	0x08007098
 8005168:	080050b1 	.word	0x080050b1
 800516c:	08006a34 	.word	0x08006a34
 8005170:	080050b7 	.word	0x080050b7

08005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8005174:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005178:	4605      	mov	r5, r0
 800517a:	4688      	mov	r8, r1
 800517c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	4604      	mov	r4, r0
 8005184:	4616      	mov	r6, r2
 8005186:	4798      	blx	r3
 8005188:	f7fc fc40 	bl	8001a0c <core_util_critical_section_enter>
 800518c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005190:	0130      	lsls	r0, r6, #4
 8005192:	b197      	cbz	r7, 80051ba <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005194:	3028      	adds	r0, #40	; 0x28
 8005196:	4641      	mov	r1, r8
 8005198:	4420      	add	r0, r4
 800519a:	f7ff ff04 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800519e:	2201      	movs	r2, #1
 80051a0:	4631      	mov	r1, r6
 80051a2:	4628      	mov	r0, r5
 80051a4:	f7fe fd84 	bl	8003cb0 <serial_irq_set>
 80051a8:	f7fc fc46 	bl	8001a38 <core_util_critical_section_exit>
 80051ac:	6823      	ldr	r3, [r4, #0]
 80051ae:	4620      	mov	r0, r4
 80051b0:	685b      	ldr	r3, [r3, #4]
 80051b2:	4798      	blx	r3
 80051b4:	b004      	add	sp, #16
 80051b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051ba:	4b07      	ldr	r3, [pc, #28]	; (80051d8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 80051bc:	9300      	str	r3, [sp, #0]
 80051be:	3028      	adds	r0, #40	; 0x28
 80051c0:	4b06      	ldr	r3, [pc, #24]	; (80051dc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 80051c2:	9303      	str	r3, [sp, #12]
 80051c4:	4669      	mov	r1, sp
 80051c6:	4420      	add	r0, r4
 80051c8:	f7ff feed 	bl	8004fa6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80051cc:	4668      	mov	r0, sp
 80051ce:	f7fc f86a 	bl	80012a6 <mbed::Callback<void ()>::~Callback()>
 80051d2:	463a      	mov	r2, r7
 80051d4:	e7e4      	b.n	80051a0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 80051d6:	bf00      	nop
 80051d8:	080050b1 	.word	0x080050b1
 80051dc:	08006a34 	.word	0x08006a34

080051e0 <mbed::Callback<void (int)>::~Callback()>:
 80051e0:	68c3      	ldr	r3, [r0, #12]
 80051e2:	b510      	push	{r4, lr}
 80051e4:	4604      	mov	r4, r0
 80051e6:	b10b      	cbz	r3, 80051ec <mbed::Callback<void (int)>::~Callback()+0xc>
 80051e8:	689b      	ldr	r3, [r3, #8]
 80051ea:	4798      	blx	r3
 80051ec:	4620      	mov	r0, r4
 80051ee:	bd10      	pop	{r4, pc}

080051f0 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80051f0:	b538      	push	{r3, r4, r5, lr}
 80051f2:	4604      	mov	r4, r0
 80051f4:	b148      	cbz	r0, 800520a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80051f6:	3058      	adds	r0, #88	; 0x58
 80051f8:	42a0      	cmp	r0, r4
 80051fa:	d006      	beq.n	800520a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80051fc:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8005200:	3814      	subs	r0, #20
 8005202:	f7ff ffed 	bl	80051e0 <mbed::Callback<void (int)>::~Callback()>
 8005206:	4628      	mov	r0, r5
 8005208:	e7f6      	b.n	80051f8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 800520a:	4620      	mov	r0, r4
 800520c:	bd38      	pop	{r3, r4, r5, pc}
	...

08005210 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005210:	b570      	push	{r4, r5, r6, lr}
 8005212:	4c0e      	ldr	r4, [pc, #56]	; (800524c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005214:	4620      	mov	r0, r4
 8005216:	2500      	movs	r5, #0
 8005218:	2628      	movs	r6, #40	; 0x28
 800521a:	4632      	mov	r2, r6
 800521c:	4629      	mov	r1, r5
 800521e:	f840 5b04 	str.w	r5, [r0], #4
 8005222:	f000 fe6a 	bl	8005efa <memset>
 8005226:	4632      	mov	r2, r6
 8005228:	4629      	mov	r1, r5
 800522a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800522e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005230:	f000 fe63 	bl	8005efa <memset>
 8005234:	65a5      	str	r5, [r4, #88]	; 0x58
 8005236:	4620      	mov	r0, r4
 8005238:	65e5      	str	r5, [r4, #92]	; 0x5c
 800523a:	4a05      	ldr	r2, [pc, #20]	; (8005250 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 800523c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005240:	4904      	ldr	r1, [pc, #16]	; (8005254 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005242:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005246:	f000 b927 	b.w	8005498 <__aeabi_atexit>
 800524a:	bf00      	nop
 800524c:	200014e4 	.word	0x200014e4
 8005250:	20000188 	.word	0x20000188
 8005254:	080051f1 	.word	0x080051f1

08005258 <__wrap__malloc_r>:
 8005258:	f000 bea6 	b.w	8005fa8 <_malloc_r>

0800525c <__wrap__realloc_r>:
 800525c:	f000 bf02 	b.w	8006064 <_realloc_r>

08005260 <__wrap__free_r>:
 8005260:	f000 be54 	b.w	8005f0c <_free_r>

08005264 <wait_us>:
 8005264:	b570      	push	{r4, r5, r6, lr}
 8005266:	4605      	mov	r5, r0
 8005268:	f7fe fae0 	bl	800382c <us_ticker_read>
 800526c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005270:	fb95 f4f4 	sdiv	r4, r5, r4
 8005274:	2c00      	cmp	r4, #0
 8005276:	4606      	mov	r6, r0
 8005278:	dd02      	ble.n	8005280 <wait_us+0x1c>
 800527a:	f7fc fbc1 	bl	8001a00 <core_util_are_interrupts_enabled>
 800527e:	b928      	cbnz	r0, 800528c <wait_us+0x28>
 8005280:	f7fe fad4 	bl	800382c <us_ticker_read>
 8005284:	1b80      	subs	r0, r0, r6
 8005286:	42a8      	cmp	r0, r5
 8005288:	d3fa      	bcc.n	8005280 <wait_us+0x1c>
 800528a:	bd70      	pop	{r4, r5, r6, pc}
 800528c:	4620      	mov	r0, r4
 800528e:	f000 f92b 	bl	80054e8 <rtos::Thread::wait(unsigned long)>
 8005292:	e7f5      	b.n	8005280 <wait_us+0x1c>

08005294 <wait_ms>:
 8005294:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005298:	4358      	muls	r0, r3
 800529a:	f7ff bfe3 	b.w	8005264 <wait_us>
	...

080052a0 <init_serial()>:
 80052a0:	b508      	push	{r3, lr}
 80052a2:	4b08      	ldr	r3, [pc, #32]	; (80052c4 <init_serial()+0x24>)
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	b95b      	cbnz	r3, 80052c0 <init_serial()+0x20>
 80052a8:	2102      	movs	r1, #2
 80052aa:	4807      	ldr	r0, [pc, #28]	; (80052c8 <init_serial()+0x28>)
 80052ac:	220f      	movs	r2, #15
 80052ae:	f7fe fc49 	bl	8003b44 <serial_init>
 80052b2:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 80052b6:	4804      	ldr	r0, [pc, #16]	; (80052c8 <init_serial()+0x28>)
 80052b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80052bc:	f7fe bce8 	b.w	8003c90 <serial_baud>
 80052c0:	bd08      	pop	{r3, pc}
 80052c2:	bf00      	nop
 80052c4:	200012b0 	.word	0x200012b0
 80052c8:	20001ee0 	.word	0x20001ee0

080052cc <_close>:
 80052cc:	2802      	cmp	r0, #2
 80052ce:	b510      	push	{r4, lr}
 80052d0:	4604      	mov	r4, r0
 80052d2:	dc01      	bgt.n	80052d8 <_close+0xc>
 80052d4:	2000      	movs	r0, #0
 80052d6:	bd10      	pop	{r4, pc}
 80052d8:	f000 fbce 	bl	8005a78 <__errno>
 80052dc:	2309      	movs	r3, #9
 80052de:	6003      	str	r3, [r0, #0]
 80052e0:	3c03      	subs	r4, #3
 80052e2:	4b09      	ldr	r3, [pc, #36]	; (8005308 <_close+0x3c>)
 80052e4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80052e8:	2200      	movs	r2, #0
 80052ea:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80052ee:	b140      	cbz	r0, 8005302 <_close+0x36>
 80052f0:	6803      	ldr	r3, [r0, #0]
 80052f2:	691b      	ldr	r3, [r3, #16]
 80052f4:	4798      	blx	r3
 80052f6:	1e04      	subs	r4, r0, #0
 80052f8:	daec      	bge.n	80052d4 <_close+0x8>
 80052fa:	f000 fbbd 	bl	8005a78 <__errno>
 80052fe:	4264      	negs	r4, r4
 8005300:	6004      	str	r4, [r0, #0]
 8005302:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005306:	bd10      	pop	{r4, pc}
 8005308:	20001548 	.word	0x20001548

0800530c <_write>:
 800530c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800530e:	4605      	mov	r5, r0
 8005310:	460e      	mov	r6, r1
 8005312:	4614      	mov	r4, r2
 8005314:	f000 fbb0 	bl	8005a78 <__errno>
 8005318:	2309      	movs	r3, #9
 800531a:	2d02      	cmp	r5, #2
 800531c:	6003      	str	r3, [r0, #0]
 800531e:	dc0f      	bgt.n	8005340 <_write+0x34>
 8005320:	4b12      	ldr	r3, [pc, #72]	; (800536c <_write+0x60>)
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	b90b      	cbnz	r3, 800532a <_write+0x1e>
 8005326:	f7ff ffbb 	bl	80052a0 <init_serial()>
 800532a:	4635      	mov	r5, r6
 800532c:	1937      	adds	r7, r6, r4
 800532e:	4e10      	ldr	r6, [pc, #64]	; (8005370 <_write+0x64>)
 8005330:	42bd      	cmp	r5, r7
 8005332:	d015      	beq.n	8005360 <_write+0x54>
 8005334:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005338:	4630      	mov	r0, r6
 800533a:	f7fe fd47 	bl	8003dcc <serial_putc>
 800533e:	e7f7      	b.n	8005330 <_write+0x24>
 8005340:	3d03      	subs	r5, #3
 8005342:	4b0c      	ldr	r3, [pc, #48]	; (8005374 <_write+0x68>)
 8005344:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005348:	b160      	cbz	r0, 8005364 <_write+0x58>
 800534a:	6803      	ldr	r3, [r0, #0]
 800534c:	4622      	mov	r2, r4
 800534e:	68db      	ldr	r3, [r3, #12]
 8005350:	4631      	mov	r1, r6
 8005352:	4798      	blx	r3
 8005354:	1e04      	subs	r4, r0, #0
 8005356:	da03      	bge.n	8005360 <_write+0x54>
 8005358:	f000 fb8e 	bl	8005a78 <__errno>
 800535c:	4263      	negs	r3, r4
 800535e:	6003      	str	r3, [r0, #0]
 8005360:	4620      	mov	r0, r4
 8005362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005364:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005368:	e7fa      	b.n	8005360 <_write+0x54>
 800536a:	bf00      	nop
 800536c:	200012b0 	.word	0x200012b0
 8005370:	20001ee0 	.word	0x20001ee0
 8005374:	20001548 	.word	0x20001548

08005378 <_read>:
 8005378:	b570      	push	{r4, r5, r6, lr}
 800537a:	4604      	mov	r4, r0
 800537c:	460d      	mov	r5, r1
 800537e:	4616      	mov	r6, r2
 8005380:	f000 fb7a 	bl	8005a78 <__errno>
 8005384:	2309      	movs	r3, #9
 8005386:	2c02      	cmp	r4, #2
 8005388:	6003      	str	r3, [r0, #0]
 800538a:	dc0b      	bgt.n	80053a4 <_read+0x2c>
 800538c:	4b0f      	ldr	r3, [pc, #60]	; (80053cc <_read+0x54>)
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	b90b      	cbnz	r3, 8005396 <_read+0x1e>
 8005392:	f7ff ff85 	bl	80052a0 <init_serial()>
 8005396:	480e      	ldr	r0, [pc, #56]	; (80053d0 <_read+0x58>)
 8005398:	f7fe fcf6 	bl	8003d88 <serial_getc>
 800539c:	2401      	movs	r4, #1
 800539e:	7028      	strb	r0, [r5, #0]
 80053a0:	4620      	mov	r0, r4
 80053a2:	bd70      	pop	{r4, r5, r6, pc}
 80053a4:	3c03      	subs	r4, #3
 80053a6:	4b0b      	ldr	r3, [pc, #44]	; (80053d4 <_read+0x5c>)
 80053a8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80053ac:	b158      	cbz	r0, 80053c6 <_read+0x4e>
 80053ae:	6803      	ldr	r3, [r0, #0]
 80053b0:	4632      	mov	r2, r6
 80053b2:	689b      	ldr	r3, [r3, #8]
 80053b4:	4629      	mov	r1, r5
 80053b6:	4798      	blx	r3
 80053b8:	1e04      	subs	r4, r0, #0
 80053ba:	daf1      	bge.n	80053a0 <_read+0x28>
 80053bc:	f000 fb5c 	bl	8005a78 <__errno>
 80053c0:	4263      	negs	r3, r4
 80053c2:	6003      	str	r3, [r0, #0]
 80053c4:	e7ec      	b.n	80053a0 <_read+0x28>
 80053c6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80053ca:	e7e9      	b.n	80053a0 <_read+0x28>
 80053cc:	200012b0 	.word	0x200012b0
 80053d0:	20001ee0 	.word	0x20001ee0
 80053d4:	20001548 	.word	0x20001548

080053d8 <_lseek>:
 80053d8:	b570      	push	{r4, r5, r6, lr}
 80053da:	4604      	mov	r4, r0
 80053dc:	460d      	mov	r5, r1
 80053de:	4616      	mov	r6, r2
 80053e0:	f000 fb4a 	bl	8005a78 <__errno>
 80053e4:	2309      	movs	r3, #9
 80053e6:	2c02      	cmp	r4, #2
 80053e8:	6003      	str	r3, [r0, #0]
 80053ea:	dd0b      	ble.n	8005404 <_lseek+0x2c>
 80053ec:	3c03      	subs	r4, #3
 80053ee:	4b08      	ldr	r3, [pc, #32]	; (8005410 <_lseek+0x38>)
 80053f0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80053f4:	b140      	cbz	r0, 8005408 <_lseek+0x30>
 80053f6:	6803      	ldr	r3, [r0, #0]
 80053f8:	4632      	mov	r2, r6
 80053fa:	4629      	mov	r1, r5
 80053fc:	69db      	ldr	r3, [r3, #28]
 80053fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005402:	4718      	bx	r3
 8005404:	2000      	movs	r0, #0
 8005406:	bd70      	pop	{r4, r5, r6, pc}
 8005408:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800540c:	bd70      	pop	{r4, r5, r6, pc}
 800540e:	bf00      	nop
 8005410:	20001548 	.word	0x20001548

08005414 <software_init_hook>:
 8005414:	b508      	push	{r3, lr}
 8005416:	f7fe fcef 	bl	8003df8 <mbed_sdk_init>
 800541a:	f7fc fb93 	bl	8001b44 <software_init_hook_rtos>
 800541e:	bd08      	pop	{r3, pc}

08005420 <mbed_main>:
 8005420:	4770      	bx	lr

08005422 <__wrap_main>:
 8005422:	b508      	push	{r3, lr}
 8005424:	f7ff fffc 	bl	8005420 <mbed_main>
 8005428:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800542c:	f7fb be96 	b.w	800115c <main>

08005430 <_sbrk>:
 8005430:	4a0c      	ldr	r2, [pc, #48]	; (8005464 <_sbrk+0x34>)
 8005432:	6813      	ldr	r3, [r2, #0]
 8005434:	b510      	push	{r4, lr}
 8005436:	4418      	add	r0, r3
 8005438:	f3ef 8108 	mrs	r1, MSP
 800543c:	4288      	cmp	r0, r1
 800543e:	d305      	bcc.n	800544c <_sbrk+0x1c>
 8005440:	4b09      	ldr	r3, [pc, #36]	; (8005468 <_sbrk+0x38>)
 8005442:	220c      	movs	r2, #12
 8005444:	601a      	str	r2, [r3, #0]
 8005446:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800544a:	bd10      	pop	{r4, pc}
 800544c:	4907      	ldr	r1, [pc, #28]	; (800546c <_sbrk+0x3c>)
 800544e:	680c      	ldr	r4, [r1, #0]
 8005450:	b124      	cbz	r4, 800545c <_sbrk+0x2c>
 8005452:	4907      	ldr	r1, [pc, #28]	; (8005470 <_sbrk+0x40>)
 8005454:	6809      	ldr	r1, [r1, #0]
 8005456:	4421      	add	r1, r4
 8005458:	4288      	cmp	r0, r1
 800545a:	d2f1      	bcs.n	8005440 <_sbrk+0x10>
 800545c:	6010      	str	r0, [r2, #0]
 800545e:	4618      	mov	r0, r3
 8005460:	bd10      	pop	{r4, pc}
 8005462:	bf00      	nop
 8005464:	200001a8 	.word	0x200001a8
 8005468:	20001f08 	.word	0x20001f08
 800546c:	20001648 	.word	0x20001648
 8005470:	2000164c 	.word	0x2000164c

08005474 <_exit>:
 8005474:	4c07      	ldr	r4, [pc, #28]	; (8005494 <_exit+0x20>)
 8005476:	b508      	push	{r3, lr}
 8005478:	6823      	ldr	r3, [r4, #0]
 800547a:	4605      	mov	r5, r0
 800547c:	6898      	ldr	r0, [r3, #8]
 800547e:	f000 fbb3 	bl	8005be8 <fflush>
 8005482:	6823      	ldr	r3, [r4, #0]
 8005484:	68d8      	ldr	r0, [r3, #12]
 8005486:	f000 fbaf 	bl	8005be8 <fflush>
 800548a:	b10d      	cbz	r5, 8005490 <_exit+0x1c>
 800548c:	f7fc faed 	bl	8001a6a <mbed_die>
 8005490:	e7fe      	b.n	8005490 <_exit+0x1c>
 8005492:	bf00      	nop
 8005494:	200001ac 	.word	0x200001ac

08005498 <__aeabi_atexit>:
 8005498:	2001      	movs	r0, #1
 800549a:	4770      	bx	lr

0800549c <__wrap_exit>:
 800549c:	b508      	push	{r3, lr}
 800549e:	f7ff ffe9 	bl	8005474 <_exit>

080054a2 <__malloc_lock>:
 80054a2:	b508      	push	{r3, lr}
 80054a4:	f7fc fb5c 	bl	8001b60 <__rtos_malloc_lock>
 80054a8:	bd08      	pop	{r3, pc}

080054aa <__malloc_unlock>:
 80054aa:	b508      	push	{r3, lr}
 80054ac:	f7fc fb60 	bl	8001b70 <__rtos_malloc_unlock>
 80054b0:	bd08      	pop	{r3, pc}
	...

080054b4 <operator new[](unsigned int)>:
 80054b4:	b510      	push	{r4, lr}
 80054b6:	f000 fc97 	bl	8005de8 <malloc>
 80054ba:	4604      	mov	r4, r0
 80054bc:	b910      	cbnz	r0, 80054c4 <operator new[](unsigned int)+0x10>
 80054be:	4802      	ldr	r0, [pc, #8]	; (80054c8 <operator new[](unsigned int)+0x14>)
 80054c0:	f7fc face 	bl	8001a60 <error>
 80054c4:	4620      	mov	r0, r4
 80054c6:	bd10      	pop	{r4, pc}
 80054c8:	080070a8 	.word	0x080070a8

080054cc <operator delete[](void*)>:
 80054cc:	b108      	cbz	r0, 80054d2 <operator delete[](void*)+0x6>
 80054ce:	f000 bc93 	b.w	8005df8 <free>
 80054d2:	4770      	bx	lr

080054d4 <operator delete(void*)>:
 80054d4:	f7ff bffa 	b.w	80054cc <operator delete[](void*)>

080054d8 <thread_terminate_hook>:
 80054d8:	4b02      	ldr	r3, [pc, #8]	; (80054e4 <thread_terminate_hook+0xc>)
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	b103      	cbz	r3, 80054e0 <thread_terminate_hook+0x8>
 80054de:	4718      	bx	r3
 80054e0:	4770      	bx	lr
 80054e2:	bf00      	nop
 80054e4:	20001650 	.word	0x20001650

080054e8 <rtos::Thread::wait(unsigned long)>:
 80054e8:	f7fd b810 	b.w	800250c <osDelay>

080054ec <rtos::Mutex::Mutex()>:
 80054ec:	b538      	push	{r3, r4, r5, lr}
 80054ee:	f100 0508 	add.w	r5, r0, #8
 80054f2:	4604      	mov	r4, r0
 80054f4:	2210      	movs	r2, #16
 80054f6:	2100      	movs	r1, #0
 80054f8:	4628      	mov	r0, r5
 80054fa:	f000 fcfe 	bl	8005efa <memset>
 80054fe:	4620      	mov	r0, r4
 8005500:	f840 5f04 	str.w	r5, [r0, #4]!
 8005504:	f7fd f874 	bl	80025f0 <osMutexCreate>
 8005508:	6020      	str	r0, [r4, #0]
 800550a:	b910      	cbnz	r0, 8005512 <rtos::Mutex::Mutex()+0x26>
 800550c:	4802      	ldr	r0, [pc, #8]	; (8005518 <rtos::Mutex::Mutex()+0x2c>)
 800550e:	f7fc faa7 	bl	8001a60 <error>
 8005512:	4620      	mov	r0, r4
 8005514:	bd38      	pop	{r3, r4, r5, pc}
 8005516:	bf00      	nop
 8005518:	080070c7 	.word	0x080070c7

0800551c <rtos::Mutex::lock(unsigned long)>:
 800551c:	6800      	ldr	r0, [r0, #0]
 800551e:	f7fd b885 	b.w	800262c <osMutexWait>

08005522 <rtos::Mutex::unlock()>:
 8005522:	6800      	ldr	r0, [r0, #0]
 8005524:	f7fd b8aa 	b.w	800267c <osMutexRelease>

08005528 <rtos::Mutex::~Mutex()>:
 8005528:	b510      	push	{r4, lr}
 800552a:	4604      	mov	r4, r0
 800552c:	6800      	ldr	r0, [r0, #0]
 800552e:	f7fd f8eb 	bl	8002708 <osMutexDelete>
 8005532:	4620      	mov	r0, r4
 8005534:	bd10      	pop	{r4, pc}
	...

08005538 <rt_set_PSP>:
 8005538:	f380 8809 	msr	PSP, r0
 800553c:	4770      	bx	lr

0800553e <rt_get_PSP>:
 800553e:	f3ef 8009 	mrs	r0, PSP
 8005542:	4770      	bx	lr

08005544 <os_set_env>:
 8005544:	4668      	mov	r0, sp
 8005546:	f380 8809 	msr	PSP, r0
 800554a:	485a      	ldr	r0, [pc, #360]	; (80056b4 <OS_Tick_Handler+0x10>)
 800554c:	7800      	ldrb	r0, [r0, #0]
 800554e:	07c0      	lsls	r0, r0, #31
 8005550:	bf14      	ite	ne
 8005552:	2002      	movne	r0, #2
 8005554:	2003      	moveq	r0, #3
 8005556:	f380 8814 	msr	CONTROL, r0
 800555a:	4770      	bx	lr

0800555c <_alloc_box>:
 800555c:	f8df c158 	ldr.w	r12, [pc, #344]	; 80056b8 <OS_Tick_Handler+0x14>
 8005560:	f3ef 8305 	mrs	r3, IPSR
 8005564:	061b      	lsls	r3, r3, #24
 8005566:	bf18      	it	ne
 8005568:	4760      	bxne	r12
 800556a:	f3ef 8314 	mrs	r3, CONTROL
 800556e:	07db      	lsls	r3, r3, #31
 8005570:	bf08      	it	eq
 8005572:	4760      	bxeq	r12
 8005574:	df00      	svc	0
 8005576:	4770      	bx	lr

08005578 <_free_box>:
 8005578:	f8df c140 	ldr.w	r12, [pc, #320]	; 80056bc <OS_Tick_Handler+0x18>
 800557c:	f3ef 8305 	mrs	r3, IPSR
 8005580:	061b      	lsls	r3, r3, #24
 8005582:	bf18      	it	ne
 8005584:	4760      	bxne	r12
 8005586:	f3ef 8314 	mrs	r3, CONTROL
 800558a:	07db      	lsls	r3, r3, #31
 800558c:	bf08      	it	eq
 800558e:	4760      	bxeq	r12
 8005590:	df00      	svc	0
 8005592:	4770      	bx	lr

08005594 <SVC_Handler>:
 8005594:	f3ef 8009 	mrs	r0, PSP
 8005598:	6981      	ldr	r1, [r0, #24]
 800559a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800559e:	bbe1      	cbnz	r1, 800561a <SVC_User>
 80055a0:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80055a4:	b510      	push	{r4, lr}
 80055a6:	47e0      	blx	r12
 80055a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80055ac:	f3ef 8c09 	mrs	r12, PSP
 80055b0:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80055b4:	4b42      	ldr	r3, [pc, #264]	; (80056c0 <OS_Tick_Handler+0x1c>)
 80055b6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80055ba:	4291      	cmp	r1, r2
 80055bc:	bf08      	it	eq
 80055be:	4770      	bxeq	lr
 80055c0:	b941      	cbnz	r1, 80055d4 <SVC_ContextSave>
 80055c2:	f01e 0f10 	tst.w	lr, #16
 80055c6:	d116      	bne.n	80055f6 <SVC_ContextRestore>
 80055c8:	493e      	ldr	r1, [pc, #248]	; (80056c4 <OS_Tick_Handler+0x20>)
 80055ca:	6808      	ldr	r0, [r1, #0]
 80055cc:	f020 0001 	bic.w	r0, r0, #1
 80055d0:	6008      	str	r0, [r1, #0]
 80055d2:	e010      	b.n	80055f6 <SVC_ContextRestore>

080055d4 <SVC_ContextSave>:
 80055d4:	f01e 0f10 	tst.w	lr, #16
 80055d8:	bf06      	itte	eq
 80055da:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80055de:	2001      	moveq	r0, #1
 80055e0:	2000      	movne	r0, #0
 80055e2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80055e6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80055ea:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80055ee:	b40c      	push	{r2, r3}
 80055f0:	f7fc fc42 	bl	8001e78 <rt_stk_check>
 80055f4:	bc0c      	pop	{r2, r3}

080055f6 <SVC_ContextRestore>:
 80055f6:	601a      	str	r2, [r3, #0]
 80055f8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80055fc:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005600:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005604:	2800      	cmp	r0, #0
 8005606:	bf0e      	itee	eq
 8005608:	f06f 0e02 	mvneq.w	lr, #2
 800560c:	f06f 0e12 	mvnne.w	lr, #18
 8005610:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005614:	f38c 8809 	msr	PSP, r12

08005618 <SVC_Exit>:
 8005618:	4770      	bx	lr

0800561a <SVC_User>:
 800561a:	b510      	push	{r4, lr}
 800561c:	4a2a      	ldr	r2, [pc, #168]	; (80056c8 <OS_Tick_Handler+0x24>)
 800561e:	6812      	ldr	r2, [r2, #0]
 8005620:	4291      	cmp	r1, r2
 8005622:	d809      	bhi.n	8005638 <SVC_Done>
 8005624:	4c29      	ldr	r4, [pc, #164]	; (80056cc <OS_Tick_Handler+0x28>)
 8005626:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 800562a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800562e:	47a0      	blx	r4
 8005630:	f3ef 8c09 	mrs	r12, PSP
 8005634:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005638 <SVC_Done>:
 8005638:	bd10      	pop	{r4, pc}

0800563a <PendSV_Handler>:
 800563a:	b510      	push	{r4, lr}
 800563c:	f7fc fba8 	bl	8001d90 <rt_pop_req>

08005640 <Sys_Switch>:
 8005640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005644:	4b1e      	ldr	r3, [pc, #120]	; (80056c0 <OS_Tick_Handler+0x1c>)
 8005646:	e893 0006 	ldmia.w	r3, {r1, r2}
 800564a:	4291      	cmp	r1, r2
 800564c:	bf08      	it	eq
 800564e:	4770      	bxeq	lr
 8005650:	f3ef 8c09 	mrs	r12, PSP
 8005654:	f01e 0f10 	tst.w	lr, #16
 8005658:	bf06      	itte	eq
 800565a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800565e:	2001      	moveq	r0, #1
 8005660:	2000      	movne	r0, #0
 8005662:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005666:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800566a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800566e:	b40c      	push	{r2, r3}
 8005670:	f7fc fc02 	bl	8001e78 <rt_stk_check>
 8005674:	bc0c      	pop	{r2, r3}
 8005676:	601a      	str	r2, [r3, #0]
 8005678:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800567c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005680:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005684:	2800      	cmp	r0, #0
 8005686:	bf0e      	itee	eq
 8005688:	f06f 0e02 	mvneq.w	lr, #2
 800568c:	f06f 0e12 	mvnne.w	lr, #18
 8005690:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005694:	f38c 8809 	msr	PSP, r12

08005698 <Sys_Exit>:
 8005698:	4770      	bx	lr

0800569a <SysTick_Handler>:
 800569a:	b510      	push	{r4, lr}
 800569c:	f7fc fbce 	bl	8001e3c <rt_systick>
 80056a0:	f7ff bfce 	b.w	8005640 <Sys_Switch>

080056a4 <OS_Tick_Handler>:
 80056a4:	b510      	push	{r4, lr}
 80056a6:	f7fc fbc7 	bl	8001e38 <os_tick_irqack>
 80056aa:	f7fc fbc7 	bl	8001e3c <rt_systick>
 80056ae:	f7ff bfc7 	b.w	8005640 <Sys_Switch>
 80056b2:	0000      	.short	0x0000
 80056b4:	08006dde 	.word	0x08006dde
 80056b8:	08001fa7 	.word	0x08001fa7
 80056bc:	08001fc1 	.word	0x08001fc1
 80056c0:	20001e54 	.word	0x20001e54
 80056c4:	e000ef34 	.word	0xe000ef34
 80056c8:	00000000 	.word	0x00000000
 80056cc:	fffffffc 	.word	0xfffffffc

080056d0 <Reset_Handler>:
 80056d0:	f8df d020 	ldr.w	sp, [pc, #32]	; 80056f4 <LoopForever+0x2>
 80056d4:	2100      	movs	r1, #0
 80056d6:	e003      	b.n	80056e0 <LoopCopyDataInit>

080056d8 <CopyDataInit>:
 80056d8:	4b07      	ldr	r3, [pc, #28]	; (80056f8 <LoopForever+0x6>)
 80056da:	585b      	ldr	r3, [r3, r1]
 80056dc:	5043      	str	r3, [r0, r1]
 80056de:	3104      	adds	r1, #4

080056e0 <LoopCopyDataInit>:
 80056e0:	4806      	ldr	r0, [pc, #24]	; (80056fc <LoopForever+0xa>)
 80056e2:	4b07      	ldr	r3, [pc, #28]	; (8005700 <LoopForever+0xe>)
 80056e4:	1842      	adds	r2, r0, r1
 80056e6:	429a      	cmp	r2, r3
 80056e8:	d3f6      	bcc.n	80056d8 <CopyDataInit>
 80056ea:	f7fe fbef 	bl	8003ecc <SystemInit>
 80056ee:	f7fb fd8d 	bl	800120c <_start>

080056f2 <LoopForever>:
 80056f2:	e7fe      	b.n	80056f2 <LoopForever>
 80056f4:	20003000 	.word	0x20003000
 80056f8:	08007190 	.word	0x08007190
 80056fc:	20000188 	.word	0x20000188
 8005700:	20000224 	.word	0x20000224

08005704 <ADC1_2_IRQHandler>:
 8005704:	e7fe      	b.n	8005704 <ADC1_2_IRQHandler>
	...

08005708 <__aeabi_drsub>:
 8005708:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800570c:	e002      	b.n	8005714 <__adddf3>
 800570e:	bf00      	nop

08005710 <__aeabi_dsub>:
 8005710:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08005714 <__adddf3>:
 8005714:	b530      	push	{r4, r5, lr}
 8005716:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800571a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800571e:	ea94 0f05 	teq	r4, r5
 8005722:	bf08      	it	eq
 8005724:	ea90 0f02 	teqeq	r0, r2
 8005728:	bf1f      	itttt	ne
 800572a:	ea54 0c00 	orrsne.w	r12, r4, r0
 800572e:	ea55 0c02 	orrsne.w	r12, r5, r2
 8005732:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8005736:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 800573a:	f000 80e2 	beq.w	8005902 <__adddf3+0x1ee>
 800573e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8005742:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8005746:	bfb8      	it	lt
 8005748:	426d      	neglt	r5, r5
 800574a:	dd0c      	ble.n	8005766 <__adddf3+0x52>
 800574c:	442c      	add	r4, r5
 800574e:	ea80 0202 	eor.w	r2, r0, r2
 8005752:	ea81 0303 	eor.w	r3, r1, r3
 8005756:	ea82 0000 	eor.w	r0, r2, r0
 800575a:	ea83 0101 	eor.w	r1, r3, r1
 800575e:	ea80 0202 	eor.w	r2, r0, r2
 8005762:	ea81 0303 	eor.w	r3, r1, r3
 8005766:	2d36      	cmp	r5, #54	; 0x36
 8005768:	bf88      	it	hi
 800576a:	bd30      	pophi	{r4, r5, pc}
 800576c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8005770:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8005774:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8005778:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 800577c:	d002      	beq.n	8005784 <__adddf3+0x70>
 800577e:	4240      	negs	r0, r0
 8005780:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005784:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8005788:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800578c:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 8005790:	d002      	beq.n	8005798 <__adddf3+0x84>
 8005792:	4252      	negs	r2, r2
 8005794:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8005798:	ea94 0f05 	teq	r4, r5
 800579c:	f000 80a7 	beq.w	80058ee <__adddf3+0x1da>
 80057a0:	f1a4 0401 	sub.w	r4, r4, #1
 80057a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80057a8:	db0d      	blt.n	80057c6 <__adddf3+0xb2>
 80057aa:	fa02 fc0e 	lsl.w	r12, r2, lr
 80057ae:	fa22 f205 	lsr.w	r2, r2, r5
 80057b2:	1880      	adds	r0, r0, r2
 80057b4:	f141 0100 	adc.w	r1, r1, #0
 80057b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80057bc:	1880      	adds	r0, r0, r2
 80057be:	fa43 f305 	asr.w	r3, r3, r5
 80057c2:	4159      	adcs	r1, r3
 80057c4:	e00e      	b.n	80057e4 <__adddf3+0xd0>
 80057c6:	f1a5 0520 	sub.w	r5, r5, #32
 80057ca:	f10e 0e20 	add.w	lr, lr, #32
 80057ce:	2a01      	cmp	r2, #1
 80057d0:	fa03 fc0e 	lsl.w	r12, r3, lr
 80057d4:	bf28      	it	cs
 80057d6:	f04c 0c02 	orrcs.w	r12, r12, #2
 80057da:	fa43 f305 	asr.w	r3, r3, r5
 80057de:	18c0      	adds	r0, r0, r3
 80057e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80057e4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80057e8:	d507      	bpl.n	80057fa <__adddf3+0xe6>
 80057ea:	f04f 0e00 	mov.w	lr, #0
 80057ee:	f1dc 0c00 	rsbs	r12, r12, #0
 80057f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80057f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80057fa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80057fe:	d31b      	bcc.n	8005838 <__adddf3+0x124>
 8005800:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8005804:	d30c      	bcc.n	8005820 <__adddf3+0x10c>
 8005806:	0849      	lsrs	r1, r1, #1
 8005808:	ea5f 0030 	movs.w	r0, r0, rrx
 800580c:	ea4f 0c3c 	mov.w	r12, r12, rrx
 8005810:	f104 0401 	add.w	r4, r4, #1
 8005814:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8005818:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800581c:	f080 809a 	bcs.w	8005954 <__adddf3+0x240>
 8005820:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8005824:	bf08      	it	eq
 8005826:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 800582a:	f150 0000 	adcs.w	r0, r0, #0
 800582e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8005832:	ea41 0105 	orr.w	r1, r1, r5
 8005836:	bd30      	pop	{r4, r5, pc}
 8005838:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 800583c:	4140      	adcs	r0, r0
 800583e:	eb41 0101 	adc.w	r1, r1, r1
 8005842:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8005846:	f1a4 0401 	sub.w	r4, r4, #1
 800584a:	d1e9      	bne.n	8005820 <__adddf3+0x10c>
 800584c:	f091 0f00 	teq	r1, #0
 8005850:	bf04      	itt	eq
 8005852:	4601      	moveq	r1, r0
 8005854:	2000      	moveq	r0, #0
 8005856:	fab1 f381 	clz	r3, r1
 800585a:	bf08      	it	eq
 800585c:	3320      	addeq	r3, #32
 800585e:	f1a3 030b 	sub.w	r3, r3, #11
 8005862:	f1b3 0220 	subs.w	r2, r3, #32
 8005866:	da0c      	bge.n	8005882 <__adddf3+0x16e>
 8005868:	320c      	adds	r2, #12
 800586a:	dd08      	ble.n	800587e <__adddf3+0x16a>
 800586c:	f102 0c14 	add.w	r12, r2, #20
 8005870:	f1c2 020c 	rsb	r2, r2, #12
 8005874:	fa01 f00c 	lsl.w	r0, r1, r12
 8005878:	fa21 f102 	lsr.w	r1, r1, r2
 800587c:	e00c      	b.n	8005898 <__adddf3+0x184>
 800587e:	f102 0214 	add.w	r2, r2, #20
 8005882:	bfd8      	it	le
 8005884:	f1c2 0c20 	rsble	r12, r2, #32
 8005888:	fa01 f102 	lsl.w	r1, r1, r2
 800588c:	fa20 fc0c 	lsr.w	r12, r0, r12
 8005890:	bfdc      	itt	le
 8005892:	ea41 010c 	orrle.w	r1, r1, r12
 8005896:	4090      	lslle	r0, r2
 8005898:	1ae4      	subs	r4, r4, r3
 800589a:	bfa2      	ittt	ge
 800589c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80058a0:	4329      	orrge	r1, r5
 80058a2:	bd30      	popge	{r4, r5, pc}
 80058a4:	ea6f 0404 	mvn.w	r4, r4
 80058a8:	3c1f      	subs	r4, #31
 80058aa:	da1c      	bge.n	80058e6 <__adddf3+0x1d2>
 80058ac:	340c      	adds	r4, #12
 80058ae:	dc0e      	bgt.n	80058ce <__adddf3+0x1ba>
 80058b0:	f104 0414 	add.w	r4, r4, #20
 80058b4:	f1c4 0220 	rsb	r2, r4, #32
 80058b8:	fa20 f004 	lsr.w	r0, r0, r4
 80058bc:	fa01 f302 	lsl.w	r3, r1, r2
 80058c0:	ea40 0003 	orr.w	r0, r0, r3
 80058c4:	fa21 f304 	lsr.w	r3, r1, r4
 80058c8:	ea45 0103 	orr.w	r1, r5, r3
 80058cc:	bd30      	pop	{r4, r5, pc}
 80058ce:	f1c4 040c 	rsb	r4, r4, #12
 80058d2:	f1c4 0220 	rsb	r2, r4, #32
 80058d6:	fa20 f002 	lsr.w	r0, r0, r2
 80058da:	fa01 f304 	lsl.w	r3, r1, r4
 80058de:	ea40 0003 	orr.w	r0, r0, r3
 80058e2:	4629      	mov	r1, r5
 80058e4:	bd30      	pop	{r4, r5, pc}
 80058e6:	fa21 f004 	lsr.w	r0, r1, r4
 80058ea:	4629      	mov	r1, r5
 80058ec:	bd30      	pop	{r4, r5, pc}
 80058ee:	f094 0f00 	teq	r4, #0
 80058f2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80058f6:	bf06      	itte	eq
 80058f8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80058fc:	3401      	addeq	r4, #1
 80058fe:	3d01      	subne	r5, #1
 8005900:	e74e      	b.n	80057a0 <__adddf3+0x8c>
 8005902:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005906:	bf18      	it	ne
 8005908:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 800590c:	d029      	beq.n	8005962 <__adddf3+0x24e>
 800590e:	ea94 0f05 	teq	r4, r5
 8005912:	bf08      	it	eq
 8005914:	ea90 0f02 	teqeq	r0, r2
 8005918:	d005      	beq.n	8005926 <__adddf3+0x212>
 800591a:	ea54 0c00 	orrs.w	r12, r4, r0
 800591e:	bf04      	itt	eq
 8005920:	4619      	moveq	r1, r3
 8005922:	4610      	moveq	r0, r2
 8005924:	bd30      	pop	{r4, r5, pc}
 8005926:	ea91 0f03 	teq	r1, r3
 800592a:	bf1e      	ittt	ne
 800592c:	2100      	movne	r1, #0
 800592e:	2000      	movne	r0, #0
 8005930:	bd30      	popne	{r4, r5, pc}
 8005932:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8005936:	d105      	bne.n	8005944 <__adddf3+0x230>
 8005938:	0040      	lsls	r0, r0, #1
 800593a:	4149      	adcs	r1, r1
 800593c:	bf28      	it	cs
 800593e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8005942:	bd30      	pop	{r4, r5, pc}
 8005944:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8005948:	bf3c      	itt	cc
 800594a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800594e:	bd30      	popcc	{r4, r5, pc}
 8005950:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005954:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8005958:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800595c:	f04f 0000 	mov.w	r0, #0
 8005960:	bd30      	pop	{r4, r5, pc}
 8005962:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005966:	bf1a      	itte	ne
 8005968:	4619      	movne	r1, r3
 800596a:	4610      	movne	r0, r2
 800596c:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 8005970:	bf1c      	itt	ne
 8005972:	460b      	movne	r3, r1
 8005974:	4602      	movne	r2, r0
 8005976:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800597a:	bf06      	itte	eq
 800597c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8005980:	ea91 0f03 	teqeq	r1, r3
 8005984:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8005988:	bd30      	pop	{r4, r5, pc}
 800598a:	bf00      	nop

0800598c <__aeabi_ui2d>:
 800598c:	f090 0f00 	teq	r0, #0
 8005990:	bf04      	itt	eq
 8005992:	2100      	moveq	r1, #0
 8005994:	4770      	bxeq	lr
 8005996:	b530      	push	{r4, r5, lr}
 8005998:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800599c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80059a0:	f04f 0500 	mov.w	r5, #0
 80059a4:	f04f 0100 	mov.w	r1, #0
 80059a8:	e750      	b.n	800584c <__adddf3+0x138>
 80059aa:	bf00      	nop

080059ac <__aeabi_i2d>:
 80059ac:	f090 0f00 	teq	r0, #0
 80059b0:	bf04      	itt	eq
 80059b2:	2100      	moveq	r1, #0
 80059b4:	4770      	bxeq	lr
 80059b6:	b530      	push	{r4, r5, lr}
 80059b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80059bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80059c0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80059c4:	bf48      	it	mi
 80059c6:	4240      	negmi	r0, r0
 80059c8:	f04f 0100 	mov.w	r1, #0
 80059cc:	e73e      	b.n	800584c <__adddf3+0x138>
 80059ce:	bf00      	nop

080059d0 <__aeabi_f2d>:
 80059d0:	0042      	lsls	r2, r0, #1
 80059d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80059d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80059da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80059de:	bf1f      	itttt	ne
 80059e0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80059e4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80059e8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80059ec:	4770      	bxne	lr
 80059ee:	f092 0f00 	teq	r2, #0
 80059f2:	bf14      	ite	ne
 80059f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80059f8:	4770      	bxeq	lr
 80059fa:	b530      	push	{r4, r5, lr}
 80059fc:	f44f 7460 	mov.w	r4, #896	; 0x380
 8005a00:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005a04:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8005a08:	e720      	b.n	800584c <__adddf3+0x138>
 8005a0a:	bf00      	nop

08005a0c <__aeabi_ul2d>:
 8005a0c:	ea50 0201 	orrs.w	r2, r0, r1
 8005a10:	bf08      	it	eq
 8005a12:	4770      	bxeq	lr
 8005a14:	b530      	push	{r4, r5, lr}
 8005a16:	f04f 0500 	mov.w	r5, #0
 8005a1a:	e00a      	b.n	8005a32 <__aeabi_l2d+0x16>

08005a1c <__aeabi_l2d>:
 8005a1c:	ea50 0201 	orrs.w	r2, r0, r1
 8005a20:	bf08      	it	eq
 8005a22:	4770      	bxeq	lr
 8005a24:	b530      	push	{r4, r5, lr}
 8005a26:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8005a2a:	d502      	bpl.n	8005a32 <__aeabi_l2d+0x16>
 8005a2c:	4240      	negs	r0, r0
 8005a2e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005a32:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005a36:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005a3a:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 8005a3e:	f43f aedc 	beq.w	80057fa <__adddf3+0xe6>
 8005a42:	f04f 0203 	mov.w	r2, #3
 8005a46:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005a4a:	bf18      	it	ne
 8005a4c:	3203      	addne	r2, #3
 8005a4e:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005a52:	bf18      	it	ne
 8005a54:	3203      	addne	r2, #3
 8005a56:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8005a5a:	f1c2 0320 	rsb	r3, r2, #32
 8005a5e:	fa00 fc03 	lsl.w	r12, r0, r3
 8005a62:	fa20 f002 	lsr.w	r0, r0, r2
 8005a66:	fa01 fe03 	lsl.w	lr, r1, r3
 8005a6a:	ea40 000e 	orr.w	r0, r0, lr
 8005a6e:	fa21 f102 	lsr.w	r1, r1, r2
 8005a72:	4414      	add	r4, r2
 8005a74:	e6c1      	b.n	80057fa <__adddf3+0xe6>
 8005a76:	bf00      	nop

08005a78 <__errno>:
 8005a78:	4b01      	ldr	r3, [pc, #4]	; (8005a80 <__errno+0x8>)
 8005a7a:	6818      	ldr	r0, [r3, #0]
 8005a7c:	4770      	bx	lr
 8005a7e:	bf00      	nop
 8005a80:	200001ac 	.word	0x200001ac

08005a84 <__sflush_r>:
 8005a84:	898a      	ldrh	r2, [r1, #12]
 8005a86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a8a:	4605      	mov	r5, r0
 8005a8c:	0710      	lsls	r0, r2, #28
 8005a8e:	460c      	mov	r4, r1
 8005a90:	d45a      	bmi.n	8005b48 <__sflush_r+0xc4>
 8005a92:	684b      	ldr	r3, [r1, #4]
 8005a94:	2b00      	cmp	r3, #0
 8005a96:	dc05      	bgt.n	8005aa4 <__sflush_r+0x20>
 8005a98:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	dc02      	bgt.n	8005aa4 <__sflush_r+0x20>
 8005a9e:	2000      	movs	r0, #0
 8005aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005aa4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005aa6:	2e00      	cmp	r6, #0
 8005aa8:	d0f9      	beq.n	8005a9e <__sflush_r+0x1a>
 8005aaa:	2300      	movs	r3, #0
 8005aac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005ab0:	682f      	ldr	r7, [r5, #0]
 8005ab2:	602b      	str	r3, [r5, #0]
 8005ab4:	d033      	beq.n	8005b1e <__sflush_r+0x9a>
 8005ab6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005ab8:	89a3      	ldrh	r3, [r4, #12]
 8005aba:	075a      	lsls	r2, r3, #29
 8005abc:	d505      	bpl.n	8005aca <__sflush_r+0x46>
 8005abe:	6863      	ldr	r3, [r4, #4]
 8005ac0:	1ac0      	subs	r0, r0, r3
 8005ac2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005ac4:	b10b      	cbz	r3, 8005aca <__sflush_r+0x46>
 8005ac6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005ac8:	1ac0      	subs	r0, r0, r3
 8005aca:	2300      	movs	r3, #0
 8005acc:	4602      	mov	r2, r0
 8005ace:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005ad0:	6a21      	ldr	r1, [r4, #32]
 8005ad2:	4628      	mov	r0, r5
 8005ad4:	47b0      	blx	r6
 8005ad6:	1c43      	adds	r3, r0, #1
 8005ad8:	89a3      	ldrh	r3, [r4, #12]
 8005ada:	d106      	bne.n	8005aea <__sflush_r+0x66>
 8005adc:	6829      	ldr	r1, [r5, #0]
 8005ade:	291d      	cmp	r1, #29
 8005ae0:	d84b      	bhi.n	8005b7a <__sflush_r+0xf6>
 8005ae2:	4a2b      	ldr	r2, [pc, #172]	; (8005b90 <__sflush_r+0x10c>)
 8005ae4:	40ca      	lsrs	r2, r1
 8005ae6:	07d6      	lsls	r6, r2, #31
 8005ae8:	d547      	bpl.n	8005b7a <__sflush_r+0xf6>
 8005aea:	2200      	movs	r2, #0
 8005aec:	6062      	str	r2, [r4, #4]
 8005aee:	04d9      	lsls	r1, r3, #19
 8005af0:	6922      	ldr	r2, [r4, #16]
 8005af2:	6022      	str	r2, [r4, #0]
 8005af4:	d504      	bpl.n	8005b00 <__sflush_r+0x7c>
 8005af6:	1c42      	adds	r2, r0, #1
 8005af8:	d101      	bne.n	8005afe <__sflush_r+0x7a>
 8005afa:	682b      	ldr	r3, [r5, #0]
 8005afc:	b903      	cbnz	r3, 8005b00 <__sflush_r+0x7c>
 8005afe:	6560      	str	r0, [r4, #84]	; 0x54
 8005b00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005b02:	602f      	str	r7, [r5, #0]
 8005b04:	2900      	cmp	r1, #0
 8005b06:	d0ca      	beq.n	8005a9e <__sflush_r+0x1a>
 8005b08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005b0c:	4299      	cmp	r1, r3
 8005b0e:	d002      	beq.n	8005b16 <__sflush_r+0x92>
 8005b10:	4628      	mov	r0, r5
 8005b12:	f7ff fba5 	bl	8005260 <__wrap__free_r>
 8005b16:	2000      	movs	r0, #0
 8005b18:	6360      	str	r0, [r4, #52]	; 0x34
 8005b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005b1e:	6a21      	ldr	r1, [r4, #32]
 8005b20:	2301      	movs	r3, #1
 8005b22:	4628      	mov	r0, r5
 8005b24:	47b0      	blx	r6
 8005b26:	1c41      	adds	r1, r0, #1
 8005b28:	d1c6      	bne.n	8005ab8 <__sflush_r+0x34>
 8005b2a:	682b      	ldr	r3, [r5, #0]
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	d0c3      	beq.n	8005ab8 <__sflush_r+0x34>
 8005b30:	2b1d      	cmp	r3, #29
 8005b32:	d001      	beq.n	8005b38 <__sflush_r+0xb4>
 8005b34:	2b16      	cmp	r3, #22
 8005b36:	d101      	bne.n	8005b3c <__sflush_r+0xb8>
 8005b38:	602f      	str	r7, [r5, #0]
 8005b3a:	e7b0      	b.n	8005a9e <__sflush_r+0x1a>
 8005b3c:	89a3      	ldrh	r3, [r4, #12]
 8005b3e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b42:	81a3      	strh	r3, [r4, #12]
 8005b44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005b48:	690f      	ldr	r7, [r1, #16]
 8005b4a:	2f00      	cmp	r7, #0
 8005b4c:	d0a7      	beq.n	8005a9e <__sflush_r+0x1a>
 8005b4e:	0793      	lsls	r3, r2, #30
 8005b50:	680e      	ldr	r6, [r1, #0]
 8005b52:	bf08      	it	eq
 8005b54:	694b      	ldreq	r3, [r1, #20]
 8005b56:	600f      	str	r7, [r1, #0]
 8005b58:	bf18      	it	ne
 8005b5a:	2300      	movne	r3, #0
 8005b5c:	eba6 0807 	sub.w	r8, r6, r7
 8005b60:	608b      	str	r3, [r1, #8]
 8005b62:	f1b8 0f00 	cmp.w	r8, #0
 8005b66:	dd9a      	ble.n	8005a9e <__sflush_r+0x1a>
 8005b68:	4643      	mov	r3, r8
 8005b6a:	463a      	mov	r2, r7
 8005b6c:	6a21      	ldr	r1, [r4, #32]
 8005b6e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005b70:	4628      	mov	r0, r5
 8005b72:	47b0      	blx	r6
 8005b74:	2800      	cmp	r0, #0
 8005b76:	dc07      	bgt.n	8005b88 <__sflush_r+0x104>
 8005b78:	89a3      	ldrh	r3, [r4, #12]
 8005b7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005b7e:	81a3      	strh	r3, [r4, #12]
 8005b80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005b88:	4407      	add	r7, r0
 8005b8a:	eba8 0800 	sub.w	r8, r8, r0
 8005b8e:	e7e8      	b.n	8005b62 <__sflush_r+0xde>
 8005b90:	20400001 	.word	0x20400001

08005b94 <_fflush_r>:
 8005b94:	b538      	push	{r3, r4, r5, lr}
 8005b96:	690b      	ldr	r3, [r1, #16]
 8005b98:	4605      	mov	r5, r0
 8005b9a:	460c      	mov	r4, r1
 8005b9c:	b1db      	cbz	r3, 8005bd6 <_fflush_r+0x42>
 8005b9e:	b118      	cbz	r0, 8005ba8 <_fflush_r+0x14>
 8005ba0:	6983      	ldr	r3, [r0, #24]
 8005ba2:	b90b      	cbnz	r3, 8005ba8 <_fflush_r+0x14>
 8005ba4:	f000 f872 	bl	8005c8c <__sinit>
 8005ba8:	4b0c      	ldr	r3, [pc, #48]	; (8005bdc <_fflush_r+0x48>)
 8005baa:	429c      	cmp	r4, r3
 8005bac:	d109      	bne.n	8005bc2 <_fflush_r+0x2e>
 8005bae:	686c      	ldr	r4, [r5, #4]
 8005bb0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005bb4:	b17b      	cbz	r3, 8005bd6 <_fflush_r+0x42>
 8005bb6:	4621      	mov	r1, r4
 8005bb8:	4628      	mov	r0, r5
 8005bba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005bbe:	f7ff bf61 	b.w	8005a84 <__sflush_r>
 8005bc2:	4b07      	ldr	r3, [pc, #28]	; (8005be0 <_fflush_r+0x4c>)
 8005bc4:	429c      	cmp	r4, r3
 8005bc6:	d101      	bne.n	8005bcc <_fflush_r+0x38>
 8005bc8:	68ac      	ldr	r4, [r5, #8]
 8005bca:	e7f1      	b.n	8005bb0 <_fflush_r+0x1c>
 8005bcc:	4b05      	ldr	r3, [pc, #20]	; (8005be4 <_fflush_r+0x50>)
 8005bce:	429c      	cmp	r4, r3
 8005bd0:	bf08      	it	eq
 8005bd2:	68ec      	ldreq	r4, [r5, #12]
 8005bd4:	e7ec      	b.n	8005bb0 <_fflush_r+0x1c>
 8005bd6:	2000      	movs	r0, #0
 8005bd8:	bd38      	pop	{r3, r4, r5, pc}
 8005bda:	bf00      	nop
 8005bdc:	0800710c 	.word	0x0800710c
 8005be0:	0800712c 	.word	0x0800712c
 8005be4:	080070ec 	.word	0x080070ec

08005be8 <fflush>:
 8005be8:	4601      	mov	r1, r0
 8005bea:	b920      	cbnz	r0, 8005bf6 <fflush+0xe>
 8005bec:	4b04      	ldr	r3, [pc, #16]	; (8005c00 <fflush+0x18>)
 8005bee:	4905      	ldr	r1, [pc, #20]	; (8005c04 <fflush+0x1c>)
 8005bf0:	6818      	ldr	r0, [r3, #0]
 8005bf2:	f000 b8b7 	b.w	8005d64 <_fwalk_reent>
 8005bf6:	4b04      	ldr	r3, [pc, #16]	; (8005c08 <fflush+0x20>)
 8005bf8:	6818      	ldr	r0, [r3, #0]
 8005bfa:	f7ff bfcb 	b.w	8005b94 <_fflush_r>
 8005bfe:	bf00      	nop
 8005c00:	0800714c 	.word	0x0800714c
 8005c04:	08005b95 	.word	0x08005b95
 8005c08:	200001ac 	.word	0x200001ac

08005c0c <_cleanup_r>:
 8005c0c:	4901      	ldr	r1, [pc, #4]	; (8005c14 <_cleanup_r+0x8>)
 8005c0e:	f000 b8a9 	b.w	8005d64 <_fwalk_reent>
 8005c12:	bf00      	nop
 8005c14:	08005b95 	.word	0x08005b95

08005c18 <std.isra.0>:
 8005c18:	2300      	movs	r3, #0
 8005c1a:	b510      	push	{r4, lr}
 8005c1c:	4604      	mov	r4, r0
 8005c1e:	6003      	str	r3, [r0, #0]
 8005c20:	6043      	str	r3, [r0, #4]
 8005c22:	6083      	str	r3, [r0, #8]
 8005c24:	8181      	strh	r1, [r0, #12]
 8005c26:	6643      	str	r3, [r0, #100]	; 0x64
 8005c28:	81c2      	strh	r2, [r0, #14]
 8005c2a:	6103      	str	r3, [r0, #16]
 8005c2c:	6143      	str	r3, [r0, #20]
 8005c2e:	6183      	str	r3, [r0, #24]
 8005c30:	4619      	mov	r1, r3
 8005c32:	2208      	movs	r2, #8
 8005c34:	305c      	adds	r0, #92	; 0x5c
 8005c36:	f000 f960 	bl	8005efa <memset>
 8005c3a:	4b05      	ldr	r3, [pc, #20]	; (8005c50 <std.isra.0+0x38>)
 8005c3c:	6263      	str	r3, [r4, #36]	; 0x24
 8005c3e:	4b05      	ldr	r3, [pc, #20]	; (8005c54 <std.isra.0+0x3c>)
 8005c40:	62a3      	str	r3, [r4, #40]	; 0x28
 8005c42:	4b05      	ldr	r3, [pc, #20]	; (8005c58 <std.isra.0+0x40>)
 8005c44:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005c46:	4b05      	ldr	r3, [pc, #20]	; (8005c5c <std.isra.0+0x44>)
 8005c48:	6224      	str	r4, [r4, #32]
 8005c4a:	6323      	str	r3, [r4, #48]	; 0x30
 8005c4c:	bd10      	pop	{r4, pc}
 8005c4e:	bf00      	nop
 8005c50:	0800640d 	.word	0x0800640d
 8005c54:	0800642f 	.word	0x0800642f
 8005c58:	08006467 	.word	0x08006467
 8005c5c:	0800648b 	.word	0x0800648b

08005c60 <__sfmoreglue>:
 8005c60:	b570      	push	{r4, r5, r6, lr}
 8005c62:	1e4a      	subs	r2, r1, #1
 8005c64:	2568      	movs	r5, #104	; 0x68
 8005c66:	4355      	muls	r5, r2
 8005c68:	460e      	mov	r6, r1
 8005c6a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005c6e:	f7ff faf3 	bl	8005258 <__wrap__malloc_r>
 8005c72:	4604      	mov	r4, r0
 8005c74:	b140      	cbz	r0, 8005c88 <__sfmoreglue+0x28>
 8005c76:	2100      	movs	r1, #0
 8005c78:	e880 0042 	stmia.w	r0, {r1, r6}
 8005c7c:	300c      	adds	r0, #12
 8005c7e:	60a0      	str	r0, [r4, #8]
 8005c80:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005c84:	f000 f939 	bl	8005efa <memset>
 8005c88:	4620      	mov	r0, r4
 8005c8a:	bd70      	pop	{r4, r5, r6, pc}

08005c8c <__sinit>:
 8005c8c:	6983      	ldr	r3, [r0, #24]
 8005c8e:	b510      	push	{r4, lr}
 8005c90:	4604      	mov	r4, r0
 8005c92:	bb33      	cbnz	r3, 8005ce2 <__sinit+0x56>
 8005c94:	6483      	str	r3, [r0, #72]	; 0x48
 8005c96:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005c98:	6503      	str	r3, [r0, #80]	; 0x50
 8005c9a:	4b12      	ldr	r3, [pc, #72]	; (8005ce4 <__sinit+0x58>)
 8005c9c:	4a12      	ldr	r2, [pc, #72]	; (8005ce8 <__sinit+0x5c>)
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	6282      	str	r2, [r0, #40]	; 0x28
 8005ca2:	4298      	cmp	r0, r3
 8005ca4:	bf04      	itt	eq
 8005ca6:	2301      	moveq	r3, #1
 8005ca8:	6183      	streq	r3, [r0, #24]
 8005caa:	f000 f81f 	bl	8005cec <__sfp>
 8005cae:	6060      	str	r0, [r4, #4]
 8005cb0:	4620      	mov	r0, r4
 8005cb2:	f000 f81b 	bl	8005cec <__sfp>
 8005cb6:	60a0      	str	r0, [r4, #8]
 8005cb8:	4620      	mov	r0, r4
 8005cba:	f000 f817 	bl	8005cec <__sfp>
 8005cbe:	2200      	movs	r2, #0
 8005cc0:	60e0      	str	r0, [r4, #12]
 8005cc2:	2104      	movs	r1, #4
 8005cc4:	6860      	ldr	r0, [r4, #4]
 8005cc6:	f7ff ffa7 	bl	8005c18 <std.isra.0>
 8005cca:	2201      	movs	r2, #1
 8005ccc:	2109      	movs	r1, #9
 8005cce:	68a0      	ldr	r0, [r4, #8]
 8005cd0:	f7ff ffa2 	bl	8005c18 <std.isra.0>
 8005cd4:	2202      	movs	r2, #2
 8005cd6:	2112      	movs	r1, #18
 8005cd8:	68e0      	ldr	r0, [r4, #12]
 8005cda:	f7ff ff9d 	bl	8005c18 <std.isra.0>
 8005cde:	2301      	movs	r3, #1
 8005ce0:	61a3      	str	r3, [r4, #24]
 8005ce2:	bd10      	pop	{r4, pc}
 8005ce4:	0800714c 	.word	0x0800714c
 8005ce8:	08005c0d 	.word	0x08005c0d

08005cec <__sfp>:
 8005cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cee:	4b1c      	ldr	r3, [pc, #112]	; (8005d60 <__sfp+0x74>)
 8005cf0:	681e      	ldr	r6, [r3, #0]
 8005cf2:	69b3      	ldr	r3, [r6, #24]
 8005cf4:	4607      	mov	r7, r0
 8005cf6:	b913      	cbnz	r3, 8005cfe <__sfp+0x12>
 8005cf8:	4630      	mov	r0, r6
 8005cfa:	f7ff ffc7 	bl	8005c8c <__sinit>
 8005cfe:	3648      	adds	r6, #72	; 0x48
 8005d00:	68b4      	ldr	r4, [r6, #8]
 8005d02:	6873      	ldr	r3, [r6, #4]
 8005d04:	3b01      	subs	r3, #1
 8005d06:	d503      	bpl.n	8005d10 <__sfp+0x24>
 8005d08:	6833      	ldr	r3, [r6, #0]
 8005d0a:	b133      	cbz	r3, 8005d1a <__sfp+0x2e>
 8005d0c:	6836      	ldr	r6, [r6, #0]
 8005d0e:	e7f7      	b.n	8005d00 <__sfp+0x14>
 8005d10:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005d14:	b16d      	cbz	r5, 8005d32 <__sfp+0x46>
 8005d16:	3468      	adds	r4, #104	; 0x68
 8005d18:	e7f4      	b.n	8005d04 <__sfp+0x18>
 8005d1a:	2104      	movs	r1, #4
 8005d1c:	4638      	mov	r0, r7
 8005d1e:	f7ff ff9f 	bl	8005c60 <__sfmoreglue>
 8005d22:	6030      	str	r0, [r6, #0]
 8005d24:	2800      	cmp	r0, #0
 8005d26:	d1f1      	bne.n	8005d0c <__sfp+0x20>
 8005d28:	230c      	movs	r3, #12
 8005d2a:	603b      	str	r3, [r7, #0]
 8005d2c:	4604      	mov	r4, r0
 8005d2e:	4620      	mov	r0, r4
 8005d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d32:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005d36:	81e3      	strh	r3, [r4, #14]
 8005d38:	2301      	movs	r3, #1
 8005d3a:	81a3      	strh	r3, [r4, #12]
 8005d3c:	6665      	str	r5, [r4, #100]	; 0x64
 8005d3e:	6025      	str	r5, [r4, #0]
 8005d40:	60a5      	str	r5, [r4, #8]
 8005d42:	6065      	str	r5, [r4, #4]
 8005d44:	6125      	str	r5, [r4, #16]
 8005d46:	6165      	str	r5, [r4, #20]
 8005d48:	61a5      	str	r5, [r4, #24]
 8005d4a:	2208      	movs	r2, #8
 8005d4c:	4629      	mov	r1, r5
 8005d4e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005d52:	f000 f8d2 	bl	8005efa <memset>
 8005d56:	6365      	str	r5, [r4, #52]	; 0x34
 8005d58:	63a5      	str	r5, [r4, #56]	; 0x38
 8005d5a:	64a5      	str	r5, [r4, #72]	; 0x48
 8005d5c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005d5e:	e7e6      	b.n	8005d2e <__sfp+0x42>
 8005d60:	0800714c 	.word	0x0800714c

08005d64 <_fwalk_reent>:
 8005d64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d68:	4680      	mov	r8, r0
 8005d6a:	4689      	mov	r9, r1
 8005d6c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005d70:	2600      	movs	r6, #0
 8005d72:	b914      	cbnz	r4, 8005d7a <_fwalk_reent+0x16>
 8005d74:	4630      	mov	r0, r6
 8005d76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005d7a:	68a5      	ldr	r5, [r4, #8]
 8005d7c:	6867      	ldr	r7, [r4, #4]
 8005d7e:	3f01      	subs	r7, #1
 8005d80:	d501      	bpl.n	8005d86 <_fwalk_reent+0x22>
 8005d82:	6824      	ldr	r4, [r4, #0]
 8005d84:	e7f5      	b.n	8005d72 <_fwalk_reent+0xe>
 8005d86:	89ab      	ldrh	r3, [r5, #12]
 8005d88:	2b01      	cmp	r3, #1
 8005d8a:	d907      	bls.n	8005d9c <_fwalk_reent+0x38>
 8005d8c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005d90:	3301      	adds	r3, #1
 8005d92:	d003      	beq.n	8005d9c <_fwalk_reent+0x38>
 8005d94:	4629      	mov	r1, r5
 8005d96:	4640      	mov	r0, r8
 8005d98:	47c8      	blx	r9
 8005d9a:	4306      	orrs	r6, r0
 8005d9c:	3568      	adds	r5, #104	; 0x68
 8005d9e:	e7ee      	b.n	8005d7e <_fwalk_reent+0x1a>

08005da0 <__libc_init_array>:
 8005da0:	b570      	push	{r4, r5, r6, lr}
 8005da2:	4e0d      	ldr	r6, [pc, #52]	; (8005dd8 <__libc_init_array+0x38>)
 8005da4:	4c0d      	ldr	r4, [pc, #52]	; (8005ddc <__libc_init_array+0x3c>)
 8005da6:	1ba4      	subs	r4, r4, r6
 8005da8:	10a4      	asrs	r4, r4, #2
 8005daa:	2500      	movs	r5, #0
 8005dac:	42a5      	cmp	r5, r4
 8005dae:	d109      	bne.n	8005dc4 <__libc_init_array+0x24>
 8005db0:	4e0b      	ldr	r6, [pc, #44]	; (8005de0 <__libc_init_array+0x40>)
 8005db2:	4c0c      	ldr	r4, [pc, #48]	; (8005de4 <__libc_init_array+0x44>)
 8005db4:	f000 fd8c 	bl	80068d0 <_init>
 8005db8:	1ba4      	subs	r4, r4, r6
 8005dba:	10a4      	asrs	r4, r4, #2
 8005dbc:	2500      	movs	r5, #0
 8005dbe:	42a5      	cmp	r5, r4
 8005dc0:	d105      	bne.n	8005dce <__libc_init_array+0x2e>
 8005dc2:	bd70      	pop	{r4, r5, r6, pc}
 8005dc4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005dc8:	4798      	blx	r3
 8005dca:	3501      	adds	r5, #1
 8005dcc:	e7ee      	b.n	8005dac <__libc_init_array+0xc>
 8005dce:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005dd2:	4798      	blx	r3
 8005dd4:	3501      	adds	r5, #1
 8005dd6:	e7f2      	b.n	8005dbe <__libc_init_array+0x1e>
 8005dd8:	20000210 	.word	0x20000210
 8005ddc:	20000210 	.word	0x20000210
 8005de0:	20000210 	.word	0x20000210
 8005de4:	2000021c 	.word	0x2000021c

08005de8 <malloc>:
 8005de8:	4b02      	ldr	r3, [pc, #8]	; (8005df4 <malloc+0xc>)
 8005dea:	4601      	mov	r1, r0
 8005dec:	6818      	ldr	r0, [r3, #0]
 8005dee:	f7ff ba33 	b.w	8005258 <__wrap__malloc_r>
 8005df2:	bf00      	nop
 8005df4:	200001ac 	.word	0x200001ac

08005df8 <free>:
 8005df8:	4b02      	ldr	r3, [pc, #8]	; (8005e04 <free+0xc>)
 8005dfa:	4601      	mov	r1, r0
 8005dfc:	6818      	ldr	r0, [r3, #0]
 8005dfe:	f7ff ba2f 	b.w	8005260 <__wrap__free_r>
 8005e02:	bf00      	nop
 8005e04:	200001ac 	.word	0x200001ac
	...

08005e10 <memchr>:
 8005e10:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005e14:	2a10      	cmp	r2, #16
 8005e16:	db2b      	blt.n	8005e70 <memchr+0x60>
 8005e18:	f010 0f07 	tst.w	r0, #7
 8005e1c:	d008      	beq.n	8005e30 <memchr+0x20>
 8005e1e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005e22:	3a01      	subs	r2, #1
 8005e24:	428b      	cmp	r3, r1
 8005e26:	d02d      	beq.n	8005e84 <memchr+0x74>
 8005e28:	f010 0f07 	tst.w	r0, #7
 8005e2c:	b342      	cbz	r2, 8005e80 <memchr+0x70>
 8005e2e:	d1f6      	bne.n	8005e1e <memchr+0xe>
 8005e30:	b4f0      	push	{r4, r5, r6, r7}
 8005e32:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005e36:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8005e3a:	f022 0407 	bic.w	r4, r2, #7
 8005e3e:	f07f 0700 	mvns.w	r7, #0
 8005e42:	2300      	movs	r3, #0
 8005e44:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005e48:	3c08      	subs	r4, #8
 8005e4a:	ea85 0501 	eor.w	r5, r5, r1
 8005e4e:	ea86 0601 	eor.w	r6, r6, r1
 8005e52:	fa85 f547 	uadd8	r5, r5, r7
 8005e56:	faa3 f587 	sel	r5, r3, r7
 8005e5a:	fa86 f647 	uadd8	r6, r6, r7
 8005e5e:	faa5 f687 	sel	r6, r5, r7
 8005e62:	b98e      	cbnz	r6, 8005e88 <memchr+0x78>
 8005e64:	d1ee      	bne.n	8005e44 <memchr+0x34>
 8005e66:	bcf0      	pop	{r4, r5, r6, r7}
 8005e68:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005e6c:	f002 0207 	and.w	r2, r2, #7
 8005e70:	b132      	cbz	r2, 8005e80 <memchr+0x70>
 8005e72:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005e76:	3a01      	subs	r2, #1
 8005e78:	ea83 0301 	eor.w	r3, r3, r1
 8005e7c:	b113      	cbz	r3, 8005e84 <memchr+0x74>
 8005e7e:	d1f8      	bne.n	8005e72 <memchr+0x62>
 8005e80:	2000      	movs	r0, #0
 8005e82:	4770      	bx	lr
 8005e84:	3801      	subs	r0, #1
 8005e86:	4770      	bx	lr
 8005e88:	2d00      	cmp	r5, #0
 8005e8a:	bf06      	itte	eq
 8005e8c:	4635      	moveq	r5, r6
 8005e8e:	3803      	subeq	r0, #3
 8005e90:	3807      	subne	r0, #7
 8005e92:	f015 0f01 	tst.w	r5, #1
 8005e96:	d107      	bne.n	8005ea8 <memchr+0x98>
 8005e98:	3001      	adds	r0, #1
 8005e9a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8005e9e:	bf02      	ittt	eq
 8005ea0:	3001      	addeq	r0, #1
 8005ea2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005ea6:	3001      	addeq	r0, #1
 8005ea8:	bcf0      	pop	{r4, r5, r6, r7}
 8005eaa:	3801      	subs	r0, #1
 8005eac:	4770      	bx	lr
 8005eae:	bf00      	nop

08005eb0 <memcpy>:
 8005eb0:	b510      	push	{r4, lr}
 8005eb2:	1e43      	subs	r3, r0, #1
 8005eb4:	440a      	add	r2, r1
 8005eb6:	4291      	cmp	r1, r2
 8005eb8:	d100      	bne.n	8005ebc <memcpy+0xc>
 8005eba:	bd10      	pop	{r4, pc}
 8005ebc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005ec0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005ec4:	e7f7      	b.n	8005eb6 <memcpy+0x6>

08005ec6 <memmove>:
 8005ec6:	4288      	cmp	r0, r1
 8005ec8:	b510      	push	{r4, lr}
 8005eca:	eb01 0302 	add.w	r3, r1, r2
 8005ece:	d803      	bhi.n	8005ed8 <memmove+0x12>
 8005ed0:	1e42      	subs	r2, r0, #1
 8005ed2:	4299      	cmp	r1, r3
 8005ed4:	d10c      	bne.n	8005ef0 <memmove+0x2a>
 8005ed6:	bd10      	pop	{r4, pc}
 8005ed8:	4298      	cmp	r0, r3
 8005eda:	d2f9      	bcs.n	8005ed0 <memmove+0xa>
 8005edc:	1881      	adds	r1, r0, r2
 8005ede:	1ad2      	subs	r2, r2, r3
 8005ee0:	42d3      	cmn	r3, r2
 8005ee2:	d100      	bne.n	8005ee6 <memmove+0x20>
 8005ee4:	bd10      	pop	{r4, pc}
 8005ee6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005eea:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005eee:	e7f7      	b.n	8005ee0 <memmove+0x1a>
 8005ef0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005ef4:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005ef8:	e7eb      	b.n	8005ed2 <memmove+0xc>

08005efa <memset>:
 8005efa:	4402      	add	r2, r0
 8005efc:	4603      	mov	r3, r0
 8005efe:	4293      	cmp	r3, r2
 8005f00:	d100      	bne.n	8005f04 <memset+0xa>
 8005f02:	4770      	bx	lr
 8005f04:	f803 1b01 	strb.w	r1, [r3], #1
 8005f08:	e7f9      	b.n	8005efe <memset+0x4>
	...

08005f0c <_free_r>:
 8005f0c:	b538      	push	{r3, r4, r5, lr}
 8005f0e:	4605      	mov	r5, r0
 8005f10:	2900      	cmp	r1, #0
 8005f12:	d045      	beq.n	8005fa0 <_free_r+0x94>
 8005f14:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005f18:	1f0c      	subs	r4, r1, #4
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	bfb8      	it	lt
 8005f1e:	18e4      	addlt	r4, r4, r3
 8005f20:	f7ff fabf 	bl	80054a2 <__malloc_lock>
 8005f24:	4a1f      	ldr	r2, [pc, #124]	; (8005fa4 <_free_r+0x98>)
 8005f26:	6813      	ldr	r3, [r2, #0]
 8005f28:	4610      	mov	r0, r2
 8005f2a:	b933      	cbnz	r3, 8005f3a <_free_r+0x2e>
 8005f2c:	6063      	str	r3, [r4, #4]
 8005f2e:	6014      	str	r4, [r2, #0]
 8005f30:	4628      	mov	r0, r5
 8005f32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005f36:	f7ff bab8 	b.w	80054aa <__malloc_unlock>
 8005f3a:	42a3      	cmp	r3, r4
 8005f3c:	d90c      	bls.n	8005f58 <_free_r+0x4c>
 8005f3e:	6821      	ldr	r1, [r4, #0]
 8005f40:	1862      	adds	r2, r4, r1
 8005f42:	4293      	cmp	r3, r2
 8005f44:	bf04      	itt	eq
 8005f46:	681a      	ldreq	r2, [r3, #0]
 8005f48:	685b      	ldreq	r3, [r3, #4]
 8005f4a:	6063      	str	r3, [r4, #4]
 8005f4c:	bf04      	itt	eq
 8005f4e:	1852      	addeq	r2, r2, r1
 8005f50:	6022      	streq	r2, [r4, #0]
 8005f52:	6004      	str	r4, [r0, #0]
 8005f54:	e7ec      	b.n	8005f30 <_free_r+0x24>
 8005f56:	4613      	mov	r3, r2
 8005f58:	685a      	ldr	r2, [r3, #4]
 8005f5a:	b10a      	cbz	r2, 8005f60 <_free_r+0x54>
 8005f5c:	42a2      	cmp	r2, r4
 8005f5e:	d9fa      	bls.n	8005f56 <_free_r+0x4a>
 8005f60:	6819      	ldr	r1, [r3, #0]
 8005f62:	1858      	adds	r0, r3, r1
 8005f64:	42a0      	cmp	r0, r4
 8005f66:	d10b      	bne.n	8005f80 <_free_r+0x74>
 8005f68:	6820      	ldr	r0, [r4, #0]
 8005f6a:	4401      	add	r1, r0
 8005f6c:	1858      	adds	r0, r3, r1
 8005f6e:	4282      	cmp	r2, r0
 8005f70:	6019      	str	r1, [r3, #0]
 8005f72:	d1dd      	bne.n	8005f30 <_free_r+0x24>
 8005f74:	6810      	ldr	r0, [r2, #0]
 8005f76:	6852      	ldr	r2, [r2, #4]
 8005f78:	605a      	str	r2, [r3, #4]
 8005f7a:	4401      	add	r1, r0
 8005f7c:	6019      	str	r1, [r3, #0]
 8005f7e:	e7d7      	b.n	8005f30 <_free_r+0x24>
 8005f80:	d902      	bls.n	8005f88 <_free_r+0x7c>
 8005f82:	230c      	movs	r3, #12
 8005f84:	602b      	str	r3, [r5, #0]
 8005f86:	e7d3      	b.n	8005f30 <_free_r+0x24>
 8005f88:	6820      	ldr	r0, [r4, #0]
 8005f8a:	1821      	adds	r1, r4, r0
 8005f8c:	428a      	cmp	r2, r1
 8005f8e:	bf04      	itt	eq
 8005f90:	6811      	ldreq	r1, [r2, #0]
 8005f92:	6852      	ldreq	r2, [r2, #4]
 8005f94:	6062      	str	r2, [r4, #4]
 8005f96:	bf04      	itt	eq
 8005f98:	1809      	addeq	r1, r1, r0
 8005f9a:	6021      	streq	r1, [r4, #0]
 8005f9c:	605c      	str	r4, [r3, #4]
 8005f9e:	e7c7      	b.n	8005f30 <_free_r+0x24>
 8005fa0:	bd38      	pop	{r3, r4, r5, pc}
 8005fa2:	bf00      	nop
 8005fa4:	20001654 	.word	0x20001654

08005fa8 <_malloc_r>:
 8005fa8:	b570      	push	{r4, r5, r6, lr}
 8005faa:	1ccd      	adds	r5, r1, #3
 8005fac:	f025 0503 	bic.w	r5, r5, #3
 8005fb0:	3508      	adds	r5, #8
 8005fb2:	2d0c      	cmp	r5, #12
 8005fb4:	bf38      	it	cc
 8005fb6:	250c      	movcc	r5, #12
 8005fb8:	2d00      	cmp	r5, #0
 8005fba:	4606      	mov	r6, r0
 8005fbc:	db01      	blt.n	8005fc2 <_malloc_r+0x1a>
 8005fbe:	42a9      	cmp	r1, r5
 8005fc0:	d903      	bls.n	8005fca <_malloc_r+0x22>
 8005fc2:	230c      	movs	r3, #12
 8005fc4:	6033      	str	r3, [r6, #0]
 8005fc6:	2000      	movs	r0, #0
 8005fc8:	bd70      	pop	{r4, r5, r6, pc}
 8005fca:	f7ff fa6a 	bl	80054a2 <__malloc_lock>
 8005fce:	4a23      	ldr	r2, [pc, #140]	; (800605c <_malloc_r+0xb4>)
 8005fd0:	6814      	ldr	r4, [r2, #0]
 8005fd2:	4621      	mov	r1, r4
 8005fd4:	b991      	cbnz	r1, 8005ffc <_malloc_r+0x54>
 8005fd6:	4c22      	ldr	r4, [pc, #136]	; (8006060 <_malloc_r+0xb8>)
 8005fd8:	6823      	ldr	r3, [r4, #0]
 8005fda:	b91b      	cbnz	r3, 8005fe4 <_malloc_r+0x3c>
 8005fdc:	4630      	mov	r0, r6
 8005fde:	f000 fa05 	bl	80063ec <_sbrk_r>
 8005fe2:	6020      	str	r0, [r4, #0]
 8005fe4:	4629      	mov	r1, r5
 8005fe6:	4630      	mov	r0, r6
 8005fe8:	f000 fa00 	bl	80063ec <_sbrk_r>
 8005fec:	1c43      	adds	r3, r0, #1
 8005fee:	d126      	bne.n	800603e <_malloc_r+0x96>
 8005ff0:	230c      	movs	r3, #12
 8005ff2:	6033      	str	r3, [r6, #0]
 8005ff4:	4630      	mov	r0, r6
 8005ff6:	f7ff fa58 	bl	80054aa <__malloc_unlock>
 8005ffa:	e7e4      	b.n	8005fc6 <_malloc_r+0x1e>
 8005ffc:	680b      	ldr	r3, [r1, #0]
 8005ffe:	1b5b      	subs	r3, r3, r5
 8006000:	d41a      	bmi.n	8006038 <_malloc_r+0x90>
 8006002:	2b0b      	cmp	r3, #11
 8006004:	d90f      	bls.n	8006026 <_malloc_r+0x7e>
 8006006:	600b      	str	r3, [r1, #0]
 8006008:	50cd      	str	r5, [r1, r3]
 800600a:	18cc      	adds	r4, r1, r3
 800600c:	4630      	mov	r0, r6
 800600e:	f7ff fa4c 	bl	80054aa <__malloc_unlock>
 8006012:	f104 000b 	add.w	r0, r4, #11
 8006016:	1d23      	adds	r3, r4, #4
 8006018:	f020 0007 	bic.w	r0, r0, #7
 800601c:	1ac3      	subs	r3, r0, r3
 800601e:	d01b      	beq.n	8006058 <_malloc_r+0xb0>
 8006020:	425a      	negs	r2, r3
 8006022:	50e2      	str	r2, [r4, r3]
 8006024:	bd70      	pop	{r4, r5, r6, pc}
 8006026:	428c      	cmp	r4, r1
 8006028:	bf0d      	iteet	eq
 800602a:	6863      	ldreq	r3, [r4, #4]
 800602c:	684b      	ldrne	r3, [r1, #4]
 800602e:	6063      	strne	r3, [r4, #4]
 8006030:	6013      	streq	r3, [r2, #0]
 8006032:	bf18      	it	ne
 8006034:	460c      	movne	r4, r1
 8006036:	e7e9      	b.n	800600c <_malloc_r+0x64>
 8006038:	460c      	mov	r4, r1
 800603a:	6849      	ldr	r1, [r1, #4]
 800603c:	e7ca      	b.n	8005fd4 <_malloc_r+0x2c>
 800603e:	1cc4      	adds	r4, r0, #3
 8006040:	f024 0403 	bic.w	r4, r4, #3
 8006044:	42a0      	cmp	r0, r4
 8006046:	d005      	beq.n	8006054 <_malloc_r+0xac>
 8006048:	1a21      	subs	r1, r4, r0
 800604a:	4630      	mov	r0, r6
 800604c:	f000 f9ce 	bl	80063ec <_sbrk_r>
 8006050:	3001      	adds	r0, #1
 8006052:	d0cd      	beq.n	8005ff0 <_malloc_r+0x48>
 8006054:	6025      	str	r5, [r4, #0]
 8006056:	e7d9      	b.n	800600c <_malloc_r+0x64>
 8006058:	bd70      	pop	{r4, r5, r6, pc}
 800605a:	bf00      	nop
 800605c:	20001654 	.word	0x20001654
 8006060:	20001658 	.word	0x20001658

08006064 <_realloc_r>:
 8006064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006066:	4607      	mov	r7, r0
 8006068:	4614      	mov	r4, r2
 800606a:	460e      	mov	r6, r1
 800606c:	b921      	cbnz	r1, 8006078 <_realloc_r+0x14>
 800606e:	4611      	mov	r1, r2
 8006070:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006074:	f7ff b8f0 	b.w	8005258 <__wrap__malloc_r>
 8006078:	b922      	cbnz	r2, 8006084 <_realloc_r+0x20>
 800607a:	f7ff f8f1 	bl	8005260 <__wrap__free_r>
 800607e:	4625      	mov	r5, r4
 8006080:	4628      	mov	r0, r5
 8006082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006084:	f000 fa64 	bl	8006550 <_malloc_usable_size_r>
 8006088:	4284      	cmp	r4, r0
 800608a:	d90f      	bls.n	80060ac <_realloc_r+0x48>
 800608c:	4621      	mov	r1, r4
 800608e:	4638      	mov	r0, r7
 8006090:	f7ff f8e2 	bl	8005258 <__wrap__malloc_r>
 8006094:	4605      	mov	r5, r0
 8006096:	2800      	cmp	r0, #0
 8006098:	d0f2      	beq.n	8006080 <_realloc_r+0x1c>
 800609a:	4631      	mov	r1, r6
 800609c:	4622      	mov	r2, r4
 800609e:	f7ff ff07 	bl	8005eb0 <memcpy>
 80060a2:	4631      	mov	r1, r6
 80060a4:	4638      	mov	r0, r7
 80060a6:	f7ff f8db 	bl	8005260 <__wrap__free_r>
 80060aa:	e7e9      	b.n	8006080 <_realloc_r+0x1c>
 80060ac:	4635      	mov	r5, r6
 80060ae:	e7e7      	b.n	8006080 <_realloc_r+0x1c>

080060b0 <_printf_common>:
 80060b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80060b4:	4691      	mov	r9, r2
 80060b6:	461f      	mov	r7, r3
 80060b8:	688a      	ldr	r2, [r1, #8]
 80060ba:	690b      	ldr	r3, [r1, #16]
 80060bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80060c0:	4293      	cmp	r3, r2
 80060c2:	bfb8      	it	lt
 80060c4:	4613      	movlt	r3, r2
 80060c6:	f8c9 3000 	str.w	r3, [r9]
 80060ca:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80060ce:	4606      	mov	r6, r0
 80060d0:	460c      	mov	r4, r1
 80060d2:	b112      	cbz	r2, 80060da <_printf_common+0x2a>
 80060d4:	3301      	adds	r3, #1
 80060d6:	f8c9 3000 	str.w	r3, [r9]
 80060da:	6823      	ldr	r3, [r4, #0]
 80060dc:	0699      	lsls	r1, r3, #26
 80060de:	bf42      	ittt	mi
 80060e0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80060e4:	3302      	addmi	r3, #2
 80060e6:	f8c9 3000 	strmi.w	r3, [r9]
 80060ea:	6825      	ldr	r5, [r4, #0]
 80060ec:	f015 0506 	ands.w	r5, r5, #6
 80060f0:	d107      	bne.n	8006102 <_printf_common+0x52>
 80060f2:	f104 0a19 	add.w	r10, r4, #25
 80060f6:	68e3      	ldr	r3, [r4, #12]
 80060f8:	f8d9 2000 	ldr.w	r2, [r9]
 80060fc:	1a9b      	subs	r3, r3, r2
 80060fe:	429d      	cmp	r5, r3
 8006100:	db29      	blt.n	8006156 <_printf_common+0xa6>
 8006102:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006106:	6822      	ldr	r2, [r4, #0]
 8006108:	3300      	adds	r3, #0
 800610a:	bf18      	it	ne
 800610c:	2301      	movne	r3, #1
 800610e:	0692      	lsls	r2, r2, #26
 8006110:	d42e      	bmi.n	8006170 <_printf_common+0xc0>
 8006112:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006116:	4639      	mov	r1, r7
 8006118:	4630      	mov	r0, r6
 800611a:	47c0      	blx	r8
 800611c:	3001      	adds	r0, #1
 800611e:	d021      	beq.n	8006164 <_printf_common+0xb4>
 8006120:	6823      	ldr	r3, [r4, #0]
 8006122:	68e5      	ldr	r5, [r4, #12]
 8006124:	f8d9 2000 	ldr.w	r2, [r9]
 8006128:	f003 0306 	and.w	r3, r3, #6
 800612c:	2b04      	cmp	r3, #4
 800612e:	bf08      	it	eq
 8006130:	1aad      	subeq	r5, r5, r2
 8006132:	68a3      	ldr	r3, [r4, #8]
 8006134:	6922      	ldr	r2, [r4, #16]
 8006136:	bf0c      	ite	eq
 8006138:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800613c:	2500      	movne	r5, #0
 800613e:	4293      	cmp	r3, r2
 8006140:	bfc4      	itt	gt
 8006142:	1a9b      	subgt	r3, r3, r2
 8006144:	18ed      	addgt	r5, r5, r3
 8006146:	f04f 0900 	mov.w	r9, #0
 800614a:	341a      	adds	r4, #26
 800614c:	454d      	cmp	r5, r9
 800614e:	d11b      	bne.n	8006188 <_printf_common+0xd8>
 8006150:	2000      	movs	r0, #0
 8006152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006156:	2301      	movs	r3, #1
 8006158:	4652      	mov	r2, r10
 800615a:	4639      	mov	r1, r7
 800615c:	4630      	mov	r0, r6
 800615e:	47c0      	blx	r8
 8006160:	3001      	adds	r0, #1
 8006162:	d103      	bne.n	800616c <_printf_common+0xbc>
 8006164:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800616c:	3501      	adds	r5, #1
 800616e:	e7c2      	b.n	80060f6 <_printf_common+0x46>
 8006170:	18e1      	adds	r1, r4, r3
 8006172:	1c5a      	adds	r2, r3, #1
 8006174:	2030      	movs	r0, #48	; 0x30
 8006176:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800617a:	4422      	add	r2, r4
 800617c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006180:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006184:	3302      	adds	r3, #2
 8006186:	e7c4      	b.n	8006112 <_printf_common+0x62>
 8006188:	2301      	movs	r3, #1
 800618a:	4622      	mov	r2, r4
 800618c:	4639      	mov	r1, r7
 800618e:	4630      	mov	r0, r6
 8006190:	47c0      	blx	r8
 8006192:	3001      	adds	r0, #1
 8006194:	d0e6      	beq.n	8006164 <_printf_common+0xb4>
 8006196:	f109 0901 	add.w	r9, r9, #1
 800619a:	e7d7      	b.n	800614c <_printf_common+0x9c>

0800619c <_printf_i>:
 800619c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80061a0:	4617      	mov	r7, r2
 80061a2:	7e0a      	ldrb	r2, [r1, #24]
 80061a4:	b085      	sub	sp, #20
 80061a6:	2a6e      	cmp	r2, #110	; 0x6e
 80061a8:	4698      	mov	r8, r3
 80061aa:	4606      	mov	r6, r0
 80061ac:	460c      	mov	r4, r1
 80061ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80061b0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 80061b4:	f000 80bc 	beq.w	8006330 <_printf_i+0x194>
 80061b8:	d81a      	bhi.n	80061f0 <_printf_i+0x54>
 80061ba:	2a63      	cmp	r2, #99	; 0x63
 80061bc:	d02e      	beq.n	800621c <_printf_i+0x80>
 80061be:	d80a      	bhi.n	80061d6 <_printf_i+0x3a>
 80061c0:	2a00      	cmp	r2, #0
 80061c2:	f000 80c8 	beq.w	8006356 <_printf_i+0x1ba>
 80061c6:	2a58      	cmp	r2, #88	; 0x58
 80061c8:	f000 808a 	beq.w	80062e0 <_printf_i+0x144>
 80061cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80061d0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80061d4:	e02a      	b.n	800622c <_printf_i+0x90>
 80061d6:	2a64      	cmp	r2, #100	; 0x64
 80061d8:	d001      	beq.n	80061de <_printf_i+0x42>
 80061da:	2a69      	cmp	r2, #105	; 0x69
 80061dc:	d1f6      	bne.n	80061cc <_printf_i+0x30>
 80061de:	6821      	ldr	r1, [r4, #0]
 80061e0:	681a      	ldr	r2, [r3, #0]
 80061e2:	f011 0f80 	tst.w	r1, #128	; 0x80
 80061e6:	d023      	beq.n	8006230 <_printf_i+0x94>
 80061e8:	1d11      	adds	r1, r2, #4
 80061ea:	6019      	str	r1, [r3, #0]
 80061ec:	6813      	ldr	r3, [r2, #0]
 80061ee:	e027      	b.n	8006240 <_printf_i+0xa4>
 80061f0:	2a73      	cmp	r2, #115	; 0x73
 80061f2:	f000 80b4 	beq.w	800635e <_printf_i+0x1c2>
 80061f6:	d808      	bhi.n	800620a <_printf_i+0x6e>
 80061f8:	2a6f      	cmp	r2, #111	; 0x6f
 80061fa:	d02a      	beq.n	8006252 <_printf_i+0xb6>
 80061fc:	2a70      	cmp	r2, #112	; 0x70
 80061fe:	d1e5      	bne.n	80061cc <_printf_i+0x30>
 8006200:	680a      	ldr	r2, [r1, #0]
 8006202:	f042 0220 	orr.w	r2, r2, #32
 8006206:	600a      	str	r2, [r1, #0]
 8006208:	e003      	b.n	8006212 <_printf_i+0x76>
 800620a:	2a75      	cmp	r2, #117	; 0x75
 800620c:	d021      	beq.n	8006252 <_printf_i+0xb6>
 800620e:	2a78      	cmp	r2, #120	; 0x78
 8006210:	d1dc      	bne.n	80061cc <_printf_i+0x30>
 8006212:	2278      	movs	r2, #120	; 0x78
 8006214:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006218:	496e      	ldr	r1, [pc, #440]	; (80063d4 <_printf_i+0x238>)
 800621a:	e064      	b.n	80062e6 <_printf_i+0x14a>
 800621c:	681a      	ldr	r2, [r3, #0]
 800621e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8006222:	1d11      	adds	r1, r2, #4
 8006224:	6019      	str	r1, [r3, #0]
 8006226:	6813      	ldr	r3, [r2, #0]
 8006228:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800622c:	2301      	movs	r3, #1
 800622e:	e0a3      	b.n	8006378 <_printf_i+0x1dc>
 8006230:	f011 0f40 	tst.w	r1, #64	; 0x40
 8006234:	f102 0104 	add.w	r1, r2, #4
 8006238:	6019      	str	r1, [r3, #0]
 800623a:	d0d7      	beq.n	80061ec <_printf_i+0x50>
 800623c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8006240:	2b00      	cmp	r3, #0
 8006242:	da03      	bge.n	800624c <_printf_i+0xb0>
 8006244:	222d      	movs	r2, #45	; 0x2d
 8006246:	425b      	negs	r3, r3
 8006248:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800624c:	4962      	ldr	r1, [pc, #392]	; (80063d8 <_printf_i+0x23c>)
 800624e:	220a      	movs	r2, #10
 8006250:	e017      	b.n	8006282 <_printf_i+0xe6>
 8006252:	6820      	ldr	r0, [r4, #0]
 8006254:	6819      	ldr	r1, [r3, #0]
 8006256:	f010 0f80 	tst.w	r0, #128	; 0x80
 800625a:	d003      	beq.n	8006264 <_printf_i+0xc8>
 800625c:	1d08      	adds	r0, r1, #4
 800625e:	6018      	str	r0, [r3, #0]
 8006260:	680b      	ldr	r3, [r1, #0]
 8006262:	e006      	b.n	8006272 <_printf_i+0xd6>
 8006264:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006268:	f101 0004 	add.w	r0, r1, #4
 800626c:	6018      	str	r0, [r3, #0]
 800626e:	d0f7      	beq.n	8006260 <_printf_i+0xc4>
 8006270:	880b      	ldrh	r3, [r1, #0]
 8006272:	4959      	ldr	r1, [pc, #356]	; (80063d8 <_printf_i+0x23c>)
 8006274:	2a6f      	cmp	r2, #111	; 0x6f
 8006276:	bf14      	ite	ne
 8006278:	220a      	movne	r2, #10
 800627a:	2208      	moveq	r2, #8
 800627c:	2000      	movs	r0, #0
 800627e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006282:	6865      	ldr	r5, [r4, #4]
 8006284:	60a5      	str	r5, [r4, #8]
 8006286:	2d00      	cmp	r5, #0
 8006288:	f2c0 809c 	blt.w	80063c4 <_printf_i+0x228>
 800628c:	6820      	ldr	r0, [r4, #0]
 800628e:	f020 0004 	bic.w	r0, r0, #4
 8006292:	6020      	str	r0, [r4, #0]
 8006294:	2b00      	cmp	r3, #0
 8006296:	d13f      	bne.n	8006318 <_printf_i+0x17c>
 8006298:	2d00      	cmp	r5, #0
 800629a:	f040 8095 	bne.w	80063c8 <_printf_i+0x22c>
 800629e:	4675      	mov	r5, lr
 80062a0:	2a08      	cmp	r2, #8
 80062a2:	d10b      	bne.n	80062bc <_printf_i+0x120>
 80062a4:	6823      	ldr	r3, [r4, #0]
 80062a6:	07da      	lsls	r2, r3, #31
 80062a8:	d508      	bpl.n	80062bc <_printf_i+0x120>
 80062aa:	6923      	ldr	r3, [r4, #16]
 80062ac:	6862      	ldr	r2, [r4, #4]
 80062ae:	429a      	cmp	r2, r3
 80062b0:	bfde      	ittt	le
 80062b2:	2330      	movle	r3, #48	; 0x30
 80062b4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80062b8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80062bc:	ebae 0305 	sub.w	r3, lr, r5
 80062c0:	6123      	str	r3, [r4, #16]
 80062c2:	f8cd 8000 	str.w	r8, [sp]
 80062c6:	463b      	mov	r3, r7
 80062c8:	aa03      	add	r2, sp, #12
 80062ca:	4621      	mov	r1, r4
 80062cc:	4630      	mov	r0, r6
 80062ce:	f7ff feef 	bl	80060b0 <_printf_common>
 80062d2:	3001      	adds	r0, #1
 80062d4:	d155      	bne.n	8006382 <_printf_i+0x1e6>
 80062d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80062da:	b005      	add	sp, #20
 80062dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80062e0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 80062e4:	493c      	ldr	r1, [pc, #240]	; (80063d8 <_printf_i+0x23c>)
 80062e6:	6822      	ldr	r2, [r4, #0]
 80062e8:	6818      	ldr	r0, [r3, #0]
 80062ea:	f012 0f80 	tst.w	r2, #128	; 0x80
 80062ee:	f100 0504 	add.w	r5, r0, #4
 80062f2:	601d      	str	r5, [r3, #0]
 80062f4:	d001      	beq.n	80062fa <_printf_i+0x15e>
 80062f6:	6803      	ldr	r3, [r0, #0]
 80062f8:	e002      	b.n	8006300 <_printf_i+0x164>
 80062fa:	0655      	lsls	r5, r2, #25
 80062fc:	d5fb      	bpl.n	80062f6 <_printf_i+0x15a>
 80062fe:	8803      	ldrh	r3, [r0, #0]
 8006300:	07d0      	lsls	r0, r2, #31
 8006302:	bf44      	itt	mi
 8006304:	f042 0220 	orrmi.w	r2, r2, #32
 8006308:	6022      	strmi	r2, [r4, #0]
 800630a:	b91b      	cbnz	r3, 8006314 <_printf_i+0x178>
 800630c:	6822      	ldr	r2, [r4, #0]
 800630e:	f022 0220 	bic.w	r2, r2, #32
 8006312:	6022      	str	r2, [r4, #0]
 8006314:	2210      	movs	r2, #16
 8006316:	e7b1      	b.n	800627c <_printf_i+0xe0>
 8006318:	4675      	mov	r5, lr
 800631a:	fbb3 f0f2 	udiv	r0, r3, r2
 800631e:	fb02 3310 	mls	r3, r2, r0, r3
 8006322:	5ccb      	ldrb	r3, [r1, r3]
 8006324:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006328:	4603      	mov	r3, r0
 800632a:	2800      	cmp	r0, #0
 800632c:	d1f5      	bne.n	800631a <_printf_i+0x17e>
 800632e:	e7b7      	b.n	80062a0 <_printf_i+0x104>
 8006330:	6808      	ldr	r0, [r1, #0]
 8006332:	681a      	ldr	r2, [r3, #0]
 8006334:	6949      	ldr	r1, [r1, #20]
 8006336:	f010 0f80 	tst.w	r0, #128	; 0x80
 800633a:	d004      	beq.n	8006346 <_printf_i+0x1aa>
 800633c:	1d10      	adds	r0, r2, #4
 800633e:	6018      	str	r0, [r3, #0]
 8006340:	6813      	ldr	r3, [r2, #0]
 8006342:	6019      	str	r1, [r3, #0]
 8006344:	e007      	b.n	8006356 <_printf_i+0x1ba>
 8006346:	f010 0f40 	tst.w	r0, #64	; 0x40
 800634a:	f102 0004 	add.w	r0, r2, #4
 800634e:	6018      	str	r0, [r3, #0]
 8006350:	6813      	ldr	r3, [r2, #0]
 8006352:	d0f6      	beq.n	8006342 <_printf_i+0x1a6>
 8006354:	8019      	strh	r1, [r3, #0]
 8006356:	2300      	movs	r3, #0
 8006358:	6123      	str	r3, [r4, #16]
 800635a:	4675      	mov	r5, lr
 800635c:	e7b1      	b.n	80062c2 <_printf_i+0x126>
 800635e:	681a      	ldr	r2, [r3, #0]
 8006360:	1d11      	adds	r1, r2, #4
 8006362:	6019      	str	r1, [r3, #0]
 8006364:	6815      	ldr	r5, [r2, #0]
 8006366:	6862      	ldr	r2, [r4, #4]
 8006368:	2100      	movs	r1, #0
 800636a:	4628      	mov	r0, r5
 800636c:	f7ff fd50 	bl	8005e10 <memchr>
 8006370:	b108      	cbz	r0, 8006376 <_printf_i+0x1da>
 8006372:	1b40      	subs	r0, r0, r5
 8006374:	6060      	str	r0, [r4, #4]
 8006376:	6863      	ldr	r3, [r4, #4]
 8006378:	6123      	str	r3, [r4, #16]
 800637a:	2300      	movs	r3, #0
 800637c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006380:	e79f      	b.n	80062c2 <_printf_i+0x126>
 8006382:	6923      	ldr	r3, [r4, #16]
 8006384:	462a      	mov	r2, r5
 8006386:	4639      	mov	r1, r7
 8006388:	4630      	mov	r0, r6
 800638a:	47c0      	blx	r8
 800638c:	3001      	adds	r0, #1
 800638e:	d0a2      	beq.n	80062d6 <_printf_i+0x13a>
 8006390:	6823      	ldr	r3, [r4, #0]
 8006392:	079b      	lsls	r3, r3, #30
 8006394:	d507      	bpl.n	80063a6 <_printf_i+0x20a>
 8006396:	2500      	movs	r5, #0
 8006398:	f104 0919 	add.w	r9, r4, #25
 800639c:	68e3      	ldr	r3, [r4, #12]
 800639e:	9a03      	ldr	r2, [sp, #12]
 80063a0:	1a9b      	subs	r3, r3, r2
 80063a2:	429d      	cmp	r5, r3
 80063a4:	db05      	blt.n	80063b2 <_printf_i+0x216>
 80063a6:	68e0      	ldr	r0, [r4, #12]
 80063a8:	9b03      	ldr	r3, [sp, #12]
 80063aa:	4298      	cmp	r0, r3
 80063ac:	bfb8      	it	lt
 80063ae:	4618      	movlt	r0, r3
 80063b0:	e793      	b.n	80062da <_printf_i+0x13e>
 80063b2:	2301      	movs	r3, #1
 80063b4:	464a      	mov	r2, r9
 80063b6:	4639      	mov	r1, r7
 80063b8:	4630      	mov	r0, r6
 80063ba:	47c0      	blx	r8
 80063bc:	3001      	adds	r0, #1
 80063be:	d08a      	beq.n	80062d6 <_printf_i+0x13a>
 80063c0:	3501      	adds	r5, #1
 80063c2:	e7eb      	b.n	800639c <_printf_i+0x200>
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d1a7      	bne.n	8006318 <_printf_i+0x17c>
 80063c8:	780b      	ldrb	r3, [r1, #0]
 80063ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80063ce:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80063d2:	e765      	b.n	80062a0 <_printf_i+0x104>
 80063d4:	08007161 	.word	0x08007161
 80063d8:	08007150 	.word	0x08007150

080063dc <realloc>:
 80063dc:	4b02      	ldr	r3, [pc, #8]	; (80063e8 <realloc+0xc>)
 80063de:	460a      	mov	r2, r1
 80063e0:	4601      	mov	r1, r0
 80063e2:	6818      	ldr	r0, [r3, #0]
 80063e4:	f7fe bf3a 	b.w	800525c <__wrap__realloc_r>
 80063e8:	200001ac 	.word	0x200001ac

080063ec <_sbrk_r>:
 80063ec:	b538      	push	{r3, r4, r5, lr}
 80063ee:	4c06      	ldr	r4, [pc, #24]	; (8006408 <_sbrk_r+0x1c>)
 80063f0:	2300      	movs	r3, #0
 80063f2:	4605      	mov	r5, r0
 80063f4:	4608      	mov	r0, r1
 80063f6:	6023      	str	r3, [r4, #0]
 80063f8:	f7ff f81a 	bl	8005430 <_sbrk>
 80063fc:	1c43      	adds	r3, r0, #1
 80063fe:	d102      	bne.n	8006406 <_sbrk_r+0x1a>
 8006400:	6823      	ldr	r3, [r4, #0]
 8006402:	b103      	cbz	r3, 8006406 <_sbrk_r+0x1a>
 8006404:	602b      	str	r3, [r5, #0]
 8006406:	bd38      	pop	{r3, r4, r5, pc}
 8006408:	20001f08 	.word	0x20001f08

0800640c <__sread>:
 800640c:	b510      	push	{r4, lr}
 800640e:	460c      	mov	r4, r1
 8006410:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006414:	f000 f9f4 	bl	8006800 <_read_r>
 8006418:	2800      	cmp	r0, #0
 800641a:	bfab      	itete	ge
 800641c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800641e:	89a3      	ldrhlt	r3, [r4, #12]
 8006420:	181b      	addge	r3, r3, r0
 8006422:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006426:	bfac      	ite	ge
 8006428:	6563      	strge	r3, [r4, #84]	; 0x54
 800642a:	81a3      	strhlt	r3, [r4, #12]
 800642c:	bd10      	pop	{r4, pc}

0800642e <__swrite>:
 800642e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006432:	461f      	mov	r7, r3
 8006434:	898b      	ldrh	r3, [r1, #12]
 8006436:	05db      	lsls	r3, r3, #23
 8006438:	4605      	mov	r5, r0
 800643a:	460c      	mov	r4, r1
 800643c:	4616      	mov	r6, r2
 800643e:	d505      	bpl.n	800644c <__swrite+0x1e>
 8006440:	2302      	movs	r3, #2
 8006442:	2200      	movs	r2, #0
 8006444:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006448:	f000 f870 	bl	800652c <_lseek_r>
 800644c:	89a3      	ldrh	r3, [r4, #12]
 800644e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006452:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006456:	81a3      	strh	r3, [r4, #12]
 8006458:	4632      	mov	r2, r6
 800645a:	463b      	mov	r3, r7
 800645c:	4628      	mov	r0, r5
 800645e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006462:	f000 b841 	b.w	80064e8 <_write_r>

08006466 <__sseek>:
 8006466:	b510      	push	{r4, lr}
 8006468:	460c      	mov	r4, r1
 800646a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800646e:	f000 f85d 	bl	800652c <_lseek_r>
 8006472:	1c43      	adds	r3, r0, #1
 8006474:	89a3      	ldrh	r3, [r4, #12]
 8006476:	bf15      	itete	ne
 8006478:	6560      	strne	r0, [r4, #84]	; 0x54
 800647a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800647e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006482:	81a3      	strheq	r3, [r4, #12]
 8006484:	bf18      	it	ne
 8006486:	81a3      	strhne	r3, [r4, #12]
 8006488:	bd10      	pop	{r4, pc}

0800648a <__sclose>:
 800648a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800648e:	f000 b83d 	b.w	800650c <_close_r>

08006492 <strlen>:
 8006492:	4603      	mov	r3, r0
 8006494:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006498:	2a00      	cmp	r2, #0
 800649a:	d1fb      	bne.n	8006494 <strlen+0x2>
 800649c:	1a18      	subs	r0, r3, r0
 800649e:	3801      	subs	r0, #1
 80064a0:	4770      	bx	lr

080064a2 <_vsiprintf_r>:
 80064a2:	b510      	push	{r4, lr}
 80064a4:	b09a      	sub	sp, #104	; 0x68
 80064a6:	f44f 7402 	mov.w	r4, #520	; 0x208
 80064aa:	9100      	str	r1, [sp, #0]
 80064ac:	9104      	str	r1, [sp, #16]
 80064ae:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80064b2:	9102      	str	r1, [sp, #8]
 80064b4:	9105      	str	r1, [sp, #20]
 80064b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80064ba:	f8ad 100e 	strh.w	r1, [sp, #14]
 80064be:	4669      	mov	r1, sp
 80064c0:	f8ad 400c 	strh.w	r4, [sp, #12]
 80064c4:	f000 f8a8 	bl	8006618 <_svfiprintf_r>
 80064c8:	9b00      	ldr	r3, [sp, #0]
 80064ca:	2200      	movs	r2, #0
 80064cc:	701a      	strb	r2, [r3, #0]
 80064ce:	b01a      	add	sp, #104	; 0x68
 80064d0:	bd10      	pop	{r4, pc}
	...

080064d4 <vsiprintf>:
 80064d4:	4613      	mov	r3, r2
 80064d6:	460a      	mov	r2, r1
 80064d8:	4601      	mov	r1, r0
 80064da:	4802      	ldr	r0, [pc, #8]	; (80064e4 <vsiprintf+0x10>)
 80064dc:	6800      	ldr	r0, [r0, #0]
 80064de:	f7ff bfe0 	b.w	80064a2 <_vsiprintf_r>
 80064e2:	bf00      	nop
 80064e4:	200001ac 	.word	0x200001ac

080064e8 <_write_r>:
 80064e8:	b538      	push	{r3, r4, r5, lr}
 80064ea:	4c07      	ldr	r4, [pc, #28]	; (8006508 <_write_r+0x20>)
 80064ec:	4605      	mov	r5, r0
 80064ee:	4608      	mov	r0, r1
 80064f0:	4611      	mov	r1, r2
 80064f2:	2200      	movs	r2, #0
 80064f4:	6022      	str	r2, [r4, #0]
 80064f6:	461a      	mov	r2, r3
 80064f8:	f7fe ff08 	bl	800530c <_write>
 80064fc:	1c43      	adds	r3, r0, #1
 80064fe:	d102      	bne.n	8006506 <_write_r+0x1e>
 8006500:	6823      	ldr	r3, [r4, #0]
 8006502:	b103      	cbz	r3, 8006506 <_write_r+0x1e>
 8006504:	602b      	str	r3, [r5, #0]
 8006506:	bd38      	pop	{r3, r4, r5, pc}
 8006508:	20001f08 	.word	0x20001f08

0800650c <_close_r>:
 800650c:	b538      	push	{r3, r4, r5, lr}
 800650e:	4c06      	ldr	r4, [pc, #24]	; (8006528 <_close_r+0x1c>)
 8006510:	2300      	movs	r3, #0
 8006512:	4605      	mov	r5, r0
 8006514:	4608      	mov	r0, r1
 8006516:	6023      	str	r3, [r4, #0]
 8006518:	f7fe fed8 	bl	80052cc <_close>
 800651c:	1c43      	adds	r3, r0, #1
 800651e:	d102      	bne.n	8006526 <_close_r+0x1a>
 8006520:	6823      	ldr	r3, [r4, #0]
 8006522:	b103      	cbz	r3, 8006526 <_close_r+0x1a>
 8006524:	602b      	str	r3, [r5, #0]
 8006526:	bd38      	pop	{r3, r4, r5, pc}
 8006528:	20001f08 	.word	0x20001f08

0800652c <_lseek_r>:
 800652c:	b538      	push	{r3, r4, r5, lr}
 800652e:	4c07      	ldr	r4, [pc, #28]	; (800654c <_lseek_r+0x20>)
 8006530:	4605      	mov	r5, r0
 8006532:	4608      	mov	r0, r1
 8006534:	4611      	mov	r1, r2
 8006536:	2200      	movs	r2, #0
 8006538:	6022      	str	r2, [r4, #0]
 800653a:	461a      	mov	r2, r3
 800653c:	f7fe ff4c 	bl	80053d8 <_lseek>
 8006540:	1c43      	adds	r3, r0, #1
 8006542:	d102      	bne.n	800654a <_lseek_r+0x1e>
 8006544:	6823      	ldr	r3, [r4, #0]
 8006546:	b103      	cbz	r3, 800654a <_lseek_r+0x1e>
 8006548:	602b      	str	r3, [r5, #0]
 800654a:	bd38      	pop	{r3, r4, r5, pc}
 800654c:	20001f08 	.word	0x20001f08

08006550 <_malloc_usable_size_r>:
 8006550:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8006554:	2800      	cmp	r0, #0
 8006556:	f1a0 0004 	sub.w	r0, r0, #4
 800655a:	bfbc      	itt	lt
 800655c:	580b      	ldrlt	r3, [r1, r0]
 800655e:	18c0      	addlt	r0, r0, r3
 8006560:	4770      	bx	lr

08006562 <__ssputs_r>:
 8006562:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006566:	688e      	ldr	r6, [r1, #8]
 8006568:	429e      	cmp	r6, r3
 800656a:	4682      	mov	r10, r0
 800656c:	460c      	mov	r4, r1
 800656e:	4691      	mov	r9, r2
 8006570:	4698      	mov	r8, r3
 8006572:	d835      	bhi.n	80065e0 <__ssputs_r+0x7e>
 8006574:	898a      	ldrh	r2, [r1, #12]
 8006576:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800657a:	d031      	beq.n	80065e0 <__ssputs_r+0x7e>
 800657c:	6825      	ldr	r5, [r4, #0]
 800657e:	6909      	ldr	r1, [r1, #16]
 8006580:	1a6f      	subs	r7, r5, r1
 8006582:	6965      	ldr	r5, [r4, #20]
 8006584:	2302      	movs	r3, #2
 8006586:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800658a:	fb95 f5f3 	sdiv	r5, r5, r3
 800658e:	f108 0301 	add.w	r3, r8, #1
 8006592:	443b      	add	r3, r7
 8006594:	429d      	cmp	r5, r3
 8006596:	bf38      	it	cc
 8006598:	461d      	movcc	r5, r3
 800659a:	0553      	lsls	r3, r2, #21
 800659c:	d531      	bpl.n	8006602 <__ssputs_r+0xa0>
 800659e:	4629      	mov	r1, r5
 80065a0:	f7fe fe5a 	bl	8005258 <__wrap__malloc_r>
 80065a4:	4606      	mov	r6, r0
 80065a6:	b950      	cbnz	r0, 80065be <__ssputs_r+0x5c>
 80065a8:	230c      	movs	r3, #12
 80065aa:	f8ca 3000 	str.w	r3, [r10]
 80065ae:	89a3      	ldrh	r3, [r4, #12]
 80065b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80065b4:	81a3      	strh	r3, [r4, #12]
 80065b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80065ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80065be:	463a      	mov	r2, r7
 80065c0:	6921      	ldr	r1, [r4, #16]
 80065c2:	f7ff fc75 	bl	8005eb0 <memcpy>
 80065c6:	89a3      	ldrh	r3, [r4, #12]
 80065c8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80065cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80065d0:	81a3      	strh	r3, [r4, #12]
 80065d2:	6126      	str	r6, [r4, #16]
 80065d4:	6165      	str	r5, [r4, #20]
 80065d6:	443e      	add	r6, r7
 80065d8:	1bed      	subs	r5, r5, r7
 80065da:	6026      	str	r6, [r4, #0]
 80065dc:	60a5      	str	r5, [r4, #8]
 80065de:	4646      	mov	r6, r8
 80065e0:	4546      	cmp	r6, r8
 80065e2:	bf28      	it	cs
 80065e4:	4646      	movcs	r6, r8
 80065e6:	4632      	mov	r2, r6
 80065e8:	4649      	mov	r1, r9
 80065ea:	6820      	ldr	r0, [r4, #0]
 80065ec:	f7ff fc6b 	bl	8005ec6 <memmove>
 80065f0:	68a3      	ldr	r3, [r4, #8]
 80065f2:	1b9b      	subs	r3, r3, r6
 80065f4:	60a3      	str	r3, [r4, #8]
 80065f6:	6823      	ldr	r3, [r4, #0]
 80065f8:	441e      	add	r6, r3
 80065fa:	6026      	str	r6, [r4, #0]
 80065fc:	2000      	movs	r0, #0
 80065fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006602:	462a      	mov	r2, r5
 8006604:	f7fe fe2a 	bl	800525c <__wrap__realloc_r>
 8006608:	4606      	mov	r6, r0
 800660a:	2800      	cmp	r0, #0
 800660c:	d1e1      	bne.n	80065d2 <__ssputs_r+0x70>
 800660e:	6921      	ldr	r1, [r4, #16]
 8006610:	4650      	mov	r0, r10
 8006612:	f7fe fe25 	bl	8005260 <__wrap__free_r>
 8006616:	e7c7      	b.n	80065a8 <__ssputs_r+0x46>

08006618 <_svfiprintf_r>:
 8006618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800661c:	b09d      	sub	sp, #116	; 0x74
 800661e:	4680      	mov	r8, r0
 8006620:	9303      	str	r3, [sp, #12]
 8006622:	898b      	ldrh	r3, [r1, #12]
 8006624:	061c      	lsls	r4, r3, #24
 8006626:	460d      	mov	r5, r1
 8006628:	4616      	mov	r6, r2
 800662a:	d50f      	bpl.n	800664c <_svfiprintf_r+0x34>
 800662c:	690b      	ldr	r3, [r1, #16]
 800662e:	b96b      	cbnz	r3, 800664c <_svfiprintf_r+0x34>
 8006630:	2140      	movs	r1, #64	; 0x40
 8006632:	f7fe fe11 	bl	8005258 <__wrap__malloc_r>
 8006636:	6028      	str	r0, [r5, #0]
 8006638:	6128      	str	r0, [r5, #16]
 800663a:	b928      	cbnz	r0, 8006648 <_svfiprintf_r+0x30>
 800663c:	230c      	movs	r3, #12
 800663e:	f8c8 3000 	str.w	r3, [r8]
 8006642:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006646:	e0c5      	b.n	80067d4 <_svfiprintf_r+0x1bc>
 8006648:	2340      	movs	r3, #64	; 0x40
 800664a:	616b      	str	r3, [r5, #20]
 800664c:	2300      	movs	r3, #0
 800664e:	9309      	str	r3, [sp, #36]	; 0x24
 8006650:	2320      	movs	r3, #32
 8006652:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006656:	2330      	movs	r3, #48	; 0x30
 8006658:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800665c:	f04f 0b01 	mov.w	r11, #1
 8006660:	4637      	mov	r7, r6
 8006662:	463c      	mov	r4, r7
 8006664:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006668:	2b00      	cmp	r3, #0
 800666a:	d13c      	bne.n	80066e6 <_svfiprintf_r+0xce>
 800666c:	ebb7 0a06 	subs.w	r10, r7, r6
 8006670:	d00b      	beq.n	800668a <_svfiprintf_r+0x72>
 8006672:	4653      	mov	r3, r10
 8006674:	4632      	mov	r2, r6
 8006676:	4629      	mov	r1, r5
 8006678:	4640      	mov	r0, r8
 800667a:	f7ff ff72 	bl	8006562 <__ssputs_r>
 800667e:	3001      	adds	r0, #1
 8006680:	f000 80a3 	beq.w	80067ca <_svfiprintf_r+0x1b2>
 8006684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006686:	4453      	add	r3, r10
 8006688:	9309      	str	r3, [sp, #36]	; 0x24
 800668a:	783b      	ldrb	r3, [r7, #0]
 800668c:	2b00      	cmp	r3, #0
 800668e:	f000 809c 	beq.w	80067ca <_svfiprintf_r+0x1b2>
 8006692:	2300      	movs	r3, #0
 8006694:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006698:	9304      	str	r3, [sp, #16]
 800669a:	9307      	str	r3, [sp, #28]
 800669c:	9205      	str	r2, [sp, #20]
 800669e:	9306      	str	r3, [sp, #24]
 80066a0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80066a4:	931a      	str	r3, [sp, #104]	; 0x68
 80066a6:	2205      	movs	r2, #5
 80066a8:	7821      	ldrb	r1, [r4, #0]
 80066aa:	4850      	ldr	r0, [pc, #320]	; (80067ec <_svfiprintf_r+0x1d4>)
 80066ac:	f7ff fbb0 	bl	8005e10 <memchr>
 80066b0:	1c67      	adds	r7, r4, #1
 80066b2:	9b04      	ldr	r3, [sp, #16]
 80066b4:	b9d8      	cbnz	r0, 80066ee <_svfiprintf_r+0xd6>
 80066b6:	06d9      	lsls	r1, r3, #27
 80066b8:	bf44      	itt	mi
 80066ba:	2220      	movmi	r2, #32
 80066bc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80066c0:	071a      	lsls	r2, r3, #28
 80066c2:	bf44      	itt	mi
 80066c4:	222b      	movmi	r2, #43	; 0x2b
 80066c6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80066ca:	7822      	ldrb	r2, [r4, #0]
 80066cc:	2a2a      	cmp	r2, #42	; 0x2a
 80066ce:	d016      	beq.n	80066fe <_svfiprintf_r+0xe6>
 80066d0:	9a07      	ldr	r2, [sp, #28]
 80066d2:	2100      	movs	r1, #0
 80066d4:	200a      	movs	r0, #10
 80066d6:	4627      	mov	r7, r4
 80066d8:	3401      	adds	r4, #1
 80066da:	783b      	ldrb	r3, [r7, #0]
 80066dc:	3b30      	subs	r3, #48	; 0x30
 80066de:	2b09      	cmp	r3, #9
 80066e0:	d951      	bls.n	8006786 <_svfiprintf_r+0x16e>
 80066e2:	b1c9      	cbz	r1, 8006718 <_svfiprintf_r+0x100>
 80066e4:	e011      	b.n	800670a <_svfiprintf_r+0xf2>
 80066e6:	2b25      	cmp	r3, #37	; 0x25
 80066e8:	d0c0      	beq.n	800666c <_svfiprintf_r+0x54>
 80066ea:	4627      	mov	r7, r4
 80066ec:	e7b9      	b.n	8006662 <_svfiprintf_r+0x4a>
 80066ee:	4a3f      	ldr	r2, [pc, #252]	; (80067ec <_svfiprintf_r+0x1d4>)
 80066f0:	1a80      	subs	r0, r0, r2
 80066f2:	fa0b f000 	lsl.w	r0, r11, r0
 80066f6:	4318      	orrs	r0, r3
 80066f8:	9004      	str	r0, [sp, #16]
 80066fa:	463c      	mov	r4, r7
 80066fc:	e7d3      	b.n	80066a6 <_svfiprintf_r+0x8e>
 80066fe:	9a03      	ldr	r2, [sp, #12]
 8006700:	1d11      	adds	r1, r2, #4
 8006702:	6812      	ldr	r2, [r2, #0]
 8006704:	9103      	str	r1, [sp, #12]
 8006706:	2a00      	cmp	r2, #0
 8006708:	db01      	blt.n	800670e <_svfiprintf_r+0xf6>
 800670a:	9207      	str	r2, [sp, #28]
 800670c:	e004      	b.n	8006718 <_svfiprintf_r+0x100>
 800670e:	4252      	negs	r2, r2
 8006710:	f043 0302 	orr.w	r3, r3, #2
 8006714:	9207      	str	r2, [sp, #28]
 8006716:	9304      	str	r3, [sp, #16]
 8006718:	783b      	ldrb	r3, [r7, #0]
 800671a:	2b2e      	cmp	r3, #46	; 0x2e
 800671c:	d10e      	bne.n	800673c <_svfiprintf_r+0x124>
 800671e:	787b      	ldrb	r3, [r7, #1]
 8006720:	2b2a      	cmp	r3, #42	; 0x2a
 8006722:	f107 0101 	add.w	r1, r7, #1
 8006726:	d132      	bne.n	800678e <_svfiprintf_r+0x176>
 8006728:	9b03      	ldr	r3, [sp, #12]
 800672a:	1d1a      	adds	r2, r3, #4
 800672c:	681b      	ldr	r3, [r3, #0]
 800672e:	9203      	str	r2, [sp, #12]
 8006730:	2b00      	cmp	r3, #0
 8006732:	bfb8      	it	lt
 8006734:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006738:	3702      	adds	r7, #2
 800673a:	9305      	str	r3, [sp, #20]
 800673c:	4c2c      	ldr	r4, [pc, #176]	; (80067f0 <_svfiprintf_r+0x1d8>)
 800673e:	7839      	ldrb	r1, [r7, #0]
 8006740:	2203      	movs	r2, #3
 8006742:	4620      	mov	r0, r4
 8006744:	f7ff fb64 	bl	8005e10 <memchr>
 8006748:	b138      	cbz	r0, 800675a <_svfiprintf_r+0x142>
 800674a:	2340      	movs	r3, #64	; 0x40
 800674c:	1b00      	subs	r0, r0, r4
 800674e:	fa03 f000 	lsl.w	r0, r3, r0
 8006752:	9b04      	ldr	r3, [sp, #16]
 8006754:	4303      	orrs	r3, r0
 8006756:	9304      	str	r3, [sp, #16]
 8006758:	3701      	adds	r7, #1
 800675a:	7839      	ldrb	r1, [r7, #0]
 800675c:	4825      	ldr	r0, [pc, #148]	; (80067f4 <_svfiprintf_r+0x1dc>)
 800675e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006762:	2206      	movs	r2, #6
 8006764:	1c7e      	adds	r6, r7, #1
 8006766:	f7ff fb53 	bl	8005e10 <memchr>
 800676a:	2800      	cmp	r0, #0
 800676c:	d035      	beq.n	80067da <_svfiprintf_r+0x1c2>
 800676e:	4b22      	ldr	r3, [pc, #136]	; (80067f8 <_svfiprintf_r+0x1e0>)
 8006770:	b9fb      	cbnz	r3, 80067b2 <_svfiprintf_r+0x19a>
 8006772:	9b03      	ldr	r3, [sp, #12]
 8006774:	3307      	adds	r3, #7
 8006776:	f023 0307 	bic.w	r3, r3, #7
 800677a:	3308      	adds	r3, #8
 800677c:	9303      	str	r3, [sp, #12]
 800677e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006780:	444b      	add	r3, r9
 8006782:	9309      	str	r3, [sp, #36]	; 0x24
 8006784:	e76c      	b.n	8006660 <_svfiprintf_r+0x48>
 8006786:	fb00 3202 	mla	r2, r0, r2, r3
 800678a:	2101      	movs	r1, #1
 800678c:	e7a3      	b.n	80066d6 <_svfiprintf_r+0xbe>
 800678e:	2300      	movs	r3, #0
 8006790:	9305      	str	r3, [sp, #20]
 8006792:	4618      	mov	r0, r3
 8006794:	240a      	movs	r4, #10
 8006796:	460f      	mov	r7, r1
 8006798:	3101      	adds	r1, #1
 800679a:	783a      	ldrb	r2, [r7, #0]
 800679c:	3a30      	subs	r2, #48	; 0x30
 800679e:	2a09      	cmp	r2, #9
 80067a0:	d903      	bls.n	80067aa <_svfiprintf_r+0x192>
 80067a2:	2b00      	cmp	r3, #0
 80067a4:	d0ca      	beq.n	800673c <_svfiprintf_r+0x124>
 80067a6:	9005      	str	r0, [sp, #20]
 80067a8:	e7c8      	b.n	800673c <_svfiprintf_r+0x124>
 80067aa:	fb04 2000 	mla	r0, r4, r0, r2
 80067ae:	2301      	movs	r3, #1
 80067b0:	e7f1      	b.n	8006796 <_svfiprintf_r+0x17e>
 80067b2:	ab03      	add	r3, sp, #12
 80067b4:	9300      	str	r3, [sp, #0]
 80067b6:	462a      	mov	r2, r5
 80067b8:	4b10      	ldr	r3, [pc, #64]	; (80067fc <_svfiprintf_r+0x1e4>)
 80067ba:	a904      	add	r1, sp, #16
 80067bc:	4640      	mov	r0, r8
 80067be:	f3af 8000 	nop.w
 80067c2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80067c6:	4681      	mov	r9, r0
 80067c8:	d1d9      	bne.n	800677e <_svfiprintf_r+0x166>
 80067ca:	89ab      	ldrh	r3, [r5, #12]
 80067cc:	065b      	lsls	r3, r3, #25
 80067ce:	f53f af38 	bmi.w	8006642 <_svfiprintf_r+0x2a>
 80067d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80067d4:	b01d      	add	sp, #116	; 0x74
 80067d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80067da:	ab03      	add	r3, sp, #12
 80067dc:	9300      	str	r3, [sp, #0]
 80067de:	462a      	mov	r2, r5
 80067e0:	4b06      	ldr	r3, [pc, #24]	; (80067fc <_svfiprintf_r+0x1e4>)
 80067e2:	a904      	add	r1, sp, #16
 80067e4:	4640      	mov	r0, r8
 80067e6:	f7ff fcd9 	bl	800619c <_printf_i>
 80067ea:	e7ea      	b.n	80067c2 <_svfiprintf_r+0x1aa>
 80067ec:	08007172 	.word	0x08007172
 80067f0:	08007178 	.word	0x08007178
 80067f4:	0800717c 	.word	0x0800717c
 80067f8:	00000000 	.word	0x00000000
 80067fc:	08006563 	.word	0x08006563

08006800 <_read_r>:
 8006800:	b538      	push	{r3, r4, r5, lr}
 8006802:	4c07      	ldr	r4, [pc, #28]	; (8006820 <_read_r+0x20>)
 8006804:	4605      	mov	r5, r0
 8006806:	4608      	mov	r0, r1
 8006808:	4611      	mov	r1, r2
 800680a:	2200      	movs	r2, #0
 800680c:	6022      	str	r2, [r4, #0]
 800680e:	461a      	mov	r2, r3
 8006810:	f7fe fdb2 	bl	8005378 <_read>
 8006814:	1c43      	adds	r3, r0, #1
 8006816:	d102      	bne.n	800681e <_read_r+0x1e>
 8006818:	6823      	ldr	r3, [r4, #0]
 800681a:	b103      	cbz	r3, 800681e <_read_r+0x1e>
 800681c:	602b      	str	r3, [r5, #0]
 800681e:	bd38      	pop	{r3, r4, r5, pc}
 8006820:	20001f08 	.word	0x20001f08

08006824 <fmaxf>:
 8006824:	b508      	push	{r3, lr}
 8006826:	ed2d 8b02 	vpush	{d8}
 800682a:	ee08 0a90 	vmov	s17, r0
 800682e:	ee08 1a10 	vmov	s16, r1
 8006832:	f000 f833 	bl	800689c <__fpclassifyf>
 8006836:	b920      	cbnz	r0, 8006842 <fmaxf+0x1e>
 8006838:	ee18 0a10 	vmov	r0, s16
 800683c:	ecbd 8b02 	vpop	{d8}
 8006840:	bd08      	pop	{r3, pc}
 8006842:	ee18 0a10 	vmov	r0, s16
 8006846:	f000 f829 	bl	800689c <__fpclassifyf>
 800684a:	b120      	cbz	r0, 8006856 <fmaxf+0x32>
 800684c:	eef4 8ac8 	vcmpe.f32	s17, s16
 8006850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006854:	ddf0      	ble.n	8006838 <fmaxf+0x14>
 8006856:	ee18 0a90 	vmov	r0, s17
 800685a:	ecbd 8b02 	vpop	{d8}
 800685e:	bd08      	pop	{r3, pc}

08006860 <fminf>:
 8006860:	b508      	push	{r3, lr}
 8006862:	ed2d 8b02 	vpush	{d8}
 8006866:	ee08 0a90 	vmov	s17, r0
 800686a:	ee08 1a10 	vmov	s16, r1
 800686e:	f000 f815 	bl	800689c <__fpclassifyf>
 8006872:	b920      	cbnz	r0, 800687e <fminf+0x1e>
 8006874:	ee18 0a10 	vmov	r0, s16
 8006878:	ecbd 8b02 	vpop	{d8}
 800687c:	bd08      	pop	{r3, pc}
 800687e:	ee18 0a10 	vmov	r0, s16
 8006882:	f000 f80b 	bl	800689c <__fpclassifyf>
 8006886:	b120      	cbz	r0, 8006892 <fminf+0x32>
 8006888:	eef4 8ac8 	vcmpe.f32	s17, s16
 800688c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006890:	d5f0      	bpl.n	8006874 <fminf+0x14>
 8006892:	ee18 0a90 	vmov	r0, s17
 8006896:	ecbd 8b02 	vpop	{d8}
 800689a:	bd08      	pop	{r3, pc}

0800689c <__fpclassifyf>:
 800689c:	f030 4000 	bics.w	r0, r0, #2147483648	; 0x80000000
 80068a0:	d101      	bne.n	80068a6 <__fpclassifyf+0xa>
 80068a2:	2002      	movs	r0, #2
 80068a4:	4770      	bx	lr
 80068a6:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
 80068aa:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 80068ae:	d201      	bcs.n	80068b4 <__fpclassifyf+0x18>
 80068b0:	2004      	movs	r0, #4
 80068b2:	4770      	bx	lr
 80068b4:	4b05      	ldr	r3, [pc, #20]	; (80068cc <__fpclassifyf+0x30>)
 80068b6:	1e42      	subs	r2, r0, #1
 80068b8:	429a      	cmp	r2, r3
 80068ba:	d801      	bhi.n	80068c0 <__fpclassifyf+0x24>
 80068bc:	2003      	movs	r0, #3
 80068be:	4770      	bx	lr
 80068c0:	f1a0 40ff 	sub.w	r0, r0, #2139095040	; 0x7f800000
 80068c4:	fab0 f080 	clz	r0, r0
 80068c8:	0940      	lsrs	r0, r0, #5
 80068ca:	4770      	bx	lr
 80068cc:	007ffffe 	.word	0x007ffffe

080068d0 <_init>:
 80068d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068d2:	bf00      	nop
 80068d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068d6:	bc08      	pop	{r3}
 80068d8:	469e      	mov	lr, r3
 80068da:	4770      	bx	lr

080068dc <_fini>:
 80068dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068de:	bf00      	nop
 80068e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068e2:	bc08      	pop	{r3}
 80068e4:	469e      	mov	lr, r3
 80068e6:	4770      	bx	lr

080068e8 <vtable for std_msgs::Time>:
	...
 80068f0:	01f5 0800 021d 0800 0259 0800 0261 0800     ........Y...a...

08006900 <vtable for rosserial_msgs::TopicInfo>:
	...
 8006908:	079f 0800 0879 0800 0269 0800 0271 0800     ....y...i...q...

08006918 <vtable for rosserial_msgs::Log>:
	...
 8006920:	0773 0800 0843 0800 0279 0800 0281 0800     s...C...y.......

08006930 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8006938:	0691 0800 092f 0800 0289 0800 0291 0800     ..../...........

08006948 <vtable for std_srvs::EmptyRequest>:
	...
 8006950:	0299 0800 029d 0800 02a1 0800 02a9 0800     ................

08006960 <vtable for std_srvs::EmptyResponse>:
	...
 8006968:	02b1 0800 02b5 0800 02b9 0800 02c1 0800     ................

08006978 <vtable for AKROS_bridge::Initialize_singleRequest>:
	...
 8006980:	02c9 0800 02cd 0800 02d1 0800 02d9 0800     ................

08006990 <vtable for AKROS_bridge::Initialize_singleResponse>:
	...
 8006998:	02e1 0800 0347 0800 0365 0800 036d 0800     ....G...e...m...

080069a8 <vtable for AKROS_bridge::motor_cmd_single>:
	...
 80069b0:	0375 0800 03cd 0800 03f5 0800 03fd 0800     u...............

080069c0 <vtable for AKROS_bridge::motor_reply_single>:
	...
 80069c8:	0405 0800 043d 0800 0459 0800 0461 0800     ....=...Y...a...

080069d8 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 80069e0:	0e7d 0800 0f3d 0800 04cd 0800               }...=.......

080069ec <vtable for ros::Subscriber<AKROS_bridge::motor_cmd_single, void>>:
	...
 80069f4:	04a1 0800 04b9 0800 04bd 0800 04c5 0800     ................

08006a04 <vtable for ros::ServiceServer<AKROS_bridge::Initialize_singleRequest, AKROS_bridge::Initialize_singleResponse, void>>:
	...
 8006a0c:	051f 0800 048d 0800 0491 0800 0499 0800     ................

08006a1c <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>>:
	...
 8006a24:	0503 0800 0477 0800 047d 0800 0485 0800     ....w...}.......

08006a34 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006a34:	0469 0800 046d 0800 0475 0800 6f6d 6f74     i...m...u...moto
 8006a44:	5f72 6572 6c70 0079 6f6d 6f74 5f72 6d63     r_reply.motor_cm
 8006a54:	0064 6e65 6574 5f72 6f63 746e 6f72 5f6c     d.enter_control_
 8006a64:	6f6d 6564 6500 6978 5f74 6f63 746e 6f72     mode.exit_contro
 8006a74:	5f6c 6f6d 6564 7300 7465 705f 736f 7469     l_mode.set_posit
 8006a84:	6f69 5f6e 657a 6f72 6300 3565 3835 3834     ion_zero.ce55848
 8006a94:	3361 3864 6436 3230 3039 3531 3562 3364     a3d86d029015b5d3
 8006aa4:	6339 6134 6664 6263 0034 4b41 4f52 5f53     9c4adfcb4.AKROS_
 8006ab4:	7262 6469 6567 6d2f 746f 726f 635f 646d     bridge/motor_cmd
 8006ac4:	735f 6e69 6c67 0065 3361 3030 3431 6233     _single.a300143b
 8006ad4:	6435 3831 3462 3736 6532 6266 3666 3634     5d18b4672efbf646
 8006ae4:	6333 3164 3635 3262 4100 524b 534f 625f     3cd156b2.AKROS_b
 8006af4:	6972 6764 2f65 6f6d 6f74 5f72 6572 6c70     ridge/motor_repl
 8006b04:	5f79 6973 676e 656c 3700 3665 3863 3633     y_single.7e6c836
 8006b14:	3630 3536 3566 6133 6535 3236 6265 6466     0665f53a5e62ebfd
 8006b24:	3439 6465 3766 6137 0033                    94edf77a3.

08006b2e <AKROS_bridge::INITIALIZE_SINGLE>:
 8006b2e:	4b41 4f52 5f53 7262 6469 6567 492f 696e     AKROS_bridge/Ini
 8006b3e:	6974 6c61 7a69 5f65 6973 676e 656c 3900     tialize_single.9
 8006b4e:	3066 3965 6238 6164 3536 3839 3931 3638     f0e98bda65981986
 8006b5e:	6464 3566 6133 6166 6137 3034 3465 0039     ddf53afa7a40e49.
 8006b6e:	3131 6261 3764 3133 3263 3935 3333 3632     11abd731c2593326
 8006b7e:	6331 3664 3831 6233 3164 6432 3236 3539     1cd6183bd12d6295
 8006b8e:	7200 736f 6573 6972 6c61 6d5f 6773 2f73     .rosserial_msgs/
 8006b9e:	6f4c 0067 6130 3564 6631 3838 6366 3434     Log.0ad51f88fc44
 8006bae:	3938 6632 6338 3031 3836 3034 3737 3436     892f8c1068407764
 8006bbe:	3036 3530 7200 736f 6573 6972 6c61 6d5f     6005.rosserial_m
 8006bce:	6773 2f73 6f54 6970 4963 666e 006f          sgs/TopicInfo.

08006bdc <rosserial_msgs::REQUESTPARAM>:
 8006bdc:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8006bec:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8006bfc:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8006c0c:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8006c1c:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006c2c:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8006c3c:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8006c4c:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8006c5c:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 8006c6c:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 8006c7c:	3234 6537 7300                                   427e.

08006c81 <std_srvs::EMPTY>:
 8006c81:	7473 5f64 7273 7376 452f 706d 7974 8f00          std_srvs/Empty.

08006c90 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006c90:	128f 0800 1281 0800 128d 0800 682f 6d6f     ............/hom
 8006ca0:	2f65 6166 2f6c 6f72 2f73 696c 2f62 6f72     e/fal/ros/lib/ro
 8006cb0:	5f73 696c 2f62 7542 6666 7265 6465 6553     s_lib/BufferedSe
 8006cc0:	6972 6c61 422f 6675 6566 6572 5364 7265     rial/BufferedSer
 8006cd0:	6169 2e6c 7063 0070 7325 2520 2064 7562     ial.cpp.%s %d bu
 8006ce0:	6666 7265 6f20 6576 7772 6972 6574 2820     ffer overwrite (
 8006cf0:	616d 5f78 7562 5f66 6973 657a 203a 6425     max_buf_size: %d
 8006d00:	6520 6378 6565 6564 3a64 2520 2964 0d21      exceeded: %d)!.
 8006d10:	000a 0000                                   ....

08006d14 <vtable for BufferedSerial>:
	...
 8006d1c:	4e67 0800 4e67 0800 12f5 0800 134d 0800     gN..gN......M...
 8006d2c:	1251 0800 125d 0800 1261 0800 14b7 0800     Q...]...a.......
 8006d3c:	14cf 0800 1549 0800 150d 0800               ....I.......

08006d48 <us_data>:
 8006d48:	6d50 0800 09c0 2000                         Pm..... 

08006d50 <us_interface>:
 8006d50:	380d 0800 382d 0800 385d 0800 3875 0800     .8..-8..]8..u8..
 8006d60:	3845 0800 6970 6d6e 7061 6d20 7369 6d2d     E8..pinmap mis-m
 8006d70:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8006d80:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8006d90:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8006da0:	6e69 756f 0074 0000                         inout...

08006da8 <mp_stk_size>:
 8006da8:	0210 0000                                   ....

08006dac <mp_tcb_size>:
 8006dac:	01cc                                        ..

08006dae <mp_tmr_size>:
	...

08006db0 <os_clockrate>:
 8006db0:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006dc0:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006dd0:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006ddd <os_fifo_size>:
 8006ddd:	0110                                             .

08006dde <os_flags>:
 8006dde:	0001                                        ..

08006de0 <os_maxtaskrun>:
 8006de0:	0007 0000                                   ....

08006de4 <os_messageQ_def_osTimerMessageQ>:
 8006de4:	0004 0000 09e4 2000                         ....... 

08006dec <os_mutex_def_env_mutex>:
 8006dec:	0a04 2000                                   ... 

08006df0 <os_mutex_def_malloc_mutex>:
 8006df0:	0a14 2000                                   ... 

08006df4 <os_mutex_def_singleton_mutex>:
 8006df4:	0a24 2000                                   $.. 

08006df8 <os_rrobin>:
 8006df8:	0005 0001                                   ....

08006dfc <os_stackinfo>:
 8006dfc:	0200 0100                                   ....

08006e00 <os_thread_def_osTimerThread>:
 8006e00:	293d 0800 0002 0000 0001 0000 0320 0000     =).......... ...
 8006e10:	1918 2000                                   ... 

08006e14 <os_trv>:
 8006e14:	f9ff 0000                                   ....

08006e18 <os_mutex_def_osThreadMutex>:
 8006e18:	1238 2000 6950 6d6e 7061 6520 7272 726f     8.. Pinmap error
 8006e28:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8006e38:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8006e48:	6169 696c 657a 4320 4e41 0000               ialize CAN..

08006e54 <timing_pts>:
	...
 8006e5c:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 8006e6c:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 8006e7c:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 8006e8c:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 8006e9c:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 8006eac:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 8006ebc:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 8006ecc:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 8006edc:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 8006eec:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 8006efc:	000f 0000 0006 0000 000f 0000 0007 0000     ................

08006f0c <ll_pin_defines>:
 8006f0c:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8006f1c:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006f2c:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006f3c:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8006f4c:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8006f5c:	2065 4155 5452 000a                         e UART..

08006f64 <PinMap_CAN_RD>:
 8006f64:	000b 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8006f74:	ffff ffff 0000 0000                         ........

08006f7c <PinMap_CAN_TD>:
 8006f7c:	000c 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8006f8c:	ffff ffff 0000 0000                         ........

08006f94 <PinMap_UART_RX>:
 8006f94:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8006fa4:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8006fb4:	0712 0000 0014 0000 4400 4000 0712 0000     .........D.@....
 8006fc4:	0017 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 8006fd4:	ffff ffff 0000 0000                         ........

08006fdc <PinMap_UART_TX>:
 8006fdc:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8006fec:	3800 4001 0712 0000 000e 0000 4400 4000     .8.@.........D.@
 8006ffc:	0712 0000 0013 0000 4400 4000 0712 0000     .........D.@....
 800700c:	0016 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 800701c:	ffff ffff 0000 0000                         ........

08007024 <AHBPrescTable>:
	...
 800702c:	0201 0403 0706 0908                         ........

08007034 <APBPrescTable>:
 8007034:	0000 0000 0201 0403                         ........

0800703c <aPLLMULFactorTable>:
 800703c:	0302 0504 0706 0908 0b0a 0d0c 0f0e 1010     ................

0800704c <aPredivFactorTable>:
 800704c:	0201 0403 0605 0807 0a09 0c0b 0e0d 100f     ................

0800705c <CSWTCH.45>:
 800705c:	0400 0208                                   ....

08007060 <vtable for mbed::RawSerial>:
	...
 8007068:	4e67 0800 4e67 0800 4e69 0800 4e7d 0800     gN..gN..iN..}N..

08007078 <vtable for mbed::CAN>:
	...
 8007080:	4f55 0800 4f95 0800 4eb5 0800 4ebf 0800     UO...O...N...N..

08007090 <vtable for mbed::SerialBase>:
	...
 8007098:	50b3 0800 50b5 0800 12b9 0800 12e1 0800     .P...P..........
 80070a8:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 80070b8:	7475 6f20 2066 656d 6f6d 7972 0a0d 4500     ut of memory...E
 80070c8:	7272 726f 6920 696e 6974 6c61 7a69 6e69     rror initializin
 80070d8:	2067 6874 2065 756d 6574 2078 626f 656a     g the mutex obje
 80070e8:	7463 000a                                   ct..

080070ec <__sf_fake_stderr>:
	...

0800710c <__sf_fake_stdin>:
	...

0800712c <__sf_fake_stdout>:
	...

0800714c <_global_impure_ptr>:
 800714c:	01b0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 800715c:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 800716c:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 800717c:	6665 4567 4746 0000                         efgEFG..

08007184 <__EH_FRAME_BEGIN__>:
 8007184:	0000 0000                                   ....
