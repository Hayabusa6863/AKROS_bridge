
NUCLEO_F303K8/ROS_mbed_single.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080055a9


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 30 00 20 a9 55 00 08 dd 55 00 08 dd 55 00 08     .0. .U...U...U..
 8000010:	dd 55 00 08 dd 55 00 08 dd 55 00 08 00 00 00 00     .U...U...U......
	...
 800002c:	6d 54 00 08 dd 55 00 08 00 00 00 00 13 55 00 08     mT...U.......U..
 800003c:	73 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     sU...U...U...U..
 800004c:	dd 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     .U...U...U...U..
 800005c:	dd 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     .U...U...U...U..
 800006c:	dd 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     .U...U...U...U..
 800007c:	dd 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     .U...U...U...U..
 800008c:	f1 32 00 08 f5 32 00 08 dd 55 00 08 f1 31 00 08     .2...2...U...1..
 800009c:	dd 55 00 08 dd 55 00 08 dd 55 00 08 dd 55 00 08     .U...U...U...U..
 80000ac:	dd 55 00 08 dd 55 00 08 dd 55 00 08 00 00 00 00     .U...U...U......
 80000bc:	dd 55 00 08 dd 55 00 08 00 00 00 00 00 00 00 00     .U...U..........
 80000cc:	dd 55 00 08 00 00 00 00 dd 55 00 08 dd 55 00 08     .U.......U...U..
 80000dc:	dd 55 00 08 dd 55 00 08 dd 55 00 08 00 00 00 00     .U...U...U......
	...
 8000118:	dd 55 00 08 dd 55 00 08 00 00 00 00 00 00 00 00     .U...U..........
	...
 8000140:	dd 55 00 08 dd 55 00 08 00 00 00 00 00 00 00 00     .U...U..........
	...
 8000184:	dd 55 00 08                                         .U..

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000228 	.word	0x20000228
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08006c5c 	.word	0x08006c5c

080001ac <frame_dummy>:
 80001ac:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <frame_dummy+0x34>)
 80001ae:	b143      	cbz	r3, 80001c2 <frame_dummy+0x16>
 80001b0:	480c      	ldr	r0, [pc, #48]	; (80001e4 <frame_dummy+0x38>)
 80001b2:	490d      	ldr	r1, [pc, #52]	; (80001e8 <frame_dummy+0x3c>)
 80001b4:	b510      	push	{r4, lr}
 80001b6:	f3af 8000 	nop.w
 80001ba:	480c      	ldr	r0, [pc, #48]	; (80001ec <frame_dummy+0x40>)
 80001bc:	6803      	ldr	r3, [r0, #0]
 80001be:	b923      	cbnz	r3, 80001ca <frame_dummy+0x1e>
 80001c0:	bd10      	pop	{r4, pc}
 80001c2:	480a      	ldr	r0, [pc, #40]	; (80001ec <frame_dummy+0x40>)
 80001c4:	6803      	ldr	r3, [r0, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <frame_dummy+0x2a>
 80001c8:	4770      	bx	lr
 80001ca:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <frame_dummy+0x44>)
 80001cc:	2b00      	cmp	r3, #0
 80001ce:	d0f7      	beq.n	80001c0 <frame_dummy+0x14>
 80001d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001d4:	4718      	bx	r3
 80001d6:	4b06      	ldr	r3, [pc, #24]	; (80001f0 <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f5      	beq.n	80001c8 <frame_dummy+0x1c>
 80001dc:	4718      	bx	r3
 80001de:	bf00      	nop
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08006c5c 	.word	0x08006c5c
 80001e8:	2000022c 	.word	0x2000022c
 80001ec:	20000220 	.word	0x20000220
 80001f0:	00000000 	.word	0x00000000

080001f4 <std_msgs::Time::serialize(unsigned char*) const>:
 80001f4:	6843      	ldr	r3, [r0, #4]
 80001f6:	700b      	strb	r3, [r1, #0]
 80001f8:	6843      	ldr	r3, [r0, #4]
 80001fa:	0a1b      	lsrs	r3, r3, #8
 80001fc:	704b      	strb	r3, [r1, #1]
 80001fe:	88c3      	ldrh	r3, [r0, #6]
 8000200:	708b      	strb	r3, [r1, #2]
 8000202:	79c3      	ldrb	r3, [r0, #7]
 8000204:	70cb      	strb	r3, [r1, #3]
 8000206:	6883      	ldr	r3, [r0, #8]
 8000208:	710b      	strb	r3, [r1, #4]
 800020a:	6883      	ldr	r3, [r0, #8]
 800020c:	0a1b      	lsrs	r3, r3, #8
 800020e:	714b      	strb	r3, [r1, #5]
 8000210:	8943      	ldrh	r3, [r0, #10]
 8000212:	718b      	strb	r3, [r1, #6]
 8000214:	7ac3      	ldrb	r3, [r0, #11]
 8000216:	71cb      	strb	r3, [r1, #7]
 8000218:	2008      	movs	r0, #8
 800021a:	4770      	bx	lr

0800021c <std_msgs::Time::deserialize(unsigned char*)>:
 800021c:	780b      	ldrb	r3, [r1, #0]
 800021e:	6043      	str	r3, [r0, #4]
 8000220:	784a      	ldrb	r2, [r1, #1]
 8000222:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000226:	6043      	str	r3, [r0, #4]
 8000228:	788a      	ldrb	r2, [r1, #2]
 800022a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	78ca      	ldrb	r2, [r1, #3]
 8000232:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	790b      	ldrb	r3, [r1, #4]
 800023a:	6083      	str	r3, [r0, #8]
 800023c:	794a      	ldrb	r2, [r1, #5]
 800023e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000242:	6083      	str	r3, [r0, #8]
 8000244:	798a      	ldrb	r2, [r1, #6]
 8000246:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	79ca      	ldrb	r2, [r1, #7]
 800024e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::getType()>:
 8000258:	4800      	ldr	r0, [pc, #0]	; (800025c <std_msgs::Time::getType()+0x4>)
 800025a:	4770      	bx	lr
 800025c:	0800672a 	.word	0x0800672a

08000260 <std_msgs::Time::getMD5()>:
 8000260:	4800      	ldr	r0, [pc, #0]	; (8000264 <std_msgs::Time::getMD5()+0x4>)
 8000262:	4770      	bx	lr
 8000264:	08006709 	.word	0x08006709

08000268 <rosserial_msgs::TopicInfo::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	0800669b 	.word	0x0800669b

08000270 <rosserial_msgs::TopicInfo::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	0800667a 	.word	0x0800667a

08000278 <rosserial_msgs::Log::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::Log::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08006667 	.word	0x08006667

08000280 <rosserial_msgs::Log::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::Log::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08006646 	.word	0x08006646

08000288 <rosserial_msgs::RequestParamResponse::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	080066b4 	.word	0x080066b4

08000290 <rosserial_msgs::RequestParamResponse::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08006625 	.word	0x08006625

08000298 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8000298:	2000      	movs	r0, #0
 800029a:	4770      	bx	lr

0800029c <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 800029c:	2000      	movs	r0, #0
 800029e:	4770      	bx	lr

080002a0 <std_srvs::EmptyRequest::getType()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <std_srvs::EmptyRequest::getType()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08006759 	.word	0x08006759

080002a8 <std_srvs::EmptyRequest::getMD5()>:
 80002a8:	4800      	ldr	r0, [pc, #0]	; (80002ac <std_srvs::EmptyRequest::getMD5()+0x4>)
 80002aa:	4770      	bx	lr
 80002ac:	08006738 	.word	0x08006738

080002b0 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr

080002b4 <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 80002b4:	2000      	movs	r0, #0
 80002b6:	4770      	bx	lr

080002b8 <std_srvs::EmptyResponse::getType()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_srvs::EmptyResponse::getType()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08006759 	.word	0x08006759

080002c0 <std_srvs::EmptyResponse::getMD5()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_srvs::EmptyResponse::getMD5()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	08006738 	.word	0x08006738

080002c8 <AKROS_bridge::motor_cmd_single::serialize(unsigned char*) const>:
 80002c8:	7903      	ldrb	r3, [r0, #4]
 80002ca:	700b      	strb	r3, [r1, #0]
 80002cc:	6883      	ldr	r3, [r0, #8]
 80002ce:	704b      	strb	r3, [r1, #1]
 80002d0:	0a1a      	lsrs	r2, r3, #8
 80002d2:	708a      	strb	r2, [r1, #2]
 80002d4:	0c1a      	lsrs	r2, r3, #16
 80002d6:	0e1b      	lsrs	r3, r3, #24
 80002d8:	70ca      	strb	r2, [r1, #3]
 80002da:	710b      	strb	r3, [r1, #4]
 80002dc:	68c3      	ldr	r3, [r0, #12]
 80002de:	714b      	strb	r3, [r1, #5]
 80002e0:	0a1a      	lsrs	r2, r3, #8
 80002e2:	718a      	strb	r2, [r1, #6]
 80002e4:	0c1a      	lsrs	r2, r3, #16
 80002e6:	0e1b      	lsrs	r3, r3, #24
 80002e8:	71ca      	strb	r2, [r1, #7]
 80002ea:	720b      	strb	r3, [r1, #8]
 80002ec:	6903      	ldr	r3, [r0, #16]
 80002ee:	724b      	strb	r3, [r1, #9]
 80002f0:	0a1a      	lsrs	r2, r3, #8
 80002f2:	728a      	strb	r2, [r1, #10]
 80002f4:	0c1a      	lsrs	r2, r3, #16
 80002f6:	0e1b      	lsrs	r3, r3, #24
 80002f8:	72ca      	strb	r2, [r1, #11]
 80002fa:	730b      	strb	r3, [r1, #12]
 80002fc:	6943      	ldr	r3, [r0, #20]
 80002fe:	734b      	strb	r3, [r1, #13]
 8000300:	0a1a      	lsrs	r2, r3, #8
 8000302:	738a      	strb	r2, [r1, #14]
 8000304:	0c1a      	lsrs	r2, r3, #16
 8000306:	0e1b      	lsrs	r3, r3, #24
 8000308:	73ca      	strb	r2, [r1, #15]
 800030a:	740b      	strb	r3, [r1, #16]
 800030c:	6983      	ldr	r3, [r0, #24]
 800030e:	744b      	strb	r3, [r1, #17]
 8000310:	0a1a      	lsrs	r2, r3, #8
 8000312:	748a      	strb	r2, [r1, #18]
 8000314:	0c1a      	lsrs	r2, r3, #16
 8000316:	0e1b      	lsrs	r3, r3, #24
 8000318:	74ca      	strb	r2, [r1, #19]
 800031a:	750b      	strb	r3, [r1, #20]
 800031c:	2015      	movs	r0, #21
 800031e:	4770      	bx	lr

08000320 <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>:
 8000320:	780b      	ldrb	r3, [r1, #0]
 8000322:	7103      	strb	r3, [r0, #4]
 8000324:	f8d1 3001 	ldr.w	r3, [r1, #1]
 8000328:	6083      	str	r3, [r0, #8]
 800032a:	f8d1 3005 	ldr.w	r3, [r1, #5]
 800032e:	60c3      	str	r3, [r0, #12]
 8000330:	f8d1 3009 	ldr.w	r3, [r1, #9]
 8000334:	6103      	str	r3, [r0, #16]
 8000336:	f8d1 300d 	ldr.w	r3, [r1, #13]
 800033a:	6143      	str	r3, [r0, #20]
 800033c:	f8d1 3011 	ldr.w	r3, [r1, #17]
 8000340:	6183      	str	r3, [r0, #24]
 8000342:	2015      	movs	r0, #21
 8000344:	4770      	bx	lr
	...

08000348 <AKROS_bridge::motor_cmd_single::getType()>:
 8000348:	4800      	ldr	r0, [pc, #0]	; (800034c <AKROS_bridge::motor_cmd_single::getType()+0x4>)
 800034a:	4770      	bx	lr
 800034c:	080065c6 	.word	0x080065c6

08000350 <AKROS_bridge::motor_cmd_single::getMD5()>:
 8000350:	4800      	ldr	r0, [pc, #0]	; (8000354 <AKROS_bridge::motor_cmd_single::getMD5()+0x4>)
 8000352:	4770      	bx	lr
 8000354:	080065a5 	.word	0x080065a5

08000358 <AKROS_bridge::motor_reply_single::serialize(unsigned char*) const>:
 8000358:	7903      	ldrb	r3, [r0, #4]
 800035a:	700b      	strb	r3, [r1, #0]
 800035c:	6883      	ldr	r3, [r0, #8]
 800035e:	704b      	strb	r3, [r1, #1]
 8000360:	0a1a      	lsrs	r2, r3, #8
 8000362:	708a      	strb	r2, [r1, #2]
 8000364:	0c1a      	lsrs	r2, r3, #16
 8000366:	0e1b      	lsrs	r3, r3, #24
 8000368:	70ca      	strb	r2, [r1, #3]
 800036a:	710b      	strb	r3, [r1, #4]
 800036c:	68c3      	ldr	r3, [r0, #12]
 800036e:	714b      	strb	r3, [r1, #5]
 8000370:	0a1a      	lsrs	r2, r3, #8
 8000372:	718a      	strb	r2, [r1, #6]
 8000374:	0c1a      	lsrs	r2, r3, #16
 8000376:	0e1b      	lsrs	r3, r3, #24
 8000378:	71ca      	strb	r2, [r1, #7]
 800037a:	720b      	strb	r3, [r1, #8]
 800037c:	6903      	ldr	r3, [r0, #16]
 800037e:	724b      	strb	r3, [r1, #9]
 8000380:	0a1a      	lsrs	r2, r3, #8
 8000382:	728a      	strb	r2, [r1, #10]
 8000384:	0c1a      	lsrs	r2, r3, #16
 8000386:	0e1b      	lsrs	r3, r3, #24
 8000388:	72ca      	strb	r2, [r1, #11]
 800038a:	730b      	strb	r3, [r1, #12]
 800038c:	200d      	movs	r0, #13
 800038e:	4770      	bx	lr

08000390 <AKROS_bridge::motor_reply_single::deserialize(unsigned char*)>:
 8000390:	780b      	ldrb	r3, [r1, #0]
 8000392:	7103      	strb	r3, [r0, #4]
 8000394:	f8d1 3001 	ldr.w	r3, [r1, #1]
 8000398:	6083      	str	r3, [r0, #8]
 800039a:	f8d1 3005 	ldr.w	r3, [r1, #5]
 800039e:	60c3      	str	r3, [r0, #12]
 80003a0:	f8d1 3009 	ldr.w	r3, [r1, #9]
 80003a4:	6103      	str	r3, [r0, #16]
 80003a6:	200d      	movs	r0, #13
 80003a8:	4770      	bx	lr
	...

080003ac <AKROS_bridge::motor_reply_single::getType()>:
 80003ac:	4800      	ldr	r0, [pc, #0]	; (80003b0 <AKROS_bridge::motor_reply_single::getType()+0x4>)
 80003ae:	4770      	bx	lr
 80003b0:	08006605 	.word	0x08006605

080003b4 <AKROS_bridge::motor_reply_single::getMD5()>:
 80003b4:	4800      	ldr	r0, [pc, #0]	; (80003b8 <AKROS_bridge::motor_reply_single::getMD5()+0x4>)
 80003b6:	4770      	bx	lr
 80003b8:	080065e4 	.word	0x080065e4

080003bc <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 80003bc:	6803      	ldr	r3, [r0, #0]
 80003be:	4718      	bx	r3

080003c0 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80003c0:	b108      	cbz	r0, 80003c6 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80003c2:	680b      	ldr	r3, [r1, #0]
 80003c4:	6003      	str	r3, [r0, #0]
 80003c6:	4770      	bx	lr

080003c8 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80003c8:	4770      	bx	lr

080003ca <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getEndpointType()>:
 80003ca:	2003      	movs	r0, #3
 80003cc:	4770      	bx	lr
	...

080003d0 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()>:
 80003d0:	4800      	ldr	r0, [pc, #0]	; (80003d4 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgType()+0x4>)
 80003d2:	4770      	bx	lr
 80003d4:	08006759 	.word	0x08006759

080003d8 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()>:
 80003d8:	4800      	ldr	r0, [pc, #0]	; (80003dc <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::getMsgMD5()+0x4>)
 80003da:	4770      	bx	lr
 80003dc:	08006738 	.word	0x08006738

080003e0 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::callback(unsigned char*)>:
 80003e0:	b570      	push	{r4, r5, r6, lr}
 80003e2:	4605      	mov	r5, r0
 80003e4:	f100 040c 	add.w	r4, r0, #12
 80003e8:	4620      	mov	r0, r4
 80003ea:	f7ff ff99 	bl	8000320 <AKROS_bridge::motor_cmd_single::deserialize(unsigned char*)>
 80003ee:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80003f0:	4620      	mov	r0, r4
 80003f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003f6:	4718      	bx	r3

080003f8 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getEndpointType()>:
 80003f8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80003fa:	4770      	bx	lr

080003fc <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()>:
 80003fc:	4800      	ldr	r0, [pc, #0]	; (8000400 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgType()+0x4>)
 80003fe:	4770      	bx	lr
 8000400:	080065c6 	.word	0x080065c6

08000404 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()>:
 8000404:	4800      	ldr	r0, [pc, #0]	; (8000408 <ros::Subscriber<AKROS_bridge::motor_cmd_single, void>::getMsgMD5()+0x4>)
 8000406:	4770      	bx	lr
 8000408:	080065a5 	.word	0x080065a5

0800040c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 800040c:	f890 0578 	ldrb.w	r0, [r0, #1400]	; 0x578
 8000410:	4770      	bx	lr
	...

08000414 <exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 8000414:	2101      	movs	r1, #1
 8000416:	4801      	ldr	r0, [pc, #4]	; (800041c <exit_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 8000418:	f001 b87b 	b.w	8001512 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>
 800041c:	20000244 	.word	0x20000244

08000420 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 8000420:	2101      	movs	r1, #1
 8000422:	4801      	ldr	r0, [pc, #4]	; (8000428 <set_zero_pos_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x8>)
 8000424:	f001 b89c 	b.w	8001560 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>
 8000428:	20000244 	.word	0x20000244

0800042c <ros::Publisher::publish(ros::Msg const*)>:
 800042c:	68c3      	ldr	r3, [r0, #12]
 800042e:	681a      	ldr	r2, [r3, #0]
 8000430:	b410      	push	{r4}
 8000432:	6814      	ldr	r4, [r2, #0]
 8000434:	460a      	mov	r2, r1
 8000436:	6881      	ldr	r1, [r0, #8]
 8000438:	4618      	mov	r0, r3
 800043a:	4623      	mov	r3, r4
 800043c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000440:	4718      	bx	r3

08000442 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>::callback(unsigned char*)>:
 8000442:	b538      	push	{r3, r4, r5, lr}
 8000444:	f100 0510 	add.w	r5, r0, #16
 8000448:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800044a:	4604      	mov	r4, r0
 800044c:	4629      	mov	r1, r5
 800044e:	300c      	adds	r0, #12
 8000450:	4798      	blx	r3
 8000452:	4629      	mov	r1, r5
 8000454:	f104 0014 	add.w	r0, r4, #20
 8000458:	f7ff ffe8 	bl	800042c <ros::Publisher::publish(ros::Msg const*)>
 800045c:	bd38      	pop	{r3, r4, r5, pc}

0800045e <mbed::CANMessage::CANMessage()>:
 800045e:	b510      	push	{r4, lr}
 8000460:	2210      	movs	r2, #16
 8000462:	4604      	mov	r4, r0
 8000464:	2100      	movs	r1, #0
 8000466:	f005 faf8 	bl	8005a5a <memset>
 800046a:	2308      	movs	r3, #8
 800046c:	7323      	strb	r3, [r4, #12]
 800046e:	2300      	movs	r3, #0
 8000470:	6063      	str	r3, [r4, #4]
 8000472:	60a3      	str	r3, [r4, #8]
 8000474:	4620      	mov	r0, r4
 8000476:	bd10      	pop	{r4, pc}

08000478 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)>:
 8000478:	b530      	push	{r4, r5, lr}
 800047a:	b087      	sub	sp, #28
 800047c:	4604      	mov	r4, r0
 800047e:	ad02      	add	r5, sp, #8
 8000480:	4628      	mov	r0, r5
 8000482:	f7ff ffec 	bl	800045e <mbed::CANMessage::CANMessage()>
 8000486:	7923      	ldrb	r3, [r4, #4]
 8000488:	9302      	str	r3, [sp, #8]
 800048a:	69a3      	ldr	r3, [r4, #24]
 800048c:	9301      	str	r3, [sp, #4]
 800048e:	6963      	ldr	r3, [r4, #20]
 8000490:	9300      	str	r3, [sp, #0]
 8000492:	68e2      	ldr	r2, [r4, #12]
 8000494:	6923      	ldr	r3, [r4, #16]
 8000496:	68a1      	ldr	r1, [r4, #8]
 8000498:	4628      	mov	r0, r5
 800049a:	f001 f889 	bl	80015b0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>
 800049e:	9b05      	ldr	r3, [sp, #20]
 80004a0:	9300      	str	r3, [sp, #0]
 80004a2:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80004a6:	4802      	ldr	r0, [pc, #8]	; (80004b0 <motor_cmd_Cb(AKROS_bridge::motor_cmd_single const&)+0x38>)
 80004a8:	f004 fc8b 	bl	8004dc2 <mbed::CAN::write(mbed::CANMessage)>
 80004ac:	b007      	add	sp, #28
 80004ae:	bd30      	pop	{r4, r5, pc}
 80004b0:	20000244 	.word	0x20000244

080004b4 <CAN_Cb()>:
 80004b4:	b510      	push	{r4, lr}
 80004b6:	b08c      	sub	sp, #48	; 0x30
 80004b8:	ac08      	add	r4, sp, #32
 80004ba:	4620      	mov	r0, r4
 80004bc:	f7ff ffcf 	bl	800045e <mbed::CANMessage::CANMessage()>
 80004c0:	2200      	movs	r2, #0
 80004c2:	4621      	mov	r1, r4
 80004c4:	480f      	ldr	r0, [pc, #60]	; (8000504 <CAN_Cb()+0x50>)
 80004c6:	f004 fc9b 	bl	8004e00 <mbed::CAN::read(mbed::CANMessage&, int)>
 80004ca:	b1c0      	cbz	r0, 80004fe <CAN_Cb()+0x4a>
 80004cc:	9b08      	ldr	r3, [sp, #32]
 80004ce:	b9b3      	cbnz	r3, 80004fe <CAN_Cb()+0x4a>
 80004d0:	ab07      	add	r3, sp, #28
 80004d2:	9303      	str	r3, [sp, #12]
 80004d4:	ab06      	add	r3, sp, #24
 80004d6:	9302      	str	r3, [sp, #8]
 80004d8:	ab05      	add	r3, sp, #20
 80004da:	9301      	str	r3, [sp, #4]
 80004dc:	f10d 0313 	add.w	r3, sp, #19
 80004e0:	9300      	str	r3, [sp, #0]
 80004e2:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80004e6:	f001 f8dd 	bl	80016a4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>
 80004ea:	4b07      	ldr	r3, [pc, #28]	; (8000508 <CAN_Cb()+0x54>)
 80004ec:	f89d 2013 	ldrb.w	r2, [sp, #19]
 80004f0:	711a      	strb	r2, [r3, #4]
 80004f2:	9a05      	ldr	r2, [sp, #20]
 80004f4:	609a      	str	r2, [r3, #8]
 80004f6:	9a06      	ldr	r2, [sp, #24]
 80004f8:	60da      	str	r2, [r3, #12]
 80004fa:	9a07      	ldr	r2, [sp, #28]
 80004fc:	611a      	str	r2, [r3, #16]
 80004fe:	b00c      	add	sp, #48	; 0x30
 8000500:	bd10      	pop	{r4, pc}
 8000502:	bf00      	nop
 8000504:	20000244 	.word	0x20000244
 8000508:	20000380 	.word	0x20000380

0800050c <enter_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 800050c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800050e:	4668      	mov	r0, sp
 8000510:	f7ff ffa5 	bl	800045e <mbed::CANMessage::CANMessage()>
 8000514:	2101      	movs	r1, #1
 8000516:	4808      	ldr	r0, [pc, #32]	; (8000538 <enter_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x2c>)
 8000518:	f000 ffd4 	bl	80014c4 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>
 800051c:	2001      	movs	r0, #1
 800051e:	f004 fe25 	bl	800516c <wait_ms>
 8000522:	200a      	movs	r0, #10
 8000524:	f004 fe22 	bl	800516c <wait_ms>
 8000528:	4904      	ldr	r1, [pc, #16]	; (800053c <enter_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x30>)
 800052a:	4805      	ldr	r0, [pc, #20]	; (8000540 <enter_control_mode_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)+0x34>)
 800052c:	f7ff ff7e 	bl	800042c <ros::Publisher::publish(ros::Msg const*)>
 8000530:	b005      	add	sp, #20
 8000532:	f85d fb04 	ldr.w	pc, [sp], #4
 8000536:	bf00      	nop
 8000538:	20000244 	.word	0x20000244
 800053c:	20000380 	.word	0x20000380
 8000540:	20000394 	.word	0x20000394

08000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000544:	3801      	subs	r0, #1
 8000546:	2300      	movs	r3, #0
 8000548:	fa21 f203 	lsr.w	r2, r1, r3
 800054c:	3308      	adds	r3, #8
 800054e:	2b20      	cmp	r3, #32
 8000550:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000554:	d1f8      	bne.n	8000548 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000556:	4770      	bx	lr

08000558 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000558:	6843      	ldr	r3, [r0, #4]
 800055a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800055e:	700b      	strb	r3, [r1, #0]
 8000560:	6843      	ldr	r3, [r0, #4]
 8000562:	0a1b      	lsrs	r3, r3, #8
 8000564:	704b      	strb	r3, [r1, #1]
 8000566:	88c3      	ldrh	r3, [r0, #6]
 8000568:	708b      	strb	r3, [r1, #2]
 800056a:	79c3      	ldrb	r3, [r0, #7]
 800056c:	70cb      	strb	r3, [r1, #3]
 800056e:	460d      	mov	r5, r1
 8000570:	1d0a      	adds	r2, r1, #4
 8000572:	4604      	mov	r4, r0
 8000574:	2100      	movs	r1, #0
 8000576:	6860      	ldr	r0, [r4, #4]
 8000578:	4281      	cmp	r1, r0
 800057a:	eba2 0305 	sub.w	r3, r2, r5
 800057e:	f102 0204 	add.w	r2, r2, #4
 8000582:	d20f      	bcs.n	80005a4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000584:	68e3      	ldr	r3, [r4, #12]
 8000586:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800058a:	f802 3c04 	strb.w	r3, [r2, #-4]
 800058e:	0a18      	lsrs	r0, r3, #8
 8000590:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000594:	0c18      	lsrs	r0, r3, #16
 8000596:	0e1b      	lsrs	r3, r3, #24
 8000598:	f802 0c02 	strb.w	r0, [r2, #-2]
 800059c:	f802 3c01 	strb.w	r3, [r2, #-1]
 80005a0:	3101      	adds	r1, #1
 80005a2:	e7e8      	b.n	8000576 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 80005a4:	6922      	ldr	r2, [r4, #16]
 80005a6:	54ea      	strb	r2, [r5, r3]
 80005a8:	6921      	ldr	r1, [r4, #16]
 80005aa:	18ea      	adds	r2, r5, r3
 80005ac:	0a09      	lsrs	r1, r1, #8
 80005ae:	7051      	strb	r1, [r2, #1]
 80005b0:	8a61      	ldrh	r1, [r4, #18]
 80005b2:	7091      	strb	r1, [r2, #2]
 80005b4:	7ce1      	ldrb	r1, [r4, #19]
 80005b6:	70d1      	strb	r1, [r2, #3]
 80005b8:	3304      	adds	r3, #4
 80005ba:	442b      	add	r3, r5
 80005bc:	2100      	movs	r1, #0
 80005be:	6922      	ldr	r2, [r4, #16]
 80005c0:	4291      	cmp	r1, r2
 80005c2:	eba3 0605 	sub.w	r6, r3, r5
 80005c6:	f103 0304 	add.w	r3, r3, #4
 80005ca:	d20f      	bcs.n	80005ec <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80005cc:	69a2      	ldr	r2, [r4, #24]
 80005ce:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80005d2:	f803 2c04 	strb.w	r2, [r3, #-4]
 80005d6:	0a10      	lsrs	r0, r2, #8
 80005d8:	f803 0c03 	strb.w	r0, [r3, #-3]
 80005dc:	0c10      	lsrs	r0, r2, #16
 80005de:	0e12      	lsrs	r2, r2, #24
 80005e0:	f803 0c02 	strb.w	r0, [r3, #-2]
 80005e4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80005e8:	3101      	adds	r1, #1
 80005ea:	e7e8      	b.n	80005be <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80005ec:	69e3      	ldr	r3, [r4, #28]
 80005ee:	55ab      	strb	r3, [r5, r6]
 80005f0:	69e2      	ldr	r2, [r4, #28]
 80005f2:	19ab      	adds	r3, r5, r6
 80005f4:	0a12      	lsrs	r2, r2, #8
 80005f6:	705a      	strb	r2, [r3, #1]
 80005f8:	8be2      	ldrh	r2, [r4, #30]
 80005fa:	709a      	strb	r2, [r3, #2]
 80005fc:	7fe2      	ldrb	r2, [r4, #31]
 80005fe:	70da      	strb	r2, [r3, #3]
 8000600:	3604      	adds	r6, #4
 8000602:	2700      	movs	r7, #0
 8000604:	69e3      	ldr	r3, [r4, #28]
 8000606:	429f      	cmp	r7, r3
 8000608:	d214      	bcs.n	8000634 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 800060a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800060c:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000610:	f005 fcef 	bl	8005ff2 <strlen>
 8000614:	4680      	mov	r8, r0
 8000616:	4601      	mov	r1, r0
 8000618:	19a8      	adds	r0, r5, r6
 800061a:	f7ff ff93 	bl	8000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800061e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000620:	3604      	adds	r6, #4
 8000622:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000626:	19a8      	adds	r0, r5, r6
 8000628:	4642      	mov	r2, r8
 800062a:	f005 f9f1 	bl	8005a10 <memcpy>
 800062e:	4446      	add	r6, r8
 8000630:	3701      	adds	r7, #1
 8000632:	e7e7      	b.n	8000604 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000634:	4630      	mov	r0, r6
 8000636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800063a <rosserial_msgs::Log::serialize(unsigned char*) const>:
 800063a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800063c:	460e      	mov	r6, r1
 800063e:	7903      	ldrb	r3, [r0, #4]
 8000640:	f806 3b01 	strb.w	r3, [r6], #1
 8000644:	4605      	mov	r5, r0
 8000646:	6880      	ldr	r0, [r0, #8]
 8000648:	460f      	mov	r7, r1
 800064a:	f005 fcd2 	bl	8005ff2 <strlen>
 800064e:	4604      	mov	r4, r0
 8000650:	4601      	mov	r1, r0
 8000652:	4630      	mov	r0, r6
 8000654:	f7ff ff76 	bl	8000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000658:	4622      	mov	r2, r4
 800065a:	68a9      	ldr	r1, [r5, #8]
 800065c:	1d78      	adds	r0, r7, #5
 800065e:	f005 f9d7 	bl	8005a10 <memcpy>
 8000662:	1d60      	adds	r0, r4, #5
 8000664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000666 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000666:	8883      	ldrh	r3, [r0, #4]
 8000668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800066c:	700b      	strb	r3, [r1, #0]
 800066e:	8883      	ldrh	r3, [r0, #4]
 8000670:	0a1b      	lsrs	r3, r3, #8
 8000672:	704b      	strb	r3, [r1, #1]
 8000674:	4605      	mov	r5, r0
 8000676:	6880      	ldr	r0, [r0, #8]
 8000678:	460c      	mov	r4, r1
 800067a:	f005 fcba 	bl	8005ff2 <strlen>
 800067e:	4607      	mov	r7, r0
 8000680:	4601      	mov	r1, r0
 8000682:	1ca0      	adds	r0, r4, #2
 8000684:	f7ff ff5e 	bl	8000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000688:	463a      	mov	r2, r7
 800068a:	68a9      	ldr	r1, [r5, #8]
 800068c:	1da0      	adds	r0, r4, #6
 800068e:	f005 f9bf 	bl	8005a10 <memcpy>
 8000692:	68e8      	ldr	r0, [r5, #12]
 8000694:	f005 fcad 	bl	8005ff2 <strlen>
 8000698:	f107 0806 	add.w	r8, r7, #6
 800069c:	4606      	mov	r6, r0
 800069e:	4601      	mov	r1, r0
 80006a0:	370a      	adds	r7, #10
 80006a2:	eb04 0008 	add.w	r0, r4, r8
 80006a6:	f7ff ff4d 	bl	8000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006aa:	4632      	mov	r2, r6
 80006ac:	68e9      	ldr	r1, [r5, #12]
 80006ae:	19e0      	adds	r0, r4, r7
 80006b0:	f005 f9ae 	bl	8005a10 <memcpy>
 80006b4:	6928      	ldr	r0, [r5, #16]
 80006b6:	f005 fc9c 	bl	8005ff2 <strlen>
 80006ba:	443e      	add	r6, r7
 80006bc:	4601      	mov	r1, r0
 80006be:	4607      	mov	r7, r0
 80006c0:	19a0      	adds	r0, r4, r6
 80006c2:	3604      	adds	r6, #4
 80006c4:	f7ff ff3e 	bl	8000544 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006c8:	463a      	mov	r2, r7
 80006ca:	19a0      	adds	r0, r4, r6
 80006cc:	6929      	ldr	r1, [r5, #16]
 80006ce:	443e      	add	r6, r7
 80006d0:	f005 f99e 	bl	8005a10 <memcpy>
 80006d4:	696b      	ldr	r3, [r5, #20]
 80006d6:	55a3      	strb	r3, [r4, r6]
 80006d8:	4434      	add	r4, r6
 80006da:	0a1a      	lsrs	r2, r3, #8
 80006dc:	7062      	strb	r2, [r4, #1]
 80006de:	0c1a      	lsrs	r2, r3, #16
 80006e0:	0e1b      	lsrs	r3, r3, #24
 80006e2:	70a2      	strb	r2, [r4, #2]
 80006e4:	70e3      	strb	r3, [r4, #3]
 80006e6:	1d30      	adds	r0, r6, #4
 80006e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80006ec:	b510      	push	{r4, lr}
 80006ee:	2300      	movs	r3, #0
 80006f0:	6003      	str	r3, [r0, #0]
 80006f2:	3901      	subs	r1, #1
 80006f4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80006f8:	fa02 f403 	lsl.w	r4, r2, r3
 80006fc:	6802      	ldr	r2, [r0, #0]
 80006fe:	3308      	adds	r3, #8
 8000700:	4322      	orrs	r2, r4
 8000702:	2b20      	cmp	r3, #32
 8000704:	6002      	str	r2, [r0, #0]
 8000706:	d1f5      	bne.n	80006f4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000708:	bd10      	pop	{r4, pc}

0800070a <rosserial_msgs::Log::deserialize(unsigned char*)>:
 800070a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800070c:	460c      	mov	r4, r1
 800070e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000712:	7103      	strb	r3, [r0, #4]
 8000714:	4605      	mov	r5, r0
 8000716:	a801      	add	r0, sp, #4
 8000718:	f7ff ffe8 	bl	80006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800071c:	9b01      	ldr	r3, [sp, #4]
 800071e:	1d62      	adds	r2, r4, #5
 8000720:	1d58      	adds	r0, r3, #5
 8000722:	1b11      	subs	r1, r2, r4
 8000724:	4288      	cmp	r0, r1
 8000726:	d904      	bls.n	8000732 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000728:	f812 1b01 	ldrb.w	r1, [r2], #1
 800072c:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000730:	e7f7      	b.n	8000722 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000732:	4423      	add	r3, r4
 8000734:	2200      	movs	r2, #0
 8000736:	3404      	adds	r4, #4
 8000738:	711a      	strb	r2, [r3, #4]
 800073a:	60ac      	str	r4, [r5, #8]
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000742:	780b      	ldrb	r3, [r1, #0]
 8000744:	8083      	strh	r3, [r0, #4]
 8000746:	784a      	ldrb	r2, [r1, #1]
 8000748:	b085      	sub	sp, #20
 800074a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800074e:	8083      	strh	r3, [r0, #4]
 8000750:	460c      	mov	r4, r1
 8000752:	4606      	mov	r6, r0
 8000754:	3102      	adds	r1, #2
 8000756:	a801      	add	r0, sp, #4
 8000758:	f7ff ffc8 	bl	80006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800075c:	9f01      	ldr	r7, [sp, #4]
 800075e:	1da3      	adds	r3, r4, #6
 8000760:	1dbd      	adds	r5, r7, #6
 8000762:	1b1a      	subs	r2, r3, r4
 8000764:	4295      	cmp	r5, r2
 8000766:	d904      	bls.n	8000772 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000768:	f813 2b01 	ldrb.w	r2, [r3], #1
 800076c:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000770:	e7f7      	b.n	8000762 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000772:	19e3      	adds	r3, r4, r7
 8000774:	2200      	movs	r2, #0
 8000776:	715a      	strb	r2, [r3, #5]
 8000778:	1d63      	adds	r3, r4, #5
 800077a:	60b3      	str	r3, [r6, #8]
 800077c:	1961      	adds	r1, r4, r5
 800077e:	a802      	add	r0, sp, #8
 8000780:	f7ff ffb4 	bl	80006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000784:	1d2b      	adds	r3, r5, #4
 8000786:	9d02      	ldr	r5, [sp, #8]
 8000788:	f107 020a 	add.w	r2, r7, #10
 800078c:	441d      	add	r5, r3
 800078e:	4422      	add	r2, r4
 8000790:	1b11      	subs	r1, r2, r4
 8000792:	428d      	cmp	r5, r1
 8000794:	d904      	bls.n	80007a0 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 8000796:	f812 1b01 	ldrb.w	r1, [r2], #1
 800079a:	f802 1c02 	strb.w	r1, [r2, #-2]
 800079e:	e7f7      	b.n	8000790 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 80007a0:	1961      	adds	r1, r4, r5
 80007a2:	3b01      	subs	r3, #1
 80007a4:	4423      	add	r3, r4
 80007a6:	2200      	movs	r2, #0
 80007a8:	f801 2c01 	strb.w	r2, [r1, #-1]
 80007ac:	a803      	add	r0, sp, #12
 80007ae:	60f3      	str	r3, [r6, #12]
 80007b0:	f7ff ff9c 	bl	80006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007b4:	9803      	ldr	r0, [sp, #12]
 80007b6:	3504      	adds	r5, #4
 80007b8:	4428      	add	r0, r5
 80007ba:	1963      	adds	r3, r4, r5
 80007bc:	1b1a      	subs	r2, r3, r4
 80007be:	4290      	cmp	r0, r2
 80007c0:	d904      	bls.n	80007cc <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 80007c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80007c6:	f803 2c02 	strb.w	r2, [r3, #-2]
 80007ca:	e7f7      	b.n	80007bc <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80007cc:	1822      	adds	r2, r4, r0
 80007ce:	3d01      	subs	r5, #1
 80007d0:	2300      	movs	r3, #0
 80007d2:	4425      	add	r5, r4
 80007d4:	f802 3c01 	strb.w	r3, [r2, #-1]
 80007d8:	6135      	str	r5, [r6, #16]
 80007da:	7893      	ldrb	r3, [r2, #2]
 80007dc:	7851      	ldrb	r1, [r2, #1]
 80007de:	78d2      	ldrb	r2, [r2, #3]
 80007e0:	041b      	lsls	r3, r3, #16
 80007e2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80007e6:	5c21      	ldrb	r1, [r4, r0]
 80007e8:	430b      	orrs	r3, r1
 80007ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80007ee:	3004      	adds	r0, #4
 80007f0:	6173      	str	r3, [r6, #20]
 80007f2:	b005      	add	sp, #20
 80007f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080007f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80007f6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80007fa:	6843      	ldr	r3, [r0, #4]
 80007fc:	680d      	ldr	r5, [r1, #0]
 80007fe:	429d      	cmp	r5, r3
 8000800:	4604      	mov	r4, r0
 8000802:	460e      	mov	r6, r1
 8000804:	d904      	bls.n	8000810 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 8000806:	00a9      	lsls	r1, r5, #2
 8000808:	68c0      	ldr	r0, [r0, #12]
 800080a:	f005 fb97 	bl	8005f3c <realloc>
 800080e:	60e0      	str	r0, [r4, #12]
 8000810:	6065      	str	r5, [r4, #4]
 8000812:	1d32      	adds	r2, r6, #4
 8000814:	2100      	movs	r1, #0
 8000816:	6860      	ldr	r0, [r4, #4]
 8000818:	4281      	cmp	r1, r0
 800081a:	eba2 0306 	sub.w	r3, r2, r6
 800081e:	f102 0204 	add.w	r2, r2, #4
 8000822:	d213      	bcs.n	800084c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000824:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000828:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 800082c:	041b      	lsls	r3, r3, #16
 800082e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8000832:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000836:	4303      	orrs	r3, r0
 8000838:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 800083c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000840:	68e0      	ldr	r0, [r4, #12]
 8000842:	60a3      	str	r3, [r4, #8]
 8000844:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000848:	3101      	adds	r1, #1
 800084a:	e7e4      	b.n	8000816 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 800084c:	18f2      	adds	r2, r6, r3
 800084e:	5cf1      	ldrb	r1, [r6, r3]
 8000850:	7895      	ldrb	r5, [r2, #2]
 8000852:	7850      	ldrb	r0, [r2, #1]
 8000854:	78d2      	ldrb	r2, [r2, #3]
 8000856:	042d      	lsls	r5, r5, #16
 8000858:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800085c:	430d      	orrs	r5, r1
 800085e:	1d1f      	adds	r7, r3, #4
 8000860:	6923      	ldr	r3, [r4, #16]
 8000862:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000866:	429d      	cmp	r5, r3
 8000868:	d904      	bls.n	8000874 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 800086a:	00a9      	lsls	r1, r5, #2
 800086c:	69a0      	ldr	r0, [r4, #24]
 800086e:	f005 fb65 	bl	8005f3c <realloc>
 8000872:	61a0      	str	r0, [r4, #24]
 8000874:	6125      	str	r5, [r4, #16]
 8000876:	19f3      	adds	r3, r6, r7
 8000878:	2100      	movs	r1, #0
 800087a:	6922      	ldr	r2, [r4, #16]
 800087c:	4291      	cmp	r1, r2
 800087e:	eba3 0506 	sub.w	r5, r3, r6
 8000882:	f103 0304 	add.w	r3, r3, #4
 8000886:	d213      	bcs.n	80008b0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000888:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 800088c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000890:	0412      	lsls	r2, r2, #16
 8000892:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000896:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800089a:	4302      	orrs	r2, r0
 800089c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 80008a0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80008a4:	69a0      	ldr	r0, [r4, #24]
 80008a6:	6162      	str	r2, [r4, #20]
 80008a8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 80008ac:	3101      	adds	r1, #1
 80008ae:	e7e4      	b.n	800087a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 80008b0:	1973      	adds	r3, r6, r5
 80008b2:	5d72      	ldrb	r2, [r6, r5]
 80008b4:	789f      	ldrb	r7, [r3, #2]
 80008b6:	7859      	ldrb	r1, [r3, #1]
 80008b8:	78db      	ldrb	r3, [r3, #3]
 80008ba:	043f      	lsls	r7, r7, #16
 80008bc:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80008c0:	4317      	orrs	r7, r2
 80008c2:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80008c6:	69e3      	ldr	r3, [r4, #28]
 80008c8:	429f      	cmp	r7, r3
 80008ca:	f105 0504 	add.w	r5, r5, #4
 80008ce:	d904      	bls.n	80008da <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80008d0:	00b9      	lsls	r1, r7, #2
 80008d2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008d4:	f005 fb32 	bl	8005f3c <realloc>
 80008d8:	6260      	str	r0, [r4, #36]	; 0x24
 80008da:	61e7      	str	r7, [r4, #28]
 80008dc:	2700      	movs	r7, #0
 80008de:	46b8      	mov	r8, r7
 80008e0:	69e3      	ldr	r3, [r4, #28]
 80008e2:	429f      	cmp	r7, r3
 80008e4:	d21a      	bcs.n	800091c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80008e6:	1971      	adds	r1, r6, r5
 80008e8:	a801      	add	r0, sp, #4
 80008ea:	f7ff feff 	bl	80006ec <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008ee:	1d2b      	adds	r3, r5, #4
 80008f0:	9d01      	ldr	r5, [sp, #4]
 80008f2:	18f2      	adds	r2, r6, r3
 80008f4:	441d      	add	r5, r3
 80008f6:	1b91      	subs	r1, r2, r6
 80008f8:	42a9      	cmp	r1, r5
 80008fa:	d204      	bcs.n	8000906 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80008fc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000900:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000904:	e7f7      	b.n	80008f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000906:	1972      	adds	r2, r6, r5
 8000908:	3b01      	subs	r3, #1
 800090a:	f802 8c01 	strb.w	r8, [r2, #-1]
 800090e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000910:	4433      	add	r3, r6
 8000912:	6223      	str	r3, [r4, #32]
 8000914:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000918:	3701      	adds	r7, #1
 800091a:	e7e1      	b.n	80008e0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 800091c:	4628      	mov	r0, r5
 800091e:	b002      	add	sp, #8
 8000920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000924 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>:
 8000924:	b530      	push	{r4, r5, lr}
 8000926:	4602      	mov	r2, r0
 8000928:	2300      	movs	r3, #0
 800092a:	f200 409c 	addw	r0, r0, #1180	; 0x49c
 800092e:	f850 4b04 	ldr.w	r4, [r0], #4
 8000932:	b9b4      	cbnz	r4, 8000962 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)+0x3e>
 8000934:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8000938:	f101 0414 	add.w	r4, r1, #20
 800093c:	337d      	adds	r3, #125	; 0x7d
 800093e:	f8c0 449c 	str.w	r4, [r0, #1180]	; 0x49c
 8000942:	61cb      	str	r3, [r1, #28]
 8000944:	620a      	str	r2, [r1, #32]
 8000946:	2001      	movs	r0, #1
 8000948:	f502 64a0 	add.w	r4, r2, #1280	; 0x500
 800094c:	2300      	movs	r3, #0
 800094e:	f854 5b04 	ldr.w	r5, [r4], #4
 8000952:	b95d      	cbnz	r5, 800096c <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)+0x48>
 8000954:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 8000958:	3364      	adds	r3, #100	; 0x64
 800095a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800095e:	604b      	str	r3, [r1, #4]
 8000960:	bd30      	pop	{r4, r5, pc}
 8000962:	3301      	adds	r3, #1
 8000964:	2b19      	cmp	r3, #25
 8000966:	d1e2      	bne.n	800092e <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)+0xa>
 8000968:	2000      	movs	r0, #0
 800096a:	e7ed      	b.n	8000948 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)+0x24>
 800096c:	3301      	adds	r3, #1
 800096e:	2b19      	cmp	r3, #25
 8000970:	d1ed      	bne.n	800094e <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)+0x2a>
 8000972:	2000      	movs	r0, #0
 8000974:	bd30      	pop	{r4, r5, pc}
	...

08000978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000978:	b530      	push	{r4, r5, lr}
 800097a:	b085      	sub	sp, #20
 800097c:	4604      	mov	r4, r0
 800097e:	4b09      	ldr	r3, [pc, #36]	; (80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000980:	9301      	str	r3, [sp, #4]
 8000982:	2300      	movs	r3, #0
 8000984:	9302      	str	r3, [sp, #8]
 8000986:	9303      	str	r3, [sp, #12]
 8000988:	f854 3b7c 	ldr.w	r3, [r4], #124
 800098c:	aa01      	add	r2, sp, #4
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	210a      	movs	r1, #10
 8000992:	4605      	mov	r5, r0
 8000994:	4798      	blx	r3
 8000996:	4620      	mov	r0, r4
 8000998:	f004 f9ad 	bl	8004cf6 <mbed::Timer::read_ms()>
 800099c:	f8c5 008c 	str.w	r0, [r5, #140]	; 0x8c
 80009a0:	b005      	add	sp, #20
 80009a2:	bd30      	pop	{r4, r5, pc}
 80009a4:	08006450 	.word	0x08006450

080009a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 80009a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009ac:	b086      	sub	sp, #24
 80009ae:	4b2b      	ldr	r3, [pc, #172]	; (8000a5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 80009b0:	9300      	str	r3, [sp, #0]
 80009b2:	2200      	movs	r2, #0
 80009b4:	4b2a      	ldr	r3, [pc, #168]	; (8000a60 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 80009b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80009ba:	4605      	mov	r5, r0
 80009bc:	9302      	str	r3, [sp, #8]
 80009be:	9303      	str	r3, [sp, #12]
 80009c0:	9304      	str	r3, [sp, #16]
 80009c2:	9205      	str	r2, [sp, #20]
 80009c4:	f200 449c 	addw	r4, r0, #1180	; 0x49c
 80009c8:	f500 66a0 	add.w	r6, r0, #1280	; 0x500
 80009cc:	f44f 7700 	mov.w	r7, #512	; 0x200
 80009d0:	6823      	ldr	r3, [r4, #0]
 80009d2:	b1bb      	cbz	r3, 8000a04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 80009d4:	6858      	ldr	r0, [r3, #4]
 80009d6:	689a      	ldr	r2, [r3, #8]
 80009d8:	f8ad 2004 	strh.w	r2, [sp, #4]
 80009dc:	681a      	ldr	r2, [r3, #0]
 80009de:	6803      	ldr	r3, [r0, #0]
 80009e0:	9202      	str	r2, [sp, #8]
 80009e2:	689b      	ldr	r3, [r3, #8]
 80009e4:	4798      	blx	r3
 80009e6:	6823      	ldr	r3, [r4, #0]
 80009e8:	9003      	str	r0, [sp, #12]
 80009ea:	6858      	ldr	r0, [r3, #4]
 80009ec:	6803      	ldr	r3, [r0, #0]
 80009ee:	68db      	ldr	r3, [r3, #12]
 80009f0:	4798      	blx	r3
 80009f2:	6821      	ldr	r1, [r4, #0]
 80009f4:	682b      	ldr	r3, [r5, #0]
 80009f6:	9004      	str	r0, [sp, #16]
 80009f8:	9705      	str	r7, [sp, #20]
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	6909      	ldr	r1, [r1, #16]
 80009fe:	466a      	mov	r2, sp
 8000a00:	4628      	mov	r0, r5
 8000a02:	4798      	blx	r3
 8000a04:	3404      	adds	r4, #4
 8000a06:	42b4      	cmp	r4, r6
 8000a08:	d1e2      	bne.n	80009d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000a0a:	f205 5664 	addw	r6, r5, #1380	; 0x564
 8000a0e:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000a12:	6820      	ldr	r0, [r4, #0]
 8000a14:	b1c8      	cbz	r0, 8000a4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000a16:	6843      	ldr	r3, [r0, #4]
 8000a18:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000a1c:	6883      	ldr	r3, [r0, #8]
 8000a1e:	9302      	str	r3, [sp, #8]
 8000a20:	6803      	ldr	r3, [r0, #0]
 8000a22:	689b      	ldr	r3, [r3, #8]
 8000a24:	4798      	blx	r3
 8000a26:	9003      	str	r0, [sp, #12]
 8000a28:	6820      	ldr	r0, [r4, #0]
 8000a2a:	6803      	ldr	r3, [r0, #0]
 8000a2c:	68db      	ldr	r3, [r3, #12]
 8000a2e:	4798      	blx	r3
 8000a30:	682b      	ldr	r3, [r5, #0]
 8000a32:	9004      	str	r0, [sp, #16]
 8000a34:	6820      	ldr	r0, [r4, #0]
 8000a36:	f8d3 8000 	ldr.w	r8, [r3]
 8000a3a:	6803      	ldr	r3, [r0, #0]
 8000a3c:	9705      	str	r7, [sp, #20]
 8000a3e:	685b      	ldr	r3, [r3, #4]
 8000a40:	4798      	blx	r3
 8000a42:	466a      	mov	r2, sp
 8000a44:	4601      	mov	r1, r0
 8000a46:	4628      	mov	r0, r5
 8000a48:	47c0      	blx	r8
 8000a4a:	3404      	adds	r4, #4
 8000a4c:	42a6      	cmp	r6, r4
 8000a4e:	d1e0      	bne.n	8000a12 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000a50:	2301      	movs	r3, #1
 8000a52:	f885 3578 	strb.w	r3, [r5, #1400]	; 0x578
 8000a56:	b006      	add	sp, #24
 8000a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a5c:	08006468 	.word	0x08006468
 8000a60:	080067e9 	.word	0x080067e9

08000a64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a66:	b085      	sub	sp, #20
 8000a68:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8000a6c:	4b1e      	ldr	r3, [pc, #120]	; (8000ae8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
 8000a6e:	9301      	str	r3, [sp, #4]
 8000a70:	4604      	mov	r4, r0
 8000a72:	2300      	movs	r3, #0
 8000a74:	4628      	mov	r0, r5
 8000a76:	9302      	str	r3, [sp, #8]
 8000a78:	9303      	str	r3, [sp, #12]
 8000a7a:	460e      	mov	r6, r1
 8000a7c:	f004 f93b 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000a80:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8000a84:	4631      	mov	r1, r6
 8000a86:	1a87      	subs	r7, r0, r2
 8000a88:	a801      	add	r0, sp, #4
 8000a8a:	f7ff fbc7 	bl	800021c <std_msgs::Time::deserialize(unsigned char*)>
 8000a8e:	9b02      	ldr	r3, [sp, #8]
 8000a90:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000a94:	fbb7 f2f6 	udiv	r2, r7, r6
 8000a98:	4413      	add	r3, r2
 8000a9a:	9302      	str	r3, [sp, #8]
 8000a9c:	fb06 7212 	mls	r2, r6, r2, r7
 8000aa0:	9b03      	ldr	r3, [sp, #12]
 8000aa2:	4f12      	ldr	r7, [pc, #72]	; (8000aec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000aa4:	4628      	mov	r0, r5
 8000aa6:	fb07 3202 	mla	r2, r7, r2, r3
 8000aaa:	9203      	str	r2, [sp, #12]
 8000aac:	f004 f923 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000ab0:	9a02      	ldr	r2, [sp, #8]
 8000ab2:	fbb0 f3f6 	udiv	r3, r0, r6
 8000ab6:	3a01      	subs	r2, #1
 8000ab8:	1ad2      	subs	r2, r2, r3
 8000aba:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8000abe:	9903      	ldr	r1, [sp, #12]
 8000ac0:	4a0b      	ldr	r2, [pc, #44]	; (8000af0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000ac2:	fb06 0313 	mls	r3, r6, r3, r0
 8000ac6:	440a      	add	r2, r1
 8000ac8:	4621      	mov	r1, r4
 8000aca:	fb07 2313 	mls	r3, r7, r3, r2
 8000ace:	f841 3f94 	str.w	r3, [r1, #148]!
 8000ad2:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000ad6:	f000 fb19 	bl	800110c <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000ada:	4628      	mov	r0, r5
 8000adc:	f004 f90b 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000ae0:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8000ae4:	b005      	add	sp, #20
 8000ae6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ae8:	08006450 	.word	0x08006450
 8000aec:	000f4240 	.word	0x000f4240
 8000af0:	3b9aca00 	.word	0x3b9aca00

08000af4 <_GLOBAL__sub_I_initializeFlag>:
 8000af4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000af6:	4c66      	ldr	r4, [pc, #408]	; (8000c90 <_GLOBAL__sub_I_initializeFlag+0x19c>)
 8000af8:	4f66      	ldr	r7, [pc, #408]	; (8000c94 <_GLOBAL__sub_I_initializeFlag+0x1a0>)
 8000afa:	220c      	movs	r2, #12
 8000afc:	210b      	movs	r1, #11
 8000afe:	4620      	mov	r0, r4
 8000b00:	f004 f9d0 	bl	8004ea4 <mbed::CAN::CAN(PinName, PinName)>
 8000b04:	4620      	mov	r0, r4
 8000b06:	4c64      	ldr	r4, [pc, #400]	; (8000c98 <_GLOBAL__sub_I_initializeFlag+0x1a4>)
 8000b08:	4964      	ldr	r1, [pc, #400]	; (8000c9c <_GLOBAL__sub_I_initializeFlag+0x1a8>)
 8000b0a:	463a      	mov	r2, r7
 8000b0c:	f004 fc30 	bl	8005370 <__aeabi_atexit>
 8000b10:	221c      	movs	r2, #28
 8000b12:	2100      	movs	r1, #0
 8000b14:	4620      	mov	r0, r4
 8000b16:	f004 ffa0 	bl	8005a5a <memset>
 8000b1a:	4620      	mov	r0, r4
 8000b1c:	4c60      	ldr	r4, [pc, #384]	; (8000ca0 <_GLOBAL__sub_I_initializeFlag+0x1ac>)
 8000b1e:	2113      	movs	r1, #19
 8000b20:	f000 fe5b 	bl	80017da <gpio_init_out>
 8000b24:	4620      	mov	r0, r4
 8000b26:	4b5f      	ldr	r3, [pc, #380]	; (8000ca4 <_GLOBAL__sub_I_initializeFlag+0x1b0>)
 8000b28:	f840 3b04 	str.w	r3, [r0], #4
 8000b2c:	2500      	movs	r5, #0
 8000b2e:	2304      	movs	r3, #4
 8000b30:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000b34:	220f      	movs	r2, #15
 8000b36:	2102      	movs	r1, #2
 8000b38:	f104 067c 	add.w	r6, r4, #124	; 0x7c
 8000b3c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b40:	f000 fbb8 	bl	80012b4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000b44:	4630      	mov	r0, r6
 8000b46:	f004 f8ec 	bl	8004d22 <mbed::Timer::Timer()>
 8000b4a:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000b4e:	67a3      	str	r3, [r4, #120]	; 0x78
 8000b50:	4630      	mov	r0, r6
 8000b52:	f44f 7600 	mov.w	r6, #512	; 0x200
 8000b56:	f004 f8a2 	bl	8004c9e <mbed::Timer::start()>
 8000b5a:	4632      	mov	r2, r6
 8000b5c:	4629      	mov	r1, r5
 8000b5e:	f104 009c 	add.w	r0, r4, #156	; 0x9c
 8000b62:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8000b66:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
 8000b6a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8000b6e:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8000b72:	f004 ff72 	bl	8005a5a <memset>
 8000b76:	4632      	mov	r2, r6
 8000b78:	4629      	mov	r1, r5
 8000b7a:	2664      	movs	r6, #100	; 0x64
 8000b7c:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8000b80:	f004 ff6b 	bl	8005a5a <memset>
 8000b84:	4632      	mov	r2, r6
 8000b86:	4629      	mov	r1, r5
 8000b88:	f204 409c 	addw	r0, r4, #1180	; 0x49c
 8000b8c:	f004 ff65 	bl	8005a5a <memset>
 8000b90:	4632      	mov	r2, r6
 8000b92:	4629      	mov	r1, r5
 8000b94:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 8000b98:	f004 ff5f 	bl	8005a5a <memset>
 8000b9c:	4b42      	ldr	r3, [pc, #264]	; (8000ca8 <_GLOBAL__sub_I_initializeFlag+0x1b4>)
 8000b9e:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8000ba2:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
 8000ba6:	2600      	movs	r6, #0
 8000ba8:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 8000bac:	f8c4 5594 	str.w	r5, [r4, #1428]	; 0x594
 8000bb0:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8000bb4:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8000bb8:	601e      	str	r6, [r3, #0]
 8000bba:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8000bbe:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 8000bc2:	f8c4 55ac 	str.w	r5, [r4, #1452]	; 0x5ac
 8000bc6:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 8000bca:	463a      	mov	r2, r7
 8000bcc:	4937      	ldr	r1, [pc, #220]	; (8000cac <_GLOBAL__sub_I_initializeFlag+0x1b8>)
 8000bce:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
 8000bd2:	4620      	mov	r0, r4
 8000bd4:	f8c4 5568 	str.w	r5, [r4, #1384]	; 0x568
 8000bd8:	f8c4 556c 	str.w	r5, [r4, #1388]	; 0x56c
 8000bdc:	f8c4 5570 	str.w	r5, [r4, #1392]	; 0x570
 8000be0:	f8c4 5574 	str.w	r5, [r4, #1396]	; 0x574
 8000be4:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8000be8:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000bec:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000bf0:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8000bf4:	f884 5588 	strb.w	r5, [r4, #1416]	; 0x588
 8000bf8:	f004 fbba 	bl	8005370 <__aeabi_atexit>
 8000bfc:	4b2c      	ldr	r3, [pc, #176]	; (8000cb0 <_GLOBAL__sub_I_initializeFlag+0x1bc>)
 8000bfe:	4a2d      	ldr	r2, [pc, #180]	; (8000cb4 <_GLOBAL__sub_I_initializeFlag+0x1c0>)
 8000c00:	601a      	str	r2, [r3, #0]
 8000c02:	492d      	ldr	r1, [pc, #180]	; (8000cb8 <_GLOBAL__sub_I_initializeFlag+0x1c4>)
 8000c04:	4a2d      	ldr	r2, [pc, #180]	; (8000cbc <_GLOBAL__sub_I_initializeFlag+0x1c8>)
 8000c06:	60de      	str	r6, [r3, #12]
 8000c08:	611e      	str	r6, [r3, #16]
 8000c0a:	609e      	str	r6, [r3, #8]
 8000c0c:	e882 000a 	stmia.w	r2, {r1, r3}
 8000c10:	711d      	strb	r5, [r3, #4]
 8000c12:	4b2b      	ldr	r3, [pc, #172]	; (8000cc0 <_GLOBAL__sub_I_initializeFlag+0x1cc>)
 8000c14:	6115      	str	r5, [r2, #16]
 8000c16:	4a2b      	ldr	r2, [pc, #172]	; (8000cc4 <_GLOBAL__sub_I_initializeFlag+0x1d0>)
 8000c18:	601a      	str	r2, [r3, #0]
 8000c1a:	4a2b      	ldr	r2, [pc, #172]	; (8000cc8 <_GLOBAL__sub_I_initializeFlag+0x1d4>)
 8000c1c:	60da      	str	r2, [r3, #12]
 8000c1e:	4a2b      	ldr	r2, [pc, #172]	; (8000ccc <_GLOBAL__sub_I_initializeFlag+0x1d8>)
 8000c20:	629a      	str	r2, [r3, #40]	; 0x28
 8000c22:	2201      	movs	r2, #1
 8000c24:	62da      	str	r2, [r3, #44]	; 0x2c
 8000c26:	4a2a      	ldr	r2, [pc, #168]	; (8000cd0 <_GLOBAL__sub_I_initializeFlag+0x1dc>)
 8000c28:	741d      	strb	r5, [r3, #16]
 8000c2a:	615e      	str	r6, [r3, #20]
 8000c2c:	619e      	str	r6, [r3, #24]
 8000c2e:	625e      	str	r6, [r3, #36]	; 0x24
 8000c30:	609a      	str	r2, [r3, #8]
 8000c32:	61de      	str	r6, [r3, #28]
 8000c34:	621e      	str	r6, [r3, #32]
 8000c36:	4b27      	ldr	r3, [pc, #156]	; (8000cd4 <_GLOBAL__sub_I_initializeFlag+0x1e0>)
 8000c38:	4d27      	ldr	r5, [pc, #156]	; (8000cd8 <_GLOBAL__sub_I_initializeFlag+0x1e4>)
 8000c3a:	4c28      	ldr	r4, [pc, #160]	; (8000cdc <_GLOBAL__sub_I_initializeFlag+0x1e8>)
 8000c3c:	4828      	ldr	r0, [pc, #160]	; (8000ce0 <_GLOBAL__sub_I_initializeFlag+0x1ec>)
 8000c3e:	4929      	ldr	r1, [pc, #164]	; (8000ce4 <_GLOBAL__sub_I_initializeFlag+0x1f0>)
 8000c40:	615d      	str	r5, [r3, #20]
 8000c42:	f103 0210 	add.w	r2, r3, #16
 8000c46:	619a      	str	r2, [r3, #24]
 8000c48:	609d      	str	r5, [r3, #8]
 8000c4a:	2202      	movs	r2, #2
 8000c4c:	4d26      	ldr	r5, [pc, #152]	; (8000ce8 <_GLOBAL__sub_I_initializeFlag+0x1f4>)
 8000c4e:	601c      	str	r4, [r3, #0]
 8000c50:	60d8      	str	r0, [r3, #12]
 8000c52:	6119      	str	r1, [r3, #16]
 8000c54:	625a      	str	r2, [r3, #36]	; 0x24
 8000c56:	629d      	str	r5, [r3, #40]	; 0x28
 8000c58:	4b24      	ldr	r3, [pc, #144]	; (8000cec <_GLOBAL__sub_I_initializeFlag+0x1f8>)
 8000c5a:	4d25      	ldr	r5, [pc, #148]	; (8000cf0 <_GLOBAL__sub_I_initializeFlag+0x1fc>)
 8000c5c:	601c      	str	r4, [r3, #0]
 8000c5e:	f103 0610 	add.w	r6, r3, #16
 8000c62:	60d8      	str	r0, [r3, #12]
 8000c64:	6119      	str	r1, [r3, #16]
 8000c66:	615d      	str	r5, [r3, #20]
 8000c68:	619e      	str	r6, [r3, #24]
 8000c6a:	625a      	str	r2, [r3, #36]	; 0x24
 8000c6c:	609d      	str	r5, [r3, #8]
 8000c6e:	4d21      	ldr	r5, [pc, #132]	; (8000cf4 <_GLOBAL__sub_I_initializeFlag+0x200>)
 8000c70:	629d      	str	r5, [r3, #40]	; 0x28
 8000c72:	4b21      	ldr	r3, [pc, #132]	; (8000cf8 <_GLOBAL__sub_I_initializeFlag+0x204>)
 8000c74:	6119      	str	r1, [r3, #16]
 8000c76:	625a      	str	r2, [r3, #36]	; 0x24
 8000c78:	4920      	ldr	r1, [pc, #128]	; (8000cfc <_GLOBAL__sub_I_initializeFlag+0x208>)
 8000c7a:	4a21      	ldr	r2, [pc, #132]	; (8000d00 <_GLOBAL__sub_I_initializeFlag+0x20c>)
 8000c7c:	60d8      	str	r0, [r3, #12]
 8000c7e:	f103 0010 	add.w	r0, r3, #16
 8000c82:	601c      	str	r4, [r3, #0]
 8000c84:	6159      	str	r1, [r3, #20]
 8000c86:	6198      	str	r0, [r3, #24]
 8000c88:	6099      	str	r1, [r3, #8]
 8000c8a:	629a      	str	r2, [r3, #40]	; 0x28
 8000c8c:	b003      	add	sp, #12
 8000c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c90:	20000244 	.word	0x20000244
 8000c94:	20000188 	.word	0x20000188
 8000c98:	200003a8 	.word	0x200003a8
 8000c9c:	08004e2d 	.word	0x08004e2d
 8000ca0:	200003c4 	.word	0x200003c4
 8000ca4:	08006510 	.word	0x08006510
 8000ca8:	08006498 	.word	0x08006498
 8000cac:	080010cd 	.word	0x080010cd
 8000cb0:	20000380 	.word	0x20000380
 8000cb4:	080064f8 	.word	0x080064f8
 8000cb8:	08006558 	.word	0x08006558
 8000cbc:	20000394 	.word	0x20000394
 8000cc0:	20000350 	.word	0x20000350
 8000cc4:	08006524 	.word	0x08006524
 8000cc8:	080064e0 	.word	0x080064e0
 8000ccc:	08000479 	.word	0x08000479
 8000cd0:	08006564 	.word	0x08006564
 8000cd4:	200002f8 	.word	0x200002f8
 8000cd8:	0800656e 	.word	0x0800656e
 8000cdc:	0800653c 	.word	0x0800653c
 8000ce0:	080064b0 	.word	0x080064b0
 8000ce4:	080064c8 	.word	0x080064c8
 8000ce8:	0800050d 	.word	0x0800050d
 8000cec:	20000324 	.word	0x20000324
 8000cf0:	08006581 	.word	0x08006581
 8000cf4:	08000415 	.word	0x08000415
 8000cf8:	20000978 	.word	0x20000978
 8000cfc:	08006593 	.word	0x08006593
 8000d00:	08000421 	.word	0x08000421

08000d04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d06:	2963      	cmp	r1, #99	; 0x63
 8000d08:	b085      	sub	sp, #20
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	460e      	mov	r6, r1
 8000d0e:	dd03      	ble.n	8000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000d10:	f890 5578 	ldrb.w	r5, [r0, #1400]	; 0x578
 8000d14:	2d00      	cmp	r5, #0
 8000d16:	d04d      	beq.n	8000db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000d18:	6813      	ldr	r3, [r2, #0]
 8000d1a:	f204 21a3 	addw	r1, r4, #675	; 0x2a3
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	4610      	mov	r0, r2
 8000d22:	4798      	blx	r3
 8000d24:	23ff      	movs	r3, #255	; 0xff
 8000d26:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8000d2a:	23fe      	movs	r3, #254	; 0xfe
 8000d2c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000d30:	f884 329d 	strb.w	r3, [r4, #669]	; 0x29d
 8000d34:	b2c3      	uxtb	r3, r0
 8000d36:	f884 329e 	strb.w	r3, [r4, #670]	; 0x29e
 8000d3a:	4413      	add	r3, r2
 8000d3c:	43db      	mvns	r3, r3
 8000d3e:	f884 62a1 	strb.w	r6, [r4, #673]	; 0x2a1
 8000d42:	f346 2607 	sbfx	r6, r6, #8, #8
 8000d46:	f884 229f 	strb.w	r2, [r4, #671]	; 0x29f
 8000d4a:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 8000d4e:	f884 62a2 	strb.w	r6, [r4, #674]	; 0x2a2
 8000d52:	f204 21a1 	addw	r1, r4, #673	; 0x2a1
 8000d56:	2205      	movs	r2, #5
 8000d58:	2300      	movs	r3, #0
 8000d5a:	1d86      	adds	r6, r0, #6
 8000d5c:	42b2      	cmp	r2, r6
 8000d5e:	dc04      	bgt.n	8000d6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000d60:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000d64:	3201      	adds	r2, #1
 8000d66:	442b      	add	r3, r5
 8000d68:	e7f8      	b.n	8000d5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000d6a:	f100 0508 	add.w	r5, r0, #8
 8000d6e:	4420      	add	r0, r4
 8000d70:	43db      	mvns	r3, r3
 8000d72:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000d76:	f880 32a3 	strb.w	r3, [r0, #675]	; 0x2a3
 8000d7a:	dc0c      	bgt.n	8000d96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000d7c:	f504 7727 	add.w	r7, r4, #668	; 0x29c
 8000d80:	463e      	mov	r6, r7
 8000d82:	3404      	adds	r4, #4
 8000d84:	1bf3      	subs	r3, r6, r7
 8000d86:	429d      	cmp	r5, r3
 8000d88:	dd14      	ble.n	8000db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000d8a:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000d8e:	4620      	mov	r0, r4
 8000d90:	f000 fafd 	bl	800138e <BufferedSerial::putc(int)>
 8000d94:	e7f6      	b.n	8000d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000d96:	4b09      	ldr	r3, [pc, #36]	; (8000dbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000d98:	9301      	str	r3, [sp, #4]
 8000d9a:	2303      	movs	r3, #3
 8000d9c:	f88d 3008 	strb.w	r3, [sp, #8]
 8000da0:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000da2:	9303      	str	r3, [sp, #12]
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	aa01      	add	r2, sp, #4
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	2107      	movs	r1, #7
 8000dac:	4620      	mov	r0, r4
 8000dae:	4798      	blx	r3
 8000db0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000db4:	4628      	mov	r0, r5
 8000db6:	b005      	add	sp, #20
 8000db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000dba:	bf00      	nop
 8000dbc:	08006480 	.word	0x08006480
 8000dc0:	080066d0 	.word	0x080066d0

08000dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000dc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000dc8:	f100 087c 	add.w	r8, r0, #124	; 0x7c
 8000dcc:	4604      	mov	r4, r0
 8000dce:	4640      	mov	r0, r8
 8000dd0:	f003 ff91 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000dd4:	f8d4 3580 	ldr.w	r3, [r4, #1408]	; 0x580
 8000dd8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000ddc:	1ac3      	subs	r3, r0, r3
 8000dde:	4293      	cmp	r3, r2
 8000de0:	bf84      	itt	hi
 8000de2:	2300      	movhi	r3, #0
 8000de4:	f884 3578 	strbhi.w	r3, [r4, #1400]	; 0x578
 8000de8:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
 8000dec:	4605      	mov	r5, r0
 8000dee:	b133      	cbz	r3, 8000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000df0:	f8d4 3584 	ldr.w	r3, [r4, #1412]	; 0x584
 8000df4:	4283      	cmp	r3, r0
 8000df6:	bf3c      	itt	cc
 8000df8:	2300      	movcc	r3, #0
 8000dfa:	f8c4 3564 	strcc.w	r3, [r4, #1380]	; 0x564
 8000dfe:	f104 0904 	add.w	r9, r4, #4
 8000e02:	2600      	movs	r6, #0
 8000e04:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8000e08:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000e0c:	b9ab      	cbnz	r3, 8000e3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000e0e:	4648      	mov	r0, r9
 8000e10:	f000 f98a 	bl	8001128 <BufferedSerial::readable()>
 8000e14:	b9e8      	cbnz	r0, 8000e52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000e16:	f894 0578 	ldrb.w	r0, [r4, #1400]	; 0x578
 8000e1a:	b160      	cbz	r0, 8000e36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000e1c:	f8d4 357c 	ldr.w	r3, [r4, #1404]	; 0x57c
 8000e20:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000e24:	1aeb      	subs	r3, r5, r3
 8000e26:	4293      	cmp	r3, r2
 8000e28:	d904      	bls.n	8000e34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	f7ff fda4 	bl	8000978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000e30:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000e34:	2000      	movs	r0, #0
 8000e36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e3a:	4640      	mov	r0, r8
 8000e3c:	f003 ff5b 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000e40:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000e44:	1b40      	subs	r0, r0, r5
 8000e46:	4298      	cmp	r0, r3
 8000e48:	d9e1      	bls.n	8000e0e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000e4a:	f06f 0001 	mvn.w	r0, #1
 8000e4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e52:	4648      	mov	r0, r9
 8000e54:	f000 f970 	bl	8001138 <BufferedSerial::getc()>
 8000e58:	2800      	cmp	r0, #0
 8000e5a:	dbdc      	blt.n	8000e16 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000e5c:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
 8000e60:	f8d4 a564 	ldr.w	r10, [r4, #1380]	; 0x564
 8000e64:	4403      	add	r3, r0
 8000e66:	f1ba 0f07 	cmp.w	r10, #7
 8000e6a:	f8c4 3574 	str.w	r3, [r4, #1396]	; 0x574
 8000e6e:	d112      	bne.n	8000e96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000e70:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 8000e74:	1c5a      	adds	r2, r3, #1
 8000e76:	4423      	add	r3, r4
 8000e78:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
 8000e7c:	f883 009c 	strb.w	r0, [r3, #156]	; 0x9c
 8000e80:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000e84:	3b01      	subs	r3, #1
 8000e86:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d1bc      	bne.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000e8e:	2308      	movs	r3, #8
 8000e90:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000e94:	e7b8      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000e96:	f1ba 0f00 	cmp.w	r10, #0
 8000e9a:	d114      	bne.n	8000ec6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000e9c:	28ff      	cmp	r0, #255	; 0xff
 8000e9e:	d107      	bne.n	8000eb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000ea0:	2301      	movs	r3, #1
 8000ea2:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000ea6:	f105 0314 	add.w	r3, r5, #20
 8000eaa:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 8000eae:	e7ab      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000eb0:	4640      	mov	r0, r8
 8000eb2:	f003 ff20 	bl	8004cf6 <mbed::Timer::read_ms()>
 8000eb6:	f241 3388 	movw	r3, #5000	; 0x1388
 8000eba:	1b40      	subs	r0, r0, r5
 8000ebc:	4298      	cmp	r0, r3
 8000ebe:	d9a3      	bls.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ec0:	f884 a578 	strb.w	r10, [r4, #1400]	; 0x578
 8000ec4:	e7c1      	b.n	8000e4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000ec6:	f1ba 0f01 	cmp.w	r10, #1
 8000eca:	d10d      	bne.n	8000ee8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000ecc:	28fe      	cmp	r0, #254	; 0xfe
 8000ece:	d101      	bne.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000ed0:	2302      	movs	r3, #2
 8000ed2:	e7dd      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000ed4:	f894 3578 	ldrb.w	r3, [r4, #1400]	; 0x578
 8000ed8:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000edc:	2b00      	cmp	r3, #0
 8000ede:	d193      	bne.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f7ff fd49 	bl	8000978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000ee6:	e78f      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ee8:	f1ba 0f02 	cmp.w	r10, #2
 8000eec:	d109      	bne.n	8000f02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000eee:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 8000ef2:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
 8000ef6:	2303      	movs	r3, #3
 8000ef8:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000efc:	f8c4 0574 	str.w	r0, [r4, #1396]	; 0x574
 8000f00:	e782      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f02:	f1ba 0f03 	cmp.w	r10, #3
 8000f06:	d107      	bne.n	8000f18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000f08:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000f0c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f10:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 8000f14:	2304      	movs	r3, #4
 8000f16:	e7bb      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f18:	f1ba 0f04 	cmp.w	r10, #4
 8000f1c:	d10b      	bne.n	8000f36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000f1e:	425a      	negs	r2, r3
 8000f20:	b2d2      	uxtb	r2, r2
 8000f22:	b2db      	uxtb	r3, r3
 8000f24:	bf58      	it	pl
 8000f26:	4253      	negpl	r3, r2
 8000f28:	2bff      	cmp	r3, #255	; 0xff
 8000f2a:	d101      	bne.n	8000f30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000f2c:	2305      	movs	r3, #5
 8000f2e:	e7af      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f30:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000f34:	e768      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f36:	f1ba 0f05 	cmp.w	r10, #5
 8000f3a:	d103      	bne.n	8000f44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000f3c:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8000f40:	2306      	movs	r3, #6
 8000f42:	e7d9      	b.n	8000ef8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000f44:	f1ba 0f06 	cmp.w	r10, #6
 8000f48:	d10b      	bne.n	8000f62 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000f4a:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8000f4e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f52:	2307      	movs	r3, #7
 8000f54:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000f58:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8000f5c:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000f60:	e793      	b.n	8000e8a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000f62:	f1ba 0f08 	cmp.w	r10, #8
 8000f66:	f47f af4f 	bne.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f6a:	425a      	negs	r2, r3
 8000f6c:	b2d2      	uxtb	r2, r2
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	bf58      	it	pl
 8000f72:	4253      	negpl	r3, r2
 8000f74:	2bff      	cmp	r3, #255	; 0xff
 8000f76:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000f7a:	f47f af45 	bne.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f7e:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8000f82:	b96b      	cbnz	r3, 8000fa0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000f84:	4620      	mov	r0, r4
 8000f86:	f7ff fcf7 	bl	8000978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000f8a:	4620      	mov	r0, r4
 8000f8c:	f7ff fd0c 	bl	80009a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000f90:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000f94:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000f98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000fa0:	2b0a      	cmp	r3, #10
 8000fa2:	d104      	bne.n	8000fae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000fa4:	4639      	mov	r1, r7
 8000fa6:	4620      	mov	r0, r4
 8000fa8:	f7ff fd5c 	bl	8000a64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000fac:	e72c      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fae:	2b06      	cmp	r3, #6
 8000fb0:	d108      	bne.n	8000fc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000fb2:	4639      	mov	r1, r7
 8000fb4:	f204 508c 	addw	r0, r4, #1420	; 0x58c
 8000fb8:	f7ff fc1d 	bl	80007f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000fbc:	2301      	movs	r3, #1
 8000fbe:	f884 3588 	strb.w	r3, [r4, #1416]	; 0x588
 8000fc2:	e721      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fc4:	2b0b      	cmp	r3, #11
 8000fc6:	d102      	bne.n	8000fce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000fc8:	f884 6578 	strb.w	r6, [r4, #1400]	; 0x578
 8000fcc:	e71c      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fce:	33dc      	adds	r3, #220	; 0xdc
 8000fd0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000fd4:	2800      	cmp	r0, #0
 8000fd6:	f43f af17 	beq.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fda:	6803      	ldr	r3, [r0, #0]
 8000fdc:	4639      	mov	r1, r7
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	4798      	blx	r3
 8000fe2:	e711      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000fe4 <main>:
 8000fe4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000fe6:	4b2d      	ldr	r3, [pc, #180]	; (800109c <main+0xb8>)
 8000fe8:	4c2d      	ldr	r4, [pc, #180]	; (80010a0 <main+0xbc>)
 8000fea:	68da      	ldr	r2, [r3, #12]
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	6013      	str	r3, [r2, #0]
 8000ff0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000ff4:	1d20      	adds	r0, r4, #4
 8000ff6:	2500      	movs	r5, #0
 8000ff8:	67a1      	str	r1, [r4, #120]	; 0x78
 8000ffa:	f003 ffcf 	bl	8004f9c <mbed::SerialBase::baud(int)>
 8000ffe:	4929      	ldr	r1, [pc, #164]	; (80010a4 <main+0xc0>)
 8001000:	f8c4 5564 	str.w	r5, [r4, #1380]	; 0x564
 8001004:	4620      	mov	r0, r4
 8001006:	f8c4 5568 	str.w	r5, [r4, #1384]	; 0x568
 800100a:	f8c4 5570 	str.w	r5, [r4, #1392]	; 0x570
 800100e:	f8c4 556c 	str.w	r5, [r4, #1388]	; 0x56c
 8001012:	f7ff fc87 	bl	8000924 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>
 8001016:	4924      	ldr	r1, [pc, #144]	; (80010a8 <main+0xc4>)
 8001018:	4620      	mov	r0, r4
 800101a:	f7ff fc83 	bl	8000924 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>
 800101e:	4923      	ldr	r1, [pc, #140]	; (80010ac <main+0xc8>)
 8001020:	4620      	mov	r0, r4
 8001022:	f7ff fc7f 	bl	8000924 <bool ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertiseService<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>(ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>&)>
 8001026:	f504 6393 	add.w	r3, r4, #1176	; 0x498
 800102a:	f853 2f04 	ldr.w	r2, [r3, #4]!
 800102e:	bb6a      	cbnz	r2, 800108c <main+0xa8>
 8001030:	4b1f      	ldr	r3, [pc, #124]	; (80010b0 <main+0xcc>)
 8001032:	eb04 0285 	add.w	r2, r4, r5, lsl #2
 8001036:	357d      	adds	r5, #125	; 0x7d
 8001038:	f8c2 349c 	str.w	r3, [r2, #1180]	; 0x49c
 800103c:	609d      	str	r5, [r3, #8]
 800103e:	60dc      	str	r4, [r3, #12]
 8001040:	4a1c      	ldr	r2, [pc, #112]	; (80010b4 <main+0xd0>)
 8001042:	2300      	movs	r3, #0
 8001044:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8001048:	bb21      	cbnz	r1, 8001094 <main+0xb0>
 800104a:	f503 71a0 	add.w	r1, r3, #320	; 0x140
 800104e:	4a1a      	ldr	r2, [pc, #104]	; (80010b8 <main+0xd4>)
 8001050:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8001054:	3364      	adds	r3, #100	; 0x64
 8001056:	6053      	str	r3, [r2, #4]
 8001058:	4918      	ldr	r1, [pc, #96]	; (80010bc <main+0xd8>)
 800105a:	4819      	ldr	r0, [pc, #100]	; (80010c0 <main+0xdc>)
 800105c:	f003 fe9e 	bl	8004d9c <mbed::CAN::frequency(int)>
 8001060:	4b18      	ldr	r3, [pc, #96]	; (80010c4 <main+0xe0>)
 8001062:	9300      	str	r3, [sp, #0]
 8001064:	2200      	movs	r2, #0
 8001066:	4b18      	ldr	r3, [pc, #96]	; (80010c8 <main+0xe4>)
 8001068:	4815      	ldr	r0, [pc, #84]	; (80010c0 <main+0xdc>)
 800106a:	9303      	str	r3, [sp, #12]
 800106c:	4669      	mov	r1, sp
 800106e:	f003 ff59 	bl	8004f24 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>
 8001072:	9b03      	ldr	r3, [sp, #12]
 8001074:	b113      	cbz	r3, 800107c <main+0x98>
 8001076:	689b      	ldr	r3, [r3, #8]
 8001078:	4668      	mov	r0, sp
 800107a:	4798      	blx	r3
 800107c:	4c08      	ldr	r4, [pc, #32]	; (80010a0 <main+0xbc>)
 800107e:	4620      	mov	r0, r4
 8001080:	f7ff fea0 	bl	8000dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001084:	200a      	movs	r0, #10
 8001086:	f004 f871 	bl	800516c <wait_ms>
 800108a:	e7f8      	b.n	800107e <main+0x9a>
 800108c:	3501      	adds	r5, #1
 800108e:	2d19      	cmp	r5, #25
 8001090:	d1cb      	bne.n	800102a <main+0x46>
 8001092:	e7d5      	b.n	8001040 <main+0x5c>
 8001094:	3301      	adds	r3, #1
 8001096:	2b19      	cmp	r3, #25
 8001098:	d1d4      	bne.n	8001044 <main+0x60>
 800109a:	e7dd      	b.n	8001058 <main+0x74>
 800109c:	200003a8 	.word	0x200003a8
 80010a0:	200003c4 	.word	0x200003c4
 80010a4:	200002f8 	.word	0x200002f8
 80010a8:	20000324 	.word	0x20000324
 80010ac:	20000978 	.word	0x20000978
 80010b0:	20000394 	.word	0x20000394
 80010b4:	200008c0 	.word	0x200008c0
 80010b8:	20000350 	.word	0x20000350
 80010bc:	000f4240 	.word	0x000f4240
 80010c0:	20000244 	.word	0x20000244
 80010c4:	080004b5 	.word	0x080004b5
 80010c8:	0800654c 	.word	0x0800654c

080010cc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 80010cc:	b510      	push	{r4, lr}
 80010ce:	4b04      	ldr	r3, [pc, #16]	; (80010e0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 80010d0:	4604      	mov	r4, r0
 80010d2:	f840 3b04 	str.w	r3, [r0], #4
 80010d6:	f000 f879 	bl	80011cc <BufferedSerial::~BufferedSerial()>
 80010da:	4620      	mov	r0, r4
 80010dc:	bd10      	pop	{r4, pc}
 80010de:	bf00      	nop
 80010e0:	08006510 	.word	0x08006510

080010e4 <_start>:
 80010e4:	4807      	ldr	r0, [pc, #28]	; (8001104 <_start+0x20>)
 80010e6:	4a08      	ldr	r2, [pc, #32]	; (8001108 <_start+0x24>)
 80010e8:	b508      	push	{r3, lr}
 80010ea:	1a12      	subs	r2, r2, r0
 80010ec:	2100      	movs	r1, #0
 80010ee:	f004 fcb4 	bl	8005a5a <memset>
 80010f2:	f004 f8fb 	bl	80052ec <software_init_hook>
 80010f6:	f004 fc07 	bl	8005908 <__libc_init_array>
 80010fa:	f004 f8fe 	bl	80052fa <__wrap_main>
 80010fe:	f004 f939 	bl	8005374 <__wrap_exit>
 8001102:	bf00      	nop
 8001104:	20000228 	.word	0x20000228
 8001108:	20001eec 	.word	0x20001eec

0800110c <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 800110c:	b530      	push	{r4, r5, lr}
 800110e:	6802      	ldr	r2, [r0, #0]
 8001110:	680d      	ldr	r5, [r1, #0]
 8001112:	4c04      	ldr	r4, [pc, #16]	; (8001124 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001114:	fbb5 f3f4 	udiv	r3, r5, r4
 8001118:	441a      	add	r2, r3
 800111a:	fb04 5313 	mls	r3, r4, r3, r5
 800111e:	6002      	str	r2, [r0, #0]
 8001120:	600b      	str	r3, [r1, #0]
 8001122:	bd30      	pop	{r4, r5, pc}
 8001124:	3b9aca00 	.word	0x3b9aca00

08001128 <BufferedSerial::readable()>:
 8001128:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800112a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800112c:	1a10      	subs	r0, r2, r0
 800112e:	bf18      	it	ne
 8001130:	2001      	movne	r0, #1
 8001132:	4770      	bx	lr

08001134 <BufferedSerial::writeable()>:
 8001134:	2001      	movs	r0, #1
 8001136:	4770      	bx	lr

08001138 <BufferedSerial::getc()>:
 8001138:	b510      	push	{r4, lr}
 800113a:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800113c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800113e:	4603      	mov	r3, r0
 8001140:	1c50      	adds	r0, r2, #1
 8001142:	6558      	str	r0, [r3, #84]	; 0x54
 8001144:	5c88      	ldrb	r0, [r1, r2]
 8001146:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8001148:	6d5c      	ldr	r4, [r3, #84]	; 0x54
 800114a:	3a01      	subs	r2, #1
 800114c:	fbb4 f1f2 	udiv	r1, r4, r2
 8001150:	fb02 4211 	mls	r2, r2, r1, r4
 8001154:	655a      	str	r2, [r3, #84]	; 0x54
 8001156:	bd10      	pop	{r4, pc}

08001158 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001158:	4603      	mov	r3, r0
 800115a:	b110      	cbz	r0, 8001162 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 800115c:	c907      	ldmia	r1, {r0, r1, r2}
 800115e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001162:	4770      	bx	lr

08001164 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001164:	4770      	bx	lr

08001166 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001166:	6842      	ldr	r2, [r0, #4]
 8001168:	6881      	ldr	r1, [r0, #8]
 800116a:	6803      	ldr	r3, [r0, #0]
 800116c:	f012 0f01 	tst.w	r2, #1
 8001170:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001174:	bf1c      	itt	ne
 8001176:	5888      	ldrne	r0, [r1, r2]
 8001178:	58c3      	ldrne	r3, [r0, r3]
 800117a:	1888      	adds	r0, r1, r2
 800117c:	4718      	bx	r3

0800117e <mbed::Callback<void ()>::~Callback()>:
 800117e:	68c3      	ldr	r3, [r0, #12]
 8001180:	b510      	push	{r4, lr}
 8001182:	4604      	mov	r4, r0
 8001184:	b10b      	cbz	r3, 800118a <mbed::Callback<void ()>::~Callback()+0xc>
 8001186:	689b      	ldr	r3, [r3, #8]
 8001188:	4798      	blx	r3
 800118a:	4620      	mov	r0, r4
 800118c:	bd10      	pop	{r4, pc}
	...

08001190 <mbed::SerialBase::~SerialBase()>:
 8001190:	b570      	push	{r4, r5, r6, lr}
 8001192:	4605      	mov	r5, r0
 8001194:	4b07      	ldr	r3, [pc, #28]	; (80011b4 <mbed::SerialBase::~SerialBase()+0x24>)
 8001196:	f845 3b28 	str.w	r3, [r5], #40
 800119a:	4606      	mov	r6, r0
 800119c:	b145      	cbz	r5, 80011b0 <mbed::SerialBase::~SerialBase()+0x20>
 800119e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80011a2:	42ac      	cmp	r4, r5
 80011a4:	d004      	beq.n	80011b0 <mbed::SerialBase::~SerialBase()+0x20>
 80011a6:	3c10      	subs	r4, #16
 80011a8:	4620      	mov	r0, r4
 80011aa:	f7ff ffe8 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80011ae:	e7f8      	b.n	80011a2 <mbed::SerialBase::~SerialBase()+0x12>
 80011b0:	4630      	mov	r0, r6
 80011b2:	bd70      	pop	{r4, r5, r6, pc}
 80011b4:	08006b70 	.word	0x08006b70

080011b8 <mbed::SerialBase::~SerialBase()>:
 80011b8:	b510      	push	{r4, lr}
 80011ba:	4604      	mov	r4, r0
 80011bc:	f7ff ffe8 	bl	8001190 <mbed::SerialBase::~SerialBase()>
 80011c0:	4620      	mov	r0, r4
 80011c2:	f004 f8f3 	bl	80053ac <operator delete(void*)>
 80011c6:	4620      	mov	r0, r4
 80011c8:	bd10      	pop	{r4, pc}
	...

080011cc <BufferedSerial::~BufferedSerial()>:
 80011cc:	b530      	push	{r4, r5, lr}
 80011ce:	4b13      	ldr	r3, [pc, #76]	; (800121c <BufferedSerial::~BufferedSerial()+0x50>)
 80011d0:	6003      	str	r3, [r0, #0]
 80011d2:	b085      	sub	sp, #20
 80011d4:	2500      	movs	r5, #0
 80011d6:	462a      	mov	r2, r5
 80011d8:	4669      	mov	r1, sp
 80011da:	4604      	mov	r4, r0
 80011dc:	9503      	str	r5, [sp, #12]
 80011de:	f003 ff35 	bl	800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011e2:	4668      	mov	r0, sp
 80011e4:	f7ff ffcb 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80011e8:	2201      	movs	r2, #1
 80011ea:	4669      	mov	r1, sp
 80011ec:	4620      	mov	r0, r4
 80011ee:	9503      	str	r5, [sp, #12]
 80011f0:	f003 ff2c 	bl	800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011f4:	4668      	mov	r0, sp
 80011f6:	f7ff ffc2 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80011fa:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80011fe:	f000 f945 	bl	800148c <Buffer<char>::~Buffer()>
 8001202:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8001206:	f000 f941 	bl	800148c <Buffer<char>::~Buffer()>
 800120a:	4b05      	ldr	r3, [pc, #20]	; (8001220 <BufferedSerial::~BufferedSerial()+0x54>)
 800120c:	6023      	str	r3, [r4, #0]
 800120e:	4620      	mov	r0, r4
 8001210:	f7ff ffbe 	bl	8001190 <mbed::SerialBase::~SerialBase()>
 8001214:	4620      	mov	r0, r4
 8001216:	b005      	add	sp, #20
 8001218:	bd30      	pop	{r4, r5, pc}
 800121a:	bf00      	nop
 800121c:	080067f4 	.word	0x080067f4
 8001220:	08006b40 	.word	0x08006b40

08001224 <BufferedSerial::~BufferedSerial()>:
 8001224:	b510      	push	{r4, lr}
 8001226:	4604      	mov	r4, r0
 8001228:	f7ff ffd0 	bl	80011cc <BufferedSerial::~BufferedSerial()>
 800122c:	4620      	mov	r0, r4
 800122e:	f004 f8bd 	bl	80053ac <operator delete(void*)>
 8001232:	4620      	mov	r0, r4
 8001234:	bd10      	pop	{r4, pc}

08001236 <BufferedSerial::txIrq()>:
 8001236:	b530      	push	{r4, r5, lr}
 8001238:	4604      	mov	r4, r0
 800123a:	b085      	sub	sp, #20
 800123c:	1d05      	adds	r5, r0, #4
 800123e:	4628      	mov	r0, r5
 8001240:	f002 fd24 	bl	8003c8c <serial_writable>
 8001244:	b1f0      	cbz	r0, 8001284 <BufferedSerial::txIrq()+0x4e>
 8001246:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8001248:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800124a:	429a      	cmp	r2, r3
 800124c:	d010      	beq.n	8001270 <BufferedSerial::txIrq()+0x3a>
 800124e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001250:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001252:	1c59      	adds	r1, r3, #1
 8001254:	6661      	str	r1, [r4, #100]	; 0x64
 8001256:	5cd1      	ldrb	r1, [r2, r3]
 8001258:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 800125a:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800125c:	3b01      	subs	r3, #1
 800125e:	fbb0 f2f3 	udiv	r2, r0, r3
 8001262:	fb03 0312 	mls	r3, r3, r2, r0
 8001266:	6663      	str	r3, [r4, #100]	; 0x64
 8001268:	4628      	mov	r0, r5
 800126a:	f002 fd1b 	bl	8003ca4 <serial_putc>
 800126e:	e7e6      	b.n	800123e <BufferedSerial::txIrq()+0x8>
 8001270:	2300      	movs	r3, #0
 8001272:	4620      	mov	r0, r4
 8001274:	2201      	movs	r2, #1
 8001276:	4669      	mov	r1, sp
 8001278:	9303      	str	r3, [sp, #12]
 800127a:	f003 fee7 	bl	800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800127e:	4668      	mov	r0, sp
 8001280:	f7ff ff7d 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8001284:	b005      	add	sp, #20
 8001286:	bd30      	pop	{r4, r5, pc}

08001288 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001288:	b510      	push	{r4, lr}
 800128a:	b086      	sub	sp, #24
 800128c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001290:	9b01      	ldr	r3, [sp, #4]
 8001292:	9202      	str	r2, [sp, #8]
 8001294:	9303      	str	r3, [sp, #12]
 8001296:	9104      	str	r1, [sp, #16]
 8001298:	4b05      	ldr	r3, [pc, #20]	; (80012b0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 800129a:	f89d 2020 	ldrb.w	r2, [sp, #32]
 800129e:	9305      	str	r3, [sp, #20]
 80012a0:	a902      	add	r1, sp, #8
 80012a2:	f003 fed3 	bl	800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80012a6:	a802      	add	r0, sp, #8
 80012a8:	f7ff ff69 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80012ac:	b006      	add	sp, #24
 80012ae:	bd10      	pop	{r4, pc}
 80012b0:	08006768 	.word	0x08006768

080012b4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80012b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80012b6:	4604      	mov	r4, r0
 80012b8:	461d      	mov	r5, r3
 80012ba:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80012be:	9e08      	ldr	r6, [sp, #32]
 80012c0:	f003 fd52 	bl	8004d68 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 80012c4:	4620      	mov	r0, r4
 80012c6:	4b0e      	ldr	r3, [pc, #56]	; (8001300 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
 80012c8:	f840 3b4c 	str.w	r3, [r0], #76
 80012cc:	4629      	mov	r1, r5
 80012ce:	f000 f8ec 	bl	80014aa <Buffer<char>::Buffer(unsigned long)>
 80012d2:	fb06 f105 	mul.w	r1, r6, r5
 80012d6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80012da:	f000 f8e6 	bl	80014aa <Buffer<char>::Buffer(unsigned long)>
 80012de:	4b09      	ldr	r3, [pc, #36]	; (8001304 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 80012e0:	9302      	str	r3, [sp, #8]
 80012e2:	2300      	movs	r3, #0
 80012e4:	9303      	str	r3, [sp, #12]
 80012e6:	9300      	str	r3, [sp, #0]
 80012e8:	ab04      	add	r3, sp, #16
 80012ea:	4620      	mov	r0, r4
 80012ec:	e913 000c 	ldmdb	r3, {r2, r3}
 80012f0:	4621      	mov	r1, r4
 80012f2:	f7ff ffc9 	bl	8001288 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80012f6:	4620      	mov	r0, r4
 80012f8:	66e5      	str	r5, [r4, #108]	; 0x6c
 80012fa:	6726      	str	r6, [r4, #112]	; 0x70
 80012fc:	b004      	add	sp, #16
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	080067f4 	.word	0x080067f4
 8001304:	0800136f 	.word	0x0800136f

08001308 <BufferedSerial::prime()>:
 8001308:	b570      	push	{r4, r5, r6, lr}
 800130a:	4604      	mov	r4, r0
 800130c:	b086      	sub	sp, #24
 800130e:	3004      	adds	r0, #4
 8001310:	f002 fcbc 	bl	8003c8c <serial_writable>
 8001314:	b1c0      	cbz	r0, 8001348 <BufferedSerial::prime()+0x40>
 8001316:	ad02      	add	r5, sp, #8
 8001318:	2201      	movs	r2, #1
 800131a:	4629      	mov	r1, r5
 800131c:	2600      	movs	r6, #0
 800131e:	4620      	mov	r0, r4
 8001320:	9605      	str	r6, [sp, #20]
 8001322:	f003 fe93 	bl	800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001326:	4628      	mov	r0, r5
 8001328:	f7ff ff29 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 800132c:	4620      	mov	r0, r4
 800132e:	f7ff ff82 	bl	8001236 <BufferedSerial::txIrq()>
 8001332:	4b06      	ldr	r3, [pc, #24]	; (800134c <BufferedSerial::prime()+0x44>)
 8001334:	9302      	str	r3, [sp, #8]
 8001336:	2301      	movs	r3, #1
 8001338:	9603      	str	r6, [sp, #12]
 800133a:	9300      	str	r3, [sp, #0]
 800133c:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001340:	4621      	mov	r1, r4
 8001342:	4620      	mov	r0, r4
 8001344:	f7ff ffa0 	bl	8001288 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001348:	b006      	add	sp, #24
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	08001237 	.word	0x08001237

08001350 <Buffer<char>::put(char)>:
 8001350:	6843      	ldr	r3, [r0, #4]
 8001352:	6802      	ldr	r2, [r0, #0]
 8001354:	b510      	push	{r4, lr}
 8001356:	1c5c      	adds	r4, r3, #1
 8001358:	6044      	str	r4, [r0, #4]
 800135a:	54d1      	strb	r1, [r2, r3]
 800135c:	68c3      	ldr	r3, [r0, #12]
 800135e:	6841      	ldr	r1, [r0, #4]
 8001360:	3b01      	subs	r3, #1
 8001362:	fbb1 f2f3 	udiv	r2, r1, r3
 8001366:	fb03 1312 	mls	r3, r3, r2, r1
 800136a:	6043      	str	r3, [r0, #4]
 800136c:	bd10      	pop	{r4, pc}

0800136e <BufferedSerial::rxIrq()>:
 800136e:	b538      	push	{r3, r4, r5, lr}
 8001370:	1d05      	adds	r5, r0, #4
 8001372:	4604      	mov	r4, r0
 8001374:	4628      	mov	r0, r5
 8001376:	f002 fc67 	bl	8003c48 <serial_readable>
 800137a:	b138      	cbz	r0, 800138c <BufferedSerial::rxIrq()+0x1e>
 800137c:	4628      	mov	r0, r5
 800137e:	f002 fc6f 	bl	8003c60 <serial_getc>
 8001382:	b2c1      	uxtb	r1, r0
 8001384:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8001388:	f7ff ffe2 	bl	8001350 <Buffer<char>::put(char)>
 800138c:	bd38      	pop	{r3, r4, r5, pc}

0800138e <BufferedSerial::putc(int)>:
 800138e:	b538      	push	{r3, r4, r5, lr}
 8001390:	4605      	mov	r5, r0
 8001392:	460c      	mov	r4, r1
 8001394:	305c      	adds	r0, #92	; 0x5c
 8001396:	b2c9      	uxtb	r1, r1
 8001398:	f7ff ffda 	bl	8001350 <Buffer<char>::put(char)>
 800139c:	4628      	mov	r0, r5
 800139e:	f7ff ffb3 	bl	8001308 <BufferedSerial::prime()>
 80013a2:	4620      	mov	r0, r4
 80013a4:	bd38      	pop	{r3, r4, r5, pc}

080013a6 <BufferedSerial::puts(char const*)>:
 80013a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013aa:	4607      	mov	r7, r0
 80013ac:	460c      	mov	r4, r1
 80013ae:	b1b1      	cbz	r1, 80013de <BufferedSerial::puts(char const*)+0x38>
 80013b0:	460d      	mov	r5, r1
 80013b2:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 80013b6:	462e      	mov	r6, r5
 80013b8:	f816 1b01 	ldrb.w	r1, [r6], #1
 80013bc:	b121      	cbz	r1, 80013c8 <BufferedSerial::puts(char const*)+0x22>
 80013be:	4640      	mov	r0, r8
 80013c0:	f7ff ffc6 	bl	8001350 <Buffer<char>::put(char)>
 80013c4:	4635      	mov	r5, r6
 80013c6:	e7f6      	b.n	80013b6 <BufferedSerial::puts(char const*)+0x10>
 80013c8:	210a      	movs	r1, #10
 80013ca:	4640      	mov	r0, r8
 80013cc:	f7ff ffc0 	bl	8001350 <Buffer<char>::put(char)>
 80013d0:	1b2c      	subs	r4, r5, r4
 80013d2:	4638      	mov	r0, r7
 80013d4:	f7ff ff98 	bl	8001308 <BufferedSerial::prime()>
 80013d8:	1c60      	adds	r0, r4, #1
 80013da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013de:	4608      	mov	r0, r1
 80013e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080013e4 <BufferedSerial::write(void const*, unsigned int)>:
 80013e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013e8:	4607      	mov	r7, r0
 80013ea:	460d      	mov	r5, r1
 80013ec:	b191      	cbz	r1, 8001414 <BufferedSerial::write(void const*, unsigned int)+0x30>
 80013ee:	b1a2      	cbz	r2, 800141a <BufferedSerial::write(void const*, unsigned int)+0x36>
 80013f0:	188c      	adds	r4, r1, r2
 80013f2:	460e      	mov	r6, r1
 80013f4:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 80013f8:	42b4      	cmp	r4, r6
 80013fa:	d005      	beq.n	8001408 <BufferedSerial::write(void const*, unsigned int)+0x24>
 80013fc:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001400:	4640      	mov	r0, r8
 8001402:	f7ff ffa5 	bl	8001350 <Buffer<char>::put(char)>
 8001406:	e7f7      	b.n	80013f8 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001408:	4638      	mov	r0, r7
 800140a:	f7ff ff7d 	bl	8001308 <BufferedSerial::prime()>
 800140e:	1b60      	subs	r0, r4, r5
 8001410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001414:	4608      	mov	r0, r1
 8001416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800141a:	4610      	mov	r0, r2
 800141c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001420 <BufferedSerial::printf(char const*, ...)>:
 8001420:	b40e      	push	{r1, r2, r3}
 8001422:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001426:	b085      	sub	sp, #20
 8001428:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 800142a:	af02      	add	r7, sp, #8
 800142c:	1dd3      	adds	r3, r2, #7
 800142e:	f023 0307 	bic.w	r3, r3, #7
 8001432:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001436:	ebad 0d03 	sub.w	sp, sp, r3
 800143a:	f854 8b04 	ldr.w	r8, [r4], #4
 800143e:	ae02      	add	r6, sp, #8
 8001440:	4605      	mov	r5, r0
 8001442:	2100      	movs	r1, #0
 8001444:	4630      	mov	r0, r6
 8001446:	f004 fb08 	bl	8005a5a <memset>
 800144a:	4622      	mov	r2, r4
 800144c:	4641      	mov	r1, r8
 800144e:	4630      	mov	r0, r6
 8001450:	607c      	str	r4, [r7, #4]
 8001452:	f004 fdef 	bl	8006034 <vsiprintf>
 8001456:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8001458:	4283      	cmp	r3, r0
 800145a:	4602      	mov	r2, r0
 800145c:	d20c      	bcs.n	8001478 <BufferedSerial::printf(char const*, ...)+0x58>
 800145e:	9000      	str	r0, [sp, #0]
 8001460:	225d      	movs	r2, #93	; 0x5d
 8001462:	4808      	ldr	r0, [pc, #32]	; (8001484 <BufferedSerial::printf(char const*, ...)+0x64>)
 8001464:	4908      	ldr	r1, [pc, #32]	; (8001488 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001466:	f000 fa67 	bl	8001938 <error>
 800146a:	2000      	movs	r0, #0
 800146c:	370c      	adds	r7, #12
 800146e:	46bd      	mov	sp, r7
 8001470:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001474:	b003      	add	sp, #12
 8001476:	4770      	bx	lr
 8001478:	4631      	mov	r1, r6
 800147a:	4628      	mov	r0, r5
 800147c:	f7ff ffb2 	bl	80013e4 <BufferedSerial::write(void const*, unsigned int)>
 8001480:	e7f4      	b.n	800146c <BufferedSerial::printf(char const*, ...)+0x4c>
 8001482:	bf00      	nop
 8001484:	080067b0 	.word	0x080067b0
 8001488:	08006774 	.word	0x08006774

0800148c <Buffer<char>::~Buffer()>:
 800148c:	b510      	push	{r4, lr}
 800148e:	4604      	mov	r4, r0
 8001490:	6800      	ldr	r0, [r0, #0]
 8001492:	b108      	cbz	r0, 8001498 <Buffer<char>::~Buffer()+0xc>
 8001494:	f003 ff86 	bl	80053a4 <operator delete[](void*)>
 8001498:	4620      	mov	r0, r4
 800149a:	bd10      	pop	{r4, pc}

0800149c <Buffer<char>::clear()>:
 800149c:	2100      	movs	r1, #0
 800149e:	6041      	str	r1, [r0, #4]
 80014a0:	68c2      	ldr	r2, [r0, #12]
 80014a2:	6081      	str	r1, [r0, #8]
 80014a4:	6800      	ldr	r0, [r0, #0]
 80014a6:	f004 bad8 	b.w	8005a5a <memset>

080014aa <Buffer<char>::Buffer(unsigned long)>:
 80014aa:	b538      	push	{r3, r4, r5, lr}
 80014ac:	4604      	mov	r4, r0
 80014ae:	4608      	mov	r0, r1
 80014b0:	460d      	mov	r5, r1
 80014b2:	f003 ff6b 	bl	800538c <operator new[](unsigned int)>
 80014b6:	60e5      	str	r5, [r4, #12]
 80014b8:	6020      	str	r0, [r4, #0]
 80014ba:	4620      	mov	r0, r4
 80014bc:	f7ff ffee 	bl	800149c <Buffer<char>::clear()>
 80014c0:	4620      	mov	r0, r4
 80014c2:	bd38      	pop	{r3, r4, r5, pc}

080014c4 <CAN_controller::enter_control_mode(mbed::CAN*, unsigned char)>:
 80014c4:	b570      	push	{r4, r5, r6, lr}
 80014c6:	b086      	sub	sp, #24
 80014c8:	ac02      	add	r4, sp, #8
 80014ca:	4605      	mov	r5, r0
 80014cc:	4620      	mov	r0, r4
 80014ce:	460e      	mov	r6, r1
 80014d0:	f7fe ffc5 	bl	800045e <mbed::CANMessage::CANMessage()>
 80014d4:	2308      	movs	r3, #8
 80014d6:	f88d 3014 	strb.w	r3, [sp, #20]
 80014da:	23ff      	movs	r3, #255	; 0xff
 80014dc:	f88d 300c 	strb.w	r3, [sp, #12]
 80014e0:	f88d 300d 	strb.w	r3, [sp, #13]
 80014e4:	f88d 300e 	strb.w	r3, [sp, #14]
 80014e8:	f88d 300f 	strb.w	r3, [sp, #15]
 80014ec:	f88d 3010 	strb.w	r3, [sp, #16]
 80014f0:	f88d 3011 	strb.w	r3, [sp, #17]
 80014f4:	f88d 3012 	strb.w	r3, [sp, #18]
 80014f8:	23fc      	movs	r3, #252	; 0xfc
 80014fa:	f88d 3013 	strb.w	r3, [sp, #19]
 80014fe:	9b05      	ldr	r3, [sp, #20]
 8001500:	9602      	str	r6, [sp, #8]
 8001502:	9300      	str	r3, [sp, #0]
 8001504:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8001508:	4628      	mov	r0, r5
 800150a:	f003 fc5a 	bl	8004dc2 <mbed::CAN::write(mbed::CANMessage)>
 800150e:	b006      	add	sp, #24
 8001510:	bd70      	pop	{r4, r5, r6, pc}

08001512 <CAN_controller::exit_control_mode(mbed::CAN*, unsigned char)>:
 8001512:	b570      	push	{r4, r5, r6, lr}
 8001514:	b086      	sub	sp, #24
 8001516:	ac02      	add	r4, sp, #8
 8001518:	4605      	mov	r5, r0
 800151a:	4620      	mov	r0, r4
 800151c:	460e      	mov	r6, r1
 800151e:	f7fe ff9e 	bl	800045e <mbed::CANMessage::CANMessage()>
 8001522:	2308      	movs	r3, #8
 8001524:	f88d 3014 	strb.w	r3, [sp, #20]
 8001528:	23ff      	movs	r3, #255	; 0xff
 800152a:	f88d 300c 	strb.w	r3, [sp, #12]
 800152e:	f88d 300d 	strb.w	r3, [sp, #13]
 8001532:	f88d 300e 	strb.w	r3, [sp, #14]
 8001536:	f88d 300f 	strb.w	r3, [sp, #15]
 800153a:	f88d 3010 	strb.w	r3, [sp, #16]
 800153e:	f88d 3011 	strb.w	r3, [sp, #17]
 8001542:	f88d 3012 	strb.w	r3, [sp, #18]
 8001546:	23fd      	movs	r3, #253	; 0xfd
 8001548:	f88d 3013 	strb.w	r3, [sp, #19]
 800154c:	9b05      	ldr	r3, [sp, #20]
 800154e:	9602      	str	r6, [sp, #8]
 8001550:	9300      	str	r3, [sp, #0]
 8001552:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8001556:	4628      	mov	r0, r5
 8001558:	f003 fc33 	bl	8004dc2 <mbed::CAN::write(mbed::CANMessage)>
 800155c:	b006      	add	sp, #24
 800155e:	bd70      	pop	{r4, r5, r6, pc}

08001560 <CAN_controller::set_position_to_zero(mbed::CAN*, unsigned char)>:
 8001560:	b570      	push	{r4, r5, r6, lr}
 8001562:	b086      	sub	sp, #24
 8001564:	ac02      	add	r4, sp, #8
 8001566:	4605      	mov	r5, r0
 8001568:	4620      	mov	r0, r4
 800156a:	460e      	mov	r6, r1
 800156c:	f7fe ff77 	bl	800045e <mbed::CANMessage::CANMessage()>
 8001570:	2308      	movs	r3, #8
 8001572:	f88d 3014 	strb.w	r3, [sp, #20]
 8001576:	23ff      	movs	r3, #255	; 0xff
 8001578:	f88d 300c 	strb.w	r3, [sp, #12]
 800157c:	f88d 300d 	strb.w	r3, [sp, #13]
 8001580:	f88d 300e 	strb.w	r3, [sp, #14]
 8001584:	f88d 300f 	strb.w	r3, [sp, #15]
 8001588:	f88d 3010 	strb.w	r3, [sp, #16]
 800158c:	f88d 3011 	strb.w	r3, [sp, #17]
 8001590:	f88d 3012 	strb.w	r3, [sp, #18]
 8001594:	23fe      	movs	r3, #254	; 0xfe
 8001596:	f88d 3013 	strb.w	r3, [sp, #19]
 800159a:	9b05      	ldr	r3, [sp, #20]
 800159c:	9602      	str	r6, [sp, #8]
 800159e:	9300      	str	r3, [sp, #0]
 80015a0:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80015a4:	4628      	mov	r0, r5
 80015a6:	f003 fc0c 	bl	8004dc2 <mbed::CAN::write(mbed::CANMessage)>
 80015aa:	b006      	add	sp, #24
 80015ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080015b0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)>:
 80015b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80015b4:	4f33      	ldr	r7, [pc, #204]	; (8001684 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd4>)
 80015b6:	4604      	mov	r4, r0
 80015b8:	4638      	mov	r0, r7
 80015ba:	461e      	mov	r6, r3
 80015bc:	4615      	mov	r5, r2
 80015be:	f004 fee1 	bl	8006384 <fmaxf>
 80015c2:	4a31      	ldr	r2, [pc, #196]	; (8001688 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xd8>)
 80015c4:	9201      	str	r2, [sp, #4]
 80015c6:	4611      	mov	r1, r2
 80015c8:	f004 fefa 	bl	80063c0 <fminf>
 80015cc:	4629      	mov	r1, r5
 80015ce:	4683      	mov	r11, r0
 80015d0:	482e      	ldr	r0, [pc, #184]	; (800168c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 80015d2:	f004 fed7 	bl	8006384 <fmaxf>
 80015d6:	492e      	ldr	r1, [pc, #184]	; (8001690 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 80015d8:	f004 fef2 	bl	80063c0 <fminf>
 80015dc:	2500      	movs	r5, #0
 80015de:	4631      	mov	r1, r6
 80015e0:	4e2c      	ldr	r6, [pc, #176]	; (8001694 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe4>)
 80015e2:	4682      	mov	r10, r0
 80015e4:	4628      	mov	r0, r5
 80015e6:	f004 fecd 	bl	8006384 <fmaxf>
 80015ea:	4631      	mov	r1, r6
 80015ec:	f004 fee8 	bl	80063c0 <fminf>
 80015f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80015f2:	4681      	mov	r9, r0
 80015f4:	4628      	mov	r0, r5
 80015f6:	f004 fec5 	bl	8006384 <fmaxf>
 80015fa:	4927      	ldr	r1, [pc, #156]	; (8001698 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 80015fc:	f004 fee0 	bl	80063c0 <fminf>
 8001600:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001602:	4680      	mov	r8, r0
 8001604:	4825      	ldr	r0, [pc, #148]	; (800169c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 8001606:	f004 febd 	bl	8006384 <fmaxf>
 800160a:	4925      	ldr	r1, [pc, #148]	; (80016a0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 800160c:	f004 fed8 	bl	80063c0 <fminf>
 8001610:	9a01      	ldr	r2, [sp, #4]
 8001612:	9000      	str	r0, [sp, #0]
 8001614:	4639      	mov	r1, r7
 8001616:	2310      	movs	r3, #16
 8001618:	4658      	mov	r0, r11
 800161a:	f000 f885 	bl	8001728 <float_to_uint(float, float, float, int)>
 800161e:	230c      	movs	r3, #12
 8001620:	4607      	mov	r7, r0
 8001622:	4a1b      	ldr	r2, [pc, #108]	; (8001690 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe0>)
 8001624:	4919      	ldr	r1, [pc, #100]	; (800168c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xdc>)
 8001626:	4650      	mov	r0, r10
 8001628:	f000 f87e 	bl	8001728 <float_to_uint(float, float, float, int)>
 800162c:	4632      	mov	r2, r6
 800162e:	4682      	mov	r10, r0
 8001630:	4629      	mov	r1, r5
 8001632:	230c      	movs	r3, #12
 8001634:	4648      	mov	r0, r9
 8001636:	f000 f877 	bl	8001728 <float_to_uint(float, float, float, int)>
 800163a:	4629      	mov	r1, r5
 800163c:	4606      	mov	r6, r0
 800163e:	230c      	movs	r3, #12
 8001640:	4a15      	ldr	r2, [pc, #84]	; (8001698 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xe8>)
 8001642:	4640      	mov	r0, r8
 8001644:	f000 f870 	bl	8001728 <float_to_uint(float, float, float, int)>
 8001648:	230c      	movs	r3, #12
 800164a:	4605      	mov	r5, r0
 800164c:	4a14      	ldr	r2, [pc, #80]	; (80016a0 <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xf0>)
 800164e:	4913      	ldr	r1, [pc, #76]	; (800169c <CAN_controller::pack_cmd(mbed::CANMessage*, float, float, float, float, float)+0xec>)
 8001650:	9800      	ldr	r0, [sp, #0]
 8001652:	f000 f869 	bl	8001728 <float_to_uint(float, float, float, int)>
 8001656:	123b      	asrs	r3, r7, #8
 8001658:	7123      	strb	r3, [r4, #4]
 800165a:	ea4f 132a 	mov.w	r3, r10, asr #4
 800165e:	71a3      	strb	r3, [r4, #6]
 8001660:	1233      	asrs	r3, r6, #8
 8001662:	ea43 130a 	orr.w	r3, r3, r10, lsl #4
 8001666:	71e3      	strb	r3, [r4, #7]
 8001668:	112b      	asrs	r3, r5, #4
 800166a:	7263      	strb	r3, [r4, #9]
 800166c:	1203      	asrs	r3, r0, #8
 800166e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8001672:	72e0      	strb	r0, [r4, #11]
 8001674:	2001      	movs	r0, #1
 8001676:	7167      	strb	r7, [r4, #5]
 8001678:	7226      	strb	r6, [r4, #8]
 800167a:	72a3      	strb	r3, [r4, #10]
 800167c:	b003      	add	sp, #12
 800167e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8001682:	bf00      	nop
 8001684:	c2bf0000 	.word	0xc2bf0000
 8001688:	42bf0000 	.word	0x42bf0000
 800168c:	c1f00000 	.word	0xc1f00000
 8001690:	41f00000 	.word	0x41f00000
 8001694:	43fa0000 	.word	0x43fa0000
 8001698:	40a00000 	.word	0x40a00000
 800169c:	c1900000 	.word	0xc1900000
 80016a0:	41900000 	.word	0x41900000

080016a4 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)>:
 80016a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80016a6:	ac04      	add	r4, sp, #16
 80016a8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80016ac:	9a08      	ldr	r2, [sp, #32]
 80016ae:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80016b2:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80016b6:	7011      	strb	r1, [r2, #0]
 80016b8:	f89d 6005 	ldrb.w	r6, [sp, #5]
 80016bc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80016c0:	f89d 0006 	ldrb.w	r0, [sp, #6]
 80016c4:	4912      	ldr	r1, [pc, #72]	; (8001710 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x6c>)
 80016c6:	111d      	asrs	r5, r3, #4
 80016c8:	021c      	lsls	r4, r3, #8
 80016ca:	f89d 3009 	ldrb.w	r3, [sp, #9]
 80016ce:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
 80016d2:	ea45 1502 	orr.w	r5, r5, r2, lsl #4
 80016d6:	431c      	orrs	r4, r3
 80016d8:	4a0e      	ldr	r2, [pc, #56]	; (8001714 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x70>)
 80016da:	2310      	movs	r3, #16
 80016dc:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
 80016e0:	f000 f83d 	bl	800175e <uint_to_float(int, float, float, int)>
 80016e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80016e6:	4a0c      	ldr	r2, [pc, #48]	; (8001718 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x74>)
 80016e8:	6018      	str	r0, [r3, #0]
 80016ea:	490c      	ldr	r1, [pc, #48]	; (800171c <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x78>)
 80016ec:	230c      	movs	r3, #12
 80016ee:	4628      	mov	r0, r5
 80016f0:	f000 f835 	bl	800175e <uint_to_float(int, float, float, int)>
 80016f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80016f6:	4a0a      	ldr	r2, [pc, #40]	; (8001720 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x7c>)
 80016f8:	6018      	str	r0, [r3, #0]
 80016fa:	490a      	ldr	r1, [pc, #40]	; (8001724 <CAN_controller::unpack_reply(mbed::CANMessage, unsigned char*, float*, float*, float*)+0x80>)
 80016fc:	230c      	movs	r3, #12
 80016fe:	4620      	mov	r0, r4
 8001700:	f000 f82d 	bl	800175e <uint_to_float(int, float, float, int)>
 8001704:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001706:	6018      	str	r0, [r3, #0]
 8001708:	2001      	movs	r0, #1
 800170a:	b004      	add	sp, #16
 800170c:	bd70      	pop	{r4, r5, r6, pc}
 800170e:	bf00      	nop
 8001710:	c2bf0000 	.word	0xc2bf0000
 8001714:	42bf0000 	.word	0x42bf0000
 8001718:	41f00000 	.word	0x41f00000
 800171c:	c1f00000 	.word	0xc1f00000
 8001720:	41900000 	.word	0x41900000
 8001724:	c1900000 	.word	0xc1900000

08001728 <float_to_uint(float, float, float, int)>:
 8001728:	ee07 1a10 	vmov	s14, r1
 800172c:	2101      	movs	r1, #1
 800172e:	fa01 f303 	lsl.w	r3, r1, r3
 8001732:	3b01      	subs	r3, #1
 8001734:	ee07 3a90 	vmov	s15, r3
 8001738:	ee06 0a90 	vmov	s13, r0
 800173c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001740:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8001744:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001748:	ee06 2a90 	vmov	s13, r2
 800174c:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8001750:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001754:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8001758:	ee17 0a90 	vmov	r0, s15
 800175c:	4770      	bx	lr

0800175e <uint_to_float(int, float, float, int)>:
 800175e:	ee06 1a90 	vmov	s13, r1
 8001762:	ee07 2a90 	vmov	s15, r2
 8001766:	ee37 7ae6 	vsub.f32	s14, s15, s13
 800176a:	ee07 0a90 	vmov	s15, r0
 800176e:	2201      	movs	r2, #1
 8001770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001774:	fa02 f303 	lsl.w	r3, r2, r3
 8001778:	3b01      	subs	r3, #1
 800177a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800177e:	ee07 3a90 	vmov	s15, r3
 8001782:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001786:	ee87 6a27 	vdiv.f32	s12, s14, s15
 800178a:	ee76 7a26 	vadd.f32	s15, s12, s13
 800178e:	ee17 0a90 	vmov	r0, s15
 8001792:	4770      	bx	lr

08001794 <_gpio_init_out.part.1>:
 8001794:	b538      	push	{r3, r4, r5, lr}
 8001796:	4604      	mov	r4, r0
 8001798:	460d      	mov	r5, r1
 800179a:	6803      	ldr	r3, [r0, #0]
 800179c:	b15a      	cbz	r2, 80017b6 <_gpio_init_out.part.1+0x22>
 800179e:	6882      	ldr	r2, [r0, #8]
 80017a0:	6013      	str	r3, [r2, #0]
 80017a2:	4620      	mov	r0, r4
 80017a4:	2101      	movs	r1, #1
 80017a6:	f001 fcef 	bl	8003188 <gpio_dir>
 80017aa:	4629      	mov	r1, r5
 80017ac:	4620      	mov	r0, r4
 80017ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80017b2:	f001 bce5 	b.w	8003180 <gpio_mode>
 80017b6:	68c2      	ldr	r2, [r0, #12]
 80017b8:	e7f2      	b.n	80017a0 <_gpio_init_out.part.1+0xc>

080017ba <gpio_init_out_ex>:
 80017ba:	b570      	push	{r4, r5, r6, lr}
 80017bc:	460e      	mov	r6, r1
 80017be:	4604      	mov	r4, r0
 80017c0:	4615      	mov	r5, r2
 80017c2:	f001 fcbb 	bl	800313c <gpio_init>
 80017c6:	3601      	adds	r6, #1
 80017c8:	d006      	beq.n	80017d8 <gpio_init_out_ex+0x1e>
 80017ca:	462a      	mov	r2, r5
 80017cc:	4620      	mov	r0, r4
 80017ce:	2100      	movs	r1, #0
 80017d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80017d4:	f7ff bfde 	b.w	8001794 <_gpio_init_out.part.1>
 80017d8:	bd70      	pop	{r4, r5, r6, pc}

080017da <gpio_init_out>:
 80017da:	2200      	movs	r2, #0
 80017dc:	f7ff bfed 	b.w	80017ba <gpio_init_out_ex>

080017e0 <get_us_ticker_data>:
 80017e0:	4800      	ldr	r0, [pc, #0]	; (80017e4 <get_us_ticker_data+0x4>)
 80017e2:	4770      	bx	lr
 80017e4:	08006820 	.word	0x08006820

080017e8 <us_ticker_irq_handler>:
 80017e8:	4801      	ldr	r0, [pc, #4]	; (80017f0 <us_ticker_irq_handler+0x8>)
 80017ea:	f000 b803 	b.w	80017f4 <ticker_irq_handler>
 80017ee:	bf00      	nop
 80017f0:	08006820 	.word	0x08006820

080017f4 <ticker_irq_handler>:
 80017f4:	6803      	ldr	r3, [r0, #0]
 80017f6:	b570      	push	{r4, r5, r6, lr}
 80017f8:	68db      	ldr	r3, [r3, #12]
 80017fa:	4604      	mov	r4, r0
 80017fc:	4798      	blx	r3
 80017fe:	6863      	ldr	r3, [r4, #4]
 8001800:	685a      	ldr	r2, [r3, #4]
 8001802:	6823      	ldr	r3, [r4, #0]
 8001804:	b91a      	cbnz	r2, 800180e <ticker_irq_handler+0x1a>
 8001806:	689b      	ldr	r3, [r3, #8]
 8001808:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800180c:	4718      	bx	r3
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	6815      	ldr	r5, [r2, #0]
 8001812:	4798      	blx	r3
 8001814:	6863      	ldr	r3, [r4, #4]
 8001816:	1a28      	subs	r0, r5, r0
 8001818:	2800      	cmp	r0, #0
 800181a:	685a      	ldr	r2, [r3, #4]
 800181c:	dc07      	bgt.n	800182e <ticker_irq_handler+0x3a>
 800181e:	6891      	ldr	r1, [r2, #8]
 8001820:	6059      	str	r1, [r3, #4]
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	2b00      	cmp	r3, #0
 8001826:	d0ea      	beq.n	80017fe <ticker_irq_handler+0xa>
 8001828:	6850      	ldr	r0, [r2, #4]
 800182a:	4798      	blx	r3
 800182c:	e7e7      	b.n	80017fe <ticker_irq_handler+0xa>
 800182e:	6823      	ldr	r3, [r4, #0]
 8001830:	6810      	ldr	r0, [r2, #0]
 8001832:	691b      	ldr	r3, [r3, #16]
 8001834:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001838:	4718      	bx	r3

0800183a <ticker_read>:
 800183a:	6803      	ldr	r3, [r0, #0]
 800183c:	685b      	ldr	r3, [r3, #4]
 800183e:	4718      	bx	r3

08001840 <pinmap_pinout>:
 8001840:	b510      	push	{r4, lr}
 8001842:	4604      	mov	r4, r0
 8001844:	3001      	adds	r0, #1
 8001846:	d10d      	bne.n	8001864 <pinmap_pinout+0x24>
 8001848:	bd10      	pop	{r4, pc}
 800184a:	429c      	cmp	r4, r3
 800184c:	d109      	bne.n	8001862 <pinmap_pinout+0x22>
 800184e:	4620      	mov	r0, r4
 8001850:	6889      	ldr	r1, [r1, #8]
 8001852:	f001 ffa3 	bl	800379c <pin_function>
 8001856:	4620      	mov	r0, r4
 8001858:	2100      	movs	r1, #0
 800185a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800185e:	f002 b81f 	b.w	80038a0 <pin_mode>
 8001862:	310c      	adds	r1, #12
 8001864:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001868:	1c5a      	adds	r2, r3, #1
 800186a:	d1ee      	bne.n	800184a <pinmap_pinout+0xa>
 800186c:	4802      	ldr	r0, [pc, #8]	; (8001878 <pinmap_pinout+0x38>)
 800186e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001872:	f000 b861 	b.w	8001938 <error>
 8001876:	bf00      	nop
 8001878:	0800686d 	.word	0x0800686d

0800187c <pinmap_merge>:
 800187c:	4288      	cmp	r0, r1
 800187e:	b508      	push	{r3, lr}
 8001880:	d008      	beq.n	8001894 <pinmap_merge+0x18>
 8001882:	1c43      	adds	r3, r0, #1
 8001884:	d006      	beq.n	8001894 <pinmap_merge+0x18>
 8001886:	3101      	adds	r1, #1
 8001888:	d006      	beq.n	8001898 <pinmap_merge+0x1c>
 800188a:	4804      	ldr	r0, [pc, #16]	; (800189c <pinmap_merge+0x20>)
 800188c:	f000 f854 	bl	8001938 <error>
 8001890:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001894:	4608      	mov	r0, r1
 8001896:	bd08      	pop	{r3, pc}
 8001898:	4601      	mov	r1, r0
 800189a:	e7fb      	b.n	8001894 <pinmap_merge+0x18>
 800189c:	0800683c 	.word	0x0800683c

080018a0 <pinmap_find_peripheral>:
 80018a0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80018a4:	1c5a      	adds	r2, r3, #1
 80018a6:	d101      	bne.n	80018ac <pinmap_find_peripheral+0xc>
 80018a8:	4618      	mov	r0, r3
 80018aa:	4770      	bx	lr
 80018ac:	4283      	cmp	r3, r0
 80018ae:	d101      	bne.n	80018b4 <pinmap_find_peripheral+0x14>
 80018b0:	6848      	ldr	r0, [r1, #4]
 80018b2:	4770      	bx	lr
 80018b4:	310c      	adds	r1, #12
 80018b6:	e7f3      	b.n	80018a0 <pinmap_find_peripheral>

080018b8 <pinmap_peripheral>:
 80018b8:	1c42      	adds	r2, r0, #1
 80018ba:	b510      	push	{r4, lr}
 80018bc:	4604      	mov	r4, r0
 80018be:	d007      	beq.n	80018d0 <pinmap_peripheral+0x18>
 80018c0:	f7ff ffee 	bl	80018a0 <pinmap_find_peripheral>
 80018c4:	1c43      	adds	r3, r0, #1
 80018c6:	4604      	mov	r4, r0
 80018c8:	d102      	bne.n	80018d0 <pinmap_peripheral+0x18>
 80018ca:	4802      	ldr	r0, [pc, #8]	; (80018d4 <pinmap_peripheral+0x1c>)
 80018cc:	f000 f834 	bl	8001938 <error>
 80018d0:	4620      	mov	r0, r4
 80018d2:	bd10      	pop	{r4, pc}
 80018d4:	0800684d 	.word	0x0800684d

080018d8 <core_util_are_interrupts_enabled>:
 80018d8:	f3ef 8010 	mrs	r0, PRIMASK
 80018dc:	43c0      	mvns	r0, r0
 80018de:	f000 0001 	and.w	r0, r0, #1
 80018e2:	4770      	bx	lr

080018e4 <core_util_critical_section_enter>:
 80018e4:	b508      	push	{r3, lr}
 80018e6:	f7ff fff7 	bl	80018d8 <core_util_are_interrupts_enabled>
 80018ea:	b672      	cpsid	i
 80018ec:	4b06      	ldr	r3, [pc, #24]	; (8001908 <core_util_critical_section_enter+0x24>)
 80018ee:	681a      	ldr	r2, [r3, #0]
 80018f0:	b922      	cbnz	r2, 80018fc <core_util_critical_section_enter+0x18>
 80018f2:	f080 0001 	eor.w	r0, r0, #1
 80018f6:	4a05      	ldr	r2, [pc, #20]	; (800190c <core_util_critical_section_enter+0x28>)
 80018f8:	b2c0      	uxtb	r0, r0
 80018fa:	7010      	strb	r0, [r2, #0]
 80018fc:	681a      	ldr	r2, [r3, #0]
 80018fe:	681a      	ldr	r2, [r3, #0]
 8001900:	3201      	adds	r2, #1
 8001902:	601a      	str	r2, [r3, #0]
 8001904:	bd08      	pop	{r3, pc}
 8001906:	bf00      	nop
 8001908:	200009b0 	.word	0x200009b0
 800190c:	200009ac 	.word	0x200009ac

08001910 <core_util_critical_section_exit>:
 8001910:	b508      	push	{r3, lr}
 8001912:	4b07      	ldr	r3, [pc, #28]	; (8001930 <core_util_critical_section_exit+0x20>)
 8001914:	681a      	ldr	r2, [r3, #0]
 8001916:	b152      	cbz	r2, 800192e <core_util_critical_section_exit+0x1e>
 8001918:	f7ff ffde 	bl	80018d8 <core_util_are_interrupts_enabled>
 800191c:	681a      	ldr	r2, [r3, #0]
 800191e:	3a01      	subs	r2, #1
 8001920:	601a      	str	r2, [r3, #0]
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	b91b      	cbnz	r3, 800192e <core_util_critical_section_exit+0x1e>
 8001926:	4b03      	ldr	r3, [pc, #12]	; (8001934 <core_util_critical_section_exit+0x24>)
 8001928:	781b      	ldrb	r3, [r3, #0]
 800192a:	b903      	cbnz	r3, 800192e <core_util_critical_section_exit+0x1e>
 800192c:	b662      	cpsie	i
 800192e:	bd08      	pop	{r3, pc}
 8001930:	200009b0 	.word	0x200009b0
 8001934:	200009ac 	.word	0x200009ac

08001938 <error>:
 8001938:	b40f      	push	{r0, r1, r2, r3}
 800193a:	2001      	movs	r0, #1
 800193c:	b508      	push	{r3, lr}
 800193e:	f003 fd19 	bl	8005374 <__wrap_exit>

08001942 <mbed_die>:
 8001942:	b508      	push	{r3, lr}
 8001944:	f7ff ffce 	bl	80018e4 <core_util_critical_section_enter>
 8001948:	2096      	movs	r0, #150	; 0x96
 800194a:	f003 fc0f 	bl	800516c <wait_ms>
 800194e:	2096      	movs	r0, #150	; 0x96
 8001950:	f003 fc0c 	bl	800516c <wait_ms>
 8001954:	e7f8      	b.n	8001948 <mbed_die+0x6>

08001956 <default_idle_hook>:
 8001956:	f001 bc40 	b.w	80031da <hal_sleep>
	...

0800195c <rtos_idle_loop>:
 800195c:	b508      	push	{r3, lr}
 800195e:	4c02      	ldr	r4, [pc, #8]	; (8001968 <rtos_idle_loop+0xc>)
 8001960:	6823      	ldr	r3, [r4, #0]
 8001962:	4798      	blx	r3
 8001964:	e7fc      	b.n	8001960 <rtos_idle_loop+0x4>
 8001966:	bf00      	nop
 8001968:	2000018c 	.word	0x2000018c

0800196c <pre_main>:
 800196c:	b508      	push	{r3, lr}
 800196e:	480b      	ldr	r0, [pc, #44]	; (800199c <pre_main+0x30>)
 8001970:	f000 fdaa 	bl	80024c8 <osMutexCreate>
 8001974:	4b0a      	ldr	r3, [pc, #40]	; (80019a0 <pre_main+0x34>)
 8001976:	6018      	str	r0, [r3, #0]
 8001978:	480a      	ldr	r0, [pc, #40]	; (80019a4 <pre_main+0x38>)
 800197a:	f000 fda5 	bl	80024c8 <osMutexCreate>
 800197e:	4b0a      	ldr	r3, [pc, #40]	; (80019a8 <pre_main+0x3c>)
 8001980:	6018      	str	r0, [r3, #0]
 8001982:	480a      	ldr	r0, [pc, #40]	; (80019ac <pre_main+0x40>)
 8001984:	f000 fda0 	bl	80024c8 <osMutexCreate>
 8001988:	4b09      	ldr	r3, [pc, #36]	; (80019b0 <pre_main+0x44>)
 800198a:	6018      	str	r0, [r3, #0]
 800198c:	f003 ffbc 	bl	8005908 <__libc_init_array>
 8001990:	2100      	movs	r1, #0
 8001992:	4608      	mov	r0, r1
 8001994:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001998:	f003 bcaf 	b.w	80052fa <__wrap_main>
 800199c:	080068cc 	.word	0x080068cc
 80019a0:	200018f4 	.word	0x200018f4
 80019a4:	080068c8 	.word	0x080068c8
 80019a8:	200009bc 	.word	0x200009bc
 80019ac:	080068c4 	.word	0x080068c4
 80019b0:	200009b4 	.word	0x200009b4

080019b4 <os_idle_demon>:
 80019b4:	f7ff bfd2 	b.w	800195c <rtos_idle_loop>

080019b8 <os_error>:
 80019b8:	b510      	push	{r4, lr}
 80019ba:	4604      	mov	r4, r0
 80019bc:	f000 fce4 	bl	8002388 <svcThreadGetId>
 80019c0:	4621      	mov	r1, r4
 80019c2:	4602      	mov	r2, r0
 80019c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019c8:	4801      	ldr	r0, [pc, #4]	; (80019d0 <os_error+0x18>)
 80019ca:	f7ff bfb5 	b.w	8001938 <error>
 80019ce:	bf00      	nop
 80019d0:	0800688c 	.word	0x0800688c

080019d4 <sysThreadTerminate>:
 80019d4:	f003 bcec 	b.w	80053b0 <thread_terminate_hook>

080019d8 <set_stack_heap>:
 80019d8:	4a0b      	ldr	r2, [pc, #44]	; (8001a08 <set_stack_heap+0x30>)
 80019da:	4b0c      	ldr	r3, [pc, #48]	; (8001a0c <set_stack_heap+0x34>)
 80019dc:	480c      	ldr	r0, [pc, #48]	; (8001a10 <set_stack_heap+0x38>)
 80019de:	b430      	push	{r4, r5}
 80019e0:	601a      	str	r2, [r3, #0]
 80019e2:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 80019e6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80019ea:	f5b3 7fe0 	cmp.w	r3, #448	; 0x1c0
 80019ee:	4619      	mov	r1, r3
 80019f0:	bf28      	it	cs
 80019f2:	f44f 71e0 	movcs.w	r1, #448	; 0x1c0
 80019f6:	4d07      	ldr	r5, [pc, #28]	; (8001a14 <set_stack_heap+0x3c>)
 80019f8:	4c07      	ldr	r4, [pc, #28]	; (8001a18 <set_stack_heap+0x40>)
 80019fa:	6001      	str	r1, [r0, #0]
 80019fc:	1a5b      	subs	r3, r3, r1
 80019fe:	441a      	add	r2, r3
 8001a00:	602a      	str	r2, [r5, #0]
 8001a02:	6023      	str	r3, [r4, #0]
 8001a04:	bc30      	pop	{r4, r5}
 8001a06:	4770      	bx	lr
 8001a08:	20001eec 	.word	0x20001eec
 8001a0c:	20001630 	.word	0x20001630
 8001a10:	200009c0 	.word	0x200009c0
 8001a14:	200009c4 	.word	0x200009c4
 8001a18:	2000162c 	.word	0x2000162c

08001a1c <software_init_hook_rtos>:
 8001a1c:	f000 fe38 	bl	8002690 <osKernelInitialize>
 8001a20:	f7ff ffda 	bl	80019d8 <set_stack_heap>
 8001a24:	4803      	ldr	r0, [pc, #12]	; (8001a34 <software_init_hook_rtos+0x18>)
 8001a26:	2100      	movs	r1, #0
 8001a28:	f000 fdd6 	bl	80025d8 <osThreadCreate>
 8001a2c:	f000 fc2e 	bl	800228c <osKernelStart>
 8001a30:	e7fe      	b.n	8001a30 <software_init_hook_rtos+0x14>
 8001a32:	0000      	.short	0x0000
 8001a34:	20000190 	.word	0x20000190

08001a38 <__rtos_malloc_lock>:
 8001a38:	4b02      	ldr	r3, [pc, #8]	; (8001a44 <__rtos_malloc_lock+0xc>)
 8001a3a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001a3e:	6818      	ldr	r0, [r3, #0]
 8001a40:	f000 bd60 	b.w	8002504 <osMutexWait>
 8001a44:	200009bc 	.word	0x200009bc

08001a48 <__rtos_malloc_unlock>:
 8001a48:	4b01      	ldr	r3, [pc, #4]	; (8001a50 <__rtos_malloc_unlock+0x8>)
 8001a4a:	6818      	ldr	r0, [r3, #0]
 8001a4c:	f000 bd82 	b.w	8002554 <osMutexRelease>
 8001a50:	200009bc 	.word	0x200009bc

08001a54 <rt_put_prio>:
 8001a54:	b530      	push	{r4, r5, lr}
 8001a56:	7802      	ldrb	r2, [r0, #0]
 8001a58:	788c      	ldrb	r4, [r1, #2]
 8001a5a:	6843      	ldr	r3, [r0, #4]
 8001a5c:	3a01      	subs	r2, #1
 8001a5e:	b2d2      	uxtb	r2, r2
 8001a60:	b113      	cbz	r3, 8001a68 <rt_put_prio+0x14>
 8001a62:	789d      	ldrb	r5, [r3, #2]
 8001a64:	42a5      	cmp	r5, r4
 8001a66:	d207      	bcs.n	8001a78 <rt_put_prio+0x24>
 8001a68:	2a02      	cmp	r2, #2
 8001a6a:	604b      	str	r3, [r1, #4]
 8001a6c:	6041      	str	r1, [r0, #4]
 8001a6e:	d806      	bhi.n	8001a7e <rt_put_prio+0x2a>
 8001a70:	b103      	cbz	r3, 8001a74 <rt_put_prio+0x20>
 8001a72:	6099      	str	r1, [r3, #8]
 8001a74:	6088      	str	r0, [r1, #8]
 8001a76:	bd30      	pop	{r4, r5, pc}
 8001a78:	4618      	mov	r0, r3
 8001a7a:	685b      	ldr	r3, [r3, #4]
 8001a7c:	e7f0      	b.n	8001a60 <rt_put_prio+0xc>
 8001a7e:	2300      	movs	r3, #0
 8001a80:	608b      	str	r3, [r1, #8]
 8001a82:	bd30      	pop	{r4, r5, pc}

08001a84 <rt_get_first>:
 8001a84:	7802      	ldrb	r2, [r0, #0]
 8001a86:	6843      	ldr	r3, [r0, #4]
 8001a88:	3a01      	subs	r2, #1
 8001a8a:	6859      	ldr	r1, [r3, #4]
 8001a8c:	6041      	str	r1, [r0, #4]
 8001a8e:	2a02      	cmp	r2, #2
 8001a90:	f04f 0200 	mov.w	r2, #0
 8001a94:	d805      	bhi.n	8001aa2 <rt_get_first+0x1e>
 8001a96:	b109      	cbz	r1, 8001a9c <rt_get_first+0x18>
 8001a98:	6088      	str	r0, [r1, #8]
 8001a9a:	605a      	str	r2, [r3, #4]
 8001a9c:	609a      	str	r2, [r3, #8]
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	4770      	bx	lr
 8001aa2:	605a      	str	r2, [r3, #4]
 8001aa4:	e7fb      	b.n	8001a9e <rt_get_first+0x1a>
	...

08001aa8 <rt_put_rdy_first>:
 8001aa8:	4b03      	ldr	r3, [pc, #12]	; (8001ab8 <rt_put_rdy_first+0x10>)
 8001aaa:	685a      	ldr	r2, [r3, #4]
 8001aac:	6042      	str	r2, [r0, #4]
 8001aae:	2200      	movs	r2, #0
 8001ab0:	6082      	str	r2, [r0, #8]
 8001ab2:	6058      	str	r0, [r3, #4]
 8001ab4:	4770      	bx	lr
 8001ab6:	bf00      	nop
 8001ab8:	20001de8 	.word	0x20001de8

08001abc <rt_put_dly>:
 8001abc:	4b10      	ldr	r3, [pc, #64]	; (8001b00 <rt_put_dly+0x44>)
 8001abe:	68da      	ldr	r2, [r3, #12]
 8001ac0:	b510      	push	{r4, lr}
 8001ac2:	b18a      	cbz	r2, 8001ae8 <rt_put_dly+0x2c>
 8001ac4:	8a9a      	ldrh	r2, [r3, #20]
 8001ac6:	68dc      	ldr	r4, [r3, #12]
 8001ac8:	428a      	cmp	r2, r1
 8001aca:	d30c      	bcc.n	8001ae6 <rt_put_dly+0x2a>
 8001acc:	60c4      	str	r4, [r0, #12]
 8001ace:	60d8      	str	r0, [r3, #12]
 8001ad0:	68c4      	ldr	r4, [r0, #12]
 8001ad2:	6103      	str	r3, [r0, #16]
 8001ad4:	b104      	cbz	r4, 8001ad8 <rt_put_dly+0x1c>
 8001ad6:	6120      	str	r0, [r4, #16]
 8001ad8:	1a52      	subs	r2, r2, r1
 8001ada:	b292      	uxth	r2, r2
 8001adc:	8282      	strh	r2, [r0, #20]
 8001ade:	8a99      	ldrh	r1, [r3, #20]
 8001ae0:	1a8a      	subs	r2, r1, r2
 8001ae2:	829a      	strh	r2, [r3, #20]
 8001ae4:	bd10      	pop	{r4, pc}
 8001ae6:	b93c      	cbnz	r4, 8001af8 <rt_put_dly+0x3c>
 8001ae8:	2400      	movs	r4, #0
 8001aea:	1a8a      	subs	r2, r1, r2
 8001aec:	60c4      	str	r4, [r0, #12]
 8001aee:	60d8      	str	r0, [r3, #12]
 8001af0:	6103      	str	r3, [r0, #16]
 8001af2:	829a      	strh	r2, [r3, #20]
 8001af4:	8284      	strh	r4, [r0, #20]
 8001af6:	bd10      	pop	{r4, pc}
 8001af8:	8aa3      	ldrh	r3, [r4, #20]
 8001afa:	441a      	add	r2, r3
 8001afc:	4623      	mov	r3, r4
 8001afe:	e7e2      	b.n	8001ac6 <rt_put_dly+0xa>
 8001b00:	20001e00 	.word	0x20001e00

08001b04 <rt_dec_dly>:
 8001b04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b08:	4d17      	ldr	r5, [pc, #92]	; (8001b68 <rt_dec_dly+0x64>)
 8001b0a:	68eb      	ldr	r3, [r5, #12]
 8001b0c:	b153      	cbz	r3, 8001b24 <rt_dec_dly+0x20>
 8001b0e:	8aab      	ldrh	r3, [r5, #20]
 8001b10:	4f16      	ldr	r7, [pc, #88]	; (8001b6c <rt_dec_dly+0x68>)
 8001b12:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001b70 <rt_dec_dly+0x6c>
 8001b16:	3b01      	subs	r3, #1
 8001b18:	82ab      	strh	r3, [r5, #20]
 8001b1a:	2600      	movs	r6, #0
 8001b1c:	8aaa      	ldrh	r2, [r5, #20]
 8001b1e:	b90a      	cbnz	r2, 8001b24 <rt_dec_dly+0x20>
 8001b20:	68ec      	ldr	r4, [r5, #12]
 8001b22:	b90c      	cbnz	r4, 8001b28 <rt_dec_dly+0x24>
 8001b24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b28:	68a3      	ldr	r3, [r4, #8]
 8001b2a:	b133      	cbz	r3, 8001b3a <rt_dec_dly+0x36>
 8001b2c:	6861      	ldr	r1, [r4, #4]
 8001b2e:	6059      	str	r1, [r3, #4]
 8001b30:	6861      	ldr	r1, [r4, #4]
 8001b32:	b109      	cbz	r1, 8001b38 <rt_dec_dly+0x34>
 8001b34:	608b      	str	r3, [r1, #8]
 8001b36:	6062      	str	r2, [r4, #4]
 8001b38:	60a6      	str	r6, [r4, #8]
 8001b3a:	4621      	mov	r1, r4
 8001b3c:	4638      	mov	r0, r7
 8001b3e:	f7ff ff89 	bl	8001a54 <rt_put_prio>
 8001b42:	8aa3      	ldrh	r3, [r4, #20]
 8001b44:	82ab      	strh	r3, [r5, #20]
 8001b46:	7863      	ldrb	r3, [r4, #1]
 8001b48:	2b04      	cmp	r3, #4
 8001b4a:	bf01      	itttt	eq
 8001b4c:	f8d8 3000 	ldreq.w	r3, [r8]
 8001b50:	8ae2      	ldrheq	r2, [r4, #22]
 8001b52:	189b      	addeq	r3, r3, r2
 8001b54:	82a3      	strheq	r3, [r4, #20]
 8001b56:	2301      	movs	r3, #1
 8001b58:	7063      	strb	r3, [r4, #1]
 8001b5a:	68e3      	ldr	r3, [r4, #12]
 8001b5c:	60eb      	str	r3, [r5, #12]
 8001b5e:	b10b      	cbz	r3, 8001b64 <rt_dec_dly+0x60>
 8001b60:	611d      	str	r5, [r3, #16]
 8001b62:	60e6      	str	r6, [r4, #12]
 8001b64:	6126      	str	r6, [r4, #16]
 8001b66:	e7d9      	b.n	8001b1c <rt_dec_dly+0x18>
 8001b68:	20001e00 	.word	0x20001e00
 8001b6c:	20001de8 	.word	0x20001de8
 8001b70:	20001e7c 	.word	0x20001e7c

08001b74 <rt_rmv_list>:
 8001b74:	6883      	ldr	r3, [r0, #8]
 8001b76:	b12b      	cbz	r3, 8001b84 <rt_rmv_list+0x10>
 8001b78:	6842      	ldr	r2, [r0, #4]
 8001b7a:	605a      	str	r2, [r3, #4]
 8001b7c:	6842      	ldr	r2, [r0, #4]
 8001b7e:	b15a      	cbz	r2, 8001b98 <rt_rmv_list+0x24>
 8001b80:	6093      	str	r3, [r2, #8]
 8001b82:	4770      	bx	lr
 8001b84:	4b05      	ldr	r3, [pc, #20]	; (8001b9c <rt_rmv_list+0x28>)
 8001b86:	685a      	ldr	r2, [r3, #4]
 8001b88:	4290      	cmp	r0, r2
 8001b8a:	d102      	bne.n	8001b92 <rt_rmv_list+0x1e>
 8001b8c:	6842      	ldr	r2, [r0, #4]
 8001b8e:	605a      	str	r2, [r3, #4]
 8001b90:	4770      	bx	lr
 8001b92:	4613      	mov	r3, r2
 8001b94:	2a00      	cmp	r2, #0
 8001b96:	d1f6      	bne.n	8001b86 <rt_rmv_list+0x12>
 8001b98:	4770      	bx	lr
 8001b9a:	bf00      	nop
 8001b9c:	20001de8 	.word	0x20001de8

08001ba0 <rt_resort_prio>:
 8001ba0:	b510      	push	{r4, lr}
 8001ba2:	6884      	ldr	r4, [r0, #8]
 8001ba4:	4601      	mov	r1, r0
 8001ba6:	b92c      	cbnz	r4, 8001bb4 <rt_resort_prio+0x14>
 8001ba8:	7843      	ldrb	r3, [r0, #1]
 8001baa:	2b01      	cmp	r3, #1
 8001bac:	d10d      	bne.n	8001bca <rt_resort_prio+0x2a>
 8001bae:	4c07      	ldr	r4, [pc, #28]	; (8001bcc <rt_resort_prio+0x2c>)
 8001bb0:	e003      	b.n	8001bba <rt_resort_prio+0x1a>
 8001bb2:	68a4      	ldr	r4, [r4, #8]
 8001bb4:	7823      	ldrb	r3, [r4, #0]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d0fb      	beq.n	8001bb2 <rt_resort_prio+0x12>
 8001bba:	4608      	mov	r0, r1
 8001bbc:	f7ff ffda 	bl	8001b74 <rt_rmv_list>
 8001bc0:	4620      	mov	r0, r4
 8001bc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bc6:	f7ff bf45 	b.w	8001a54 <rt_put_prio>
 8001bca:	bd10      	pop	{r4, pc}
 8001bcc:	20001de8 	.word	0x20001de8

08001bd0 <rt_rmv_dly>:
 8001bd0:	6903      	ldr	r3, [r0, #16]
 8001bd2:	b510      	push	{r4, lr}
 8001bd4:	b163      	cbz	r3, 8001bf0 <rt_rmv_dly+0x20>
 8001bd6:	68c2      	ldr	r2, [r0, #12]
 8001bd8:	60da      	str	r2, [r3, #12]
 8001bda:	68c2      	ldr	r2, [r0, #12]
 8001bdc:	b14a      	cbz	r2, 8001bf2 <rt_rmv_dly+0x22>
 8001bde:	8a99      	ldrh	r1, [r3, #20]
 8001be0:	8a84      	ldrh	r4, [r0, #20]
 8001be2:	4421      	add	r1, r4
 8001be4:	8299      	strh	r1, [r3, #20]
 8001be6:	6113      	str	r3, [r2, #16]
 8001be8:	2300      	movs	r3, #0
 8001bea:	60c3      	str	r3, [r0, #12]
 8001bec:	2300      	movs	r3, #0
 8001bee:	6103      	str	r3, [r0, #16]
 8001bf0:	bd10      	pop	{r4, pc}
 8001bf2:	829a      	strh	r2, [r3, #20]
 8001bf4:	e7fa      	b.n	8001bec <rt_rmv_dly+0x1c>
	...

08001bf8 <rt_psq_enq>:
 8001bf8:	b470      	push	{r4, r5, r6}
 8001bfa:	4b11      	ldr	r3, [pc, #68]	; (8001c40 <rt_psq_enq+0x48>)
 8001bfc:	78dd      	ldrb	r5, [r3, #3]
 8001bfe:	f3ef 8610 	mrs	r6, PRIMASK
 8001c02:	f3ef 8210 	mrs	r2, PRIMASK
 8001c06:	b672      	cpsid	i
 8001c08:	789a      	ldrb	r2, [r3, #2]
 8001c0a:	4295      	cmp	r5, r2
 8001c0c:	d911      	bls.n	8001c32 <rt_psq_enq+0x3a>
 8001c0e:	3201      	adds	r2, #1
 8001c10:	709a      	strb	r2, [r3, #2]
 8001c12:	781a      	ldrb	r2, [r3, #0]
 8001c14:	1c54      	adds	r4, r2, #1
 8001c16:	42a5      	cmp	r5, r4
 8001c18:	bf08      	it	eq
 8001c1a:	2400      	moveq	r4, #0
 8001c1c:	701c      	strb	r4, [r3, #0]
 8001c1e:	b906      	cbnz	r6, 8001c22 <rt_psq_enq+0x2a>
 8001c20:	b662      	cpsie	i
 8001c22:	4295      	cmp	r5, r2
 8001c24:	d907      	bls.n	8001c36 <rt_psq_enq+0x3e>
 8001c26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001c2a:	bc70      	pop	{r4, r5, r6}
 8001c2c:	6058      	str	r0, [r3, #4]
 8001c2e:	6099      	str	r1, [r3, #8]
 8001c30:	4770      	bx	lr
 8001c32:	2e00      	cmp	r6, #0
 8001c34:	d0f4      	beq.n	8001c20 <rt_psq_enq+0x28>
 8001c36:	2002      	movs	r0, #2
 8001c38:	bc70      	pop	{r4, r5, r6}
 8001c3a:	f7ff bebd 	b.w	80019b8 <os_error>
 8001c3e:	bf00      	nop
 8001c40:	2000186c 	.word	0x2000186c

08001c44 <rt_psh_req>:
 8001c44:	4b05      	ldr	r3, [pc, #20]	; (8001c5c <rt_psh_req+0x18>)
 8001c46:	781b      	ldrb	r3, [r3, #0]
 8001c48:	b923      	cbnz	r3, 8001c54 <rt_psh_req+0x10>
 8001c4a:	4b05      	ldr	r3, [pc, #20]	; (8001c60 <rt_psh_req+0x1c>)
 8001c4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001c50:	601a      	str	r2, [r3, #0]
 8001c52:	4770      	bx	lr
 8001c54:	4b03      	ldr	r3, [pc, #12]	; (8001c64 <rt_psh_req+0x20>)
 8001c56:	2201      	movs	r2, #1
 8001c58:	701a      	strb	r2, [r3, #0]
 8001c5a:	4770      	bx	lr
 8001c5c:	20001218 	.word	0x20001218
 8001c60:	e000ed04 	.word	0xe000ed04
 8001c64:	20001219 	.word	0x20001219

08001c68 <rt_pop_req>:
 8001c68:	b538      	push	{r3, r4, r5, lr}
 8001c6a:	4b1a      	ldr	r3, [pc, #104]	; (8001cd4 <rt_pop_req+0x6c>)
 8001c6c:	4c1a      	ldr	r4, [pc, #104]	; (8001cd8 <rt_pop_req+0x70>)
 8001c6e:	6818      	ldr	r0, [r3, #0]
 8001c70:	2301      	movs	r3, #1
 8001c72:	7043      	strb	r3, [r0, #1]
 8001c74:	f7ff ff18 	bl	8001aa8 <rt_put_rdy_first>
 8001c78:	7865      	ldrb	r5, [r4, #1]
 8001c7a:	78a3      	ldrb	r3, [r4, #2]
 8001c7c:	b93b      	cbnz	r3, 8001c8e <rt_pop_req+0x26>
 8001c7e:	4817      	ldr	r0, [pc, #92]	; (8001cdc <rt_pop_req+0x74>)
 8001c80:	7065      	strb	r5, [r4, #1]
 8001c82:	f7ff feff 	bl	8001a84 <rt_get_first>
 8001c86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001c8a:	f000 bddb 	b.w	8002844 <rt_switch_req>
 8001c8e:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001c92:	6858      	ldr	r0, [r3, #4]
 8001c94:	7802      	ldrb	r2, [r0, #0]
 8001c96:	b99a      	cbnz	r2, 8001cc0 <rt_pop_req+0x58>
 8001c98:	8919      	ldrh	r1, [r3, #8]
 8001c9a:	f000 fa1b 	bl	80020d4 <rt_evt_psh>
 8001c9e:	78e3      	ldrb	r3, [r4, #3]
 8001ca0:	3501      	adds	r5, #1
 8001ca2:	429d      	cmp	r5, r3
 8001ca4:	bf08      	it	eq
 8001ca6:	2500      	moveq	r5, #0
 8001ca8:	f3ef 8310 	mrs	r3, PRIMASK
 8001cac:	f3ef 8210 	mrs	r2, PRIMASK
 8001cb0:	b672      	cpsid	i
 8001cb2:	78a2      	ldrb	r2, [r4, #2]
 8001cb4:	3a01      	subs	r2, #1
 8001cb6:	70a2      	strb	r2, [r4, #2]
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d1de      	bne.n	8001c7a <rt_pop_req+0x12>
 8001cbc:	b662      	cpsie	i
 8001cbe:	e7dc      	b.n	8001c7a <rt_pop_req+0x12>
 8001cc0:	2a01      	cmp	r2, #1
 8001cc2:	d103      	bne.n	8001ccc <rt_pop_req+0x64>
 8001cc4:	6899      	ldr	r1, [r3, #8]
 8001cc6:	f000 f993 	bl	8001ff0 <rt_mbx_psh>
 8001cca:	e7e8      	b.n	8001c9e <rt_pop_req+0x36>
 8001ccc:	f001 f918 	bl	8002f00 <rt_sem_psh>
 8001cd0:	e7e5      	b.n	8001c9e <rt_pop_req+0x36>
 8001cd2:	bf00      	nop
 8001cd4:	20001e34 	.word	0x20001e34
 8001cd8:	2000186c 	.word	0x2000186c
 8001cdc:	20001de8 	.word	0x20001de8

08001ce0 <os_tick_init>:
 8001ce0:	4b08      	ldr	r3, [pc, #32]	; (8001d04 <os_tick_init+0x24>)
 8001ce2:	681a      	ldr	r2, [r3, #0]
 8001ce4:	4b08      	ldr	r3, [pc, #32]	; (8001d08 <os_tick_init+0x28>)
 8001ce6:	601a      	str	r2, [r3, #0]
 8001ce8:	2200      	movs	r2, #0
 8001cea:	605a      	str	r2, [r3, #4]
 8001cec:	2207      	movs	r2, #7
 8001cee:	f843 2c04 	str.w	r2, [r3, #-4]
 8001cf2:	4a06      	ldr	r2, [pc, #24]	; (8001d0c <os_tick_init+0x2c>)
 8001cf4:	6813      	ldr	r3, [r2, #0]
 8001cf6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001cfa:	6013      	str	r3, [r2, #0]
 8001cfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d00:	4770      	bx	lr
 8001d02:	bf00      	nop
 8001d04:	080068ec 	.word	0x080068ec
 8001d08:	e000e014 	.word	0xe000e014
 8001d0c:	e000ed20 	.word	0xe000ed20

08001d10 <os_tick_irqack>:
 8001d10:	4770      	bx	lr
	...

08001d14 <rt_systick>:
 8001d14:	b508      	push	{r3, lr}
 8001d16:	4b0b      	ldr	r3, [pc, #44]	; (8001d44 <rt_systick+0x30>)
 8001d18:	6818      	ldr	r0, [r3, #0]
 8001d1a:	2301      	movs	r3, #1
 8001d1c:	7043      	strb	r3, [r0, #1]
 8001d1e:	f7ff fec3 	bl	8001aa8 <rt_put_rdy_first>
 8001d22:	f000 fa0d 	bl	8002140 <rt_chk_robin>
 8001d26:	4a08      	ldr	r2, [pc, #32]	; (8001d48 <rt_systick+0x34>)
 8001d28:	6813      	ldr	r3, [r2, #0]
 8001d2a:	3301      	adds	r3, #1
 8001d2c:	6013      	str	r3, [r2, #0]
 8001d2e:	f7ff fee9 	bl	8001b04 <rt_dec_dly>
 8001d32:	f000 fd0f 	bl	8002754 <sysTimerTick>
 8001d36:	4805      	ldr	r0, [pc, #20]	; (8001d4c <rt_systick+0x38>)
 8001d38:	f7ff fea4 	bl	8001a84 <rt_get_first>
 8001d3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d40:	f000 bd80 	b.w	8002844 <rt_switch_req>
 8001d44:	20001e34 	.word	0x20001e34
 8001d48:	20001e7c 	.word	0x20001e7c
 8001d4c:	20001de8 	.word	0x20001de8

08001d50 <rt_stk_check>:
 8001d50:	4b06      	ldr	r3, [pc, #24]	; (8001d6c <rt_stk_check+0x1c>)
 8001d52:	681a      	ldr	r2, [r3, #0]
 8001d54:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001d56:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001d58:	4293      	cmp	r3, r2
 8001d5a:	d803      	bhi.n	8001d64 <rt_stk_check+0x14>
 8001d5c:	681a      	ldr	r2, [r3, #0]
 8001d5e:	4b04      	ldr	r3, [pc, #16]	; (8001d70 <rt_stk_check+0x20>)
 8001d60:	429a      	cmp	r2, r3
 8001d62:	d002      	beq.n	8001d6a <rt_stk_check+0x1a>
 8001d64:	2001      	movs	r0, #1
 8001d66:	f7ff be27 	b.w	80019b8 <os_error>
 8001d6a:	4770      	bx	lr
 8001d6c:	20001e34 	.word	0x20001e34
 8001d70:	e25a2ea5 	.word	0xe25a2ea5

08001d74 <rt_init_stack>:
 8001d74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001d76:	089b      	lsrs	r3, r3, #2
 8001d78:	bf04      	itt	eq
 8001d7a:	4b22      	ldreq	r3, [pc, #136]	; (8001e04 <rt_init_stack+0x90>)
 8001d7c:	881b      	ldrheq	r3, [r3, #0]
 8001d7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d80:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001d82:	bf08      	it	eq
 8001d84:	089b      	lsreq	r3, r3, #2
 8001d86:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001d8a:	0754      	lsls	r4, r2, #29
 8001d8c:	bf48      	it	mi
 8001d8e:	3a04      	submi	r2, #4
 8001d90:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001d94:	e902 0042 	stmdb	r2, {r1, r6}
 8001d98:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001d9c:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001da0:	f1a2 070c 	sub.w	r7, r2, #12
 8001da4:	f04f 0e00 	mov.w	lr, #0
 8001da8:	f846 ef04 	str.w	lr, [r6, #4]!
 8001dac:	42be      	cmp	r6, r7
 8001dae:	d1fb      	bne.n	8001da8 <rt_init_stack+0x34>
 8001db0:	69c6      	ldr	r6, [r0, #28]
 8001db2:	f842 6c20 	str.w	r6, [r2, #-32]
 8001db6:	6341      	str	r1, [r0, #52]	; 0x34
 8001db8:	4912      	ldr	r1, [pc, #72]	; (8001e04 <rt_init_stack+0x90>)
 8001dba:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001dbc:	6809      	ldr	r1, [r1, #0]
 8001dbe:	00c9      	lsls	r1, r1, #3
 8001dc0:	d517      	bpl.n	8001df2 <rt_init_stack+0x7e>
 8001dc2:	2b11      	cmp	r3, #17
 8001dc4:	d915      	bls.n	8001df2 <rt_init_stack+0x7e>
 8001dc6:	3b10      	subs	r3, #16
 8001dc8:	f06f 0107 	mvn.w	r1, #7
 8001dcc:	085b      	lsrs	r3, r3, #1
 8001dce:	434b      	muls	r3, r1
 8001dd0:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001dd4:	440a      	add	r2, r1
 8001dd6:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001dda:	4621      	mov	r1, r4
 8001ddc:	4291      	cmp	r1, r2
 8001dde:	d10b      	bne.n	8001df8 <rt_init_stack+0x84>
 8001de0:	3308      	adds	r3, #8
 8001de2:	441c      	add	r4, r3
 8001de4:	1f23      	subs	r3, r4, #4
 8001de6:	429d      	cmp	r5, r3
 8001de8:	bf3c      	itt	cc
 8001dea:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001dee:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001df2:	4b05      	ldr	r3, [pc, #20]	; (8001e08 <rt_init_stack+0x94>)
 8001df4:	602b      	str	r3, [r5, #0]
 8001df6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001df8:	f841 0c04 	str.w	r0, [r1, #-4]
 8001dfc:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001e00:	e7ec      	b.n	8001ddc <rt_init_stack+0x68>
 8001e02:	bf00      	nop
 8001e04:	080068d4 	.word	0x080068d4
 8001e08:	e25a2ea5 	.word	0xe25a2ea5

08001e0c <rt_ret_val>:
 8001e0c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001e10:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001e12:	b112      	cbz	r2, 8001e1a <rt_ret_val+0xe>
 8001e14:	3360      	adds	r3, #96	; 0x60
 8001e16:	6019      	str	r1, [r3, #0]
 8001e18:	4770      	bx	lr
 8001e1a:	3320      	adds	r3, #32
 8001e1c:	e7fb      	b.n	8001e16 <rt_ret_val+0xa>

08001e1e <rt_ret_val2>:
 8001e1e:	b510      	push	{r4, lr}
 8001e20:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001e24:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001e26:	b11c      	cbz	r4, 8001e30 <rt_ret_val2+0x12>
 8001e28:	3360      	adds	r3, #96	; 0x60
 8001e2a:	e883 0006 	stmia.w	r3, {r1, r2}
 8001e2e:	bd10      	pop	{r4, pc}
 8001e30:	3320      	adds	r3, #32
 8001e32:	e7fa      	b.n	8001e2a <rt_ret_val2+0xc>

08001e34 <_init_box>:
 8001e34:	2a00      	cmp	r2, #0
 8001e36:	bfbb      	ittet	lt
 8001e38:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001e3c:	3207      	addlt	r2, #7
 8001e3e:	3203      	addge	r2, #3
 8001e40:	f022 0207 	biclt.w	r2, r2, #7
 8001e44:	bfa8      	it	ge
 8001e46:	f022 0203 	bicge.w	r2, r2, #3
 8001e4a:	b510      	push	{r4, lr}
 8001e4c:	bfb4      	ite	lt
 8001e4e:	2310      	movlt	r3, #16
 8001e50:	230c      	movge	r3, #12
 8001e52:	b192      	cbz	r2, 8001e7a <_init_box+0x46>
 8001e54:	18d4      	adds	r4, r2, r3
 8001e56:	428c      	cmp	r4, r1
 8001e58:	d80f      	bhi.n	8001e7a <_init_box+0x46>
 8001e5a:	4401      	add	r1, r0
 8001e5c:	4403      	add	r3, r0
 8001e5e:	4254      	negs	r4, r2
 8001e60:	6041      	str	r1, [r0, #4]
 8001e62:	6003      	str	r3, [r0, #0]
 8001e64:	6082      	str	r2, [r0, #8]
 8001e66:	4421      	add	r1, r4
 8001e68:	1898      	adds	r0, r3, r2
 8001e6a:	4281      	cmp	r1, r0
 8001e6c:	d302      	bcc.n	8001e74 <_init_box+0x40>
 8001e6e:	5100      	str	r0, [r0, r4]
 8001e70:	4603      	mov	r3, r0
 8001e72:	e7f9      	b.n	8001e68 <_init_box+0x34>
 8001e74:	2000      	movs	r0, #0
 8001e76:	6018      	str	r0, [r3, #0]
 8001e78:	bd10      	pop	{r4, pc}
 8001e7a:	2001      	movs	r0, #1
 8001e7c:	bd10      	pop	{r4, pc}

08001e7e <rt_alloc_box>:
 8001e7e:	f3ef 8310 	mrs	r3, PRIMASK
 8001e82:	b672      	cpsid	i
 8001e84:	6802      	ldr	r2, [r0, #0]
 8001e86:	f003 0301 	and.w	r3, r3, #1
 8001e8a:	b10a      	cbz	r2, 8001e90 <rt_alloc_box+0x12>
 8001e8c:	6811      	ldr	r1, [r2, #0]
 8001e8e:	6001      	str	r1, [r0, #0]
 8001e90:	b903      	cbnz	r3, 8001e94 <rt_alloc_box+0x16>
 8001e92:	b662      	cpsie	i
 8001e94:	4610      	mov	r0, r2
 8001e96:	4770      	bx	lr

08001e98 <rt_free_box>:
 8001e98:	4281      	cmp	r1, r0
 8001e9a:	d30d      	bcc.n	8001eb8 <rt_free_box+0x20>
 8001e9c:	6843      	ldr	r3, [r0, #4]
 8001e9e:	4299      	cmp	r1, r3
 8001ea0:	d20a      	bcs.n	8001eb8 <rt_free_box+0x20>
 8001ea2:	f3ef 8310 	mrs	r3, PRIMASK
 8001ea6:	b672      	cpsid	i
 8001ea8:	6802      	ldr	r2, [r0, #0]
 8001eaa:	600a      	str	r2, [r1, #0]
 8001eac:	6001      	str	r1, [r0, #0]
 8001eae:	f013 0001 	ands.w	r0, r3, #1
 8001eb2:	d103      	bne.n	8001ebc <rt_free_box+0x24>
 8001eb4:	b662      	cpsie	i
 8001eb6:	4770      	bx	lr
 8001eb8:	2001      	movs	r0, #1
 8001eba:	4770      	bx	lr
 8001ebc:	2000      	movs	r0, #0
 8001ebe:	4770      	bx	lr

08001ec0 <rt_mbx_init>:
 8001ec0:	2301      	movs	r3, #1
 8001ec2:	3910      	subs	r1, #16
 8001ec4:	7003      	strb	r3, [r0, #0]
 8001ec6:	0889      	lsrs	r1, r1, #2
 8001ec8:	2300      	movs	r3, #0
 8001eca:	7043      	strb	r3, [r0, #1]
 8001ecc:	7083      	strb	r3, [r0, #2]
 8001ece:	6043      	str	r3, [r0, #4]
 8001ed0:	8103      	strh	r3, [r0, #8]
 8001ed2:	8143      	strh	r3, [r0, #10]
 8001ed4:	8183      	strh	r3, [r0, #12]
 8001ed6:	81c1      	strh	r1, [r0, #14]
 8001ed8:	4770      	bx	lr
	...

08001edc <rt_mbx_wait>:
 8001edc:	b570      	push	{r4, r5, r6, lr}
 8001ede:	8985      	ldrh	r5, [r0, #12]
 8001ee0:	4604      	mov	r4, r0
 8001ee2:	4616      	mov	r6, r2
 8001ee4:	2d00      	cmp	r5, #0
 8001ee6:	d038      	beq.n	8001f5a <rt_mbx_wait+0x7e>
 8001ee8:	8943      	ldrh	r3, [r0, #10]
 8001eea:	1d1a      	adds	r2, r3, #4
 8001eec:	3301      	adds	r3, #1
 8001eee:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001ef2:	600a      	str	r2, [r1, #0]
 8001ef4:	89c2      	ldrh	r2, [r0, #14]
 8001ef6:	b29b      	uxth	r3, r3
 8001ef8:	429a      	cmp	r2, r3
 8001efa:	8143      	strh	r3, [r0, #10]
 8001efc:	bf04      	itt	eq
 8001efe:	2300      	moveq	r3, #0
 8001f00:	8143      	strheq	r3, [r0, #10]
 8001f02:	6843      	ldr	r3, [r0, #4]
 8001f04:	b1f3      	cbz	r3, 8001f44 <rt_mbx_wait+0x68>
 8001f06:	7843      	ldrb	r3, [r0, #1]
 8001f08:	2b02      	cmp	r3, #2
 8001f0a:	d11b      	bne.n	8001f44 <rt_mbx_wait+0x68>
 8001f0c:	f7ff fdba 	bl	8001a84 <rt_get_first>
 8001f10:	2100      	movs	r1, #0
 8001f12:	4605      	mov	r5, r0
 8001f14:	f7ff ff7a 	bl	8001e0c <rt_ret_val>
 8001f18:	8923      	ldrh	r3, [r4, #8]
 8001f1a:	69e9      	ldr	r1, [r5, #28]
 8001f1c:	1d1a      	adds	r2, r3, #4
 8001f1e:	3301      	adds	r3, #1
 8001f20:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001f24:	89e2      	ldrh	r2, [r4, #14]
 8001f26:	b29b      	uxth	r3, r3
 8001f28:	429a      	cmp	r2, r3
 8001f2a:	8123      	strh	r3, [r4, #8]
 8001f2c:	bf08      	it	eq
 8001f2e:	2300      	moveq	r3, #0
 8001f30:	4628      	mov	r0, r5
 8001f32:	bf08      	it	eq
 8001f34:	8123      	strheq	r3, [r4, #8]
 8001f36:	f7ff fe4b 	bl	8001bd0 <rt_rmv_dly>
 8001f3a:	4628      	mov	r0, r5
 8001f3c:	f000 fc9c 	bl	8002878 <rt_dispatch>
 8001f40:	2000      	movs	r0, #0
 8001f42:	bd70      	pop	{r4, r5, r6, pc}
 8001f44:	f3ef 8010 	mrs	r0, PRIMASK
 8001f48:	f3ef 8310 	mrs	r3, PRIMASK
 8001f4c:	b672      	cpsid	i
 8001f4e:	3d01      	subs	r5, #1
 8001f50:	81a5      	strh	r5, [r4, #12]
 8001f52:	2800      	cmp	r0, #0
 8001f54:	d1f4      	bne.n	8001f40 <rt_mbx_wait+0x64>
 8001f56:	b662      	cpsie	i
 8001f58:	bd70      	pop	{r4, r5, r6, pc}
 8001f5a:	b14a      	cbz	r2, 8001f70 <rt_mbx_wait+0x94>
 8001f5c:	6842      	ldr	r2, [r0, #4]
 8001f5e:	4b09      	ldr	r3, [pc, #36]	; (8001f84 <rt_mbx_wait+0xa8>)
 8001f60:	b142      	cbz	r2, 8001f74 <rt_mbx_wait+0x98>
 8001f62:	6819      	ldr	r1, [r3, #0]
 8001f64:	f7ff fd76 	bl	8001a54 <rt_put_prio>
 8001f68:	2108      	movs	r1, #8
 8001f6a:	4630      	mov	r0, r6
 8001f6c:	f000 fca8 	bl	80028c0 <rt_block>
 8001f70:	2001      	movs	r0, #1
 8001f72:	bd70      	pop	{r4, r5, r6, pc}
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	6043      	str	r3, [r0, #4]
 8001f78:	605a      	str	r2, [r3, #4]
 8001f7a:	6098      	str	r0, [r3, #8]
 8001f7c:	2301      	movs	r3, #1
 8001f7e:	7043      	strb	r3, [r0, #1]
 8001f80:	e7f2      	b.n	8001f68 <rt_mbx_wait+0x8c>
 8001f82:	bf00      	nop
 8001f84:	20001e34 	.word	0x20001e34

08001f88 <rt_mbx_check>:
 8001f88:	89c2      	ldrh	r2, [r0, #14]
 8001f8a:	8980      	ldrh	r0, [r0, #12]
 8001f8c:	1a10      	subs	r0, r2, r0
 8001f8e:	4770      	bx	lr

08001f90 <isr_mbx_send>:
 8001f90:	b508      	push	{r3, lr}
 8001f92:	f7ff fe31 	bl	8001bf8 <rt_psq_enq>
 8001f96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f9a:	f7ff be53 	b.w	8001c44 <rt_psh_req>

08001f9e <isr_mbx_receive>:
 8001f9e:	8983      	ldrh	r3, [r0, #12]
 8001fa0:	b510      	push	{r4, lr}
 8001fa2:	4604      	mov	r4, r0
 8001fa4:	b30b      	cbz	r3, 8001fea <isr_mbx_receive+0x4c>
 8001fa6:	8943      	ldrh	r3, [r0, #10]
 8001fa8:	3304      	adds	r3, #4
 8001faa:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001fae:	600b      	str	r3, [r1, #0]
 8001fb0:	7843      	ldrb	r3, [r0, #1]
 8001fb2:	2b02      	cmp	r3, #2
 8001fb4:	d104      	bne.n	8001fc0 <isr_mbx_receive+0x22>
 8001fb6:	2100      	movs	r1, #0
 8001fb8:	f7ff fe1e 	bl	8001bf8 <rt_psq_enq>
 8001fbc:	f7ff fe42 	bl	8001c44 <rt_psh_req>
 8001fc0:	f3ef 8310 	mrs	r3, PRIMASK
 8001fc4:	f3ef 8210 	mrs	r2, PRIMASK
 8001fc8:	b672      	cpsid	i
 8001fca:	89a2      	ldrh	r2, [r4, #12]
 8001fcc:	3a01      	subs	r2, #1
 8001fce:	81a2      	strh	r2, [r4, #12]
 8001fd0:	b903      	cbnz	r3, 8001fd4 <isr_mbx_receive+0x36>
 8001fd2:	b662      	cpsie	i
 8001fd4:	8963      	ldrh	r3, [r4, #10]
 8001fd6:	89e2      	ldrh	r2, [r4, #14]
 8001fd8:	3301      	adds	r3, #1
 8001fda:	b29b      	uxth	r3, r3
 8001fdc:	429a      	cmp	r2, r3
 8001fde:	8163      	strh	r3, [r4, #10]
 8001fe0:	d101      	bne.n	8001fe6 <isr_mbx_receive+0x48>
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	8163      	strh	r3, [r4, #10]
 8001fe6:	2004      	movs	r0, #4
 8001fe8:	bd10      	pop	{r4, pc}
 8001fea:	4618      	mov	r0, r3
 8001fec:	bd10      	pop	{r4, pc}
	...

08001ff0 <rt_mbx_psh>:
 8001ff0:	6843      	ldr	r3, [r0, #4]
 8001ff2:	b570      	push	{r4, r5, r6, lr}
 8001ff4:	4604      	mov	r4, r0
 8001ff6:	460e      	mov	r6, r1
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d04b      	beq.n	8002094 <rt_mbx_psh+0xa4>
 8001ffc:	7845      	ldrb	r5, [r0, #1]
 8001ffe:	2d02      	cmp	r5, #2
 8002000:	d020      	beq.n	8002044 <rt_mbx_psh+0x54>
 8002002:	2d03      	cmp	r5, #3
 8002004:	d00a      	beq.n	800201c <rt_mbx_psh+0x2c>
 8002006:	2d01      	cmp	r5, #1
 8002008:	d161      	bne.n	80020ce <rt_mbx_psh+0xde>
 800200a:	f7ff fd3b 	bl	8001a84 <rt_get_first>
 800200e:	4604      	mov	r4, r0
 8002010:	4632      	mov	r2, r6
 8002012:	2110      	movs	r1, #16
 8002014:	f7ff ff03 	bl	8001e1e <rt_ret_val2>
 8002018:	7065      	strb	r5, [r4, #1]
 800201a:	e00e      	b.n	800203a <rt_mbx_psh+0x4a>
 800201c:	4608      	mov	r0, r1
 800201e:	f7ff ff2e 	bl	8001e7e <rt_alloc_box>
 8002022:	4605      	mov	r5, r0
 8002024:	2800      	cmp	r0, #0
 8002026:	d052      	beq.n	80020ce <rt_mbx_psh+0xde>
 8002028:	4620      	mov	r0, r4
 800202a:	f7ff fd2b 	bl	8001a84 <rt_get_first>
 800202e:	4629      	mov	r1, r5
 8002030:	4604      	mov	r4, r0
 8002032:	f7ff feeb 	bl	8001e0c <rt_ret_val>
 8002036:	2301      	movs	r3, #1
 8002038:	7063      	strb	r3, [r4, #1]
 800203a:	4620      	mov	r0, r4
 800203c:	f7ff fdc8 	bl	8001bd0 <rt_rmv_dly>
 8002040:	4621      	mov	r1, r4
 8002042:	e022      	b.n	800208a <rt_mbx_psh+0x9a>
 8002044:	f7ff fd1e 	bl	8001a84 <rt_get_first>
 8002048:	2100      	movs	r1, #0
 800204a:	4605      	mov	r5, r0
 800204c:	f7ff fede 	bl	8001e0c <rt_ret_val>
 8002050:	8923      	ldrh	r3, [r4, #8]
 8002052:	69e9      	ldr	r1, [r5, #28]
 8002054:	1d1a      	adds	r2, r3, #4
 8002056:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 800205a:	f3ef 8210 	mrs	r2, PRIMASK
 800205e:	f3ef 8110 	mrs	r1, PRIMASK
 8002062:	b672      	cpsid	i
 8002064:	89a1      	ldrh	r1, [r4, #12]
 8002066:	3101      	adds	r1, #1
 8002068:	81a1      	strh	r1, [r4, #12]
 800206a:	b902      	cbnz	r2, 800206e <rt_mbx_psh+0x7e>
 800206c:	b662      	cpsie	i
 800206e:	89e2      	ldrh	r2, [r4, #14]
 8002070:	3301      	adds	r3, #1
 8002072:	b29b      	uxth	r3, r3
 8002074:	429a      	cmp	r2, r3
 8002076:	8123      	strh	r3, [r4, #8]
 8002078:	bf04      	itt	eq
 800207a:	2300      	moveq	r3, #0
 800207c:	8123      	strheq	r3, [r4, #8]
 800207e:	2301      	movs	r3, #1
 8002080:	706b      	strb	r3, [r5, #1]
 8002082:	4628      	mov	r0, r5
 8002084:	f7ff fda4 	bl	8001bd0 <rt_rmv_dly>
 8002088:	4629      	mov	r1, r5
 800208a:	4811      	ldr	r0, [pc, #68]	; (80020d0 <rt_mbx_psh+0xe0>)
 800208c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002090:	f7ff bce0 	b.w	8001a54 <rt_put_prio>
 8002094:	8980      	ldrh	r0, [r0, #12]
 8002096:	89e1      	ldrh	r1, [r4, #14]
 8002098:	4288      	cmp	r0, r1
 800209a:	d213      	bcs.n	80020c4 <rt_mbx_psh+0xd4>
 800209c:	8923      	ldrh	r3, [r4, #8]
 800209e:	1d1a      	adds	r2, r3, #4
 80020a0:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 80020a4:	f3ef 8210 	mrs	r2, PRIMASK
 80020a8:	f3ef 8510 	mrs	r5, PRIMASK
 80020ac:	b672      	cpsid	i
 80020ae:	3001      	adds	r0, #1
 80020b0:	81a0      	strh	r0, [r4, #12]
 80020b2:	b902      	cbnz	r2, 80020b6 <rt_mbx_psh+0xc6>
 80020b4:	b662      	cpsie	i
 80020b6:	3301      	adds	r3, #1
 80020b8:	b29b      	uxth	r3, r3
 80020ba:	4299      	cmp	r1, r3
 80020bc:	bf08      	it	eq
 80020be:	2300      	moveq	r3, #0
 80020c0:	8123      	strh	r3, [r4, #8]
 80020c2:	bd70      	pop	{r4, r5, r6, pc}
 80020c4:	2003      	movs	r0, #3
 80020c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80020ca:	f7ff bc75 	b.w	80019b8 <os_error>
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
 80020d0:	20001de8 	.word	0x20001de8

080020d4 <rt_evt_psh>:
 80020d4:	b510      	push	{r4, lr}
 80020d6:	8b03      	ldrh	r3, [r0, #24]
 80020d8:	7842      	ldrb	r2, [r0, #1]
 80020da:	4319      	orrs	r1, r3
 80020dc:	2a06      	cmp	r2, #6
 80020de:	4604      	mov	r4, r0
 80020e0:	8301      	strh	r1, [r0, #24]
 80020e2:	8b43      	ldrh	r3, [r0, #26]
 80020e4:	d115      	bne.n	8002112 <rt_evt_psh+0x3e>
 80020e6:	ea33 0201 	bics.w	r2, r3, r1
 80020ea:	d119      	bne.n	8002120 <rt_evt_psh+0x4c>
 80020ec:	ea21 0103 	bic.w	r1, r1, r3
 80020f0:	8321      	strh	r1, [r4, #24]
 80020f2:	4620      	mov	r0, r4
 80020f4:	f7ff fd6c 	bl	8001bd0 <rt_rmv_dly>
 80020f8:	2301      	movs	r3, #1
 80020fa:	4620      	mov	r0, r4
 80020fc:	7063      	strb	r3, [r4, #1]
 80020fe:	8b62      	ldrh	r2, [r4, #26]
 8002100:	2108      	movs	r1, #8
 8002102:	f7ff fe8c 	bl	8001e1e <rt_ret_val2>
 8002106:	4621      	mov	r1, r4
 8002108:	4806      	ldr	r0, [pc, #24]	; (8002124 <rt_evt_psh+0x50>)
 800210a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800210e:	f7ff bca1 	b.w	8001a54 <rt_put_prio>
 8002112:	2a05      	cmp	r2, #5
 8002114:	d104      	bne.n	8002120 <rt_evt_psh+0x4c>
 8002116:	ea11 0203 	ands.w	r2, r1, r3
 800211a:	d001      	beq.n	8002120 <rt_evt_psh+0x4c>
 800211c:	8342      	strh	r2, [r0, #26]
 800211e:	e7e5      	b.n	80020ec <rt_evt_psh+0x18>
 8002120:	bd10      	pop	{r4, pc}
 8002122:	bf00      	nop
 8002124:	20001de8 	.word	0x20001de8

08002128 <rt_init_robin>:
 8002128:	4b03      	ldr	r3, [pc, #12]	; (8002138 <rt_init_robin+0x10>)
 800212a:	2200      	movs	r2, #0
 800212c:	601a      	str	r2, [r3, #0]
 800212e:	4a03      	ldr	r2, [pc, #12]	; (800213c <rt_init_robin+0x14>)
 8002130:	6812      	ldr	r2, [r2, #0]
 8002132:	80da      	strh	r2, [r3, #6]
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop
 8002138:	20001e20 	.word	0x20001e20
 800213c:	080068d0 	.word	0x080068d0

08002140 <rt_chk_robin>:
 8002140:	b508      	push	{r3, lr}
 8002142:	4b0e      	ldr	r3, [pc, #56]	; (800217c <rt_chk_robin+0x3c>)
 8002144:	685a      	ldr	r2, [r3, #4]
 8002146:	4b0e      	ldr	r3, [pc, #56]	; (8002180 <rt_chk_robin+0x40>)
 8002148:	6819      	ldr	r1, [r3, #0]
 800214a:	4291      	cmp	r1, r2
 800214c:	490d      	ldr	r1, [pc, #52]	; (8002184 <rt_chk_robin+0x44>)
 800214e:	d005      	beq.n	800215c <rt_chk_robin+0x1c>
 8002150:	601a      	str	r2, [r3, #0]
 8002152:	88da      	ldrh	r2, [r3, #6]
 8002154:	6808      	ldr	r0, [r1, #0]
 8002156:	3a01      	subs	r2, #1
 8002158:	4402      	add	r2, r0
 800215a:	809a      	strh	r2, [r3, #4]
 800215c:	8898      	ldrh	r0, [r3, #4]
 800215e:	880a      	ldrh	r2, [r1, #0]
 8002160:	4290      	cmp	r0, r2
 8002162:	d10a      	bne.n	800217a <rt_chk_robin+0x3a>
 8002164:	2200      	movs	r2, #0
 8002166:	4805      	ldr	r0, [pc, #20]	; (800217c <rt_chk_robin+0x3c>)
 8002168:	601a      	str	r2, [r3, #0]
 800216a:	f7ff fc8b 	bl	8001a84 <rt_get_first>
 800216e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002172:	4601      	mov	r1, r0
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <rt_chk_robin+0x3c>)
 8002176:	f7ff bc6d 	b.w	8001a54 <rt_put_prio>
 800217a:	bd08      	pop	{r3, pc}
 800217c:	20001de8 	.word	0x20001de8
 8002180:	20001e20 	.word	0x20001e20
 8002184:	20001e7c 	.word	0x20001e7c

08002188 <rt_timer_insert>:
 8002188:	4a0b      	ldr	r2, [pc, #44]	; (80021b8 <rt_timer_insert+0x30>)
 800218a:	6813      	ldr	r3, [r2, #0]
 800218c:	b530      	push	{r4, r5, lr}
 800218e:	2400      	movs	r4, #0
 8002190:	b943      	cbnz	r3, 80021a4 <rt_timer_insert+0x1c>
 8002192:	6003      	str	r3, [r0, #0]
 8002194:	6081      	str	r1, [r0, #8]
 8002196:	b113      	cbz	r3, 800219e <rt_timer_insert+0x16>
 8002198:	689d      	ldr	r5, [r3, #8]
 800219a:	1a69      	subs	r1, r5, r1
 800219c:	6099      	str	r1, [r3, #8]
 800219e:	b144      	cbz	r4, 80021b2 <rt_timer_insert+0x2a>
 80021a0:	6020      	str	r0, [r4, #0]
 80021a2:	bd30      	pop	{r4, r5, pc}
 80021a4:	689d      	ldr	r5, [r3, #8]
 80021a6:	42a9      	cmp	r1, r5
 80021a8:	d3f3      	bcc.n	8002192 <rt_timer_insert+0xa>
 80021aa:	461c      	mov	r4, r3
 80021ac:	1b49      	subs	r1, r1, r5
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	e7ee      	b.n	8002190 <rt_timer_insert+0x8>
 80021b2:	6010      	str	r0, [r2, #0]
 80021b4:	bd30      	pop	{r4, r5, pc}
 80021b6:	bf00      	nop
 80021b8:	20001e30 	.word	0x20001e30

080021bc <rt_ms2tick>:
 80021bc:	b1c0      	cbz	r0, 80021f0 <rt_ms2tick+0x34>
 80021be:	1c43      	adds	r3, r0, #1
 80021c0:	d011      	beq.n	80021e6 <rt_ms2tick+0x2a>
 80021c2:	4b0c      	ldr	r3, [pc, #48]	; (80021f4 <rt_ms2tick+0x38>)
 80021c4:	4298      	cmp	r0, r3
 80021c6:	d811      	bhi.n	80021ec <rt_ms2tick+0x30>
 80021c8:	4b0b      	ldr	r3, [pc, #44]	; (80021f8 <rt_ms2tick+0x3c>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80021d0:	1e5a      	subs	r2, r3, #1
 80021d2:	fb01 2000 	mla	r0, r1, r0, r2
 80021d6:	fbb0 f3f3 	udiv	r3, r0, r3
 80021da:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 80021de:	4283      	cmp	r3, r0
 80021e0:	d806      	bhi.n	80021f0 <rt_ms2tick+0x34>
 80021e2:	b298      	uxth	r0, r3
 80021e4:	4770      	bx	lr
 80021e6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80021ea:	4770      	bx	lr
 80021ec:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 80021f0:	4770      	bx	lr
 80021f2:	bf00      	nop
 80021f4:	003d0900 	.word	0x003d0900
 80021f8:	08006888 	.word	0x08006888

080021fc <rt_tid2ptcb>:
 80021fc:	b138      	cbz	r0, 800220e <rt_tid2ptcb+0x12>
 80021fe:	0783      	lsls	r3, r0, #30
 8002200:	d104      	bne.n	800220c <rt_tid2ptcb+0x10>
 8002202:	7803      	ldrb	r3, [r0, #0]
 8002204:	2b00      	cmp	r3, #0
 8002206:	bf18      	it	ne
 8002208:	2000      	movne	r0, #0
 800220a:	4770      	bx	lr
 800220c:	2000      	movs	r0, #0
 800220e:	4770      	bx	lr

08002210 <svcKernelStart>:
 8002210:	b5b0      	push	{r4, r5, r7, lr}
 8002212:	4d0e      	ldr	r5, [pc, #56]	; (800224c <svcKernelStart+0x3c>)
 8002214:	7828      	ldrb	r0, [r5, #0]
 8002216:	af00      	add	r7, sp, #0
 8002218:	b9a8      	cbnz	r0, 8002246 <svcKernelStart+0x36>
 800221a:	4c0d      	ldr	r4, [pc, #52]	; (8002250 <svcKernelStart+0x40>)
 800221c:	6823      	ldr	r3, [r4, #0]
 800221e:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002222:	f000 fb6f 	bl	8002904 <rt_tsk_prio>
 8002226:	6823      	ldr	r3, [r4, #0]
 8002228:	78da      	ldrb	r2, [r3, #3]
 800222a:	2aff      	cmp	r2, #255	; 0xff
 800222c:	d103      	bne.n	8002236 <svcKernelStart+0x26>
 800222e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002230:	3220      	adds	r2, #32
 8002232:	f382 8809 	msr	PSP, r2
 8002236:	6862      	ldr	r2, [r4, #4]
 8002238:	b90a      	cbnz	r2, 800223e <svcKernelStart+0x2e>
 800223a:	e884 000c 	stmia.w	r4, {r2, r3}
 800223e:	f000 fd19 	bl	8002c74 <rt_sys_start>
 8002242:	2301      	movs	r3, #1
 8002244:	702b      	strb	r3, [r5, #0]
 8002246:	2000      	movs	r0, #0
 8002248:	bdb0      	pop	{r4, r5, r7, pc}
 800224a:	bf00      	nop
 800224c:	20001e2d 	.word	0x20001e2d
 8002250:	20001e34 	.word	0x20001e34

08002254 <svcKernelRunning>:
 8002254:	4b01      	ldr	r3, [pc, #4]	; (800225c <svcKernelRunning+0x8>)
 8002256:	7818      	ldrb	r0, [r3, #0]
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop
 800225c:	20001e2d 	.word	0x20001e2d

08002260 <osKernelRunning>:
 8002260:	b510      	push	{r4, lr}
 8002262:	f3ef 8410 	mrs	r4, PRIMASK
 8002266:	b934      	cbnz	r4, 8002276 <osKernelRunning+0x16>
 8002268:	f3ef 8405 	mrs	r4, IPSR
 800226c:	b91c      	cbnz	r4, 8002276 <osKernelRunning+0x16>
 800226e:	f3ef 8414 	mrs	r4, CONTROL
 8002272:	07e4      	lsls	r4, r4, #31
 8002274:	d402      	bmi.n	800227c <osKernelRunning+0x1c>
 8002276:	4b03      	ldr	r3, [pc, #12]	; (8002284 <osKernelRunning+0x24>)
 8002278:	7818      	ldrb	r0, [r3, #0]
 800227a:	bd10      	pop	{r4, pc}
 800227c:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002288 <osKernelRunning+0x28>
 8002280:	df00      	svc	0
 8002282:	bd10      	pop	{r4, pc}
 8002284:	20001e2d 	.word	0x20001e2d
 8002288:	08002255 	.word	0x08002255

0800228c <osKernelStart>:
 800228c:	b590      	push	{r4, r7, lr}
 800228e:	b089      	sub	sp, #36	; 0x24
 8002290:	af00      	add	r7, sp, #0
 8002292:	f3ef 8310 	mrs	r3, PRIMASK
 8002296:	2b00      	cmp	r3, #0
 8002298:	d137      	bne.n	800230a <osKernelStart+0x7e>
 800229a:	f3ef 8305 	mrs	r3, IPSR
 800229e:	2b00      	cmp	r3, #0
 80022a0:	d133      	bne.n	800230a <osKernelStart+0x7e>
 80022a2:	f7ff ffdd 	bl	8002260 <osKernelRunning>
 80022a6:	b928      	cbnz	r0, 80022b4 <osKernelStart+0x28>
 80022a8:	4c19      	ldr	r4, [pc, #100]	; (8002310 <osKernelStart+0x84>)
 80022aa:	6824      	ldr	r4, [r4, #0]
 80022ac:	b114      	cbz	r4, 80022b4 <osKernelStart+0x28>
 80022ae:	6864      	ldr	r4, [r4, #4]
 80022b0:	b104      	cbz	r4, 80022b4 <osKernelStart+0x28>
 80022b2:	47a0      	blx	r4
 80022b4:	f3ef 8414 	mrs	r4, CONTROL
 80022b8:	f004 0403 	and.w	r4, r4, #3
 80022bc:	2c02      	cmp	r4, #2
 80022be:	d018      	beq.n	80022f2 <osKernelStart+0x66>
 80022c0:	2c03      	cmp	r4, #3
 80022c2:	d01c      	beq.n	80022fe <osKernelStart+0x72>
 80022c4:	2c01      	cmp	r4, #1
 80022c6:	d01e      	beq.n	8002306 <osKernelStart+0x7a>
 80022c8:	f107 0420 	add.w	r4, r7, #32
 80022cc:	f384 8809 	msr	PSP, r4
 80022d0:	4c10      	ldr	r4, [pc, #64]	; (8002314 <osKernelStart+0x88>)
 80022d2:	7824      	ldrb	r4, [r4, #0]
 80022d4:	07e4      	lsls	r4, r4, #31
 80022d6:	d510      	bpl.n	80022fa <osKernelStart+0x6e>
 80022d8:	2402      	movs	r4, #2
 80022da:	f384 8814 	msr	CONTROL, r4
 80022de:	f3bf 8f4f 	dsb	sy
 80022e2:	f3bf 8f6f 	isb	sy
 80022e6:	f8df c030 	ldr.w	r12, [pc, #48]	; 8002318 <osKernelStart+0x8c>
 80022ea:	df00      	svc	0
 80022ec:	3724      	adds	r7, #36	; 0x24
 80022ee:	46bd      	mov	sp, r7
 80022f0:	bd90      	pop	{r4, r7, pc}
 80022f2:	4c08      	ldr	r4, [pc, #32]	; (8002314 <osKernelStart+0x88>)
 80022f4:	7824      	ldrb	r4, [r4, #0]
 80022f6:	07e4      	lsls	r4, r4, #31
 80022f8:	d4f5      	bmi.n	80022e6 <osKernelStart+0x5a>
 80022fa:	2403      	movs	r4, #3
 80022fc:	e7ed      	b.n	80022da <osKernelStart+0x4e>
 80022fe:	4c05      	ldr	r4, [pc, #20]	; (8002314 <osKernelStart+0x88>)
 8002300:	7824      	ldrb	r4, [r4, #0]
 8002302:	07e4      	lsls	r4, r4, #31
 8002304:	d5ef      	bpl.n	80022e6 <osKernelStart+0x5a>
 8002306:	20ff      	movs	r0, #255	; 0xff
 8002308:	e7f0      	b.n	80022ec <osKernelStart+0x60>
 800230a:	2082      	movs	r0, #130	; 0x82
 800230c:	e7ee      	b.n	80022ec <osKernelStart+0x60>
 800230e:	bf00      	nop
 8002310:	20001e1c 	.word	0x20001e1c
 8002314:	080068b6 	.word	0x080068b6
 8002318:	08002211 	.word	0x08002211

0800231c <svcThreadCreate>:
 800231c:	b570      	push	{r4, r5, r6, lr}
 800231e:	460b      	mov	r3, r1
 8002320:	4616      	mov	r6, r2
 8002322:	4602      	mov	r2, r0
 8002324:	b910      	cbnz	r0, 800232c <svcThreadCreate+0x10>
 8002326:	2400      	movs	r4, #0
 8002328:	4620      	mov	r0, r4
 800232a:	bd70      	pop	{r4, r5, r6, pc}
 800232c:	6800      	ldr	r0, [r0, #0]
 800232e:	2800      	cmp	r0, #0
 8002330:	d0f9      	beq.n	8002326 <svcThreadCreate+0xa>
 8002332:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8002336:	1ce5      	adds	r5, r4, #3
 8002338:	b2ad      	uxth	r5, r5
 800233a:	2d06      	cmp	r5, #6
 800233c:	d8f3      	bhi.n	8002326 <svcThreadCreate+0xa>
 800233e:	68d1      	ldr	r1, [r2, #12]
 8002340:	b1c1      	cbz	r1, 8002374 <svcThreadCreate+0x58>
 8002342:	6912      	ldr	r2, [r2, #16]
 8002344:	3404      	adds	r4, #4
 8002346:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 800234a:	f000 fb19 	bl	8002980 <rt_tsk_create>
 800234e:	2800      	cmp	r0, #0
 8002350:	d0e9      	beq.n	8002326 <svcThreadCreate+0xa>
 8002352:	4b0a      	ldr	r3, [pc, #40]	; (800237c <svcThreadCreate+0x60>)
 8002354:	4a0a      	ldr	r2, [pc, #40]	; (8002380 <svcThreadCreate+0x64>)
 8002356:	3801      	subs	r0, #1
 8002358:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800235c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800235e:	635a      	str	r2, [r3, #52]	; 0x34
 8002360:	4b08      	ldr	r3, [pc, #32]	; (8002384 <svcThreadCreate+0x68>)
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	b143      	cbz	r3, 8002378 <svcThreadCreate+0x5c>
 8002366:	689b      	ldr	r3, [r3, #8]
 8002368:	b133      	cbz	r3, 8002378 <svcThreadCreate+0x5c>
 800236a:	4631      	mov	r1, r6
 800236c:	78e0      	ldrb	r0, [r4, #3]
 800236e:	4798      	blx	r3
 8002370:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002372:	e7d9      	b.n	8002328 <svcThreadCreate+0xc>
 8002374:	460a      	mov	r2, r1
 8002376:	e7e5      	b.n	8002344 <svcThreadCreate+0x28>
 8002378:	63e6      	str	r6, [r4, #60]	; 0x3c
 800237a:	e7d5      	b.n	8002328 <svcThreadCreate+0xc>
 800237c:	20001850 	.word	0x20001850
 8002380:	08002525 	.word	0x08002525
 8002384:	20001e1c 	.word	0x20001e1c

08002388 <svcThreadGetId>:
 8002388:	b508      	push	{r3, lr}
 800238a:	f000 fab3 	bl	80028f4 <rt_tsk_self>
 800238e:	b118      	cbz	r0, 8002398 <svcThreadGetId+0x10>
 8002390:	3801      	subs	r0, #1
 8002392:	4b02      	ldr	r3, [pc, #8]	; (800239c <svcThreadGetId+0x14>)
 8002394:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002398:	bd08      	pop	{r3, pc}
 800239a:	bf00      	nop
 800239c:	20001850 	.word	0x20001850

080023a0 <svcThreadTerminate>:
 80023a0:	b510      	push	{r4, lr}
 80023a2:	f7ff ff2b 	bl	80021fc <rt_tid2ptcb>
 80023a6:	4604      	mov	r4, r0
 80023a8:	b170      	cbz	r0, 80023c8 <svcThreadTerminate+0x28>
 80023aa:	4b08      	ldr	r3, [pc, #32]	; (80023cc <svcThreadTerminate+0x2c>)
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	b11b      	cbz	r3, 80023b8 <svcThreadTerminate+0x18>
 80023b0:	68db      	ldr	r3, [r3, #12]
 80023b2:	b10b      	cbz	r3, 80023b8 <svcThreadTerminate+0x18>
 80023b4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80023b6:	4798      	blx	r3
 80023b8:	78e0      	ldrb	r0, [r4, #3]
 80023ba:	f000 fb37 	bl	8002a2c <rt_tsk_delete>
 80023be:	28ff      	cmp	r0, #255	; 0xff
 80023c0:	bf0c      	ite	eq
 80023c2:	2081      	moveq	r0, #129	; 0x81
 80023c4:	2000      	movne	r0, #0
 80023c6:	bd10      	pop	{r4, pc}
 80023c8:	2080      	movs	r0, #128	; 0x80
 80023ca:	bd10      	pop	{r4, pc}
 80023cc:	20001e1c 	.word	0x20001e1c

080023d0 <svcDelay>:
 80023d0:	b508      	push	{r3, lr}
 80023d2:	b128      	cbz	r0, 80023e0 <svcDelay+0x10>
 80023d4:	f7ff fef2 	bl	80021bc <rt_ms2tick>
 80023d8:	f000 fd8e 	bl	8002ef8 <rt_dly_wait>
 80023dc:	2040      	movs	r0, #64	; 0x40
 80023de:	bd08      	pop	{r3, pc}
 80023e0:	bd08      	pop	{r3, pc}
	...

080023e4 <osDelay>:
 80023e4:	b510      	push	{r4, lr}
 80023e6:	f3ef 8410 	mrs	r4, PRIMASK
 80023ea:	b934      	cbnz	r4, 80023fa <osDelay+0x16>
 80023ec:	f3ef 8405 	mrs	r4, IPSR
 80023f0:	b91c      	cbnz	r4, 80023fa <osDelay+0x16>
 80023f2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002400 <osDelay+0x1c>
 80023f6:	df00      	svc	0
 80023f8:	bd10      	pop	{r4, pc}
 80023fa:	2082      	movs	r0, #130	; 0x82
 80023fc:	bd10      	pop	{r4, pc}
 80023fe:	0000      	.short	0x0000
 8002400:	080023d1 	.word	0x080023d1

08002404 <svcTimerCall>:
 8002404:	0783      	lsls	r3, r0, #30
 8002406:	d105      	bne.n	8002414 <svcTimerCall+0x10>
 8002408:	b138      	cbz	r0, 800241a <svcTimerCall+0x16>
 800240a:	6943      	ldr	r3, [r0, #20]
 800240c:	6901      	ldr	r1, [r0, #16]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	4618      	mov	r0, r3
 8002412:	4770      	bx	lr
 8002414:	2300      	movs	r3, #0
 8002416:	4619      	mov	r1, r3
 8002418:	e7fa      	b.n	8002410 <svcTimerCall+0xc>
 800241a:	4603      	mov	r3, r0
 800241c:	e7fb      	b.n	8002416 <svcTimerCall+0x12>
	...

08002420 <osTimerCall>:
 8002420:	b510      	push	{r4, lr}
 8002422:	4604      	mov	r4, r0
 8002424:	4608      	mov	r0, r1
 8002426:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002434 <osTimerCall+0x14>
 800242a:	df00      	svc	0
 800242c:	e884 0003 	stmia.w	r4, {r0, r1}
 8002430:	4620      	mov	r0, r4
 8002432:	bd10      	pop	{r4, pc}
 8002434:	08002405 	.word	0x08002405

08002438 <svcMutexCreate>:
 8002438:	b510      	push	{r4, lr}
 800243a:	b148      	cbz	r0, 8002450 <svcMutexCreate+0x18>
 800243c:	6804      	ldr	r4, [r0, #0]
 800243e:	b124      	cbz	r4, 800244a <svcMutexCreate+0x12>
 8002440:	7823      	ldrb	r3, [r4, #0]
 8002442:	b923      	cbnz	r3, 800244e <svcMutexCreate+0x16>
 8002444:	4620      	mov	r0, r4
 8002446:	f000 fc5b 	bl	8002d00 <rt_mut_init>
 800244a:	4620      	mov	r0, r4
 800244c:	bd10      	pop	{r4, pc}
 800244e:	2000      	movs	r0, #0
 8002450:	bd10      	pop	{r4, pc}

08002452 <svcMutexWait>:
 8002452:	b570      	push	{r4, r5, r6, lr}
 8002454:	f010 0403 	ands.w	r4, r0, #3
 8002458:	4605      	mov	r5, r0
 800245a:	460e      	mov	r6, r1
 800245c:	d111      	bne.n	8002482 <svcMutexWait+0x30>
 800245e:	b180      	cbz	r0, 8002482 <svcMutexWait+0x30>
 8002460:	7803      	ldrb	r3, [r0, #0]
 8002462:	2b03      	cmp	r3, #3
 8002464:	d10d      	bne.n	8002482 <svcMutexWait+0x30>
 8002466:	4608      	mov	r0, r1
 8002468:	f7ff fea8 	bl	80021bc <rt_ms2tick>
 800246c:	4601      	mov	r1, r0
 800246e:	4628      	mov	r0, r5
 8002470:	f000 fd14 	bl	8002e9c <rt_mut_wait>
 8002474:	2801      	cmp	r0, #1
 8002476:	d106      	bne.n	8002486 <svcMutexWait+0x34>
 8002478:	2e00      	cmp	r6, #0
 800247a:	bf14      	ite	ne
 800247c:	20c1      	movne	r0, #193	; 0xc1
 800247e:	2081      	moveq	r0, #129	; 0x81
 8002480:	bd70      	pop	{r4, r5, r6, pc}
 8002482:	2080      	movs	r0, #128	; 0x80
 8002484:	bd70      	pop	{r4, r5, r6, pc}
 8002486:	4620      	mov	r0, r4
 8002488:	bd70      	pop	{r4, r5, r6, pc}

0800248a <svcMutexRelease>:
 800248a:	0782      	lsls	r2, r0, #30
 800248c:	b508      	push	{r3, lr}
 800248e:	d10a      	bne.n	80024a6 <svcMutexRelease+0x1c>
 8002490:	b148      	cbz	r0, 80024a6 <svcMutexRelease+0x1c>
 8002492:	7803      	ldrb	r3, [r0, #0]
 8002494:	2b03      	cmp	r3, #3
 8002496:	d106      	bne.n	80024a6 <svcMutexRelease+0x1c>
 8002498:	f000 fc90 	bl	8002dbc <rt_mut_release>
 800249c:	28ff      	cmp	r0, #255	; 0xff
 800249e:	bf0c      	ite	eq
 80024a0:	2081      	moveq	r0, #129	; 0x81
 80024a2:	2000      	movne	r0, #0
 80024a4:	bd08      	pop	{r3, pc}
 80024a6:	2080      	movs	r0, #128	; 0x80
 80024a8:	bd08      	pop	{r3, pc}

080024aa <svcMutexDelete>:
 80024aa:	b510      	push	{r4, lr}
 80024ac:	f010 0403 	ands.w	r4, r0, #3
 80024b0:	d107      	bne.n	80024c2 <svcMutexDelete+0x18>
 80024b2:	b130      	cbz	r0, 80024c2 <svcMutexDelete+0x18>
 80024b4:	7803      	ldrb	r3, [r0, #0]
 80024b6:	2b03      	cmp	r3, #3
 80024b8:	d103      	bne.n	80024c2 <svcMutexDelete+0x18>
 80024ba:	f000 fc29 	bl	8002d10 <rt_mut_delete>
 80024be:	4620      	mov	r0, r4
 80024c0:	bd10      	pop	{r4, pc}
 80024c2:	2080      	movs	r0, #128	; 0x80
 80024c4:	bd10      	pop	{r4, pc}
	...

080024c8 <osMutexCreate>:
 80024c8:	b570      	push	{r4, r5, r6, lr}
 80024ca:	4605      	mov	r5, r0
 80024cc:	f3ef 8410 	mrs	r4, PRIMASK
 80024d0:	b994      	cbnz	r4, 80024f8 <osMutexCreate+0x30>
 80024d2:	f3ef 8605 	mrs	r6, IPSR
 80024d6:	b97e      	cbnz	r6, 80024f8 <osMutexCreate+0x30>
 80024d8:	f3ef 8414 	mrs	r4, CONTROL
 80024dc:	07e4      	lsls	r4, r4, #31
 80024de:	d406      	bmi.n	80024ee <osMutexCreate+0x26>
 80024e0:	4c06      	ldr	r4, [pc, #24]	; (80024fc <osMutexCreate+0x34>)
 80024e2:	7824      	ldrb	r4, [r4, #0]
 80024e4:	b91c      	cbnz	r4, 80024ee <osMutexCreate+0x26>
 80024e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024ea:	f7ff bfa5 	b.w	8002438 <svcMutexCreate>
 80024ee:	4628      	mov	r0, r5
 80024f0:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002500 <osMutexCreate+0x38>
 80024f4:	df00      	svc	0
 80024f6:	bd70      	pop	{r4, r5, r6, pc}
 80024f8:	2000      	movs	r0, #0
 80024fa:	bd70      	pop	{r4, r5, r6, pc}
 80024fc:	20001e2d 	.word	0x20001e2d
 8002500:	08002439 	.word	0x08002439

08002504 <osMutexWait>:
 8002504:	b510      	push	{r4, lr}
 8002506:	f3ef 8410 	mrs	r4, PRIMASK
 800250a:	b934      	cbnz	r4, 800251a <osMutexWait+0x16>
 800250c:	f3ef 8405 	mrs	r4, IPSR
 8002510:	b91c      	cbnz	r4, 800251a <osMutexWait+0x16>
 8002512:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002520 <osMutexWait+0x1c>
 8002516:	df00      	svc	0
 8002518:	bd10      	pop	{r4, pc}
 800251a:	2082      	movs	r0, #130	; 0x82
 800251c:	bd10      	pop	{r4, pc}
 800251e:	0000      	.short	0x0000
 8002520:	08002453 	.word	0x08002453

08002524 <osThreadExit>:
 8002524:	4808      	ldr	r0, [pc, #32]	; (8002548 <osThreadExit+0x24>)
 8002526:	b508      	push	{r3, lr}
 8002528:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800252c:	6800      	ldr	r0, [r0, #0]
 800252e:	f7ff ffe9 	bl	8002504 <osMutexWait>
 8002532:	f8df c018 	ldr.w	r12, [pc, #24]	; 800254c <osThreadExit+0x28>
 8002536:	df00      	svc	0
 8002538:	4604      	mov	r4, r0
 800253a:	f7ff fa4b 	bl	80019d4 <sysThreadTerminate>
 800253e:	4620      	mov	r0, r4
 8002540:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002550 <osThreadExit+0x2c>
 8002544:	df00      	svc	0
 8002546:	e7fe      	b.n	8002546 <osThreadExit+0x22>
 8002548:	20001e28 	.word	0x20001e28
 800254c:	08002389 	.word	0x08002389
 8002550:	080023a1 	.word	0x080023a1

08002554 <osMutexRelease>:
 8002554:	b510      	push	{r4, lr}
 8002556:	f3ef 8410 	mrs	r4, PRIMASK
 800255a:	b934      	cbnz	r4, 800256a <osMutexRelease+0x16>
 800255c:	f3ef 8405 	mrs	r4, IPSR
 8002560:	b91c      	cbnz	r4, 800256a <osMutexRelease+0x16>
 8002562:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002570 <osMutexRelease+0x1c>
 8002566:	df00      	svc	0
 8002568:	bd10      	pop	{r4, pc}
 800256a:	2082      	movs	r0, #130	; 0x82
 800256c:	bd10      	pop	{r4, pc}
 800256e:	0000      	.short	0x0000
 8002570:	0800248b 	.word	0x0800248b

08002574 <osThreadContextCreate>:
 8002574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002578:	4680      	mov	r8, r0
 800257a:	460f      	mov	r7, r1
 800257c:	4616      	mov	r6, r2
 800257e:	f3ef 8410 	mrs	r4, PRIMASK
 8002582:	bb04      	cbnz	r4, 80025c6 <osThreadContextCreate+0x52>
 8002584:	f3ef 8305 	mrs	r3, IPSR
 8002588:	b9d3      	cbnz	r3, 80025c0 <osThreadContextCreate+0x4c>
 800258a:	f3ef 8314 	mrs	r3, CONTROL
 800258e:	07db      	lsls	r3, r3, #31
 8002590:	d406      	bmi.n	80025a0 <osThreadContextCreate+0x2c>
 8002592:	4b0e      	ldr	r3, [pc, #56]	; (80025cc <osThreadContextCreate+0x58>)
 8002594:	781b      	ldrb	r3, [r3, #0]
 8002596:	b91b      	cbnz	r3, 80025a0 <osThreadContextCreate+0x2c>
 8002598:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800259c:	f7ff bebe 	b.w	800231c <svcThreadCreate>
 80025a0:	4d0b      	ldr	r5, [pc, #44]	; (80025d0 <osThreadContextCreate+0x5c>)
 80025a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80025a6:	6828      	ldr	r0, [r5, #0]
 80025a8:	f7ff ffac 	bl	8002504 <osMutexWait>
 80025ac:	4640      	mov	r0, r8
 80025ae:	4639      	mov	r1, r7
 80025b0:	4632      	mov	r2, r6
 80025b2:	f8df c020 	ldr.w	r12, [pc, #32]	; 80025d4 <osThreadContextCreate+0x60>
 80025b6:	df00      	svc	0
 80025b8:	4604      	mov	r4, r0
 80025ba:	6828      	ldr	r0, [r5, #0]
 80025bc:	f7ff ffca 	bl	8002554 <osMutexRelease>
 80025c0:	4620      	mov	r0, r4
 80025c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025c6:	2400      	movs	r4, #0
 80025c8:	e7fa      	b.n	80025c0 <osThreadContextCreate+0x4c>
 80025ca:	bf00      	nop
 80025cc:	20001e2d 	.word	0x20001e2d
 80025d0:	20001e28 	.word	0x20001e28
 80025d4:	0800231d 	.word	0x0800231d

080025d8 <osThreadCreate>:
 80025d8:	2200      	movs	r2, #0
 80025da:	f7ff bfcb 	b.w	8002574 <osThreadContextCreate>
	...

080025e0 <osMutexDelete>:
 80025e0:	b510      	push	{r4, lr}
 80025e2:	f3ef 8410 	mrs	r4, PRIMASK
 80025e6:	b934      	cbnz	r4, 80025f6 <osMutexDelete+0x16>
 80025e8:	f3ef 8405 	mrs	r4, IPSR
 80025ec:	b91c      	cbnz	r4, 80025f6 <osMutexDelete+0x16>
 80025ee:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80025fc <osMutexDelete+0x1c>
 80025f2:	df00      	svc	0
 80025f4:	bd10      	pop	{r4, pc}
 80025f6:	2082      	movs	r0, #130	; 0x82
 80025f8:	bd10      	pop	{r4, pc}
 80025fa:	0000      	.short	0x0000
 80025fc:	080024ab 	.word	0x080024ab

08002600 <svcMessageCreate>:
 8002600:	b510      	push	{r4, lr}
 8002602:	4604      	mov	r4, r0
 8002604:	b160      	cbz	r0, 8002620 <svcMessageCreate+0x20>
 8002606:	6801      	ldr	r1, [r0, #0]
 8002608:	b151      	cbz	r1, 8002620 <svcMessageCreate+0x20>
 800260a:	6840      	ldr	r0, [r0, #4]
 800260c:	b148      	cbz	r0, 8002622 <svcMessageCreate+0x22>
 800260e:	7803      	ldrb	r3, [r0, #0]
 8002610:	b933      	cbnz	r3, 8002620 <svcMessageCreate+0x20>
 8002612:	3104      	adds	r1, #4
 8002614:	0089      	lsls	r1, r1, #2
 8002616:	b289      	uxth	r1, r1
 8002618:	f7ff fc52 	bl	8001ec0 <rt_mbx_init>
 800261c:	6860      	ldr	r0, [r4, #4]
 800261e:	bd10      	pop	{r4, pc}
 8002620:	2000      	movs	r0, #0
 8002622:	bd10      	pop	{r4, pc}

08002624 <svcKernelInitialize>:
 8002624:	b538      	push	{r3, r4, r5, lr}
 8002626:	4c11      	ldr	r4, [pc, #68]	; (800266c <svcKernelInitialize+0x48>)
 8002628:	7823      	ldrb	r3, [r4, #0]
 800262a:	b90b      	cbnz	r3, 8002630 <svcKernelInitialize+0xc>
 800262c:	f000 faa8 	bl	8002b80 <rt_sys_init>
 8002630:	4b0f      	ldr	r3, [pc, #60]	; (8002670 <svcKernelInitialize+0x4c>)
 8002632:	7825      	ldrb	r5, [r4, #0]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	22ff      	movs	r2, #255	; 0xff
 8002638:	709a      	strb	r2, [r3, #2]
 800263a:	b98d      	cbnz	r5, 8002660 <svcKernelInitialize+0x3c>
 800263c:	4629      	mov	r1, r5
 800263e:	480d      	ldr	r0, [pc, #52]	; (8002674 <svcKernelInitialize+0x50>)
 8002640:	f7ff ffde 	bl	8002600 <svcMessageCreate>
 8002644:	4b0c      	ldr	r3, [pc, #48]	; (8002678 <svcKernelInitialize+0x54>)
 8002646:	462a      	mov	r2, r5
 8002648:	6018      	str	r0, [r3, #0]
 800264a:	4629      	mov	r1, r5
 800264c:	480b      	ldr	r0, [pc, #44]	; (800267c <svcKernelInitialize+0x58>)
 800264e:	f7ff fe65 	bl	800231c <svcThreadCreate>
 8002652:	4b0b      	ldr	r3, [pc, #44]	; (8002680 <svcKernelInitialize+0x5c>)
 8002654:	6018      	str	r0, [r3, #0]
 8002656:	480b      	ldr	r0, [pc, #44]	; (8002684 <svcKernelInitialize+0x60>)
 8002658:	f7ff ff36 	bl	80024c8 <osMutexCreate>
 800265c:	4b0a      	ldr	r3, [pc, #40]	; (8002688 <svcKernelInitialize+0x64>)
 800265e:	6018      	str	r0, [r3, #0]
 8002660:	2301      	movs	r3, #1
 8002662:	7023      	strb	r3, [r4, #0]
 8002664:	4b09      	ldr	r3, [pc, #36]	; (800268c <svcKernelInitialize+0x68>)
 8002666:	2000      	movs	r0, #0
 8002668:	7018      	strb	r0, [r3, #0]
 800266a:	bd38      	pop	{r3, r4, r5, pc}
 800266c:	20001e2c 	.word	0x20001e2c
 8002670:	20001e34 	.word	0x20001e34
 8002674:	080068bc 	.word	0x080068bc
 8002678:	200018f0 	.word	0x200018f0
 800267c:	080068d8 	.word	0x080068d8
 8002680:	20001de4 	.word	0x20001de4
 8002684:	080068f0 	.word	0x080068f0
 8002688:	20001e28 	.word	0x20001e28
 800268c:	20001e2d 	.word	0x20001e2d

08002690 <osKernelInitialize>:
 8002690:	b510      	push	{r4, lr}
 8002692:	f3ef 8410 	mrs	r4, PRIMASK
 8002696:	b974      	cbnz	r4, 80026b6 <osKernelInitialize+0x26>
 8002698:	f3ef 8405 	mrs	r4, IPSR
 800269c:	b95c      	cbnz	r4, 80026b6 <osKernelInitialize+0x26>
 800269e:	f3ef 8414 	mrs	r4, CONTROL
 80026a2:	07e4      	lsls	r4, r4, #31
 80026a4:	d403      	bmi.n	80026ae <osKernelInitialize+0x1e>
 80026a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026aa:	f7ff bfbb 	b.w	8002624 <svcKernelInitialize>
 80026ae:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80026bc <osKernelInitialize+0x2c>
 80026b2:	df00      	svc	0
 80026b4:	bd10      	pop	{r4, pc}
 80026b6:	2082      	movs	r0, #130	; 0x82
 80026b8:	bd10      	pop	{r4, pc}
 80026ba:	0000      	.short	0x0000
 80026bc:	08002625 	.word	0x08002625

080026c0 <svcMessageGet>:
 80026c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80026c4:	460c      	mov	r4, r1
 80026c6:	4680      	mov	r8, r0
 80026c8:	b318      	cbz	r0, 8002712 <svcMessageGet+0x52>
 80026ca:	7803      	ldrb	r3, [r0, #0]
 80026cc:	2b01      	cmp	r3, #1
 80026ce:	d125      	bne.n	800271c <svcMessageGet+0x5c>
 80026d0:	4608      	mov	r0, r1
 80026d2:	f7ff fd73 	bl	80021bc <rt_ms2tick>
 80026d6:	a902      	add	r1, sp, #8
 80026d8:	4602      	mov	r2, r0
 80026da:	4640      	mov	r0, r8
 80026dc:	f7ff fbfe 	bl	8001edc <rt_mbx_wait>
 80026e0:	2801      	cmp	r0, #1
 80026e2:	d111      	bne.n	8002708 <svcMessageGet+0x48>
 80026e4:	2000      	movs	r0, #0
 80026e6:	2c00      	cmp	r4, #0
 80026e8:	4602      	mov	r2, r0
 80026ea:	4603      	mov	r3, r0
 80026ec:	bf18      	it	ne
 80026ee:	2040      	movne	r0, #64	; 0x40
 80026f0:	9902      	ldr	r1, [sp, #8]
 80026f2:	4604      	mov	r4, r0
 80026f4:	460d      	mov	r5, r1
 80026f6:	4616      	mov	r6, r2
 80026f8:	461f      	mov	r7, r3
 80026fa:	4620      	mov	r0, r4
 80026fc:	4629      	mov	r1, r5
 80026fe:	4632      	mov	r2, r6
 8002700:	463b      	mov	r3, r7
 8002702:	b004      	add	sp, #16
 8002704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002708:	2000      	movs	r0, #0
 800270a:	4602      	mov	r2, r0
 800270c:	4603      	mov	r3, r0
 800270e:	2010      	movs	r0, #16
 8002710:	e7ee      	b.n	80026f0 <svcMessageGet+0x30>
 8002712:	2480      	movs	r4, #128	; 0x80
 8002714:	4605      	mov	r5, r0
 8002716:	4606      	mov	r6, r0
 8002718:	4607      	mov	r7, r0
 800271a:	e7ee      	b.n	80026fa <svcMessageGet+0x3a>
 800271c:	2500      	movs	r5, #0
 800271e:	2480      	movs	r4, #128	; 0x80
 8002720:	462e      	mov	r6, r5
 8002722:	462f      	mov	r7, r5
 8002724:	e7e9      	b.n	80026fa <svcMessageGet+0x3a>

08002726 <isrMessagePut>:
 8002726:	b570      	push	{r4, r5, r6, lr}
 8002728:	460e      	mov	r6, r1
 800272a:	4614      	mov	r4, r2
 800272c:	4605      	mov	r5, r0
 800272e:	b160      	cbz	r0, 800274a <isrMessagePut+0x24>
 8002730:	b95a      	cbnz	r2, 800274a <isrMessagePut+0x24>
 8002732:	7803      	ldrb	r3, [r0, #0]
 8002734:	2b01      	cmp	r3, #1
 8002736:	d108      	bne.n	800274a <isrMessagePut+0x24>
 8002738:	f7ff fc26 	bl	8001f88 <rt_mbx_check>
 800273c:	b138      	cbz	r0, 800274e <isrMessagePut+0x28>
 800273e:	4628      	mov	r0, r5
 8002740:	4631      	mov	r1, r6
 8002742:	f7ff fc25 	bl	8001f90 <isr_mbx_send>
 8002746:	4620      	mov	r0, r4
 8002748:	bd70      	pop	{r4, r5, r6, pc}
 800274a:	2080      	movs	r0, #128	; 0x80
 800274c:	bd70      	pop	{r4, r5, r6, pc}
 800274e:	2081      	movs	r0, #129	; 0x81
 8002750:	bd70      	pop	{r4, r5, r6, pc}
	...

08002754 <sysTimerTick>:
 8002754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002756:	4e11      	ldr	r6, [pc, #68]	; (800279c <sysTimerTick+0x48>)
 8002758:	6834      	ldr	r4, [r6, #0]
 800275a:	b12c      	cbz	r4, 8002768 <sysTimerTick+0x14>
 800275c:	68a3      	ldr	r3, [r4, #8]
 800275e:	4f10      	ldr	r7, [pc, #64]	; (80027a0 <sysTimerTick+0x4c>)
 8002760:	3b01      	subs	r3, #1
 8002762:	60a3      	str	r3, [r4, #8]
 8002764:	68a2      	ldr	r2, [r4, #8]
 8002766:	b102      	cbz	r2, 800276a <sysTimerTick+0x16>
 8002768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800276a:	6825      	ldr	r5, [r4, #0]
 800276c:	6838      	ldr	r0, [r7, #0]
 800276e:	6035      	str	r5, [r6, #0]
 8002770:	4621      	mov	r1, r4
 8002772:	f7ff ffd8 	bl	8002726 <isrMessagePut>
 8002776:	b110      	cbz	r0, 800277e <sysTimerTick+0x2a>
 8002778:	2004      	movs	r0, #4
 800277a:	f7ff f91d 	bl	80019b8 <os_error>
 800277e:	7963      	ldrb	r3, [r4, #5]
 8002780:	2b01      	cmp	r3, #1
 8002782:	d107      	bne.n	8002794 <sysTimerTick+0x40>
 8002784:	68e1      	ldr	r1, [r4, #12]
 8002786:	4620      	mov	r0, r4
 8002788:	f7ff fcfe 	bl	8002188 <rt_timer_insert>
 800278c:	2d00      	cmp	r5, #0
 800278e:	d0eb      	beq.n	8002768 <sysTimerTick+0x14>
 8002790:	462c      	mov	r4, r5
 8002792:	e7e7      	b.n	8002764 <sysTimerTick+0x10>
 8002794:	2301      	movs	r3, #1
 8002796:	7123      	strb	r3, [r4, #4]
 8002798:	e7f8      	b.n	800278c <sysTimerTick+0x38>
 800279a:	bf00      	nop
 800279c:	20001e30 	.word	0x20001e30
 80027a0:	200018f0 	.word	0x200018f0

080027a4 <isrMessageGet>:
 80027a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80027a6:	4604      	mov	r4, r0
 80027a8:	4616      	mov	r6, r2
 80027aa:	4608      	mov	r0, r1
 80027ac:	b101      	cbz	r1, 80027b0 <isrMessageGet+0xc>
 80027ae:	b122      	cbz	r2, 80027ba <isrMessageGet+0x16>
 80027b0:	2380      	movs	r3, #128	; 0x80
 80027b2:	6023      	str	r3, [r4, #0]
 80027b4:	4620      	mov	r0, r4
 80027b6:	b004      	add	sp, #16
 80027b8:	bd70      	pop	{r4, r5, r6, pc}
 80027ba:	780b      	ldrb	r3, [r1, #0]
 80027bc:	2b01      	cmp	r3, #1
 80027be:	d1f7      	bne.n	80027b0 <isrMessageGet+0xc>
 80027c0:	a902      	add	r1, sp, #8
 80027c2:	f7ff fbec 	bl	8001f9e <isr_mbx_receive>
 80027c6:	2804      	cmp	r0, #4
 80027c8:	bf08      	it	eq
 80027ca:	2310      	moveq	r3, #16
 80027cc:	ad01      	add	r5, sp, #4
 80027ce:	bf14      	ite	ne
 80027d0:	9601      	strne	r6, [sp, #4]
 80027d2:	9301      	streq	r3, [sp, #4]
 80027d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027d8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80027dc:	e7ea      	b.n	80027b4 <isrMessageGet+0x10>
	...

080027e0 <osMessageGet>:
 80027e0:	b538      	push	{r3, r4, r5, lr}
 80027e2:	4604      	mov	r4, r0
 80027e4:	4615      	mov	r5, r2
 80027e6:	f3ef 8010 	mrs	r0, PRIMASK
 80027ea:	b910      	cbnz	r0, 80027f2 <osMessageGet+0x12>
 80027ec:	f3ef 8005 	mrs	r0, IPSR
 80027f0:	b128      	cbz	r0, 80027fe <osMessageGet+0x1e>
 80027f2:	462a      	mov	r2, r5
 80027f4:	4620      	mov	r0, r4
 80027f6:	f7ff ffd5 	bl	80027a4 <isrMessageGet>
 80027fa:	4620      	mov	r0, r4
 80027fc:	bd38      	pop	{r3, r4, r5, pc}
 80027fe:	4608      	mov	r0, r1
 8002800:	4611      	mov	r1, r2
 8002802:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002810 <osMessageGet+0x30>
 8002806:	df00      	svc	0
 8002808:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800280c:	e7f5      	b.n	80027fa <osMessageGet+0x1a>
 800280e:	0000      	.short	0x0000
 8002810:	080026c1 	.word	0x080026c1

08002814 <osTimerThread>:
 8002814:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002816:	4c0a      	ldr	r4, [pc, #40]	; (8002840 <osTimerThread+0x2c>)
 8002818:	6821      	ldr	r1, [r4, #0]
 800281a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800281e:	a803      	add	r0, sp, #12
 8002820:	f7ff ffde 	bl	80027e0 <osMessageGet>
 8002824:	9b03      	ldr	r3, [sp, #12]
 8002826:	2b10      	cmp	r3, #16
 8002828:	d1f6      	bne.n	8002818 <osTimerThread+0x4>
 800282a:	9904      	ldr	r1, [sp, #16]
 800282c:	a801      	add	r0, sp, #4
 800282e:	f7ff fdf7 	bl	8002420 <osTimerCall>
 8002832:	9b01      	ldr	r3, [sp, #4]
 8002834:	2b00      	cmp	r3, #0
 8002836:	d0ef      	beq.n	8002818 <osTimerThread+0x4>
 8002838:	9802      	ldr	r0, [sp, #8]
 800283a:	4798      	blx	r3
 800283c:	e7ec      	b.n	8002818 <osTimerThread+0x4>
 800283e:	bf00      	nop
 8002840:	200018f0 	.word	0x200018f0

08002844 <rt_switch_req>:
 8002844:	4b05      	ldr	r3, [pc, #20]	; (800285c <rt_switch_req+0x18>)
 8002846:	6058      	str	r0, [r3, #4]
 8002848:	2302      	movs	r3, #2
 800284a:	7043      	strb	r3, [r0, #1]
 800284c:	4b04      	ldr	r3, [pc, #16]	; (8002860 <rt_switch_req+0x1c>)
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	b11b      	cbz	r3, 800285a <rt_switch_req+0x16>
 8002852:	691b      	ldr	r3, [r3, #16]
 8002854:	b10b      	cbz	r3, 800285a <rt_switch_req+0x16>
 8002856:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002858:	4718      	bx	r3
 800285a:	4770      	bx	lr
 800285c:	20001e34 	.word	0x20001e34
 8002860:	20001e1c 	.word	0x20001e1c

08002864 <rt_dispatch.part.0>:
 8002864:	b508      	push	{r3, lr}
 8002866:	4803      	ldr	r0, [pc, #12]	; (8002874 <rt_dispatch.part.0+0x10>)
 8002868:	f7ff f90c 	bl	8001a84 <rt_get_first>
 800286c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002870:	f7ff bfe8 	b.w	8002844 <rt_switch_req>
 8002874:	20001de8 	.word	0x20001de8

08002878 <rt_dispatch>:
 8002878:	b570      	push	{r4, r5, r6, lr}
 800287a:	4604      	mov	r4, r0
 800287c:	b918      	cbnz	r0, 8002886 <rt_dispatch+0xe>
 800287e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002882:	f7ff bfef 	b.w	8002864 <rt_dispatch.part.0>
 8002886:	4e0c      	ldr	r6, [pc, #48]	; (80028b8 <rt_dispatch+0x40>)
 8002888:	78a2      	ldrb	r2, [r4, #2]
 800288a:	6830      	ldr	r0, [r6, #0]
 800288c:	7883      	ldrb	r3, [r0, #2]
 800288e:	429a      	cmp	r2, r3
 8002890:	f04f 0501 	mov.w	r5, #1
 8002894:	d908      	bls.n	80028a8 <rt_dispatch+0x30>
 8002896:	f7ff f907 	bl	8001aa8 <rt_put_rdy_first>
 800289a:	6833      	ldr	r3, [r6, #0]
 800289c:	705d      	strb	r5, [r3, #1]
 800289e:	4620      	mov	r0, r4
 80028a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80028a4:	f7ff bfce 	b.w	8002844 <rt_switch_req>
 80028a8:	7065      	strb	r5, [r4, #1]
 80028aa:	4621      	mov	r1, r4
 80028ac:	4803      	ldr	r0, [pc, #12]	; (80028bc <rt_dispatch+0x44>)
 80028ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80028b2:	f7ff b8cf 	b.w	8001a54 <rt_put_prio>
 80028b6:	bf00      	nop
 80028b8:	20001e34 	.word	0x20001e34
 80028bc:	20001de8 	.word	0x20001de8

080028c0 <rt_block>:
 80028c0:	b538      	push	{r3, r4, r5, lr}
 80028c2:	460d      	mov	r5, r1
 80028c4:	4601      	mov	r1, r0
 80028c6:	b180      	cbz	r0, 80028ea <rt_block+0x2a>
 80028c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028cc:	4298      	cmp	r0, r3
 80028ce:	4c07      	ldr	r4, [pc, #28]	; (80028ec <rt_block+0x2c>)
 80028d0:	d002      	beq.n	80028d8 <rt_block+0x18>
 80028d2:	6820      	ldr	r0, [r4, #0]
 80028d4:	f7ff f8f2 	bl	8001abc <rt_put_dly>
 80028d8:	6823      	ldr	r3, [r4, #0]
 80028da:	4805      	ldr	r0, [pc, #20]	; (80028f0 <rt_block+0x30>)
 80028dc:	705d      	strb	r5, [r3, #1]
 80028de:	f7ff f8d1 	bl	8001a84 <rt_get_first>
 80028e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80028e6:	f7ff bfad 	b.w	8002844 <rt_switch_req>
 80028ea:	bd38      	pop	{r3, r4, r5, pc}
 80028ec:	20001e34 	.word	0x20001e34
 80028f0:	20001de8 	.word	0x20001de8

080028f4 <rt_tsk_self>:
 80028f4:	4b02      	ldr	r3, [pc, #8]	; (8002900 <rt_tsk_self+0xc>)
 80028f6:	6818      	ldr	r0, [r3, #0]
 80028f8:	b100      	cbz	r0, 80028fc <rt_tsk_self+0x8>
 80028fa:	78c0      	ldrb	r0, [r0, #3]
 80028fc:	4770      	bx	lr
 80028fe:	bf00      	nop
 8002900:	20001e34 	.word	0x20001e34

08002904 <rt_tsk_prio>:
 8002904:	b510      	push	{r4, lr}
 8002906:	b9a8      	cbnz	r0, 8002934 <rt_tsk_prio+0x30>
 8002908:	4b19      	ldr	r3, [pc, #100]	; (8002970 <rt_tsk_prio+0x6c>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	7099      	strb	r1, [r3, #2]
 800290e:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002912:	4818      	ldr	r0, [pc, #96]	; (8002974 <rt_tsk_prio+0x70>)
 8002914:	6843      	ldr	r3, [r0, #4]
 8002916:	789b      	ldrb	r3, [r3, #2]
 8002918:	428b      	cmp	r3, r1
 800291a:	d801      	bhi.n	8002920 <rt_tsk_prio+0x1c>
 800291c:	2000      	movs	r0, #0
 800291e:	bd10      	pop	{r4, pc}
 8002920:	4c13      	ldr	r4, [pc, #76]	; (8002970 <rt_tsk_prio+0x6c>)
 8002922:	6821      	ldr	r1, [r4, #0]
 8002924:	f7ff f896 	bl	8001a54 <rt_put_prio>
 8002928:	6823      	ldr	r3, [r4, #0]
 800292a:	2201      	movs	r2, #1
 800292c:	705a      	strb	r2, [r3, #1]
 800292e:	f7ff ff99 	bl	8002864 <rt_dispatch.part.0>
 8002932:	e7f3      	b.n	800291c <rt_tsk_prio+0x18>
 8002934:	4b10      	ldr	r3, [pc, #64]	; (8002978 <rt_tsk_prio+0x74>)
 8002936:	881b      	ldrh	r3, [r3, #0]
 8002938:	4298      	cmp	r0, r3
 800293a:	d817      	bhi.n	800296c <rt_tsk_prio+0x68>
 800293c:	3801      	subs	r0, #1
 800293e:	4b0f      	ldr	r3, [pc, #60]	; (800297c <rt_tsk_prio+0x78>)
 8002940:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002944:	b194      	cbz	r4, 800296c <rt_tsk_prio+0x68>
 8002946:	4b0a      	ldr	r3, [pc, #40]	; (8002970 <rt_tsk_prio+0x6c>)
 8002948:	70a1      	strb	r1, [r4, #2]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002950:	429c      	cmp	r4, r3
 8002952:	d0de      	beq.n	8002912 <rt_tsk_prio+0xe>
 8002954:	4620      	mov	r0, r4
 8002956:	f7ff f923 	bl	8001ba0 <rt_resort_prio>
 800295a:	7863      	ldrb	r3, [r4, #1]
 800295c:	2b01      	cmp	r3, #1
 800295e:	d1dd      	bne.n	800291c <rt_tsk_prio+0x18>
 8002960:	4804      	ldr	r0, [pc, #16]	; (8002974 <rt_tsk_prio+0x70>)
 8002962:	f7ff f88f 	bl	8001a84 <rt_get_first>
 8002966:	f7ff ff87 	bl	8002878 <rt_dispatch>
 800296a:	e7d7      	b.n	800291c <rt_tsk_prio+0x18>
 800296c:	20ff      	movs	r0, #255	; 0xff
 800296e:	bd10      	pop	{r4, pc}
 8002970:	20001e34 	.word	0x20001e34
 8002974:	20001de8 	.word	0x20001de8
 8002978:	080068b8 	.word	0x080068b8
 800297c:	20001850 	.word	0x20001850

08002980 <rt_tsk_create>:
 8002980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002984:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002988:	460d      	mov	r5, r1
 800298a:	4680      	mov	r8, r0
 800298c:	4823      	ldr	r0, [pc, #140]	; (8002a1c <rt_tsk_create+0x9c>)
 800298e:	4616      	mov	r6, r2
 8002990:	469a      	mov	r10, r3
 8002992:	bf08      	it	eq
 8002994:	3501      	addeq	r5, #1
 8002996:	f7ff fa72 	bl	8001e7e <rt_alloc_box>
 800299a:	4604      	mov	r4, r0
 800299c:	b920      	cbnz	r0, 80029a8 <rt_tsk_create+0x28>
 800299e:	f04f 0900 	mov.w	r9, #0
 80029a2:	4648      	mov	r0, r9
 80029a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80029a8:	4b1d      	ldr	r3, [pc, #116]	; (8002a20 <rt_tsk_create+0xa0>)
 80029aa:	6306      	str	r6, [r0, #48]	; 0x30
 80029ac:	881b      	ldrh	r3, [r3, #0]
 80029ae:	4e1d      	ldr	r6, [pc, #116]	; (8002a24 <rt_tsk_create+0xa4>)
 80029b0:	0a28      	lsrs	r0, r5, #8
 80029b2:	62a0      	str	r0, [r4, #40]	; 0x28
 80029b4:	2100      	movs	r1, #0
 80029b6:	428b      	cmp	r3, r1
 80029b8:	f101 0901 	add.w	r9, r1, #1
 80029bc:	d0ef      	beq.n	800299e <rt_tsk_create+0x1e>
 80029be:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 80029c2:	460f      	mov	r7, r1
 80029c4:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80029c8:	4649      	mov	r1, r9
 80029ca:	2a00      	cmp	r2, #0
 80029cc:	d1f3      	bne.n	80029b6 <rt_tsk_create+0x36>
 80029ce:	b2ed      	uxtb	r5, r5
 80029d0:	2301      	movs	r3, #1
 80029d2:	f884 9003 	strb.w	r9, [r4, #3]
 80029d6:	f8c4 a01c 	str.w	r10, [r4, #28]
 80029da:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 80029de:	7022      	strb	r2, [r4, #0]
 80029e0:	7063      	strb	r3, [r4, #1]
 80029e2:	70a5      	strb	r5, [r4, #2]
 80029e4:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80029e8:	6062      	str	r2, [r4, #4]
 80029ea:	60a2      	str	r2, [r4, #8]
 80029ec:	60e2      	str	r2, [r4, #12]
 80029ee:	6122      	str	r2, [r4, #16]
 80029f0:	6222      	str	r2, [r4, #32]
 80029f2:	82a2      	strh	r2, [r4, #20]
 80029f4:	82e2      	strh	r2, [r4, #22]
 80029f6:	8322      	strh	r2, [r4, #24]
 80029f8:	8362      	strh	r2, [r4, #26]
 80029fa:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80029fe:	b918      	cbnz	r0, 8002a08 <rt_tsk_create+0x88>
 8002a00:	4809      	ldr	r0, [pc, #36]	; (8002a28 <rt_tsk_create+0xa8>)
 8002a02:	f7ff fa3c 	bl	8001e7e <rt_alloc_box>
 8002a06:	6320      	str	r0, [r4, #48]	; 0x30
 8002a08:	4620      	mov	r0, r4
 8002a0a:	4641      	mov	r1, r8
 8002a0c:	f7ff f9b2 	bl	8001d74 <rt_init_stack>
 8002a10:	4620      	mov	r0, r4
 8002a12:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002a16:	f7ff ff2f 	bl	8002878 <rt_dispatch>
 8002a1a:	e7c2      	b.n	80029a2 <rt_tsk_create+0x22>
 8002a1c:	20001c18 	.word	0x20001c18
 8002a20:	080068b8 	.word	0x080068b8
 8002a24:	20001850 	.word	0x20001850
 8002a28:	20001640 	.word	0x20001640

08002a2c <rt_tsk_delete>:
 8002a2c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002a30:	4d4d      	ldr	r5, [pc, #308]	; (8002b68 <rt_tsk_delete+0x13c>)
 8002a32:	b118      	cbz	r0, 8002a3c <rt_tsk_delete+0x10>
 8002a34:	682b      	ldr	r3, [r5, #0]
 8002a36:	78db      	ldrb	r3, [r3, #3]
 8002a38:	4298      	cmp	r0, r3
 8002a3a:	d141      	bne.n	8002ac0 <rt_tsk_delete+0x94>
 8002a3c:	682c      	ldr	r4, [r5, #0]
 8002a3e:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002b7c <rt_tsk_delete+0x150>
 8002a42:	2300      	movs	r3, #0
 8002a44:	7063      	strb	r3, [r4, #1]
 8002a46:	f002 fce6 	bl	8005416 <rt_get_PSP>
 8002a4a:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002a4c:	f7ff f980 	bl	8001d50 <rt_stk_check>
 8002a50:	682b      	ldr	r3, [r5, #0]
 8002a52:	6a1c      	ldr	r4, [r3, #32]
 8002a54:	2701      	movs	r7, #1
 8002a56:	b9a4      	cbnz	r4, 8002a82 <rt_tsk_delete+0x56>
 8002a58:	682a      	ldr	r2, [r5, #0]
 8002a5a:	4944      	ldr	r1, [pc, #272]	; (8002b6c <rt_tsk_delete+0x140>)
 8002a5c:	78d3      	ldrb	r3, [r2, #3]
 8002a5e:	4844      	ldr	r0, [pc, #272]	; (8002b70 <rt_tsk_delete+0x144>)
 8002a60:	3b01      	subs	r3, #1
 8002a62:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002a66:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002a68:	f7ff fa16 	bl	8001e98 <rt_free_box>
 8002a6c:	6829      	ldr	r1, [r5, #0]
 8002a6e:	4841      	ldr	r0, [pc, #260]	; (8002b74 <rt_tsk_delete+0x148>)
 8002a70:	630c      	str	r4, [r1, #48]	; 0x30
 8002a72:	f7ff fa11 	bl	8001e98 <rt_free_box>
 8002a76:	602c      	str	r4, [r5, #0]
 8002a78:	f7ff fef4 	bl	8002864 <rt_dispatch.part.0>
 8002a7c:	4620      	mov	r0, r4
 8002a7e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002a82:	6863      	ldr	r3, [r4, #4]
 8002a84:	b1b3      	cbz	r3, 8002ab4 <rt_tsk_delete+0x88>
 8002a86:	4620      	mov	r0, r4
 8002a88:	f7fe fffc 	bl	8001a84 <rt_get_first>
 8002a8c:	2100      	movs	r1, #0
 8002a8e:	4606      	mov	r6, r0
 8002a90:	f7ff f9bc 	bl	8001e0c <rt_ret_val>
 8002a94:	4630      	mov	r0, r6
 8002a96:	f7ff f89b 	bl	8001bd0 <rt_rmv_dly>
 8002a9a:	7077      	strb	r7, [r6, #1]
 8002a9c:	4631      	mov	r1, r6
 8002a9e:	4640      	mov	r0, r8
 8002aa0:	f7fe ffd8 	bl	8001a54 <rt_put_prio>
 8002aa4:	68e3      	ldr	r3, [r4, #12]
 8002aa6:	6a32      	ldr	r2, [r6, #32]
 8002aa8:	8067      	strh	r7, [r4, #2]
 8002aaa:	60a6      	str	r6, [r4, #8]
 8002aac:	60e2      	str	r2, [r4, #12]
 8002aae:	6234      	str	r4, [r6, #32]
 8002ab0:	461c      	mov	r4, r3
 8002ab2:	e7d0      	b.n	8002a56 <rt_tsk_delete+0x2a>
 8002ab4:	68e2      	ldr	r2, [r4, #12]
 8002ab6:	8063      	strh	r3, [r4, #2]
 8002ab8:	60a3      	str	r3, [r4, #8]
 8002aba:	60e3      	str	r3, [r4, #12]
 8002abc:	4614      	mov	r4, r2
 8002abe:	e7ca      	b.n	8002a56 <rt_tsk_delete+0x2a>
 8002ac0:	4b2d      	ldr	r3, [pc, #180]	; (8002b78 <rt_tsk_delete+0x14c>)
 8002ac2:	881b      	ldrh	r3, [r3, #0]
 8002ac4:	4298      	cmp	r0, r3
 8002ac6:	d84d      	bhi.n	8002b64 <rt_tsk_delete+0x138>
 8002ac8:	4b28      	ldr	r3, [pc, #160]	; (8002b6c <rt_tsk_delete+0x140>)
 8002aca:	1e47      	subs	r7, r0, #1
 8002acc:	4699      	mov	r9, r3
 8002ace:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002ad2:	2e00      	cmp	r6, #0
 8002ad4:	d046      	beq.n	8002b64 <rt_tsk_delete+0x138>
 8002ad6:	4630      	mov	r0, r6
 8002ad8:	f7ff f84c 	bl	8001b74 <rt_rmv_list>
 8002adc:	4630      	mov	r0, r6
 8002ade:	f7ff f877 	bl	8001bd0 <rt_rmv_dly>
 8002ae2:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002b7c <rt_tsk_delete+0x150>
 8002ae6:	6a34      	ldr	r4, [r6, #32]
 8002ae8:	f04f 0a01 	mov.w	r10, #1
 8002aec:	b9b4      	cbnz	r4, 8002b1c <rt_tsk_delete+0xf0>
 8002aee:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002af0:	481f      	ldr	r0, [pc, #124]	; (8002b70 <rt_tsk_delete+0x144>)
 8002af2:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002af6:	f7ff f9cf 	bl	8001e98 <rt_free_box>
 8002afa:	4631      	mov	r1, r6
 8002afc:	6334      	str	r4, [r6, #48]	; 0x30
 8002afe:	481d      	ldr	r0, [pc, #116]	; (8002b74 <rt_tsk_delete+0x148>)
 8002b00:	f7ff f9ca 	bl	8001e98 <rt_free_box>
 8002b04:	481d      	ldr	r0, [pc, #116]	; (8002b7c <rt_tsk_delete+0x150>)
 8002b06:	6829      	ldr	r1, [r5, #0]
 8002b08:	6843      	ldr	r3, [r0, #4]
 8002b0a:	789a      	ldrb	r2, [r3, #2]
 8002b0c:	788b      	ldrb	r3, [r1, #2]
 8002b0e:	429a      	cmp	r2, r3
 8002b10:	d9b4      	bls.n	8002a7c <rt_tsk_delete+0x50>
 8002b12:	2301      	movs	r3, #1
 8002b14:	704b      	strb	r3, [r1, #1]
 8002b16:	f7fe ff9d 	bl	8001a54 <rt_put_prio>
 8002b1a:	e7ad      	b.n	8002a78 <rt_tsk_delete+0x4c>
 8002b1c:	6863      	ldr	r3, [r4, #4]
 8002b1e:	b1db      	cbz	r3, 8002b58 <rt_tsk_delete+0x12c>
 8002b20:	4620      	mov	r0, r4
 8002b22:	f7fe ffaf 	bl	8001a84 <rt_get_first>
 8002b26:	2100      	movs	r1, #0
 8002b28:	4680      	mov	r8, r0
 8002b2a:	f7ff f96f 	bl	8001e0c <rt_ret_val>
 8002b2e:	4640      	mov	r0, r8
 8002b30:	f7ff f84e 	bl	8001bd0 <rt_rmv_dly>
 8002b34:	f888 a001 	strb.w	r10, [r8, #1]
 8002b38:	4641      	mov	r1, r8
 8002b3a:	4658      	mov	r0, r11
 8002b3c:	f7fe ff8a 	bl	8001a54 <rt_put_prio>
 8002b40:	68e3      	ldr	r3, [r4, #12]
 8002b42:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002b46:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002b4a:	f8c4 8008 	str.w	r8, [r4, #8]
 8002b4e:	60e2      	str	r2, [r4, #12]
 8002b50:	f8c8 4020 	str.w	r4, [r8, #32]
 8002b54:	461c      	mov	r4, r3
 8002b56:	e7c9      	b.n	8002aec <rt_tsk_delete+0xc0>
 8002b58:	68e2      	ldr	r2, [r4, #12]
 8002b5a:	8063      	strh	r3, [r4, #2]
 8002b5c:	60a3      	str	r3, [r4, #8]
 8002b5e:	60e3      	str	r3, [r4, #12]
 8002b60:	4614      	mov	r4, r2
 8002b62:	e7c3      	b.n	8002aec <rt_tsk_delete+0xc0>
 8002b64:	24ff      	movs	r4, #255	; 0xff
 8002b66:	e789      	b.n	8002a7c <rt_tsk_delete+0x50>
 8002b68:	20001e34 	.word	0x20001e34
 8002b6c:	20001850 	.word	0x20001850
 8002b70:	20001640 	.word	0x20001640
 8002b74:	20001c18 	.word	0x20001c18
 8002b78:	080068b8 	.word	0x080068b8
 8002b7c:	20001de8 	.word	0x20001de8

08002b80 <rt_sys_init>:
 8002b80:	b538      	push	{r3, r4, r5, lr}
 8002b82:	4b2c      	ldr	r3, [pc, #176]	; (8002c34 <rt_sys_init+0xb4>)
 8002b84:	492c      	ldr	r1, [pc, #176]	; (8002c38 <rt_sys_init+0xb8>)
 8002b86:	881a      	ldrh	r2, [r3, #0]
 8002b88:	2300      	movs	r3, #0
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	4293      	cmp	r3, r2
 8002b8e:	d34d      	bcc.n	8002c2c <rt_sys_init+0xac>
 8002b90:	4b2a      	ldr	r3, [pc, #168]	; (8002c3c <rt_sys_init+0xbc>)
 8002b92:	482b      	ldr	r0, [pc, #172]	; (8002c40 <rt_sys_init+0xc0>)
 8002b94:	8819      	ldrh	r1, [r3, #0]
 8002b96:	4c2b      	ldr	r4, [pc, #172]	; (8002c44 <rt_sys_init+0xc4>)
 8002b98:	2240      	movs	r2, #64	; 0x40
 8002b9a:	f7ff f94b 	bl	8001e34 <_init_box>
 8002b9e:	4b2a      	ldr	r3, [pc, #168]	; (8002c48 <rt_sys_init+0xc8>)
 8002ba0:	482a      	ldr	r0, [pc, #168]	; (8002c4c <rt_sys_init+0xcc>)
 8002ba2:	881a      	ldrh	r2, [r3, #0]
 8002ba4:	4b2a      	ldr	r3, [pc, #168]	; (8002c50 <rt_sys_init+0xd0>)
 8002ba6:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002baa:	6819      	ldr	r1, [r3, #0]
 8002bac:	f7ff f942 	bl	8001e34 <_init_box>
 8002bb0:	4b28      	ldr	r3, [pc, #160]	; (8002c54 <rt_sys_init+0xd4>)
 8002bb2:	8819      	ldrh	r1, [r3, #0]
 8002bb4:	4b28      	ldr	r3, [pc, #160]	; (8002c58 <rt_sys_init+0xd8>)
 8002bb6:	2208      	movs	r2, #8
 8002bb8:	6818      	ldr	r0, [r3, #0]
 8002bba:	f7ff f93b 	bl	8001e34 <_init_box>
 8002bbe:	23ff      	movs	r3, #255	; 0xff
 8002bc0:	2500      	movs	r5, #0
 8002bc2:	70e3      	strb	r3, [r4, #3]
 8002bc4:	4821      	ldr	r0, [pc, #132]	; (8002c4c <rt_sys_init+0xcc>)
 8002bc6:	62a5      	str	r5, [r4, #40]	; 0x28
 8002bc8:	2301      	movs	r3, #1
 8002bca:	7063      	strb	r3, [r4, #1]
 8002bcc:	7025      	strb	r5, [r4, #0]
 8002bce:	70a5      	strb	r5, [r4, #2]
 8002bd0:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002bd4:	6065      	str	r5, [r4, #4]
 8002bd6:	60a5      	str	r5, [r4, #8]
 8002bd8:	60e5      	str	r5, [r4, #12]
 8002bda:	6125      	str	r5, [r4, #16]
 8002bdc:	6225      	str	r5, [r4, #32]
 8002bde:	82a5      	strh	r5, [r4, #20]
 8002be0:	82e5      	strh	r5, [r4, #22]
 8002be2:	8325      	strh	r5, [r4, #24]
 8002be4:	8365      	strh	r5, [r4, #26]
 8002be6:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002bea:	f7ff f948 	bl	8001e7e <rt_alloc_box>
 8002bee:	491b      	ldr	r1, [pc, #108]	; (8002c5c <rt_sys_init+0xdc>)
 8002bf0:	6320      	str	r0, [r4, #48]	; 0x30
 8002bf2:	4620      	mov	r0, r4
 8002bf4:	f7ff f8be 	bl	8001d74 <rt_init_stack>
 8002bf8:	4b19      	ldr	r3, [pc, #100]	; (8002c60 <rt_sys_init+0xe0>)
 8002bfa:	2204      	movs	r2, #4
 8002bfc:	701a      	strb	r2, [r3, #0]
 8002bfe:	605d      	str	r5, [r3, #4]
 8002c00:	4b18      	ldr	r3, [pc, #96]	; (8002c64 <rt_sys_init+0xe4>)
 8002c02:	701a      	strb	r2, [r3, #0]
 8002c04:	60dd      	str	r5, [r3, #12]
 8002c06:	611d      	str	r5, [r3, #16]
 8002c08:	829d      	strh	r5, [r3, #20]
 8002c0a:	4b17      	ldr	r3, [pc, #92]	; (8002c68 <rt_sys_init+0xe8>)
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	601c      	str	r4, [r3, #0]
 8002c10:	2302      	movs	r3, #2
 8002c12:	7063      	strb	r3, [r4, #1]
 8002c14:	f7ff fe16 	bl	8002844 <rt_switch_req>
 8002c18:	4a14      	ldr	r2, [pc, #80]	; (8002c6c <rt_sys_init+0xec>)
 8002c1a:	4b15      	ldr	r3, [pc, #84]	; (8002c70 <rt_sys_init+0xf0>)
 8002c1c:	7812      	ldrb	r2, [r2, #0]
 8002c1e:	701d      	strb	r5, [r3, #0]
 8002c20:	705d      	strb	r5, [r3, #1]
 8002c22:	70da      	strb	r2, [r3, #3]
 8002c24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002c28:	f7ff ba7e 	b.w	8002128 <rt_init_robin>
 8002c2c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002c30:	3301      	adds	r3, #1
 8002c32:	e7ab      	b.n	8002b8c <rt_sys_init+0xc>
 8002c34:	080068b8 	.word	0x080068b8
 8002c38:	20001850 	.word	0x20001850
 8002c3c:	08006884 	.word	0x08006884
 8002c40:	20001c18 	.word	0x20001c18
 8002c44:	20001e3c 	.word	0x20001e3c
 8002c48:	080068d4 	.word	0x080068d4
 8002c4c:	20001640 	.word	0x20001640
 8002c50:	08006880 	.word	0x08006880
 8002c54:	08006886 	.word	0x08006886
 8002c58:	200009b8 	.word	0x200009b8
 8002c5c:	080019b5 	.word	0x080019b5
 8002c60:	20001de8 	.word	0x20001de8
 8002c64:	20001e00 	.word	0x20001e00
 8002c68:	20001e34 	.word	0x20001e34
 8002c6c:	080068b5 	.word	0x080068b5
 8002c70:	2000186c 	.word	0x2000186c

08002c74 <rt_sys_start>:
 8002c74:	b508      	push	{r3, lr}
 8002c76:	4b1e      	ldr	r3, [pc, #120]	; (8002cf0 <rt_sys_start+0x7c>)
 8002c78:	681a      	ldr	r2, [r3, #0]
 8002c7a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002c7e:	601a      	str	r2, [r3, #0]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	021b      	lsls	r3, r3, #8
 8002c84:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002c88:	43db      	mvns	r3, r3
 8002c8a:	fab3 f383 	clz	r3, r3
 8002c8e:	4a19      	ldr	r2, [pc, #100]	; (8002cf4 <rt_sys_start+0x80>)
 8002c90:	4819      	ldr	r0, [pc, #100]	; (8002cf8 <rt_sys_start+0x84>)
 8002c92:	6812      	ldr	r2, [r2, #0]
 8002c94:	6801      	ldr	r1, [r0, #0]
 8002c96:	b2db      	uxtb	r3, r3
 8002c98:	f1c3 0308 	rsb	r3, r3, #8
 8002c9c:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002ca0:	4293      	cmp	r3, r2
 8002ca2:	bf98      	it	ls
 8002ca4:	1c53      	addls	r3, r2, #1
 8002ca6:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002caa:	fa02 f303 	lsl.w	r3, r2, r3
 8002cae:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002cb2:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002cb6:	4313      	orrs	r3, r2
 8002cb8:	6003      	str	r3, [r0, #0]
 8002cba:	f7ff f811 	bl	8001ce0 <os_tick_init>
 8002cbe:	4b0f      	ldr	r3, [pc, #60]	; (8002cfc <rt_sys_start+0x88>)
 8002cc0:	2800      	cmp	r0, #0
 8002cc2:	6018      	str	r0, [r3, #0]
 8002cc4:	db12      	blt.n	8002cec <rt_sys_start+0x78>
 8002cc6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002cca:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002cce:	22ff      	movs	r2, #255	; 0xff
 8002cd0:	7002      	strb	r2, [r0, #0]
 8002cd2:	681a      	ldr	r2, [r3, #0]
 8002cd4:	0953      	lsrs	r3, r2, #5
 8002cd6:	009b      	lsls	r3, r3, #2
 8002cd8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002cdc:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002ce0:	f002 021f 	and.w	r2, r2, #31
 8002ce4:	2101      	movs	r1, #1
 8002ce6:	fa01 f202 	lsl.w	r2, r1, r2
 8002cea:	601a      	str	r2, [r3, #0]
 8002cec:	bd08      	pop	{r3, pc}
 8002cee:	bf00      	nop
 8002cf0:	e000ed20 	.word	0xe000ed20
 8002cf4:	e000ed0c 	.word	0xe000ed0c
 8002cf8:	e000ed1c 	.word	0xe000ed1c
 8002cfc:	20001e18 	.word	0x20001e18

08002d00 <rt_mut_init>:
 8002d00:	2303      	movs	r3, #3
 8002d02:	7003      	strb	r3, [r0, #0]
 8002d04:	2300      	movs	r3, #0
 8002d06:	8043      	strh	r3, [r0, #2]
 8002d08:	6043      	str	r3, [r0, #4]
 8002d0a:	6083      	str	r3, [r0, #8]
 8002d0c:	60c3      	str	r3, [r0, #12]
 8002d0e:	4770      	bx	lr

08002d10 <rt_mut_delete>:
 8002d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d12:	8843      	ldrh	r3, [r0, #2]
 8002d14:	4604      	mov	r4, r0
 8002d16:	b19b      	cbz	r3, 8002d40 <rt_mut_delete+0x30>
 8002d18:	6880      	ldr	r0, [r0, #8]
 8002d1a:	6a03      	ldr	r3, [r0, #32]
 8002d1c:	429c      	cmp	r4, r3
 8002d1e:	d128      	bne.n	8002d72 <rt_mut_delete+0x62>
 8002d20:	68e3      	ldr	r3, [r4, #12]
 8002d22:	6203      	str	r3, [r0, #32]
 8002d24:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002d28:	6a02      	ldr	r2, [r0, #32]
 8002d2a:	bb52      	cbnz	r2, 8002d82 <rt_mut_delete+0x72>
 8002d2c:	7882      	ldrb	r2, [r0, #2]
 8002d2e:	429a      	cmp	r2, r3
 8002d30:	d006      	beq.n	8002d40 <rt_mut_delete+0x30>
 8002d32:	7083      	strb	r3, [r0, #2]
 8002d34:	4b1f      	ldr	r3, [pc, #124]	; (8002db4 <rt_mut_delete+0xa4>)
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	4298      	cmp	r0, r3
 8002d3a:	d001      	beq.n	8002d40 <rt_mut_delete+0x30>
 8002d3c:	f7fe ff30 	bl	8001ba0 <rt_resort_prio>
 8002d40:	4f1d      	ldr	r7, [pc, #116]	; (8002db8 <rt_mut_delete+0xa8>)
 8002d42:	2601      	movs	r6, #1
 8002d44:	6865      	ldr	r5, [r4, #4]
 8002d46:	bb25      	cbnz	r5, 8002d92 <rt_mut_delete+0x82>
 8002d48:	481b      	ldr	r0, [pc, #108]	; (8002db8 <rt_mut_delete+0xa8>)
 8002d4a:	6843      	ldr	r3, [r0, #4]
 8002d4c:	b16b      	cbz	r3, 8002d6a <rt_mut_delete+0x5a>
 8002d4e:	4e19      	ldr	r6, [pc, #100]	; (8002db4 <rt_mut_delete+0xa4>)
 8002d50:	789a      	ldrb	r2, [r3, #2]
 8002d52:	6831      	ldr	r1, [r6, #0]
 8002d54:	788b      	ldrb	r3, [r1, #2]
 8002d56:	429a      	cmp	r2, r3
 8002d58:	d907      	bls.n	8002d6a <rt_mut_delete+0x5a>
 8002d5a:	f7fe fe7b 	bl	8001a54 <rt_put_prio>
 8002d5e:	6833      	ldr	r3, [r6, #0]
 8002d60:	2201      	movs	r2, #1
 8002d62:	705a      	strb	r2, [r3, #1]
 8002d64:	4628      	mov	r0, r5
 8002d66:	f7ff fd87 	bl	8002878 <rt_dispatch>
 8002d6a:	2000      	movs	r0, #0
 8002d6c:	7020      	strb	r0, [r4, #0]
 8002d6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d70:	4613      	mov	r3, r2
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d0d6      	beq.n	8002d24 <rt_mut_delete+0x14>
 8002d76:	68da      	ldr	r2, [r3, #12]
 8002d78:	4294      	cmp	r4, r2
 8002d7a:	d1f9      	bne.n	8002d70 <rt_mut_delete+0x60>
 8002d7c:	68e2      	ldr	r2, [r4, #12]
 8002d7e:	60da      	str	r2, [r3, #12]
 8002d80:	e7d0      	b.n	8002d24 <rt_mut_delete+0x14>
 8002d82:	6851      	ldr	r1, [r2, #4]
 8002d84:	b119      	cbz	r1, 8002d8e <rt_mut_delete+0x7e>
 8002d86:	7889      	ldrb	r1, [r1, #2]
 8002d88:	428b      	cmp	r3, r1
 8002d8a:	bf38      	it	cc
 8002d8c:	460b      	movcc	r3, r1
 8002d8e:	68d2      	ldr	r2, [r2, #12]
 8002d90:	e7cb      	b.n	8002d2a <rt_mut_delete+0x1a>
 8002d92:	4620      	mov	r0, r4
 8002d94:	f7fe fe76 	bl	8001a84 <rt_get_first>
 8002d98:	2100      	movs	r1, #0
 8002d9a:	4605      	mov	r5, r0
 8002d9c:	f7ff f836 	bl	8001e0c <rt_ret_val>
 8002da0:	4628      	mov	r0, r5
 8002da2:	f7fe ff15 	bl	8001bd0 <rt_rmv_dly>
 8002da6:	706e      	strb	r6, [r5, #1]
 8002da8:	4629      	mov	r1, r5
 8002daa:	4638      	mov	r0, r7
 8002dac:	f7fe fe52 	bl	8001a54 <rt_put_prio>
 8002db0:	e7c8      	b.n	8002d44 <rt_mut_delete+0x34>
 8002db2:	bf00      	nop
 8002db4:	20001e34 	.word	0x20001e34
 8002db8:	20001de8 	.word	0x20001de8

08002dbc <rt_mut_release>:
 8002dbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002dc0:	8843      	ldrh	r3, [r0, #2]
 8002dc2:	4605      	mov	r5, r0
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d063      	beq.n	8002e90 <rt_mut_release+0xd4>
 8002dc8:	4f32      	ldr	r7, [pc, #200]	; (8002e94 <rt_mut_release+0xd8>)
 8002dca:	6881      	ldr	r1, [r0, #8]
 8002dcc:	683a      	ldr	r2, [r7, #0]
 8002dce:	4291      	cmp	r1, r2
 8002dd0:	d15e      	bne.n	8002e90 <rt_mut_release+0xd4>
 8002dd2:	3b01      	subs	r3, #1
 8002dd4:	b29b      	uxth	r3, r3
 8002dd6:	8043      	strh	r3, [r0, #2]
 8002dd8:	b11b      	cbz	r3, 8002de2 <rt_mut_release+0x26>
 8002dda:	2400      	movs	r4, #0
 8002ddc:	4620      	mov	r0, r4
 8002dde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002de2:	6a0b      	ldr	r3, [r1, #32]
 8002de4:	4298      	cmp	r0, r3
 8002de6:	d129      	bne.n	8002e3c <rt_mut_release+0x80>
 8002de8:	68c3      	ldr	r3, [r0, #12]
 8002dea:	620b      	str	r3, [r1, #32]
 8002dec:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002df0:	6a0c      	ldr	r4, [r1, #32]
 8002df2:	bb5c      	cbnz	r4, 8002e4c <rt_mut_release+0x90>
 8002df4:	708b      	strb	r3, [r1, #2]
 8002df6:	686a      	ldr	r2, [r5, #4]
 8002df8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002e98 <rt_mut_release+0xdc>
 8002dfc:	2a00      	cmp	r2, #0
 8002dfe:	d03b      	beq.n	8002e78 <rt_mut_release+0xbc>
 8002e00:	4628      	mov	r0, r5
 8002e02:	f7fe fe3f 	bl	8001a84 <rt_get_first>
 8002e06:	4621      	mov	r1, r4
 8002e08:	4606      	mov	r6, r0
 8002e0a:	f7fe ffff 	bl	8001e0c <rt_ret_val>
 8002e0e:	4630      	mov	r0, r6
 8002e10:	f7fe fede 	bl	8001bd0 <rt_rmv_dly>
 8002e14:	6a33      	ldr	r3, [r6, #32]
 8002e16:	60eb      	str	r3, [r5, #12]
 8002e18:	f04f 0901 	mov.w	r9, #1
 8002e1c:	6839      	ldr	r1, [r7, #0]
 8002e1e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002e22:	f8a5 9002 	strh.w	r9, [r5, #2]
 8002e26:	60ae      	str	r6, [r5, #8]
 8002e28:	6235      	str	r5, [r6, #32]
 8002e2a:	788a      	ldrb	r2, [r1, #2]
 8002e2c:	789b      	ldrb	r3, [r3, #2]
 8002e2e:	429a      	cmp	r2, r3
 8002e30:	d314      	bcc.n	8002e5c <rt_mut_release+0xa0>
 8002e32:	4630      	mov	r0, r6
 8002e34:	f7ff fd20 	bl	8002878 <rt_dispatch>
 8002e38:	e7d0      	b.n	8002ddc <rt_mut_release+0x20>
 8002e3a:	4613      	mov	r3, r2
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	d0d5      	beq.n	8002dec <rt_mut_release+0x30>
 8002e40:	68da      	ldr	r2, [r3, #12]
 8002e42:	4295      	cmp	r5, r2
 8002e44:	d1f9      	bne.n	8002e3a <rt_mut_release+0x7e>
 8002e46:	68ea      	ldr	r2, [r5, #12]
 8002e48:	60da      	str	r2, [r3, #12]
 8002e4a:	e7cf      	b.n	8002dec <rt_mut_release+0x30>
 8002e4c:	6862      	ldr	r2, [r4, #4]
 8002e4e:	b11a      	cbz	r2, 8002e58 <rt_mut_release+0x9c>
 8002e50:	7892      	ldrb	r2, [r2, #2]
 8002e52:	4293      	cmp	r3, r2
 8002e54:	bf38      	it	cc
 8002e56:	4613      	movcc	r3, r2
 8002e58:	68e4      	ldr	r4, [r4, #12]
 8002e5a:	e7ca      	b.n	8002df2 <rt_mut_release+0x36>
 8002e5c:	4640      	mov	r0, r8
 8002e5e:	f7fe fdf9 	bl	8001a54 <rt_put_prio>
 8002e62:	4631      	mov	r1, r6
 8002e64:	4640      	mov	r0, r8
 8002e66:	f7fe fdf5 	bl	8001a54 <rt_put_prio>
 8002e6a:	683b      	ldr	r3, [r7, #0]
 8002e6c:	f883 9001 	strb.w	r9, [r3, #1]
 8002e70:	f886 9001 	strb.w	r9, [r6, #1]
 8002e74:	4620      	mov	r0, r4
 8002e76:	e7dd      	b.n	8002e34 <rt_mut_release+0x78>
 8002e78:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002e7c:	7892      	ldrb	r2, [r2, #2]
 8002e7e:	429a      	cmp	r2, r3
 8002e80:	d9ab      	bls.n	8002dda <rt_mut_release+0x1e>
 8002e82:	4640      	mov	r0, r8
 8002e84:	f7fe fde6 	bl	8001a54 <rt_put_prio>
 8002e88:	683b      	ldr	r3, [r7, #0]
 8002e8a:	2201      	movs	r2, #1
 8002e8c:	705a      	strb	r2, [r3, #1]
 8002e8e:	e7f1      	b.n	8002e74 <rt_mut_release+0xb8>
 8002e90:	24ff      	movs	r4, #255	; 0xff
 8002e92:	e7a3      	b.n	8002ddc <rt_mut_release+0x20>
 8002e94:	20001e34 	.word	0x20001e34
 8002e98:	20001de8 	.word	0x20001de8

08002e9c <rt_mut_wait>:
 8002e9c:	8843      	ldrh	r3, [r0, #2]
 8002e9e:	b570      	push	{r4, r5, r6, lr}
 8002ea0:	4604      	mov	r4, r0
 8002ea2:	460e      	mov	r6, r1
 8002ea4:	4d13      	ldr	r5, [pc, #76]	; (8002ef4 <rt_mut_wait+0x58>)
 8002ea6:	b943      	cbnz	r3, 8002eba <rt_mut_wait+0x1e>
 8002ea8:	682a      	ldr	r2, [r5, #0]
 8002eaa:	6082      	str	r2, [r0, #8]
 8002eac:	6a11      	ldr	r1, [r2, #32]
 8002eae:	60c1      	str	r1, [r0, #12]
 8002eb0:	6210      	str	r0, [r2, #32]
 8002eb2:	3301      	adds	r3, #1
 8002eb4:	8063      	strh	r3, [r4, #2]
 8002eb6:	2000      	movs	r0, #0
 8002eb8:	bd70      	pop	{r4, r5, r6, pc}
 8002eba:	6880      	ldr	r0, [r0, #8]
 8002ebc:	682a      	ldr	r2, [r5, #0]
 8002ebe:	4290      	cmp	r0, r2
 8002ec0:	d0f7      	beq.n	8002eb2 <rt_mut_wait+0x16>
 8002ec2:	b181      	cbz	r1, 8002ee6 <rt_mut_wait+0x4a>
 8002ec4:	7893      	ldrb	r3, [r2, #2]
 8002ec6:	7882      	ldrb	r2, [r0, #2]
 8002ec8:	429a      	cmp	r2, r3
 8002eca:	d202      	bcs.n	8002ed2 <rt_mut_wait+0x36>
 8002ecc:	7083      	strb	r3, [r0, #2]
 8002ece:	f7fe fe67 	bl	8001ba0 <rt_resort_prio>
 8002ed2:	6862      	ldr	r2, [r4, #4]
 8002ed4:	b14a      	cbz	r2, 8002eea <rt_mut_wait+0x4e>
 8002ed6:	6829      	ldr	r1, [r5, #0]
 8002ed8:	4620      	mov	r0, r4
 8002eda:	f7fe fdbb 	bl	8001a54 <rt_put_prio>
 8002ede:	2109      	movs	r1, #9
 8002ee0:	4630      	mov	r0, r6
 8002ee2:	f7ff fced 	bl	80028c0 <rt_block>
 8002ee6:	2001      	movs	r0, #1
 8002ee8:	bd70      	pop	{r4, r5, r6, pc}
 8002eea:	682b      	ldr	r3, [r5, #0]
 8002eec:	6063      	str	r3, [r4, #4]
 8002eee:	605a      	str	r2, [r3, #4]
 8002ef0:	609c      	str	r4, [r3, #8]
 8002ef2:	e7f4      	b.n	8002ede <rt_mut_wait+0x42>
 8002ef4:	20001e34 	.word	0x20001e34

08002ef8 <rt_dly_wait>:
 8002ef8:	2103      	movs	r1, #3
 8002efa:	f7ff bce1 	b.w	80028c0 <rt_block>
	...

08002f00 <rt_sem_psh>:
 8002f00:	6842      	ldr	r2, [r0, #4]
 8002f02:	b510      	push	{r4, lr}
 8002f04:	b17a      	cbz	r2, 8002f26 <rt_sem_psh+0x26>
 8002f06:	f7fe fdbd 	bl	8001a84 <rt_get_first>
 8002f0a:	4604      	mov	r4, r0
 8002f0c:	f7fe fe60 	bl	8001bd0 <rt_rmv_dly>
 8002f10:	2101      	movs	r1, #1
 8002f12:	7061      	strb	r1, [r4, #1]
 8002f14:	4620      	mov	r0, r4
 8002f16:	f7fe ff79 	bl	8001e0c <rt_ret_val>
 8002f1a:	4621      	mov	r1, r4
 8002f1c:	4804      	ldr	r0, [pc, #16]	; (8002f30 <rt_sem_psh+0x30>)
 8002f1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f22:	f7fe bd97 	b.w	8001a54 <rt_put_prio>
 8002f26:	8842      	ldrh	r2, [r0, #2]
 8002f28:	3201      	adds	r2, #1
 8002f2a:	8042      	strh	r2, [r0, #2]
 8002f2c:	bd10      	pop	{r4, pc}
 8002f2e:	bf00      	nop
 8002f30:	20001de8 	.word	0x20001de8

08002f34 <timer_irq_handler>:
 8002f34:	b570      	push	{r4, r5, r6, lr}
 8002f36:	4c13      	ldr	r4, [pc, #76]	; (8002f84 <timer_irq_handler+0x50>)
 8002f38:	6823      	ldr	r3, [r4, #0]
 8002f3a:	691a      	ldr	r2, [r3, #16]
 8002f3c:	0795      	lsls	r5, r2, #30
 8002f3e:	d507      	bpl.n	8002f50 <timer_irq_handler+0x1c>
 8002f40:	68da      	ldr	r2, [r3, #12]
 8002f42:	0790      	lsls	r0, r2, #30
 8002f44:	d504      	bpl.n	8002f50 <timer_irq_handler+0x1c>
 8002f46:	f06f 0202 	mvn.w	r2, #2
 8002f4a:	611a      	str	r2, [r3, #16]
 8002f4c:	f7fe fc4c 	bl	80017e8 <us_ticker_irq_handler>
 8002f50:	6823      	ldr	r3, [r4, #0]
 8002f52:	691a      	ldr	r2, [r3, #16]
 8002f54:	0751      	lsls	r1, r2, #29
 8002f56:	d513      	bpl.n	8002f80 <timer_irq_handler+0x4c>
 8002f58:	68da      	ldr	r2, [r3, #12]
 8002f5a:	0752      	lsls	r2, r2, #29
 8002f5c:	d510      	bpl.n	8002f80 <timer_irq_handler+0x4c>
 8002f5e:	f06f 0204 	mvn.w	r2, #4
 8002f62:	4e09      	ldr	r6, [pc, #36]	; (8002f88 <timer_irq_handler+0x54>)
 8002f64:	611a      	str	r2, [r3, #16]
 8002f66:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002f68:	6833      	ldr	r3, [r6, #0]
 8002f6a:	1aeb      	subs	r3, r5, r3
 8002f6c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002f70:	d306      	bcc.n	8002f80 <timer_irq_handler+0x4c>
 8002f72:	f001 fb57 	bl	8004624 <HAL_IncTick>
 8002f76:	6823      	ldr	r3, [r4, #0]
 8002f78:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002f7c:	639a      	str	r2, [r3, #56]	; 0x38
 8002f7e:	6035      	str	r5, [r6, #0]
 8002f80:	bd70      	pop	{r4, r5, r6, pc}
 8002f82:	bf00      	nop
 8002f84:	20001e80 	.word	0x20001e80
 8002f88:	2000122c 	.word	0x2000122c

08002f8c <HAL_InitTick>:
 8002f8c:	b530      	push	{r4, r5, lr}
 8002f8e:	b089      	sub	sp, #36	; 0x24
 8002f90:	a901      	add	r1, sp, #4
 8002f92:	a803      	add	r0, sp, #12
 8002f94:	f001 fb14 	bl	80045c0 <HAL_RCC_GetClockConfig>
 8002f98:	f001 fae2 	bl	8004560 <HAL_RCC_GetPCLK1Freq>
 8002f9c:	4b24      	ldr	r3, [pc, #144]	; (8003030 <HAL_InitTick+0xa4>)
 8002f9e:	9001      	str	r0, [sp, #4]
 8002fa0:	69da      	ldr	r2, [r3, #28]
 8002fa2:	4c24      	ldr	r4, [pc, #144]	; (8003034 <HAL_InitTick+0xa8>)
 8002fa4:	f042 0201 	orr.w	r2, r2, #1
 8002fa8:	61da      	str	r2, [r3, #28]
 8002faa:	69da      	ldr	r2, [r3, #28]
 8002fac:	f002 0201 	and.w	r2, r2, #1
 8002fb0:	9202      	str	r2, [sp, #8]
 8002fb2:	9a02      	ldr	r2, [sp, #8]
 8002fb4:	691a      	ldr	r2, [r3, #16]
 8002fb6:	f042 0201 	orr.w	r2, r2, #1
 8002fba:	611a      	str	r2, [r3, #16]
 8002fbc:	691a      	ldr	r2, [r3, #16]
 8002fbe:	f022 0201 	bic.w	r2, r2, #1
 8002fc2:	611a      	str	r2, [r3, #16]
 8002fc4:	9a06      	ldr	r2, [sp, #24]
 8002fc6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002fca:	6023      	str	r3, [r4, #0]
 8002fcc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002fd0:	60e3      	str	r3, [r4, #12]
 8002fd2:	4b19      	ldr	r3, [pc, #100]	; (8003038 <HAL_InitTick+0xac>)
 8002fd4:	bb4a      	cbnz	r2, 800302a <HAL_InitTick+0x9e>
 8002fd6:	fbb0 f0f3 	udiv	r0, r0, r3
 8002fda:	3801      	subs	r0, #1
 8002fdc:	2500      	movs	r5, #0
 8002fde:	6060      	str	r0, [r4, #4]
 8002fe0:	4814      	ldr	r0, [pc, #80]	; (8003034 <HAL_InitTick+0xa8>)
 8002fe2:	6125      	str	r5, [r4, #16]
 8002fe4:	60a5      	str	r5, [r4, #8]
 8002fe6:	6165      	str	r5, [r4, #20]
 8002fe8:	f001 fc7e 	bl	80048e8 <HAL_TIM_OC_Init>
 8002fec:	4913      	ldr	r1, [pc, #76]	; (800303c <HAL_InitTick+0xb0>)
 8002fee:	201c      	movs	r0, #28
 8002ff0:	f000 ff20 	bl	8003e34 <__NVIC_SetVector>
 8002ff4:	4b12      	ldr	r3, [pc, #72]	; (8003040 <HAL_InitTick+0xb4>)
 8002ff6:	480f      	ldr	r0, [pc, #60]	; (8003034 <HAL_InitTick+0xa8>)
 8002ff8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002ffc:	601a      	str	r2, [r3, #0]
 8002ffe:	4629      	mov	r1, r5
 8003000:	f001 fcba 	bl	8004978 <HAL_TIM_OC_Start>
 8003004:	2104      	movs	r1, #4
 8003006:	480b      	ldr	r0, [pc, #44]	; (8003034 <HAL_InitTick+0xa8>)
 8003008:	f001 fcb6 	bl	8004978 <HAL_TIM_OC_Start>
 800300c:	6823      	ldr	r3, [r4, #0]
 800300e:	4a0d      	ldr	r2, [pc, #52]	; (8003044 <HAL_InitTick+0xb8>)
 8003010:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003012:	6011      	str	r1, [r2, #0]
 8003014:	6812      	ldr	r2, [r2, #0]
 8003016:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 800301a:	639a      	str	r2, [r3, #56]	; 0x38
 800301c:	68da      	ldr	r2, [r3, #12]
 800301e:	4628      	mov	r0, r5
 8003020:	f042 0204 	orr.w	r2, r2, #4
 8003024:	60da      	str	r2, [r3, #12]
 8003026:	b009      	add	sp, #36	; 0x24
 8003028:	bd30      	pop	{r4, r5, pc}
 800302a:	0040      	lsls	r0, r0, #1
 800302c:	e7d3      	b.n	8002fd6 <HAL_InitTick+0x4a>
 800302e:	bf00      	nop
 8003030:	40021000 	.word	0x40021000
 8003034:	20001e80 	.word	0x20001e80
 8003038:	000f4240 	.word	0x000f4240
 800303c:	08002f35 	.word	0x08002f35
 8003040:	e000e100 	.word	0xe000e100
 8003044:	2000122c 	.word	0x2000122c

08003048 <HAL_SuspendTick>:
 8003048:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800304c:	4a03      	ldr	r2, [pc, #12]	; (800305c <HAL_SuspendTick+0x14>)
 800304e:	6013      	str	r3, [r2, #0]
 8003050:	68da      	ldr	r2, [r3, #12]
 8003052:	f022 0204 	bic.w	r2, r2, #4
 8003056:	60da      	str	r2, [r3, #12]
 8003058:	4770      	bx	lr
 800305a:	bf00      	nop
 800305c:	20001e80 	.word	0x20001e80

08003060 <HAL_ResumeTick>:
 8003060:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003064:	4a03      	ldr	r2, [pc, #12]	; (8003074 <HAL_ResumeTick+0x14>)
 8003066:	6013      	str	r3, [r2, #0]
 8003068:	68da      	ldr	r2, [r3, #12]
 800306a:	f042 0204 	orr.w	r2, r2, #4
 800306e:	60da      	str	r2, [r3, #12]
 8003070:	4770      	bx	lr
 8003072:	bf00      	nop
 8003074:	20001e80 	.word	0x20001e80

08003078 <Set_GPIO_Clock>:
 8003078:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800307a:	2805      	cmp	r0, #5
 800307c:	d843      	bhi.n	8003106 <Set_GPIO_Clock+0x8e>
 800307e:	e8df f000 	tbb	[pc, r0]
 8003082:	1203      	.short	0x1203
 8003084:	36422a1e 	.word	0x36422a1e
 8003088:	4b21      	ldr	r3, [pc, #132]	; (8003110 <Set_GPIO_Clock+0x98>)
 800308a:	695a      	ldr	r2, [r3, #20]
 800308c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003090:	615a      	str	r2, [r3, #20]
 8003092:	695b      	ldr	r3, [r3, #20]
 8003094:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003098:	9301      	str	r3, [sp, #4]
 800309a:	9b01      	ldr	r3, [sp, #4]
 800309c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80030a0:	b007      	add	sp, #28
 80030a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80030a6:	4b1a      	ldr	r3, [pc, #104]	; (8003110 <Set_GPIO_Clock+0x98>)
 80030a8:	481a      	ldr	r0, [pc, #104]	; (8003114 <Set_GPIO_Clock+0x9c>)
 80030aa:	695a      	ldr	r2, [r3, #20]
 80030ac:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80030b0:	615a      	str	r2, [r3, #20]
 80030b2:	695b      	ldr	r3, [r3, #20]
 80030b4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80030b8:	9302      	str	r3, [sp, #8]
 80030ba:	9b02      	ldr	r3, [sp, #8]
 80030bc:	e7f0      	b.n	80030a0 <Set_GPIO_Clock+0x28>
 80030be:	4b14      	ldr	r3, [pc, #80]	; (8003110 <Set_GPIO_Clock+0x98>)
 80030c0:	4815      	ldr	r0, [pc, #84]	; (8003118 <Set_GPIO_Clock+0xa0>)
 80030c2:	695a      	ldr	r2, [r3, #20]
 80030c4:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80030c8:	615a      	str	r2, [r3, #20]
 80030ca:	695b      	ldr	r3, [r3, #20]
 80030cc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80030d0:	9303      	str	r3, [sp, #12]
 80030d2:	9b03      	ldr	r3, [sp, #12]
 80030d4:	e7e4      	b.n	80030a0 <Set_GPIO_Clock+0x28>
 80030d6:	4b0e      	ldr	r3, [pc, #56]	; (8003110 <Set_GPIO_Clock+0x98>)
 80030d8:	4810      	ldr	r0, [pc, #64]	; (800311c <Set_GPIO_Clock+0xa4>)
 80030da:	695a      	ldr	r2, [r3, #20]
 80030dc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80030e0:	615a      	str	r2, [r3, #20]
 80030e2:	695b      	ldr	r3, [r3, #20]
 80030e4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80030e8:	9304      	str	r3, [sp, #16]
 80030ea:	9b04      	ldr	r3, [sp, #16]
 80030ec:	e7d8      	b.n	80030a0 <Set_GPIO_Clock+0x28>
 80030ee:	4b08      	ldr	r3, [pc, #32]	; (8003110 <Set_GPIO_Clock+0x98>)
 80030f0:	480b      	ldr	r0, [pc, #44]	; (8003120 <Set_GPIO_Clock+0xa8>)
 80030f2:	695a      	ldr	r2, [r3, #20]
 80030f4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80030f8:	615a      	str	r2, [r3, #20]
 80030fa:	695b      	ldr	r3, [r3, #20]
 80030fc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003100:	9305      	str	r3, [sp, #20]
 8003102:	9b05      	ldr	r3, [sp, #20]
 8003104:	e7cc      	b.n	80030a0 <Set_GPIO_Clock+0x28>
 8003106:	4807      	ldr	r0, [pc, #28]	; (8003124 <Set_GPIO_Clock+0xac>)
 8003108:	f7fe fc16 	bl	8001938 <error>
 800310c:	2000      	movs	r0, #0
 800310e:	e7c7      	b.n	80030a0 <Set_GPIO_Clock+0x28>
 8003110:	40021000 	.word	0x40021000
 8003114:	48000400 	.word	0x48000400
 8003118:	48000800 	.word	0x48000800
 800311c:	48000c00 	.word	0x48000c00
 8003120:	48001400 	.word	0x48001400
 8003124:	080068f4 	.word	0x080068f4

08003128 <gpio_set>:
 8003128:	b510      	push	{r4, lr}
 800312a:	2100      	movs	r1, #0
 800312c:	4604      	mov	r4, r0
 800312e:	f004 040f 	and.w	r4, r4, #15
 8003132:	f000 fb33 	bl	800379c <pin_function>
 8003136:	2001      	movs	r0, #1
 8003138:	40a0      	lsls	r0, r4
 800313a:	bd10      	pop	{r4, pc}

0800313c <gpio_init>:
 800313c:	b570      	push	{r4, r5, r6, lr}
 800313e:	4604      	mov	r4, r0
 8003140:	1c4b      	adds	r3, r1, #1
 8003142:	460e      	mov	r6, r1
 8003144:	8221      	strh	r1, [r4, #16]
 8003146:	d018      	beq.n	800317a <gpio_init+0x3e>
 8003148:	f3c1 1003 	ubfx	r0, r1, #4, #4
 800314c:	f7ff ff94 	bl	8003078 <Set_GPIO_Clock>
 8003150:	4605      	mov	r5, r0
 8003152:	4630      	mov	r0, r6
 8003154:	f7ff ffe8 	bl	8003128 <gpio_set>
 8003158:	8a23      	ldrh	r3, [r4, #16]
 800315a:	4a08      	ldr	r2, [pc, #32]	; (800317c <gpio_init+0x40>)
 800315c:	6165      	str	r5, [r4, #20]
 800315e:	f003 030f 	and.w	r3, r3, #15
 8003162:	6020      	str	r0, [r4, #0]
 8003164:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003168:	61a3      	str	r3, [r4, #24]
 800316a:	f105 0310 	add.w	r3, r5, #16
 800316e:	6063      	str	r3, [r4, #4]
 8003170:	f105 0318 	add.w	r3, r5, #24
 8003174:	3528      	adds	r5, #40	; 0x28
 8003176:	60a3      	str	r3, [r4, #8]
 8003178:	60e5      	str	r5, [r4, #12]
 800317a:	bd70      	pop	{r4, r5, r6, pc}
 800317c:	080069e4 	.word	0x080069e4

08003180 <gpio_mode>:
 8003180:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003184:	f000 bb8c 	b.w	80038a0 <pin_mode>

08003188 <gpio_dir>:
 8003188:	b510      	push	{r4, lr}
 800318a:	6983      	ldr	r3, [r0, #24]
 800318c:	6944      	ldr	r4, [r0, #20]
 800318e:	b971      	cbnz	r1, 80031ae <gpio_dir+0x26>
 8003190:	6821      	ldr	r1, [r4, #0]
 8003192:	fa93 f2a3 	rbit	r2, r3
 8003196:	fab2 f282 	clz	r2, r2
 800319a:	2003      	movs	r0, #3
 800319c:	0052      	lsls	r2, r2, #1
 800319e:	fa00 f202 	lsl.w	r2, r0, r2
 80031a2:	ea21 0202 	bic.w	r2, r1, r2
 80031a6:	fa93 f3a3 	rbit	r3, r3
 80031aa:	6022      	str	r2, [r4, #0]
 80031ac:	bd10      	pop	{r4, pc}
 80031ae:	6822      	ldr	r2, [r4, #0]
 80031b0:	fa93 f1a3 	rbit	r1, r3
 80031b4:	fab1 f181 	clz	r1, r1
 80031b8:	fa93 f3a3 	rbit	r3, r3
 80031bc:	2003      	movs	r0, #3
 80031be:	0049      	lsls	r1, r1, #1
 80031c0:	fa00 f101 	lsl.w	r1, r0, r1
 80031c4:	fab3 f383 	clz	r3, r3
 80031c8:	ea22 0201 	bic.w	r2, r2, r1
 80031cc:	005b      	lsls	r3, r3, #1
 80031ce:	2101      	movs	r1, #1
 80031d0:	fa01 f303 	lsl.w	r3, r1, r3
 80031d4:	4313      	orrs	r3, r2
 80031d6:	6023      	str	r3, [r4, #0]
 80031d8:	bd10      	pop	{r4, pc}

080031da <hal_sleep>:
 80031da:	b508      	push	{r3, lr}
 80031dc:	f7ff ff34 	bl	8003048 <HAL_SuspendTick>
 80031e0:	2101      	movs	r1, #1
 80031e2:	2000      	movs	r0, #0
 80031e4:	f000 fe46 	bl	8003e74 <HAL_PWR_EnterSLEEPMode>
 80031e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80031ec:	f7ff bf38 	b.w	8003060 <HAL_ResumeTick>

080031f0 <CAN_SCE_IRQHandler>:
 80031f0:	4b38      	ldr	r3, [pc, #224]	; (80032d4 <CAN_SCE_IRQHandler+0xe4>)
 80031f2:	695a      	ldr	r2, [r3, #20]
 80031f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031f8:	4c37      	ldr	r4, [pc, #220]	; (80032d8 <CAN_SCE_IRQHandler+0xe8>)
 80031fa:	07d2      	lsls	r2, r2, #31
 80031fc:	6023      	str	r3, [r4, #0]
 80031fe:	d52a      	bpl.n	8003256 <CAN_SCE_IRQHandler+0x66>
 8003200:	6898      	ldr	r0, [r3, #8]
 8003202:	4f36      	ldr	r7, [pc, #216]	; (80032dc <CAN_SCE_IRQHandler+0xec>)
 8003204:	6899      	ldr	r1, [r3, #8]
 8003206:	4e36      	ldr	r6, [pc, #216]	; (80032e0 <CAN_SCE_IRQHandler+0xf0>)
 8003208:	689a      	ldr	r2, [r3, #8]
 800320a:	4d36      	ldr	r5, [pc, #216]	; (80032e4 <CAN_SCE_IRQHandler+0xf4>)
 800320c:	4038      	ands	r0, r7
 800320e:	42b8      	cmp	r0, r7
 8003210:	ea01 0106 	and.w	r1, r1, r6
 8003214:	bf04      	itt	eq
 8003216:	2701      	moveq	r7, #1
 8003218:	609f      	streq	r7, [r3, #8]
 800321a:	42b1      	cmp	r1, r6
 800321c:	bf08      	it	eq
 800321e:	4b2d      	ldreq	r3, [pc, #180]	; (80032d4 <CAN_SCE_IRQHandler+0xe4>)
 8003220:	ea02 0205 	and.w	r2, r2, r5
 8003224:	bf04      	itt	eq
 8003226:	f44f 7680 	moveq.w	r6, #256	; 0x100
 800322a:	609e      	streq	r6, [r3, #8]
 800322c:	42aa      	cmp	r2, r5
 800322e:	bf02      	ittt	eq
 8003230:	4b28      	ldreq	r3, [pc, #160]	; (80032d4 <CAN_SCE_IRQHandler+0xe4>)
 8003232:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 8003236:	609d      	streq	r5, [r3, #8]
 8003238:	4b28      	ldr	r3, [pc, #160]	; (80032dc <CAN_SCE_IRQHandler+0xec>)
 800323a:	4298      	cmp	r0, r3
 800323c:	d005      	beq.n	800324a <CAN_SCE_IRQHandler+0x5a>
 800323e:	4b28      	ldr	r3, [pc, #160]	; (80032e0 <CAN_SCE_IRQHandler+0xf0>)
 8003240:	4299      	cmp	r1, r3
 8003242:	d002      	beq.n	800324a <CAN_SCE_IRQHandler+0x5a>
 8003244:	4b27      	ldr	r3, [pc, #156]	; (80032e4 <CAN_SCE_IRQHandler+0xf4>)
 8003246:	429a      	cmp	r2, r3
 8003248:	d105      	bne.n	8003256 <CAN_SCE_IRQHandler+0x66>
 800324a:	4b27      	ldr	r3, [pc, #156]	; (80032e8 <CAN_SCE_IRQHandler+0xf8>)
 800324c:	4a27      	ldr	r2, [pc, #156]	; (80032ec <CAN_SCE_IRQHandler+0xfc>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	6810      	ldr	r0, [r2, #0]
 8003252:	2101      	movs	r1, #1
 8003254:	4798      	blx	r3
 8003256:	6823      	ldr	r3, [r4, #0]
 8003258:	68da      	ldr	r2, [r3, #12]
 800325a:	695b      	ldr	r3, [r3, #20]
 800325c:	0797      	lsls	r7, r2, #30
 800325e:	d007      	beq.n	8003270 <CAN_SCE_IRQHandler+0x80>
 8003260:	079e      	lsls	r6, r3, #30
 8003262:	d505      	bpl.n	8003270 <CAN_SCE_IRQHandler+0x80>
 8003264:	4b20      	ldr	r3, [pc, #128]	; (80032e8 <CAN_SCE_IRQHandler+0xf8>)
 8003266:	4a21      	ldr	r2, [pc, #132]	; (80032ec <CAN_SCE_IRQHandler+0xfc>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	6810      	ldr	r0, [r2, #0]
 800326c:	2100      	movs	r1, #0
 800326e:	4798      	blx	r3
 8003270:	6823      	ldr	r3, [r4, #0]
 8003272:	6999      	ldr	r1, [r3, #24]
 8003274:	695a      	ldr	r2, [r3, #20]
 8003276:	695b      	ldr	r3, [r3, #20]
 8003278:	078d      	lsls	r5, r1, #30
 800327a:	d509      	bpl.n	8003290 <CAN_SCE_IRQHandler+0xa0>
 800327c:	0590      	lsls	r0, r2, #22
 800327e:	d507      	bpl.n	8003290 <CAN_SCE_IRQHandler+0xa0>
 8003280:	0419      	lsls	r1, r3, #16
 8003282:	d505      	bpl.n	8003290 <CAN_SCE_IRQHandler+0xa0>
 8003284:	4b18      	ldr	r3, [pc, #96]	; (80032e8 <CAN_SCE_IRQHandler+0xf8>)
 8003286:	4a19      	ldr	r2, [pc, #100]	; (80032ec <CAN_SCE_IRQHandler+0xfc>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	6810      	ldr	r0, [r2, #0]
 800328c:	2105      	movs	r1, #5
 800328e:	4798      	blx	r3
 8003290:	6822      	ldr	r2, [r4, #0]
 8003292:	6996      	ldr	r6, [r2, #24]
 8003294:	6955      	ldr	r5, [r2, #20]
 8003296:	6952      	ldr	r2, [r2, #20]
 8003298:	f016 0604 	ands.w	r6, r6, #4
 800329c:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 80032a0:	d008      	beq.n	80032b4 <CAN_SCE_IRQHandler+0xc4>
 80032a2:	b13d      	cbz	r5, 80032b4 <CAN_SCE_IRQHandler+0xc4>
 80032a4:	0412      	lsls	r2, r2, #16
 80032a6:	d505      	bpl.n	80032b4 <CAN_SCE_IRQHandler+0xc4>
 80032a8:	4b0f      	ldr	r3, [pc, #60]	; (80032e8 <CAN_SCE_IRQHandler+0xf8>)
 80032aa:	4a10      	ldr	r2, [pc, #64]	; (80032ec <CAN_SCE_IRQHandler+0xfc>)
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	6810      	ldr	r0, [r2, #0]
 80032b0:	2107      	movs	r1, #7
 80032b2:	4798      	blx	r3
 80032b4:	6823      	ldr	r3, [r4, #0]
 80032b6:	695b      	ldr	r3, [r3, #20]
 80032b8:	b156      	cbz	r6, 80032d0 <CAN_SCE_IRQHandler+0xe0>
 80032ba:	b14d      	cbz	r5, 80032d0 <CAN_SCE_IRQHandler+0xe0>
 80032bc:	041b      	lsls	r3, r3, #16
 80032be:	d507      	bpl.n	80032d0 <CAN_SCE_IRQHandler+0xe0>
 80032c0:	4b09      	ldr	r3, [pc, #36]	; (80032e8 <CAN_SCE_IRQHandler+0xf8>)
 80032c2:	4a0a      	ldr	r2, [pc, #40]	; (80032ec <CAN_SCE_IRQHandler+0xfc>)
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	6810      	ldr	r0, [r2, #0]
 80032c8:	2102      	movs	r1, #2
 80032ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80032ce:	4718      	bx	r3
 80032d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032d4:	40006400 	.word	0x40006400
 80032d8:	20001230 	.word	0x20001230
 80032dc:	04000003 	.word	0x04000003
 80032e0:	08000300 	.word	0x08000300
 80032e4:	10030000 	.word	0x10030000
 80032e8:	20001274 	.word	0x20001274
 80032ec:	20001270 	.word	0x20001270

080032f0 <CAN_TX_IRQHandler>:
 80032f0:	f7ff bf7e 	b.w	80031f0 <CAN_SCE_IRQHandler>

080032f4 <CAN_RX0_IRQHandler>:
 80032f4:	f7ff bf7c 	b.w	80031f0 <CAN_SCE_IRQHandler>

080032f8 <can_irq_init>:
 80032f8:	4b03      	ldr	r3, [pc, #12]	; (8003308 <can_irq_init+0x10>)
 80032fa:	6019      	str	r1, [r3, #0]
 80032fc:	6841      	ldr	r1, [r0, #4]
 80032fe:	4b03      	ldr	r3, [pc, #12]	; (800330c <can_irq_init+0x14>)
 8003300:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003304:	4770      	bx	lr
 8003306:	bf00      	nop
 8003308:	20001274 	.word	0x20001274
 800330c:	20001270 	.word	0x20001270

08003310 <can_irq_free>:
 8003310:	6802      	ldr	r2, [r0, #0]
 8003312:	6953      	ldr	r3, [r2, #20]
 8003314:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 8003318:	f023 0313 	bic.w	r3, r3, #19
 800331c:	6153      	str	r3, [r2, #20]
 800331e:	4b02      	ldr	r3, [pc, #8]	; (8003328 <can_irq_free+0x18>)
 8003320:	2100      	movs	r1, #0
 8003322:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003326:	4770      	bx	lr
 8003328:	20001270 	.word	0x20001270

0800332c <can_free>:
 800332c:	6802      	ldr	r2, [r0, #0]
 800332e:	4b09      	ldr	r3, [pc, #36]	; (8003354 <can_free+0x28>)
 8003330:	429a      	cmp	r2, r3
 8003332:	d10d      	bne.n	8003350 <can_free+0x24>
 8003334:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 8003338:	691a      	ldr	r2, [r3, #16]
 800333a:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 800333e:	611a      	str	r2, [r3, #16]
 8003340:	691a      	ldr	r2, [r3, #16]
 8003342:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8003346:	611a      	str	r2, [r3, #16]
 8003348:	69da      	ldr	r2, [r3, #28]
 800334a:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800334e:	61da      	str	r2, [r3, #28]
 8003350:	4770      	bx	lr
 8003352:	bf00      	nop
 8003354:	40006400 	.word	0x40006400

08003358 <can_frequency>:
 8003358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800335a:	460d      	mov	r5, r1
 800335c:	4604      	mov	r4, r0
 800335e:	f001 f8ff 	bl	8004560 <HAL_RCC_GetPCLK1Freq>
 8003362:	2318      	movs	r3, #24
 8003364:	fbb0 f0f5 	udiv	r0, r0, r5
 8003368:	2119      	movs	r1, #25
 800336a:	fbb0 f3f3 	udiv	r3, r0, r3
 800336e:	0886      	lsrs	r6, r0, #2
 8003370:	b29b      	uxth	r3, r3
 8003372:	42b3      	cmp	r3, r6
 8003374:	d315      	bcc.n	80033a2 <can_frequency+0x4a>
 8003376:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800337a:	2b00      	cmp	r3, #0
 800337c:	6822      	ldr	r2, [r4, #0]
 800337e:	dd1c      	ble.n	80033ba <can_frequency+0x62>
 8003380:	6811      	ldr	r1, [r2, #0]
 8003382:	f041 0101 	orr.w	r1, r1, #1
 8003386:	6011      	str	r1, [r2, #0]
 8003388:	6851      	ldr	r1, [r2, #4]
 800338a:	07c9      	lsls	r1, r1, #31
 800338c:	d5fc      	bpl.n	8003388 <can_frequency+0x30>
 800338e:	61d3      	str	r3, [r2, #28]
 8003390:	6813      	ldr	r3, [r2, #0]
 8003392:	f023 0301 	bic.w	r3, r3, #1
 8003396:	6013      	str	r3, [r2, #0]
 8003398:	6853      	ldr	r3, [r2, #4]
 800339a:	07db      	lsls	r3, r3, #31
 800339c:	d4fc      	bmi.n	8003398 <can_frequency+0x40>
 800339e:	2001      	movs	r0, #1
 80033a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033a2:	3301      	adds	r3, #1
 80033a4:	b29b      	uxth	r3, r3
 80033a6:	43df      	mvns	r7, r3
 80033a8:	fb03 1201 	mla	r2, r3, r1, r1
 80033ac:	2516      	movs	r5, #22
 80033ae:	4290      	cmp	r0, r2
 80033b0:	d005      	beq.n	80033be <can_frequency+0x66>
 80033b2:	3d01      	subs	r5, #1
 80033b4:	443a      	add	r2, r7
 80033b6:	d1fa      	bne.n	80033ae <can_frequency+0x56>
 80033b8:	e7db      	b.n	8003372 <can_frequency+0x1a>
 80033ba:	2000      	movs	r0, #0
 80033bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033be:	4908      	ldr	r1, [pc, #32]	; (80033e0 <can_frequency+0x88>)
 80033c0:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 80033c4:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 80033c8:	6852      	ldr	r2, [r2, #4]
 80033ca:	0409      	lsls	r1, r1, #16
 80033cc:	0512      	lsls	r2, r2, #20
 80033ce:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 80033d2:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80033d6:	430a      	orrs	r2, r1
 80033d8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80033dc:	4313      	orrs	r3, r2
 80033de:	e7cc      	b.n	800337a <can_frequency+0x22>
 80033e0:	0800692c 	.word	0x0800692c

080033e4 <can_write>:
 80033e4:	b084      	sub	sp, #16
 80033e6:	b530      	push	{r4, r5, lr}
 80033e8:	ac04      	add	r4, sp, #16
 80033ea:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 80033ee:	6804      	ldr	r4, [r0, #0]
 80033f0:	f89d 201e 	ldrb.w	r2, [sp, #30]
 80033f4:	68a3      	ldr	r3, [r4, #8]
 80033f6:	0158      	lsls	r0, r3, #5
 80033f8:	d43a      	bmi.n	8003470 <can_write+0x8c>
 80033fa:	68a3      	ldr	r3, [r4, #8]
 80033fc:	011b      	lsls	r3, r3, #4
 80033fe:	d439      	bmi.n	8003474 <can_write+0x90>
 8003400:	68a0      	ldr	r0, [r4, #8]
 8003402:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 8003406:	d02f      	beq.n	8003468 <can_write+0x84>
 8003408:	2002      	movs	r0, #2
 800340a:	0100      	lsls	r0, r0, #4
 800340c:	1823      	adds	r3, r4, r0
 800340e:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003412:	f005 0501 	and.w	r5, r5, #1
 8003416:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 800341a:	f89d 501d 	ldrb.w	r5, [sp, #29]
 800341e:	bb5d      	cbnz	r5, 8003478 <can_write+0x94>
 8003420:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003424:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 8003428:	4329      	orrs	r1, r5
 800342a:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 800342e:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 8003432:	f021 010f 	bic.w	r1, r1, #15
 8003436:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 800343a:	f89d 101c 	ldrb.w	r1, [sp, #28]
 800343e:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8003442:	f001 010f 	and.w	r1, r1, #15
 8003446:	4311      	orrs	r1, r2
 8003448:	1822      	adds	r2, r4, r0
 800344a:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 800344e:	9905      	ldr	r1, [sp, #20]
 8003450:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 8003454:	9906      	ldr	r1, [sp, #24]
 8003456:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 800345a:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 800345e:	f042 0201 	orr.w	r2, r2, #1
 8003462:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 8003466:	2001      	movs	r0, #1
 8003468:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800346c:	b004      	add	sp, #16
 800346e:	4770      	bx	lr
 8003470:	2000      	movs	r0, #0
 8003472:	e7ca      	b.n	800340a <can_write+0x26>
 8003474:	2001      	movs	r0, #1
 8003476:	e7c8      	b.n	800340a <can_write+0x26>
 8003478:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 800347c:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003480:	f041 0104 	orr.w	r1, r1, #4
 8003484:	e7d0      	b.n	8003428 <can_write+0x44>

08003486 <can_read>:
 8003486:	b530      	push	{r4, r5, lr}
 8003488:	6804      	ldr	r4, [r0, #0]
 800348a:	68e0      	ldr	r0, [r4, #12]
 800348c:	f010 0003 	ands.w	r0, r0, #3
 8003490:	d03a      	beq.n	8003508 <can_read+0x82>
 8003492:	0113      	lsls	r3, r2, #4
 8003494:	18e0      	adds	r0, r4, r3
 8003496:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800349a:	f3c5 0580 	ubfx	r5, r5, #2, #1
 800349e:	734d      	strb	r5, [r1, #13]
 80034a0:	bb9d      	cbnz	r5, 800350a <can_read+0x84>
 80034a2:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80034a6:	0d6d      	lsrs	r5, r5, #21
 80034a8:	600d      	str	r5, [r1, #0]
 80034aa:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80034ae:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 80034b2:	4423      	add	r3, r4
 80034b4:	f000 000f 	and.w	r0, r0, #15
 80034b8:	7308      	strb	r0, [r1, #12]
 80034ba:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80034be:	7108      	strb	r0, [r1, #4]
 80034c0:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80034c4:	0a00      	lsrs	r0, r0, #8
 80034c6:	7148      	strb	r0, [r1, #5]
 80034c8:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80034cc:	0c00      	lsrs	r0, r0, #16
 80034ce:	7188      	strb	r0, [r1, #6]
 80034d0:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80034d4:	0e00      	lsrs	r0, r0, #24
 80034d6:	71c8      	strb	r0, [r1, #7]
 80034d8:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80034dc:	7208      	strb	r0, [r1, #8]
 80034de:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80034e2:	0a00      	lsrs	r0, r0, #8
 80034e4:	7248      	strb	r0, [r1, #9]
 80034e6:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80034ea:	0c00      	lsrs	r0, r0, #16
 80034ec:	7288      	strb	r0, [r1, #10]
 80034ee:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 80034f2:	f3c5 0540 	ubfx	r5, r5, #1, #1
 80034f6:	0e1b      	lsrs	r3, r3, #24
 80034f8:	738d      	strb	r5, [r1, #14]
 80034fa:	72cb      	strb	r3, [r1, #11]
 80034fc:	b94a      	cbnz	r2, 8003512 <can_read+0x8c>
 80034fe:	68e3      	ldr	r3, [r4, #12]
 8003500:	f043 0320 	orr.w	r3, r3, #32
 8003504:	60e3      	str	r3, [r4, #12]
 8003506:	2001      	movs	r0, #1
 8003508:	bd30      	pop	{r4, r5, pc}
 800350a:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800350e:	08ed      	lsrs	r5, r5, #3
 8003510:	e7ca      	b.n	80034a8 <can_read+0x22>
 8003512:	6923      	ldr	r3, [r4, #16]
 8003514:	f043 0320 	orr.w	r3, r3, #32
 8003518:	6123      	str	r3, [r4, #16]
 800351a:	e7f4      	b.n	8003506 <can_read+0x80>

0800351c <can_filter>:
 800351c:	b530      	push	{r4, r5, lr}
 800351e:	b08b      	sub	sp, #44	; 0x2c
 8003520:	2b01      	cmp	r3, #1
 8003522:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003524:	d82b      	bhi.n	800357e <can_filter+0x62>
 8003526:	6805      	ldr	r5, [r0, #0]
 8003528:	4816      	ldr	r0, [pc, #88]	; (8003584 <can_filter+0x68>)
 800352a:	9405      	str	r4, [sp, #20]
 800352c:	6005      	str	r5, [r0, #0]
 800352e:	2000      	movs	r0, #0
 8003530:	9006      	str	r0, [sp, #24]
 8003532:	2001      	movs	r0, #1
 8003534:	9007      	str	r0, [sp, #28]
 8003536:	b99b      	cbnz	r3, 8003560 <can_filter+0x44>
 8003538:	0149      	lsls	r1, r1, #5
 800353a:	e88d 000a 	stmia.w	sp, {r1, r3}
 800353e:	0152      	lsls	r2, r2, #5
 8003540:	9202      	str	r2, [sp, #8]
 8003542:	9303      	str	r3, [sp, #12]
 8003544:	2300      	movs	r3, #0
 8003546:	9304      	str	r3, [sp, #16]
 8003548:	2301      	movs	r3, #1
 800354a:	9308      	str	r3, [sp, #32]
 800354c:	4669      	mov	r1, sp
 800354e:	f104 030e 	add.w	r3, r4, #14
 8003552:	480c      	ldr	r0, [pc, #48]	; (8003584 <can_filter+0x68>)
 8003554:	9309      	str	r3, [sp, #36]	; 0x24
 8003556:	f001 f885 	bl	8004664 <HAL_CAN_ConfigFilter>
 800355a:	4620      	mov	r0, r4
 800355c:	b00b      	add	sp, #44	; 0x2c
 800355e:	bd30      	pop	{r4, r5, pc}
 8003560:	0b4b      	lsrs	r3, r1, #13
 8003562:	9300      	str	r3, [sp, #0]
 8003564:	00c9      	lsls	r1, r1, #3
 8003566:	0b53      	lsrs	r3, r2, #13
 8003568:	00d2      	lsls	r2, r2, #3
 800356a:	b2c9      	uxtb	r1, r1
 800356c:	b2d2      	uxtb	r2, r2
 800356e:	f041 0104 	orr.w	r1, r1, #4
 8003572:	f042 0204 	orr.w	r2, r2, #4
 8003576:	9101      	str	r1, [sp, #4]
 8003578:	9302      	str	r3, [sp, #8]
 800357a:	9203      	str	r2, [sp, #12]
 800357c:	e7e2      	b.n	8003544 <can_filter+0x28>
 800357e:	2000      	movs	r0, #0
 8003580:	e7ec      	b.n	800355c <can_filter+0x40>
 8003582:	bf00      	nop
 8003584:	20001230 	.word	0x20001230

08003588 <can_init>:
 8003588:	b5f0      	push	{r4, r5, r6, r7, lr}
 800358a:	460e      	mov	r6, r1
 800358c:	b085      	sub	sp, #20
 800358e:	4604      	mov	r4, r0
 8003590:	492f      	ldr	r1, [pc, #188]	; (8003650 <can_init+0xc8>)
 8003592:	4630      	mov	r0, r6
 8003594:	4615      	mov	r5, r2
 8003596:	f7fe f98f 	bl	80018b8 <pinmap_peripheral>
 800359a:	492e      	ldr	r1, [pc, #184]	; (8003654 <can_init+0xcc>)
 800359c:	4607      	mov	r7, r0
 800359e:	4628      	mov	r0, r5
 80035a0:	f7fe f98a 	bl	80018b8 <pinmap_peripheral>
 80035a4:	4601      	mov	r1, r0
 80035a6:	4638      	mov	r0, r7
 80035a8:	f7fe f968 	bl	800187c <pinmap_merge>
 80035ac:	4b2a      	ldr	r3, [pc, #168]	; (8003658 <can_init+0xd0>)
 80035ae:	6020      	str	r0, [r4, #0]
 80035b0:	4298      	cmp	r0, r3
 80035b2:	d14b      	bne.n	800364c <can_init+0xc4>
 80035b4:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 80035b8:	4925      	ldr	r1, [pc, #148]	; (8003650 <can_init+0xc8>)
 80035ba:	69da      	ldr	r2, [r3, #28]
 80035bc:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80035c0:	61da      	str	r2, [r3, #28]
 80035c2:	69db      	ldr	r3, [r3, #28]
 80035c4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80035c8:	9303      	str	r3, [sp, #12]
 80035ca:	9b03      	ldr	r3, [sp, #12]
 80035cc:	2300      	movs	r3, #0
 80035ce:	6063      	str	r3, [r4, #4]
 80035d0:	4630      	mov	r0, r6
 80035d2:	f7fe f935 	bl	8001840 <pinmap_pinout>
 80035d6:	491f      	ldr	r1, [pc, #124]	; (8003654 <can_init+0xcc>)
 80035d8:	4628      	mov	r0, r5
 80035da:	f7fe f931 	bl	8001840 <pinmap_pinout>
 80035de:	1c72      	adds	r2, r6, #1
 80035e0:	d003      	beq.n	80035ea <can_init+0x62>
 80035e2:	2101      	movs	r1, #1
 80035e4:	4630      	mov	r0, r6
 80035e6:	f000 f95b 	bl	80038a0 <pin_mode>
 80035ea:	1c6b      	adds	r3, r5, #1
 80035ec:	d003      	beq.n	80035f6 <can_init+0x6e>
 80035ee:	2101      	movs	r1, #1
 80035f0:	4628      	mov	r0, r5
 80035f2:	f000 f955 	bl	80038a0 <pin_mode>
 80035f6:	4819      	ldr	r0, [pc, #100]	; (800365c <can_init+0xd4>)
 80035f8:	6823      	ldr	r3, [r4, #0]
 80035fa:	6003      	str	r3, [r0, #0]
 80035fc:	2300      	movs	r3, #0
 80035fe:	6183      	str	r3, [r0, #24]
 8003600:	61c3      	str	r3, [r0, #28]
 8003602:	6203      	str	r3, [r0, #32]
 8003604:	6243      	str	r3, [r0, #36]	; 0x24
 8003606:	6283      	str	r3, [r0, #40]	; 0x28
 8003608:	62c3      	str	r3, [r0, #44]	; 0x2c
 800360a:	6083      	str	r3, [r0, #8]
 800360c:	60c3      	str	r3, [r0, #12]
 800360e:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8003612:	6103      	str	r3, [r0, #16]
 8003614:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 8003618:	6143      	str	r3, [r0, #20]
 800361a:	2302      	movs	r3, #2
 800361c:	6043      	str	r3, [r0, #4]
 800361e:	f001 f882 	bl	8004726 <HAL_CAN_Init>
 8003622:	b110      	cbz	r0, 800362a <can_init+0xa2>
 8003624:	480e      	ldr	r0, [pc, #56]	; (8003660 <can_init+0xd8>)
 8003626:	f7fe f987 	bl	8001938 <error>
 800362a:	490e      	ldr	r1, [pc, #56]	; (8003664 <can_init+0xdc>)
 800362c:	4620      	mov	r0, r4
 800362e:	f7ff fe93 	bl	8003358 <can_frequency>
 8003632:	4a09      	ldr	r2, [pc, #36]	; (8003658 <can_init+0xd0>)
 8003634:	6823      	ldr	r3, [r4, #0]
 8003636:	4293      	cmp	r3, r2
 8003638:	bf14      	ite	ne
 800363a:	230e      	movne	r3, #14
 800363c:	2300      	moveq	r3, #0
 800363e:	9300      	str	r3, [sp, #0]
 8003640:	2300      	movs	r3, #0
 8003642:	461a      	mov	r2, r3
 8003644:	4619      	mov	r1, r3
 8003646:	4620      	mov	r0, r4
 8003648:	f7ff ff68 	bl	800351c <can_filter>
 800364c:	b005      	add	sp, #20
 800364e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003650:	08006a3c 	.word	0x08006a3c
 8003654:	08006a54 	.word	0x08006a54
 8003658:	40006400 	.word	0x40006400
 800365c:	20001230 	.word	0x20001230
 8003660:	08006915 	.word	0x08006915
 8003664:	000186a0 	.word	0x000186a0

08003668 <can_irq_set>:
 8003668:	4b19      	ldr	r3, [pc, #100]	; (80036d0 <can_irq_set+0x68>)
 800366a:	6800      	ldr	r0, [r0, #0]
 800366c:	4298      	cmp	r0, r3
 800366e:	b510      	push	{r4, lr}
 8003670:	4618      	mov	r0, r3
 8003672:	d116      	bne.n	80036a2 <can_irq_set+0x3a>
 8003674:	2907      	cmp	r1, #7
 8003676:	d814      	bhi.n	80036a2 <can_irq_set+0x3a>
 8003678:	e8df f001 	tbb	[pc, r1]
 800367c:	13181404 	.word	0x13181404
 8003680:	21131d13 	.word	0x21131d13
 8003684:	4913      	ldr	r1, [pc, #76]	; (80036d4 <can_irq_set+0x6c>)
 8003686:	2302      	movs	r3, #2
 8003688:	2414      	movs	r4, #20
 800368a:	b1e2      	cbz	r2, 80036c6 <can_irq_set+0x5e>
 800368c:	6942      	ldr	r2, [r0, #20]
 800368e:	4313      	orrs	r3, r2
 8003690:	6143      	str	r3, [r0, #20]
 8003692:	4620      	mov	r0, r4
 8003694:	f000 fbce 	bl	8003e34 <__NVIC_SetVector>
 8003698:	2301      	movs	r3, #1
 800369a:	fa03 f404 	lsl.w	r4, r3, r4
 800369e:	4b0e      	ldr	r3, [pc, #56]	; (80036d8 <can_irq_set+0x70>)
 80036a0:	601c      	str	r4, [r3, #0]
 80036a2:	bd10      	pop	{r4, pc}
 80036a4:	490d      	ldr	r1, [pc, #52]	; (80036dc <can_irq_set+0x74>)
 80036a6:	2301      	movs	r3, #1
 80036a8:	2413      	movs	r4, #19
 80036aa:	e7ee      	b.n	800368a <can_irq_set+0x22>
 80036ac:	490c      	ldr	r1, [pc, #48]	; (80036e0 <can_irq_set+0x78>)
 80036ae:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80036b2:	2416      	movs	r4, #22
 80036b4:	e7e9      	b.n	800368a <can_irq_set+0x22>
 80036b6:	490a      	ldr	r1, [pc, #40]	; (80036e0 <can_irq_set+0x78>)
 80036b8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80036bc:	e7f9      	b.n	80036b2 <can_irq_set+0x4a>
 80036be:	4908      	ldr	r1, [pc, #32]	; (80036e0 <can_irq_set+0x78>)
 80036c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80036c4:	e7f5      	b.n	80036b2 <can_irq_set+0x4a>
 80036c6:	6942      	ldr	r2, [r0, #20]
 80036c8:	ea22 0303 	bic.w	r3, r2, r3
 80036cc:	e7e0      	b.n	8003690 <can_irq_set+0x28>
 80036ce:	bf00      	nop
 80036d0:	40006400 	.word	0x40006400
 80036d4:	080032f5 	.word	0x080032f5
 80036d8:	e000e100 	.word	0xe000e100
 80036dc:	080032f1 	.word	0x080032f1
 80036e0:	080031f1 	.word	0x080031f1

080036e4 <us_ticker_init>:
 80036e4:	4b05      	ldr	r3, [pc, #20]	; (80036fc <us_ticker_init+0x18>)
 80036e6:	6818      	ldr	r0, [r3, #0]
 80036e8:	b938      	cbnz	r0, 80036fa <us_ticker_init+0x16>
 80036ea:	2201      	movs	r2, #1
 80036ec:	601a      	str	r2, [r3, #0]
 80036ee:	4b04      	ldr	r3, [pc, #16]	; (8003700 <us_ticker_init+0x1c>)
 80036f0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80036f4:	601a      	str	r2, [r3, #0]
 80036f6:	f7ff bc49 	b.w	8002f8c <HAL_InitTick>
 80036fa:	4770      	bx	lr
 80036fc:	20001278 	.word	0x20001278
 8003700:	20001e80 	.word	0x20001e80

08003704 <us_ticker_read>:
 8003704:	b508      	push	{r3, lr}
 8003706:	4b04      	ldr	r3, [pc, #16]	; (8003718 <us_ticker_read+0x14>)
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	b90b      	cbnz	r3, 8003710 <us_ticker_read+0xc>
 800370c:	f7ff ffea 	bl	80036e4 <us_ticker_init>
 8003710:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003714:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003716:	bd08      	pop	{r3, pc}
 8003718:	20001278 	.word	0x20001278

0800371c <us_ticker_set_interrupt>:
 800371c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003720:	4a03      	ldr	r2, [pc, #12]	; (8003730 <us_ticker_set_interrupt+0x14>)
 8003722:	6013      	str	r3, [r2, #0]
 8003724:	6358      	str	r0, [r3, #52]	; 0x34
 8003726:	68da      	ldr	r2, [r3, #12]
 8003728:	f042 0202 	orr.w	r2, r2, #2
 800372c:	60da      	str	r2, [r3, #12]
 800372e:	4770      	bx	lr
 8003730:	20001e80 	.word	0x20001e80

08003734 <us_ticker_disable_interrupt>:
 8003734:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003738:	4a03      	ldr	r2, [pc, #12]	; (8003748 <us_ticker_disable_interrupt+0x14>)
 800373a:	6013      	str	r3, [r2, #0]
 800373c:	68da      	ldr	r2, [r3, #12]
 800373e:	f022 0202 	bic.w	r2, r2, #2
 8003742:	60da      	str	r2, [r3, #12]
 8003744:	4770      	bx	lr
 8003746:	bf00      	nop
 8003748:	20001e80 	.word	0x20001e80

0800374c <us_ticker_clear_interrupt>:
 800374c:	4a03      	ldr	r2, [pc, #12]	; (800375c <us_ticker_clear_interrupt+0x10>)
 800374e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003752:	6013      	str	r3, [r2, #0]
 8003754:	f06f 0202 	mvn.w	r2, #2
 8003758:	611a      	str	r2, [r3, #16]
 800375a:	4770      	bx	lr
 800375c:	20001e80 	.word	0x20001e80

08003760 <LL_GPIO_SetPinPull>:
 8003760:	b530      	push	{r4, r5, lr}
 8003762:	68c3      	ldr	r3, [r0, #12]
 8003764:	fa91 f4a1 	rbit	r4, r1
 8003768:	fab4 f484 	clz	r4, r4
 800376c:	fa91 f1a1 	rbit	r1, r1
 8003770:	2503      	movs	r5, #3
 8003772:	fab1 f181 	clz	r1, r1
 8003776:	0064      	lsls	r4, r4, #1
 8003778:	fa05 f404 	lsl.w	r4, r5, r4
 800377c:	0049      	lsls	r1, r1, #1
 800377e:	ea23 0304 	bic.w	r3, r3, r4
 8003782:	fa02 f101 	lsl.w	r1, r2, r1
 8003786:	4319      	orrs	r1, r3
 8003788:	60c1      	str	r1, [r0, #12]
 800378a:	bd30      	pop	{r4, r5, pc}

0800378c <stm_pin_PullConfig>:
 800378c:	2a01      	cmp	r2, #1
 800378e:	d002      	beq.n	8003796 <stm_pin_PullConfig+0xa>
 8003790:	2a02      	cmp	r2, #2
 8003792:	bf18      	it	ne
 8003794:	2200      	movne	r2, #0
 8003796:	f7ff bfe3 	b.w	8003760 <LL_GPIO_SetPinPull>
	...

0800379c <pin_function>:
 800379c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80037a0:	4b3e      	ldr	r3, [pc, #248]	; (800389c <pin_function+0x100>)
 80037a2:	f000 080f 	and.w	r8, r0, #15
 80037a6:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80037aa:	460e      	mov	r6, r1
 80037ac:	f001 0507 	and.w	r5, r1, #7
 80037b0:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 80037b4:	f7ff fc60 	bl	8003078 <Set_GPIO_Clock>
 80037b8:	6882      	ldr	r2, [r0, #8]
 80037ba:	fa94 f3a4 	rbit	r3, r4
 80037be:	fab3 f383 	clz	r3, r3
 80037c2:	fa94 f1a4 	rbit	r1, r4
 80037c6:	2703      	movs	r7, #3
 80037c8:	005b      	lsls	r3, r3, #1
 80037ca:	fab1 f181 	clz	r1, r1
 80037ce:	fa07 f303 	lsl.w	r3, r7, r3
 80037d2:	ea22 0303 	bic.w	r3, r2, r3
 80037d6:	004a      	lsls	r2, r1, #1
 80037d8:	fa07 f202 	lsl.w	r2, r7, r2
 80037dc:	4313      	orrs	r3, r2
 80037de:	2d02      	cmp	r5, #2
 80037e0:	6083      	str	r3, [r0, #8]
 80037e2:	d028      	beq.n	8003836 <pin_function+0x9a>
 80037e4:	42bd      	cmp	r5, r7
 80037e6:	d041      	beq.n	800386c <pin_function+0xd0>
 80037e8:	2d01      	cmp	r5, #1
 80037ea:	d03f      	beq.n	800386c <pin_function+0xd0>
 80037ec:	2300      	movs	r3, #0
 80037ee:	6802      	ldr	r2, [r0, #0]
 80037f0:	fa94 f7a4 	rbit	r7, r4
 80037f4:	fab7 f787 	clz	r7, r7
 80037f8:	fa94 f1a4 	rbit	r1, r4
 80037fc:	f04f 0e03 	mov.w	lr, #3
 8003800:	fab1 f181 	clz	r1, r1
 8003804:	007f      	lsls	r7, r7, #1
 8003806:	fa0e f707 	lsl.w	r7, lr, r7
 800380a:	0049      	lsls	r1, r1, #1
 800380c:	ea22 0207 	bic.w	r2, r2, r7
 8003810:	408b      	lsls	r3, r1
 8003812:	3d01      	subs	r5, #1
 8003814:	4313      	orrs	r3, r2
 8003816:	2d01      	cmp	r5, #1
 8003818:	6003      	str	r3, [r0, #0]
 800381a:	d805      	bhi.n	8003828 <pin_function+0x8c>
 800381c:	6843      	ldr	r3, [r0, #4]
 800381e:	0732      	lsls	r2, r6, #28
 8003820:	bf4c      	ite	mi
 8003822:	4323      	orrmi	r3, r4
 8003824:	43a3      	bicpl	r3, r4
 8003826:	6043      	str	r3, [r0, #4]
 8003828:	f3c6 1201 	ubfx	r2, r6, #4, #2
 800382c:	4621      	mov	r1, r4
 800382e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003832:	f7ff bfab 	b.w	800378c <stm_pin_PullConfig>
 8003836:	f1b8 0f07 	cmp.w	r8, #7
 800383a:	f3c6 2703 	ubfx	r7, r6, #8, #4
 800383e:	d917      	bls.n	8003870 <pin_function+0xd4>
 8003840:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003842:	0a23      	lsrs	r3, r4, #8
 8003844:	fa93 f1a3 	rbit	r1, r3
 8003848:	fab1 f181 	clz	r1, r1
 800384c:	fa93 f3a3 	rbit	r3, r3
 8003850:	f04f 0e0f 	mov.w	lr, #15
 8003854:	fab3 f383 	clz	r3, r3
 8003858:	0089      	lsls	r1, r1, #2
 800385a:	fa0e f101 	lsl.w	r1, lr, r1
 800385e:	009b      	lsls	r3, r3, #2
 8003860:	ea22 0201 	bic.w	r2, r2, r1
 8003864:	fa07 f303 	lsl.w	r3, r7, r3
 8003868:	4313      	orrs	r3, r2
 800386a:	6243      	str	r3, [r0, #36]	; 0x24
 800386c:	462b      	mov	r3, r5
 800386e:	e7be      	b.n	80037ee <pin_function+0x52>
 8003870:	6a02      	ldr	r2, [r0, #32]
 8003872:	fa94 f3a4 	rbit	r3, r4
 8003876:	fab3 f383 	clz	r3, r3
 800387a:	fa94 f1a4 	rbit	r1, r4
 800387e:	f04f 0e0f 	mov.w	lr, #15
 8003882:	fab1 f181 	clz	r1, r1
 8003886:	009b      	lsls	r3, r3, #2
 8003888:	fa0e f303 	lsl.w	r3, lr, r3
 800388c:	0089      	lsls	r1, r1, #2
 800388e:	ea22 0203 	bic.w	r2, r2, r3
 8003892:	fa07 f301 	lsl.w	r3, r7, r1
 8003896:	4313      	orrs	r3, r2
 8003898:	6203      	str	r3, [r0, #32]
 800389a:	e7e7      	b.n	800386c <pin_function+0xd0>
 800389c:	080069e4 	.word	0x080069e4

080038a0 <pin_mode>:
 80038a0:	f000 020f 	and.w	r2, r0, #15
 80038a4:	4b1c      	ldr	r3, [pc, #112]	; (8003918 <pin_mode+0x78>)
 80038a6:	b570      	push	{r4, r5, r6, lr}
 80038a8:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80038ac:	460d      	mov	r5, r1
 80038ae:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80038b2:	f7ff fbe1 	bl	8003078 <Set_GPIO_Clock>
 80038b6:	6806      	ldr	r6, [r0, #0]
 80038b8:	fa94 f1a4 	rbit	r1, r4
 80038bc:	fab1 f381 	clz	r3, r1
 80038c0:	fa94 f2a4 	rbit	r2, r4
 80038c4:	0059      	lsls	r1, r3, #1
 80038c6:	2303      	movs	r3, #3
 80038c8:	fab2 f282 	clz	r2, r2
 80038cc:	408b      	lsls	r3, r1
 80038ce:	4033      	ands	r3, r6
 80038d0:	0052      	lsls	r2, r2, #1
 80038d2:	40d3      	lsrs	r3, r2
 80038d4:	3b01      	subs	r3, #1
 80038d6:	2b01      	cmp	r3, #1
 80038d8:	d805      	bhi.n	80038e6 <pin_mode+0x46>
 80038da:	1eeb      	subs	r3, r5, #3
 80038dc:	2b02      	cmp	r3, #2
 80038de:	6843      	ldr	r3, [r0, #4]
 80038e0:	d809      	bhi.n	80038f6 <pin_mode+0x56>
 80038e2:	4323      	orrs	r3, r4
 80038e4:	6043      	str	r3, [r0, #4]
 80038e6:	2d03      	cmp	r5, #3
 80038e8:	d108      	bne.n	80038fc <pin_mode+0x5c>
 80038ea:	2201      	movs	r2, #1
 80038ec:	4621      	mov	r1, r4
 80038ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80038f2:	f7ff bf4b 	b.w	800378c <stm_pin_PullConfig>
 80038f6:	ea23 0304 	bic.w	r3, r3, r4
 80038fa:	6043      	str	r3, [r0, #4]
 80038fc:	2d01      	cmp	r5, #1
 80038fe:	d0f4      	beq.n	80038ea <pin_mode+0x4a>
 8003900:	2d05      	cmp	r5, #5
 8003902:	d001      	beq.n	8003908 <pin_mode+0x68>
 8003904:	2d02      	cmp	r5, #2
 8003906:	d101      	bne.n	800390c <pin_mode+0x6c>
 8003908:	2202      	movs	r2, #2
 800390a:	e7ef      	b.n	80038ec <pin_mode+0x4c>
 800390c:	4621      	mov	r1, r4
 800390e:	2200      	movs	r2, #0
 8003910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003914:	f7ff bf24 	b.w	8003760 <LL_GPIO_SetPinPull>
 8003918:	080069e4 	.word	0x080069e4

0800391c <init_uart>:
 800391c:	6843      	ldr	r3, [r0, #4]
 800391e:	4918      	ldr	r1, [pc, #96]	; (8003980 <init_uart+0x64>)
 8003920:	2270      	movs	r2, #112	; 0x70
 8003922:	435a      	muls	r2, r3
 8003924:	b510      	push	{r4, lr}
 8003926:	188b      	adds	r3, r1, r2
 8003928:	6804      	ldr	r4, [r0, #0]
 800392a:	508c      	str	r4, [r1, r2]
 800392c:	6882      	ldr	r2, [r0, #8]
 800392e:	605a      	str	r2, [r3, #4]
 8003930:	68c2      	ldr	r2, [r0, #12]
 8003932:	609a      	str	r2, [r3, #8]
 8003934:	6902      	ldr	r2, [r0, #16]
 8003936:	60da      	str	r2, [r3, #12]
 8003938:	6942      	ldr	r2, [r0, #20]
 800393a:	611a      	str	r2, [r3, #16]
 800393c:	69c2      	ldr	r2, [r0, #28]
 800393e:	619a      	str	r2, [r3, #24]
 8003940:	2200      	movs	r2, #0
 8003942:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003946:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800394a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800394e:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8003952:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003956:	3201      	adds	r2, #1
 8003958:	d10a      	bne.n	8003970 <init_uart+0x54>
 800395a:	2208      	movs	r2, #8
 800395c:	615a      	str	r2, [r3, #20]
 800395e:	4618      	mov	r0, r3
 8003960:	f001 f96b 	bl	8004c3a <HAL_UART_Init>
 8003964:	b158      	cbz	r0, 800397e <init_uart+0x62>
 8003966:	4807      	ldr	r0, [pc, #28]	; (8003984 <init_uart+0x68>)
 8003968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800396c:	f7fd bfe4 	b.w	8001938 <error>
 8003970:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003974:	3201      	adds	r2, #1
 8003976:	bf0c      	ite	eq
 8003978:	2204      	moveq	r2, #4
 800397a:	220c      	movne	r2, #12
 800397c:	e7ee      	b.n	800395c <init_uart+0x40>
 800397e:	bd10      	pop	{r4, pc}
 8003980:	20001298 	.word	0x20001298
 8003984:	08006a24 	.word	0x08006a24

08003988 <uart_irq>:
 8003988:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800398a:	4f1c      	ldr	r7, [pc, #112]	; (80039fc <uart_irq+0x74>)
 800398c:	4605      	mov	r5, r0
 800398e:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8003992:	2800      	cmp	r0, #0
 8003994:	d02f      	beq.n	80039f6 <uart_irq+0x6e>
 8003996:	2670      	movs	r6, #112	; 0x70
 8003998:	4c19      	ldr	r4, [pc, #100]	; (8003a00 <uart_irq+0x78>)
 800399a:	436e      	muls	r6, r5
 800399c:	59a3      	ldr	r3, [r4, r6]
 800399e:	69da      	ldr	r2, [r3, #28]
 80039a0:	0652      	lsls	r2, r2, #25
 80039a2:	d509      	bpl.n	80039b8 <uart_irq+0x30>
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	0659      	lsls	r1, r3, #25
 80039a8:	d506      	bpl.n	80039b8 <uart_irq+0x30>
 80039aa:	4b16      	ldr	r3, [pc, #88]	; (8003a04 <uart_irq+0x7c>)
 80039ac:	2101      	movs	r1, #1
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	4798      	blx	r3
 80039b2:	59a3      	ldr	r3, [r4, r6]
 80039b4:	2240      	movs	r2, #64	; 0x40
 80039b6:	621a      	str	r2, [r3, #32]
 80039b8:	2670      	movs	r6, #112	; 0x70
 80039ba:	436e      	muls	r6, r5
 80039bc:	59a3      	ldr	r3, [r4, r6]
 80039be:	69da      	ldr	r2, [r3, #28]
 80039c0:	0692      	lsls	r2, r2, #26
 80039c2:	d50d      	bpl.n	80039e0 <uart_irq+0x58>
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	0698      	lsls	r0, r3, #26
 80039c8:	d50a      	bpl.n	80039e0 <uart_irq+0x58>
 80039ca:	4b0e      	ldr	r3, [pc, #56]	; (8003a04 <uart_irq+0x7c>)
 80039cc:	f857 0025 	ldr.w	r0, [r7, r5, lsl #2]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	2100      	movs	r1, #0
 80039d4:	4798      	blx	r3
 80039d6:	59a3      	ldr	r3, [r4, r6]
 80039d8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80039da:	b29b      	uxth	r3, r3
 80039dc:	9301      	str	r3, [sp, #4]
 80039de:	9b01      	ldr	r3, [sp, #4]
 80039e0:	2370      	movs	r3, #112	; 0x70
 80039e2:	435d      	muls	r5, r3
 80039e4:	5963      	ldr	r3, [r4, r5]
 80039e6:	69da      	ldr	r2, [r3, #28]
 80039e8:	0711      	lsls	r1, r2, #28
 80039ea:	d504      	bpl.n	80039f6 <uart_irq+0x6e>
 80039ec:	689a      	ldr	r2, [r3, #8]
 80039ee:	07d2      	lsls	r2, r2, #31
 80039f0:	bf44      	itt	mi
 80039f2:	2208      	movmi	r2, #8
 80039f4:	621a      	strmi	r2, [r3, #32]
 80039f6:	b003      	add	sp, #12
 80039f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80039fa:	bf00      	nop
 80039fc:	20001280 	.word	0x20001280
 8003a00:	20001298 	.word	0x20001298
 8003a04:	2000127c 	.word	0x2000127c

08003a08 <uart1_irq>:
 8003a08:	2000      	movs	r0, #0
 8003a0a:	f7ff bfbd 	b.w	8003988 <uart_irq>

08003a0e <uart2_irq>:
 8003a0e:	2001      	movs	r0, #1
 8003a10:	f7ff bfba 	b.w	8003988 <uart_irq>

08003a14 <uart3_irq>:
 8003a14:	2002      	movs	r0, #2
 8003a16:	f7ff bfb7 	b.w	8003988 <uart_irq>
	...

08003a1c <serial_init>:
 8003a1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a1e:	460e      	mov	r6, r1
 8003a20:	b085      	sub	sp, #20
 8003a22:	4604      	mov	r4, r0
 8003a24:	4949      	ldr	r1, [pc, #292]	; (8003b4c <serial_init+0x130>)
 8003a26:	4630      	mov	r0, r6
 8003a28:	4615      	mov	r5, r2
 8003a2a:	f7fd ff45 	bl	80018b8 <pinmap_peripheral>
 8003a2e:	4948      	ldr	r1, [pc, #288]	; (8003b50 <serial_init+0x134>)
 8003a30:	4607      	mov	r7, r0
 8003a32:	4628      	mov	r0, r5
 8003a34:	f7fd ff40 	bl	80018b8 <pinmap_peripheral>
 8003a38:	4601      	mov	r1, r0
 8003a3a:	4638      	mov	r0, r7
 8003a3c:	f7fd ff1e 	bl	800187c <pinmap_merge>
 8003a40:	4b44      	ldr	r3, [pc, #272]	; (8003b54 <serial_init+0x138>)
 8003a42:	6020      	str	r0, [r4, #0]
 8003a44:	4298      	cmp	r0, r3
 8003a46:	d151      	bne.n	8003aec <serial_init+0xd0>
 8003a48:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8003a4c:	68da      	ldr	r2, [r3, #12]
 8003a4e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003a52:	60da      	str	r2, [r3, #12]
 8003a54:	68da      	ldr	r2, [r3, #12]
 8003a56:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003a5a:	60da      	str	r2, [r3, #12]
 8003a5c:	699a      	ldr	r2, [r3, #24]
 8003a5e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003a62:	619a      	str	r2, [r3, #24]
 8003a64:	699a      	ldr	r2, [r3, #24]
 8003a66:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003a6a:	9201      	str	r2, [sp, #4]
 8003a6c:	9a01      	ldr	r2, [sp, #4]
 8003a6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a70:	f022 0203 	bic.w	r2, r2, #3
 8003a74:	f042 0201 	orr.w	r2, r2, #1
 8003a78:	631a      	str	r2, [r3, #48]	; 0x30
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	6063      	str	r3, [r4, #4]
 8003a7e:	4933      	ldr	r1, [pc, #204]	; (8003b4c <serial_init+0x130>)
 8003a80:	4630      	mov	r0, r6
 8003a82:	f7fd fedd 	bl	8001840 <pinmap_pinout>
 8003a86:	4932      	ldr	r1, [pc, #200]	; (8003b50 <serial_init+0x134>)
 8003a88:	4628      	mov	r0, r5
 8003a8a:	f7fd fed9 	bl	8001840 <pinmap_pinout>
 8003a8e:	1c72      	adds	r2, r6, #1
 8003a90:	d003      	beq.n	8003a9a <serial_init+0x7e>
 8003a92:	2101      	movs	r1, #1
 8003a94:	4630      	mov	r0, r6
 8003a96:	f7ff ff03 	bl	80038a0 <pin_mode>
 8003a9a:	1c6b      	adds	r3, r5, #1
 8003a9c:	d003      	beq.n	8003aa6 <serial_init+0x8a>
 8003a9e:	2101      	movs	r1, #1
 8003aa0:	4628      	mov	r0, r5
 8003aa2:	f7ff fefd 	bl	80038a0 <pin_mode>
 8003aa6:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003aaa:	60a3      	str	r3, [r4, #8]
 8003aac:	2300      	movs	r3, #0
 8003aae:	60e3      	str	r3, [r4, #12]
 8003ab0:	6123      	str	r3, [r4, #16]
 8003ab2:	6163      	str	r3, [r4, #20]
 8003ab4:	61e3      	str	r3, [r4, #28]
 8003ab6:	8326      	strh	r6, [r4, #24]
 8003ab8:	8365      	strh	r5, [r4, #26]
 8003aba:	4620      	mov	r0, r4
 8003abc:	f7ff ff2e 	bl	800391c <init_uart>
 8003ac0:	6822      	ldr	r2, [r4, #0]
 8003ac2:	4b25      	ldr	r3, [pc, #148]	; (8003b58 <serial_init+0x13c>)
 8003ac4:	429a      	cmp	r2, r3
 8003ac6:	d10f      	bne.n	8003ae8 <serial_init+0xcc>
 8003ac8:	4b24      	ldr	r3, [pc, #144]	; (8003b5c <serial_init+0x140>)
 8003aca:	2201      	movs	r2, #1
 8003acc:	601a      	str	r2, [r3, #0]
 8003ace:	4b24      	ldr	r3, [pc, #144]	; (8003b60 <serial_init+0x144>)
 8003ad0:	f104 0520 	add.w	r5, r4, #32
 8003ad4:	6820      	ldr	r0, [r4, #0]
 8003ad6:	6861      	ldr	r1, [r4, #4]
 8003ad8:	461a      	mov	r2, r3
 8003ada:	c203      	stmia	r2!, {r0, r1}
 8003adc:	3408      	adds	r4, #8
 8003ade:	42ac      	cmp	r4, r5
 8003ae0:	4613      	mov	r3, r2
 8003ae2:	d1f7      	bne.n	8003ad4 <serial_init+0xb8>
 8003ae4:	6820      	ldr	r0, [r4, #0]
 8003ae6:	6010      	str	r0, [r2, #0]
 8003ae8:	b005      	add	sp, #20
 8003aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003aec:	4b1a      	ldr	r3, [pc, #104]	; (8003b58 <serial_init+0x13c>)
 8003aee:	4298      	cmp	r0, r3
 8003af0:	d114      	bne.n	8003b1c <serial_init+0x100>
 8003af2:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8003af6:	691a      	ldr	r2, [r3, #16]
 8003af8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003afc:	611a      	str	r2, [r3, #16]
 8003afe:	691a      	ldr	r2, [r3, #16]
 8003b00:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003b04:	611a      	str	r2, [r3, #16]
 8003b06:	69da      	ldr	r2, [r3, #28]
 8003b08:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003b0c:	61da      	str	r2, [r3, #28]
 8003b0e:	69db      	ldr	r3, [r3, #28]
 8003b10:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003b14:	9302      	str	r3, [sp, #8]
 8003b16:	9b02      	ldr	r3, [sp, #8]
 8003b18:	2301      	movs	r3, #1
 8003b1a:	e7af      	b.n	8003a7c <serial_init+0x60>
 8003b1c:	4b11      	ldr	r3, [pc, #68]	; (8003b64 <serial_init+0x148>)
 8003b1e:	4298      	cmp	r0, r3
 8003b20:	d1ad      	bne.n	8003a7e <serial_init+0x62>
 8003b22:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8003b26:	691a      	ldr	r2, [r3, #16]
 8003b28:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003b2c:	611a      	str	r2, [r3, #16]
 8003b2e:	691a      	ldr	r2, [r3, #16]
 8003b30:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003b34:	611a      	str	r2, [r3, #16]
 8003b36:	69da      	ldr	r2, [r3, #28]
 8003b38:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003b3c:	61da      	str	r2, [r3, #28]
 8003b3e:	69db      	ldr	r3, [r3, #28]
 8003b40:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003b44:	9303      	str	r3, [sp, #12]
 8003b46:	9b03      	ldr	r3, [sp, #12]
 8003b48:	2302      	movs	r3, #2
 8003b4a:	e797      	b.n	8003a7c <serial_init+0x60>
 8003b4c:	08006ab4 	.word	0x08006ab4
 8003b50:	08006a6c 	.word	0x08006a6c
 8003b54:	40013800 	.word	0x40013800
 8003b58:	40004400 	.word	0x40004400
 8003b5c:	20001294 	.word	0x20001294
 8003b60:	20001ec0 	.word	0x20001ec0
 8003b64:	40004800 	.word	0x40004800

08003b68 <serial_baud>:
 8003b68:	6081      	str	r1, [r0, #8]
 8003b6a:	f7ff bed7 	b.w	800391c <init_uart>
	...

08003b70 <serial_irq_handler>:
 8003b70:	4b03      	ldr	r3, [pc, #12]	; (8003b80 <serial_irq_handler+0x10>)
 8003b72:	6019      	str	r1, [r3, #0]
 8003b74:	6841      	ldr	r1, [r0, #4]
 8003b76:	4b03      	ldr	r3, [pc, #12]	; (8003b84 <serial_irq_handler+0x14>)
 8003b78:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003b7c:	4770      	bx	lr
 8003b7e:	bf00      	nop
 8003b80:	2000127c 	.word	0x2000127c
 8003b84:	20001280 	.word	0x20001280

08003b88 <serial_irq_set>:
 8003b88:	b570      	push	{r4, r5, r6, lr}
 8003b8a:	e890 0028 	ldmia.w	r0, {r3, r5}
 8003b8e:	460e      	mov	r6, r1
 8003b90:	4925      	ldr	r1, [pc, #148]	; (8003c28 <serial_irq_set+0xa0>)
 8003b92:	428b      	cmp	r3, r1
 8003b94:	d118      	bne.n	8003bc8 <serial_irq_set+0x40>
 8003b96:	4925      	ldr	r1, [pc, #148]	; (8003c2c <serial_irq_set+0xa4>)
 8003b98:	2425      	movs	r4, #37	; 0x25
 8003b9a:	2370      	movs	r3, #112	; 0x70
 8003b9c:	4824      	ldr	r0, [pc, #144]	; (8003c30 <serial_irq_set+0xa8>)
 8003b9e:	436b      	muls	r3, r5
 8003ba0:	b31a      	cbz	r2, 8003bea <serial_irq_set+0x62>
 8003ba2:	58c2      	ldr	r2, [r0, r3]
 8003ba4:	6813      	ldr	r3, [r2, #0]
 8003ba6:	b9ee      	cbnz	r6, 8003be4 <serial_irq_set+0x5c>
 8003ba8:	f043 0320 	orr.w	r3, r3, #32
 8003bac:	6013      	str	r3, [r2, #0]
 8003bae:	4620      	mov	r0, r4
 8003bb0:	f000 f940 	bl	8003e34 <__NVIC_SetVector>
 8003bb4:	0962      	lsrs	r2, r4, #5
 8003bb6:	2301      	movs	r3, #1
 8003bb8:	f004 0407 	and.w	r4, r4, #7
 8003bbc:	fa03 f404 	lsl.w	r4, r3, r4
 8003bc0:	4b1c      	ldr	r3, [pc, #112]	; (8003c34 <serial_irq_set+0xac>)
 8003bc2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003bc6:	bd70      	pop	{r4, r5, r6, pc}
 8003bc8:	491b      	ldr	r1, [pc, #108]	; (8003c38 <serial_irq_set+0xb0>)
 8003bca:	428b      	cmp	r3, r1
 8003bcc:	d102      	bne.n	8003bd4 <serial_irq_set+0x4c>
 8003bce:	491b      	ldr	r1, [pc, #108]	; (8003c3c <serial_irq_set+0xb4>)
 8003bd0:	2426      	movs	r4, #38	; 0x26
 8003bd2:	e7e2      	b.n	8003b9a <serial_irq_set+0x12>
 8003bd4:	491a      	ldr	r1, [pc, #104]	; (8003c40 <serial_irq_set+0xb8>)
 8003bd6:	428b      	cmp	r3, r1
 8003bd8:	bf13      	iteet	ne
 8003bda:	2100      	movne	r1, #0
 8003bdc:	4919      	ldreq	r1, [pc, #100]	; (8003c44 <serial_irq_set+0xbc>)
 8003bde:	2427      	moveq	r4, #39	; 0x27
 8003be0:	460c      	movne	r4, r1
 8003be2:	e7da      	b.n	8003b9a <serial_irq_set+0x12>
 8003be4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003be8:	e7e0      	b.n	8003bac <serial_irq_set+0x24>
 8003bea:	58c3      	ldr	r3, [r0, r3]
 8003bec:	681a      	ldr	r2, [r3, #0]
 8003bee:	b936      	cbnz	r6, 8003bfe <serial_irq_set+0x76>
 8003bf0:	f022 0220 	bic.w	r2, r2, #32
 8003bf4:	601a      	str	r2, [r3, #0]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	061a      	lsls	r2, r3, #24
 8003bfa:	d506      	bpl.n	8003c0a <serial_irq_set+0x82>
 8003bfc:	bd70      	pop	{r4, r5, r6, pc}
 8003bfe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003c02:	601a      	str	r2, [r3, #0]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	069b      	lsls	r3, r3, #26
 8003c08:	d40d      	bmi.n	8003c26 <serial_irq_set+0x9e>
 8003c0a:	0963      	lsrs	r3, r4, #5
 8003c0c:	2201      	movs	r2, #1
 8003c0e:	f004 0407 	and.w	r4, r4, #7
 8003c12:	fa02 f404 	lsl.w	r4, r2, r4
 8003c16:	3320      	adds	r3, #32
 8003c18:	4a06      	ldr	r2, [pc, #24]	; (8003c34 <serial_irq_set+0xac>)
 8003c1a:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8003c1e:	f3bf 8f4f 	dsb	sy
 8003c22:	f3bf 8f6f 	isb	sy
 8003c26:	bd70      	pop	{r4, r5, r6, pc}
 8003c28:	40013800 	.word	0x40013800
 8003c2c:	08003a09 	.word	0x08003a09
 8003c30:	20001298 	.word	0x20001298
 8003c34:	e000e100 	.word	0xe000e100
 8003c38:	40004400 	.word	0x40004400
 8003c3c:	08003a0f 	.word	0x08003a0f
 8003c40:	40004800 	.word	0x40004800
 8003c44:	08003a15 	.word	0x08003a15

08003c48 <serial_readable>:
 8003c48:	6842      	ldr	r2, [r0, #4]
 8003c4a:	2370      	movs	r3, #112	; 0x70
 8003c4c:	4353      	muls	r3, r2
 8003c4e:	4a03      	ldr	r2, [pc, #12]	; (8003c5c <serial_readable+0x14>)
 8003c50:	58d3      	ldr	r3, [r2, r3]
 8003c52:	69d8      	ldr	r0, [r3, #28]
 8003c54:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003c58:	4770      	bx	lr
 8003c5a:	bf00      	nop
 8003c5c:	20001298 	.word	0x20001298

08003c60 <serial_getc>:
 8003c60:	b510      	push	{r4, lr}
 8003c62:	6844      	ldr	r4, [r0, #4]
 8003c64:	4601      	mov	r1, r0
 8003c66:	4608      	mov	r0, r1
 8003c68:	f7ff ffee 	bl	8003c48 <serial_readable>
 8003c6c:	2800      	cmp	r0, #0
 8003c6e:	d0fa      	beq.n	8003c66 <serial_getc+0x6>
 8003c70:	2370      	movs	r3, #112	; 0x70
 8003c72:	4a05      	ldr	r2, [pc, #20]	; (8003c88 <serial_getc+0x28>)
 8003c74:	68c9      	ldr	r1, [r1, #12]
 8003c76:	4363      	muls	r3, r4
 8003c78:	58d3      	ldr	r3, [r2, r3]
 8003c7a:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 8003c7c:	b909      	cbnz	r1, 8003c82 <serial_getc+0x22>
 8003c7e:	b2c0      	uxtb	r0, r0
 8003c80:	bd10      	pop	{r4, pc}
 8003c82:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003c86:	bd10      	pop	{r4, pc}
 8003c88:	20001298 	.word	0x20001298

08003c8c <serial_writable>:
 8003c8c:	6842      	ldr	r2, [r0, #4]
 8003c8e:	2370      	movs	r3, #112	; 0x70
 8003c90:	4353      	muls	r3, r2
 8003c92:	4a03      	ldr	r2, [pc, #12]	; (8003ca0 <serial_writable+0x14>)
 8003c94:	58d3      	ldr	r3, [r2, r3]
 8003c96:	69d8      	ldr	r0, [r3, #28]
 8003c98:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003c9c:	4770      	bx	lr
 8003c9e:	bf00      	nop
 8003ca0:	20001298 	.word	0x20001298

08003ca4 <serial_putc>:
 8003ca4:	b538      	push	{r3, r4, r5, lr}
 8003ca6:	6845      	ldr	r5, [r0, #4]
 8003ca8:	4604      	mov	r4, r0
 8003caa:	4620      	mov	r0, r4
 8003cac:	f7ff ffee 	bl	8003c8c <serial_writable>
 8003cb0:	2800      	cmp	r0, #0
 8003cb2:	d0fa      	beq.n	8003caa <serial_putc+0x6>
 8003cb4:	2370      	movs	r3, #112	; 0x70
 8003cb6:	4a05      	ldr	r2, [pc, #20]	; (8003ccc <serial_putc+0x28>)
 8003cb8:	68e0      	ldr	r0, [r4, #12]
 8003cba:	436b      	muls	r3, r5
 8003cbc:	58d3      	ldr	r3, [r2, r3]
 8003cbe:	b910      	cbnz	r0, 8003cc6 <serial_putc+0x22>
 8003cc0:	b2c9      	uxtb	r1, r1
 8003cc2:	8519      	strh	r1, [r3, #40]	; 0x28
 8003cc4:	bd38      	pop	{r3, r4, r5, pc}
 8003cc6:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003cca:	e7fa      	b.n	8003cc2 <serial_putc+0x1e>
 8003ccc:	20001298 	.word	0x20001298

08003cd0 <mbed_sdk_init>:
 8003cd0:	b508      	push	{r3, lr}
 8003cd2:	f000 f805 	bl	8003ce0 <SystemCoreClockUpdate>
 8003cd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003cda:	f000 bc91 	b.w	8004600 <HAL_Init>
	...

08003ce0 <SystemCoreClockUpdate>:
 8003ce0:	4a14      	ldr	r2, [pc, #80]	; (8003d34 <SystemCoreClockUpdate+0x54>)
 8003ce2:	4915      	ldr	r1, [pc, #84]	; (8003d38 <SystemCoreClockUpdate+0x58>)
 8003ce4:	6853      	ldr	r3, [r2, #4]
 8003ce6:	f003 030c 	and.w	r3, r3, #12
 8003cea:	2b04      	cmp	r3, #4
 8003cec:	b510      	push	{r4, lr}
 8003cee:	d001      	beq.n	8003cf4 <SystemCoreClockUpdate+0x14>
 8003cf0:	2b08      	cmp	r3, #8
 8003cf2:	d00a      	beq.n	8003d0a <SystemCoreClockUpdate+0x2a>
 8003cf4:	4b11      	ldr	r3, [pc, #68]	; (8003d3c <SystemCoreClockUpdate+0x5c>)
 8003cf6:	600b      	str	r3, [r1, #0]
 8003cf8:	6853      	ldr	r3, [r2, #4]
 8003cfa:	4a11      	ldr	r2, [pc, #68]	; (8003d40 <SystemCoreClockUpdate+0x60>)
 8003cfc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003d00:	5cd2      	ldrb	r2, [r2, r3]
 8003d02:	680b      	ldr	r3, [r1, #0]
 8003d04:	40d3      	lsrs	r3, r2
 8003d06:	600b      	str	r3, [r1, #0]
 8003d08:	bd10      	pop	{r4, pc}
 8003d0a:	6853      	ldr	r3, [r2, #4]
 8003d0c:	6850      	ldr	r0, [r2, #4]
 8003d0e:	03c0      	lsls	r0, r0, #15
 8003d10:	bf49      	itett	mi
 8003d12:	6ad0      	ldrmi	r0, [r2, #44]	; 0x2c
 8003d14:	480b      	ldrpl	r0, [pc, #44]	; (8003d44 <SystemCoreClockUpdate+0x64>)
 8003d16:	4c09      	ldrmi	r4, [pc, #36]	; (8003d3c <SystemCoreClockUpdate+0x5c>)
 8003d18:	f000 000f 	andmi.w	r0, r0, #15
 8003d1c:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003d20:	bf48      	it	mi
 8003d22:	3001      	addmi	r0, #1
 8003d24:	f103 0302 	add.w	r3, r3, #2
 8003d28:	bf48      	it	mi
 8003d2a:	fbb4 f0f0 	udivmi	r0, r4, r0
 8003d2e:	4343      	muls	r3, r0
 8003d30:	e7e1      	b.n	8003cf6 <SystemCoreClockUpdate+0x16>
 8003d32:	bf00      	nop
 8003d34:	40021000 	.word	0x40021000
 8003d38:	200001a4 	.word	0x200001a4
 8003d3c:	007a1200 	.word	0x007a1200
 8003d40:	08006afc 	.word	0x08006afc
 8003d44:	003d0900 	.word	0x003d0900

08003d48 <SetSysClock_PLL_HSI>:
 8003d48:	b530      	push	{r4, r5, lr}
 8003d4a:	b091      	sub	sp, #68	; 0x44
 8003d4c:	2303      	movs	r3, #3
 8003d4e:	9306      	str	r3, [sp, #24]
 8003d50:	2301      	movs	r3, #1
 8003d52:	930a      	str	r3, [sp, #40]	; 0x28
 8003d54:	2310      	movs	r3, #16
 8003d56:	2400      	movs	r4, #0
 8003d58:	930b      	str	r3, [sp, #44]	; 0x2c
 8003d5a:	2502      	movs	r5, #2
 8003d5c:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8003d60:	a806      	add	r0, sp, #24
 8003d62:	9407      	str	r4, [sp, #28]
 8003d64:	950d      	str	r5, [sp, #52]	; 0x34
 8003d66:	940e      	str	r4, [sp, #56]	; 0x38
 8003d68:	930f      	str	r3, [sp, #60]	; 0x3c
 8003d6a:	f000 f893 	bl	8003e94 <HAL_RCC_OscConfig>
 8003d6e:	b980      	cbnz	r0, 8003d92 <SetSysClock_PLL_HSI+0x4a>
 8003d70:	230f      	movs	r3, #15
 8003d72:	9301      	str	r3, [sp, #4]
 8003d74:	9003      	str	r0, [sp, #12]
 8003d76:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003d7a:	9005      	str	r0, [sp, #20]
 8003d7c:	4629      	mov	r1, r5
 8003d7e:	a801      	add	r0, sp, #4
 8003d80:	9502      	str	r5, [sp, #8]
 8003d82:	9304      	str	r3, [sp, #16]
 8003d84:	f000 fb2a 	bl	80043dc <HAL_RCC_ClockConfig>
 8003d88:	fab0 f080 	clz	r0, r0
 8003d8c:	0940      	lsrs	r0, r0, #5
 8003d8e:	b011      	add	sp, #68	; 0x44
 8003d90:	bd30      	pop	{r4, r5, pc}
 8003d92:	4620      	mov	r0, r4
 8003d94:	e7fb      	b.n	8003d8e <SetSysClock_PLL_HSI+0x46>

08003d96 <SetSysClock>:
 8003d96:	b508      	push	{r3, lr}
 8003d98:	f7ff ffd6 	bl	8003d48 <SetSysClock_PLL_HSI>
 8003d9c:	b900      	cbnz	r0, 8003da0 <SetSysClock+0xa>
 8003d9e:	e7fe      	b.n	8003d9e <SetSysClock+0x8>
 8003da0:	bd08      	pop	{r3, pc}
	...

08003da4 <SystemInit>:
 8003da4:	4a1d      	ldr	r2, [pc, #116]	; (8003e1c <SystemInit+0x78>)
 8003da6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003daa:	b510      	push	{r4, lr}
 8003dac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003db0:	4c1b      	ldr	r4, [pc, #108]	; (8003e20 <SystemInit+0x7c>)
 8003db2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003db6:	6823      	ldr	r3, [r4, #0]
 8003db8:	f043 0301 	orr.w	r3, r3, #1
 8003dbc:	6023      	str	r3, [r4, #0]
 8003dbe:	6861      	ldr	r1, [r4, #4]
 8003dc0:	4b18      	ldr	r3, [pc, #96]	; (8003e24 <SystemInit+0x80>)
 8003dc2:	400b      	ands	r3, r1
 8003dc4:	6063      	str	r3, [r4, #4]
 8003dc6:	6823      	ldr	r3, [r4, #0]
 8003dc8:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003dcc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003dd0:	6023      	str	r3, [r4, #0]
 8003dd2:	6823      	ldr	r3, [r4, #0]
 8003dd4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003dd8:	6023      	str	r3, [r4, #0]
 8003dda:	6863      	ldr	r3, [r4, #4]
 8003ddc:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8003de0:	6063      	str	r3, [r4, #4]
 8003de2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003de4:	f023 030f 	bic.w	r3, r3, #15
 8003de8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003dea:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003dec:	4b0e      	ldr	r3, [pc, #56]	; (8003e28 <SystemInit+0x84>)
 8003dee:	400b      	ands	r3, r1
 8003df0:	6323      	str	r3, [r4, #48]	; 0x30
 8003df2:	2300      	movs	r3, #0
 8003df4:	60a3      	str	r3, [r4, #8]
 8003df6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003dfa:	6093      	str	r3, [r2, #8]
 8003dfc:	4b0b      	ldr	r3, [pc, #44]	; (8003e2c <SystemInit+0x88>)
 8003dfe:	4a0c      	ldr	r2, [pc, #48]	; (8003e30 <SystemInit+0x8c>)
 8003e00:	601a      	str	r2, [r3, #0]
 8003e02:	f000 fbfd 	bl	8004600 <HAL_Init>
 8003e06:	f7ff ffc6 	bl	8003d96 <SetSysClock>
 8003e0a:	6923      	ldr	r3, [r4, #16]
 8003e0c:	f043 0301 	orr.w	r3, r3, #1
 8003e10:	6123      	str	r3, [r4, #16]
 8003e12:	6923      	ldr	r3, [r4, #16]
 8003e14:	f023 0301 	bic.w	r3, r3, #1
 8003e18:	6123      	str	r3, [r4, #16]
 8003e1a:	bd10      	pop	{r4, pc}
 8003e1c:	e000ed00 	.word	0xe000ed00
 8003e20:	40021000 	.word	0x40021000
 8003e24:	f87fc00c 	.word	0xf87fc00c
 8003e28:	ff00fccc 	.word	0xff00fccc
 8003e2c:	200001a4 	.word	0x200001a4
 8003e30:	007a1200 	.word	0x007a1200

08003e34 <__NVIC_SetVector>:
 8003e34:	b530      	push	{r4, r5, lr}
 8003e36:	4c0c      	ldr	r4, [pc, #48]	; (8003e68 <__NVIC_SetVector+0x34>)
 8003e38:	68a2      	ldr	r2, [r4, #8]
 8003e3a:	68a4      	ldr	r4, [r4, #8]
 8003e3c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003e40:	4613      	mov	r3, r2
 8003e42:	d10c      	bne.n	8003e5e <__NVIC_SetVector+0x2a>
 8003e44:	1f13      	subs	r3, r2, #4
 8003e46:	4c09      	ldr	r4, [pc, #36]	; (8003e6c <__NVIC_SetVector+0x38>)
 8003e48:	4a09      	ldr	r2, [pc, #36]	; (8003e70 <__NVIC_SetVector+0x3c>)
 8003e4a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003e4e:	f842 5f04 	str.w	r5, [r2, #4]!
 8003e52:	42a2      	cmp	r2, r4
 8003e54:	d1f9      	bne.n	8003e4a <__NVIC_SetVector+0x16>
 8003e56:	4a04      	ldr	r2, [pc, #16]	; (8003e68 <__NVIC_SetVector+0x34>)
 8003e58:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003e5c:	6093      	str	r3, [r2, #8]
 8003e5e:	3010      	adds	r0, #16
 8003e60:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003e64:	bd30      	pop	{r4, r5, pc}
 8003e66:	bf00      	nop
 8003e68:	e000ed00 	.word	0xe000ed00
 8003e6c:	20000184 	.word	0x20000184
 8003e70:	1ffffffc 	.word	0x1ffffffc

08003e74 <HAL_PWR_EnterSLEEPMode>:
 8003e74:	4a06      	ldr	r2, [pc, #24]	; (8003e90 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8003e76:	6913      	ldr	r3, [r2, #16]
 8003e78:	2901      	cmp	r1, #1
 8003e7a:	f023 0304 	bic.w	r3, r3, #4
 8003e7e:	6113      	str	r3, [r2, #16]
 8003e80:	d101      	bne.n	8003e86 <HAL_PWR_EnterSLEEPMode+0x12>
 8003e82:	bf30      	wfi
 8003e84:	4770      	bx	lr
 8003e86:	bf40      	sev
 8003e88:	bf20      	wfe
 8003e8a:	bf20      	wfe
 8003e8c:	4770      	bx	lr
 8003e8e:	bf00      	nop
 8003e90:	e000ed00 	.word	0xe000ed00

08003e94 <HAL_RCC_OscConfig>:
 8003e94:	6803      	ldr	r3, [r0, #0]
 8003e96:	07da      	lsls	r2, r3, #31
 8003e98:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 8003e9c:	4605      	mov	r5, r0
 8003e9e:	d411      	bmi.n	8003ec4 <HAL_RCC_OscConfig+0x30>
 8003ea0:	682b      	ldr	r3, [r5, #0]
 8003ea2:	079b      	lsls	r3, r3, #30
 8003ea4:	f100 8088 	bmi.w	8003fb8 <HAL_RCC_OscConfig+0x124>
 8003ea8:	682b      	ldr	r3, [r5, #0]
 8003eaa:	071c      	lsls	r4, r3, #28
 8003eac:	f100 80f8 	bmi.w	80040a0 <HAL_RCC_OscConfig+0x20c>
 8003eb0:	682b      	ldr	r3, [r5, #0]
 8003eb2:	0758      	lsls	r0, r3, #29
 8003eb4:	f100 8141 	bmi.w	800413a <HAL_RCC_OscConfig+0x2a6>
 8003eb8:	69ea      	ldr	r2, [r5, #28]
 8003eba:	2a00      	cmp	r2, #0
 8003ebc:	f040 81d7 	bne.w	800426e <HAL_RCC_OscConfig+0x3da>
 8003ec0:	2000      	movs	r0, #0
 8003ec2:	e021      	b.n	8003f08 <HAL_RCC_OscConfig+0x74>
 8003ec4:	4cba      	ldr	r4, [pc, #744]	; (80041b0 <HAL_RCC_OscConfig+0x31c>)
 8003ec6:	6863      	ldr	r3, [r4, #4]
 8003ec8:	f003 030c 	and.w	r3, r3, #12
 8003ecc:	2b04      	cmp	r3, #4
 8003ece:	d007      	beq.n	8003ee0 <HAL_RCC_OscConfig+0x4c>
 8003ed0:	6863      	ldr	r3, [r4, #4]
 8003ed2:	f003 030c 	and.w	r3, r3, #12
 8003ed6:	2b08      	cmp	r3, #8
 8003ed8:	d119      	bne.n	8003f0e <HAL_RCC_OscConfig+0x7a>
 8003eda:	6863      	ldr	r3, [r4, #4]
 8003edc:	03df      	lsls	r7, r3, #15
 8003ede:	d516      	bpl.n	8003f0e <HAL_RCC_OscConfig+0x7a>
 8003ee0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003ee4:	fa93 f2a3 	rbit	r2, r3
 8003ee8:	6821      	ldr	r1, [r4, #0]
 8003eea:	fa93 f3a3 	rbit	r3, r3
 8003eee:	fab3 f383 	clz	r3, r3
 8003ef2:	f003 031f 	and.w	r3, r3, #31
 8003ef6:	2201      	movs	r2, #1
 8003ef8:	fa02 f303 	lsl.w	r3, r2, r3
 8003efc:	420b      	tst	r3, r1
 8003efe:	d0cf      	beq.n	8003ea0 <HAL_RCC_OscConfig+0xc>
 8003f00:	686b      	ldr	r3, [r5, #4]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d1cc      	bne.n	8003ea0 <HAL_RCC_OscConfig+0xc>
 8003f06:	2001      	movs	r0, #1
 8003f08:	b002      	add	sp, #8
 8003f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003f0e:	686a      	ldr	r2, [r5, #4]
 8003f10:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003f14:	d125      	bne.n	8003f62 <HAL_RCC_OscConfig+0xce>
 8003f16:	6823      	ldr	r3, [r4, #0]
 8003f18:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003f1c:	6023      	str	r3, [r4, #0]
 8003f1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003f20:	68a9      	ldr	r1, [r5, #8]
 8003f22:	f023 030f 	bic.w	r3, r3, #15
 8003f26:	430b      	orrs	r3, r1
 8003f28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f2a:	b352      	cbz	r2, 8003f82 <HAL_RCC_OscConfig+0xee>
 8003f2c:	f000 fb82 	bl	8004634 <HAL_GetTick>
 8003f30:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8003f34:	4680      	mov	r8, r0
 8003f36:	2701      	movs	r7, #1
 8003f38:	fa96 f3a6 	rbit	r3, r6
 8003f3c:	6822      	ldr	r2, [r4, #0]
 8003f3e:	fa96 f3a6 	rbit	r3, r6
 8003f42:	fab3 f383 	clz	r3, r3
 8003f46:	f003 031f 	and.w	r3, r3, #31
 8003f4a:	fa07 f303 	lsl.w	r3, r7, r3
 8003f4e:	4213      	tst	r3, r2
 8003f50:	d1a6      	bne.n	8003ea0 <HAL_RCC_OscConfig+0xc>
 8003f52:	f000 fb6f 	bl	8004634 <HAL_GetTick>
 8003f56:	eba0 0008 	sub.w	r0, r0, r8
 8003f5a:	2864      	cmp	r0, #100	; 0x64
 8003f5c:	d9ec      	bls.n	8003f38 <HAL_RCC_OscConfig+0xa4>
 8003f5e:	2003      	movs	r0, #3
 8003f60:	e7d2      	b.n	8003f08 <HAL_RCC_OscConfig+0x74>
 8003f62:	6823      	ldr	r3, [r4, #0]
 8003f64:	b932      	cbnz	r2, 8003f74 <HAL_RCC_OscConfig+0xe0>
 8003f66:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003f6a:	6023      	str	r3, [r4, #0]
 8003f6c:	6823      	ldr	r3, [r4, #0]
 8003f6e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003f72:	e7d3      	b.n	8003f1c <HAL_RCC_OscConfig+0x88>
 8003f74:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8003f78:	d1f5      	bne.n	8003f66 <HAL_RCC_OscConfig+0xd2>
 8003f7a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003f7e:	6023      	str	r3, [r4, #0]
 8003f80:	e7c9      	b.n	8003f16 <HAL_RCC_OscConfig+0x82>
 8003f82:	f000 fb57 	bl	8004634 <HAL_GetTick>
 8003f86:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8003f8a:	4680      	mov	r8, r0
 8003f8c:	2701      	movs	r7, #1
 8003f8e:	fa96 f3a6 	rbit	r3, r6
 8003f92:	6822      	ldr	r2, [r4, #0]
 8003f94:	fa96 f3a6 	rbit	r3, r6
 8003f98:	fab3 f383 	clz	r3, r3
 8003f9c:	f003 031f 	and.w	r3, r3, #31
 8003fa0:	fa07 f303 	lsl.w	r3, r7, r3
 8003fa4:	4213      	tst	r3, r2
 8003fa6:	f43f af7b 	beq.w	8003ea0 <HAL_RCC_OscConfig+0xc>
 8003faa:	f000 fb43 	bl	8004634 <HAL_GetTick>
 8003fae:	eba0 0008 	sub.w	r0, r0, r8
 8003fb2:	2864      	cmp	r0, #100	; 0x64
 8003fb4:	d9eb      	bls.n	8003f8e <HAL_RCC_OscConfig+0xfa>
 8003fb6:	e7d2      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 8003fb8:	4c7d      	ldr	r4, [pc, #500]	; (80041b0 <HAL_RCC_OscConfig+0x31c>)
 8003fba:	6863      	ldr	r3, [r4, #4]
 8003fbc:	f013 0f0c 	tst.w	r3, #12
 8003fc0:	d007      	beq.n	8003fd2 <HAL_RCC_OscConfig+0x13e>
 8003fc2:	6863      	ldr	r3, [r4, #4]
 8003fc4:	f003 030c 	and.w	r3, r3, #12
 8003fc8:	2b08      	cmp	r3, #8
 8003fca:	d121      	bne.n	8004010 <HAL_RCC_OscConfig+0x17c>
 8003fcc:	6863      	ldr	r3, [r4, #4]
 8003fce:	03de      	lsls	r6, r3, #15
 8003fd0:	d41e      	bmi.n	8004010 <HAL_RCC_OscConfig+0x17c>
 8003fd2:	2302      	movs	r3, #2
 8003fd4:	fa93 f2a3 	rbit	r2, r3
 8003fd8:	6821      	ldr	r1, [r4, #0]
 8003fda:	fa93 f3a3 	rbit	r3, r3
 8003fde:	fab3 f383 	clz	r3, r3
 8003fe2:	f003 031f 	and.w	r3, r3, #31
 8003fe6:	2201      	movs	r2, #1
 8003fe8:	fa02 f303 	lsl.w	r3, r2, r3
 8003fec:	420b      	tst	r3, r1
 8003fee:	d002      	beq.n	8003ff6 <HAL_RCC_OscConfig+0x162>
 8003ff0:	692b      	ldr	r3, [r5, #16]
 8003ff2:	4293      	cmp	r3, r2
 8003ff4:	d187      	bne.n	8003f06 <HAL_RCC_OscConfig+0x72>
 8003ff6:	6821      	ldr	r1, [r4, #0]
 8003ff8:	23f8      	movs	r3, #248	; 0xf8
 8003ffa:	fa93 f3a3 	rbit	r3, r3
 8003ffe:	fab3 f283 	clz	r2, r3
 8004002:	696b      	ldr	r3, [r5, #20]
 8004004:	4093      	lsls	r3, r2
 8004006:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 800400a:	4313      	orrs	r3, r2
 800400c:	6023      	str	r3, [r4, #0]
 800400e:	e74b      	b.n	8003ea8 <HAL_RCC_OscConfig+0x14>
 8004010:	692a      	ldr	r2, [r5, #16]
 8004012:	2601      	movs	r6, #1
 8004014:	b30a      	cbz	r2, 800405a <HAL_RCC_OscConfig+0x1c6>
 8004016:	fa96 f3a6 	rbit	r3, r6
 800401a:	fab3 f383 	clz	r3, r3
 800401e:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004022:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004026:	009b      	lsls	r3, r3, #2
 8004028:	2702      	movs	r7, #2
 800402a:	601e      	str	r6, [r3, #0]
 800402c:	f000 fb02 	bl	8004634 <HAL_GetTick>
 8004030:	4680      	mov	r8, r0
 8004032:	fa97 f3a7 	rbit	r3, r7
 8004036:	6822      	ldr	r2, [r4, #0]
 8004038:	fa97 f3a7 	rbit	r3, r7
 800403c:	fab3 f383 	clz	r3, r3
 8004040:	f003 031f 	and.w	r3, r3, #31
 8004044:	fa06 f303 	lsl.w	r3, r6, r3
 8004048:	4213      	tst	r3, r2
 800404a:	d1d4      	bne.n	8003ff6 <HAL_RCC_OscConfig+0x162>
 800404c:	f000 faf2 	bl	8004634 <HAL_GetTick>
 8004050:	eba0 0008 	sub.w	r0, r0, r8
 8004054:	2802      	cmp	r0, #2
 8004056:	d9ec      	bls.n	8004032 <HAL_RCC_OscConfig+0x19e>
 8004058:	e781      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 800405a:	fa96 f3a6 	rbit	r3, r6
 800405e:	fab3 f383 	clz	r3, r3
 8004062:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004066:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800406a:	009b      	lsls	r3, r3, #2
 800406c:	2702      	movs	r7, #2
 800406e:	601a      	str	r2, [r3, #0]
 8004070:	f000 fae0 	bl	8004634 <HAL_GetTick>
 8004074:	4680      	mov	r8, r0
 8004076:	fa97 f3a7 	rbit	r3, r7
 800407a:	6822      	ldr	r2, [r4, #0]
 800407c:	fa97 f3a7 	rbit	r3, r7
 8004080:	fab3 f383 	clz	r3, r3
 8004084:	f003 031f 	and.w	r3, r3, #31
 8004088:	fa06 f303 	lsl.w	r3, r6, r3
 800408c:	4213      	tst	r3, r2
 800408e:	f43f af0b 	beq.w	8003ea8 <HAL_RCC_OscConfig+0x14>
 8004092:	f000 facf 	bl	8004634 <HAL_GetTick>
 8004096:	eba0 0008 	sub.w	r0, r0, r8
 800409a:	2802      	cmp	r0, #2
 800409c:	d9eb      	bls.n	8004076 <HAL_RCC_OscConfig+0x1e2>
 800409e:	e75e      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 80040a0:	69aa      	ldr	r2, [r5, #24]
 80040a2:	4e43      	ldr	r6, [pc, #268]	; (80041b0 <HAL_RCC_OscConfig+0x31c>)
 80040a4:	4943      	ldr	r1, [pc, #268]	; (80041b4 <HAL_RCC_OscConfig+0x320>)
 80040a6:	2401      	movs	r4, #1
 80040a8:	b31a      	cbz	r2, 80040f2 <HAL_RCC_OscConfig+0x25e>
 80040aa:	fa94 f3a4 	rbit	r3, r4
 80040ae:	fab3 f383 	clz	r3, r3
 80040b2:	440b      	add	r3, r1
 80040b4:	009b      	lsls	r3, r3, #2
 80040b6:	2702      	movs	r7, #2
 80040b8:	601c      	str	r4, [r3, #0]
 80040ba:	f000 fabb 	bl	8004634 <HAL_GetTick>
 80040be:	4680      	mov	r8, r0
 80040c0:	fa97 f3a7 	rbit	r3, r7
 80040c4:	fa97 f3a7 	rbit	r3, r7
 80040c8:	fa97 f3a7 	rbit	r3, r7
 80040cc:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80040ce:	fa97 f3a7 	rbit	r3, r7
 80040d2:	fab3 f383 	clz	r3, r3
 80040d6:	f003 031f 	and.w	r3, r3, #31
 80040da:	fa04 f303 	lsl.w	r3, r4, r3
 80040de:	4213      	tst	r3, r2
 80040e0:	f47f aee6 	bne.w	8003eb0 <HAL_RCC_OscConfig+0x1c>
 80040e4:	f000 faa6 	bl	8004634 <HAL_GetTick>
 80040e8:	eba0 0008 	sub.w	r0, r0, r8
 80040ec:	2802      	cmp	r0, #2
 80040ee:	d9e7      	bls.n	80040c0 <HAL_RCC_OscConfig+0x22c>
 80040f0:	e735      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 80040f2:	fa94 f3a4 	rbit	r3, r4
 80040f6:	fab3 f383 	clz	r3, r3
 80040fa:	440b      	add	r3, r1
 80040fc:	009b      	lsls	r3, r3, #2
 80040fe:	2702      	movs	r7, #2
 8004100:	601a      	str	r2, [r3, #0]
 8004102:	f000 fa97 	bl	8004634 <HAL_GetTick>
 8004106:	4680      	mov	r8, r0
 8004108:	fa97 f3a7 	rbit	r3, r7
 800410c:	fa97 f3a7 	rbit	r3, r7
 8004110:	fa97 f3a7 	rbit	r3, r7
 8004114:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8004116:	fa97 f3a7 	rbit	r3, r7
 800411a:	fab3 f383 	clz	r3, r3
 800411e:	f003 031f 	and.w	r3, r3, #31
 8004122:	fa04 f303 	lsl.w	r3, r4, r3
 8004126:	4213      	tst	r3, r2
 8004128:	f43f aec2 	beq.w	8003eb0 <HAL_RCC_OscConfig+0x1c>
 800412c:	f000 fa82 	bl	8004634 <HAL_GetTick>
 8004130:	eba0 0008 	sub.w	r0, r0, r8
 8004134:	2802      	cmp	r0, #2
 8004136:	d9e7      	bls.n	8004108 <HAL_RCC_OscConfig+0x274>
 8004138:	e711      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 800413a:	4c1d      	ldr	r4, [pc, #116]	; (80041b0 <HAL_RCC_OscConfig+0x31c>)
 800413c:	69e3      	ldr	r3, [r4, #28]
 800413e:	00d9      	lsls	r1, r3, #3
 8004140:	d434      	bmi.n	80041ac <HAL_RCC_OscConfig+0x318>
 8004142:	69e3      	ldr	r3, [r4, #28]
 8004144:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004148:	61e3      	str	r3, [r4, #28]
 800414a:	69e3      	ldr	r3, [r4, #28]
 800414c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004150:	9301      	str	r3, [sp, #4]
 8004152:	9b01      	ldr	r3, [sp, #4]
 8004154:	2601      	movs	r6, #1
 8004156:	4f18      	ldr	r7, [pc, #96]	; (80041b8 <HAL_RCC_OscConfig+0x324>)
 8004158:	683b      	ldr	r3, [r7, #0]
 800415a:	05da      	lsls	r2, r3, #23
 800415c:	d52e      	bpl.n	80041bc <HAL_RCC_OscConfig+0x328>
 800415e:	68eb      	ldr	r3, [r5, #12]
 8004160:	2b01      	cmp	r3, #1
 8004162:	d13c      	bne.n	80041de <HAL_RCC_OscConfig+0x34a>
 8004164:	6a23      	ldr	r3, [r4, #32]
 8004166:	f043 0301 	orr.w	r3, r3, #1
 800416a:	6223      	str	r3, [r4, #32]
 800416c:	f000 fa62 	bl	8004634 <HAL_GetTick>
 8004170:	2702      	movs	r7, #2
 8004172:	4682      	mov	r10, r0
 8004174:	46b9      	mov	r9, r7
 8004176:	f04f 0801 	mov.w	r8, #1
 800417a:	fa97 f3a7 	rbit	r3, r7
 800417e:	fa97 f3a7 	rbit	r3, r7
 8004182:	2b00      	cmp	r3, #0
 8004184:	d06b      	beq.n	800425e <HAL_RCC_OscConfig+0x3ca>
 8004186:	6a22      	ldr	r2, [r4, #32]
 8004188:	fa99 f3a9 	rbit	r3, r9
 800418c:	fab3 f383 	clz	r3, r3
 8004190:	f003 031f 	and.w	r3, r3, #31
 8004194:	fa08 f303 	lsl.w	r3, r8, r3
 8004198:	4213      	tst	r3, r2
 800419a:	d057      	beq.n	800424c <HAL_RCC_OscConfig+0x3b8>
 800419c:	2e00      	cmp	r6, #0
 800419e:	f43f ae8b 	beq.w	8003eb8 <HAL_RCC_OscConfig+0x24>
 80041a2:	69e3      	ldr	r3, [r4, #28]
 80041a4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80041a8:	61e3      	str	r3, [r4, #28]
 80041aa:	e685      	b.n	8003eb8 <HAL_RCC_OscConfig+0x24>
 80041ac:	2600      	movs	r6, #0
 80041ae:	e7d2      	b.n	8004156 <HAL_RCC_OscConfig+0x2c2>
 80041b0:	40021000 	.word	0x40021000
 80041b4:	10908120 	.word	0x10908120
 80041b8:	40007000 	.word	0x40007000
 80041bc:	683b      	ldr	r3, [r7, #0]
 80041be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80041c2:	603b      	str	r3, [r7, #0]
 80041c4:	f000 fa36 	bl	8004634 <HAL_GetTick>
 80041c8:	4680      	mov	r8, r0
 80041ca:	683b      	ldr	r3, [r7, #0]
 80041cc:	05db      	lsls	r3, r3, #23
 80041ce:	d4c6      	bmi.n	800415e <HAL_RCC_OscConfig+0x2ca>
 80041d0:	f000 fa30 	bl	8004634 <HAL_GetTick>
 80041d4:	eba0 0008 	sub.w	r0, r0, r8
 80041d8:	2864      	cmp	r0, #100	; 0x64
 80041da:	d9f6      	bls.n	80041ca <HAL_RCC_OscConfig+0x336>
 80041dc:	e6bf      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 80041de:	bb3b      	cbnz	r3, 8004230 <HAL_RCC_OscConfig+0x39c>
 80041e0:	6a23      	ldr	r3, [r4, #32]
 80041e2:	f023 0301 	bic.w	r3, r3, #1
 80041e6:	6223      	str	r3, [r4, #32]
 80041e8:	6a23      	ldr	r3, [r4, #32]
 80041ea:	f023 0304 	bic.w	r3, r3, #4
 80041ee:	6223      	str	r3, [r4, #32]
 80041f0:	f000 fa20 	bl	8004634 <HAL_GetTick>
 80041f4:	2702      	movs	r7, #2
 80041f6:	4682      	mov	r10, r0
 80041f8:	46b9      	mov	r9, r7
 80041fa:	f04f 0801 	mov.w	r8, #1
 80041fe:	fa97 f3a7 	rbit	r3, r7
 8004202:	fa97 f3a7 	rbit	r3, r7
 8004206:	b373      	cbz	r3, 8004266 <HAL_RCC_OscConfig+0x3d2>
 8004208:	6a22      	ldr	r2, [r4, #32]
 800420a:	fa99 f3a9 	rbit	r3, r9
 800420e:	fab3 f383 	clz	r3, r3
 8004212:	f003 031f 	and.w	r3, r3, #31
 8004216:	fa08 f303 	lsl.w	r3, r8, r3
 800421a:	4213      	tst	r3, r2
 800421c:	d0be      	beq.n	800419c <HAL_RCC_OscConfig+0x308>
 800421e:	f000 fa09 	bl	8004634 <HAL_GetTick>
 8004222:	f241 3388 	movw	r3, #5000	; 0x1388
 8004226:	eba0 000a 	sub.w	r0, r0, r10
 800422a:	4298      	cmp	r0, r3
 800422c:	d9e7      	bls.n	80041fe <HAL_RCC_OscConfig+0x36a>
 800422e:	e696      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 8004230:	2b05      	cmp	r3, #5
 8004232:	6a23      	ldr	r3, [r4, #32]
 8004234:	d103      	bne.n	800423e <HAL_RCC_OscConfig+0x3aa>
 8004236:	f043 0304 	orr.w	r3, r3, #4
 800423a:	6223      	str	r3, [r4, #32]
 800423c:	e792      	b.n	8004164 <HAL_RCC_OscConfig+0x2d0>
 800423e:	f023 0301 	bic.w	r3, r3, #1
 8004242:	6223      	str	r3, [r4, #32]
 8004244:	6a23      	ldr	r3, [r4, #32]
 8004246:	f023 0304 	bic.w	r3, r3, #4
 800424a:	e78e      	b.n	800416a <HAL_RCC_OscConfig+0x2d6>
 800424c:	f000 f9f2 	bl	8004634 <HAL_GetTick>
 8004250:	f241 3388 	movw	r3, #5000	; 0x1388
 8004254:	eba0 000a 	sub.w	r0, r0, r10
 8004258:	4298      	cmp	r0, r3
 800425a:	d98e      	bls.n	800417a <HAL_RCC_OscConfig+0x2e6>
 800425c:	e67f      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 800425e:	fa97 f3a7 	rbit	r3, r7
 8004262:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004264:	e790      	b.n	8004188 <HAL_RCC_OscConfig+0x2f4>
 8004266:	fa97 f3a7 	rbit	r3, r7
 800426a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800426c:	e7cd      	b.n	800420a <HAL_RCC_OscConfig+0x376>
 800426e:	4c41      	ldr	r4, [pc, #260]	; (8004374 <HAL_RCC_OscConfig+0x4e0>)
 8004270:	6863      	ldr	r3, [r4, #4]
 8004272:	f003 030c 	and.w	r3, r3, #12
 8004276:	2b08      	cmp	r3, #8
 8004278:	f43f ae45 	beq.w	8003f06 <HAL_RCC_OscConfig+0x72>
 800427c:	2a02      	cmp	r2, #2
 800427e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004282:	d152      	bne.n	800432a <HAL_RCC_OscConfig+0x496>
 8004284:	fa93 f3a3 	rbit	r3, r3
 8004288:	fab3 f383 	clz	r3, r3
 800428c:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004290:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004294:	009b      	lsls	r3, r3, #2
 8004296:	2200      	movs	r2, #0
 8004298:	601a      	str	r2, [r3, #0]
 800429a:	f000 f9cb 	bl	8004634 <HAL_GetTick>
 800429e:	f04f 7700 	mov.w	r7, #33554432	; 0x2000000
 80042a2:	4680      	mov	r8, r0
 80042a4:	2601      	movs	r6, #1
 80042a6:	fa97 f3a7 	rbit	r3, r7
 80042aa:	6822      	ldr	r2, [r4, #0]
 80042ac:	fa97 f3a7 	rbit	r3, r7
 80042b0:	fab3 f383 	clz	r3, r3
 80042b4:	f003 031f 	and.w	r3, r3, #31
 80042b8:	fa06 f303 	lsl.w	r3, r6, r3
 80042bc:	4213      	tst	r3, r2
 80042be:	d12d      	bne.n	800431c <HAL_RCC_OscConfig+0x488>
 80042c0:	6862      	ldr	r2, [r4, #4]
 80042c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80042c4:	6a29      	ldr	r1, [r5, #32]
 80042c6:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 80042ca:	430b      	orrs	r3, r1
 80042cc:	4313      	orrs	r3, r2
 80042ce:	6063      	str	r3, [r4, #4]
 80042d0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80042d4:	fa93 f3a3 	rbit	r3, r3
 80042d8:	fab3 f383 	clz	r3, r3
 80042dc:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80042e0:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80042e4:	009b      	lsls	r3, r3, #2
 80042e6:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 80042ea:	601e      	str	r6, [r3, #0]
 80042ec:	f000 f9a2 	bl	8004634 <HAL_GetTick>
 80042f0:	2601      	movs	r6, #1
 80042f2:	4607      	mov	r7, r0
 80042f4:	fa95 f3a5 	rbit	r3, r5
 80042f8:	6822      	ldr	r2, [r4, #0]
 80042fa:	fa95 f3a5 	rbit	r3, r5
 80042fe:	fab3 f383 	clz	r3, r3
 8004302:	f003 031f 	and.w	r3, r3, #31
 8004306:	fa06 f303 	lsl.w	r3, r6, r3
 800430a:	4213      	tst	r3, r2
 800430c:	f47f add8 	bne.w	8003ec0 <HAL_RCC_OscConfig+0x2c>
 8004310:	f000 f990 	bl	8004634 <HAL_GetTick>
 8004314:	1bc0      	subs	r0, r0, r7
 8004316:	2802      	cmp	r0, #2
 8004318:	d9ec      	bls.n	80042f4 <HAL_RCC_OscConfig+0x460>
 800431a:	e620      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 800431c:	f000 f98a 	bl	8004634 <HAL_GetTick>
 8004320:	eba0 0008 	sub.w	r0, r0, r8
 8004324:	2802      	cmp	r0, #2
 8004326:	d9be      	bls.n	80042a6 <HAL_RCC_OscConfig+0x412>
 8004328:	e619      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 800432a:	fa93 f3a3 	rbit	r3, r3
 800432e:	fab3 f383 	clz	r3, r3
 8004332:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004336:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 800433a:	009b      	lsls	r3, r3, #2
 800433c:	2200      	movs	r2, #0
 800433e:	601a      	str	r2, [r3, #0]
 8004340:	f000 f978 	bl	8004634 <HAL_GetTick>
 8004344:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004348:	4607      	mov	r7, r0
 800434a:	2601      	movs	r6, #1
 800434c:	fa95 f3a5 	rbit	r3, r5
 8004350:	6822      	ldr	r2, [r4, #0]
 8004352:	fa95 f3a5 	rbit	r3, r5
 8004356:	fab3 f383 	clz	r3, r3
 800435a:	f003 031f 	and.w	r3, r3, #31
 800435e:	fa06 f303 	lsl.w	r3, r6, r3
 8004362:	4213      	tst	r3, r2
 8004364:	f43f adac 	beq.w	8003ec0 <HAL_RCC_OscConfig+0x2c>
 8004368:	f000 f964 	bl	8004634 <HAL_GetTick>
 800436c:	1bc0      	subs	r0, r0, r7
 800436e:	2802      	cmp	r0, #2
 8004370:	d9ec      	bls.n	800434c <HAL_RCC_OscConfig+0x4b8>
 8004372:	e5f4      	b.n	8003f5e <HAL_RCC_OscConfig+0xca>
 8004374:	40021000 	.word	0x40021000

08004378 <HAL_RCC_GetSysClockFreq>:
 8004378:	b510      	push	{r4, lr}
 800437a:	4c13      	ldr	r4, [pc, #76]	; (80043c8 <HAL_RCC_GetSysClockFreq+0x50>)
 800437c:	6861      	ldr	r1, [r4, #4]
 800437e:	f001 030c 	and.w	r3, r1, #12
 8004382:	2b08      	cmp	r3, #8
 8004384:	d11e      	bne.n	80043c4 <HAL_RCC_GetSysClockFreq+0x4c>
 8004386:	f44f 1370 	mov.w	r3, #3932160	; 0x3c0000
 800438a:	fa93 f3a3 	rbit	r3, r3
 800438e:	f401 1270 	and.w	r2, r1, #3932160	; 0x3c0000
 8004392:	fab3 f383 	clz	r3, r3
 8004396:	fa22 f303 	lsr.w	r3, r2, r3
 800439a:	4a0c      	ldr	r2, [pc, #48]	; (80043cc <HAL_RCC_GetSysClockFreq+0x54>)
 800439c:	5cd0      	ldrb	r0, [r2, r3]
 800439e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80043a0:	220f      	movs	r2, #15
 80043a2:	fa92 f2a2 	rbit	r2, r2
 80043a6:	fab2 f282 	clz	r2, r2
 80043aa:	f003 030f 	and.w	r3, r3, #15
 80043ae:	40d3      	lsrs	r3, r2
 80043b0:	4a07      	ldr	r2, [pc, #28]	; (80043d0 <HAL_RCC_GetSysClockFreq+0x58>)
 80043b2:	5cd2      	ldrb	r2, [r2, r3]
 80043b4:	03cb      	lsls	r3, r1, #15
 80043b6:	bf4a      	itet	mi
 80043b8:	4b06      	ldrmi	r3, [pc, #24]	; (80043d4 <HAL_RCC_GetSysClockFreq+0x5c>)
 80043ba:	4b07      	ldrpl	r3, [pc, #28]	; (80043d8 <HAL_RCC_GetSysClockFreq+0x60>)
 80043bc:	fbb3 f3f2 	udivmi	r3, r3, r2
 80043c0:	4358      	muls	r0, r3
 80043c2:	bd10      	pop	{r4, pc}
 80043c4:	4803      	ldr	r0, [pc, #12]	; (80043d4 <HAL_RCC_GetSysClockFreq+0x5c>)
 80043c6:	bd10      	pop	{r4, pc}
 80043c8:	40021000 	.word	0x40021000
 80043cc:	08006b14 	.word	0x08006b14
 80043d0:	08006b24 	.word	0x08006b24
 80043d4:	007a1200 	.word	0x007a1200
 80043d8:	003d0900 	.word	0x003d0900

080043dc <HAL_RCC_ClockConfig>:
 80043dc:	4a5c      	ldr	r2, [pc, #368]	; (8004550 <HAL_RCC_ClockConfig+0x174>)
 80043de:	6813      	ldr	r3, [r2, #0]
 80043e0:	f003 0307 	and.w	r3, r3, #7
 80043e4:	428b      	cmp	r3, r1
 80043e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043ea:	4606      	mov	r6, r0
 80043ec:	460d      	mov	r5, r1
 80043ee:	d330      	bcc.n	8004452 <HAL_RCC_ClockConfig+0x76>
 80043f0:	6832      	ldr	r2, [r6, #0]
 80043f2:	0791      	lsls	r1, r2, #30
 80043f4:	d43a      	bmi.n	800446c <HAL_RCC_ClockConfig+0x90>
 80043f6:	07d2      	lsls	r2, r2, #31
 80043f8:	d440      	bmi.n	800447c <HAL_RCC_ClockConfig+0xa0>
 80043fa:	4a55      	ldr	r2, [pc, #340]	; (8004550 <HAL_RCC_ClockConfig+0x174>)
 80043fc:	6813      	ldr	r3, [r2, #0]
 80043fe:	f003 0307 	and.w	r3, r3, #7
 8004402:	429d      	cmp	r5, r3
 8004404:	f0c0 8092 	bcc.w	800452c <HAL_RCC_ClockConfig+0x150>
 8004408:	6832      	ldr	r2, [r6, #0]
 800440a:	4c52      	ldr	r4, [pc, #328]	; (8004554 <HAL_RCC_ClockConfig+0x178>)
 800440c:	f012 0f04 	tst.w	r2, #4
 8004410:	f040 8097 	bne.w	8004542 <HAL_RCC_ClockConfig+0x166>
 8004414:	0713      	lsls	r3, r2, #28
 8004416:	d506      	bpl.n	8004426 <HAL_RCC_ClockConfig+0x4a>
 8004418:	6863      	ldr	r3, [r4, #4]
 800441a:	6932      	ldr	r2, [r6, #16]
 800441c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8004420:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004424:	6063      	str	r3, [r4, #4]
 8004426:	f7ff ffa7 	bl	8004378 <HAL_RCC_GetSysClockFreq>
 800442a:	6863      	ldr	r3, [r4, #4]
 800442c:	22f0      	movs	r2, #240	; 0xf0
 800442e:	fa92 f2a2 	rbit	r2, r2
 8004432:	fab2 f282 	clz	r2, r2
 8004436:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800443a:	40d3      	lsrs	r3, r2
 800443c:	4a46      	ldr	r2, [pc, #280]	; (8004558 <HAL_RCC_ClockConfig+0x17c>)
 800443e:	5cd3      	ldrb	r3, [r2, r3]
 8004440:	40d8      	lsrs	r0, r3
 8004442:	4b46      	ldr	r3, [pc, #280]	; (800455c <HAL_RCC_ClockConfig+0x180>)
 8004444:	6018      	str	r0, [r3, #0]
 8004446:	200f      	movs	r0, #15
 8004448:	f7fe fda0 	bl	8002f8c <HAL_InitTick>
 800444c:	2000      	movs	r0, #0
 800444e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004452:	6813      	ldr	r3, [r2, #0]
 8004454:	f023 0307 	bic.w	r3, r3, #7
 8004458:	430b      	orrs	r3, r1
 800445a:	6013      	str	r3, [r2, #0]
 800445c:	6813      	ldr	r3, [r2, #0]
 800445e:	f003 0307 	and.w	r3, r3, #7
 8004462:	4299      	cmp	r1, r3
 8004464:	d0c4      	beq.n	80043f0 <HAL_RCC_ClockConfig+0x14>
 8004466:	2001      	movs	r0, #1
 8004468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800446c:	4939      	ldr	r1, [pc, #228]	; (8004554 <HAL_RCC_ClockConfig+0x178>)
 800446e:	68b0      	ldr	r0, [r6, #8]
 8004470:	684b      	ldr	r3, [r1, #4]
 8004472:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004476:	4303      	orrs	r3, r0
 8004478:	604b      	str	r3, [r1, #4]
 800447a:	e7bc      	b.n	80043f6 <HAL_RCC_ClockConfig+0x1a>
 800447c:	6872      	ldr	r2, [r6, #4]
 800447e:	4c35      	ldr	r4, [pc, #212]	; (8004554 <HAL_RCC_ClockConfig+0x178>)
 8004480:	2a01      	cmp	r2, #1
 8004482:	d128      	bne.n	80044d6 <HAL_RCC_ClockConfig+0xfa>
 8004484:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004488:	fa93 f1a3 	rbit	r1, r3
 800448c:	6821      	ldr	r1, [r4, #0]
 800448e:	fa93 f3a3 	rbit	r3, r3
 8004492:	fab3 f383 	clz	r3, r3
 8004496:	f003 031f 	and.w	r3, r3, #31
 800449a:	fa02 f303 	lsl.w	r3, r2, r3
 800449e:	420b      	tst	r3, r1
 80044a0:	d0e1      	beq.n	8004466 <HAL_RCC_ClockConfig+0x8a>
 80044a2:	6863      	ldr	r3, [r4, #4]
 80044a4:	f023 0303 	bic.w	r3, r3, #3
 80044a8:	431a      	orrs	r2, r3
 80044aa:	6062      	str	r2, [r4, #4]
 80044ac:	f000 f8c2 	bl	8004634 <HAL_GetTick>
 80044b0:	6873      	ldr	r3, [r6, #4]
 80044b2:	2b01      	cmp	r3, #1
 80044b4:	4607      	mov	r7, r0
 80044b6:	f241 3888 	movw	r8, #5000	; 0x1388
 80044ba:	d11f      	bne.n	80044fc <HAL_RCC_ClockConfig+0x120>
 80044bc:	6863      	ldr	r3, [r4, #4]
 80044be:	f003 030c 	and.w	r3, r3, #12
 80044c2:	2b04      	cmp	r3, #4
 80044c4:	d099      	beq.n	80043fa <HAL_RCC_ClockConfig+0x1e>
 80044c6:	f000 f8b5 	bl	8004634 <HAL_GetTick>
 80044ca:	1bc0      	subs	r0, r0, r7
 80044cc:	4540      	cmp	r0, r8
 80044ce:	d9f5      	bls.n	80044bc <HAL_RCC_ClockConfig+0xe0>
 80044d0:	2003      	movs	r0, #3
 80044d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044d6:	2a02      	cmp	r2, #2
 80044d8:	bf0c      	ite	eq
 80044da:	f04f 7300 	moveq.w	r3, #33554432	; 0x2000000
 80044de:	2302      	movne	r3, #2
 80044e0:	fa93 f1a3 	rbit	r1, r3
 80044e4:	6820      	ldr	r0, [r4, #0]
 80044e6:	fa93 f3a3 	rbit	r3, r3
 80044ea:	fab3 f383 	clz	r3, r3
 80044ee:	f003 031f 	and.w	r3, r3, #31
 80044f2:	2101      	movs	r1, #1
 80044f4:	fa01 f303 	lsl.w	r3, r1, r3
 80044f8:	4203      	tst	r3, r0
 80044fa:	e7d1      	b.n	80044a0 <HAL_RCC_ClockConfig+0xc4>
 80044fc:	2b02      	cmp	r3, #2
 80044fe:	d110      	bne.n	8004522 <HAL_RCC_ClockConfig+0x146>
 8004500:	6863      	ldr	r3, [r4, #4]
 8004502:	f003 030c 	and.w	r3, r3, #12
 8004506:	2b08      	cmp	r3, #8
 8004508:	f43f af77 	beq.w	80043fa <HAL_RCC_ClockConfig+0x1e>
 800450c:	f000 f892 	bl	8004634 <HAL_GetTick>
 8004510:	1bc0      	subs	r0, r0, r7
 8004512:	4540      	cmp	r0, r8
 8004514:	d9f4      	bls.n	8004500 <HAL_RCC_ClockConfig+0x124>
 8004516:	e7db      	b.n	80044d0 <HAL_RCC_ClockConfig+0xf4>
 8004518:	f000 f88c 	bl	8004634 <HAL_GetTick>
 800451c:	1bc0      	subs	r0, r0, r7
 800451e:	4540      	cmp	r0, r8
 8004520:	d8d6      	bhi.n	80044d0 <HAL_RCC_ClockConfig+0xf4>
 8004522:	6863      	ldr	r3, [r4, #4]
 8004524:	f013 0f0c 	tst.w	r3, #12
 8004528:	d1f6      	bne.n	8004518 <HAL_RCC_ClockConfig+0x13c>
 800452a:	e766      	b.n	80043fa <HAL_RCC_ClockConfig+0x1e>
 800452c:	6813      	ldr	r3, [r2, #0]
 800452e:	f023 0307 	bic.w	r3, r3, #7
 8004532:	432b      	orrs	r3, r5
 8004534:	6013      	str	r3, [r2, #0]
 8004536:	6813      	ldr	r3, [r2, #0]
 8004538:	f003 0307 	and.w	r3, r3, #7
 800453c:	429d      	cmp	r5, r3
 800453e:	d192      	bne.n	8004466 <HAL_RCC_ClockConfig+0x8a>
 8004540:	e762      	b.n	8004408 <HAL_RCC_ClockConfig+0x2c>
 8004542:	6863      	ldr	r3, [r4, #4]
 8004544:	68f1      	ldr	r1, [r6, #12]
 8004546:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800454a:	430b      	orrs	r3, r1
 800454c:	6063      	str	r3, [r4, #4]
 800454e:	e761      	b.n	8004414 <HAL_RCC_ClockConfig+0x38>
 8004550:	40022000 	.word	0x40022000
 8004554:	40021000 	.word	0x40021000
 8004558:	08006afc 	.word	0x08006afc
 800455c:	200001a4 	.word	0x200001a4

08004560 <HAL_RCC_GetPCLK1Freq>:
 8004560:	4b08      	ldr	r3, [pc, #32]	; (8004584 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004562:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8004566:	685b      	ldr	r3, [r3, #4]
 8004568:	fa92 f2a2 	rbit	r2, r2
 800456c:	fab2 f282 	clz	r2, r2
 8004570:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004574:	40d3      	lsrs	r3, r2
 8004576:	4a04      	ldr	r2, [pc, #16]	; (8004588 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004578:	5cd3      	ldrb	r3, [r2, r3]
 800457a:	4a04      	ldr	r2, [pc, #16]	; (800458c <HAL_RCC_GetPCLK1Freq+0x2c>)
 800457c:	6810      	ldr	r0, [r2, #0]
 800457e:	40d8      	lsrs	r0, r3
 8004580:	4770      	bx	lr
 8004582:	bf00      	nop
 8004584:	40021000 	.word	0x40021000
 8004588:	08006b0c 	.word	0x08006b0c
 800458c:	200001a4 	.word	0x200001a4

08004590 <HAL_RCC_GetPCLK2Freq>:
 8004590:	4b08      	ldr	r3, [pc, #32]	; (80045b4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004592:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004596:	685b      	ldr	r3, [r3, #4]
 8004598:	fa92 f2a2 	rbit	r2, r2
 800459c:	fab2 f282 	clz	r2, r2
 80045a0:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 80045a4:	40d3      	lsrs	r3, r2
 80045a6:	4a04      	ldr	r2, [pc, #16]	; (80045b8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80045a8:	5cd3      	ldrb	r3, [r2, r3]
 80045aa:	4a04      	ldr	r2, [pc, #16]	; (80045bc <HAL_RCC_GetPCLK2Freq+0x2c>)
 80045ac:	6810      	ldr	r0, [r2, #0]
 80045ae:	40d8      	lsrs	r0, r3
 80045b0:	4770      	bx	lr
 80045b2:	bf00      	nop
 80045b4:	40021000 	.word	0x40021000
 80045b8:	08006b0c 	.word	0x08006b0c
 80045bc:	200001a4 	.word	0x200001a4

080045c0 <HAL_RCC_GetClockConfig>:
 80045c0:	230f      	movs	r3, #15
 80045c2:	6003      	str	r3, [r0, #0]
 80045c4:	4b0b      	ldr	r3, [pc, #44]	; (80045f4 <HAL_RCC_GetClockConfig+0x34>)
 80045c6:	685a      	ldr	r2, [r3, #4]
 80045c8:	f002 0203 	and.w	r2, r2, #3
 80045cc:	6042      	str	r2, [r0, #4]
 80045ce:	685a      	ldr	r2, [r3, #4]
 80045d0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80045d4:	6082      	str	r2, [r0, #8]
 80045d6:	685a      	ldr	r2, [r3, #4]
 80045d8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80045dc:	60c2      	str	r2, [r0, #12]
 80045de:	685b      	ldr	r3, [r3, #4]
 80045e0:	08db      	lsrs	r3, r3, #3
 80045e2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80045e6:	6103      	str	r3, [r0, #16]
 80045e8:	4b03      	ldr	r3, [pc, #12]	; (80045f8 <HAL_RCC_GetClockConfig+0x38>)
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	f003 0307 	and.w	r3, r3, #7
 80045f0:	600b      	str	r3, [r1, #0]
 80045f2:	4770      	bx	lr
 80045f4:	40021000 	.word	0x40021000
 80045f8:	40022000 	.word	0x40022000

080045fc <HAL_MspInit>:
 80045fc:	4770      	bx	lr
	...

08004600 <HAL_Init>:
 8004600:	4a07      	ldr	r2, [pc, #28]	; (8004620 <HAL_Init+0x20>)
 8004602:	b508      	push	{r3, lr}
 8004604:	6813      	ldr	r3, [r2, #0]
 8004606:	f043 0310 	orr.w	r3, r3, #16
 800460a:	6013      	str	r3, [r2, #0]
 800460c:	2003      	movs	r0, #3
 800460e:	f000 f817 	bl	8004640 <HAL_NVIC_SetPriorityGrouping>
 8004612:	200f      	movs	r0, #15
 8004614:	f7fe fcba 	bl	8002f8c <HAL_InitTick>
 8004618:	f7ff fff0 	bl	80045fc <HAL_MspInit>
 800461c:	2000      	movs	r0, #0
 800461e:	bd08      	pop	{r3, pc}
 8004620:	40022000 	.word	0x40022000

08004624 <HAL_IncTick>:
 8004624:	4a02      	ldr	r2, [pc, #8]	; (8004630 <HAL_IncTick+0xc>)
 8004626:	6813      	ldr	r3, [r2, #0]
 8004628:	3301      	adds	r3, #1
 800462a:	6013      	str	r3, [r2, #0]
 800462c:	4770      	bx	lr
 800462e:	bf00      	nop
 8004630:	20001ee4 	.word	0x20001ee4

08004634 <HAL_GetTick>:
 8004634:	4b01      	ldr	r3, [pc, #4]	; (800463c <HAL_GetTick+0x8>)
 8004636:	6818      	ldr	r0, [r3, #0]
 8004638:	4770      	bx	lr
 800463a:	bf00      	nop
 800463c:	20001ee4 	.word	0x20001ee4

08004640 <HAL_NVIC_SetPriorityGrouping>:
 8004640:	4a07      	ldr	r2, [pc, #28]	; (8004660 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004642:	68d3      	ldr	r3, [r2, #12]
 8004644:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004648:	041b      	lsls	r3, r3, #16
 800464a:	0c1b      	lsrs	r3, r3, #16
 800464c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004650:	0200      	lsls	r0, r0, #8
 8004652:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004656:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 800465a:	4303      	orrs	r3, r0
 800465c:	60d3      	str	r3, [r2, #12]
 800465e:	4770      	bx	lr
 8004660:	e000ed00 	.word	0xe000ed00

08004664 <HAL_CAN_ConfigFilter>:
 8004664:	6803      	ldr	r3, [r0, #0]
 8004666:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 800466a:	b570      	push	{r4, r5, r6, lr}
 800466c:	f040 0001 	orr.w	r0, r0, #1
 8004670:	694c      	ldr	r4, [r1, #20]
 8004672:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8004676:	2201      	movs	r2, #1
 8004678:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
 800467c:	40a2      	lsls	r2, r4
 800467e:	43d0      	mvns	r0, r2
 8004680:	4005      	ands	r5, r0
 8004682:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c
 8004686:	69cd      	ldr	r5, [r1, #28]
 8004688:	bb85      	cbnz	r5, 80046ec <HAL_CAN_ConfigFilter+0x88>
 800468a:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 800468e:	68ce      	ldr	r6, [r1, #12]
 8004690:	4005      	ands	r5, r0
 8004692:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 8004696:	888d      	ldrh	r5, [r1, #4]
 8004698:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800469c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80046a0:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80046a4:	688e      	ldr	r6, [r1, #8]
 80046a6:	880d      	ldrh	r5, [r1, #0]
 80046a8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80046ac:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 80046b0:	698c      	ldr	r4, [r1, #24]
 80046b2:	bb6c      	cbnz	r4, 8004710 <HAL_CAN_ConfigFilter+0xac>
 80046b4:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 80046b8:	4004      	ands	r4, r0
 80046ba:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 80046be:	690c      	ldr	r4, [r1, #16]
 80046c0:	bb54      	cbnz	r4, 8004718 <HAL_CAN_ConfigFilter+0xb4>
 80046c2:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
 80046c6:	4020      	ands	r0, r4
 80046c8:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 80046cc:	6a09      	ldr	r1, [r1, #32]
 80046ce:	2901      	cmp	r1, #1
 80046d0:	bf02      	ittt	eq
 80046d2:	f8d3 121c 	ldreq.w	r1, [r3, #540]	; 0x21c
 80046d6:	430a      	orreq	r2, r1
 80046d8:	f8c3 221c 	streq.w	r2, [r3, #540]	; 0x21c
 80046dc:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 80046e0:	f022 0201 	bic.w	r2, r2, #1
 80046e4:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 80046e8:	2000      	movs	r0, #0
 80046ea:	bd70      	pop	{r4, r5, r6, pc}
 80046ec:	2d01      	cmp	r5, #1
 80046ee:	d1df      	bne.n	80046b0 <HAL_CAN_ConfigFilter+0x4c>
 80046f0:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 80046f4:	680e      	ldr	r6, [r1, #0]
 80046f6:	4315      	orrs	r5, r2
 80046f8:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 80046fc:	888d      	ldrh	r5, [r1, #4]
 80046fe:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8004702:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004706:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 800470a:	688e      	ldr	r6, [r1, #8]
 800470c:	898d      	ldrh	r5, [r1, #12]
 800470e:	e7cb      	b.n	80046a8 <HAL_CAN_ConfigFilter+0x44>
 8004710:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 8004714:	4314      	orrs	r4, r2
 8004716:	e7d0      	b.n	80046ba <HAL_CAN_ConfigFilter+0x56>
 8004718:	2c01      	cmp	r4, #1
 800471a:	d1d7      	bne.n	80046cc <HAL_CAN_ConfigFilter+0x68>
 800471c:	f8d3 0214 	ldr.w	r0, [r3, #532]	; 0x214
 8004720:	4310      	orrs	r0, r2
 8004722:	e7d1      	b.n	80046c8 <HAL_CAN_ConfigFilter+0x64>

08004724 <HAL_CAN_MspInit>:
 8004724:	4770      	bx	lr

08004726 <HAL_CAN_Init>:
 8004726:	b570      	push	{r4, r5, r6, lr}
 8004728:	4604      	mov	r4, r0
 800472a:	2800      	cmp	r0, #0
 800472c:	d072      	beq.n	8004814 <HAL_CAN_Init+0xee>
 800472e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004732:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004736:	b91b      	cbnz	r3, 8004740 <HAL_CAN_Init+0x1a>
 8004738:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800473c:	f7ff fff2 	bl	8004724 <HAL_CAN_MspInit>
 8004740:	2302      	movs	r3, #2
 8004742:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004746:	6823      	ldr	r3, [r4, #0]
 8004748:	681a      	ldr	r2, [r3, #0]
 800474a:	f022 0202 	bic.w	r2, r2, #2
 800474e:	601a      	str	r2, [r3, #0]
 8004750:	681a      	ldr	r2, [r3, #0]
 8004752:	f042 0201 	orr.w	r2, r2, #1
 8004756:	601a      	str	r2, [r3, #0]
 8004758:	f7ff ff6c 	bl	8004634 <HAL_GetTick>
 800475c:	4606      	mov	r6, r0
 800475e:	6823      	ldr	r3, [r4, #0]
 8004760:	685d      	ldr	r5, [r3, #4]
 8004762:	f015 0501 	ands.w	r5, r5, #1
 8004766:	d057      	beq.n	8004818 <HAL_CAN_Init+0xf2>
 8004768:	685a      	ldr	r2, [r3, #4]
 800476a:	07d1      	lsls	r1, r2, #31
 800476c:	d54f      	bpl.n	800480e <HAL_CAN_Init+0xe8>
 800476e:	69a2      	ldr	r2, [r4, #24]
 8004770:	2a01      	cmp	r2, #1
 8004772:	681a      	ldr	r2, [r3, #0]
 8004774:	bf0c      	ite	eq
 8004776:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 800477a:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 800477e:	601a      	str	r2, [r3, #0]
 8004780:	69e2      	ldr	r2, [r4, #28]
 8004782:	2a01      	cmp	r2, #1
 8004784:	681a      	ldr	r2, [r3, #0]
 8004786:	bf0c      	ite	eq
 8004788:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 800478c:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8004790:	601a      	str	r2, [r3, #0]
 8004792:	6a22      	ldr	r2, [r4, #32]
 8004794:	2a01      	cmp	r2, #1
 8004796:	681a      	ldr	r2, [r3, #0]
 8004798:	bf0c      	ite	eq
 800479a:	f042 0220 	orreq.w	r2, r2, #32
 800479e:	f022 0220 	bicne.w	r2, r2, #32
 80047a2:	601a      	str	r2, [r3, #0]
 80047a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80047a6:	2a01      	cmp	r2, #1
 80047a8:	681a      	ldr	r2, [r3, #0]
 80047aa:	bf0c      	ite	eq
 80047ac:	f042 0210 	orreq.w	r2, r2, #16
 80047b0:	f022 0210 	bicne.w	r2, r2, #16
 80047b4:	601a      	str	r2, [r3, #0]
 80047b6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80047b8:	2a01      	cmp	r2, #1
 80047ba:	681a      	ldr	r2, [r3, #0]
 80047bc:	bf0c      	ite	eq
 80047be:	f042 0208 	orreq.w	r2, r2, #8
 80047c2:	f022 0208 	bicne.w	r2, r2, #8
 80047c6:	601a      	str	r2, [r3, #0]
 80047c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80047ca:	2a01      	cmp	r2, #1
 80047cc:	681a      	ldr	r2, [r3, #0]
 80047ce:	bf0c      	ite	eq
 80047d0:	f042 0204 	orreq.w	r2, r2, #4
 80047d4:	f022 0204 	bicne.w	r2, r2, #4
 80047d8:	601a      	str	r2, [r3, #0]
 80047da:	68e1      	ldr	r1, [r4, #12]
 80047dc:	68a2      	ldr	r2, [r4, #8]
 80047de:	430a      	orrs	r2, r1
 80047e0:	6921      	ldr	r1, [r4, #16]
 80047e2:	430a      	orrs	r2, r1
 80047e4:	6961      	ldr	r1, [r4, #20]
 80047e6:	430a      	orrs	r2, r1
 80047e8:	6861      	ldr	r1, [r4, #4]
 80047ea:	3901      	subs	r1, #1
 80047ec:	430a      	orrs	r2, r1
 80047ee:	61da      	str	r2, [r3, #28]
 80047f0:	681a      	ldr	r2, [r3, #0]
 80047f2:	f022 0201 	bic.w	r2, r2, #1
 80047f6:	601a      	str	r2, [r3, #0]
 80047f8:	f7ff ff1c 	bl	8004634 <HAL_GetTick>
 80047fc:	4605      	mov	r5, r0
 80047fe:	6823      	ldr	r3, [r4, #0]
 8004800:	685a      	ldr	r2, [r3, #4]
 8004802:	07d2      	lsls	r2, r2, #31
 8004804:	d413      	bmi.n	800482e <HAL_CAN_Init+0x108>
 8004806:	6858      	ldr	r0, [r3, #4]
 8004808:	f010 0001 	ands.w	r0, r0, #1
 800480c:	d01b      	beq.n	8004846 <HAL_CAN_Init+0x120>
 800480e:	2304      	movs	r3, #4
 8004810:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004814:	2001      	movs	r0, #1
 8004816:	bd70      	pop	{r4, r5, r6, pc}
 8004818:	f7ff ff0c 	bl	8004634 <HAL_GetTick>
 800481c:	1b80      	subs	r0, r0, r6
 800481e:	280a      	cmp	r0, #10
 8004820:	d99d      	bls.n	800475e <HAL_CAN_Init+0x38>
 8004822:	2003      	movs	r0, #3
 8004824:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004828:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 800482c:	bd70      	pop	{r4, r5, r6, pc}
 800482e:	f7ff ff01 	bl	8004634 <HAL_GetTick>
 8004832:	1b40      	subs	r0, r0, r5
 8004834:	280a      	cmp	r0, #10
 8004836:	d9e2      	bls.n	80047fe <HAL_CAN_Init+0xd8>
 8004838:	2003      	movs	r0, #3
 800483a:	2300      	movs	r3, #0
 800483c:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004840:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004844:	bd70      	pop	{r4, r5, r6, pc}
 8004846:	2301      	movs	r3, #1
 8004848:	63e0      	str	r0, [r4, #60]	; 0x3c
 800484a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800484e:	bd70      	pop	{r4, r5, r6, pc}

08004850 <HAL_TIM_OC_MspInit>:
 8004850:	4770      	bx	lr
	...

08004854 <TIM_Base_SetConfig>:
 8004854:	4a21      	ldr	r2, [pc, #132]	; (80048dc <TIM_Base_SetConfig+0x88>)
 8004856:	6803      	ldr	r3, [r0, #0]
 8004858:	4290      	cmp	r0, r2
 800485a:	b510      	push	{r4, lr}
 800485c:	d005      	beq.n	800486a <TIM_Base_SetConfig+0x16>
 800485e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004862:	d002      	beq.n	800486a <TIM_Base_SetConfig+0x16>
 8004864:	4c1e      	ldr	r4, [pc, #120]	; (80048e0 <TIM_Base_SetConfig+0x8c>)
 8004866:	42a0      	cmp	r0, r4
 8004868:	d10c      	bne.n	8004884 <TIM_Base_SetConfig+0x30>
 800486a:	684c      	ldr	r4, [r1, #4]
 800486c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004870:	4290      	cmp	r0, r2
 8004872:	ea43 0304 	orr.w	r3, r3, r4
 8004876:	d010      	beq.n	800489a <TIM_Base_SetConfig+0x46>
 8004878:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800487c:	d00d      	beq.n	800489a <TIM_Base_SetConfig+0x46>
 800487e:	4a18      	ldr	r2, [pc, #96]	; (80048e0 <TIM_Base_SetConfig+0x8c>)
 8004880:	4290      	cmp	r0, r2
 8004882:	d00a      	beq.n	800489a <TIM_Base_SetConfig+0x46>
 8004884:	4a17      	ldr	r2, [pc, #92]	; (80048e4 <TIM_Base_SetConfig+0x90>)
 8004886:	4290      	cmp	r0, r2
 8004888:	d007      	beq.n	800489a <TIM_Base_SetConfig+0x46>
 800488a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800488e:	4290      	cmp	r0, r2
 8004890:	d003      	beq.n	800489a <TIM_Base_SetConfig+0x46>
 8004892:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004896:	4290      	cmp	r0, r2
 8004898:	d103      	bne.n	80048a2 <TIM_Base_SetConfig+0x4e>
 800489a:	68ca      	ldr	r2, [r1, #12]
 800489c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80048a0:	4313      	orrs	r3, r2
 80048a2:	694a      	ldr	r2, [r1, #20]
 80048a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80048a8:	4313      	orrs	r3, r2
 80048aa:	6003      	str	r3, [r0, #0]
 80048ac:	688b      	ldr	r3, [r1, #8]
 80048ae:	62c3      	str	r3, [r0, #44]	; 0x2c
 80048b0:	680b      	ldr	r3, [r1, #0]
 80048b2:	6283      	str	r3, [r0, #40]	; 0x28
 80048b4:	4b09      	ldr	r3, [pc, #36]	; (80048dc <TIM_Base_SetConfig+0x88>)
 80048b6:	4298      	cmp	r0, r3
 80048b8:	d00b      	beq.n	80048d2 <TIM_Base_SetConfig+0x7e>
 80048ba:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 80048be:	4298      	cmp	r0, r3
 80048c0:	d007      	beq.n	80048d2 <TIM_Base_SetConfig+0x7e>
 80048c2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80048c6:	4298      	cmp	r0, r3
 80048c8:	d003      	beq.n	80048d2 <TIM_Base_SetConfig+0x7e>
 80048ca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80048ce:	4298      	cmp	r0, r3
 80048d0:	d101      	bne.n	80048d6 <TIM_Base_SetConfig+0x82>
 80048d2:	690b      	ldr	r3, [r1, #16]
 80048d4:	6303      	str	r3, [r0, #48]	; 0x30
 80048d6:	2301      	movs	r3, #1
 80048d8:	6143      	str	r3, [r0, #20]
 80048da:	bd10      	pop	{r4, pc}
 80048dc:	40012c00 	.word	0x40012c00
 80048e0:	40000400 	.word	0x40000400
 80048e4:	40014000 	.word	0x40014000

080048e8 <HAL_TIM_OC_Init>:
 80048e8:	b510      	push	{r4, lr}
 80048ea:	4604      	mov	r4, r0
 80048ec:	b1a0      	cbz	r0, 8004918 <HAL_TIM_OC_Init+0x30>
 80048ee:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80048f2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80048f6:	b91b      	cbnz	r3, 8004900 <HAL_TIM_OC_Init+0x18>
 80048f8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 80048fc:	f7ff ffa8 	bl	8004850 <HAL_TIM_OC_MspInit>
 8004900:	2302      	movs	r3, #2
 8004902:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004906:	6820      	ldr	r0, [r4, #0]
 8004908:	1d21      	adds	r1, r4, #4
 800490a:	f7ff ffa3 	bl	8004854 <TIM_Base_SetConfig>
 800490e:	2301      	movs	r3, #1
 8004910:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004914:	2000      	movs	r0, #0
 8004916:	bd10      	pop	{r4, pc}
 8004918:	2001      	movs	r0, #1
 800491a:	bd10      	pop	{r4, pc}

0800491c <TIM_CCxChannelCmd>:
 800491c:	6a03      	ldr	r3, [r0, #32]
 800491e:	b510      	push	{r4, lr}
 8004920:	2401      	movs	r4, #1
 8004922:	408c      	lsls	r4, r1
 8004924:	ea23 0304 	bic.w	r3, r3, r4
 8004928:	6203      	str	r3, [r0, #32]
 800492a:	6a03      	ldr	r3, [r0, #32]
 800492c:	408a      	lsls	r2, r1
 800492e:	431a      	orrs	r2, r3
 8004930:	6202      	str	r2, [r0, #32]
 8004932:	bd10      	pop	{r4, pc}

08004934 <HAL_TIM_PWM_Start>:
 8004934:	b510      	push	{r4, lr}
 8004936:	4604      	mov	r4, r0
 8004938:	2201      	movs	r2, #1
 800493a:	6800      	ldr	r0, [r0, #0]
 800493c:	f7ff ffee 	bl	800491c <TIM_CCxChannelCmd>
 8004940:	6823      	ldr	r3, [r4, #0]
 8004942:	4a0c      	ldr	r2, [pc, #48]	; (8004974 <HAL_TIM_PWM_Start+0x40>)
 8004944:	4293      	cmp	r3, r2
 8004946:	d00b      	beq.n	8004960 <HAL_TIM_PWM_Start+0x2c>
 8004948:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 800494c:	4293      	cmp	r3, r2
 800494e:	d007      	beq.n	8004960 <HAL_TIM_PWM_Start+0x2c>
 8004950:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004954:	4293      	cmp	r3, r2
 8004956:	d003      	beq.n	8004960 <HAL_TIM_PWM_Start+0x2c>
 8004958:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800495c:	4293      	cmp	r3, r2
 800495e:	d103      	bne.n	8004968 <HAL_TIM_PWM_Start+0x34>
 8004960:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004962:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004966:	645a      	str	r2, [r3, #68]	; 0x44
 8004968:	681a      	ldr	r2, [r3, #0]
 800496a:	f042 0201 	orr.w	r2, r2, #1
 800496e:	601a      	str	r2, [r3, #0]
 8004970:	2000      	movs	r0, #0
 8004972:	bd10      	pop	{r4, pc}
 8004974:	40012c00 	.word	0x40012c00

08004978 <HAL_TIM_OC_Start>:
 8004978:	f7ff bfdc 	b.w	8004934 <HAL_TIM_PWM_Start>

0800497c <HAL_UART_MspInit>:
 800497c:	4770      	bx	lr
	...

08004980 <UART_SetConfig>:
 8004980:	b538      	push	{r3, r4, r5, lr}
 8004982:	4604      	mov	r4, r0
 8004984:	6805      	ldr	r5, [r0, #0]
 8004986:	6921      	ldr	r1, [r4, #16]
 8004988:	68a3      	ldr	r3, [r4, #8]
 800498a:	69c2      	ldr	r2, [r0, #28]
 800498c:	6828      	ldr	r0, [r5, #0]
 800498e:	430b      	orrs	r3, r1
 8004990:	6961      	ldr	r1, [r4, #20]
 8004992:	430b      	orrs	r3, r1
 8004994:	4949      	ldr	r1, [pc, #292]	; (8004abc <UART_SetConfig+0x13c>)
 8004996:	4313      	orrs	r3, r2
 8004998:	4001      	ands	r1, r0
 800499a:	430b      	orrs	r3, r1
 800499c:	602b      	str	r3, [r5, #0]
 800499e:	686b      	ldr	r3, [r5, #4]
 80049a0:	68e1      	ldr	r1, [r4, #12]
 80049a2:	6a20      	ldr	r0, [r4, #32]
 80049a4:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80049a8:	430b      	orrs	r3, r1
 80049aa:	606b      	str	r3, [r5, #4]
 80049ac:	68a9      	ldr	r1, [r5, #8]
 80049ae:	69a3      	ldr	r3, [r4, #24]
 80049b0:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 80049b4:	4303      	orrs	r3, r0
 80049b6:	430b      	orrs	r3, r1
 80049b8:	60ab      	str	r3, [r5, #8]
 80049ba:	4b41      	ldr	r3, [pc, #260]	; (8004ac0 <UART_SetConfig+0x140>)
 80049bc:	429d      	cmp	r5, r3
 80049be:	d112      	bne.n	80049e6 <UART_SetConfig+0x66>
 80049c0:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 80049c4:	493f      	ldr	r1, [pc, #252]	; (8004ac4 <UART_SetConfig+0x144>)
 80049c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049c8:	f003 0303 	and.w	r3, r3, #3
 80049cc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80049d0:	5ccb      	ldrb	r3, [r1, r3]
 80049d2:	d13b      	bne.n	8004a4c <UART_SetConfig+0xcc>
 80049d4:	2b08      	cmp	r3, #8
 80049d6:	d836      	bhi.n	8004a46 <UART_SetConfig+0xc6>
 80049d8:	e8df f003 	tbb	[pc, r3]
 80049dc:	3524210f 	.word	0x3524210f
 80049e0:	3535352d 	.word	0x3535352d
 80049e4:	30          	.byte	0x30
 80049e5:	00          	.byte	0x00
 80049e6:	4b38      	ldr	r3, [pc, #224]	; (8004ac8 <UART_SetConfig+0x148>)
 80049e8:	429d      	cmp	r5, r3
 80049ea:	d003      	beq.n	80049f4 <UART_SetConfig+0x74>
 80049ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049f0:	429d      	cmp	r5, r3
 80049f2:	d15e      	bne.n	8004ab2 <UART_SetConfig+0x132>
 80049f4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80049f8:	d131      	bne.n	8004a5e <UART_SetConfig+0xde>
 80049fa:	f7ff fdb1 	bl	8004560 <HAL_RCC_GetPCLK1Freq>
 80049fe:	6861      	ldr	r1, [r4, #4]
 8004a00:	084a      	lsrs	r2, r1, #1
 8004a02:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8004a06:	fbb3 f3f1 	udiv	r3, r3, r1
 8004a0a:	b29b      	uxth	r3, r3
 8004a0c:	2000      	movs	r0, #0
 8004a0e:	f023 020f 	bic.w	r2, r3, #15
 8004a12:	6821      	ldr	r1, [r4, #0]
 8004a14:	f3c3 0342 	ubfx	r3, r3, #1, #3
 8004a18:	4313      	orrs	r3, r2
 8004a1a:	60cb      	str	r3, [r1, #12]
 8004a1c:	bd38      	pop	{r3, r4, r5, pc}
 8004a1e:	f7ff fdb7 	bl	8004590 <HAL_RCC_GetPCLK2Freq>
 8004a22:	e7ec      	b.n	80049fe <UART_SetConfig+0x7e>
 8004a24:	6860      	ldr	r0, [r4, #4]
 8004a26:	0843      	lsrs	r3, r0, #1
 8004a28:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8004a2c:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8004a30:	fbb3 f3f0 	udiv	r3, r3, r0
 8004a34:	e7e9      	b.n	8004a0a <UART_SetConfig+0x8a>
 8004a36:	f7ff fc9f 	bl	8004378 <HAL_RCC_GetSysClockFreq>
 8004a3a:	e7e0      	b.n	80049fe <UART_SetConfig+0x7e>
 8004a3c:	6860      	ldr	r0, [r4, #4]
 8004a3e:	0843      	lsrs	r3, r0, #1
 8004a40:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004a44:	e7f4      	b.n	8004a30 <UART_SetConfig+0xb0>
 8004a46:	2001      	movs	r0, #1
 8004a48:	2300      	movs	r3, #0
 8004a4a:	e7e0      	b.n	8004a0e <UART_SetConfig+0x8e>
 8004a4c:	2b08      	cmp	r3, #8
 8004a4e:	d833      	bhi.n	8004ab8 <UART_SetConfig+0x138>
 8004a50:	e8df f003 	tbb	[pc, r3]
 8004a54:	321b1005 	.word	0x321b1005
 8004a58:	32323227 	.word	0x32323227
 8004a5c:	2a          	.byte	0x2a
 8004a5d:	00          	.byte	0x00
 8004a5e:	f7ff fd7f 	bl	8004560 <HAL_RCC_GetPCLK1Freq>
 8004a62:	6863      	ldr	r3, [r4, #4]
 8004a64:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004a68:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a6c:	b280      	uxth	r0, r0
 8004a6e:	60e8      	str	r0, [r5, #12]
 8004a70:	2000      	movs	r0, #0
 8004a72:	bd38      	pop	{r3, r4, r5, pc}
 8004a74:	f7ff fd8c 	bl	8004590 <HAL_RCC_GetPCLK2Freq>
 8004a78:	6863      	ldr	r3, [r4, #4]
 8004a7a:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004a7e:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a82:	4b0f      	ldr	r3, [pc, #60]	; (8004ac0 <UART_SetConfig+0x140>)
 8004a84:	b280      	uxth	r0, r0
 8004a86:	60d8      	str	r0, [r3, #12]
 8004a88:	e7f2      	b.n	8004a70 <UART_SetConfig+0xf0>
 8004a8a:	6862      	ldr	r2, [r4, #4]
 8004a8c:	0853      	lsrs	r3, r2, #1
 8004a8e:	f503 03f4 	add.w	r3, r3, #7995392	; 0x7a0000
 8004a92:	f503 5390 	add.w	r3, r3, #4608	; 0x1200
 8004a96:	fbb3 f3f2 	udiv	r3, r3, r2
 8004a9a:	4a09      	ldr	r2, [pc, #36]	; (8004ac0 <UART_SetConfig+0x140>)
 8004a9c:	b29b      	uxth	r3, r3
 8004a9e:	60d3      	str	r3, [r2, #12]
 8004aa0:	e7e6      	b.n	8004a70 <UART_SetConfig+0xf0>
 8004aa2:	f7ff fc69 	bl	8004378 <HAL_RCC_GetSysClockFreq>
 8004aa6:	e7e7      	b.n	8004a78 <UART_SetConfig+0xf8>
 8004aa8:	6862      	ldr	r2, [r4, #4]
 8004aaa:	0853      	lsrs	r3, r2, #1
 8004aac:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8004ab0:	e7f1      	b.n	8004a96 <UART_SetConfig+0x116>
 8004ab2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004ab6:	d0c6      	beq.n	8004a46 <UART_SetConfig+0xc6>
 8004ab8:	2001      	movs	r0, #1
 8004aba:	bd38      	pop	{r3, r4, r5, pc}
 8004abc:	efff69f3 	.word	0xefff69f3
 8004ac0:	40013800 	.word	0x40013800
 8004ac4:	08006b34 	.word	0x08006b34
 8004ac8:	40004400 	.word	0x40004400

08004acc <UART_AdvFeatureConfig>:
 8004acc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004ace:	07da      	lsls	r2, r3, #31
 8004ad0:	b510      	push	{r4, lr}
 8004ad2:	d506      	bpl.n	8004ae2 <UART_AdvFeatureConfig+0x16>
 8004ad4:	6801      	ldr	r1, [r0, #0]
 8004ad6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8004ad8:	684a      	ldr	r2, [r1, #4]
 8004ada:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004ade:	4322      	orrs	r2, r4
 8004ae0:	604a      	str	r2, [r1, #4]
 8004ae2:	079c      	lsls	r4, r3, #30
 8004ae4:	d506      	bpl.n	8004af4 <UART_AdvFeatureConfig+0x28>
 8004ae6:	6801      	ldr	r1, [r0, #0]
 8004ae8:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8004aea:	684a      	ldr	r2, [r1, #4]
 8004aec:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004af0:	4322      	orrs	r2, r4
 8004af2:	604a      	str	r2, [r1, #4]
 8004af4:	0759      	lsls	r1, r3, #29
 8004af6:	d506      	bpl.n	8004b06 <UART_AdvFeatureConfig+0x3a>
 8004af8:	6801      	ldr	r1, [r0, #0]
 8004afa:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004afc:	684a      	ldr	r2, [r1, #4]
 8004afe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004b02:	4322      	orrs	r2, r4
 8004b04:	604a      	str	r2, [r1, #4]
 8004b06:	071a      	lsls	r2, r3, #28
 8004b08:	d506      	bpl.n	8004b18 <UART_AdvFeatureConfig+0x4c>
 8004b0a:	6801      	ldr	r1, [r0, #0]
 8004b0c:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004b0e:	684a      	ldr	r2, [r1, #4]
 8004b10:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004b14:	4322      	orrs	r2, r4
 8004b16:	604a      	str	r2, [r1, #4]
 8004b18:	06dc      	lsls	r4, r3, #27
 8004b1a:	d506      	bpl.n	8004b2a <UART_AdvFeatureConfig+0x5e>
 8004b1c:	6801      	ldr	r1, [r0, #0]
 8004b1e:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004b20:	688a      	ldr	r2, [r1, #8]
 8004b22:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004b26:	4322      	orrs	r2, r4
 8004b28:	608a      	str	r2, [r1, #8]
 8004b2a:	0699      	lsls	r1, r3, #26
 8004b2c:	d506      	bpl.n	8004b3c <UART_AdvFeatureConfig+0x70>
 8004b2e:	6801      	ldr	r1, [r0, #0]
 8004b30:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8004b32:	688a      	ldr	r2, [r1, #8]
 8004b34:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b38:	4322      	orrs	r2, r4
 8004b3a:	608a      	str	r2, [r1, #8]
 8004b3c:	065a      	lsls	r2, r3, #25
 8004b3e:	d50f      	bpl.n	8004b60 <UART_AdvFeatureConfig+0x94>
 8004b40:	6801      	ldr	r1, [r0, #0]
 8004b42:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004b44:	684a      	ldr	r2, [r1, #4]
 8004b46:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004b4a:	4322      	orrs	r2, r4
 8004b4c:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004b50:	604a      	str	r2, [r1, #4]
 8004b52:	d105      	bne.n	8004b60 <UART_AdvFeatureConfig+0x94>
 8004b54:	684a      	ldr	r2, [r1, #4]
 8004b56:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8004b58:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004b5c:	4322      	orrs	r2, r4
 8004b5e:	604a      	str	r2, [r1, #4]
 8004b60:	061b      	lsls	r3, r3, #24
 8004b62:	d506      	bpl.n	8004b72 <UART_AdvFeatureConfig+0xa6>
 8004b64:	6802      	ldr	r2, [r0, #0]
 8004b66:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8004b68:	6853      	ldr	r3, [r2, #4]
 8004b6a:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004b6e:	430b      	orrs	r3, r1
 8004b70:	6053      	str	r3, [r2, #4]
 8004b72:	bd10      	pop	{r4, pc}

08004b74 <UART_WaitOnFlagUntilTimeout>:
 8004b74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b78:	9d06      	ldr	r5, [sp, #24]
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	460f      	mov	r7, r1
 8004b7e:	4616      	mov	r6, r2
 8004b80:	4698      	mov	r8, r3
 8004b82:	6821      	ldr	r1, [r4, #0]
 8004b84:	69ca      	ldr	r2, [r1, #28]
 8004b86:	ea37 0302 	bics.w	r3, r7, r2
 8004b8a:	bf0c      	ite	eq
 8004b8c:	2201      	moveq	r2, #1
 8004b8e:	2200      	movne	r2, #0
 8004b90:	42b2      	cmp	r2, r6
 8004b92:	d002      	beq.n	8004b9a <UART_WaitOnFlagUntilTimeout+0x26>
 8004b94:	2000      	movs	r0, #0
 8004b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b9a:	1c6b      	adds	r3, r5, #1
 8004b9c:	d0f2      	beq.n	8004b84 <UART_WaitOnFlagUntilTimeout+0x10>
 8004b9e:	b99d      	cbnz	r5, 8004bc8 <UART_WaitOnFlagUntilTimeout+0x54>
 8004ba0:	6823      	ldr	r3, [r4, #0]
 8004ba2:	681a      	ldr	r2, [r3, #0]
 8004ba4:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004ba8:	601a      	str	r2, [r3, #0]
 8004baa:	689a      	ldr	r2, [r3, #8]
 8004bac:	f022 0201 	bic.w	r2, r2, #1
 8004bb0:	609a      	str	r2, [r3, #8]
 8004bb2:	2320      	movs	r3, #32
 8004bb4:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004bb8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004bbc:	2300      	movs	r3, #0
 8004bbe:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8004bc2:	2003      	movs	r0, #3
 8004bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bc8:	f7ff fd34 	bl	8004634 <HAL_GetTick>
 8004bcc:	eba0 0008 	sub.w	r0, r0, r8
 8004bd0:	4285      	cmp	r5, r0
 8004bd2:	d2d6      	bcs.n	8004b82 <UART_WaitOnFlagUntilTimeout+0xe>
 8004bd4:	e7e4      	b.n	8004ba0 <UART_WaitOnFlagUntilTimeout+0x2c>

08004bd6 <UART_CheckIdleState>:
 8004bd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004bd8:	4604      	mov	r4, r0
 8004bda:	2600      	movs	r6, #0
 8004bdc:	66c6      	str	r6, [r0, #108]	; 0x6c
 8004bde:	f7ff fd29 	bl	8004634 <HAL_GetTick>
 8004be2:	6823      	ldr	r3, [r4, #0]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	071a      	lsls	r2, r3, #28
 8004be8:	4605      	mov	r5, r0
 8004bea:	d417      	bmi.n	8004c1c <UART_CheckIdleState+0x46>
 8004bec:	6823      	ldr	r3, [r4, #0]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	075b      	lsls	r3, r3, #29
 8004bf2:	d50a      	bpl.n	8004c0a <UART_CheckIdleState+0x34>
 8004bf4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004bf8:	9300      	str	r3, [sp, #0]
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	462b      	mov	r3, r5
 8004bfe:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004c02:	4620      	mov	r0, r4
 8004c04:	f7ff ffb6 	bl	8004b74 <UART_WaitOnFlagUntilTimeout>
 8004c08:	b9a0      	cbnz	r0, 8004c34 <UART_CheckIdleState+0x5e>
 8004c0a:	2320      	movs	r3, #32
 8004c0c:	2000      	movs	r0, #0
 8004c0e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004c12:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 8004c16:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004c1a:	e00c      	b.n	8004c36 <UART_CheckIdleState+0x60>
 8004c1c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004c20:	9300      	str	r3, [sp, #0]
 8004c22:	4632      	mov	r2, r6
 8004c24:	4603      	mov	r3, r0
 8004c26:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004c2a:	4620      	mov	r0, r4
 8004c2c:	f7ff ffa2 	bl	8004b74 <UART_WaitOnFlagUntilTimeout>
 8004c30:	2800      	cmp	r0, #0
 8004c32:	d0db      	beq.n	8004bec <UART_CheckIdleState+0x16>
 8004c34:	2003      	movs	r0, #3
 8004c36:	b002      	add	sp, #8
 8004c38:	bd70      	pop	{r4, r5, r6, pc}

08004c3a <HAL_UART_Init>:
 8004c3a:	b510      	push	{r4, lr}
 8004c3c:	4604      	mov	r4, r0
 8004c3e:	b360      	cbz	r0, 8004c9a <HAL_UART_Init+0x60>
 8004c40:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 8004c44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004c48:	b91b      	cbnz	r3, 8004c52 <HAL_UART_Init+0x18>
 8004c4a:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 8004c4e:	f7ff fe95 	bl	800497c <HAL_UART_MspInit>
 8004c52:	6822      	ldr	r2, [r4, #0]
 8004c54:	2324      	movs	r3, #36	; 0x24
 8004c56:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004c5a:	6813      	ldr	r3, [r2, #0]
 8004c5c:	f023 0301 	bic.w	r3, r3, #1
 8004c60:	6013      	str	r3, [r2, #0]
 8004c62:	4620      	mov	r0, r4
 8004c64:	f7ff fe8c 	bl	8004980 <UART_SetConfig>
 8004c68:	2801      	cmp	r0, #1
 8004c6a:	d016      	beq.n	8004c9a <HAL_UART_Init+0x60>
 8004c6c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004c6e:	b113      	cbz	r3, 8004c76 <HAL_UART_Init+0x3c>
 8004c70:	4620      	mov	r0, r4
 8004c72:	f7ff ff2b 	bl	8004acc <UART_AdvFeatureConfig>
 8004c76:	6823      	ldr	r3, [r4, #0]
 8004c78:	685a      	ldr	r2, [r3, #4]
 8004c7a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004c7e:	605a      	str	r2, [r3, #4]
 8004c80:	689a      	ldr	r2, [r3, #8]
 8004c82:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004c86:	609a      	str	r2, [r3, #8]
 8004c88:	681a      	ldr	r2, [r3, #0]
 8004c8a:	f042 0201 	orr.w	r2, r2, #1
 8004c8e:	4620      	mov	r0, r4
 8004c90:	601a      	str	r2, [r3, #0]
 8004c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004c96:	f7ff bf9e 	b.w	8004bd6 <UART_CheckIdleState>
 8004c9a:	2001      	movs	r0, #1
 8004c9c:	bd10      	pop	{r4, pc}

08004c9e <mbed::Timer::start()>:
 8004c9e:	b510      	push	{r4, lr}
 8004ca0:	4604      	mov	r4, r0
 8004ca2:	f7fc fe1f 	bl	80018e4 <core_util_critical_section_enter>
 8004ca6:	6823      	ldr	r3, [r4, #0]
 8004ca8:	b92b      	cbnz	r3, 8004cb6 <mbed::Timer::start()+0x18>
 8004caa:	68e0      	ldr	r0, [r4, #12]
 8004cac:	f7fc fdc5 	bl	800183a <ticker_read>
 8004cb0:	2301      	movs	r3, #1
 8004cb2:	6060      	str	r0, [r4, #4]
 8004cb4:	6023      	str	r3, [r4, #0]
 8004cb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004cba:	f7fc be29 	b.w	8001910 <core_util_critical_section_exit>

08004cbe <mbed::Timer::slicetime()>:
 8004cbe:	b538      	push	{r3, r4, r5, lr}
 8004cc0:	4605      	mov	r5, r0
 8004cc2:	f7fc fe0f 	bl	80018e4 <core_util_critical_section_enter>
 8004cc6:	682c      	ldr	r4, [r5, #0]
 8004cc8:	b124      	cbz	r4, 8004cd4 <mbed::Timer::slicetime()+0x16>
 8004cca:	68e8      	ldr	r0, [r5, #12]
 8004ccc:	f7fc fdb5 	bl	800183a <ticker_read>
 8004cd0:	686c      	ldr	r4, [r5, #4]
 8004cd2:	1b04      	subs	r4, r0, r4
 8004cd4:	f7fc fe1c 	bl	8001910 <core_util_critical_section_exit>
 8004cd8:	4620      	mov	r0, r4
 8004cda:	bd38      	pop	{r3, r4, r5, pc}

08004cdc <mbed::Timer::read_us()>:
 8004cdc:	b538      	push	{r3, r4, r5, lr}
 8004cde:	4605      	mov	r5, r0
 8004ce0:	f7fc fe00 	bl	80018e4 <core_util_critical_section_enter>
 8004ce4:	4628      	mov	r0, r5
 8004ce6:	68ac      	ldr	r4, [r5, #8]
 8004ce8:	f7ff ffe9 	bl	8004cbe <mbed::Timer::slicetime()>
 8004cec:	4404      	add	r4, r0
 8004cee:	f7fc fe0f 	bl	8001910 <core_util_critical_section_exit>
 8004cf2:	4620      	mov	r0, r4
 8004cf4:	bd38      	pop	{r3, r4, r5, pc}

08004cf6 <mbed::Timer::read_ms()>:
 8004cf6:	b508      	push	{r3, lr}
 8004cf8:	f7ff fff0 	bl	8004cdc <mbed::Timer::read_us()>
 8004cfc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004d00:	fb90 f0f3 	sdiv	r0, r0, r3
 8004d04:	bd08      	pop	{r3, pc}

08004d06 <mbed::Timer::reset()>:
 8004d06:	b510      	push	{r4, lr}
 8004d08:	4604      	mov	r4, r0
 8004d0a:	f7fc fdeb 	bl	80018e4 <core_util_critical_section_enter>
 8004d0e:	68e0      	ldr	r0, [r4, #12]
 8004d10:	f7fc fd93 	bl	800183a <ticker_read>
 8004d14:	2300      	movs	r3, #0
 8004d16:	6060      	str	r0, [r4, #4]
 8004d18:	60a3      	str	r3, [r4, #8]
 8004d1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d1e:	f7fc bdf7 	b.w	8001910 <core_util_critical_section_exit>

08004d22 <mbed::Timer::Timer()>:
 8004d22:	2300      	movs	r3, #0
 8004d24:	b510      	push	{r4, lr}
 8004d26:	6003      	str	r3, [r0, #0]
 8004d28:	6043      	str	r3, [r0, #4]
 8004d2a:	6083      	str	r3, [r0, #8]
 8004d2c:	4604      	mov	r4, r0
 8004d2e:	f7fc fd57 	bl	80017e0 <get_us_ticker_data>
 8004d32:	60e0      	str	r0, [r4, #12]
 8004d34:	4620      	mov	r0, r4
 8004d36:	f7ff ffe6 	bl	8004d06 <mbed::Timer::reset()>
 8004d3a:	4620      	mov	r0, r4
 8004d3c:	bd10      	pop	{r4, pc}

08004d3e <mbed::RawSerial::lock()>:
 8004d3e:	4770      	bx	lr

08004d40 <mbed::RawSerial::~RawSerial()>:
 8004d40:	b510      	push	{r4, lr}
 8004d42:	4b03      	ldr	r3, [pc, #12]	; (8004d50 <mbed::RawSerial::~RawSerial()+0x10>)
 8004d44:	6003      	str	r3, [r0, #0]
 8004d46:	4604      	mov	r4, r0
 8004d48:	f7fc fa22 	bl	8001190 <mbed::SerialBase::~SerialBase()>
 8004d4c:	4620      	mov	r0, r4
 8004d4e:	bd10      	pop	{r4, pc}
 8004d50:	08006b40 	.word	0x08006b40

08004d54 <mbed::RawSerial::~RawSerial()>:
 8004d54:	b510      	push	{r4, lr}
 8004d56:	4604      	mov	r4, r0
 8004d58:	f7ff fff2 	bl	8004d40 <mbed::RawSerial::~RawSerial()>
 8004d5c:	4620      	mov	r0, r4
 8004d5e:	f000 fb25 	bl	80053ac <operator delete(void*)>
 8004d62:	4620      	mov	r0, r4
 8004d64:	bd10      	pop	{r4, pc}
	...

08004d68 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004d68:	b510      	push	{r4, lr}
 8004d6a:	4604      	mov	r4, r0
 8004d6c:	f000 f92a 	bl	8004fc4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004d70:	4b01      	ldr	r3, [pc, #4]	; (8004d78 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004d72:	6023      	str	r3, [r4, #0]
 8004d74:	4620      	mov	r0, r4
 8004d76:	bd10      	pop	{r4, pc}
 8004d78:	08006b40 	.word	0x08006b40

08004d7c <mbed::donothing()>:
 8004d7c:	4770      	bx	lr

08004d7e <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8004d7e:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004d82:	f102 000c 	add.w	r0, r2, #12
 8004d86:	6993      	ldr	r3, [r2, #24]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	4718      	bx	r3

08004d8c <mbed::CAN::lock()>:
 8004d8c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004d90:	309c      	adds	r0, #156	; 0x9c
 8004d92:	f000 bb2f 	b.w	80053f4 <rtos::Mutex::lock(unsigned long)>

08004d96 <mbed::CAN::unlock()>:
 8004d96:	309c      	adds	r0, #156	; 0x9c
 8004d98:	f000 bb2f 	b.w	80053fa <rtos::Mutex::unlock()>

08004d9c <mbed::CAN::frequency(int)>:
 8004d9c:	b570      	push	{r4, r5, r6, lr}
 8004d9e:	4605      	mov	r5, r0
 8004da0:	460e      	mov	r6, r1
 8004da2:	f855 3b04 	ldr.w	r3, [r5], #4
 8004da6:	689b      	ldr	r3, [r3, #8]
 8004da8:	4604      	mov	r4, r0
 8004daa:	4798      	blx	r3
 8004dac:	4631      	mov	r1, r6
 8004dae:	4628      	mov	r0, r5
 8004db0:	f7fe fad2 	bl	8003358 <can_frequency>
 8004db4:	6823      	ldr	r3, [r4, #0]
 8004db6:	4605      	mov	r5, r0
 8004db8:	68db      	ldr	r3, [r3, #12]
 8004dba:	4620      	mov	r0, r4
 8004dbc:	4798      	blx	r3
 8004dbe:	4628      	mov	r0, r5
 8004dc0:	bd70      	pop	{r4, r5, r6, pc}

08004dc2 <mbed::CAN::write(mbed::CANMessage)>:
 8004dc2:	b084      	sub	sp, #16
 8004dc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004dc6:	4606      	mov	r6, r0
 8004dc8:	ac07      	add	r4, sp, #28
 8004dca:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8004dce:	f856 3b04 	ldr.w	r3, [r6], #4
 8004dd2:	689b      	ldr	r3, [r3, #8]
 8004dd4:	4605      	mov	r5, r0
 8004dd6:	4798      	blx	r3
 8004dd8:	2300      	movs	r3, #0
 8004dda:	9301      	str	r3, [sp, #4]
 8004ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dde:	9300      	str	r3, [sp, #0]
 8004de0:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8004de4:	4630      	mov	r0, r6
 8004de6:	f7fe fafd 	bl	80033e4 <can_write>
 8004dea:	682b      	ldr	r3, [r5, #0]
 8004dec:	4604      	mov	r4, r0
 8004dee:	68db      	ldr	r3, [r3, #12]
 8004df0:	4628      	mov	r0, r5
 8004df2:	4798      	blx	r3
 8004df4:	4620      	mov	r0, r4
 8004df6:	b002      	add	sp, #8
 8004df8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004dfc:	b004      	add	sp, #16
 8004dfe:	4770      	bx	lr

08004e00 <mbed::CAN::read(mbed::CANMessage&, int)>:
 8004e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e02:	4605      	mov	r5, r0
 8004e04:	460e      	mov	r6, r1
 8004e06:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e0a:	4617      	mov	r7, r2
 8004e0c:	689b      	ldr	r3, [r3, #8]
 8004e0e:	4604      	mov	r4, r0
 8004e10:	4798      	blx	r3
 8004e12:	463a      	mov	r2, r7
 8004e14:	4631      	mov	r1, r6
 8004e16:	4628      	mov	r0, r5
 8004e18:	f7fe fb35 	bl	8003486 <can_read>
 8004e1c:	6823      	ldr	r3, [r4, #0]
 8004e1e:	4605      	mov	r5, r0
 8004e20:	68db      	ldr	r3, [r3, #12]
 8004e22:	4620      	mov	r0, r4
 8004e24:	4798      	blx	r3
 8004e26:	4628      	mov	r0, r5
 8004e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004e2c <mbed::CAN::~CAN()>:
 8004e2c:	b570      	push	{r4, r5, r6, lr}
 8004e2e:	4604      	mov	r4, r0
 8004e30:	4b0d      	ldr	r3, [pc, #52]	; (8004e68 <mbed::CAN::~CAN()+0x3c>)
 8004e32:	f844 3b04 	str.w	r3, [r4], #4
 8004e36:	4605      	mov	r5, r0
 8004e38:	4620      	mov	r0, r4
 8004e3a:	f7fe fa69 	bl	8003310 <can_irq_free>
 8004e3e:	4620      	mov	r0, r4
 8004e40:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 8004e44:	f7fe fa72 	bl	800332c <can_free>
 8004e48:	4620      	mov	r0, r4
 8004e4a:	f000 fad9 	bl	8005400 <rtos::Mutex::~Mutex()>
 8004e4e:	f115 060c 	adds.w	r6, r5, #12
 8004e52:	d006      	beq.n	8004e62 <mbed::CAN::~CAN()+0x36>
 8004e54:	42b4      	cmp	r4, r6
 8004e56:	d004      	beq.n	8004e62 <mbed::CAN::~CAN()+0x36>
 8004e58:	3c10      	subs	r4, #16
 8004e5a:	4620      	mov	r0, r4
 8004e5c:	f7fc f98f 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8004e60:	e7f8      	b.n	8004e54 <mbed::CAN::~CAN()+0x28>
 8004e62:	4628      	mov	r0, r5
 8004e64:	bd70      	pop	{r4, r5, r6, pc}
 8004e66:	bf00      	nop
 8004e68:	08006b58 	.word	0x08006b58

08004e6c <mbed::CAN::~CAN()>:
 8004e6c:	b510      	push	{r4, lr}
 8004e6e:	4604      	mov	r4, r0
 8004e70:	f7ff ffdc 	bl	8004e2c <mbed::CAN::~CAN()>
 8004e74:	4620      	mov	r0, r4
 8004e76:	f000 fa99 	bl	80053ac <operator delete(void*)>
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	bd10      	pop	{r4, pc}

08004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004e7e:	4288      	cmp	r0, r1
 8004e80:	b538      	push	{r3, r4, r5, lr}
 8004e82:	4604      	mov	r4, r0
 8004e84:	460d      	mov	r5, r1
 8004e86:	d00a      	beq.n	8004e9e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004e88:	f7fc f979 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8004e8c:	b13c      	cbz	r4, 8004e9e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004e8e:	68eb      	ldr	r3, [r5, #12]
 8004e90:	b11b      	cbz	r3, 8004e9a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004e92:	685b      	ldr	r3, [r3, #4]
 8004e94:	4629      	mov	r1, r5
 8004e96:	4620      	mov	r0, r4
 8004e98:	4798      	blx	r3
 8004e9a:	68eb      	ldr	r3, [r5, #12]
 8004e9c:	60e3      	str	r3, [r4, #12]
 8004e9e:	4620      	mov	r0, r4
 8004ea0:	bd38      	pop	{r3, r4, r5, pc}
	...

08004ea4 <mbed::CAN::CAN(PinName, PinName)>:
 8004ea4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8004ea8:	4b1a      	ldr	r3, [pc, #104]	; (8004f14 <mbed::CAN::CAN(PinName, PinName)+0x70>)
 8004eaa:	6003      	str	r3, [r0, #0]
 8004eac:	4617      	mov	r7, r2
 8004eae:	f100 030c 	add.w	r3, r0, #12
 8004eb2:	2200      	movs	r2, #0
 8004eb4:	4604      	mov	r4, r0
 8004eb6:	460e      	mov	r6, r1
 8004eb8:	6042      	str	r2, [r0, #4]
 8004eba:	6082      	str	r2, [r0, #8]
 8004ebc:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8004ec0:	461d      	mov	r5, r3
 8004ec2:	60da      	str	r2, [r3, #12]
 8004ec4:	3310      	adds	r3, #16
 8004ec6:	4543      	cmp	r3, r8
 8004ec8:	d1fb      	bne.n	8004ec2 <mbed::CAN::CAN(PinName, PinName)+0x1e>
 8004eca:	4640      	mov	r0, r8
 8004ecc:	f000 fa7a 	bl	80053c4 <rtos::Mutex::Mutex()>
 8004ed0:	f8df a048 	ldr.w	r10, [pc, #72]	; 8004f1c <mbed::CAN::CAN(PinName, PinName)+0x78>
 8004ed4:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8004f20 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8004ed8:	4545      	cmp	r5, r8
 8004eda:	d00c      	beq.n	8004ef6 <mbed::CAN::CAN(PinName, PinName)+0x52>
 8004edc:	4669      	mov	r1, sp
 8004ede:	4628      	mov	r0, r5
 8004ee0:	f8cd a000 	str.w	r10, [sp]
 8004ee4:	f8cd 900c 	str.w	r9, [sp, #12]
 8004ee8:	f7ff ffc9 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004eec:	4668      	mov	r0, sp
 8004eee:	f7fc f946 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8004ef2:	3510      	adds	r5, #16
 8004ef4:	e7f0      	b.n	8004ed8 <mbed::CAN::CAN(PinName, PinName)+0x34>
 8004ef6:	1d25      	adds	r5, r4, #4
 8004ef8:	463a      	mov	r2, r7
 8004efa:	4631      	mov	r1, r6
 8004efc:	4628      	mov	r0, r5
 8004efe:	f7fe fb43 	bl	8003588 <can_init>
 8004f02:	4628      	mov	r0, r5
 8004f04:	4622      	mov	r2, r4
 8004f06:	4904      	ldr	r1, [pc, #16]	; (8004f18 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 8004f08:	f7fe f9f6 	bl	80032f8 <can_irq_init>
 8004f0c:	4620      	mov	r0, r4
 8004f0e:	b004      	add	sp, #16
 8004f10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004f14:	08006b58 	.word	0x08006b58
 8004f18:	08004d7f 	.word	0x08004d7f
 8004f1c:	08004d7d 	.word	0x08004d7d
 8004f20:	0800654c 	.word	0x0800654c

08004f24 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>:
 8004f24:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004f28:	4605      	mov	r5, r0
 8004f2a:	4688      	mov	r8, r1
 8004f2c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f30:	689b      	ldr	r3, [r3, #8]
 8004f32:	4604      	mov	r4, r0
 8004f34:	4616      	mov	r6, r2
 8004f36:	4798      	blx	r3
 8004f38:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004f3c:	0130      	lsls	r0, r6, #4
 8004f3e:	b187      	cbz	r7, 8004f62 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x3e>
 8004f40:	300c      	adds	r0, #12
 8004f42:	4641      	mov	r1, r8
 8004f44:	4420      	add	r0, r4
 8004f46:	f7ff ff9a 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	4631      	mov	r1, r6
 8004f4e:	4628      	mov	r0, r5
 8004f50:	f7fe fb8a 	bl	8003668 <can_irq_set>
 8004f54:	6823      	ldr	r3, [r4, #0]
 8004f56:	4620      	mov	r0, r4
 8004f58:	68db      	ldr	r3, [r3, #12]
 8004f5a:	4798      	blx	r3
 8004f5c:	b004      	add	sp, #16
 8004f5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f62:	4b07      	ldr	r3, [pc, #28]	; (8004f80 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x5c>)
 8004f64:	9300      	str	r3, [sp, #0]
 8004f66:	300c      	adds	r0, #12
 8004f68:	4b06      	ldr	r3, [pc, #24]	; (8004f84 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x60>)
 8004f6a:	9303      	str	r3, [sp, #12]
 8004f6c:	4669      	mov	r1, sp
 8004f6e:	4420      	add	r0, r4
 8004f70:	f7ff ff85 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004f74:	4668      	mov	r0, sp
 8004f76:	f7fc f902 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8004f7a:	463a      	mov	r2, r7
 8004f7c:	e7e6      	b.n	8004f4c <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x28>
 8004f7e:	bf00      	nop
 8004f80:	08004d7d 	.word	0x08004d7d
 8004f84:	0800654c 	.word	0x0800654c

08004f88 <mbed::donothing()>:
 8004f88:	4770      	bx	lr

08004f8a <mbed::SerialBase::lock()>:
 8004f8a:	4770      	bx	lr

08004f8c <mbed::SerialBase::unlock()>:
 8004f8c:	4770      	bx	lr

08004f8e <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8004f8e:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004f92:	f102 0028 	add.w	r0, r2, #40	; 0x28
 8004f96:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	4718      	bx	r3

08004f9c <mbed::SerialBase::baud(int)>:
 8004f9c:	b570      	push	{r4, r5, r6, lr}
 8004f9e:	4605      	mov	r5, r0
 8004fa0:	4604      	mov	r4, r0
 8004fa2:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fa6:	460e      	mov	r6, r1
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	4798      	blx	r3
 8004fac:	4628      	mov	r0, r5
 8004fae:	4631      	mov	r1, r6
 8004fb0:	f7fe fdda 	bl	8003b68 <serial_baud>
 8004fb4:	6823      	ldr	r3, [r4, #0]
 8004fb6:	64a6      	str	r6, [r4, #72]	; 0x48
 8004fb8:	4620      	mov	r0, r4
 8004fba:	685b      	ldr	r3, [r3, #4]
 8004fbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004fc0:	4718      	bx	r3
	...

08004fc4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8004fc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004fc8:	4605      	mov	r5, r0
 8004fca:	461e      	mov	r6, r3
 8004fcc:	4b1b      	ldr	r3, [pc, #108]	; (800503c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
 8004fce:	f845 3b04 	str.w	r3, [r5], #4
 8004fd2:	b085      	sub	sp, #20
 8004fd4:	4604      	mov	r4, r0
 8004fd6:	4688      	mov	r8, r1
 8004fd8:	4691      	mov	r9, r2
 8004fda:	2100      	movs	r1, #0
 8004fdc:	2224      	movs	r2, #36	; 0x24
 8004fde:	4628      	mov	r0, r5
 8004fe0:	f000 fd3b 	bl	8005a5a <memset>
 8004fe4:	2200      	movs	r2, #0
 8004fe6:	6362      	str	r2, [r4, #52]	; 0x34
 8004fe8:	6462      	str	r2, [r4, #68]	; 0x44
 8004fea:	4669      	mov	r1, sp
 8004fec:	64a6      	str	r6, [r4, #72]	; 0x48
 8004fee:	4f14      	ldr	r7, [pc, #80]	; (8005040 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
 8004ff0:	4e14      	ldr	r6, [pc, #80]	; (8005044 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x80>)
 8004ff2:	9700      	str	r7, [sp, #0]
 8004ff4:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8004ff8:	9603      	str	r6, [sp, #12]
 8004ffa:	f7ff ff40 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004ffe:	4668      	mov	r0, sp
 8005000:	f7fc f8bd 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8005004:	4669      	mov	r1, sp
 8005006:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800500a:	9700      	str	r7, [sp, #0]
 800500c:	9603      	str	r6, [sp, #12]
 800500e:	f7ff ff36 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005012:	4668      	mov	r0, sp
 8005014:	f7fc f8b3 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8005018:	464a      	mov	r2, r9
 800501a:	4641      	mov	r1, r8
 800501c:	4628      	mov	r0, r5
 800501e:	f7fe fcfd 	bl	8003a1c <serial_init>
 8005022:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005024:	4628      	mov	r0, r5
 8005026:	f7fe fd9f 	bl	8003b68 <serial_baud>
 800502a:	4628      	mov	r0, r5
 800502c:	4622      	mov	r2, r4
 800502e:	4906      	ldr	r1, [pc, #24]	; (8005048 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x84>)
 8005030:	f7fe fd9e 	bl	8003b70 <serial_irq_handler>
 8005034:	4620      	mov	r0, r4
 8005036:	b005      	add	sp, #20
 8005038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800503c:	08006b70 	.word	0x08006b70
 8005040:	08004f89 	.word	0x08004f89
 8005044:	0800654c 	.word	0x0800654c
 8005048:	08004f8f 	.word	0x08004f8f

0800504c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 800504c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005050:	4605      	mov	r5, r0
 8005052:	4688      	mov	r8, r1
 8005054:	f855 3b04 	ldr.w	r3, [r5], #4
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	4604      	mov	r4, r0
 800505c:	4616      	mov	r6, r2
 800505e:	4798      	blx	r3
 8005060:	f7fc fc40 	bl	80018e4 <core_util_critical_section_enter>
 8005064:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005068:	0130      	lsls	r0, r6, #4
 800506a:	b197      	cbz	r7, 8005092 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 800506c:	3028      	adds	r0, #40	; 0x28
 800506e:	4641      	mov	r1, r8
 8005070:	4420      	add	r0, r4
 8005072:	f7ff ff04 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005076:	2201      	movs	r2, #1
 8005078:	4631      	mov	r1, r6
 800507a:	4628      	mov	r0, r5
 800507c:	f7fe fd84 	bl	8003b88 <serial_irq_set>
 8005080:	f7fc fc46 	bl	8001910 <core_util_critical_section_exit>
 8005084:	6823      	ldr	r3, [r4, #0]
 8005086:	4620      	mov	r0, r4
 8005088:	685b      	ldr	r3, [r3, #4]
 800508a:	4798      	blx	r3
 800508c:	b004      	add	sp, #16
 800508e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005092:	4b07      	ldr	r3, [pc, #28]	; (80050b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005094:	9300      	str	r3, [sp, #0]
 8005096:	3028      	adds	r0, #40	; 0x28
 8005098:	4b06      	ldr	r3, [pc, #24]	; (80050b4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 800509a:	9303      	str	r3, [sp, #12]
 800509c:	4669      	mov	r1, sp
 800509e:	4420      	add	r0, r4
 80050a0:	f7ff feed 	bl	8004e7e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80050a4:	4668      	mov	r0, sp
 80050a6:	f7fc f86a 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80050aa:	463a      	mov	r2, r7
 80050ac:	e7e4      	b.n	8005078 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 80050ae:	bf00      	nop
 80050b0:	08004f89 	.word	0x08004f89
 80050b4:	0800654c 	.word	0x0800654c

080050b8 <mbed::Callback<void (int)>::~Callback()>:
 80050b8:	68c3      	ldr	r3, [r0, #12]
 80050ba:	b510      	push	{r4, lr}
 80050bc:	4604      	mov	r4, r0
 80050be:	b10b      	cbz	r3, 80050c4 <mbed::Callback<void (int)>::~Callback()+0xc>
 80050c0:	689b      	ldr	r3, [r3, #8]
 80050c2:	4798      	blx	r3
 80050c4:	4620      	mov	r0, r4
 80050c6:	bd10      	pop	{r4, pc}

080050c8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80050c8:	b538      	push	{r3, r4, r5, lr}
 80050ca:	4604      	mov	r4, r0
 80050cc:	b148      	cbz	r0, 80050e2 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80050ce:	3058      	adds	r0, #88	; 0x58
 80050d0:	42a0      	cmp	r0, r4
 80050d2:	d006      	beq.n	80050e2 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80050d4:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80050d8:	3814      	subs	r0, #20
 80050da:	f7ff ffed 	bl	80050b8 <mbed::Callback<void (int)>::~Callback()>
 80050de:	4628      	mov	r0, r5
 80050e0:	e7f6      	b.n	80050d0 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80050e2:	4620      	mov	r0, r4
 80050e4:	bd38      	pop	{r3, r4, r5, pc}
	...

080050e8 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 80050e8:	b570      	push	{r4, r5, r6, lr}
 80050ea:	4c0e      	ldr	r4, [pc, #56]	; (8005124 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 80050ec:	4620      	mov	r0, r4
 80050ee:	2500      	movs	r5, #0
 80050f0:	2628      	movs	r6, #40	; 0x28
 80050f2:	4632      	mov	r2, r6
 80050f4:	4629      	mov	r1, r5
 80050f6:	f840 5b04 	str.w	r5, [r0], #4
 80050fa:	f000 fcae 	bl	8005a5a <memset>
 80050fe:	4632      	mov	r2, r6
 8005100:	4629      	mov	r1, r5
 8005102:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005106:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005108:	f000 fca7 	bl	8005a5a <memset>
 800510c:	65a5      	str	r5, [r4, #88]	; 0x58
 800510e:	4620      	mov	r0, r4
 8005110:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005112:	4a05      	ldr	r2, [pc, #20]	; (8005128 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005114:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005118:	4904      	ldr	r1, [pc, #16]	; (800512c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 800511a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800511e:	f000 b927 	b.w	8005370 <__aeabi_atexit>
 8005122:	bf00      	nop
 8005124:	200014c8 	.word	0x200014c8
 8005128:	20000188 	.word	0x20000188
 800512c:	080050c9 	.word	0x080050c9

08005130 <__wrap__malloc_r>:
 8005130:	f000 bcea 	b.w	8005b08 <_malloc_r>

08005134 <__wrap__realloc_r>:
 8005134:	f000 bd46 	b.w	8005bc4 <_realloc_r>

08005138 <__wrap__free_r>:
 8005138:	f000 bc98 	b.w	8005a6c <_free_r>

0800513c <wait_us>:
 800513c:	b570      	push	{r4, r5, r6, lr}
 800513e:	4605      	mov	r5, r0
 8005140:	f7fe fae0 	bl	8003704 <us_ticker_read>
 8005144:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005148:	fb95 f4f4 	sdiv	r4, r5, r4
 800514c:	2c00      	cmp	r4, #0
 800514e:	4606      	mov	r6, r0
 8005150:	dd02      	ble.n	8005158 <wait_us+0x1c>
 8005152:	f7fc fbc1 	bl	80018d8 <core_util_are_interrupts_enabled>
 8005156:	b928      	cbnz	r0, 8005164 <wait_us+0x28>
 8005158:	f7fe fad4 	bl	8003704 <us_ticker_read>
 800515c:	1b80      	subs	r0, r0, r6
 800515e:	42a8      	cmp	r0, r5
 8005160:	d3fa      	bcc.n	8005158 <wait_us+0x1c>
 8005162:	bd70      	pop	{r4, r5, r6, pc}
 8005164:	4620      	mov	r0, r4
 8005166:	f000 f92b 	bl	80053c0 <rtos::Thread::wait(unsigned long)>
 800516a:	e7f5      	b.n	8005158 <wait_us+0x1c>

0800516c <wait_ms>:
 800516c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005170:	4358      	muls	r0, r3
 8005172:	f7ff bfe3 	b.w	800513c <wait_us>
	...

08005178 <init_serial()>:
 8005178:	b508      	push	{r3, lr}
 800517a:	4b08      	ldr	r3, [pc, #32]	; (800519c <init_serial()+0x24>)
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	b95b      	cbnz	r3, 8005198 <init_serial()+0x20>
 8005180:	2102      	movs	r1, #2
 8005182:	4807      	ldr	r0, [pc, #28]	; (80051a0 <init_serial()+0x28>)
 8005184:	220f      	movs	r2, #15
 8005186:	f7fe fc49 	bl	8003a1c <serial_init>
 800518a:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 800518e:	4804      	ldr	r0, [pc, #16]	; (80051a0 <init_serial()+0x28>)
 8005190:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005194:	f7fe bce8 	b.w	8003b68 <serial_baud>
 8005198:	bd08      	pop	{r3, pc}
 800519a:	bf00      	nop
 800519c:	20001294 	.word	0x20001294
 80051a0:	20001ec0 	.word	0x20001ec0

080051a4 <_close>:
 80051a4:	2802      	cmp	r0, #2
 80051a6:	b510      	push	{r4, lr}
 80051a8:	4604      	mov	r4, r0
 80051aa:	dc01      	bgt.n	80051b0 <_close+0xc>
 80051ac:	2000      	movs	r0, #0
 80051ae:	bd10      	pop	{r4, pc}
 80051b0:	f000 fa16 	bl	80055e0 <__errno>
 80051b4:	2309      	movs	r3, #9
 80051b6:	6003      	str	r3, [r0, #0]
 80051b8:	3c03      	subs	r4, #3
 80051ba:	4b09      	ldr	r3, [pc, #36]	; (80051e0 <_close+0x3c>)
 80051bc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80051c0:	2200      	movs	r2, #0
 80051c2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80051c6:	b140      	cbz	r0, 80051da <_close+0x36>
 80051c8:	6803      	ldr	r3, [r0, #0]
 80051ca:	691b      	ldr	r3, [r3, #16]
 80051cc:	4798      	blx	r3
 80051ce:	1e04      	subs	r4, r0, #0
 80051d0:	daec      	bge.n	80051ac <_close+0x8>
 80051d2:	f000 fa05 	bl	80055e0 <__errno>
 80051d6:	4264      	negs	r4, r4
 80051d8:	6004      	str	r4, [r0, #0]
 80051da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80051de:	bd10      	pop	{r4, pc}
 80051e0:	2000152c 	.word	0x2000152c

080051e4 <_write>:
 80051e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051e6:	4605      	mov	r5, r0
 80051e8:	460e      	mov	r6, r1
 80051ea:	4614      	mov	r4, r2
 80051ec:	f000 f9f8 	bl	80055e0 <__errno>
 80051f0:	2309      	movs	r3, #9
 80051f2:	2d02      	cmp	r5, #2
 80051f4:	6003      	str	r3, [r0, #0]
 80051f6:	dc0f      	bgt.n	8005218 <_write+0x34>
 80051f8:	4b12      	ldr	r3, [pc, #72]	; (8005244 <_write+0x60>)
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	b90b      	cbnz	r3, 8005202 <_write+0x1e>
 80051fe:	f7ff ffbb 	bl	8005178 <init_serial()>
 8005202:	4635      	mov	r5, r6
 8005204:	1937      	adds	r7, r6, r4
 8005206:	4e10      	ldr	r6, [pc, #64]	; (8005248 <_write+0x64>)
 8005208:	42bd      	cmp	r5, r7
 800520a:	d015      	beq.n	8005238 <_write+0x54>
 800520c:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005210:	4630      	mov	r0, r6
 8005212:	f7fe fd47 	bl	8003ca4 <serial_putc>
 8005216:	e7f7      	b.n	8005208 <_write+0x24>
 8005218:	3d03      	subs	r5, #3
 800521a:	4b0c      	ldr	r3, [pc, #48]	; (800524c <_write+0x68>)
 800521c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005220:	b160      	cbz	r0, 800523c <_write+0x58>
 8005222:	6803      	ldr	r3, [r0, #0]
 8005224:	4622      	mov	r2, r4
 8005226:	68db      	ldr	r3, [r3, #12]
 8005228:	4631      	mov	r1, r6
 800522a:	4798      	blx	r3
 800522c:	1e04      	subs	r4, r0, #0
 800522e:	da03      	bge.n	8005238 <_write+0x54>
 8005230:	f000 f9d6 	bl	80055e0 <__errno>
 8005234:	4263      	negs	r3, r4
 8005236:	6003      	str	r3, [r0, #0]
 8005238:	4620      	mov	r0, r4
 800523a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800523c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005240:	e7fa      	b.n	8005238 <_write+0x54>
 8005242:	bf00      	nop
 8005244:	20001294 	.word	0x20001294
 8005248:	20001ec0 	.word	0x20001ec0
 800524c:	2000152c 	.word	0x2000152c

08005250 <_read>:
 8005250:	b570      	push	{r4, r5, r6, lr}
 8005252:	4604      	mov	r4, r0
 8005254:	460d      	mov	r5, r1
 8005256:	4616      	mov	r6, r2
 8005258:	f000 f9c2 	bl	80055e0 <__errno>
 800525c:	2309      	movs	r3, #9
 800525e:	2c02      	cmp	r4, #2
 8005260:	6003      	str	r3, [r0, #0]
 8005262:	dc0b      	bgt.n	800527c <_read+0x2c>
 8005264:	4b0f      	ldr	r3, [pc, #60]	; (80052a4 <_read+0x54>)
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	b90b      	cbnz	r3, 800526e <_read+0x1e>
 800526a:	f7ff ff85 	bl	8005178 <init_serial()>
 800526e:	480e      	ldr	r0, [pc, #56]	; (80052a8 <_read+0x58>)
 8005270:	f7fe fcf6 	bl	8003c60 <serial_getc>
 8005274:	2401      	movs	r4, #1
 8005276:	7028      	strb	r0, [r5, #0]
 8005278:	4620      	mov	r0, r4
 800527a:	bd70      	pop	{r4, r5, r6, pc}
 800527c:	3c03      	subs	r4, #3
 800527e:	4b0b      	ldr	r3, [pc, #44]	; (80052ac <_read+0x5c>)
 8005280:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005284:	b158      	cbz	r0, 800529e <_read+0x4e>
 8005286:	6803      	ldr	r3, [r0, #0]
 8005288:	4632      	mov	r2, r6
 800528a:	689b      	ldr	r3, [r3, #8]
 800528c:	4629      	mov	r1, r5
 800528e:	4798      	blx	r3
 8005290:	1e04      	subs	r4, r0, #0
 8005292:	daf1      	bge.n	8005278 <_read+0x28>
 8005294:	f000 f9a4 	bl	80055e0 <__errno>
 8005298:	4263      	negs	r3, r4
 800529a:	6003      	str	r3, [r0, #0]
 800529c:	e7ec      	b.n	8005278 <_read+0x28>
 800529e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80052a2:	e7e9      	b.n	8005278 <_read+0x28>
 80052a4:	20001294 	.word	0x20001294
 80052a8:	20001ec0 	.word	0x20001ec0
 80052ac:	2000152c 	.word	0x2000152c

080052b0 <_lseek>:
 80052b0:	b570      	push	{r4, r5, r6, lr}
 80052b2:	4604      	mov	r4, r0
 80052b4:	460d      	mov	r5, r1
 80052b6:	4616      	mov	r6, r2
 80052b8:	f000 f992 	bl	80055e0 <__errno>
 80052bc:	2309      	movs	r3, #9
 80052be:	2c02      	cmp	r4, #2
 80052c0:	6003      	str	r3, [r0, #0]
 80052c2:	dd0b      	ble.n	80052dc <_lseek+0x2c>
 80052c4:	3c03      	subs	r4, #3
 80052c6:	4b08      	ldr	r3, [pc, #32]	; (80052e8 <_lseek+0x38>)
 80052c8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80052cc:	b140      	cbz	r0, 80052e0 <_lseek+0x30>
 80052ce:	6803      	ldr	r3, [r0, #0]
 80052d0:	4632      	mov	r2, r6
 80052d2:	4629      	mov	r1, r5
 80052d4:	69db      	ldr	r3, [r3, #28]
 80052d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80052da:	4718      	bx	r3
 80052dc:	2000      	movs	r0, #0
 80052de:	bd70      	pop	{r4, r5, r6, pc}
 80052e0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80052e4:	bd70      	pop	{r4, r5, r6, pc}
 80052e6:	bf00      	nop
 80052e8:	2000152c 	.word	0x2000152c

080052ec <software_init_hook>:
 80052ec:	b508      	push	{r3, lr}
 80052ee:	f7fe fcef 	bl	8003cd0 <mbed_sdk_init>
 80052f2:	f7fc fb93 	bl	8001a1c <software_init_hook_rtos>
 80052f6:	bd08      	pop	{r3, pc}

080052f8 <mbed_main>:
 80052f8:	4770      	bx	lr

080052fa <__wrap_main>:
 80052fa:	b508      	push	{r3, lr}
 80052fc:	f7ff fffc 	bl	80052f8 <mbed_main>
 8005300:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005304:	f7fb be6e 	b.w	8000fe4 <main>

08005308 <_sbrk>:
 8005308:	4a0c      	ldr	r2, [pc, #48]	; (800533c <_sbrk+0x34>)
 800530a:	6813      	ldr	r3, [r2, #0]
 800530c:	b510      	push	{r4, lr}
 800530e:	4418      	add	r0, r3
 8005310:	f3ef 8108 	mrs	r1, MSP
 8005314:	4288      	cmp	r0, r1
 8005316:	d305      	bcc.n	8005324 <_sbrk+0x1c>
 8005318:	4b09      	ldr	r3, [pc, #36]	; (8005340 <_sbrk+0x38>)
 800531a:	220c      	movs	r2, #12
 800531c:	601a      	str	r2, [r3, #0]
 800531e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005322:	bd10      	pop	{r4, pc}
 8005324:	4907      	ldr	r1, [pc, #28]	; (8005344 <_sbrk+0x3c>)
 8005326:	680c      	ldr	r4, [r1, #0]
 8005328:	b124      	cbz	r4, 8005334 <_sbrk+0x2c>
 800532a:	4907      	ldr	r1, [pc, #28]	; (8005348 <_sbrk+0x40>)
 800532c:	6809      	ldr	r1, [r1, #0]
 800532e:	4421      	add	r1, r4
 8005330:	4288      	cmp	r0, r1
 8005332:	d2f1      	bcs.n	8005318 <_sbrk+0x10>
 8005334:	6010      	str	r0, [r2, #0]
 8005336:	4618      	mov	r0, r3
 8005338:	bd10      	pop	{r4, pc}
 800533a:	bf00      	nop
 800533c:	200001a8 	.word	0x200001a8
 8005340:	20001ee8 	.word	0x20001ee8
 8005344:	2000162c 	.word	0x2000162c
 8005348:	20001630 	.word	0x20001630

0800534c <_exit>:
 800534c:	4c07      	ldr	r4, [pc, #28]	; (800536c <_exit+0x20>)
 800534e:	b508      	push	{r3, lr}
 8005350:	6823      	ldr	r3, [r4, #0]
 8005352:	4605      	mov	r5, r0
 8005354:	6898      	ldr	r0, [r3, #8]
 8005356:	f000 f9fb 	bl	8005750 <fflush>
 800535a:	6823      	ldr	r3, [r4, #0]
 800535c:	68d8      	ldr	r0, [r3, #12]
 800535e:	f000 f9f7 	bl	8005750 <fflush>
 8005362:	b10d      	cbz	r5, 8005368 <_exit+0x1c>
 8005364:	f7fc faed 	bl	8001942 <mbed_die>
 8005368:	e7fe      	b.n	8005368 <_exit+0x1c>
 800536a:	bf00      	nop
 800536c:	200001ac 	.word	0x200001ac

08005370 <__aeabi_atexit>:
 8005370:	2001      	movs	r0, #1
 8005372:	4770      	bx	lr

08005374 <__wrap_exit>:
 8005374:	b508      	push	{r3, lr}
 8005376:	f7ff ffe9 	bl	800534c <_exit>

0800537a <__malloc_lock>:
 800537a:	b508      	push	{r3, lr}
 800537c:	f7fc fb5c 	bl	8001a38 <__rtos_malloc_lock>
 8005380:	bd08      	pop	{r3, pc}

08005382 <__malloc_unlock>:
 8005382:	b508      	push	{r3, lr}
 8005384:	f7fc fb60 	bl	8001a48 <__rtos_malloc_unlock>
 8005388:	bd08      	pop	{r3, pc}
	...

0800538c <operator new[](unsigned int)>:
 800538c:	b510      	push	{r4, lr}
 800538e:	f000 fadf 	bl	8005950 <malloc>
 8005392:	4604      	mov	r4, r0
 8005394:	b910      	cbnz	r0, 800539c <operator new[](unsigned int)+0x10>
 8005396:	4802      	ldr	r0, [pc, #8]	; (80053a0 <operator new[](unsigned int)+0x14>)
 8005398:	f7fc face 	bl	8001938 <error>
 800539c:	4620      	mov	r0, r4
 800539e:	bd10      	pop	{r4, pc}
 80053a0:	08006b80 	.word	0x08006b80

080053a4 <operator delete[](void*)>:
 80053a4:	b108      	cbz	r0, 80053aa <operator delete[](void*)+0x6>
 80053a6:	f000 badb 	b.w	8005960 <free>
 80053aa:	4770      	bx	lr

080053ac <operator delete(void*)>:
 80053ac:	f7ff bffa 	b.w	80053a4 <operator delete[](void*)>

080053b0 <thread_terminate_hook>:
 80053b0:	4b02      	ldr	r3, [pc, #8]	; (80053bc <thread_terminate_hook+0xc>)
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	b103      	cbz	r3, 80053b8 <thread_terminate_hook+0x8>
 80053b6:	4718      	bx	r3
 80053b8:	4770      	bx	lr
 80053ba:	bf00      	nop
 80053bc:	20001634 	.word	0x20001634

080053c0 <rtos::Thread::wait(unsigned long)>:
 80053c0:	f7fd b810 	b.w	80023e4 <osDelay>

080053c4 <rtos::Mutex::Mutex()>:
 80053c4:	b538      	push	{r3, r4, r5, lr}
 80053c6:	f100 0508 	add.w	r5, r0, #8
 80053ca:	4604      	mov	r4, r0
 80053cc:	2210      	movs	r2, #16
 80053ce:	2100      	movs	r1, #0
 80053d0:	4628      	mov	r0, r5
 80053d2:	f000 fb42 	bl	8005a5a <memset>
 80053d6:	4620      	mov	r0, r4
 80053d8:	f840 5f04 	str.w	r5, [r0, #4]!
 80053dc:	f7fd f874 	bl	80024c8 <osMutexCreate>
 80053e0:	6020      	str	r0, [r4, #0]
 80053e2:	b910      	cbnz	r0, 80053ea <rtos::Mutex::Mutex()+0x26>
 80053e4:	4802      	ldr	r0, [pc, #8]	; (80053f0 <rtos::Mutex::Mutex()+0x2c>)
 80053e6:	f7fc faa7 	bl	8001938 <error>
 80053ea:	4620      	mov	r0, r4
 80053ec:	bd38      	pop	{r3, r4, r5, pc}
 80053ee:	bf00      	nop
 80053f0:	08006b9f 	.word	0x08006b9f

080053f4 <rtos::Mutex::lock(unsigned long)>:
 80053f4:	6800      	ldr	r0, [r0, #0]
 80053f6:	f7fd b885 	b.w	8002504 <osMutexWait>

080053fa <rtos::Mutex::unlock()>:
 80053fa:	6800      	ldr	r0, [r0, #0]
 80053fc:	f7fd b8aa 	b.w	8002554 <osMutexRelease>

08005400 <rtos::Mutex::~Mutex()>:
 8005400:	b510      	push	{r4, lr}
 8005402:	4604      	mov	r4, r0
 8005404:	6800      	ldr	r0, [r0, #0]
 8005406:	f7fd f8eb 	bl	80025e0 <osMutexDelete>
 800540a:	4620      	mov	r0, r4
 800540c:	bd10      	pop	{r4, pc}
	...

08005410 <rt_set_PSP>:
 8005410:	f380 8809 	msr	PSP, r0
 8005414:	4770      	bx	lr

08005416 <rt_get_PSP>:
 8005416:	f3ef 8009 	mrs	r0, PSP
 800541a:	4770      	bx	lr

0800541c <os_set_env>:
 800541c:	4668      	mov	r0, sp
 800541e:	f380 8809 	msr	PSP, r0
 8005422:	485a      	ldr	r0, [pc, #360]	; (800558c <OS_Tick_Handler+0x10>)
 8005424:	7800      	ldrb	r0, [r0, #0]
 8005426:	07c0      	lsls	r0, r0, #31
 8005428:	bf14      	ite	ne
 800542a:	2002      	movne	r0, #2
 800542c:	2003      	moveq	r0, #3
 800542e:	f380 8814 	msr	CONTROL, r0
 8005432:	4770      	bx	lr

08005434 <_alloc_box>:
 8005434:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005590 <OS_Tick_Handler+0x14>
 8005438:	f3ef 8305 	mrs	r3, IPSR
 800543c:	061b      	lsls	r3, r3, #24
 800543e:	bf18      	it	ne
 8005440:	4760      	bxne	r12
 8005442:	f3ef 8314 	mrs	r3, CONTROL
 8005446:	07db      	lsls	r3, r3, #31
 8005448:	bf08      	it	eq
 800544a:	4760      	bxeq	r12
 800544c:	df00      	svc	0
 800544e:	4770      	bx	lr

08005450 <_free_box>:
 8005450:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005594 <OS_Tick_Handler+0x18>
 8005454:	f3ef 8305 	mrs	r3, IPSR
 8005458:	061b      	lsls	r3, r3, #24
 800545a:	bf18      	it	ne
 800545c:	4760      	bxne	r12
 800545e:	f3ef 8314 	mrs	r3, CONTROL
 8005462:	07db      	lsls	r3, r3, #31
 8005464:	bf08      	it	eq
 8005466:	4760      	bxeq	r12
 8005468:	df00      	svc	0
 800546a:	4770      	bx	lr

0800546c <SVC_Handler>:
 800546c:	f3ef 8009 	mrs	r0, PSP
 8005470:	6981      	ldr	r1, [r0, #24]
 8005472:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8005476:	bbe1      	cbnz	r1, 80054f2 <SVC_User>
 8005478:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800547c:	b510      	push	{r4, lr}
 800547e:	47e0      	blx	r12
 8005480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005484:	f3ef 8c09 	mrs	r12, PSP
 8005488:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 800548c:	4b42      	ldr	r3, [pc, #264]	; (8005598 <OS_Tick_Handler+0x1c>)
 800548e:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005492:	4291      	cmp	r1, r2
 8005494:	bf08      	it	eq
 8005496:	4770      	bxeq	lr
 8005498:	b941      	cbnz	r1, 80054ac <SVC_ContextSave>
 800549a:	f01e 0f10 	tst.w	lr, #16
 800549e:	d116      	bne.n	80054ce <SVC_ContextRestore>
 80054a0:	493e      	ldr	r1, [pc, #248]	; (800559c <OS_Tick_Handler+0x20>)
 80054a2:	6808      	ldr	r0, [r1, #0]
 80054a4:	f020 0001 	bic.w	r0, r0, #1
 80054a8:	6008      	str	r0, [r1, #0]
 80054aa:	e010      	b.n	80054ce <SVC_ContextRestore>

080054ac <SVC_ContextSave>:
 80054ac:	f01e 0f10 	tst.w	lr, #16
 80054b0:	bf06      	itte	eq
 80054b2:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80054b6:	2001      	moveq	r0, #1
 80054b8:	2000      	movne	r0, #0
 80054ba:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80054be:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80054c2:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80054c6:	b40c      	push	{r2, r3}
 80054c8:	f7fc fc42 	bl	8001d50 <rt_stk_check>
 80054cc:	bc0c      	pop	{r2, r3}

080054ce <SVC_ContextRestore>:
 80054ce:	601a      	str	r2, [r3, #0]
 80054d0:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80054d4:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80054d8:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80054dc:	2800      	cmp	r0, #0
 80054de:	bf0e      	itee	eq
 80054e0:	f06f 0e02 	mvneq.w	lr, #2
 80054e4:	f06f 0e12 	mvnne.w	lr, #18
 80054e8:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80054ec:	f38c 8809 	msr	PSP, r12

080054f0 <SVC_Exit>:
 80054f0:	4770      	bx	lr

080054f2 <SVC_User>:
 80054f2:	b510      	push	{r4, lr}
 80054f4:	4a2a      	ldr	r2, [pc, #168]	; (80055a0 <OS_Tick_Handler+0x24>)
 80054f6:	6812      	ldr	r2, [r2, #0]
 80054f8:	4291      	cmp	r1, r2
 80054fa:	d809      	bhi.n	8005510 <SVC_Done>
 80054fc:	4c29      	ldr	r4, [pc, #164]	; (80055a4 <OS_Tick_Handler+0x28>)
 80054fe:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005502:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005506:	47a0      	blx	r4
 8005508:	f3ef 8c09 	mrs	r12, PSP
 800550c:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005510 <SVC_Done>:
 8005510:	bd10      	pop	{r4, pc}

08005512 <PendSV_Handler>:
 8005512:	b510      	push	{r4, lr}
 8005514:	f7fc fba8 	bl	8001c68 <rt_pop_req>

08005518 <Sys_Switch>:
 8005518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800551c:	4b1e      	ldr	r3, [pc, #120]	; (8005598 <OS_Tick_Handler+0x1c>)
 800551e:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005522:	4291      	cmp	r1, r2
 8005524:	bf08      	it	eq
 8005526:	4770      	bxeq	lr
 8005528:	f3ef 8c09 	mrs	r12, PSP
 800552c:	f01e 0f10 	tst.w	lr, #16
 8005530:	bf06      	itte	eq
 8005532:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005536:	2001      	moveq	r0, #1
 8005538:	2000      	movne	r0, #0
 800553a:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800553e:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005542:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005546:	b40c      	push	{r2, r3}
 8005548:	f7fc fc02 	bl	8001d50 <rt_stk_check>
 800554c:	bc0c      	pop	{r2, r3}
 800554e:	601a      	str	r2, [r3, #0]
 8005550:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005554:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005558:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 800555c:	2800      	cmp	r0, #0
 800555e:	bf0e      	itee	eq
 8005560:	f06f 0e02 	mvneq.w	lr, #2
 8005564:	f06f 0e12 	mvnne.w	lr, #18
 8005568:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 800556c:	f38c 8809 	msr	PSP, r12

08005570 <Sys_Exit>:
 8005570:	4770      	bx	lr

08005572 <SysTick_Handler>:
 8005572:	b510      	push	{r4, lr}
 8005574:	f7fc fbce 	bl	8001d14 <rt_systick>
 8005578:	f7ff bfce 	b.w	8005518 <Sys_Switch>

0800557c <OS_Tick_Handler>:
 800557c:	b510      	push	{r4, lr}
 800557e:	f7fc fbc7 	bl	8001d10 <os_tick_irqack>
 8005582:	f7fc fbc7 	bl	8001d14 <rt_systick>
 8005586:	f7ff bfc7 	b.w	8005518 <Sys_Switch>
 800558a:	0000      	.short	0x0000
 800558c:	080068b6 	.word	0x080068b6
 8005590:	08001e7f 	.word	0x08001e7f
 8005594:	08001e99 	.word	0x08001e99
 8005598:	20001e34 	.word	0x20001e34
 800559c:	e000ef34 	.word	0xe000ef34
 80055a0:	00000000 	.word	0x00000000
 80055a4:	fffffffc 	.word	0xfffffffc

080055a8 <Reset_Handler>:
 80055a8:	f8df d020 	ldr.w	sp, [pc, #32]	; 80055cc <LoopForever+0x2>
 80055ac:	2100      	movs	r1, #0
 80055ae:	e003      	b.n	80055b8 <LoopCopyDataInit>

080055b0 <CopyDataInit>:
 80055b0:	4b07      	ldr	r3, [pc, #28]	; (80055d0 <LoopForever+0x6>)
 80055b2:	585b      	ldr	r3, [r3, r1]
 80055b4:	5043      	str	r3, [r0, r1]
 80055b6:	3104      	adds	r1, #4

080055b8 <LoopCopyDataInit>:
 80055b8:	4806      	ldr	r0, [pc, #24]	; (80055d4 <LoopForever+0xa>)
 80055ba:	4b07      	ldr	r3, [pc, #28]	; (80055d8 <LoopForever+0xe>)
 80055bc:	1842      	adds	r2, r0, r1
 80055be:	429a      	cmp	r2, r3
 80055c0:	d3f6      	bcc.n	80055b0 <CopyDataInit>
 80055c2:	f7fe fbef 	bl	8003da4 <SystemInit>
 80055c6:	f7fb fd8d 	bl	80010e4 <_start>

080055ca <LoopForever>:
 80055ca:	e7fe      	b.n	80055ca <LoopForever>
 80055cc:	20003000 	.word	0x20003000
 80055d0:	08006c68 	.word	0x08006c68
 80055d4:	20000188 	.word	0x20000188
 80055d8:	20000224 	.word	0x20000224

080055dc <ADC1_2_IRQHandler>:
 80055dc:	e7fe      	b.n	80055dc <ADC1_2_IRQHandler>
	...

080055e0 <__errno>:
 80055e0:	4b01      	ldr	r3, [pc, #4]	; (80055e8 <__errno+0x8>)
 80055e2:	6818      	ldr	r0, [r3, #0]
 80055e4:	4770      	bx	lr
 80055e6:	bf00      	nop
 80055e8:	200001ac 	.word	0x200001ac

080055ec <__sflush_r>:
 80055ec:	898a      	ldrh	r2, [r1, #12]
 80055ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80055f2:	4605      	mov	r5, r0
 80055f4:	0710      	lsls	r0, r2, #28
 80055f6:	460c      	mov	r4, r1
 80055f8:	d45a      	bmi.n	80056b0 <__sflush_r+0xc4>
 80055fa:	684b      	ldr	r3, [r1, #4]
 80055fc:	2b00      	cmp	r3, #0
 80055fe:	dc05      	bgt.n	800560c <__sflush_r+0x20>
 8005600:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005602:	2b00      	cmp	r3, #0
 8005604:	dc02      	bgt.n	800560c <__sflush_r+0x20>
 8005606:	2000      	movs	r0, #0
 8005608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800560c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800560e:	2e00      	cmp	r6, #0
 8005610:	d0f9      	beq.n	8005606 <__sflush_r+0x1a>
 8005612:	2300      	movs	r3, #0
 8005614:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005618:	682f      	ldr	r7, [r5, #0]
 800561a:	602b      	str	r3, [r5, #0]
 800561c:	d033      	beq.n	8005686 <__sflush_r+0x9a>
 800561e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005620:	89a3      	ldrh	r3, [r4, #12]
 8005622:	075a      	lsls	r2, r3, #29
 8005624:	d505      	bpl.n	8005632 <__sflush_r+0x46>
 8005626:	6863      	ldr	r3, [r4, #4]
 8005628:	1ac0      	subs	r0, r0, r3
 800562a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800562c:	b10b      	cbz	r3, 8005632 <__sflush_r+0x46>
 800562e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005630:	1ac0      	subs	r0, r0, r3
 8005632:	2300      	movs	r3, #0
 8005634:	4602      	mov	r2, r0
 8005636:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005638:	6a21      	ldr	r1, [r4, #32]
 800563a:	4628      	mov	r0, r5
 800563c:	47b0      	blx	r6
 800563e:	1c43      	adds	r3, r0, #1
 8005640:	89a3      	ldrh	r3, [r4, #12]
 8005642:	d106      	bne.n	8005652 <__sflush_r+0x66>
 8005644:	6829      	ldr	r1, [r5, #0]
 8005646:	291d      	cmp	r1, #29
 8005648:	d84b      	bhi.n	80056e2 <__sflush_r+0xf6>
 800564a:	4a2b      	ldr	r2, [pc, #172]	; (80056f8 <__sflush_r+0x10c>)
 800564c:	40ca      	lsrs	r2, r1
 800564e:	07d6      	lsls	r6, r2, #31
 8005650:	d547      	bpl.n	80056e2 <__sflush_r+0xf6>
 8005652:	2200      	movs	r2, #0
 8005654:	6062      	str	r2, [r4, #4]
 8005656:	04d9      	lsls	r1, r3, #19
 8005658:	6922      	ldr	r2, [r4, #16]
 800565a:	6022      	str	r2, [r4, #0]
 800565c:	d504      	bpl.n	8005668 <__sflush_r+0x7c>
 800565e:	1c42      	adds	r2, r0, #1
 8005660:	d101      	bne.n	8005666 <__sflush_r+0x7a>
 8005662:	682b      	ldr	r3, [r5, #0]
 8005664:	b903      	cbnz	r3, 8005668 <__sflush_r+0x7c>
 8005666:	6560      	str	r0, [r4, #84]	; 0x54
 8005668:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800566a:	602f      	str	r7, [r5, #0]
 800566c:	2900      	cmp	r1, #0
 800566e:	d0ca      	beq.n	8005606 <__sflush_r+0x1a>
 8005670:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005674:	4299      	cmp	r1, r3
 8005676:	d002      	beq.n	800567e <__sflush_r+0x92>
 8005678:	4628      	mov	r0, r5
 800567a:	f7ff fd5d 	bl	8005138 <__wrap__free_r>
 800567e:	2000      	movs	r0, #0
 8005680:	6360      	str	r0, [r4, #52]	; 0x34
 8005682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005686:	6a21      	ldr	r1, [r4, #32]
 8005688:	2301      	movs	r3, #1
 800568a:	4628      	mov	r0, r5
 800568c:	47b0      	blx	r6
 800568e:	1c41      	adds	r1, r0, #1
 8005690:	d1c6      	bne.n	8005620 <__sflush_r+0x34>
 8005692:	682b      	ldr	r3, [r5, #0]
 8005694:	2b00      	cmp	r3, #0
 8005696:	d0c3      	beq.n	8005620 <__sflush_r+0x34>
 8005698:	2b1d      	cmp	r3, #29
 800569a:	d001      	beq.n	80056a0 <__sflush_r+0xb4>
 800569c:	2b16      	cmp	r3, #22
 800569e:	d101      	bne.n	80056a4 <__sflush_r+0xb8>
 80056a0:	602f      	str	r7, [r5, #0]
 80056a2:	e7b0      	b.n	8005606 <__sflush_r+0x1a>
 80056a4:	89a3      	ldrh	r3, [r4, #12]
 80056a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056aa:	81a3      	strh	r3, [r4, #12]
 80056ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80056b0:	690f      	ldr	r7, [r1, #16]
 80056b2:	2f00      	cmp	r7, #0
 80056b4:	d0a7      	beq.n	8005606 <__sflush_r+0x1a>
 80056b6:	0793      	lsls	r3, r2, #30
 80056b8:	680e      	ldr	r6, [r1, #0]
 80056ba:	bf08      	it	eq
 80056bc:	694b      	ldreq	r3, [r1, #20]
 80056be:	600f      	str	r7, [r1, #0]
 80056c0:	bf18      	it	ne
 80056c2:	2300      	movne	r3, #0
 80056c4:	eba6 0807 	sub.w	r8, r6, r7
 80056c8:	608b      	str	r3, [r1, #8]
 80056ca:	f1b8 0f00 	cmp.w	r8, #0
 80056ce:	dd9a      	ble.n	8005606 <__sflush_r+0x1a>
 80056d0:	4643      	mov	r3, r8
 80056d2:	463a      	mov	r2, r7
 80056d4:	6a21      	ldr	r1, [r4, #32]
 80056d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80056d8:	4628      	mov	r0, r5
 80056da:	47b0      	blx	r6
 80056dc:	2800      	cmp	r0, #0
 80056de:	dc07      	bgt.n	80056f0 <__sflush_r+0x104>
 80056e0:	89a3      	ldrh	r3, [r4, #12]
 80056e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056e6:	81a3      	strh	r3, [r4, #12]
 80056e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80056ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80056f0:	4407      	add	r7, r0
 80056f2:	eba8 0800 	sub.w	r8, r8, r0
 80056f6:	e7e8      	b.n	80056ca <__sflush_r+0xde>
 80056f8:	20400001 	.word	0x20400001

080056fc <_fflush_r>:
 80056fc:	b538      	push	{r3, r4, r5, lr}
 80056fe:	690b      	ldr	r3, [r1, #16]
 8005700:	4605      	mov	r5, r0
 8005702:	460c      	mov	r4, r1
 8005704:	b1db      	cbz	r3, 800573e <_fflush_r+0x42>
 8005706:	b118      	cbz	r0, 8005710 <_fflush_r+0x14>
 8005708:	6983      	ldr	r3, [r0, #24]
 800570a:	b90b      	cbnz	r3, 8005710 <_fflush_r+0x14>
 800570c:	f000 f872 	bl	80057f4 <__sinit>
 8005710:	4b0c      	ldr	r3, [pc, #48]	; (8005744 <_fflush_r+0x48>)
 8005712:	429c      	cmp	r4, r3
 8005714:	d109      	bne.n	800572a <_fflush_r+0x2e>
 8005716:	686c      	ldr	r4, [r5, #4]
 8005718:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800571c:	b17b      	cbz	r3, 800573e <_fflush_r+0x42>
 800571e:	4621      	mov	r1, r4
 8005720:	4628      	mov	r0, r5
 8005722:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005726:	f7ff bf61 	b.w	80055ec <__sflush_r>
 800572a:	4b07      	ldr	r3, [pc, #28]	; (8005748 <_fflush_r+0x4c>)
 800572c:	429c      	cmp	r4, r3
 800572e:	d101      	bne.n	8005734 <_fflush_r+0x38>
 8005730:	68ac      	ldr	r4, [r5, #8]
 8005732:	e7f1      	b.n	8005718 <_fflush_r+0x1c>
 8005734:	4b05      	ldr	r3, [pc, #20]	; (800574c <_fflush_r+0x50>)
 8005736:	429c      	cmp	r4, r3
 8005738:	bf08      	it	eq
 800573a:	68ec      	ldreq	r4, [r5, #12]
 800573c:	e7ec      	b.n	8005718 <_fflush_r+0x1c>
 800573e:	2000      	movs	r0, #0
 8005740:	bd38      	pop	{r3, r4, r5, pc}
 8005742:	bf00      	nop
 8005744:	08006be4 	.word	0x08006be4
 8005748:	08006c04 	.word	0x08006c04
 800574c:	08006bc4 	.word	0x08006bc4

08005750 <fflush>:
 8005750:	4601      	mov	r1, r0
 8005752:	b920      	cbnz	r0, 800575e <fflush+0xe>
 8005754:	4b04      	ldr	r3, [pc, #16]	; (8005768 <fflush+0x18>)
 8005756:	4905      	ldr	r1, [pc, #20]	; (800576c <fflush+0x1c>)
 8005758:	6818      	ldr	r0, [r3, #0]
 800575a:	f000 b8b7 	b.w	80058cc <_fwalk_reent>
 800575e:	4b04      	ldr	r3, [pc, #16]	; (8005770 <fflush+0x20>)
 8005760:	6818      	ldr	r0, [r3, #0]
 8005762:	f7ff bfcb 	b.w	80056fc <_fflush_r>
 8005766:	bf00      	nop
 8005768:	08006c24 	.word	0x08006c24
 800576c:	080056fd 	.word	0x080056fd
 8005770:	200001ac 	.word	0x200001ac

08005774 <_cleanup_r>:
 8005774:	4901      	ldr	r1, [pc, #4]	; (800577c <_cleanup_r+0x8>)
 8005776:	f000 b8a9 	b.w	80058cc <_fwalk_reent>
 800577a:	bf00      	nop
 800577c:	080056fd 	.word	0x080056fd

08005780 <std.isra.0>:
 8005780:	2300      	movs	r3, #0
 8005782:	b510      	push	{r4, lr}
 8005784:	4604      	mov	r4, r0
 8005786:	6003      	str	r3, [r0, #0]
 8005788:	6043      	str	r3, [r0, #4]
 800578a:	6083      	str	r3, [r0, #8]
 800578c:	8181      	strh	r1, [r0, #12]
 800578e:	6643      	str	r3, [r0, #100]	; 0x64
 8005790:	81c2      	strh	r2, [r0, #14]
 8005792:	6103      	str	r3, [r0, #16]
 8005794:	6143      	str	r3, [r0, #20]
 8005796:	6183      	str	r3, [r0, #24]
 8005798:	4619      	mov	r1, r3
 800579a:	2208      	movs	r2, #8
 800579c:	305c      	adds	r0, #92	; 0x5c
 800579e:	f000 f95c 	bl	8005a5a <memset>
 80057a2:	4b05      	ldr	r3, [pc, #20]	; (80057b8 <std.isra.0+0x38>)
 80057a4:	6263      	str	r3, [r4, #36]	; 0x24
 80057a6:	4b05      	ldr	r3, [pc, #20]	; (80057bc <std.isra.0+0x3c>)
 80057a8:	62a3      	str	r3, [r4, #40]	; 0x28
 80057aa:	4b05      	ldr	r3, [pc, #20]	; (80057c0 <std.isra.0+0x40>)
 80057ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 80057ae:	4b05      	ldr	r3, [pc, #20]	; (80057c4 <std.isra.0+0x44>)
 80057b0:	6224      	str	r4, [r4, #32]
 80057b2:	6323      	str	r3, [r4, #48]	; 0x30
 80057b4:	bd10      	pop	{r4, pc}
 80057b6:	bf00      	nop
 80057b8:	08005f6d 	.word	0x08005f6d
 80057bc:	08005f8f 	.word	0x08005f8f
 80057c0:	08005fc7 	.word	0x08005fc7
 80057c4:	08005feb 	.word	0x08005feb

080057c8 <__sfmoreglue>:
 80057c8:	b570      	push	{r4, r5, r6, lr}
 80057ca:	1e4a      	subs	r2, r1, #1
 80057cc:	2568      	movs	r5, #104	; 0x68
 80057ce:	4355      	muls	r5, r2
 80057d0:	460e      	mov	r6, r1
 80057d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80057d6:	f7ff fcab 	bl	8005130 <__wrap__malloc_r>
 80057da:	4604      	mov	r4, r0
 80057dc:	b140      	cbz	r0, 80057f0 <__sfmoreglue+0x28>
 80057de:	2100      	movs	r1, #0
 80057e0:	e880 0042 	stmia.w	r0, {r1, r6}
 80057e4:	300c      	adds	r0, #12
 80057e6:	60a0      	str	r0, [r4, #8]
 80057e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80057ec:	f000 f935 	bl	8005a5a <memset>
 80057f0:	4620      	mov	r0, r4
 80057f2:	bd70      	pop	{r4, r5, r6, pc}

080057f4 <__sinit>:
 80057f4:	6983      	ldr	r3, [r0, #24]
 80057f6:	b510      	push	{r4, lr}
 80057f8:	4604      	mov	r4, r0
 80057fa:	bb33      	cbnz	r3, 800584a <__sinit+0x56>
 80057fc:	6483      	str	r3, [r0, #72]	; 0x48
 80057fe:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005800:	6503      	str	r3, [r0, #80]	; 0x50
 8005802:	4b12      	ldr	r3, [pc, #72]	; (800584c <__sinit+0x58>)
 8005804:	4a12      	ldr	r2, [pc, #72]	; (8005850 <__sinit+0x5c>)
 8005806:	681b      	ldr	r3, [r3, #0]
 8005808:	6282      	str	r2, [r0, #40]	; 0x28
 800580a:	4298      	cmp	r0, r3
 800580c:	bf04      	itt	eq
 800580e:	2301      	moveq	r3, #1
 8005810:	6183      	streq	r3, [r0, #24]
 8005812:	f000 f81f 	bl	8005854 <__sfp>
 8005816:	6060      	str	r0, [r4, #4]
 8005818:	4620      	mov	r0, r4
 800581a:	f000 f81b 	bl	8005854 <__sfp>
 800581e:	60a0      	str	r0, [r4, #8]
 8005820:	4620      	mov	r0, r4
 8005822:	f000 f817 	bl	8005854 <__sfp>
 8005826:	2200      	movs	r2, #0
 8005828:	60e0      	str	r0, [r4, #12]
 800582a:	2104      	movs	r1, #4
 800582c:	6860      	ldr	r0, [r4, #4]
 800582e:	f7ff ffa7 	bl	8005780 <std.isra.0>
 8005832:	2201      	movs	r2, #1
 8005834:	2109      	movs	r1, #9
 8005836:	68a0      	ldr	r0, [r4, #8]
 8005838:	f7ff ffa2 	bl	8005780 <std.isra.0>
 800583c:	2202      	movs	r2, #2
 800583e:	2112      	movs	r1, #18
 8005840:	68e0      	ldr	r0, [r4, #12]
 8005842:	f7ff ff9d 	bl	8005780 <std.isra.0>
 8005846:	2301      	movs	r3, #1
 8005848:	61a3      	str	r3, [r4, #24]
 800584a:	bd10      	pop	{r4, pc}
 800584c:	08006c24 	.word	0x08006c24
 8005850:	08005775 	.word	0x08005775

08005854 <__sfp>:
 8005854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005856:	4b1c      	ldr	r3, [pc, #112]	; (80058c8 <__sfp+0x74>)
 8005858:	681e      	ldr	r6, [r3, #0]
 800585a:	69b3      	ldr	r3, [r6, #24]
 800585c:	4607      	mov	r7, r0
 800585e:	b913      	cbnz	r3, 8005866 <__sfp+0x12>
 8005860:	4630      	mov	r0, r6
 8005862:	f7ff ffc7 	bl	80057f4 <__sinit>
 8005866:	3648      	adds	r6, #72	; 0x48
 8005868:	68b4      	ldr	r4, [r6, #8]
 800586a:	6873      	ldr	r3, [r6, #4]
 800586c:	3b01      	subs	r3, #1
 800586e:	d503      	bpl.n	8005878 <__sfp+0x24>
 8005870:	6833      	ldr	r3, [r6, #0]
 8005872:	b133      	cbz	r3, 8005882 <__sfp+0x2e>
 8005874:	6836      	ldr	r6, [r6, #0]
 8005876:	e7f7      	b.n	8005868 <__sfp+0x14>
 8005878:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800587c:	b16d      	cbz	r5, 800589a <__sfp+0x46>
 800587e:	3468      	adds	r4, #104	; 0x68
 8005880:	e7f4      	b.n	800586c <__sfp+0x18>
 8005882:	2104      	movs	r1, #4
 8005884:	4638      	mov	r0, r7
 8005886:	f7ff ff9f 	bl	80057c8 <__sfmoreglue>
 800588a:	6030      	str	r0, [r6, #0]
 800588c:	2800      	cmp	r0, #0
 800588e:	d1f1      	bne.n	8005874 <__sfp+0x20>
 8005890:	230c      	movs	r3, #12
 8005892:	603b      	str	r3, [r7, #0]
 8005894:	4604      	mov	r4, r0
 8005896:	4620      	mov	r0, r4
 8005898:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800589a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800589e:	81e3      	strh	r3, [r4, #14]
 80058a0:	2301      	movs	r3, #1
 80058a2:	81a3      	strh	r3, [r4, #12]
 80058a4:	6665      	str	r5, [r4, #100]	; 0x64
 80058a6:	6025      	str	r5, [r4, #0]
 80058a8:	60a5      	str	r5, [r4, #8]
 80058aa:	6065      	str	r5, [r4, #4]
 80058ac:	6125      	str	r5, [r4, #16]
 80058ae:	6165      	str	r5, [r4, #20]
 80058b0:	61a5      	str	r5, [r4, #24]
 80058b2:	2208      	movs	r2, #8
 80058b4:	4629      	mov	r1, r5
 80058b6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80058ba:	f000 f8ce 	bl	8005a5a <memset>
 80058be:	6365      	str	r5, [r4, #52]	; 0x34
 80058c0:	63a5      	str	r5, [r4, #56]	; 0x38
 80058c2:	64a5      	str	r5, [r4, #72]	; 0x48
 80058c4:	64e5      	str	r5, [r4, #76]	; 0x4c
 80058c6:	e7e6      	b.n	8005896 <__sfp+0x42>
 80058c8:	08006c24 	.word	0x08006c24

080058cc <_fwalk_reent>:
 80058cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058d0:	4680      	mov	r8, r0
 80058d2:	4689      	mov	r9, r1
 80058d4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80058d8:	2600      	movs	r6, #0
 80058da:	b914      	cbnz	r4, 80058e2 <_fwalk_reent+0x16>
 80058dc:	4630      	mov	r0, r6
 80058de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80058e2:	68a5      	ldr	r5, [r4, #8]
 80058e4:	6867      	ldr	r7, [r4, #4]
 80058e6:	3f01      	subs	r7, #1
 80058e8:	d501      	bpl.n	80058ee <_fwalk_reent+0x22>
 80058ea:	6824      	ldr	r4, [r4, #0]
 80058ec:	e7f5      	b.n	80058da <_fwalk_reent+0xe>
 80058ee:	89ab      	ldrh	r3, [r5, #12]
 80058f0:	2b01      	cmp	r3, #1
 80058f2:	d907      	bls.n	8005904 <_fwalk_reent+0x38>
 80058f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80058f8:	3301      	adds	r3, #1
 80058fa:	d003      	beq.n	8005904 <_fwalk_reent+0x38>
 80058fc:	4629      	mov	r1, r5
 80058fe:	4640      	mov	r0, r8
 8005900:	47c8      	blx	r9
 8005902:	4306      	orrs	r6, r0
 8005904:	3568      	adds	r5, #104	; 0x68
 8005906:	e7ee      	b.n	80058e6 <_fwalk_reent+0x1a>

08005908 <__libc_init_array>:
 8005908:	b570      	push	{r4, r5, r6, lr}
 800590a:	4e0d      	ldr	r6, [pc, #52]	; (8005940 <__libc_init_array+0x38>)
 800590c:	4c0d      	ldr	r4, [pc, #52]	; (8005944 <__libc_init_array+0x3c>)
 800590e:	1ba4      	subs	r4, r4, r6
 8005910:	10a4      	asrs	r4, r4, #2
 8005912:	2500      	movs	r5, #0
 8005914:	42a5      	cmp	r5, r4
 8005916:	d109      	bne.n	800592c <__libc_init_array+0x24>
 8005918:	4e0b      	ldr	r6, [pc, #44]	; (8005948 <__libc_init_array+0x40>)
 800591a:	4c0c      	ldr	r4, [pc, #48]	; (800594c <__libc_init_array+0x44>)
 800591c:	f000 fd88 	bl	8006430 <_init>
 8005920:	1ba4      	subs	r4, r4, r6
 8005922:	10a4      	asrs	r4, r4, #2
 8005924:	2500      	movs	r5, #0
 8005926:	42a5      	cmp	r5, r4
 8005928:	d105      	bne.n	8005936 <__libc_init_array+0x2e>
 800592a:	bd70      	pop	{r4, r5, r6, pc}
 800592c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005930:	4798      	blx	r3
 8005932:	3501      	adds	r5, #1
 8005934:	e7ee      	b.n	8005914 <__libc_init_array+0xc>
 8005936:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800593a:	4798      	blx	r3
 800593c:	3501      	adds	r5, #1
 800593e:	e7f2      	b.n	8005926 <__libc_init_array+0x1e>
 8005940:	20000210 	.word	0x20000210
 8005944:	20000210 	.word	0x20000210
 8005948:	20000210 	.word	0x20000210
 800594c:	2000021c 	.word	0x2000021c

08005950 <malloc>:
 8005950:	4b02      	ldr	r3, [pc, #8]	; (800595c <malloc+0xc>)
 8005952:	4601      	mov	r1, r0
 8005954:	6818      	ldr	r0, [r3, #0]
 8005956:	f7ff bbeb 	b.w	8005130 <__wrap__malloc_r>
 800595a:	bf00      	nop
 800595c:	200001ac 	.word	0x200001ac

08005960 <free>:
 8005960:	4b02      	ldr	r3, [pc, #8]	; (800596c <free+0xc>)
 8005962:	4601      	mov	r1, r0
 8005964:	6818      	ldr	r0, [r3, #0]
 8005966:	f7ff bbe7 	b.w	8005138 <__wrap__free_r>
 800596a:	bf00      	nop
 800596c:	200001ac 	.word	0x200001ac

08005970 <memchr>:
 8005970:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005974:	2a10      	cmp	r2, #16
 8005976:	db2b      	blt.n	80059d0 <memchr+0x60>
 8005978:	f010 0f07 	tst.w	r0, #7
 800597c:	d008      	beq.n	8005990 <memchr+0x20>
 800597e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005982:	3a01      	subs	r2, #1
 8005984:	428b      	cmp	r3, r1
 8005986:	d02d      	beq.n	80059e4 <memchr+0x74>
 8005988:	f010 0f07 	tst.w	r0, #7
 800598c:	b342      	cbz	r2, 80059e0 <memchr+0x70>
 800598e:	d1f6      	bne.n	800597e <memchr+0xe>
 8005990:	b4f0      	push	{r4, r5, r6, r7}
 8005992:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005996:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800599a:	f022 0407 	bic.w	r4, r2, #7
 800599e:	f07f 0700 	mvns.w	r7, #0
 80059a2:	2300      	movs	r3, #0
 80059a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80059a8:	3c08      	subs	r4, #8
 80059aa:	ea85 0501 	eor.w	r5, r5, r1
 80059ae:	ea86 0601 	eor.w	r6, r6, r1
 80059b2:	fa85 f547 	uadd8	r5, r5, r7
 80059b6:	faa3 f587 	sel	r5, r3, r7
 80059ba:	fa86 f647 	uadd8	r6, r6, r7
 80059be:	faa5 f687 	sel	r6, r5, r7
 80059c2:	b98e      	cbnz	r6, 80059e8 <memchr+0x78>
 80059c4:	d1ee      	bne.n	80059a4 <memchr+0x34>
 80059c6:	bcf0      	pop	{r4, r5, r6, r7}
 80059c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80059cc:	f002 0207 	and.w	r2, r2, #7
 80059d0:	b132      	cbz	r2, 80059e0 <memchr+0x70>
 80059d2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80059d6:	3a01      	subs	r2, #1
 80059d8:	ea83 0301 	eor.w	r3, r3, r1
 80059dc:	b113      	cbz	r3, 80059e4 <memchr+0x74>
 80059de:	d1f8      	bne.n	80059d2 <memchr+0x62>
 80059e0:	2000      	movs	r0, #0
 80059e2:	4770      	bx	lr
 80059e4:	3801      	subs	r0, #1
 80059e6:	4770      	bx	lr
 80059e8:	2d00      	cmp	r5, #0
 80059ea:	bf06      	itte	eq
 80059ec:	4635      	moveq	r5, r6
 80059ee:	3803      	subeq	r0, #3
 80059f0:	3807      	subne	r0, #7
 80059f2:	f015 0f01 	tst.w	r5, #1
 80059f6:	d107      	bne.n	8005a08 <memchr+0x98>
 80059f8:	3001      	adds	r0, #1
 80059fa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80059fe:	bf02      	ittt	eq
 8005a00:	3001      	addeq	r0, #1
 8005a02:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005a06:	3001      	addeq	r0, #1
 8005a08:	bcf0      	pop	{r4, r5, r6, r7}
 8005a0a:	3801      	subs	r0, #1
 8005a0c:	4770      	bx	lr
 8005a0e:	bf00      	nop

08005a10 <memcpy>:
 8005a10:	b510      	push	{r4, lr}
 8005a12:	1e43      	subs	r3, r0, #1
 8005a14:	440a      	add	r2, r1
 8005a16:	4291      	cmp	r1, r2
 8005a18:	d100      	bne.n	8005a1c <memcpy+0xc>
 8005a1a:	bd10      	pop	{r4, pc}
 8005a1c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005a20:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005a24:	e7f7      	b.n	8005a16 <memcpy+0x6>

08005a26 <memmove>:
 8005a26:	4288      	cmp	r0, r1
 8005a28:	b510      	push	{r4, lr}
 8005a2a:	eb01 0302 	add.w	r3, r1, r2
 8005a2e:	d803      	bhi.n	8005a38 <memmove+0x12>
 8005a30:	1e42      	subs	r2, r0, #1
 8005a32:	4299      	cmp	r1, r3
 8005a34:	d10c      	bne.n	8005a50 <memmove+0x2a>
 8005a36:	bd10      	pop	{r4, pc}
 8005a38:	4298      	cmp	r0, r3
 8005a3a:	d2f9      	bcs.n	8005a30 <memmove+0xa>
 8005a3c:	1881      	adds	r1, r0, r2
 8005a3e:	1ad2      	subs	r2, r2, r3
 8005a40:	42d3      	cmn	r3, r2
 8005a42:	d100      	bne.n	8005a46 <memmove+0x20>
 8005a44:	bd10      	pop	{r4, pc}
 8005a46:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005a4a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005a4e:	e7f7      	b.n	8005a40 <memmove+0x1a>
 8005a50:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005a54:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005a58:	e7eb      	b.n	8005a32 <memmove+0xc>

08005a5a <memset>:
 8005a5a:	4402      	add	r2, r0
 8005a5c:	4603      	mov	r3, r0
 8005a5e:	4293      	cmp	r3, r2
 8005a60:	d100      	bne.n	8005a64 <memset+0xa>
 8005a62:	4770      	bx	lr
 8005a64:	f803 1b01 	strb.w	r1, [r3], #1
 8005a68:	e7f9      	b.n	8005a5e <memset+0x4>
	...

08005a6c <_free_r>:
 8005a6c:	b538      	push	{r3, r4, r5, lr}
 8005a6e:	4605      	mov	r5, r0
 8005a70:	2900      	cmp	r1, #0
 8005a72:	d045      	beq.n	8005b00 <_free_r+0x94>
 8005a74:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005a78:	1f0c      	subs	r4, r1, #4
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	bfb8      	it	lt
 8005a7e:	18e4      	addlt	r4, r4, r3
 8005a80:	f7ff fc7b 	bl	800537a <__malloc_lock>
 8005a84:	4a1f      	ldr	r2, [pc, #124]	; (8005b04 <_free_r+0x98>)
 8005a86:	6813      	ldr	r3, [r2, #0]
 8005a88:	4610      	mov	r0, r2
 8005a8a:	b933      	cbnz	r3, 8005a9a <_free_r+0x2e>
 8005a8c:	6063      	str	r3, [r4, #4]
 8005a8e:	6014      	str	r4, [r2, #0]
 8005a90:	4628      	mov	r0, r5
 8005a92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005a96:	f7ff bc74 	b.w	8005382 <__malloc_unlock>
 8005a9a:	42a3      	cmp	r3, r4
 8005a9c:	d90c      	bls.n	8005ab8 <_free_r+0x4c>
 8005a9e:	6821      	ldr	r1, [r4, #0]
 8005aa0:	1862      	adds	r2, r4, r1
 8005aa2:	4293      	cmp	r3, r2
 8005aa4:	bf04      	itt	eq
 8005aa6:	681a      	ldreq	r2, [r3, #0]
 8005aa8:	685b      	ldreq	r3, [r3, #4]
 8005aaa:	6063      	str	r3, [r4, #4]
 8005aac:	bf04      	itt	eq
 8005aae:	1852      	addeq	r2, r2, r1
 8005ab0:	6022      	streq	r2, [r4, #0]
 8005ab2:	6004      	str	r4, [r0, #0]
 8005ab4:	e7ec      	b.n	8005a90 <_free_r+0x24>
 8005ab6:	4613      	mov	r3, r2
 8005ab8:	685a      	ldr	r2, [r3, #4]
 8005aba:	b10a      	cbz	r2, 8005ac0 <_free_r+0x54>
 8005abc:	42a2      	cmp	r2, r4
 8005abe:	d9fa      	bls.n	8005ab6 <_free_r+0x4a>
 8005ac0:	6819      	ldr	r1, [r3, #0]
 8005ac2:	1858      	adds	r0, r3, r1
 8005ac4:	42a0      	cmp	r0, r4
 8005ac6:	d10b      	bne.n	8005ae0 <_free_r+0x74>
 8005ac8:	6820      	ldr	r0, [r4, #0]
 8005aca:	4401      	add	r1, r0
 8005acc:	1858      	adds	r0, r3, r1
 8005ace:	4282      	cmp	r2, r0
 8005ad0:	6019      	str	r1, [r3, #0]
 8005ad2:	d1dd      	bne.n	8005a90 <_free_r+0x24>
 8005ad4:	6810      	ldr	r0, [r2, #0]
 8005ad6:	6852      	ldr	r2, [r2, #4]
 8005ad8:	605a      	str	r2, [r3, #4]
 8005ada:	4401      	add	r1, r0
 8005adc:	6019      	str	r1, [r3, #0]
 8005ade:	e7d7      	b.n	8005a90 <_free_r+0x24>
 8005ae0:	d902      	bls.n	8005ae8 <_free_r+0x7c>
 8005ae2:	230c      	movs	r3, #12
 8005ae4:	602b      	str	r3, [r5, #0]
 8005ae6:	e7d3      	b.n	8005a90 <_free_r+0x24>
 8005ae8:	6820      	ldr	r0, [r4, #0]
 8005aea:	1821      	adds	r1, r4, r0
 8005aec:	428a      	cmp	r2, r1
 8005aee:	bf04      	itt	eq
 8005af0:	6811      	ldreq	r1, [r2, #0]
 8005af2:	6852      	ldreq	r2, [r2, #4]
 8005af4:	6062      	str	r2, [r4, #4]
 8005af6:	bf04      	itt	eq
 8005af8:	1809      	addeq	r1, r1, r0
 8005afa:	6021      	streq	r1, [r4, #0]
 8005afc:	605c      	str	r4, [r3, #4]
 8005afe:	e7c7      	b.n	8005a90 <_free_r+0x24>
 8005b00:	bd38      	pop	{r3, r4, r5, pc}
 8005b02:	bf00      	nop
 8005b04:	20001638 	.word	0x20001638

08005b08 <_malloc_r>:
 8005b08:	b570      	push	{r4, r5, r6, lr}
 8005b0a:	1ccd      	adds	r5, r1, #3
 8005b0c:	f025 0503 	bic.w	r5, r5, #3
 8005b10:	3508      	adds	r5, #8
 8005b12:	2d0c      	cmp	r5, #12
 8005b14:	bf38      	it	cc
 8005b16:	250c      	movcc	r5, #12
 8005b18:	2d00      	cmp	r5, #0
 8005b1a:	4606      	mov	r6, r0
 8005b1c:	db01      	blt.n	8005b22 <_malloc_r+0x1a>
 8005b1e:	42a9      	cmp	r1, r5
 8005b20:	d903      	bls.n	8005b2a <_malloc_r+0x22>
 8005b22:	230c      	movs	r3, #12
 8005b24:	6033      	str	r3, [r6, #0]
 8005b26:	2000      	movs	r0, #0
 8005b28:	bd70      	pop	{r4, r5, r6, pc}
 8005b2a:	f7ff fc26 	bl	800537a <__malloc_lock>
 8005b2e:	4a23      	ldr	r2, [pc, #140]	; (8005bbc <_malloc_r+0xb4>)
 8005b30:	6814      	ldr	r4, [r2, #0]
 8005b32:	4621      	mov	r1, r4
 8005b34:	b991      	cbnz	r1, 8005b5c <_malloc_r+0x54>
 8005b36:	4c22      	ldr	r4, [pc, #136]	; (8005bc0 <_malloc_r+0xb8>)
 8005b38:	6823      	ldr	r3, [r4, #0]
 8005b3a:	b91b      	cbnz	r3, 8005b44 <_malloc_r+0x3c>
 8005b3c:	4630      	mov	r0, r6
 8005b3e:	f000 fa05 	bl	8005f4c <_sbrk_r>
 8005b42:	6020      	str	r0, [r4, #0]
 8005b44:	4629      	mov	r1, r5
 8005b46:	4630      	mov	r0, r6
 8005b48:	f000 fa00 	bl	8005f4c <_sbrk_r>
 8005b4c:	1c43      	adds	r3, r0, #1
 8005b4e:	d126      	bne.n	8005b9e <_malloc_r+0x96>
 8005b50:	230c      	movs	r3, #12
 8005b52:	6033      	str	r3, [r6, #0]
 8005b54:	4630      	mov	r0, r6
 8005b56:	f7ff fc14 	bl	8005382 <__malloc_unlock>
 8005b5a:	e7e4      	b.n	8005b26 <_malloc_r+0x1e>
 8005b5c:	680b      	ldr	r3, [r1, #0]
 8005b5e:	1b5b      	subs	r3, r3, r5
 8005b60:	d41a      	bmi.n	8005b98 <_malloc_r+0x90>
 8005b62:	2b0b      	cmp	r3, #11
 8005b64:	d90f      	bls.n	8005b86 <_malloc_r+0x7e>
 8005b66:	600b      	str	r3, [r1, #0]
 8005b68:	50cd      	str	r5, [r1, r3]
 8005b6a:	18cc      	adds	r4, r1, r3
 8005b6c:	4630      	mov	r0, r6
 8005b6e:	f7ff fc08 	bl	8005382 <__malloc_unlock>
 8005b72:	f104 000b 	add.w	r0, r4, #11
 8005b76:	1d23      	adds	r3, r4, #4
 8005b78:	f020 0007 	bic.w	r0, r0, #7
 8005b7c:	1ac3      	subs	r3, r0, r3
 8005b7e:	d01b      	beq.n	8005bb8 <_malloc_r+0xb0>
 8005b80:	425a      	negs	r2, r3
 8005b82:	50e2      	str	r2, [r4, r3]
 8005b84:	bd70      	pop	{r4, r5, r6, pc}
 8005b86:	428c      	cmp	r4, r1
 8005b88:	bf0d      	iteet	eq
 8005b8a:	6863      	ldreq	r3, [r4, #4]
 8005b8c:	684b      	ldrne	r3, [r1, #4]
 8005b8e:	6063      	strne	r3, [r4, #4]
 8005b90:	6013      	streq	r3, [r2, #0]
 8005b92:	bf18      	it	ne
 8005b94:	460c      	movne	r4, r1
 8005b96:	e7e9      	b.n	8005b6c <_malloc_r+0x64>
 8005b98:	460c      	mov	r4, r1
 8005b9a:	6849      	ldr	r1, [r1, #4]
 8005b9c:	e7ca      	b.n	8005b34 <_malloc_r+0x2c>
 8005b9e:	1cc4      	adds	r4, r0, #3
 8005ba0:	f024 0403 	bic.w	r4, r4, #3
 8005ba4:	42a0      	cmp	r0, r4
 8005ba6:	d005      	beq.n	8005bb4 <_malloc_r+0xac>
 8005ba8:	1a21      	subs	r1, r4, r0
 8005baa:	4630      	mov	r0, r6
 8005bac:	f000 f9ce 	bl	8005f4c <_sbrk_r>
 8005bb0:	3001      	adds	r0, #1
 8005bb2:	d0cd      	beq.n	8005b50 <_malloc_r+0x48>
 8005bb4:	6025      	str	r5, [r4, #0]
 8005bb6:	e7d9      	b.n	8005b6c <_malloc_r+0x64>
 8005bb8:	bd70      	pop	{r4, r5, r6, pc}
 8005bba:	bf00      	nop
 8005bbc:	20001638 	.word	0x20001638
 8005bc0:	2000163c 	.word	0x2000163c

08005bc4 <_realloc_r>:
 8005bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005bc6:	4607      	mov	r7, r0
 8005bc8:	4614      	mov	r4, r2
 8005bca:	460e      	mov	r6, r1
 8005bcc:	b921      	cbnz	r1, 8005bd8 <_realloc_r+0x14>
 8005bce:	4611      	mov	r1, r2
 8005bd0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005bd4:	f7ff baac 	b.w	8005130 <__wrap__malloc_r>
 8005bd8:	b922      	cbnz	r2, 8005be4 <_realloc_r+0x20>
 8005bda:	f7ff faad 	bl	8005138 <__wrap__free_r>
 8005bde:	4625      	mov	r5, r4
 8005be0:	4628      	mov	r0, r5
 8005be2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005be4:	f000 fa64 	bl	80060b0 <_malloc_usable_size_r>
 8005be8:	4284      	cmp	r4, r0
 8005bea:	d90f      	bls.n	8005c0c <_realloc_r+0x48>
 8005bec:	4621      	mov	r1, r4
 8005bee:	4638      	mov	r0, r7
 8005bf0:	f7ff fa9e 	bl	8005130 <__wrap__malloc_r>
 8005bf4:	4605      	mov	r5, r0
 8005bf6:	2800      	cmp	r0, #0
 8005bf8:	d0f2      	beq.n	8005be0 <_realloc_r+0x1c>
 8005bfa:	4631      	mov	r1, r6
 8005bfc:	4622      	mov	r2, r4
 8005bfe:	f7ff ff07 	bl	8005a10 <memcpy>
 8005c02:	4631      	mov	r1, r6
 8005c04:	4638      	mov	r0, r7
 8005c06:	f7ff fa97 	bl	8005138 <__wrap__free_r>
 8005c0a:	e7e9      	b.n	8005be0 <_realloc_r+0x1c>
 8005c0c:	4635      	mov	r5, r6
 8005c0e:	e7e7      	b.n	8005be0 <_realloc_r+0x1c>

08005c10 <_printf_common>:
 8005c10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005c14:	4691      	mov	r9, r2
 8005c16:	461f      	mov	r7, r3
 8005c18:	688a      	ldr	r2, [r1, #8]
 8005c1a:	690b      	ldr	r3, [r1, #16]
 8005c1c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005c20:	4293      	cmp	r3, r2
 8005c22:	bfb8      	it	lt
 8005c24:	4613      	movlt	r3, r2
 8005c26:	f8c9 3000 	str.w	r3, [r9]
 8005c2a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005c2e:	4606      	mov	r6, r0
 8005c30:	460c      	mov	r4, r1
 8005c32:	b112      	cbz	r2, 8005c3a <_printf_common+0x2a>
 8005c34:	3301      	adds	r3, #1
 8005c36:	f8c9 3000 	str.w	r3, [r9]
 8005c3a:	6823      	ldr	r3, [r4, #0]
 8005c3c:	0699      	lsls	r1, r3, #26
 8005c3e:	bf42      	ittt	mi
 8005c40:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005c44:	3302      	addmi	r3, #2
 8005c46:	f8c9 3000 	strmi.w	r3, [r9]
 8005c4a:	6825      	ldr	r5, [r4, #0]
 8005c4c:	f015 0506 	ands.w	r5, r5, #6
 8005c50:	d107      	bne.n	8005c62 <_printf_common+0x52>
 8005c52:	f104 0a19 	add.w	r10, r4, #25
 8005c56:	68e3      	ldr	r3, [r4, #12]
 8005c58:	f8d9 2000 	ldr.w	r2, [r9]
 8005c5c:	1a9b      	subs	r3, r3, r2
 8005c5e:	429d      	cmp	r5, r3
 8005c60:	db29      	blt.n	8005cb6 <_printf_common+0xa6>
 8005c62:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8005c66:	6822      	ldr	r2, [r4, #0]
 8005c68:	3300      	adds	r3, #0
 8005c6a:	bf18      	it	ne
 8005c6c:	2301      	movne	r3, #1
 8005c6e:	0692      	lsls	r2, r2, #26
 8005c70:	d42e      	bmi.n	8005cd0 <_printf_common+0xc0>
 8005c72:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005c76:	4639      	mov	r1, r7
 8005c78:	4630      	mov	r0, r6
 8005c7a:	47c0      	blx	r8
 8005c7c:	3001      	adds	r0, #1
 8005c7e:	d021      	beq.n	8005cc4 <_printf_common+0xb4>
 8005c80:	6823      	ldr	r3, [r4, #0]
 8005c82:	68e5      	ldr	r5, [r4, #12]
 8005c84:	f8d9 2000 	ldr.w	r2, [r9]
 8005c88:	f003 0306 	and.w	r3, r3, #6
 8005c8c:	2b04      	cmp	r3, #4
 8005c8e:	bf08      	it	eq
 8005c90:	1aad      	subeq	r5, r5, r2
 8005c92:	68a3      	ldr	r3, [r4, #8]
 8005c94:	6922      	ldr	r2, [r4, #16]
 8005c96:	bf0c      	ite	eq
 8005c98:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005c9c:	2500      	movne	r5, #0
 8005c9e:	4293      	cmp	r3, r2
 8005ca0:	bfc4      	itt	gt
 8005ca2:	1a9b      	subgt	r3, r3, r2
 8005ca4:	18ed      	addgt	r5, r5, r3
 8005ca6:	f04f 0900 	mov.w	r9, #0
 8005caa:	341a      	adds	r4, #26
 8005cac:	454d      	cmp	r5, r9
 8005cae:	d11b      	bne.n	8005ce8 <_printf_common+0xd8>
 8005cb0:	2000      	movs	r0, #0
 8005cb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	4652      	mov	r2, r10
 8005cba:	4639      	mov	r1, r7
 8005cbc:	4630      	mov	r0, r6
 8005cbe:	47c0      	blx	r8
 8005cc0:	3001      	adds	r0, #1
 8005cc2:	d103      	bne.n	8005ccc <_printf_common+0xbc>
 8005cc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005cc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005ccc:	3501      	adds	r5, #1
 8005cce:	e7c2      	b.n	8005c56 <_printf_common+0x46>
 8005cd0:	18e1      	adds	r1, r4, r3
 8005cd2:	1c5a      	adds	r2, r3, #1
 8005cd4:	2030      	movs	r0, #48	; 0x30
 8005cd6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005cda:	4422      	add	r2, r4
 8005cdc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005ce0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005ce4:	3302      	adds	r3, #2
 8005ce6:	e7c4      	b.n	8005c72 <_printf_common+0x62>
 8005ce8:	2301      	movs	r3, #1
 8005cea:	4622      	mov	r2, r4
 8005cec:	4639      	mov	r1, r7
 8005cee:	4630      	mov	r0, r6
 8005cf0:	47c0      	blx	r8
 8005cf2:	3001      	adds	r0, #1
 8005cf4:	d0e6      	beq.n	8005cc4 <_printf_common+0xb4>
 8005cf6:	f109 0901 	add.w	r9, r9, #1
 8005cfa:	e7d7      	b.n	8005cac <_printf_common+0x9c>

08005cfc <_printf_i>:
 8005cfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005d00:	4617      	mov	r7, r2
 8005d02:	7e0a      	ldrb	r2, [r1, #24]
 8005d04:	b085      	sub	sp, #20
 8005d06:	2a6e      	cmp	r2, #110	; 0x6e
 8005d08:	4698      	mov	r8, r3
 8005d0a:	4606      	mov	r6, r0
 8005d0c:	460c      	mov	r4, r1
 8005d0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d10:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8005d14:	f000 80bc 	beq.w	8005e90 <_printf_i+0x194>
 8005d18:	d81a      	bhi.n	8005d50 <_printf_i+0x54>
 8005d1a:	2a63      	cmp	r2, #99	; 0x63
 8005d1c:	d02e      	beq.n	8005d7c <_printf_i+0x80>
 8005d1e:	d80a      	bhi.n	8005d36 <_printf_i+0x3a>
 8005d20:	2a00      	cmp	r2, #0
 8005d22:	f000 80c8 	beq.w	8005eb6 <_printf_i+0x1ba>
 8005d26:	2a58      	cmp	r2, #88	; 0x58
 8005d28:	f000 808a 	beq.w	8005e40 <_printf_i+0x144>
 8005d2c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005d30:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8005d34:	e02a      	b.n	8005d8c <_printf_i+0x90>
 8005d36:	2a64      	cmp	r2, #100	; 0x64
 8005d38:	d001      	beq.n	8005d3e <_printf_i+0x42>
 8005d3a:	2a69      	cmp	r2, #105	; 0x69
 8005d3c:	d1f6      	bne.n	8005d2c <_printf_i+0x30>
 8005d3e:	6821      	ldr	r1, [r4, #0]
 8005d40:	681a      	ldr	r2, [r3, #0]
 8005d42:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005d46:	d023      	beq.n	8005d90 <_printf_i+0x94>
 8005d48:	1d11      	adds	r1, r2, #4
 8005d4a:	6019      	str	r1, [r3, #0]
 8005d4c:	6813      	ldr	r3, [r2, #0]
 8005d4e:	e027      	b.n	8005da0 <_printf_i+0xa4>
 8005d50:	2a73      	cmp	r2, #115	; 0x73
 8005d52:	f000 80b4 	beq.w	8005ebe <_printf_i+0x1c2>
 8005d56:	d808      	bhi.n	8005d6a <_printf_i+0x6e>
 8005d58:	2a6f      	cmp	r2, #111	; 0x6f
 8005d5a:	d02a      	beq.n	8005db2 <_printf_i+0xb6>
 8005d5c:	2a70      	cmp	r2, #112	; 0x70
 8005d5e:	d1e5      	bne.n	8005d2c <_printf_i+0x30>
 8005d60:	680a      	ldr	r2, [r1, #0]
 8005d62:	f042 0220 	orr.w	r2, r2, #32
 8005d66:	600a      	str	r2, [r1, #0]
 8005d68:	e003      	b.n	8005d72 <_printf_i+0x76>
 8005d6a:	2a75      	cmp	r2, #117	; 0x75
 8005d6c:	d021      	beq.n	8005db2 <_printf_i+0xb6>
 8005d6e:	2a78      	cmp	r2, #120	; 0x78
 8005d70:	d1dc      	bne.n	8005d2c <_printf_i+0x30>
 8005d72:	2278      	movs	r2, #120	; 0x78
 8005d74:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8005d78:	496e      	ldr	r1, [pc, #440]	; (8005f34 <_printf_i+0x238>)
 8005d7a:	e064      	b.n	8005e46 <_printf_i+0x14a>
 8005d7c:	681a      	ldr	r2, [r3, #0]
 8005d7e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8005d82:	1d11      	adds	r1, r2, #4
 8005d84:	6019      	str	r1, [r3, #0]
 8005d86:	6813      	ldr	r3, [r2, #0]
 8005d88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005d8c:	2301      	movs	r3, #1
 8005d8e:	e0a3      	b.n	8005ed8 <_printf_i+0x1dc>
 8005d90:	f011 0f40 	tst.w	r1, #64	; 0x40
 8005d94:	f102 0104 	add.w	r1, r2, #4
 8005d98:	6019      	str	r1, [r3, #0]
 8005d9a:	d0d7      	beq.n	8005d4c <_printf_i+0x50>
 8005d9c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8005da0:	2b00      	cmp	r3, #0
 8005da2:	da03      	bge.n	8005dac <_printf_i+0xb0>
 8005da4:	222d      	movs	r2, #45	; 0x2d
 8005da6:	425b      	negs	r3, r3
 8005da8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8005dac:	4962      	ldr	r1, [pc, #392]	; (8005f38 <_printf_i+0x23c>)
 8005dae:	220a      	movs	r2, #10
 8005db0:	e017      	b.n	8005de2 <_printf_i+0xe6>
 8005db2:	6820      	ldr	r0, [r4, #0]
 8005db4:	6819      	ldr	r1, [r3, #0]
 8005db6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005dba:	d003      	beq.n	8005dc4 <_printf_i+0xc8>
 8005dbc:	1d08      	adds	r0, r1, #4
 8005dbe:	6018      	str	r0, [r3, #0]
 8005dc0:	680b      	ldr	r3, [r1, #0]
 8005dc2:	e006      	b.n	8005dd2 <_printf_i+0xd6>
 8005dc4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005dc8:	f101 0004 	add.w	r0, r1, #4
 8005dcc:	6018      	str	r0, [r3, #0]
 8005dce:	d0f7      	beq.n	8005dc0 <_printf_i+0xc4>
 8005dd0:	880b      	ldrh	r3, [r1, #0]
 8005dd2:	4959      	ldr	r1, [pc, #356]	; (8005f38 <_printf_i+0x23c>)
 8005dd4:	2a6f      	cmp	r2, #111	; 0x6f
 8005dd6:	bf14      	ite	ne
 8005dd8:	220a      	movne	r2, #10
 8005dda:	2208      	moveq	r2, #8
 8005ddc:	2000      	movs	r0, #0
 8005dde:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005de2:	6865      	ldr	r5, [r4, #4]
 8005de4:	60a5      	str	r5, [r4, #8]
 8005de6:	2d00      	cmp	r5, #0
 8005de8:	f2c0 809c 	blt.w	8005f24 <_printf_i+0x228>
 8005dec:	6820      	ldr	r0, [r4, #0]
 8005dee:	f020 0004 	bic.w	r0, r0, #4
 8005df2:	6020      	str	r0, [r4, #0]
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	d13f      	bne.n	8005e78 <_printf_i+0x17c>
 8005df8:	2d00      	cmp	r5, #0
 8005dfa:	f040 8095 	bne.w	8005f28 <_printf_i+0x22c>
 8005dfe:	4675      	mov	r5, lr
 8005e00:	2a08      	cmp	r2, #8
 8005e02:	d10b      	bne.n	8005e1c <_printf_i+0x120>
 8005e04:	6823      	ldr	r3, [r4, #0]
 8005e06:	07da      	lsls	r2, r3, #31
 8005e08:	d508      	bpl.n	8005e1c <_printf_i+0x120>
 8005e0a:	6923      	ldr	r3, [r4, #16]
 8005e0c:	6862      	ldr	r2, [r4, #4]
 8005e0e:	429a      	cmp	r2, r3
 8005e10:	bfde      	ittt	le
 8005e12:	2330      	movle	r3, #48	; 0x30
 8005e14:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005e18:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8005e1c:	ebae 0305 	sub.w	r3, lr, r5
 8005e20:	6123      	str	r3, [r4, #16]
 8005e22:	f8cd 8000 	str.w	r8, [sp]
 8005e26:	463b      	mov	r3, r7
 8005e28:	aa03      	add	r2, sp, #12
 8005e2a:	4621      	mov	r1, r4
 8005e2c:	4630      	mov	r0, r6
 8005e2e:	f7ff feef 	bl	8005c10 <_printf_common>
 8005e32:	3001      	adds	r0, #1
 8005e34:	d155      	bne.n	8005ee2 <_printf_i+0x1e6>
 8005e36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005e3a:	b005      	add	sp, #20
 8005e3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005e40:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005e44:	493c      	ldr	r1, [pc, #240]	; (8005f38 <_printf_i+0x23c>)
 8005e46:	6822      	ldr	r2, [r4, #0]
 8005e48:	6818      	ldr	r0, [r3, #0]
 8005e4a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8005e4e:	f100 0504 	add.w	r5, r0, #4
 8005e52:	601d      	str	r5, [r3, #0]
 8005e54:	d001      	beq.n	8005e5a <_printf_i+0x15e>
 8005e56:	6803      	ldr	r3, [r0, #0]
 8005e58:	e002      	b.n	8005e60 <_printf_i+0x164>
 8005e5a:	0655      	lsls	r5, r2, #25
 8005e5c:	d5fb      	bpl.n	8005e56 <_printf_i+0x15a>
 8005e5e:	8803      	ldrh	r3, [r0, #0]
 8005e60:	07d0      	lsls	r0, r2, #31
 8005e62:	bf44      	itt	mi
 8005e64:	f042 0220 	orrmi.w	r2, r2, #32
 8005e68:	6022      	strmi	r2, [r4, #0]
 8005e6a:	b91b      	cbnz	r3, 8005e74 <_printf_i+0x178>
 8005e6c:	6822      	ldr	r2, [r4, #0]
 8005e6e:	f022 0220 	bic.w	r2, r2, #32
 8005e72:	6022      	str	r2, [r4, #0]
 8005e74:	2210      	movs	r2, #16
 8005e76:	e7b1      	b.n	8005ddc <_printf_i+0xe0>
 8005e78:	4675      	mov	r5, lr
 8005e7a:	fbb3 f0f2 	udiv	r0, r3, r2
 8005e7e:	fb02 3310 	mls	r3, r2, r0, r3
 8005e82:	5ccb      	ldrb	r3, [r1, r3]
 8005e84:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005e88:	4603      	mov	r3, r0
 8005e8a:	2800      	cmp	r0, #0
 8005e8c:	d1f5      	bne.n	8005e7a <_printf_i+0x17e>
 8005e8e:	e7b7      	b.n	8005e00 <_printf_i+0x104>
 8005e90:	6808      	ldr	r0, [r1, #0]
 8005e92:	681a      	ldr	r2, [r3, #0]
 8005e94:	6949      	ldr	r1, [r1, #20]
 8005e96:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005e9a:	d004      	beq.n	8005ea6 <_printf_i+0x1aa>
 8005e9c:	1d10      	adds	r0, r2, #4
 8005e9e:	6018      	str	r0, [r3, #0]
 8005ea0:	6813      	ldr	r3, [r2, #0]
 8005ea2:	6019      	str	r1, [r3, #0]
 8005ea4:	e007      	b.n	8005eb6 <_printf_i+0x1ba>
 8005ea6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005eaa:	f102 0004 	add.w	r0, r2, #4
 8005eae:	6018      	str	r0, [r3, #0]
 8005eb0:	6813      	ldr	r3, [r2, #0]
 8005eb2:	d0f6      	beq.n	8005ea2 <_printf_i+0x1a6>
 8005eb4:	8019      	strh	r1, [r3, #0]
 8005eb6:	2300      	movs	r3, #0
 8005eb8:	6123      	str	r3, [r4, #16]
 8005eba:	4675      	mov	r5, lr
 8005ebc:	e7b1      	b.n	8005e22 <_printf_i+0x126>
 8005ebe:	681a      	ldr	r2, [r3, #0]
 8005ec0:	1d11      	adds	r1, r2, #4
 8005ec2:	6019      	str	r1, [r3, #0]
 8005ec4:	6815      	ldr	r5, [r2, #0]
 8005ec6:	6862      	ldr	r2, [r4, #4]
 8005ec8:	2100      	movs	r1, #0
 8005eca:	4628      	mov	r0, r5
 8005ecc:	f7ff fd50 	bl	8005970 <memchr>
 8005ed0:	b108      	cbz	r0, 8005ed6 <_printf_i+0x1da>
 8005ed2:	1b40      	subs	r0, r0, r5
 8005ed4:	6060      	str	r0, [r4, #4]
 8005ed6:	6863      	ldr	r3, [r4, #4]
 8005ed8:	6123      	str	r3, [r4, #16]
 8005eda:	2300      	movs	r3, #0
 8005edc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005ee0:	e79f      	b.n	8005e22 <_printf_i+0x126>
 8005ee2:	6923      	ldr	r3, [r4, #16]
 8005ee4:	462a      	mov	r2, r5
 8005ee6:	4639      	mov	r1, r7
 8005ee8:	4630      	mov	r0, r6
 8005eea:	47c0      	blx	r8
 8005eec:	3001      	adds	r0, #1
 8005eee:	d0a2      	beq.n	8005e36 <_printf_i+0x13a>
 8005ef0:	6823      	ldr	r3, [r4, #0]
 8005ef2:	079b      	lsls	r3, r3, #30
 8005ef4:	d507      	bpl.n	8005f06 <_printf_i+0x20a>
 8005ef6:	2500      	movs	r5, #0
 8005ef8:	f104 0919 	add.w	r9, r4, #25
 8005efc:	68e3      	ldr	r3, [r4, #12]
 8005efe:	9a03      	ldr	r2, [sp, #12]
 8005f00:	1a9b      	subs	r3, r3, r2
 8005f02:	429d      	cmp	r5, r3
 8005f04:	db05      	blt.n	8005f12 <_printf_i+0x216>
 8005f06:	68e0      	ldr	r0, [r4, #12]
 8005f08:	9b03      	ldr	r3, [sp, #12]
 8005f0a:	4298      	cmp	r0, r3
 8005f0c:	bfb8      	it	lt
 8005f0e:	4618      	movlt	r0, r3
 8005f10:	e793      	b.n	8005e3a <_printf_i+0x13e>
 8005f12:	2301      	movs	r3, #1
 8005f14:	464a      	mov	r2, r9
 8005f16:	4639      	mov	r1, r7
 8005f18:	4630      	mov	r0, r6
 8005f1a:	47c0      	blx	r8
 8005f1c:	3001      	adds	r0, #1
 8005f1e:	d08a      	beq.n	8005e36 <_printf_i+0x13a>
 8005f20:	3501      	adds	r5, #1
 8005f22:	e7eb      	b.n	8005efc <_printf_i+0x200>
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d1a7      	bne.n	8005e78 <_printf_i+0x17c>
 8005f28:	780b      	ldrb	r3, [r1, #0]
 8005f2a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005f2e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005f32:	e765      	b.n	8005e00 <_printf_i+0x104>
 8005f34:	08006c39 	.word	0x08006c39
 8005f38:	08006c28 	.word	0x08006c28

08005f3c <realloc>:
 8005f3c:	4b02      	ldr	r3, [pc, #8]	; (8005f48 <realloc+0xc>)
 8005f3e:	460a      	mov	r2, r1
 8005f40:	4601      	mov	r1, r0
 8005f42:	6818      	ldr	r0, [r3, #0]
 8005f44:	f7ff b8f6 	b.w	8005134 <__wrap__realloc_r>
 8005f48:	200001ac 	.word	0x200001ac

08005f4c <_sbrk_r>:
 8005f4c:	b538      	push	{r3, r4, r5, lr}
 8005f4e:	4c06      	ldr	r4, [pc, #24]	; (8005f68 <_sbrk_r+0x1c>)
 8005f50:	2300      	movs	r3, #0
 8005f52:	4605      	mov	r5, r0
 8005f54:	4608      	mov	r0, r1
 8005f56:	6023      	str	r3, [r4, #0]
 8005f58:	f7ff f9d6 	bl	8005308 <_sbrk>
 8005f5c:	1c43      	adds	r3, r0, #1
 8005f5e:	d102      	bne.n	8005f66 <_sbrk_r+0x1a>
 8005f60:	6823      	ldr	r3, [r4, #0]
 8005f62:	b103      	cbz	r3, 8005f66 <_sbrk_r+0x1a>
 8005f64:	602b      	str	r3, [r5, #0]
 8005f66:	bd38      	pop	{r3, r4, r5, pc}
 8005f68:	20001ee8 	.word	0x20001ee8

08005f6c <__sread>:
 8005f6c:	b510      	push	{r4, lr}
 8005f6e:	460c      	mov	r4, r1
 8005f70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005f74:	f000 f9f4 	bl	8006360 <_read_r>
 8005f78:	2800      	cmp	r0, #0
 8005f7a:	bfab      	itete	ge
 8005f7c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005f7e:	89a3      	ldrhlt	r3, [r4, #12]
 8005f80:	181b      	addge	r3, r3, r0
 8005f82:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005f86:	bfac      	ite	ge
 8005f88:	6563      	strge	r3, [r4, #84]	; 0x54
 8005f8a:	81a3      	strhlt	r3, [r4, #12]
 8005f8c:	bd10      	pop	{r4, pc}

08005f8e <__swrite>:
 8005f8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f92:	461f      	mov	r7, r3
 8005f94:	898b      	ldrh	r3, [r1, #12]
 8005f96:	05db      	lsls	r3, r3, #23
 8005f98:	4605      	mov	r5, r0
 8005f9a:	460c      	mov	r4, r1
 8005f9c:	4616      	mov	r6, r2
 8005f9e:	d505      	bpl.n	8005fac <__swrite+0x1e>
 8005fa0:	2302      	movs	r3, #2
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fa8:	f000 f870 	bl	800608c <_lseek_r>
 8005fac:	89a3      	ldrh	r3, [r4, #12]
 8005fae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005fb2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005fb6:	81a3      	strh	r3, [r4, #12]
 8005fb8:	4632      	mov	r2, r6
 8005fba:	463b      	mov	r3, r7
 8005fbc:	4628      	mov	r0, r5
 8005fbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005fc2:	f000 b841 	b.w	8006048 <_write_r>

08005fc6 <__sseek>:
 8005fc6:	b510      	push	{r4, lr}
 8005fc8:	460c      	mov	r4, r1
 8005fca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fce:	f000 f85d 	bl	800608c <_lseek_r>
 8005fd2:	1c43      	adds	r3, r0, #1
 8005fd4:	89a3      	ldrh	r3, [r4, #12]
 8005fd6:	bf15      	itete	ne
 8005fd8:	6560      	strne	r0, [r4, #84]	; 0x54
 8005fda:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005fde:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005fe2:	81a3      	strheq	r3, [r4, #12]
 8005fe4:	bf18      	it	ne
 8005fe6:	81a3      	strhne	r3, [r4, #12]
 8005fe8:	bd10      	pop	{r4, pc}

08005fea <__sclose>:
 8005fea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fee:	f000 b83d 	b.w	800606c <_close_r>

08005ff2 <strlen>:
 8005ff2:	4603      	mov	r3, r0
 8005ff4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ff8:	2a00      	cmp	r2, #0
 8005ffa:	d1fb      	bne.n	8005ff4 <strlen+0x2>
 8005ffc:	1a18      	subs	r0, r3, r0
 8005ffe:	3801      	subs	r0, #1
 8006000:	4770      	bx	lr

08006002 <_vsiprintf_r>:
 8006002:	b510      	push	{r4, lr}
 8006004:	b09a      	sub	sp, #104	; 0x68
 8006006:	f44f 7402 	mov.w	r4, #520	; 0x208
 800600a:	9100      	str	r1, [sp, #0]
 800600c:	9104      	str	r1, [sp, #16]
 800600e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006012:	9102      	str	r1, [sp, #8]
 8006014:	9105      	str	r1, [sp, #20]
 8006016:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800601a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800601e:	4669      	mov	r1, sp
 8006020:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006024:	f000 f8a8 	bl	8006178 <_svfiprintf_r>
 8006028:	9b00      	ldr	r3, [sp, #0]
 800602a:	2200      	movs	r2, #0
 800602c:	701a      	strb	r2, [r3, #0]
 800602e:	b01a      	add	sp, #104	; 0x68
 8006030:	bd10      	pop	{r4, pc}
	...

08006034 <vsiprintf>:
 8006034:	4613      	mov	r3, r2
 8006036:	460a      	mov	r2, r1
 8006038:	4601      	mov	r1, r0
 800603a:	4802      	ldr	r0, [pc, #8]	; (8006044 <vsiprintf+0x10>)
 800603c:	6800      	ldr	r0, [r0, #0]
 800603e:	f7ff bfe0 	b.w	8006002 <_vsiprintf_r>
 8006042:	bf00      	nop
 8006044:	200001ac 	.word	0x200001ac

08006048 <_write_r>:
 8006048:	b538      	push	{r3, r4, r5, lr}
 800604a:	4c07      	ldr	r4, [pc, #28]	; (8006068 <_write_r+0x20>)
 800604c:	4605      	mov	r5, r0
 800604e:	4608      	mov	r0, r1
 8006050:	4611      	mov	r1, r2
 8006052:	2200      	movs	r2, #0
 8006054:	6022      	str	r2, [r4, #0]
 8006056:	461a      	mov	r2, r3
 8006058:	f7ff f8c4 	bl	80051e4 <_write>
 800605c:	1c43      	adds	r3, r0, #1
 800605e:	d102      	bne.n	8006066 <_write_r+0x1e>
 8006060:	6823      	ldr	r3, [r4, #0]
 8006062:	b103      	cbz	r3, 8006066 <_write_r+0x1e>
 8006064:	602b      	str	r3, [r5, #0]
 8006066:	bd38      	pop	{r3, r4, r5, pc}
 8006068:	20001ee8 	.word	0x20001ee8

0800606c <_close_r>:
 800606c:	b538      	push	{r3, r4, r5, lr}
 800606e:	4c06      	ldr	r4, [pc, #24]	; (8006088 <_close_r+0x1c>)
 8006070:	2300      	movs	r3, #0
 8006072:	4605      	mov	r5, r0
 8006074:	4608      	mov	r0, r1
 8006076:	6023      	str	r3, [r4, #0]
 8006078:	f7ff f894 	bl	80051a4 <_close>
 800607c:	1c43      	adds	r3, r0, #1
 800607e:	d102      	bne.n	8006086 <_close_r+0x1a>
 8006080:	6823      	ldr	r3, [r4, #0]
 8006082:	b103      	cbz	r3, 8006086 <_close_r+0x1a>
 8006084:	602b      	str	r3, [r5, #0]
 8006086:	bd38      	pop	{r3, r4, r5, pc}
 8006088:	20001ee8 	.word	0x20001ee8

0800608c <_lseek_r>:
 800608c:	b538      	push	{r3, r4, r5, lr}
 800608e:	4c07      	ldr	r4, [pc, #28]	; (80060ac <_lseek_r+0x20>)
 8006090:	4605      	mov	r5, r0
 8006092:	4608      	mov	r0, r1
 8006094:	4611      	mov	r1, r2
 8006096:	2200      	movs	r2, #0
 8006098:	6022      	str	r2, [r4, #0]
 800609a:	461a      	mov	r2, r3
 800609c:	f7ff f908 	bl	80052b0 <_lseek>
 80060a0:	1c43      	adds	r3, r0, #1
 80060a2:	d102      	bne.n	80060aa <_lseek_r+0x1e>
 80060a4:	6823      	ldr	r3, [r4, #0]
 80060a6:	b103      	cbz	r3, 80060aa <_lseek_r+0x1e>
 80060a8:	602b      	str	r3, [r5, #0]
 80060aa:	bd38      	pop	{r3, r4, r5, pc}
 80060ac:	20001ee8 	.word	0x20001ee8

080060b0 <_malloc_usable_size_r>:
 80060b0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80060b4:	2800      	cmp	r0, #0
 80060b6:	f1a0 0004 	sub.w	r0, r0, #4
 80060ba:	bfbc      	itt	lt
 80060bc:	580b      	ldrlt	r3, [r1, r0]
 80060be:	18c0      	addlt	r0, r0, r3
 80060c0:	4770      	bx	lr

080060c2 <__ssputs_r>:
 80060c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80060c6:	688e      	ldr	r6, [r1, #8]
 80060c8:	429e      	cmp	r6, r3
 80060ca:	4682      	mov	r10, r0
 80060cc:	460c      	mov	r4, r1
 80060ce:	4691      	mov	r9, r2
 80060d0:	4698      	mov	r8, r3
 80060d2:	d835      	bhi.n	8006140 <__ssputs_r+0x7e>
 80060d4:	898a      	ldrh	r2, [r1, #12]
 80060d6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80060da:	d031      	beq.n	8006140 <__ssputs_r+0x7e>
 80060dc:	6825      	ldr	r5, [r4, #0]
 80060de:	6909      	ldr	r1, [r1, #16]
 80060e0:	1a6f      	subs	r7, r5, r1
 80060e2:	6965      	ldr	r5, [r4, #20]
 80060e4:	2302      	movs	r3, #2
 80060e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80060ea:	fb95 f5f3 	sdiv	r5, r5, r3
 80060ee:	f108 0301 	add.w	r3, r8, #1
 80060f2:	443b      	add	r3, r7
 80060f4:	429d      	cmp	r5, r3
 80060f6:	bf38      	it	cc
 80060f8:	461d      	movcc	r5, r3
 80060fa:	0553      	lsls	r3, r2, #21
 80060fc:	d531      	bpl.n	8006162 <__ssputs_r+0xa0>
 80060fe:	4629      	mov	r1, r5
 8006100:	f7ff f816 	bl	8005130 <__wrap__malloc_r>
 8006104:	4606      	mov	r6, r0
 8006106:	b950      	cbnz	r0, 800611e <__ssputs_r+0x5c>
 8006108:	230c      	movs	r3, #12
 800610a:	f8ca 3000 	str.w	r3, [r10]
 800610e:	89a3      	ldrh	r3, [r4, #12]
 8006110:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006114:	81a3      	strh	r3, [r4, #12]
 8006116:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800611a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800611e:	463a      	mov	r2, r7
 8006120:	6921      	ldr	r1, [r4, #16]
 8006122:	f7ff fc75 	bl	8005a10 <memcpy>
 8006126:	89a3      	ldrh	r3, [r4, #12]
 8006128:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800612c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006130:	81a3      	strh	r3, [r4, #12]
 8006132:	6126      	str	r6, [r4, #16]
 8006134:	6165      	str	r5, [r4, #20]
 8006136:	443e      	add	r6, r7
 8006138:	1bed      	subs	r5, r5, r7
 800613a:	6026      	str	r6, [r4, #0]
 800613c:	60a5      	str	r5, [r4, #8]
 800613e:	4646      	mov	r6, r8
 8006140:	4546      	cmp	r6, r8
 8006142:	bf28      	it	cs
 8006144:	4646      	movcs	r6, r8
 8006146:	4632      	mov	r2, r6
 8006148:	4649      	mov	r1, r9
 800614a:	6820      	ldr	r0, [r4, #0]
 800614c:	f7ff fc6b 	bl	8005a26 <memmove>
 8006150:	68a3      	ldr	r3, [r4, #8]
 8006152:	1b9b      	subs	r3, r3, r6
 8006154:	60a3      	str	r3, [r4, #8]
 8006156:	6823      	ldr	r3, [r4, #0]
 8006158:	441e      	add	r6, r3
 800615a:	6026      	str	r6, [r4, #0]
 800615c:	2000      	movs	r0, #0
 800615e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006162:	462a      	mov	r2, r5
 8006164:	f7fe ffe6 	bl	8005134 <__wrap__realloc_r>
 8006168:	4606      	mov	r6, r0
 800616a:	2800      	cmp	r0, #0
 800616c:	d1e1      	bne.n	8006132 <__ssputs_r+0x70>
 800616e:	6921      	ldr	r1, [r4, #16]
 8006170:	4650      	mov	r0, r10
 8006172:	f7fe ffe1 	bl	8005138 <__wrap__free_r>
 8006176:	e7c7      	b.n	8006108 <__ssputs_r+0x46>

08006178 <_svfiprintf_r>:
 8006178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800617c:	b09d      	sub	sp, #116	; 0x74
 800617e:	4680      	mov	r8, r0
 8006180:	9303      	str	r3, [sp, #12]
 8006182:	898b      	ldrh	r3, [r1, #12]
 8006184:	061c      	lsls	r4, r3, #24
 8006186:	460d      	mov	r5, r1
 8006188:	4616      	mov	r6, r2
 800618a:	d50f      	bpl.n	80061ac <_svfiprintf_r+0x34>
 800618c:	690b      	ldr	r3, [r1, #16]
 800618e:	b96b      	cbnz	r3, 80061ac <_svfiprintf_r+0x34>
 8006190:	2140      	movs	r1, #64	; 0x40
 8006192:	f7fe ffcd 	bl	8005130 <__wrap__malloc_r>
 8006196:	6028      	str	r0, [r5, #0]
 8006198:	6128      	str	r0, [r5, #16]
 800619a:	b928      	cbnz	r0, 80061a8 <_svfiprintf_r+0x30>
 800619c:	230c      	movs	r3, #12
 800619e:	f8c8 3000 	str.w	r3, [r8]
 80061a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061a6:	e0c5      	b.n	8006334 <_svfiprintf_r+0x1bc>
 80061a8:	2340      	movs	r3, #64	; 0x40
 80061aa:	616b      	str	r3, [r5, #20]
 80061ac:	2300      	movs	r3, #0
 80061ae:	9309      	str	r3, [sp, #36]	; 0x24
 80061b0:	2320      	movs	r3, #32
 80061b2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80061b6:	2330      	movs	r3, #48	; 0x30
 80061b8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80061bc:	f04f 0b01 	mov.w	r11, #1
 80061c0:	4637      	mov	r7, r6
 80061c2:	463c      	mov	r4, r7
 80061c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d13c      	bne.n	8006246 <_svfiprintf_r+0xce>
 80061cc:	ebb7 0a06 	subs.w	r10, r7, r6
 80061d0:	d00b      	beq.n	80061ea <_svfiprintf_r+0x72>
 80061d2:	4653      	mov	r3, r10
 80061d4:	4632      	mov	r2, r6
 80061d6:	4629      	mov	r1, r5
 80061d8:	4640      	mov	r0, r8
 80061da:	f7ff ff72 	bl	80060c2 <__ssputs_r>
 80061de:	3001      	adds	r0, #1
 80061e0:	f000 80a3 	beq.w	800632a <_svfiprintf_r+0x1b2>
 80061e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061e6:	4453      	add	r3, r10
 80061e8:	9309      	str	r3, [sp, #36]	; 0x24
 80061ea:	783b      	ldrb	r3, [r7, #0]
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	f000 809c 	beq.w	800632a <_svfiprintf_r+0x1b2>
 80061f2:	2300      	movs	r3, #0
 80061f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80061f8:	9304      	str	r3, [sp, #16]
 80061fa:	9307      	str	r3, [sp, #28]
 80061fc:	9205      	str	r2, [sp, #20]
 80061fe:	9306      	str	r3, [sp, #24]
 8006200:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006204:	931a      	str	r3, [sp, #104]	; 0x68
 8006206:	2205      	movs	r2, #5
 8006208:	7821      	ldrb	r1, [r4, #0]
 800620a:	4850      	ldr	r0, [pc, #320]	; (800634c <_svfiprintf_r+0x1d4>)
 800620c:	f7ff fbb0 	bl	8005970 <memchr>
 8006210:	1c67      	adds	r7, r4, #1
 8006212:	9b04      	ldr	r3, [sp, #16]
 8006214:	b9d8      	cbnz	r0, 800624e <_svfiprintf_r+0xd6>
 8006216:	06d9      	lsls	r1, r3, #27
 8006218:	bf44      	itt	mi
 800621a:	2220      	movmi	r2, #32
 800621c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006220:	071a      	lsls	r2, r3, #28
 8006222:	bf44      	itt	mi
 8006224:	222b      	movmi	r2, #43	; 0x2b
 8006226:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800622a:	7822      	ldrb	r2, [r4, #0]
 800622c:	2a2a      	cmp	r2, #42	; 0x2a
 800622e:	d016      	beq.n	800625e <_svfiprintf_r+0xe6>
 8006230:	9a07      	ldr	r2, [sp, #28]
 8006232:	2100      	movs	r1, #0
 8006234:	200a      	movs	r0, #10
 8006236:	4627      	mov	r7, r4
 8006238:	3401      	adds	r4, #1
 800623a:	783b      	ldrb	r3, [r7, #0]
 800623c:	3b30      	subs	r3, #48	; 0x30
 800623e:	2b09      	cmp	r3, #9
 8006240:	d951      	bls.n	80062e6 <_svfiprintf_r+0x16e>
 8006242:	b1c9      	cbz	r1, 8006278 <_svfiprintf_r+0x100>
 8006244:	e011      	b.n	800626a <_svfiprintf_r+0xf2>
 8006246:	2b25      	cmp	r3, #37	; 0x25
 8006248:	d0c0      	beq.n	80061cc <_svfiprintf_r+0x54>
 800624a:	4627      	mov	r7, r4
 800624c:	e7b9      	b.n	80061c2 <_svfiprintf_r+0x4a>
 800624e:	4a3f      	ldr	r2, [pc, #252]	; (800634c <_svfiprintf_r+0x1d4>)
 8006250:	1a80      	subs	r0, r0, r2
 8006252:	fa0b f000 	lsl.w	r0, r11, r0
 8006256:	4318      	orrs	r0, r3
 8006258:	9004      	str	r0, [sp, #16]
 800625a:	463c      	mov	r4, r7
 800625c:	e7d3      	b.n	8006206 <_svfiprintf_r+0x8e>
 800625e:	9a03      	ldr	r2, [sp, #12]
 8006260:	1d11      	adds	r1, r2, #4
 8006262:	6812      	ldr	r2, [r2, #0]
 8006264:	9103      	str	r1, [sp, #12]
 8006266:	2a00      	cmp	r2, #0
 8006268:	db01      	blt.n	800626e <_svfiprintf_r+0xf6>
 800626a:	9207      	str	r2, [sp, #28]
 800626c:	e004      	b.n	8006278 <_svfiprintf_r+0x100>
 800626e:	4252      	negs	r2, r2
 8006270:	f043 0302 	orr.w	r3, r3, #2
 8006274:	9207      	str	r2, [sp, #28]
 8006276:	9304      	str	r3, [sp, #16]
 8006278:	783b      	ldrb	r3, [r7, #0]
 800627a:	2b2e      	cmp	r3, #46	; 0x2e
 800627c:	d10e      	bne.n	800629c <_svfiprintf_r+0x124>
 800627e:	787b      	ldrb	r3, [r7, #1]
 8006280:	2b2a      	cmp	r3, #42	; 0x2a
 8006282:	f107 0101 	add.w	r1, r7, #1
 8006286:	d132      	bne.n	80062ee <_svfiprintf_r+0x176>
 8006288:	9b03      	ldr	r3, [sp, #12]
 800628a:	1d1a      	adds	r2, r3, #4
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	9203      	str	r2, [sp, #12]
 8006290:	2b00      	cmp	r3, #0
 8006292:	bfb8      	it	lt
 8006294:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006298:	3702      	adds	r7, #2
 800629a:	9305      	str	r3, [sp, #20]
 800629c:	4c2c      	ldr	r4, [pc, #176]	; (8006350 <_svfiprintf_r+0x1d8>)
 800629e:	7839      	ldrb	r1, [r7, #0]
 80062a0:	2203      	movs	r2, #3
 80062a2:	4620      	mov	r0, r4
 80062a4:	f7ff fb64 	bl	8005970 <memchr>
 80062a8:	b138      	cbz	r0, 80062ba <_svfiprintf_r+0x142>
 80062aa:	2340      	movs	r3, #64	; 0x40
 80062ac:	1b00      	subs	r0, r0, r4
 80062ae:	fa03 f000 	lsl.w	r0, r3, r0
 80062b2:	9b04      	ldr	r3, [sp, #16]
 80062b4:	4303      	orrs	r3, r0
 80062b6:	9304      	str	r3, [sp, #16]
 80062b8:	3701      	adds	r7, #1
 80062ba:	7839      	ldrb	r1, [r7, #0]
 80062bc:	4825      	ldr	r0, [pc, #148]	; (8006354 <_svfiprintf_r+0x1dc>)
 80062be:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80062c2:	2206      	movs	r2, #6
 80062c4:	1c7e      	adds	r6, r7, #1
 80062c6:	f7ff fb53 	bl	8005970 <memchr>
 80062ca:	2800      	cmp	r0, #0
 80062cc:	d035      	beq.n	800633a <_svfiprintf_r+0x1c2>
 80062ce:	4b22      	ldr	r3, [pc, #136]	; (8006358 <_svfiprintf_r+0x1e0>)
 80062d0:	b9fb      	cbnz	r3, 8006312 <_svfiprintf_r+0x19a>
 80062d2:	9b03      	ldr	r3, [sp, #12]
 80062d4:	3307      	adds	r3, #7
 80062d6:	f023 0307 	bic.w	r3, r3, #7
 80062da:	3308      	adds	r3, #8
 80062dc:	9303      	str	r3, [sp, #12]
 80062de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062e0:	444b      	add	r3, r9
 80062e2:	9309      	str	r3, [sp, #36]	; 0x24
 80062e4:	e76c      	b.n	80061c0 <_svfiprintf_r+0x48>
 80062e6:	fb00 3202 	mla	r2, r0, r2, r3
 80062ea:	2101      	movs	r1, #1
 80062ec:	e7a3      	b.n	8006236 <_svfiprintf_r+0xbe>
 80062ee:	2300      	movs	r3, #0
 80062f0:	9305      	str	r3, [sp, #20]
 80062f2:	4618      	mov	r0, r3
 80062f4:	240a      	movs	r4, #10
 80062f6:	460f      	mov	r7, r1
 80062f8:	3101      	adds	r1, #1
 80062fa:	783a      	ldrb	r2, [r7, #0]
 80062fc:	3a30      	subs	r2, #48	; 0x30
 80062fe:	2a09      	cmp	r2, #9
 8006300:	d903      	bls.n	800630a <_svfiprintf_r+0x192>
 8006302:	2b00      	cmp	r3, #0
 8006304:	d0ca      	beq.n	800629c <_svfiprintf_r+0x124>
 8006306:	9005      	str	r0, [sp, #20]
 8006308:	e7c8      	b.n	800629c <_svfiprintf_r+0x124>
 800630a:	fb04 2000 	mla	r0, r4, r0, r2
 800630e:	2301      	movs	r3, #1
 8006310:	e7f1      	b.n	80062f6 <_svfiprintf_r+0x17e>
 8006312:	ab03      	add	r3, sp, #12
 8006314:	9300      	str	r3, [sp, #0]
 8006316:	462a      	mov	r2, r5
 8006318:	4b10      	ldr	r3, [pc, #64]	; (800635c <_svfiprintf_r+0x1e4>)
 800631a:	a904      	add	r1, sp, #16
 800631c:	4640      	mov	r0, r8
 800631e:	f3af 8000 	nop.w
 8006322:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8006326:	4681      	mov	r9, r0
 8006328:	d1d9      	bne.n	80062de <_svfiprintf_r+0x166>
 800632a:	89ab      	ldrh	r3, [r5, #12]
 800632c:	065b      	lsls	r3, r3, #25
 800632e:	f53f af38 	bmi.w	80061a2 <_svfiprintf_r+0x2a>
 8006332:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006334:	b01d      	add	sp, #116	; 0x74
 8006336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800633a:	ab03      	add	r3, sp, #12
 800633c:	9300      	str	r3, [sp, #0]
 800633e:	462a      	mov	r2, r5
 8006340:	4b06      	ldr	r3, [pc, #24]	; (800635c <_svfiprintf_r+0x1e4>)
 8006342:	a904      	add	r1, sp, #16
 8006344:	4640      	mov	r0, r8
 8006346:	f7ff fcd9 	bl	8005cfc <_printf_i>
 800634a:	e7ea      	b.n	8006322 <_svfiprintf_r+0x1aa>
 800634c:	08006c4a 	.word	0x08006c4a
 8006350:	08006c50 	.word	0x08006c50
 8006354:	08006c54 	.word	0x08006c54
 8006358:	00000000 	.word	0x00000000
 800635c:	080060c3 	.word	0x080060c3

08006360 <_read_r>:
 8006360:	b538      	push	{r3, r4, r5, lr}
 8006362:	4c07      	ldr	r4, [pc, #28]	; (8006380 <_read_r+0x20>)
 8006364:	4605      	mov	r5, r0
 8006366:	4608      	mov	r0, r1
 8006368:	4611      	mov	r1, r2
 800636a:	2200      	movs	r2, #0
 800636c:	6022      	str	r2, [r4, #0]
 800636e:	461a      	mov	r2, r3
 8006370:	f7fe ff6e 	bl	8005250 <_read>
 8006374:	1c43      	adds	r3, r0, #1
 8006376:	d102      	bne.n	800637e <_read_r+0x1e>
 8006378:	6823      	ldr	r3, [r4, #0]
 800637a:	b103      	cbz	r3, 800637e <_read_r+0x1e>
 800637c:	602b      	str	r3, [r5, #0]
 800637e:	bd38      	pop	{r3, r4, r5, pc}
 8006380:	20001ee8 	.word	0x20001ee8

08006384 <fmaxf>:
 8006384:	b508      	push	{r3, lr}
 8006386:	ed2d 8b02 	vpush	{d8}
 800638a:	ee08 0a90 	vmov	s17, r0
 800638e:	ee08 1a10 	vmov	s16, r1
 8006392:	f000 f833 	bl	80063fc <__fpclassifyf>
 8006396:	b920      	cbnz	r0, 80063a2 <fmaxf+0x1e>
 8006398:	ee18 0a10 	vmov	r0, s16
 800639c:	ecbd 8b02 	vpop	{d8}
 80063a0:	bd08      	pop	{r3, pc}
 80063a2:	ee18 0a10 	vmov	r0, s16
 80063a6:	f000 f829 	bl	80063fc <__fpclassifyf>
 80063aa:	b120      	cbz	r0, 80063b6 <fmaxf+0x32>
 80063ac:	eef4 8ac8 	vcmpe.f32	s17, s16
 80063b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063b4:	ddf0      	ble.n	8006398 <fmaxf+0x14>
 80063b6:	ee18 0a90 	vmov	r0, s17
 80063ba:	ecbd 8b02 	vpop	{d8}
 80063be:	bd08      	pop	{r3, pc}

080063c0 <fminf>:
 80063c0:	b508      	push	{r3, lr}
 80063c2:	ed2d 8b02 	vpush	{d8}
 80063c6:	ee08 0a90 	vmov	s17, r0
 80063ca:	ee08 1a10 	vmov	s16, r1
 80063ce:	f000 f815 	bl	80063fc <__fpclassifyf>
 80063d2:	b920      	cbnz	r0, 80063de <fminf+0x1e>
 80063d4:	ee18 0a10 	vmov	r0, s16
 80063d8:	ecbd 8b02 	vpop	{d8}
 80063dc:	bd08      	pop	{r3, pc}
 80063de:	ee18 0a10 	vmov	r0, s16
 80063e2:	f000 f80b 	bl	80063fc <__fpclassifyf>
 80063e6:	b120      	cbz	r0, 80063f2 <fminf+0x32>
 80063e8:	eef4 8ac8 	vcmpe.f32	s17, s16
 80063ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063f0:	d5f0      	bpl.n	80063d4 <fminf+0x14>
 80063f2:	ee18 0a90 	vmov	r0, s17
 80063f6:	ecbd 8b02 	vpop	{d8}
 80063fa:	bd08      	pop	{r3, pc}

080063fc <__fpclassifyf>:
 80063fc:	f030 4000 	bics.w	r0, r0, #2147483648	; 0x80000000
 8006400:	d101      	bne.n	8006406 <__fpclassifyf+0xa>
 8006402:	2002      	movs	r0, #2
 8006404:	4770      	bx	lr
 8006406:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
 800640a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 800640e:	d201      	bcs.n	8006414 <__fpclassifyf+0x18>
 8006410:	2004      	movs	r0, #4
 8006412:	4770      	bx	lr
 8006414:	4b05      	ldr	r3, [pc, #20]	; (800642c <__fpclassifyf+0x30>)
 8006416:	1e42      	subs	r2, r0, #1
 8006418:	429a      	cmp	r2, r3
 800641a:	d801      	bhi.n	8006420 <__fpclassifyf+0x24>
 800641c:	2003      	movs	r0, #3
 800641e:	4770      	bx	lr
 8006420:	f1a0 40ff 	sub.w	r0, r0, #2139095040	; 0x7f800000
 8006424:	fab0 f080 	clz	r0, r0
 8006428:	0940      	lsrs	r0, r0, #5
 800642a:	4770      	bx	lr
 800642c:	007ffffe 	.word	0x007ffffe

08006430 <_init>:
 8006430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006432:	bf00      	nop
 8006434:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006436:	bc08      	pop	{r3}
 8006438:	469e      	mov	lr, r3
 800643a:	4770      	bx	lr

0800643c <_fini>:
 800643c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800643e:	bf00      	nop
 8006440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006442:	bc08      	pop	{r3}
 8006444:	469e      	mov	lr, r3
 8006446:	4770      	bx	lr

08006448 <vtable for std_msgs::Time>:
	...
 8006450:	01f5 0800 021d 0800 0259 0800 0261 0800     ........Y...a...

08006460 <vtable for rosserial_msgs::TopicInfo>:
	...
 8006468:	0667 0800 0741 0800 0269 0800 0271 0800     g...A...i...q...

08006478 <vtable for rosserial_msgs::Log>:
	...
 8006480:	063b 0800 070b 0800 0279 0800 0281 0800     ;.......y.......

08006490 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8006498:	0559 0800 07f7 0800 0289 0800 0291 0800     Y...............

080064a8 <vtable for std_srvs::EmptyRequest>:
	...
 80064b0:	0299 0800 029d 0800 02a1 0800 02a9 0800     ................

080064c0 <vtable for std_srvs::EmptyResponse>:
	...
 80064c8:	02b1 0800 02b5 0800 02b9 0800 02c1 0800     ................

080064d8 <vtable for AKROS_bridge::motor_cmd_single>:
	...
 80064e0:	02c9 0800 0321 0800 0349 0800 0351 0800     ....!...I...Q...

080064f0 <vtable for AKROS_bridge::motor_reply_single>:
	...
 80064f8:	0359 0800 0391 0800 03ad 0800 03b5 0800     Y...............

08006508 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8006510:	0d05 0800 0dc5 0800 040d 0800               ............

0800651c <vtable for ros::Subscriber<AKROS_bridge::motor_cmd_single, void>>:
	...
 8006524:	03e1 0800 03f9 0800 03fd 0800 0405 0800     ................

08006534 <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, void>>:
	...
 800653c:	0443 0800 03cb 0800 03d1 0800 03d9 0800     C...............

0800654c <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 800654c:	03bd 0800 03c1 0800 03c9 0800 6f6d 6f74     ............moto
 800655c:	5f72 6572 6c70 0079 6f6d 6f74 5f72 6d63     r_reply.motor_cm
 800656c:	0064 6e65 6574 5f72 6f63 746e 6f72 5f6c     d.enter_control_
 800657c:	6f6d 6564 6500 6978 5f74 6f63 746e 6f72     mode.exit_contro
 800658c:	5f6c 6f6d 6564 7300 7465 705f 736f 7469     l_mode.set_posit
 800659c:	6f69 5f6e 657a 6f72 6300 3565 3835 3834     ion_zero.ce55848
 80065ac:	3361 3864 6436 3230 3039 3531 3562 3364     a3d86d029015b5d3
 80065bc:	6339 6134 6664 6263 0034 4b41 4f52 5f53     9c4adfcb4.AKROS_
 80065cc:	7262 6469 6567 6d2f 746f 726f 635f 646d     bridge/motor_cmd
 80065dc:	735f 6e69 6c67 0065 3361 3030 3431 6233     _single.a300143b
 80065ec:	6435 3831 3462 3736 6532 6266 3666 3634     5d18b4672efbf646
 80065fc:	6333 3164 3635 3262 4100 524b 534f 625f     3cd156b2.AKROS_b
 800660c:	6972 6764 2f65 6f6d 6f74 5f72 6572 6c70     ridge/motor_repl
 800661c:	5f79 6973 676e 656c 3900 3066 3965 6238     y_single.9f0e98b
 800662c:	6164 3536 3839 3931 3638 6464 3566 6133     da65981986ddf53a
 800663c:	6166 6137 3034 3465 0039 3131 6261 3764     fa7a40e49.11abd7
 800664c:	3133 3263 3935 3333 3632 6331 3664 3831     31c25933261cd618
 800665c:	6233 3164 6432 3236 3539 7200 736f 6573     3bd12d6295.rosse
 800666c:	6972 6c61 6d5f 6773 2f73 6f4c 0067 6130     rial_msgs/Log.0a
 800667c:	3564 6631 3838 6366 3434 3938 6632 6338     d51f88fc44892f8c
 800668c:	3031 3836 3034 3737 3436 3036 3530 7200     10684077646005.r
 800669c:	736f 6573 6972 6c61 6d5f 6773 2f73 6f54     osserial_msgs/To
 80066ac:	6970 4963 666e 006f                         picInfo.

080066b4 <rosserial_msgs::REQUESTPARAM>:
 80066b4:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80066c4:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 80066d4:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 80066e4:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80066f4:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006704:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8006714:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8006724:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8006734:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 8006744:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 8006754:	3234 6537 7300                                   427e.

08006759 <std_srvs::EMPTY>:
 8006759:	7473 5f64 7273 7376 452f 706d 7974 6700          std_srvs/Empty.

08006768 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006768:	1167 0800 1159 0800 1165 0800 682f 6d6f     g...Y...e.../hom
 8006778:	2f65 6166 2f6c 6f72 2f73 696c 2f62 6f72     e/fal/ros/lib/ro
 8006788:	5f73 696c 2f62 7542 6666 7265 6465 6553     s_lib/BufferedSe
 8006798:	6972 6c61 422f 6675 6566 6572 5364 7265     rial/BufferedSer
 80067a8:	6169 2e6c 7063 0070 7325 2520 2064 7562     ial.cpp.%s %d bu
 80067b8:	6666 7265 6f20 6576 7772 6972 6574 2820     ffer overwrite (
 80067c8:	616d 5f78 7562 5f66 6973 657a 203a 6425     max_buf_size: %d
 80067d8:	6520 6378 6565 6564 3a64 2520 2964 0d21      exceeded: %d)!.
 80067e8:	000a 0000                                   ....

080067ec <vtable for BufferedSerial>:
	...
 80067f4:	4d3f 0800 4d3f 0800 11cd 0800 1225 0800     ?M..?M......%...
 8006804:	1129 0800 1135 0800 1139 0800 138f 0800     )...5...9.......
 8006814:	13a7 0800 1421 0800 13e5 0800               ....!.......

08006820 <us_data>:
 8006820:	6828 0800 09a4 2000                         (h..... 

08006828 <us_interface>:
 8006828:	36e5 0800 3705 0800 3735 0800 374d 0800     .6...7..57..M7..
 8006838:	371d 0800 6970 6d6e 7061 6d20 7369 6d2d     .7..pinmap mis-m
 8006848:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8006858:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8006868:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8006878:	6e69 756f 0074 0000                         inout...

08006880 <mp_stk_size>:
 8006880:	0210 0000                                   ....

08006884 <mp_tcb_size>:
 8006884:	01cc                                        ..

08006886 <mp_tmr_size>:
	...

08006888 <os_clockrate>:
 8006888:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006898:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 80068a8:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

080068b5 <os_fifo_size>:
 80068b5:	0110                                             .

080068b6 <os_flags>:
 80068b6:	0001                                        ..

080068b8 <os_maxtaskrun>:
 80068b8:	0007 0000                                   ....

080068bc <os_messageQ_def_osTimerMessageQ>:
 80068bc:	0004 0000 09c8 2000                         ....... 

080068c4 <os_mutex_def_env_mutex>:
 80068c4:	09e8 2000                                   ... 

080068c8 <os_mutex_def_malloc_mutex>:
 80068c8:	09f8 2000                                   ... 

080068cc <os_mutex_def_singleton_mutex>:
 80068cc:	0a08 2000                                   ... 

080068d0 <os_rrobin>:
 80068d0:	0005 0001                                   ....

080068d4 <os_stackinfo>:
 80068d4:	0200 0100                                   ....

080068d8 <os_thread_def_osTimerThread>:
 80068d8:	2815 0800 0002 0000 0001 0000 0320 0000     .(.......... ...
 80068e8:	18f8 2000                                   ... 

080068ec <os_trv>:
 80068ec:	f9ff 0000                                   ....

080068f0 <os_mutex_def_osThreadMutex>:
 80068f0:	121c 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 8006900:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8006910:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8006920:	6169 696c 657a 4320 4e41 0000               ialize CAN..

0800692c <timing_pts>:
	...
 8006934:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 8006944:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 8006954:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 8006964:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 8006974:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 8006984:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 8006994:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 80069a4:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 80069b4:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 80069c4:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 80069d4:	000f 0000 0006 0000 000f 0000 0007 0000     ................

080069e4 <ll_pin_defines>:
 80069e4:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 80069f4:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006a04:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006a14:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8006a24:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8006a34:	2065 4155 5452 000a                         e UART..

08006a3c <PinMap_CAN_RD>:
 8006a3c:	000b 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8006a4c:	ffff ffff 0000 0000                         ........

08006a54 <PinMap_CAN_TD>:
 8006a54:	000c 0000 6400 4000 0902 0000 ffff 0000     .....d.@........
 8006a64:	ffff ffff 0000 0000                         ........

08006a6c <PinMap_UART_RX>:
 8006a6c:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8006a7c:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8006a8c:	0712 0000 0014 0000 4400 4000 0712 0000     .........D.@....
 8006a9c:	0017 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 8006aac:	ffff ffff 0000 0000                         ........

08006ab4 <PinMap_UART_TX>:
 8006ab4:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8006ac4:	3800 4001 0712 0000 000e 0000 4400 4000     .8.@.........D.@
 8006ad4:	0712 0000 0013 0000 4400 4000 0712 0000     .........D.@....
 8006ae4:	0016 0000 3800 4001 0712 0000 ffff 0000     .....8.@........
 8006af4:	ffff ffff 0000 0000                         ........

08006afc <AHBPrescTable>:
	...
 8006b04:	0201 0403 0706 0908                         ........

08006b0c <APBPrescTable>:
 8006b0c:	0000 0000 0201 0403                         ........

08006b14 <aPLLMULFactorTable>:
 8006b14:	0302 0504 0706 0908 0b0a 0d0c 0f0e 1010     ................

08006b24 <aPredivFactorTable>:
 8006b24:	0201 0403 0605 0807 0a09 0c0b 0e0d 100f     ................

08006b34 <CSWTCH.45>:
 8006b34:	0400 0208                                   ....

08006b38 <vtable for mbed::RawSerial>:
	...
 8006b40:	4d3f 0800 4d3f 0800 4d41 0800 4d55 0800     ?M..?M..AM..UM..

08006b50 <vtable for mbed::CAN>:
	...
 8006b58:	4e2d 0800 4e6d 0800 4d8d 0800 4d97 0800     -N..mN...M...M..

08006b68 <vtable for mbed::SerialBase>:
	...
 8006b70:	4f8b 0800 4f8d 0800 1191 0800 11b9 0800     .O...O..........
 8006b80:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8006b90:	7475 6f20 2066 656d 6f6d 7972 0a0d 4500     ut of memory...E
 8006ba0:	7272 726f 6920 696e 6974 6c61 7a69 6e69     rror initializin
 8006bb0:	2067 6874 2065 756d 6574 2078 626f 656a     g the mutex obje
 8006bc0:	7463 000a                                   ct..

08006bc4 <__sf_fake_stderr>:
	...

08006be4 <__sf_fake_stdin>:
	...

08006c04 <__sf_fake_stdout>:
	...

08006c24 <_global_impure_ptr>:
 8006c24:	01b0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8006c34:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8006c44:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8006c54:	6665 4567 4746 0000                         efgEFG..

08006c5c <__EH_FRAME_BEGIN__>:
 8006c5c:	0000 0000                                   ....
