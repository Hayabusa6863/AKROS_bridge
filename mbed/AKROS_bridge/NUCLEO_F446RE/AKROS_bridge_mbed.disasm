
NUCLEO_F446RE/AKROS_bridge_mbed.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08005dc1


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 c1 5d 00 08 f5 5d 00 08 f5 5d 00 08     ... .]...]...]..
 8000010:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 00 00 00 00     .]...]...]......
	...
 800002c:	85 5c 00 08 f5 5d 00 08 00 00 00 00 2b 5d 00 08     .\...]......+]..
 800003c:	8b 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800004c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800005c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800006c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800007c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800008c:	fd 30 00 08 01 31 00 08 f5 5d 00 08 f1 30 00 08     .0...1...]...0..
 800009c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000ac:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000bc:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000cc:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000dc:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000ec:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80000fc:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800010c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800011c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800012c:	f5 5d 00 08 f5 5d 00 08 00 00 00 00 00 00 00 00     .]...]..........
 800013c:	11 31 00 08 15 31 00 08 f5 5d 00 08 05 31 00 08     .1...1...]...1..
 800014c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800015c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 800016c:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
	...
 8000184:	f5 5d 00 08 00 00 00 00 00 00 00 00 f5 5d 00 08     .]...........]..
	...
 800019c:	f5 5d 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .]..............
 80001ac:	f5 5d 00 08 f5 5d 00 08 f5 5d 00 08 f5 5d 00 08     .]...]...]...]..
 80001bc:	f5 5d 00 08 f5 5d 00 08                             .]...]..

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000260 	.word	0x20000260
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080073e8 	.word	0x080073e8

080001e8 <frame_dummy>:
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <frame_dummy+0x34>)
 80001ea:	b143      	cbz	r3, 80001fe <frame_dummy+0x16>
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <frame_dummy+0x38>)
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <frame_dummy+0x3c>)
 80001f0:	b510      	push	{r4, lr}
 80001f2:	f3af 8000 	nop.w
 80001f6:	480c      	ldr	r0, [pc, #48]	; (8000228 <frame_dummy+0x40>)
 80001f8:	6803      	ldr	r3, [r0, #0]
 80001fa:	b923      	cbnz	r3, 8000206 <frame_dummy+0x1e>
 80001fc:	bd10      	pop	{r4, pc}
 80001fe:	480a      	ldr	r0, [pc, #40]	; (8000228 <frame_dummy+0x40>)
 8000200:	6803      	ldr	r3, [r0, #0]
 8000202:	b933      	cbnz	r3, 8000212 <frame_dummy+0x2a>
 8000204:	4770      	bx	lr
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <frame_dummy+0x44>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d0f7      	beq.n	80001fc <frame_dummy+0x14>
 800020c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000210:	4718      	bx	r3
 8000212:	4b06      	ldr	r3, [pc, #24]	; (800022c <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f5      	beq.n	8000204 <frame_dummy+0x1c>
 8000218:	4718      	bx	r3
 800021a:	bf00      	nop
 800021c:	00000000 	.word	0x00000000
 8000220:	080073e8 	.word	0x080073e8
 8000224:	20000264 	.word	0x20000264
 8000228:	2000025c 	.word	0x2000025c
 800022c:	00000000 	.word	0x00000000

08000230 <std_msgs::Time::serialize(unsigned char*) const>:
 8000230:	6843      	ldr	r3, [r0, #4]
 8000232:	700b      	strb	r3, [r1, #0]
 8000234:	6843      	ldr	r3, [r0, #4]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	704b      	strb	r3, [r1, #1]
 800023a:	88c3      	ldrh	r3, [r0, #6]
 800023c:	708b      	strb	r3, [r1, #2]
 800023e:	79c3      	ldrb	r3, [r0, #7]
 8000240:	70cb      	strb	r3, [r1, #3]
 8000242:	6883      	ldr	r3, [r0, #8]
 8000244:	710b      	strb	r3, [r1, #4]
 8000246:	6883      	ldr	r3, [r0, #8]
 8000248:	0a1b      	lsrs	r3, r3, #8
 800024a:	714b      	strb	r3, [r1, #5]
 800024c:	8943      	ldrh	r3, [r0, #10]
 800024e:	718b      	strb	r3, [r1, #6]
 8000250:	7ac3      	ldrb	r3, [r0, #11]
 8000252:	71cb      	strb	r3, [r1, #7]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::deserialize(unsigned char*)>:
 8000258:	780b      	ldrb	r3, [r1, #0]
 800025a:	6043      	str	r3, [r0, #4]
 800025c:	784a      	ldrb	r2, [r1, #1]
 800025e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000262:	6043      	str	r3, [r0, #4]
 8000264:	788a      	ldrb	r2, [r1, #2]
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	6043      	str	r3, [r0, #4]
 800026c:	78ca      	ldrb	r2, [r1, #3]
 800026e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000272:	6043      	str	r3, [r0, #4]
 8000274:	790b      	ldrb	r3, [r1, #4]
 8000276:	6083      	str	r3, [r0, #8]
 8000278:	794a      	ldrb	r2, [r1, #5]
 800027a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800027e:	6083      	str	r3, [r0, #8]
 8000280:	798a      	ldrb	r2, [r1, #6]
 8000282:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000286:	6083      	str	r3, [r0, #8]
 8000288:	79ca      	ldrb	r2, [r1, #7]
 800028a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800028e:	6083      	str	r3, [r0, #8]
 8000290:	2008      	movs	r0, #8
 8000292:	4770      	bx	lr

08000294 <std_msgs::Time::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <std_msgs::Time::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	08006e72 	.word	0x08006e72

0800029c <std_msgs::Time::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <std_msgs::Time::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	08006e51 	.word	0x08006e51

080002a4 <rosserial_msgs::TopicInfo::getType()>:
 80002a4:	4800      	ldr	r0, [pc, #0]	; (80002a8 <rosserial_msgs::TopicInfo::getType()+0x4>)
 80002a6:	4770      	bx	lr
 80002a8:	08006d30 	.word	0x08006d30

080002ac <rosserial_msgs::TopicInfo::getMD5()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	08006d0f 	.word	0x08006d0f

080002b4 <rosserial_msgs::Log::getType()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <rosserial_msgs::Log::getType()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	08006cfc 	.word	0x08006cfc

080002bc <rosserial_msgs::Log::getMD5()>:
 80002bc:	4800      	ldr	r0, [pc, #0]	; (80002c0 <rosserial_msgs::Log::getMD5()+0x4>)
 80002be:	4770      	bx	lr
 80002c0:	08006cdb 	.word	0x08006cdb

080002c4 <rosserial_msgs::RequestParamResponse::getType()>:
 80002c4:	4800      	ldr	r0, [pc, #0]	; (80002c8 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 80002c6:	4770      	bx	lr
 80002c8:	08006d49 	.word	0x08006d49

080002cc <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002cc:	4800      	ldr	r0, [pc, #0]	; (80002d0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002ce:	4770      	bx	lr
 80002d0:	08006cba 	.word	0x08006cba

080002d4 <std_msgs::MultiArrayDimension::getType()>:
 80002d4:	4800      	ldr	r0, [pc, #0]	; (80002d8 <std_msgs::MultiArrayDimension::getType()+0x4>)
 80002d6:	4770      	bx	lr
 80002d8:	08006e34 	.word	0x08006e34

080002dc <std_msgs::MultiArrayDimension::getMD5()>:
 80002dc:	4800      	ldr	r0, [pc, #0]	; (80002e0 <std_msgs::MultiArrayDimension::getMD5()+0x4>)
 80002de:	4770      	bx	lr
 80002e0:	08006e13 	.word	0x08006e13

080002e4 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	6843      	ldr	r3, [r0, #4]
 80002e8:	700b      	strb	r3, [r1, #0]
 80002ea:	6843      	ldr	r3, [r0, #4]
 80002ec:	0a1b      	lsrs	r3, r3, #8
 80002ee:	704b      	strb	r3, [r1, #1]
 80002f0:	88c3      	ldrh	r3, [r0, #6]
 80002f2:	708b      	strb	r3, [r1, #2]
 80002f4:	79c3      	ldrb	r3, [r0, #7]
 80002f6:	70cb      	strb	r3, [r1, #3]
 80002f8:	4604      	mov	r4, r0
 80002fa:	460d      	mov	r5, r1
 80002fc:	2700      	movs	r7, #0
 80002fe:	2604      	movs	r6, #4
 8000300:	6863      	ldr	r3, [r4, #4]
 8000302:	429f      	cmp	r7, r3
 8000304:	eb05 0106 	add.w	r1, r5, r6
 8000308:	d208      	bcs.n	800031c <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x38>
 800030a:	013b      	lsls	r3, r7, #4
 800030c:	69a0      	ldr	r0, [r4, #24]
 800030e:	58c2      	ldr	r2, [r0, r3]
 8000310:	4418      	add	r0, r3
 8000312:	6812      	ldr	r2, [r2, #0]
 8000314:	4790      	blx	r2
 8000316:	3701      	adds	r7, #1
 8000318:	4406      	add	r6, r0
 800031a:	e7f1      	b.n	8000300 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x1c>
 800031c:	69e3      	ldr	r3, [r4, #28]
 800031e:	55ab      	strb	r3, [r5, r6]
 8000320:	69e3      	ldr	r3, [r4, #28]
 8000322:	0a1b      	lsrs	r3, r3, #8
 8000324:	704b      	strb	r3, [r1, #1]
 8000326:	8be3      	ldrh	r3, [r4, #30]
 8000328:	708b      	strb	r3, [r1, #2]
 800032a:	7fe3      	ldrb	r3, [r4, #31]
 800032c:	70cb      	strb	r3, [r1, #3]
 800032e:	1d30      	adds	r0, r6, #4
 8000330:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000334 <std_msgs::MultiArrayLayout::getType()>:
 8000334:	4800      	ldr	r0, [pc, #0]	; (8000338 <std_msgs::MultiArrayLayout::getType()+0x4>)
 8000336:	4770      	bx	lr
 8000338:	08006df9 	.word	0x08006df9

0800033c <std_msgs::MultiArrayLayout::getMD5()>:
 800033c:	4800      	ldr	r0, [pc, #0]	; (8000340 <std_msgs::MultiArrayLayout::getMD5()+0x4>)
 800033e:	4770      	bx	lr
 8000340:	08006dd8 	.word	0x08006dd8

08000344 <std_msgs::UInt8MultiArray::serialize(unsigned char*) const>:
 8000344:	b538      	push	{r3, r4, r5, lr}
 8000346:	4604      	mov	r4, r0
 8000348:	3004      	adds	r0, #4
 800034a:	460d      	mov	r5, r1
 800034c:	f7ff ffca 	bl	80002e4 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>
 8000350:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000352:	542b      	strb	r3, [r5, r0]
 8000354:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000356:	182b      	adds	r3, r5, r0
 8000358:	0a12      	lsrs	r2, r2, #8
 800035a:	705a      	strb	r2, [r3, #1]
 800035c:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 800035e:	709a      	strb	r2, [r3, #2]
 8000360:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 8000364:	70da      	strb	r2, [r3, #3]
 8000366:	3004      	adds	r0, #4
 8000368:	2300      	movs	r3, #0
 800036a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800036c:	4293      	cmp	r3, r2
 800036e:	d205      	bcs.n	800037c <std_msgs::UInt8MultiArray::serialize(unsigned char*) const+0x38>
 8000370:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000372:	5cd2      	ldrb	r2, [r2, r3]
 8000374:	542a      	strb	r2, [r5, r0]
 8000376:	3301      	adds	r3, #1
 8000378:	3001      	adds	r0, #1
 800037a:	e7f6      	b.n	800036a <std_msgs::UInt8MultiArray::serialize(unsigned char*) const+0x26>
 800037c:	bd38      	pop	{r3, r4, r5, pc}
	...

08000380 <std_msgs::UInt8MultiArray::getType()>:
 8000380:	4800      	ldr	r0, [pc, #0]	; (8000384 <std_msgs::UInt8MultiArray::getType()+0x4>)
 8000382:	4770      	bx	lr
 8000384:	08006dbf 	.word	0x08006dbf

08000388 <std_msgs::UInt8MultiArray::getMD5()>:
 8000388:	4800      	ldr	r0, [pc, #0]	; (800038c <std_msgs::UInt8MultiArray::getMD5()+0x4>)
 800038a:	4770      	bx	lr
 800038c:	08006d9e 	.word	0x08006d9e

08000390 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8000390:	6803      	ldr	r3, [r0, #0]
 8000392:	4718      	bx	r3

08000394 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8000394:	b108      	cbz	r0, 800039a <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8000396:	680b      	ldr	r3, [r1, #0]
 8000398:	6003      	str	r3, [r0, #0]
 800039a:	4770      	bx	lr

0800039c <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 800039c:	4770      	bx	lr

0800039e <ros::Subscriber<std_msgs::UInt8MultiArray, void>::getEndpointType()>:
 800039e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80003a0:	4770      	bx	lr
	...

080003a4 <ros::Subscriber<std_msgs::UInt8MultiArray, void>::getMsgType()>:
 80003a4:	4800      	ldr	r0, [pc, #0]	; (80003a8 <ros::Subscriber<std_msgs::UInt8MultiArray, void>::getMsgType()+0x4>)
 80003a6:	4770      	bx	lr
 80003a8:	08006dbf 	.word	0x08006dbf

080003ac <ros::Subscriber<std_msgs::UInt8MultiArray, void>::getMsgMD5()>:
 80003ac:	4800      	ldr	r0, [pc, #0]	; (80003b0 <ros::Subscriber<std_msgs::UInt8MultiArray, void>::getMsgMD5()+0x4>)
 80003ae:	4770      	bx	lr
 80003b0:	08006d9e 	.word	0x08006d9e

080003b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80003b4:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80003b8:	4770      	bx	lr
	...

080003bc <messageCb(std_msgs::UInt8MultiArray const&)>:
 80003bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80003be:	4b0b      	ldr	r3, [pc, #44]	; (80003ec <messageCb(std_msgs::UInt8MultiArray const&)+0x30>)
 80003c0:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80003c2:	2200      	movs	r2, #0
 80003c4:	42a2      	cmp	r2, r4
 80003c6:	d009      	beq.n	80003dc <messageCb(std_msgs::UInt8MultiArray const&)+0x20>
 80003c8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80003ca:	b91a      	cbnz	r2, 80003d4 <messageCb(std_msgs::UInt8MultiArray const&)+0x18>
 80003cc:	7809      	ldrb	r1, [r1, #0]
 80003ce:	6019      	str	r1, [r3, #0]
 80003d0:	3201      	adds	r2, #1
 80003d2:	e7f7      	b.n	80003c4 <messageCb(std_msgs::UInt8MultiArray const&)+0x8>
 80003d4:	5c8d      	ldrb	r5, [r1, r2]
 80003d6:	1899      	adds	r1, r3, r2
 80003d8:	70cd      	strb	r5, [r1, #3]
 80003da:	e7f9      	b.n	80003d0 <messageCb(std_msgs::UInt8MultiArray const&)+0x14>
 80003dc:	68da      	ldr	r2, [r3, #12]
 80003de:	9200      	str	r2, [sp, #0]
 80003e0:	cb0e      	ldmia	r3, {r1, r2, r3}
 80003e2:	4803      	ldr	r0, [pc, #12]	; (80003f0 <messageCb(std_msgs::UInt8MultiArray const&)+0x34>)
 80003e4:	f005 f8c6 	bl	8005574 <mbed::CAN::write(mbed::CANMessage)>
 80003e8:	b003      	add	sp, #12
 80003ea:	bd30      	pop	{r4, r5, pc}
 80003ec:	2000028c 	.word	0x2000028c
 80003f0:	2000029c 	.word	0x2000029c

080003f4 <CAN_receive()>:
 80003f4:	b510      	push	{r4, lr}
 80003f6:	4c0f      	ldr	r4, [pc, #60]	; (8000434 <CAN_receive()+0x40>)
 80003f8:	480f      	ldr	r0, [pc, #60]	; (8000438 <CAN_receive()+0x44>)
 80003fa:	4621      	mov	r1, r4
 80003fc:	2200      	movs	r2, #0
 80003fe:	f005 f8d8 	bl	80055b2 <mbed::CAN::read(mbed::CANMessage&, int)>
 8000402:	4621      	mov	r1, r4
 8000404:	b1a8      	cbz	r0, 8000432 <CAN_receive()+0x3e>
 8000406:	6823      	ldr	r3, [r4, #0]
 8000408:	b94b      	cbnz	r3, 800041e <CAN_receive()+0x2a>
 800040a:	4c0c      	ldr	r4, [pc, #48]	; (800043c <CAN_receive()+0x48>)
 800040c:	7b0a      	ldrb	r2, [r1, #12]
 800040e:	429a      	cmp	r2, r3
 8000410:	dd05      	ble.n	800041e <CAN_receive()+0x2a>
 8000412:	18ca      	adds	r2, r1, r3
 8000414:	7910      	ldrb	r0, [r2, #4]
 8000416:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000418:	54d0      	strb	r0, [r2, r3]
 800041a:	3301      	adds	r3, #1
 800041c:	e7f6      	b.n	800040c <CAN_receive()+0x18>
 800041e:	4b08      	ldr	r3, [pc, #32]	; (8000440 <CAN_receive()+0x4c>)
 8000420:	68d8      	ldr	r0, [r3, #12]
 8000422:	6899      	ldr	r1, [r3, #8]
 8000424:	6802      	ldr	r2, [r0, #0]
 8000426:	6814      	ldr	r4, [r2, #0]
 8000428:	4a04      	ldr	r2, [pc, #16]	; (800043c <CAN_receive()+0x48>)
 800042a:	4623      	mov	r3, r4
 800042c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000430:	4718      	bx	r3
 8000432:	bd10      	pop	{r4, pc}
 8000434:	2000027c 	.word	0x2000027c
 8000438:	2000029c 	.word	0x2000029c
 800043c:	20000988 	.word	0x20000988
 8000440:	20000974 	.word	0x20000974

08000444 <mbed::CANMessage::CANMessage()>:
 8000444:	b510      	push	{r4, lr}
 8000446:	2210      	movs	r2, #16
 8000448:	4604      	mov	r4, r0
 800044a:	2100      	movs	r1, #0
 800044c:	f005 ff15 	bl	800627a <memset>
 8000450:	2308      	movs	r3, #8
 8000452:	7323      	strb	r3, [r4, #12]
 8000454:	2300      	movs	r3, #0
 8000456:	6063      	str	r3, [r4, #4]
 8000458:	60a3      	str	r3, [r4, #8]
 800045a:	4620      	mov	r0, r4
 800045c:	bd10      	pop	{r4, pc}

0800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 800045e:	3801      	subs	r0, #1
 8000460:	2300      	movs	r3, #0
 8000462:	fa21 f203 	lsr.w	r2, r1, r3
 8000466:	3308      	adds	r3, #8
 8000468:	2b20      	cmp	r3, #32
 800046a:	f800 2f01 	strb.w	r2, [r0, #1]!
 800046e:	d1f8      	bne.n	8000462 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000470:	4770      	bx	lr

08000472 <std_msgs::MultiArrayDimension::serialize(unsigned char*) const>:
 8000472:	b570      	push	{r4, r5, r6, lr}
 8000474:	4605      	mov	r5, r0
 8000476:	6840      	ldr	r0, [r0, #4]
 8000478:	460c      	mov	r4, r1
 800047a:	f006 f9ca 	bl	8006812 <strlen>
 800047e:	4606      	mov	r6, r0
 8000480:	4601      	mov	r1, r0
 8000482:	4620      	mov	r0, r4
 8000484:	f7ff ffeb 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000488:	6869      	ldr	r1, [r5, #4]
 800048a:	4632      	mov	r2, r6
 800048c:	1d20      	adds	r0, r4, #4
 800048e:	f005 fecf 	bl	8006230 <memcpy>
 8000492:	19a1      	adds	r1, r4, r6
 8000494:	68ab      	ldr	r3, [r5, #8]
 8000496:	710b      	strb	r3, [r1, #4]
 8000498:	68ab      	ldr	r3, [r5, #8]
 800049a:	0a1b      	lsrs	r3, r3, #8
 800049c:	714b      	strb	r3, [r1, #5]
 800049e:	896b      	ldrh	r3, [r5, #10]
 80004a0:	718b      	strb	r3, [r1, #6]
 80004a2:	7aeb      	ldrb	r3, [r5, #11]
 80004a4:	71cb      	strb	r3, [r1, #7]
 80004a6:	68eb      	ldr	r3, [r5, #12]
 80004a8:	720b      	strb	r3, [r1, #8]
 80004aa:	68eb      	ldr	r3, [r5, #12]
 80004ac:	0a1b      	lsrs	r3, r3, #8
 80004ae:	724b      	strb	r3, [r1, #9]
 80004b0:	89eb      	ldrh	r3, [r5, #14]
 80004b2:	728b      	strb	r3, [r1, #10]
 80004b4:	7beb      	ldrb	r3, [r5, #15]
 80004b6:	72cb      	strb	r3, [r1, #11]
 80004b8:	f106 000c 	add.w	r0, r6, #12
 80004bc:	bd70      	pop	{r4, r5, r6, pc}

080004be <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80004be:	6843      	ldr	r3, [r0, #4]
 80004c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004c4:	700b      	strb	r3, [r1, #0]
 80004c6:	6843      	ldr	r3, [r0, #4]
 80004c8:	0a1b      	lsrs	r3, r3, #8
 80004ca:	704b      	strb	r3, [r1, #1]
 80004cc:	88c3      	ldrh	r3, [r0, #6]
 80004ce:	708b      	strb	r3, [r1, #2]
 80004d0:	79c3      	ldrb	r3, [r0, #7]
 80004d2:	70cb      	strb	r3, [r1, #3]
 80004d4:	460d      	mov	r5, r1
 80004d6:	1d0a      	adds	r2, r1, #4
 80004d8:	4604      	mov	r4, r0
 80004da:	2100      	movs	r1, #0
 80004dc:	6860      	ldr	r0, [r4, #4]
 80004de:	4281      	cmp	r1, r0
 80004e0:	eba2 0305 	sub.w	r3, r2, r5
 80004e4:	f102 0204 	add.w	r2, r2, #4
 80004e8:	d20f      	bcs.n	800050a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 80004ea:	68e3      	ldr	r3, [r4, #12]
 80004ec:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80004f0:	f802 3c04 	strb.w	r3, [r2, #-4]
 80004f4:	0a18      	lsrs	r0, r3, #8
 80004f6:	f802 0c03 	strb.w	r0, [r2, #-3]
 80004fa:	0c18      	lsrs	r0, r3, #16
 80004fc:	0e1b      	lsrs	r3, r3, #24
 80004fe:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000502:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000506:	3101      	adds	r1, #1
 8000508:	e7e8      	b.n	80004dc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800050a:	6922      	ldr	r2, [r4, #16]
 800050c:	54ea      	strb	r2, [r5, r3]
 800050e:	6921      	ldr	r1, [r4, #16]
 8000510:	18ea      	adds	r2, r5, r3
 8000512:	0a09      	lsrs	r1, r1, #8
 8000514:	7051      	strb	r1, [r2, #1]
 8000516:	8a61      	ldrh	r1, [r4, #18]
 8000518:	7091      	strb	r1, [r2, #2]
 800051a:	7ce1      	ldrb	r1, [r4, #19]
 800051c:	70d1      	strb	r1, [r2, #3]
 800051e:	3304      	adds	r3, #4
 8000520:	442b      	add	r3, r5
 8000522:	2100      	movs	r1, #0
 8000524:	6922      	ldr	r2, [r4, #16]
 8000526:	4291      	cmp	r1, r2
 8000528:	eba3 0605 	sub.w	r6, r3, r5
 800052c:	f103 0304 	add.w	r3, r3, #4
 8000530:	d20f      	bcs.n	8000552 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000532:	69a2      	ldr	r2, [r4, #24]
 8000534:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000538:	f803 2c04 	strb.w	r2, [r3, #-4]
 800053c:	0a10      	lsrs	r0, r2, #8
 800053e:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000542:	0c10      	lsrs	r0, r2, #16
 8000544:	0e12      	lsrs	r2, r2, #24
 8000546:	f803 0c02 	strb.w	r0, [r3, #-2]
 800054a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800054e:	3101      	adds	r1, #1
 8000550:	e7e8      	b.n	8000524 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000552:	69e3      	ldr	r3, [r4, #28]
 8000554:	55ab      	strb	r3, [r5, r6]
 8000556:	69e2      	ldr	r2, [r4, #28]
 8000558:	19ab      	adds	r3, r5, r6
 800055a:	0a12      	lsrs	r2, r2, #8
 800055c:	705a      	strb	r2, [r3, #1]
 800055e:	8be2      	ldrh	r2, [r4, #30]
 8000560:	709a      	strb	r2, [r3, #2]
 8000562:	7fe2      	ldrb	r2, [r4, #31]
 8000564:	70da      	strb	r2, [r3, #3]
 8000566:	3604      	adds	r6, #4
 8000568:	2700      	movs	r7, #0
 800056a:	69e3      	ldr	r3, [r4, #28]
 800056c:	429f      	cmp	r7, r3
 800056e:	d214      	bcs.n	800059a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 8000570:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000572:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000576:	f006 f94c 	bl	8006812 <strlen>
 800057a:	4680      	mov	r8, r0
 800057c:	4601      	mov	r1, r0
 800057e:	19a8      	adds	r0, r5, r6
 8000580:	f7ff ff6d 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000584:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000586:	3604      	adds	r6, #4
 8000588:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800058c:	19a8      	adds	r0, r5, r6
 800058e:	4642      	mov	r2, r8
 8000590:	f005 fe4e 	bl	8006230 <memcpy>
 8000594:	4446      	add	r6, r8
 8000596:	3701      	adds	r7, #1
 8000598:	e7e7      	b.n	800056a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 800059a:	4630      	mov	r0, r6
 800059c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080005a0 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80005a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005a2:	460e      	mov	r6, r1
 80005a4:	7903      	ldrb	r3, [r0, #4]
 80005a6:	f806 3b01 	strb.w	r3, [r6], #1
 80005aa:	4605      	mov	r5, r0
 80005ac:	6880      	ldr	r0, [r0, #8]
 80005ae:	460f      	mov	r7, r1
 80005b0:	f006 f92f 	bl	8006812 <strlen>
 80005b4:	4604      	mov	r4, r0
 80005b6:	4601      	mov	r1, r0
 80005b8:	4630      	mov	r0, r6
 80005ba:	f7ff ff50 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80005be:	4622      	mov	r2, r4
 80005c0:	68a9      	ldr	r1, [r5, #8]
 80005c2:	1d78      	adds	r0, r7, #5
 80005c4:	f005 fe34 	bl	8006230 <memcpy>
 80005c8:	1d60      	adds	r0, r4, #5
 80005ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080005cc <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 80005cc:	8883      	ldrh	r3, [r0, #4]
 80005ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005d2:	700b      	strb	r3, [r1, #0]
 80005d4:	8883      	ldrh	r3, [r0, #4]
 80005d6:	0a1b      	lsrs	r3, r3, #8
 80005d8:	704b      	strb	r3, [r1, #1]
 80005da:	4605      	mov	r5, r0
 80005dc:	6880      	ldr	r0, [r0, #8]
 80005de:	460c      	mov	r4, r1
 80005e0:	f006 f917 	bl	8006812 <strlen>
 80005e4:	4607      	mov	r7, r0
 80005e6:	4601      	mov	r1, r0
 80005e8:	1ca0      	adds	r0, r4, #2
 80005ea:	f7ff ff38 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80005ee:	463a      	mov	r2, r7
 80005f0:	68a9      	ldr	r1, [r5, #8]
 80005f2:	1da0      	adds	r0, r4, #6
 80005f4:	f005 fe1c 	bl	8006230 <memcpy>
 80005f8:	68e8      	ldr	r0, [r5, #12]
 80005fa:	f006 f90a 	bl	8006812 <strlen>
 80005fe:	f107 0806 	add.w	r8, r7, #6
 8000602:	4606      	mov	r6, r0
 8000604:	4601      	mov	r1, r0
 8000606:	370a      	adds	r7, #10
 8000608:	eb04 0008 	add.w	r0, r4, r8
 800060c:	f7ff ff27 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000610:	4632      	mov	r2, r6
 8000612:	68e9      	ldr	r1, [r5, #12]
 8000614:	19e0      	adds	r0, r4, r7
 8000616:	f005 fe0b 	bl	8006230 <memcpy>
 800061a:	6928      	ldr	r0, [r5, #16]
 800061c:	f006 f8f9 	bl	8006812 <strlen>
 8000620:	443e      	add	r6, r7
 8000622:	4601      	mov	r1, r0
 8000624:	4607      	mov	r7, r0
 8000626:	19a0      	adds	r0, r4, r6
 8000628:	3604      	adds	r6, #4
 800062a:	f7ff ff18 	bl	800045e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800062e:	463a      	mov	r2, r7
 8000630:	19a0      	adds	r0, r4, r6
 8000632:	6929      	ldr	r1, [r5, #16]
 8000634:	443e      	add	r6, r7
 8000636:	f005 fdfb 	bl	8006230 <memcpy>
 800063a:	696b      	ldr	r3, [r5, #20]
 800063c:	55a3      	strb	r3, [r4, r6]
 800063e:	4434      	add	r4, r6
 8000640:	0a1a      	lsrs	r2, r3, #8
 8000642:	7062      	strb	r2, [r4, #1]
 8000644:	0c1a      	lsrs	r2, r3, #16
 8000646:	0e1b      	lsrs	r3, r3, #24
 8000648:	70a2      	strb	r2, [r4, #2]
 800064a:	70e3      	strb	r3, [r4, #3]
 800064c:	1d30      	adds	r0, r6, #4
 800064e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000652:	b510      	push	{r4, lr}
 8000654:	2300      	movs	r3, #0
 8000656:	6003      	str	r3, [r0, #0]
 8000658:	3901      	subs	r1, #1
 800065a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800065e:	fa02 f403 	lsl.w	r4, r2, r3
 8000662:	6802      	ldr	r2, [r0, #0]
 8000664:	3308      	adds	r3, #8
 8000666:	4322      	orrs	r2, r4
 8000668:	2b20      	cmp	r3, #32
 800066a:	6002      	str	r2, [r0, #0]
 800066c:	d1f5      	bne.n	800065a <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 800066e:	bd10      	pop	{r4, pc}

08000670 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000670:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000672:	460c      	mov	r4, r1
 8000674:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000678:	7103      	strb	r3, [r0, #4]
 800067a:	4605      	mov	r5, r0
 800067c:	a801      	add	r0, sp, #4
 800067e:	f7ff ffe8 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000682:	9b01      	ldr	r3, [sp, #4]
 8000684:	1d62      	adds	r2, r4, #5
 8000686:	1d58      	adds	r0, r3, #5
 8000688:	1b11      	subs	r1, r2, r4
 800068a:	4288      	cmp	r0, r1
 800068c:	d904      	bls.n	8000698 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 800068e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000692:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000696:	e7f7      	b.n	8000688 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000698:	4423      	add	r3, r4
 800069a:	2200      	movs	r2, #0
 800069c:	3404      	adds	r4, #4
 800069e:	711a      	strb	r2, [r3, #4]
 80006a0:	60ac      	str	r4, [r5, #8]
 80006a2:	b003      	add	sp, #12
 80006a4:	bd30      	pop	{r4, r5, pc}

080006a6 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>:
 80006a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80006a8:	4604      	mov	r4, r0
 80006aa:	a801      	add	r0, sp, #4
 80006ac:	460d      	mov	r5, r1
 80006ae:	f7ff ffd0 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80006b2:	9801      	ldr	r0, [sp, #4]
 80006b4:	1d2b      	adds	r3, r5, #4
 80006b6:	1d01      	adds	r1, r0, #4
 80006b8:	1b5a      	subs	r2, r3, r5
 80006ba:	4291      	cmp	r1, r2
 80006bc:	d904      	bls.n	80006c8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x22>
 80006be:	f813 2b01 	ldrb.w	r2, [r3], #1
 80006c2:	f803 2c02 	strb.w	r2, [r3, #-2]
 80006c6:	e7f7      	b.n	80006b8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x12>
 80006c8:	182a      	adds	r2, r5, r0
 80006ca:	2300      	movs	r3, #0
 80006cc:	70d3      	strb	r3, [r2, #3]
 80006ce:	1ceb      	adds	r3, r5, #3
 80006d0:	6063      	str	r3, [r4, #4]
 80006d2:	5c6b      	ldrb	r3, [r5, r1]
 80006d4:	60a3      	str	r3, [r4, #8]
 80006d6:	7951      	ldrb	r1, [r2, #5]
 80006d8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006dc:	60a3      	str	r3, [r4, #8]
 80006de:	7991      	ldrb	r1, [r2, #6]
 80006e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80006e4:	60a3      	str	r3, [r4, #8]
 80006e6:	79d1      	ldrb	r1, [r2, #7]
 80006e8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80006ec:	60a3      	str	r3, [r4, #8]
 80006ee:	7a13      	ldrb	r3, [r2, #8]
 80006f0:	60e3      	str	r3, [r4, #12]
 80006f2:	7a51      	ldrb	r1, [r2, #9]
 80006f4:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006f8:	60e3      	str	r3, [r4, #12]
 80006fa:	7a91      	ldrb	r1, [r2, #10]
 80006fc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000700:	60e3      	str	r3, [r4, #12]
 8000702:	7ad2      	ldrb	r2, [r2, #11]
 8000704:	300c      	adds	r0, #12
 8000706:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800070a:	60e3      	str	r3, [r4, #12]
 800070c:	b003      	add	sp, #12
 800070e:	bd30      	pop	{r4, r5, pc}

08000710 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>:
 8000710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000714:	6843      	ldr	r3, [r0, #4]
 8000716:	680d      	ldr	r5, [r1, #0]
 8000718:	429d      	cmp	r5, r3
 800071a:	4604      	mov	r4, r0
 800071c:	460f      	mov	r7, r1
 800071e:	d904      	bls.n	800072a <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x1a>
 8000720:	0129      	lsls	r1, r5, #4
 8000722:	6980      	ldr	r0, [r0, #24]
 8000724:	f006 f81a 	bl	800675c <realloc>
 8000728:	61a0      	str	r0, [r4, #24]
 800072a:	6065      	str	r5, [r4, #4]
 800072c:	2600      	movs	r6, #0
 800072e:	2504      	movs	r5, #4
 8000730:	f104 0808 	add.w	r8, r4, #8
 8000734:	f104 0918 	add.w	r9, r4, #24
 8000738:	6863      	ldr	r3, [r4, #4]
 800073a:	429e      	cmp	r6, r3
 800073c:	eb07 0105 	add.w	r1, r7, r5
 8000740:	d20f      	bcs.n	8000762 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x52>
 8000742:	4640      	mov	r0, r8
 8000744:	f7ff ffaf 	bl	80006a6 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>
 8000748:	69a3      	ldr	r3, [r4, #24]
 800074a:	4405      	add	r5, r0
 800074c:	4642      	mov	r2, r8
 800074e:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8000752:	f852 1b04 	ldr.w	r1, [r2], #4
 8000756:	f843 1b04 	str.w	r1, [r3], #4
 800075a:	454a      	cmp	r2, r9
 800075c:	d1f9      	bne.n	8000752 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x42>
 800075e:	3601      	adds	r6, #1
 8000760:	e7ea      	b.n	8000738 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x28>
 8000762:	5d7b      	ldrb	r3, [r7, r5]
 8000764:	61e3      	str	r3, [r4, #28]
 8000766:	784a      	ldrb	r2, [r1, #1]
 8000768:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800076c:	61e3      	str	r3, [r4, #28]
 800076e:	788a      	ldrb	r2, [r1, #2]
 8000770:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000774:	61e3      	str	r3, [r4, #28]
 8000776:	78ca      	ldrb	r2, [r1, #3]
 8000778:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800077c:	61e3      	str	r3, [r4, #28]
 800077e:	1d28      	adds	r0, r5, #4
 8000780:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000784 <std_msgs::UInt8MultiArray::deserialize(unsigned char*)>:
 8000784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000786:	4606      	mov	r6, r0
 8000788:	3004      	adds	r0, #4
 800078a:	460f      	mov	r7, r1
 800078c:	f7ff ffc0 	bl	8000710 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>
 8000790:	183b      	adds	r3, r7, r0
 8000792:	5c3a      	ldrb	r2, [r7, r0]
 8000794:	789c      	ldrb	r4, [r3, #2]
 8000796:	7859      	ldrb	r1, [r3, #1]
 8000798:	78db      	ldrb	r3, [r3, #3]
 800079a:	0424      	lsls	r4, r4, #16
 800079c:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
 80007a0:	4314      	orrs	r4, r2
 80007a2:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
 80007a6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80007a8:	429c      	cmp	r4, r3
 80007aa:	f100 0504 	add.w	r5, r0, #4
 80007ae:	d904      	bls.n	80007ba <std_msgs::UInt8MultiArray::deserialize(unsigned char*)+0x36>
 80007b0:	4621      	mov	r1, r4
 80007b2:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 80007b4:	f005 ffd2 	bl	800675c <realloc>
 80007b8:	62f0      	str	r0, [r6, #44]	; 0x2c
 80007ba:	6274      	str	r4, [r6, #36]	; 0x24
 80007bc:	2300      	movs	r3, #0
 80007be:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80007c0:	4293      	cmp	r3, r2
 80007c2:	d207      	bcs.n	80007d4 <std_msgs::UInt8MultiArray::deserialize(unsigned char*)+0x50>
 80007c4:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 80007c6:	5d7a      	ldrb	r2, [r7, r5]
 80007c8:	f886 2028 	strb.w	r2, [r6, #40]	; 0x28
 80007cc:	3501      	adds	r5, #1
 80007ce:	54ca      	strb	r2, [r1, r3]
 80007d0:	3301      	adds	r3, #1
 80007d2:	e7f4      	b.n	80007be <std_msgs::UInt8MultiArray::deserialize(unsigned char*)+0x3a>
 80007d4:	4628      	mov	r0, r5
 80007d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080007d8 <ros::Subscriber<std_msgs::UInt8MultiArray, void>::callback(unsigned char*)>:
 80007d8:	b570      	push	{r4, r5, r6, lr}
 80007da:	4605      	mov	r5, r0
 80007dc:	f100 040c 	add.w	r4, r0, #12
 80007e0:	4620      	mov	r0, r4
 80007e2:	f7ff ffcf 	bl	8000784 <std_msgs::UInt8MultiArray::deserialize(unsigned char*)>
 80007e6:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80007e8:	4620      	mov	r0, r4
 80007ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80007ee:	4718      	bx	r3

080007f0 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 80007f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007f2:	780b      	ldrb	r3, [r1, #0]
 80007f4:	8083      	strh	r3, [r0, #4]
 80007f6:	784a      	ldrb	r2, [r1, #1]
 80007f8:	b085      	sub	sp, #20
 80007fa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80007fe:	8083      	strh	r3, [r0, #4]
 8000800:	460c      	mov	r4, r1
 8000802:	4606      	mov	r6, r0
 8000804:	3102      	adds	r1, #2
 8000806:	a801      	add	r0, sp, #4
 8000808:	f7ff ff23 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800080c:	9f01      	ldr	r7, [sp, #4]
 800080e:	1da3      	adds	r3, r4, #6
 8000810:	1dbd      	adds	r5, r7, #6
 8000812:	1b1a      	subs	r2, r3, r4
 8000814:	4295      	cmp	r5, r2
 8000816:	d904      	bls.n	8000822 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000818:	f813 2b01 	ldrb.w	r2, [r3], #1
 800081c:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000820:	e7f7      	b.n	8000812 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000822:	19e3      	adds	r3, r4, r7
 8000824:	2200      	movs	r2, #0
 8000826:	715a      	strb	r2, [r3, #5]
 8000828:	1d63      	adds	r3, r4, #5
 800082a:	60b3      	str	r3, [r6, #8]
 800082c:	1961      	adds	r1, r4, r5
 800082e:	a802      	add	r0, sp, #8
 8000830:	f7ff ff0f 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000834:	1d2b      	adds	r3, r5, #4
 8000836:	9d02      	ldr	r5, [sp, #8]
 8000838:	f107 020a 	add.w	r2, r7, #10
 800083c:	441d      	add	r5, r3
 800083e:	4422      	add	r2, r4
 8000840:	1b11      	subs	r1, r2, r4
 8000842:	428d      	cmp	r5, r1
 8000844:	d904      	bls.n	8000850 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 8000846:	f812 1b01 	ldrb.w	r1, [r2], #1
 800084a:	f802 1c02 	strb.w	r1, [r2, #-2]
 800084e:	e7f7      	b.n	8000840 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000850:	1961      	adds	r1, r4, r5
 8000852:	3b01      	subs	r3, #1
 8000854:	4423      	add	r3, r4
 8000856:	2200      	movs	r2, #0
 8000858:	f801 2c01 	strb.w	r2, [r1, #-1]
 800085c:	a803      	add	r0, sp, #12
 800085e:	60f3      	str	r3, [r6, #12]
 8000860:	f7ff fef7 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000864:	9803      	ldr	r0, [sp, #12]
 8000866:	3504      	adds	r5, #4
 8000868:	4428      	add	r0, r5
 800086a:	1963      	adds	r3, r4, r5
 800086c:	1b1a      	subs	r2, r3, r4
 800086e:	4290      	cmp	r0, r2
 8000870:	d904      	bls.n	800087c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000872:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000876:	f803 2c02 	strb.w	r2, [r3, #-2]
 800087a:	e7f7      	b.n	800086c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 800087c:	1822      	adds	r2, r4, r0
 800087e:	3d01      	subs	r5, #1
 8000880:	2300      	movs	r3, #0
 8000882:	4425      	add	r5, r4
 8000884:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000888:	6135      	str	r5, [r6, #16]
 800088a:	7893      	ldrb	r3, [r2, #2]
 800088c:	7851      	ldrb	r1, [r2, #1]
 800088e:	78d2      	ldrb	r2, [r2, #3]
 8000890:	041b      	lsls	r3, r3, #16
 8000892:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8000896:	5c21      	ldrb	r1, [r4, r0]
 8000898:	430b      	orrs	r3, r1
 800089a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800089e:	3004      	adds	r0, #4
 80008a0:	6173      	str	r3, [r6, #20]
 80008a2:	b005      	add	sp, #20
 80008a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080008a6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80008a6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80008aa:	6843      	ldr	r3, [r0, #4]
 80008ac:	680d      	ldr	r5, [r1, #0]
 80008ae:	429d      	cmp	r5, r3
 80008b0:	4604      	mov	r4, r0
 80008b2:	460e      	mov	r6, r1
 80008b4:	d904      	bls.n	80008c0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80008b6:	00a9      	lsls	r1, r5, #2
 80008b8:	68c0      	ldr	r0, [r0, #12]
 80008ba:	f005 ff4f 	bl	800675c <realloc>
 80008be:	60e0      	str	r0, [r4, #12]
 80008c0:	6065      	str	r5, [r4, #4]
 80008c2:	1d32      	adds	r2, r6, #4
 80008c4:	2100      	movs	r1, #0
 80008c6:	6860      	ldr	r0, [r4, #4]
 80008c8:	4281      	cmp	r1, r0
 80008ca:	eba2 0306 	sub.w	r3, r2, r6
 80008ce:	f102 0204 	add.w	r2, r2, #4
 80008d2:	d213      	bcs.n	80008fc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80008d4:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80008d8:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80008dc:	041b      	lsls	r3, r3, #16
 80008de:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80008e2:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80008e6:	4303      	orrs	r3, r0
 80008e8:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80008ec:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80008f0:	68e0      	ldr	r0, [r4, #12]
 80008f2:	60a3      	str	r3, [r4, #8]
 80008f4:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 80008f8:	3101      	adds	r1, #1
 80008fa:	e7e4      	b.n	80008c6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 80008fc:	18f2      	adds	r2, r6, r3
 80008fe:	5cf1      	ldrb	r1, [r6, r3]
 8000900:	7895      	ldrb	r5, [r2, #2]
 8000902:	7850      	ldrb	r0, [r2, #1]
 8000904:	78d2      	ldrb	r2, [r2, #3]
 8000906:	042d      	lsls	r5, r5, #16
 8000908:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800090c:	430d      	orrs	r5, r1
 800090e:	1d1f      	adds	r7, r3, #4
 8000910:	6923      	ldr	r3, [r4, #16]
 8000912:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000916:	429d      	cmp	r5, r3
 8000918:	d904      	bls.n	8000924 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 800091a:	00a9      	lsls	r1, r5, #2
 800091c:	69a0      	ldr	r0, [r4, #24]
 800091e:	f005 ff1d 	bl	800675c <realloc>
 8000922:	61a0      	str	r0, [r4, #24]
 8000924:	6125      	str	r5, [r4, #16]
 8000926:	19f3      	adds	r3, r6, r7
 8000928:	2100      	movs	r1, #0
 800092a:	6922      	ldr	r2, [r4, #16]
 800092c:	4291      	cmp	r1, r2
 800092e:	eba3 0506 	sub.w	r5, r3, r6
 8000932:	f103 0304 	add.w	r3, r3, #4
 8000936:	d213      	bcs.n	8000960 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000938:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 800093c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000940:	0412      	lsls	r2, r2, #16
 8000942:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000946:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800094a:	4302      	orrs	r2, r0
 800094c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000950:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000954:	69a0      	ldr	r0, [r4, #24]
 8000956:	6162      	str	r2, [r4, #20]
 8000958:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 800095c:	3101      	adds	r1, #1
 800095e:	e7e4      	b.n	800092a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000960:	1973      	adds	r3, r6, r5
 8000962:	5d72      	ldrb	r2, [r6, r5]
 8000964:	789f      	ldrb	r7, [r3, #2]
 8000966:	7859      	ldrb	r1, [r3, #1]
 8000968:	78db      	ldrb	r3, [r3, #3]
 800096a:	043f      	lsls	r7, r7, #16
 800096c:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000970:	4317      	orrs	r7, r2
 8000972:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000976:	69e3      	ldr	r3, [r4, #28]
 8000978:	429f      	cmp	r7, r3
 800097a:	f105 0504 	add.w	r5, r5, #4
 800097e:	d904      	bls.n	800098a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000980:	00b9      	lsls	r1, r7, #2
 8000982:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000984:	f005 feea 	bl	800675c <realloc>
 8000988:	6260      	str	r0, [r4, #36]	; 0x24
 800098a:	61e7      	str	r7, [r4, #28]
 800098c:	2700      	movs	r7, #0
 800098e:	46b8      	mov	r8, r7
 8000990:	69e3      	ldr	r3, [r4, #28]
 8000992:	429f      	cmp	r7, r3
 8000994:	d21a      	bcs.n	80009cc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000996:	1971      	adds	r1, r6, r5
 8000998:	a801      	add	r0, sp, #4
 800099a:	f7ff fe5a 	bl	8000652 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800099e:	1d2b      	adds	r3, r5, #4
 80009a0:	9d01      	ldr	r5, [sp, #4]
 80009a2:	18f2      	adds	r2, r6, r3
 80009a4:	441d      	add	r5, r3
 80009a6:	1b91      	subs	r1, r2, r6
 80009a8:	42a9      	cmp	r1, r5
 80009aa:	d204      	bcs.n	80009b6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80009ac:	f812 1b01 	ldrb.w	r1, [r2], #1
 80009b0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80009b4:	e7f7      	b.n	80009a6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80009b6:	1972      	adds	r2, r6, r5
 80009b8:	3b01      	subs	r3, #1
 80009ba:	f802 8c01 	strb.w	r8, [r2, #-1]
 80009be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80009c0:	4433      	add	r3, r6
 80009c2:	6223      	str	r3, [r4, #32]
 80009c4:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80009c8:	3701      	adds	r7, #1
 80009ca:	e7e1      	b.n	8000990 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80009cc:	4628      	mov	r0, r5
 80009ce:	b002      	add	sp, #8
 80009d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080009d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80009d4:	b530      	push	{r4, r5, lr}
 80009d6:	b085      	sub	sp, #20
 80009d8:	4604      	mov	r4, r0
 80009da:	4b09      	ldr	r3, [pc, #36]	; (8000a00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80009dc:	9301      	str	r3, [sp, #4]
 80009de:	2300      	movs	r3, #0
 80009e0:	9302      	str	r3, [sp, #8]
 80009e2:	9303      	str	r3, [sp, #12]
 80009e4:	f854 3bec 	ldr.w	r3, [r4], #236
 80009e8:	aa01      	add	r2, sp, #4
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	210a      	movs	r1, #10
 80009ee:	4605      	mov	r5, r0
 80009f0:	4798      	blx	r3
 80009f2:	4620      	mov	r0, r4
 80009f4:	f004 fd58 	bl	80054a8 <mbed::Timer::read_ms()>
 80009f8:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 80009fc:	b005      	add	sp, #20
 80009fe:	bd30      	pop	{r4, r5, pc}
 8000a00:	08006bc4 	.word	0x08006bc4

08000a04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a08:	b086      	sub	sp, #24
 8000a0a:	4b2b      	ldr	r3, [pc, #172]	; (8000ab8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000a0c:	9300      	str	r3, [sp, #0]
 8000a0e:	2200      	movs	r2, #0
 8000a10:	4b2a      	ldr	r3, [pc, #168]	; (8000abc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000a12:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000a16:	4605      	mov	r5, r0
 8000a18:	9302      	str	r3, [sp, #8]
 8000a1a:	9303      	str	r3, [sp, #12]
 8000a1c:	9304      	str	r3, [sp, #16]
 8000a1e:	9205      	str	r2, [sp, #20]
 8000a20:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000a24:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000a28:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	b1bb      	cbz	r3, 8000a60 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000a30:	6858      	ldr	r0, [r3, #4]
 8000a32:	689a      	ldr	r2, [r3, #8]
 8000a34:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000a38:	681a      	ldr	r2, [r3, #0]
 8000a3a:	6803      	ldr	r3, [r0, #0]
 8000a3c:	9202      	str	r2, [sp, #8]
 8000a3e:	689b      	ldr	r3, [r3, #8]
 8000a40:	4798      	blx	r3
 8000a42:	6823      	ldr	r3, [r4, #0]
 8000a44:	9003      	str	r0, [sp, #12]
 8000a46:	6858      	ldr	r0, [r3, #4]
 8000a48:	6803      	ldr	r3, [r0, #0]
 8000a4a:	68db      	ldr	r3, [r3, #12]
 8000a4c:	4798      	blx	r3
 8000a4e:	6821      	ldr	r1, [r4, #0]
 8000a50:	682b      	ldr	r3, [r5, #0]
 8000a52:	9004      	str	r0, [sp, #16]
 8000a54:	9705      	str	r7, [sp, #20]
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	6909      	ldr	r1, [r1, #16]
 8000a5a:	466a      	mov	r2, sp
 8000a5c:	4628      	mov	r0, r5
 8000a5e:	4798      	blx	r3
 8000a60:	3404      	adds	r4, #4
 8000a62:	42b4      	cmp	r4, r6
 8000a64:	d1e2      	bne.n	8000a2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000a66:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000a6a:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000a6e:	6820      	ldr	r0, [r4, #0]
 8000a70:	b1c8      	cbz	r0, 8000aa6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000a72:	6843      	ldr	r3, [r0, #4]
 8000a74:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000a78:	6883      	ldr	r3, [r0, #8]
 8000a7a:	9302      	str	r3, [sp, #8]
 8000a7c:	6803      	ldr	r3, [r0, #0]
 8000a7e:	689b      	ldr	r3, [r3, #8]
 8000a80:	4798      	blx	r3
 8000a82:	9003      	str	r0, [sp, #12]
 8000a84:	6820      	ldr	r0, [r4, #0]
 8000a86:	6803      	ldr	r3, [r0, #0]
 8000a88:	68db      	ldr	r3, [r3, #12]
 8000a8a:	4798      	blx	r3
 8000a8c:	682b      	ldr	r3, [r5, #0]
 8000a8e:	9004      	str	r0, [sp, #16]
 8000a90:	6820      	ldr	r0, [r4, #0]
 8000a92:	f8d3 8000 	ldr.w	r8, [r3]
 8000a96:	6803      	ldr	r3, [r0, #0]
 8000a98:	9705      	str	r7, [sp, #20]
 8000a9a:	685b      	ldr	r3, [r3, #4]
 8000a9c:	4798      	blx	r3
 8000a9e:	466a      	mov	r2, sp
 8000aa0:	4601      	mov	r1, r0
 8000aa2:	4628      	mov	r0, r5
 8000aa4:	47c0      	blx	r8
 8000aa6:	3404      	adds	r4, #4
 8000aa8:	42a6      	cmp	r6, r4
 8000aaa:	d1e0      	bne.n	8000a6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000aac:	2301      	movs	r3, #1
 8000aae:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 8000ab2:	b006      	add	sp, #24
 8000ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ab8:	08006bdc 	.word	0x08006bdc
 8000abc:	08006f01 	.word	0x08006f01

08000ac0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ac2:	b085      	sub	sp, #20
 8000ac4:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 8000ac8:	4b1f      	ldr	r3, [pc, #124]	; (8000b48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000aca:	9301      	str	r3, [sp, #4]
 8000acc:	4604      	mov	r4, r0
 8000ace:	2300      	movs	r3, #0
 8000ad0:	4628      	mov	r0, r5
 8000ad2:	9302      	str	r3, [sp, #8]
 8000ad4:	9303      	str	r3, [sp, #12]
 8000ad6:	460e      	mov	r6, r1
 8000ad8:	f004 fce6 	bl	80054a8 <mbed::Timer::read_ms()>
 8000adc:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 8000ae0:	4631      	mov	r1, r6
 8000ae2:	1a87      	subs	r7, r0, r2
 8000ae4:	a801      	add	r0, sp, #4
 8000ae6:	f7ff fbb7 	bl	8000258 <std_msgs::Time::deserialize(unsigned char*)>
 8000aea:	9b02      	ldr	r3, [sp, #8]
 8000aec:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000af0:	fbb7 f2f6 	udiv	r2, r7, r6
 8000af4:	4413      	add	r3, r2
 8000af6:	9302      	str	r3, [sp, #8]
 8000af8:	fb06 7212 	mls	r2, r6, r2, r7
 8000afc:	9b03      	ldr	r3, [sp, #12]
 8000afe:	4f13      	ldr	r7, [pc, #76]	; (8000b4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000b00:	4628      	mov	r0, r5
 8000b02:	fb07 3202 	mla	r2, r7, r2, r3
 8000b06:	9203      	str	r2, [sp, #12]
 8000b08:	f004 fcce 	bl	80054a8 <mbed::Timer::read_ms()>
 8000b0c:	9a02      	ldr	r2, [sp, #8]
 8000b0e:	fbb0 f3f6 	udiv	r3, r0, r6
 8000b12:	3a01      	subs	r2, #1
 8000b14:	1ad2      	subs	r2, r2, r3
 8000b16:	9903      	ldr	r1, [sp, #12]
 8000b18:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000b1c:	4a0c      	ldr	r2, [pc, #48]	; (8000b50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000b1e:	fb06 0313 	mls	r3, r6, r3, r0
 8000b22:	440a      	add	r2, r1
 8000b24:	fb07 2313 	mls	r3, r7, r3, r2
 8000b28:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000b2c:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000b30:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000b34:	f000 fae2 	bl	80010fc <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000b38:	4628      	mov	r0, r5
 8000b3a:	f004 fcb5 	bl	80054a8 <mbed::Timer::read_ms()>
 8000b3e:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000b42:	b005      	add	sp, #20
 8000b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b46:	bf00      	nop
 8000b48:	08006bc4 	.word	0x08006bc4
 8000b4c:	000f4240 	.word	0x000f4240
 8000b50:	3b9aca00 	.word	0x3b9aca00

08000b54 <_GLOBAL__sub_I_can>:
 8000b54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000b56:	4c57      	ldr	r4, [pc, #348]	; (8000cb4 <_GLOBAL__sub_I_can+0x160>)
 8000b58:	4e57      	ldr	r6, [pc, #348]	; (8000cb8 <_GLOBAL__sub_I_can+0x164>)
 8000b5a:	4d58      	ldr	r5, [pc, #352]	; (8000cbc <_GLOBAL__sub_I_can+0x168>)
 8000b5c:	220c      	movs	r2, #12
 8000b5e:	210b      	movs	r1, #11
 8000b60:	4620      	mov	r0, r4
 8000b62:	f004 fd77 	bl	8005654 <mbed::CAN::CAN(PinName, PinName)>
 8000b66:	4632      	mov	r2, r6
 8000b68:	4955      	ldr	r1, [pc, #340]	; (8000cc0 <_GLOBAL__sub_I_can+0x16c>)
 8000b6a:	4620      	mov	r0, r4
 8000b6c:	f005 f80c 	bl	8005b88 <__aeabi_atexit>
 8000b70:	4854      	ldr	r0, [pc, #336]	; (8000cc4 <_GLOBAL__sub_I_can+0x170>)
 8000b72:	f7ff fc67 	bl	8000444 <mbed::CANMessage::CANMessage()>
 8000b76:	4854      	ldr	r0, [pc, #336]	; (8000cc8 <_GLOBAL__sub_I_can+0x174>)
 8000b78:	f7ff fc64 	bl	8000444 <mbed::CANMessage::CANMessage()>
 8000b7c:	4628      	mov	r0, r5
 8000b7e:	4b53      	ldr	r3, [pc, #332]	; (8000ccc <_GLOBAL__sub_I_can+0x178>)
 8000b80:	f840 3b04 	str.w	r3, [r0], #4
 8000b84:	2400      	movs	r4, #0
 8000b86:	2304      	movs	r3, #4
 8000b88:	2203      	movs	r2, #3
 8000b8a:	2102      	movs	r1, #2
 8000b8c:	f105 07ec 	add.w	r7, r5, #236	; 0xec
 8000b90:	e88d 0018 	stmia.w	sp, {r3, r4}
 8000b94:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b98:	f000 fba6 	bl	80012e8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000b9c:	4638      	mov	r0, r7
 8000b9e:	f004 fc99 	bl	80054d4 <mbed::Timer::Timer()>
 8000ba2:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000ba6:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 8000baa:	4638      	mov	r0, r7
 8000bac:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000bb0:	f004 fc4e 	bl	8005450 <mbed::Timer::start()>
 8000bb4:	463a      	mov	r2, r7
 8000bb6:	4621      	mov	r1, r4
 8000bb8:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 8000bbc:	f8c5 40fc 	str.w	r4, [r5, #252]	; 0xfc
 8000bc0:	f8c5 4100 	str.w	r4, [r5, #256]	; 0x100
 8000bc4:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
 8000bc8:	f8c5 4108 	str.w	r4, [r5, #264]	; 0x108
 8000bcc:	f005 fb55 	bl	800627a <memset>
 8000bd0:	463a      	mov	r2, r7
 8000bd2:	4621      	mov	r1, r4
 8000bd4:	2764      	movs	r7, #100	; 0x64
 8000bd6:	f505 7043 	add.w	r0, r5, #780	; 0x30c
 8000bda:	f005 fb4e 	bl	800627a <memset>
 8000bde:	463a      	mov	r2, r7
 8000be0:	4621      	mov	r1, r4
 8000be2:	f205 500c 	addw	r0, r5, #1292	; 0x50c
 8000be6:	f005 fb48 	bl	800627a <memset>
 8000bea:	463a      	mov	r2, r7
 8000bec:	4621      	mov	r1, r4
 8000bee:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 8000bf2:	f005 fb42 	bl	800627a <memset>
 8000bf6:	4b36      	ldr	r3, [pc, #216]	; (8000cd0 <_GLOBAL__sub_I_can+0x17c>)
 8000bf8:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
 8000bfc:	f505 63c2 	add.w	r3, r5, #1552	; 0x610
 8000c00:	2200      	movs	r2, #0
 8000c02:	f8c5 4600 	str.w	r4, [r5, #1536]	; 0x600
 8000c06:	f8c5 4604 	str.w	r4, [r5, #1540]	; 0x604
 8000c0a:	f8c5 4608 	str.w	r4, [r5, #1544]	; 0x608
 8000c0e:	f8c5 460c 	str.w	r4, [r5, #1548]	; 0x60c
 8000c12:	601a      	str	r2, [r3, #0]
 8000c14:	f8c5 4614 	str.w	r4, [r5, #1556]	; 0x614
 8000c18:	f8c5 4618 	str.w	r4, [r5, #1560]	; 0x618
 8000c1c:	f8c5 461c 	str.w	r4, [r5, #1564]	; 0x61c
 8000c20:	f8c5 4620 	str.w	r4, [r5, #1568]	; 0x620
 8000c24:	4632      	mov	r2, r6
 8000c26:	492b      	ldr	r1, [pc, #172]	; (8000cd4 <_GLOBAL__sub_I_can+0x180>)
 8000c28:	f8c5 45d4 	str.w	r4, [r5, #1492]	; 0x5d4
 8000c2c:	4628      	mov	r0, r5
 8000c2e:	f8c5 45d8 	str.w	r4, [r5, #1496]	; 0x5d8
 8000c32:	f8c5 45dc 	str.w	r4, [r5, #1500]	; 0x5dc
 8000c36:	f8c5 45e0 	str.w	r4, [r5, #1504]	; 0x5e0
 8000c3a:	f8c5 45e4 	str.w	r4, [r5, #1508]	; 0x5e4
 8000c3e:	f885 45e8 	strb.w	r4, [r5, #1512]	; 0x5e8
 8000c42:	f8c5 45ec 	str.w	r4, [r5, #1516]	; 0x5ec
 8000c46:	f8c5 45f0 	str.w	r4, [r5, #1520]	; 0x5f0
 8000c4a:	f8c5 45f4 	str.w	r4, [r5, #1524]	; 0x5f4
 8000c4e:	f885 45f8 	strb.w	r4, [r5, #1528]	; 0x5f8
 8000c52:	f004 ff99 	bl	8005b88 <__aeabi_atexit>
 8000c56:	4b20      	ldr	r3, [pc, #128]	; (8000cd8 <_GLOBAL__sub_I_can+0x184>)
 8000c58:	4a20      	ldr	r2, [pc, #128]	; (8000cdc <_GLOBAL__sub_I_can+0x188>)
 8000c5a:	4e21      	ldr	r6, [pc, #132]	; (8000ce0 <_GLOBAL__sub_I_can+0x18c>)
 8000c5c:	4d21      	ldr	r5, [pc, #132]	; (8000ce4 <_GLOBAL__sub_I_can+0x190>)
 8000c5e:	4822      	ldr	r0, [pc, #136]	; (8000ce8 <_GLOBAL__sub_I_can+0x194>)
 8000c60:	4922      	ldr	r1, [pc, #136]	; (8000cec <_GLOBAL__sub_I_can+0x198>)
 8000c62:	601e      	str	r6, [r3, #0]
 8000c64:	609c      	str	r4, [r3, #8]
 8000c66:	60d8      	str	r0, [r3, #12]
 8000c68:	6119      	str	r1, [r3, #16]
 8000c6a:	615c      	str	r4, [r3, #20]
 8000c6c:	619c      	str	r4, [r3, #24]
 8000c6e:	61dc      	str	r4, [r3, #28]
 8000c70:	621c      	str	r4, [r3, #32]
 8000c72:	625c      	str	r4, [r3, #36]	; 0x24
 8000c74:	f883 4028 	strb.w	r4, [r3, #40]	; 0x28
 8000c78:	62dc      	str	r4, [r3, #44]	; 0x2c
 8000c7a:	6053      	str	r3, [r2, #4]
 8000c7c:	605d      	str	r5, [r3, #4]
 8000c7e:	4f1c      	ldr	r7, [pc, #112]	; (8000cf0 <_GLOBAL__sub_I_can+0x19c>)
 8000c80:	4b1c      	ldr	r3, [pc, #112]	; (8000cf4 <_GLOBAL__sub_I_can+0x1a0>)
 8000c82:	6017      	str	r7, [r2, #0]
 8000c84:	6114      	str	r4, [r2, #16]
 8000c86:	4a1c      	ldr	r2, [pc, #112]	; (8000cf8 <_GLOBAL__sub_I_can+0x1a4>)
 8000c88:	601a      	str	r2, [r3, #0]
 8000c8a:	4a1c      	ldr	r2, [pc, #112]	; (8000cfc <_GLOBAL__sub_I_can+0x1a8>)
 8000c8c:	63da      	str	r2, [r3, #60]	; 0x3c
 8000c8e:	2201      	movs	r2, #1
 8000c90:	641a      	str	r2, [r3, #64]	; 0x40
 8000c92:	4a1b      	ldr	r2, [pc, #108]	; (8000d00 <_GLOBAL__sub_I_can+0x1ac>)
 8000c94:	60de      	str	r6, [r3, #12]
 8000c96:	611d      	str	r5, [r3, #16]
 8000c98:	615c      	str	r4, [r3, #20]
 8000c9a:	6198      	str	r0, [r3, #24]
 8000c9c:	61d9      	str	r1, [r3, #28]
 8000c9e:	621c      	str	r4, [r3, #32]
 8000ca0:	625c      	str	r4, [r3, #36]	; 0x24
 8000ca2:	629c      	str	r4, [r3, #40]	; 0x28
 8000ca4:	62dc      	str	r4, [r3, #44]	; 0x2c
 8000ca6:	631c      	str	r4, [r3, #48]	; 0x30
 8000ca8:	f883 4034 	strb.w	r4, [r3, #52]	; 0x34
 8000cac:	639c      	str	r4, [r3, #56]	; 0x38
 8000cae:	609a      	str	r2, [r3, #8]
 8000cb0:	b003      	add	sp, #12
 8000cb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cb4:	2000029c 	.word	0x2000029c
 8000cb8:	200001c4 	.word	0x200001c4
 8000cbc:	20000350 	.word	0x20000350
 8000cc0:	080055dd 	.word	0x080055dd
 8000cc4:	2000028c 	.word	0x2000028c
 8000cc8:	2000027c 	.word	0x2000027c
 8000ccc:	08006c6c 	.word	0x08006c6c
 8000cd0:	08006c0c 	.word	0x08006c0c
 8000cd4:	080010bd 	.word	0x080010bd
 8000cd8:	20000988 	.word	0x20000988
 8000cdc:	20000974 	.word	0x20000974
 8000ce0:	08006c54 	.word	0x08006c54
 8000ce4:	08006c3c 	.word	0x08006c3c
 8000ce8:	08006c24 	.word	0x08006c24
 8000cec:	08006f01 	.word	0x08006f01
 8000cf0:	08006c9c 	.word	0x08006c9c
 8000cf4:	200009b8 	.word	0x200009b8
 8000cf8:	08006c80 	.word	0x08006c80
 8000cfc:	080003bd 	.word	0x080003bd
 8000d00:	08006cac 	.word	0x08006cac

08000d04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d06:	2963      	cmp	r1, #99	; 0x63
 8000d08:	b085      	sub	sp, #20
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	460e      	mov	r6, r1
 8000d0e:	dd03      	ble.n	8000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000d10:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000d14:	2d00      	cmp	r5, #0
 8000d16:	d04d      	beq.n	8000db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000d18:	6813      	ldr	r3, [r2, #0]
 8000d1a:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	4610      	mov	r0, r2
 8000d22:	4798      	blx	r3
 8000d24:	23ff      	movs	r3, #255	; 0xff
 8000d26:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000d2a:	23fe      	movs	r3, #254	; 0xfe
 8000d2c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000d30:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000d34:	b2c3      	uxtb	r3, r0
 8000d36:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000d3a:	4413      	add	r3, r2
 8000d3c:	43db      	mvns	r3, r3
 8000d3e:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000d42:	f346 2607 	sbfx	r6, r6, #8, #8
 8000d46:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000d4a:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000d4e:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000d52:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000d56:	2205      	movs	r2, #5
 8000d58:	2300      	movs	r3, #0
 8000d5a:	1d86      	adds	r6, r0, #6
 8000d5c:	42b2      	cmp	r2, r6
 8000d5e:	dc04      	bgt.n	8000d6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000d60:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000d64:	3201      	adds	r2, #1
 8000d66:	442b      	add	r3, r5
 8000d68:	e7f8      	b.n	8000d5c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000d6a:	f100 0508 	add.w	r5, r0, #8
 8000d6e:	4420      	add	r0, r4
 8000d70:	43db      	mvns	r3, r3
 8000d72:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000d76:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000d7a:	dc0c      	bgt.n	8000d96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000d7c:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000d80:	463e      	mov	r6, r7
 8000d82:	3404      	adds	r4, #4
 8000d84:	1bf3      	subs	r3, r6, r7
 8000d86:	429d      	cmp	r5, r3
 8000d88:	dd14      	ble.n	8000db4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000d8a:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000d8e:	4620      	mov	r0, r4
 8000d90:	f000 fb1a 	bl	80013c8 <BufferedSerial::putc(int)>
 8000d94:	e7f6      	b.n	8000d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000d96:	4b09      	ldr	r3, [pc, #36]	; (8000dbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000d98:	9301      	str	r3, [sp, #4]
 8000d9a:	2303      	movs	r3, #3
 8000d9c:	f88d 3008 	strb.w	r3, [sp, #8]
 8000da0:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000da2:	9303      	str	r3, [sp, #12]
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	aa01      	add	r2, sp, #4
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	2107      	movs	r1, #7
 8000dac:	4620      	mov	r0, r4
 8000dae:	4798      	blx	r3
 8000db0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000db4:	4628      	mov	r0, r5
 8000db6:	b005      	add	sp, #20
 8000db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000dba:	bf00      	nop
 8000dbc:	08006bf4 	.word	0x08006bf4
 8000dc0:	08006d65 	.word	0x08006d65

08000dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000dc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000dc8:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000dcc:	4604      	mov	r4, r0
 8000dce:	4640      	mov	r0, r8
 8000dd0:	f004 fb6a 	bl	80054a8 <mbed::Timer::read_ms()>
 8000dd4:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000dd8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000ddc:	1ac3      	subs	r3, r0, r3
 8000dde:	4293      	cmp	r3, r2
 8000de0:	bf84      	itt	hi
 8000de2:	2300      	movhi	r3, #0
 8000de4:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000de8:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000dec:	4605      	mov	r5, r0
 8000dee:	b133      	cbz	r3, 8000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000df0:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000df4:	4283      	cmp	r3, r0
 8000df6:	bf3c      	itt	cc
 8000df8:	2300      	movcc	r3, #0
 8000dfa:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000dfe:	f104 0904 	add.w	r9, r4, #4
 8000e02:	2600      	movs	r6, #0
 8000e04:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000e08:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000e0c:	b9ab      	cbnz	r3, 8000e3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000e0e:	4648      	mov	r0, r9
 8000e10:	f000 f982 	bl	8001118 <BufferedSerial::readable()>
 8000e14:	b9e8      	cbnz	r0, 8000e52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000e16:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000e1a:	b160      	cbz	r0, 8000e36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000e1c:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000e20:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000e24:	1aeb      	subs	r3, r5, r3
 8000e26:	4293      	cmp	r3, r2
 8000e28:	d904      	bls.n	8000e34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	f7ff fdd2 	bl	80009d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000e30:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000e34:	2000      	movs	r0, #0
 8000e36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e3a:	4640      	mov	r0, r8
 8000e3c:	f004 fb34 	bl	80054a8 <mbed::Timer::read_ms()>
 8000e40:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000e44:	1b40      	subs	r0, r0, r5
 8000e46:	4298      	cmp	r0, r3
 8000e48:	d9e1      	bls.n	8000e0e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000e4a:	f06f 0001 	mvn.w	r0, #1
 8000e4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e52:	4648      	mov	r0, r9
 8000e54:	f000 f96a 	bl	800112c <BufferedSerial::getc()>
 8000e58:	2800      	cmp	r0, #0
 8000e5a:	dbdc      	blt.n	8000e16 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000e5c:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000e60:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000e64:	4403      	add	r3, r0
 8000e66:	f1ba 0f07 	cmp.w	r10, #7
 8000e6a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000e6e:	d112      	bne.n	8000e96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000e70:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000e74:	1c5a      	adds	r2, r3, #1
 8000e76:	4423      	add	r3, r4
 8000e78:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000e7c:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000e80:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000e84:	3b01      	subs	r3, #1
 8000e86:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d1bc      	bne.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000e8e:	2308      	movs	r3, #8
 8000e90:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000e94:	e7b8      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000e96:	f1ba 0f00 	cmp.w	r10, #0
 8000e9a:	d114      	bne.n	8000ec6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000e9c:	28ff      	cmp	r0, #255	; 0xff
 8000e9e:	d107      	bne.n	8000eb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000ea0:	2301      	movs	r3, #1
 8000ea2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000ea6:	f105 0314 	add.w	r3, r5, #20
 8000eaa:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000eae:	e7ab      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000eb0:	4640      	mov	r0, r8
 8000eb2:	f004 faf9 	bl	80054a8 <mbed::Timer::read_ms()>
 8000eb6:	f241 3388 	movw	r3, #5000	; 0x1388
 8000eba:	1b40      	subs	r0, r0, r5
 8000ebc:	4298      	cmp	r0, r3
 8000ebe:	d9a3      	bls.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ec0:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000ec4:	e7c1      	b.n	8000e4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000ec6:	f1ba 0f01 	cmp.w	r10, #1
 8000eca:	d10d      	bne.n	8000ee8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000ecc:	28fe      	cmp	r0, #254	; 0xfe
 8000ece:	d101      	bne.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000ed0:	2302      	movs	r3, #2
 8000ed2:	e7dd      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000ed4:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000ed8:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000edc:	2b00      	cmp	r3, #0
 8000ede:	d193      	bne.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f7ff fd77 	bl	80009d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000ee6:	e78f      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ee8:	f1ba 0f02 	cmp.w	r10, #2
 8000eec:	d109      	bne.n	8000f02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000eee:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000ef2:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000ef6:	2303      	movs	r3, #3
 8000ef8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000efc:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000f00:	e782      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f02:	f1ba 0f03 	cmp.w	r10, #3
 8000f06:	d107      	bne.n	8000f18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000f08:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000f0c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f10:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000f14:	2304      	movs	r3, #4
 8000f16:	e7bb      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f18:	f1ba 0f04 	cmp.w	r10, #4
 8000f1c:	d10b      	bne.n	8000f36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000f1e:	425a      	negs	r2, r3
 8000f20:	b2d2      	uxtb	r2, r2
 8000f22:	b2db      	uxtb	r3, r3
 8000f24:	bf58      	it	pl
 8000f26:	4253      	negpl	r3, r2
 8000f28:	2bff      	cmp	r3, #255	; 0xff
 8000f2a:	d101      	bne.n	8000f30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000f2c:	2305      	movs	r3, #5
 8000f2e:	e7af      	b.n	8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f30:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000f34:	e768      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f36:	f1ba 0f05 	cmp.w	r10, #5
 8000f3a:	d103      	bne.n	8000f44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000f3c:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000f40:	2306      	movs	r3, #6
 8000f42:	e7d9      	b.n	8000ef8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000f44:	f1ba 0f06 	cmp.w	r10, #6
 8000f48:	d10b      	bne.n	8000f62 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000f4a:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000f4e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f52:	2307      	movs	r3, #7
 8000f54:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000f58:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000f5c:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000f60:	e793      	b.n	8000e8a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000f62:	f1ba 0f08 	cmp.w	r10, #8
 8000f66:	f47f af4f 	bne.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f6a:	425a      	negs	r2, r3
 8000f6c:	b2d2      	uxtb	r2, r2
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	bf58      	it	pl
 8000f72:	4253      	negpl	r3, r2
 8000f74:	2bff      	cmp	r3, #255	; 0xff
 8000f76:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000f7a:	f47f af45 	bne.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f7e:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000f82:	b96b      	cbnz	r3, 8000fa0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000f84:	4620      	mov	r0, r4
 8000f86:	f7ff fd25 	bl	80009d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000f8a:	4620      	mov	r0, r4
 8000f8c:	f7ff fd3a 	bl	8000a04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000f90:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000f94:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000f98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000fa0:	2b0a      	cmp	r3, #10
 8000fa2:	d104      	bne.n	8000fae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000fa4:	4639      	mov	r1, r7
 8000fa6:	4620      	mov	r0, r4
 8000fa8:	f7ff fd8a 	bl	8000ac0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000fac:	e72c      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fae:	2b06      	cmp	r3, #6
 8000fb0:	d108      	bne.n	8000fc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000fb2:	4639      	mov	r1, r7
 8000fb4:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000fb8:	f7ff fc75 	bl	80008a6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000fbc:	2301      	movs	r3, #1
 8000fbe:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000fc2:	e721      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fc4:	2b0b      	cmp	r3, #11
 8000fc6:	d102      	bne.n	8000fce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000fc8:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000fcc:	e71c      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fce:	33f8      	adds	r3, #248	; 0xf8
 8000fd0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000fd4:	2800      	cmp	r0, #0
 8000fd6:	f43f af17 	beq.w	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fda:	6803      	ldr	r3, [r0, #0]
 8000fdc:	4639      	mov	r1, r7
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	4798      	blx	r3
 8000fe2:	e711      	b.n	8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000fe4 <main>:
 8000fe4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000fe6:	4c2b      	ldr	r4, [pc, #172]	; (8001094 <main+0xb0>)
 8000fe8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000fec:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8000ff0:	1d20      	adds	r0, r4, #4
 8000ff2:	f004 fbc2 	bl	800577a <mbed::SerialBase::baud(int)>
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000ffc:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001000:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8001004:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8001008:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 800100c:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8001010:	2900      	cmp	r1, #0
 8001012:	d136      	bne.n	8001082 <main+0x9e>
 8001014:	4a20      	ldr	r2, [pc, #128]	; (8001098 <main+0xb4>)
 8001016:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 800101a:	337d      	adds	r3, #125	; 0x7d
 800101c:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8001020:	6093      	str	r3, [r2, #8]
 8001022:	60d4      	str	r4, [r2, #12]
 8001024:	4a1d      	ldr	r2, [pc, #116]	; (800109c <main+0xb8>)
 8001026:	2300      	movs	r3, #0
 8001028:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800102c:	bb69      	cbnz	r1, 800108a <main+0xa6>
 800102e:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8001032:	4a1b      	ldr	r2, [pc, #108]	; (80010a0 <main+0xbc>)
 8001034:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8001038:	3364      	adds	r3, #100	; 0x64
 800103a:	6053      	str	r3, [r2, #4]
 800103c:	4919      	ldr	r1, [pc, #100]	; (80010a4 <main+0xc0>)
 800103e:	481a      	ldr	r0, [pc, #104]	; (80010a8 <main+0xc4>)
 8001040:	f004 fa85 	bl	800554e <mbed::CAN::frequency(int)>
 8001044:	4b19      	ldr	r3, [pc, #100]	; (80010ac <main+0xc8>)
 8001046:	4818      	ldr	r0, [pc, #96]	; (80010a8 <main+0xc4>)
 8001048:	2208      	movs	r2, #8
 800104a:	731a      	strb	r2, [r3, #12]
 800104c:	4b18      	ldr	r3, [pc, #96]	; (80010b0 <main+0xcc>)
 800104e:	9300      	str	r3, [sp, #0]
 8001050:	2200      	movs	r2, #0
 8001052:	4b18      	ldr	r3, [pc, #96]	; (80010b4 <main+0xd0>)
 8001054:	9303      	str	r3, [sp, #12]
 8001056:	4669      	mov	r1, sp
 8001058:	f004 fb3c 	bl	80056d4 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>
 800105c:	9b03      	ldr	r3, [sp, #12]
 800105e:	b113      	cbz	r3, 8001066 <main+0x82>
 8001060:	689b      	ldr	r3, [r3, #8]
 8001062:	4668      	mov	r0, sp
 8001064:	4798      	blx	r3
 8001066:	4c14      	ldr	r4, [pc, #80]	; (80010b8 <main+0xd4>)
 8001068:	2006      	movs	r0, #6
 800106a:	6260      	str	r0, [r4, #36]	; 0x24
 800106c:	f005 f87c 	bl	8006168 <malloc>
 8001070:	62e0      	str	r0, [r4, #44]	; 0x2c
 8001072:	4c08      	ldr	r4, [pc, #32]	; (8001094 <main+0xb0>)
 8001074:	4620      	mov	r0, r4
 8001076:	f7ff fea5 	bl	8000dc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 800107a:	2001      	movs	r0, #1
 800107c:	f004 fc82 	bl	8005984 <wait_ms>
 8001080:	e7f8      	b.n	8001074 <main+0x90>
 8001082:	3301      	adds	r3, #1
 8001084:	2b19      	cmp	r3, #25
 8001086:	d1c1      	bne.n	800100c <main+0x28>
 8001088:	e7cc      	b.n	8001024 <main+0x40>
 800108a:	3301      	adds	r3, #1
 800108c:	2b19      	cmp	r3, #25
 800108e:	d1cb      	bne.n	8001028 <main+0x44>
 8001090:	e7d4      	b.n	800103c <main+0x58>
 8001092:	bf00      	nop
 8001094:	20000350 	.word	0x20000350
 8001098:	20000974 	.word	0x20000974
 800109c:	200008bc 	.word	0x200008bc
 80010a0:	200009b8 	.word	0x200009b8
 80010a4:	000f4240 	.word	0x000f4240
 80010a8:	2000029c 	.word	0x2000029c
 80010ac:	2000028c 	.word	0x2000028c
 80010b0:	080003f5 	.word	0x080003f5
 80010b4:	08006c90 	.word	0x08006c90
 80010b8:	20000988 	.word	0x20000988

080010bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4b04      	ldr	r3, [pc, #16]	; (80010d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 80010c0:	4604      	mov	r4, r0
 80010c2:	f840 3b04 	str.w	r3, [r0], #4
 80010c6:	f000 f8c3 	bl	8001250 <BufferedSerial::~BufferedSerial()>
 80010ca:	4620      	mov	r0, r4
 80010cc:	bd10      	pop	{r4, pc}
 80010ce:	bf00      	nop
 80010d0:	08006c6c 	.word	0x08006c6c

080010d4 <_start>:
 80010d4:	4807      	ldr	r0, [pc, #28]	; (80010f4 <_start+0x20>)
 80010d6:	4a08      	ldr	r2, [pc, #32]	; (80010f8 <_start+0x24>)
 80010d8:	b508      	push	{r3, lr}
 80010da:	1a12      	subs	r2, r2, r0
 80010dc:	2100      	movs	r1, #0
 80010de:	f005 f8cc 	bl	800627a <memset>
 80010e2:	f004 fd0f 	bl	8005b04 <software_init_hook>
 80010e6:	f005 f81b 	bl	8006120 <__libc_init_array>
 80010ea:	f004 fd12 	bl	8005b12 <__wrap_main>
 80010ee:	f004 fd4d 	bl	8005b8c <__wrap_exit>
 80010f2:	bf00      	nop
 80010f4:	20000260 	.word	0x20000260
 80010f8:	20002968 	.word	0x20002968

080010fc <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 80010fc:	b530      	push	{r4, r5, lr}
 80010fe:	6802      	ldr	r2, [r0, #0]
 8001100:	680d      	ldr	r5, [r1, #0]
 8001102:	4c04      	ldr	r4, [pc, #16]	; (8001114 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001104:	fbb5 f3f4 	udiv	r3, r5, r4
 8001108:	441a      	add	r2, r3
 800110a:	fb04 5313 	mls	r3, r4, r3, r5
 800110e:	6002      	str	r2, [r0, #0]
 8001110:	600b      	str	r3, [r1, #0]
 8001112:	bd30      	pop	{r4, r5, pc}
 8001114:	3b9aca00 	.word	0x3b9aca00

08001118 <BufferedSerial::readable()>:
 8001118:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 800111c:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8001120:	1a10      	subs	r0, r2, r0
 8001122:	bf18      	it	ne
 8001124:	2001      	movne	r0, #1
 8001126:	4770      	bx	lr

08001128 <BufferedSerial::writeable()>:
 8001128:	2001      	movs	r0, #1
 800112a:	4770      	bx	lr

0800112c <BufferedSerial::getc()>:
 800112c:	b510      	push	{r4, lr}
 800112e:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8001132:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8001136:	4603      	mov	r3, r0
 8001138:	1c50      	adds	r0, r2, #1
 800113a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 800113e:	5c88      	ldrb	r0, [r1, r2]
 8001140:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8001144:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8001148:	3a01      	subs	r2, #1
 800114a:	fbb4 f1f2 	udiv	r1, r4, r2
 800114e:	fb02 4211 	mls	r2, r2, r1, r4
 8001152:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8001156:	bd10      	pop	{r4, pc}

08001158 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001158:	4603      	mov	r3, r0
 800115a:	b110      	cbz	r0, 8001162 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 800115c:	c907      	ldmia	r1, {r0, r1, r2}
 800115e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001162:	4770      	bx	lr

08001164 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001164:	4770      	bx	lr

08001166 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001166:	6842      	ldr	r2, [r0, #4]
 8001168:	6881      	ldr	r1, [r0, #8]
 800116a:	6803      	ldr	r3, [r0, #0]
 800116c:	f012 0f01 	tst.w	r2, #1
 8001170:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001174:	bf1c      	itt	ne
 8001176:	5888      	ldrne	r0, [r1, r2]
 8001178:	58c3      	ldrne	r3, [r0, r3]
 800117a:	1888      	adds	r0, r1, r2
 800117c:	4718      	bx	r3

0800117e <mbed::Callback<void ()>::~Callback()>:
 800117e:	68c3      	ldr	r3, [r0, #12]
 8001180:	b510      	push	{r4, lr}
 8001182:	4604      	mov	r4, r0
 8001184:	b10b      	cbz	r3, 800118a <mbed::Callback<void ()>::~Callback()+0xc>
 8001186:	689b      	ldr	r3, [r3, #8]
 8001188:	4798      	blx	r3
 800118a:	4620      	mov	r0, r4
 800118c:	bd10      	pop	{r4, pc}

0800118e <BufferedSerial::txIrq()>:
 800118e:	b530      	push	{r4, r5, lr}
 8001190:	4604      	mov	r4, r0
 8001192:	b085      	sub	sp, #20
 8001194:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001198:	4628      	mov	r0, r5
 800119a:	f002 fd49 	bl	8003c30 <serial_writable>
 800119e:	b330      	cbz	r0, 80011ee <BufferedSerial::txIrq()+0x60>
 80011a0:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 80011a4:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80011a8:	429a      	cmp	r2, r3
 80011aa:	d016      	beq.n	80011da <BufferedSerial::txIrq()+0x4c>
 80011ac:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80011b0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 80011b4:	1c59      	adds	r1, r3, #1
 80011b6:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 80011ba:	5cd1      	ldrb	r1, [r2, r3]
 80011bc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 80011c0:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 80011c4:	3b01      	subs	r3, #1
 80011c6:	fbb0 f2f3 	udiv	r2, r0, r3
 80011ca:	fb03 0312 	mls	r3, r3, r2, r0
 80011ce:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80011d2:	4628      	mov	r0, r5
 80011d4:	f002 fd36 	bl	8003c44 <serial_putc>
 80011d8:	e7de      	b.n	8001198 <BufferedSerial::txIrq()+0xa>
 80011da:	2300      	movs	r3, #0
 80011dc:	4620      	mov	r0, r4
 80011de:	2201      	movs	r2, #1
 80011e0:	4669      	mov	r1, sp
 80011e2:	9303      	str	r3, [sp, #12]
 80011e4:	f004 fb46 	bl	8005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011e8:	4668      	mov	r0, sp
 80011ea:	f7ff ffc8 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80011ee:	b005      	add	sp, #20
 80011f0:	bd30      	pop	{r4, r5, pc}

080011f2 <mbed::Callback<void (int)>::~Callback()>:
 80011f2:	68c3      	ldr	r3, [r0, #12]
 80011f4:	b510      	push	{r4, lr}
 80011f6:	4604      	mov	r4, r0
 80011f8:	b10b      	cbz	r3, 80011fe <mbed::Callback<void (int)>::~Callback()+0xc>
 80011fa:	689b      	ldr	r3, [r3, #8]
 80011fc:	4798      	blx	r3
 80011fe:	4620      	mov	r0, r4
 8001200:	bd10      	pop	{r4, pc}
	...

08001204 <mbed::SerialBase::~SerialBase()>:
 8001204:	b570      	push	{r4, r5, r6, lr}
 8001206:	4606      	mov	r6, r0
 8001208:	4b0b      	ldr	r3, [pc, #44]	; (8001238 <mbed::SerialBase::~SerialBase()+0x34>)
 800120a:	f846 3b98 	str.w	r3, [r6], #152
 800120e:	4604      	mov	r4, r0
 8001210:	b146      	cbz	r6, 8001224 <mbed::SerialBase::~SerialBase()+0x20>
 8001212:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8001216:	42b5      	cmp	r5, r6
 8001218:	d004      	beq.n	8001224 <mbed::SerialBase::~SerialBase()+0x20>
 800121a:	3d10      	subs	r5, #16
 800121c:	4628      	mov	r0, r5
 800121e:	f7ff ffae 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8001222:	e7f8      	b.n	8001216 <mbed::SerialBase::~SerialBase()+0x12>
 8001224:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8001228:	f7ff ffe3 	bl	80011f2 <mbed::Callback<void (int)>::~Callback()>
 800122c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8001230:	f7ff ffdf 	bl	80011f2 <mbed::Callback<void (int)>::~Callback()>
 8001234:	4620      	mov	r0, r4
 8001236:	bd70      	pop	{r4, r5, r6, pc}
 8001238:	080072fc 	.word	0x080072fc

0800123c <mbed::SerialBase::~SerialBase()>:
 800123c:	b510      	push	{r4, lr}
 800123e:	4604      	mov	r4, r0
 8001240:	f7ff ffe0 	bl	8001204 <mbed::SerialBase::~SerialBase()>
 8001244:	4620      	mov	r0, r4
 8001246:	f004 fcbd 	bl	8005bc4 <operator delete(void*)>
 800124a:	4620      	mov	r0, r4
 800124c:	bd10      	pop	{r4, pc}
	...

08001250 <BufferedSerial::~BufferedSerial()>:
 8001250:	b530      	push	{r4, r5, lr}
 8001252:	4b13      	ldr	r3, [pc, #76]	; (80012a0 <BufferedSerial::~BufferedSerial()+0x50>)
 8001254:	6003      	str	r3, [r0, #0]
 8001256:	b085      	sub	sp, #20
 8001258:	2500      	movs	r5, #0
 800125a:	462a      	mov	r2, r5
 800125c:	4669      	mov	r1, sp
 800125e:	4604      	mov	r4, r0
 8001260:	9503      	str	r5, [sp, #12]
 8001262:	f004 fb07 	bl	8005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001266:	4668      	mov	r0, sp
 8001268:	f7ff ff89 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 800126c:	2201      	movs	r2, #1
 800126e:	4669      	mov	r1, sp
 8001270:	4620      	mov	r0, r4
 8001272:	9503      	str	r5, [sp, #12]
 8001274:	f004 fafe 	bl	8005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001278:	4668      	mov	r0, sp
 800127a:	f7ff ff80 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 800127e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001282:	f000 f923 	bl	80014cc <Buffer<char>::~Buffer()>
 8001286:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800128a:	f000 f91f 	bl	80014cc <Buffer<char>::~Buffer()>
 800128e:	4b05      	ldr	r3, [pc, #20]	; (80012a4 <BufferedSerial::~BufferedSerial()+0x54>)
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	4620      	mov	r0, r4
 8001294:	f7ff ffb6 	bl	8001204 <mbed::SerialBase::~SerialBase()>
 8001298:	4620      	mov	r0, r4
 800129a:	b005      	add	sp, #20
 800129c:	bd30      	pop	{r4, r5, pc}
 800129e:	bf00      	nop
 80012a0:	08006f0c 	.word	0x08006f0c
 80012a4:	080072cc 	.word	0x080072cc

080012a8 <BufferedSerial::~BufferedSerial()>:
 80012a8:	b510      	push	{r4, lr}
 80012aa:	4604      	mov	r4, r0
 80012ac:	f7ff ffd0 	bl	8001250 <BufferedSerial::~BufferedSerial()>
 80012b0:	4620      	mov	r0, r4
 80012b2:	f004 fc87 	bl	8005bc4 <operator delete(void*)>
 80012b6:	4620      	mov	r0, r4
 80012b8:	bd10      	pop	{r4, pc}
	...

080012bc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 80012bc:	b510      	push	{r4, lr}
 80012be:	b086      	sub	sp, #24
 80012c0:	e88d 000c 	stmia.w	sp, {r2, r3}
 80012c4:	9b01      	ldr	r3, [sp, #4]
 80012c6:	9202      	str	r2, [sp, #8]
 80012c8:	9303      	str	r3, [sp, #12]
 80012ca:	9104      	str	r1, [sp, #16]
 80012cc:	4b05      	ldr	r3, [pc, #20]	; (80012e4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 80012ce:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80012d2:	9305      	str	r3, [sp, #20]
 80012d4:	a902      	add	r1, sp, #8
 80012d6:	f004 facd 	bl	8005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80012da:	a802      	add	r0, sp, #8
 80012dc:	f7ff ff4f 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80012e0:	b006      	add	sp, #24
 80012e2:	bd10      	pop	{r4, pc}
 80012e4:	08006e80 	.word	0x08006e80

080012e8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80012e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80012ea:	4604      	mov	r4, r0
 80012ec:	461d      	mov	r5, r3
 80012ee:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80012f2:	9e08      	ldr	r6, [sp, #32]
 80012f4:	f004 f8fe 	bl	80054f4 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 80012f8:	4620      	mov	r0, r4
 80012fa:	4b0f      	ldr	r3, [pc, #60]	; (8001338 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 80012fc:	f840 3bbc 	str.w	r3, [r0], #188
 8001300:	4629      	mov	r1, r5
 8001302:	f000 f8f2 	bl	80014ea <Buffer<char>::Buffer(unsigned long)>
 8001306:	fb06 f105 	mul.w	r1, r6, r5
 800130a:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800130e:	f000 f8ec 	bl	80014ea <Buffer<char>::Buffer(unsigned long)>
 8001312:	4b0a      	ldr	r3, [pc, #40]	; (800133c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001314:	9302      	str	r3, [sp, #8]
 8001316:	2300      	movs	r3, #0
 8001318:	9303      	str	r3, [sp, #12]
 800131a:	9300      	str	r3, [sp, #0]
 800131c:	ab04      	add	r3, sp, #16
 800131e:	4620      	mov	r0, r4
 8001320:	e913 000c 	ldmdb	r3, {r2, r3}
 8001324:	4621      	mov	r1, r4
 8001326:	f7ff ffc9 	bl	80012bc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 800132a:	4620      	mov	r0, r4
 800132c:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001330:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001334:	b004      	add	sp, #16
 8001336:	bd70      	pop	{r4, r5, r6, pc}
 8001338:	08006f0c 	.word	0x08006f0c
 800133c:	080013a7 	.word	0x080013a7

08001340 <BufferedSerial::prime()>:
 8001340:	b570      	push	{r4, r5, r6, lr}
 8001342:	4604      	mov	r4, r0
 8001344:	b086      	sub	sp, #24
 8001346:	304c      	adds	r0, #76	; 0x4c
 8001348:	f002 fc72 	bl	8003c30 <serial_writable>
 800134c:	b1c0      	cbz	r0, 8001380 <BufferedSerial::prime()+0x40>
 800134e:	ad02      	add	r5, sp, #8
 8001350:	2201      	movs	r2, #1
 8001352:	4629      	mov	r1, r5
 8001354:	2600      	movs	r6, #0
 8001356:	4620      	mov	r0, r4
 8001358:	9605      	str	r6, [sp, #20]
 800135a:	f004 fa8b 	bl	8005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800135e:	4628      	mov	r0, r5
 8001360:	f7ff ff0d 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8001364:	4620      	mov	r0, r4
 8001366:	f7ff ff12 	bl	800118e <BufferedSerial::txIrq()>
 800136a:	4b06      	ldr	r3, [pc, #24]	; (8001384 <BufferedSerial::prime()+0x44>)
 800136c:	9302      	str	r3, [sp, #8]
 800136e:	2301      	movs	r3, #1
 8001370:	9603      	str	r6, [sp, #12]
 8001372:	9300      	str	r3, [sp, #0]
 8001374:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001378:	4621      	mov	r1, r4
 800137a:	4620      	mov	r0, r4
 800137c:	f7ff ff9e 	bl	80012bc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001380:	b006      	add	sp, #24
 8001382:	bd70      	pop	{r4, r5, r6, pc}
 8001384:	0800118f 	.word	0x0800118f

08001388 <Buffer<char>::put(char)>:
 8001388:	6843      	ldr	r3, [r0, #4]
 800138a:	6802      	ldr	r2, [r0, #0]
 800138c:	b510      	push	{r4, lr}
 800138e:	1c5c      	adds	r4, r3, #1
 8001390:	6044      	str	r4, [r0, #4]
 8001392:	54d1      	strb	r1, [r2, r3]
 8001394:	68c3      	ldr	r3, [r0, #12]
 8001396:	6841      	ldr	r1, [r0, #4]
 8001398:	3b01      	subs	r3, #1
 800139a:	fbb1 f2f3 	udiv	r2, r1, r3
 800139e:	fb03 1312 	mls	r3, r3, r2, r1
 80013a2:	6043      	str	r3, [r0, #4]
 80013a4:	bd10      	pop	{r4, pc}

080013a6 <BufferedSerial::rxIrq()>:
 80013a6:	b538      	push	{r3, r4, r5, lr}
 80013a8:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 80013ac:	4604      	mov	r4, r0
 80013ae:	4628      	mov	r0, r5
 80013b0:	f002 fc22 	bl	8003bf8 <serial_readable>
 80013b4:	b138      	cbz	r0, 80013c6 <BufferedSerial::rxIrq()+0x20>
 80013b6:	4628      	mov	r0, r5
 80013b8:	f002 fc28 	bl	8003c0c <serial_getc>
 80013bc:	b2c1      	uxtb	r1, r0
 80013be:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80013c2:	f7ff ffe1 	bl	8001388 <Buffer<char>::put(char)>
 80013c6:	bd38      	pop	{r3, r4, r5, pc}

080013c8 <BufferedSerial::putc(int)>:
 80013c8:	b538      	push	{r3, r4, r5, lr}
 80013ca:	4605      	mov	r5, r0
 80013cc:	460c      	mov	r4, r1
 80013ce:	30cc      	adds	r0, #204	; 0xcc
 80013d0:	b2c9      	uxtb	r1, r1
 80013d2:	f7ff ffd9 	bl	8001388 <Buffer<char>::put(char)>
 80013d6:	4628      	mov	r0, r5
 80013d8:	f7ff ffb2 	bl	8001340 <BufferedSerial::prime()>
 80013dc:	4620      	mov	r0, r4
 80013de:	bd38      	pop	{r3, r4, r5, pc}

080013e0 <BufferedSerial::puts(char const*)>:
 80013e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013e4:	4607      	mov	r7, r0
 80013e6:	460c      	mov	r4, r1
 80013e8:	b1b1      	cbz	r1, 8001418 <BufferedSerial::puts(char const*)+0x38>
 80013ea:	460d      	mov	r5, r1
 80013ec:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80013f0:	462e      	mov	r6, r5
 80013f2:	f816 1b01 	ldrb.w	r1, [r6], #1
 80013f6:	b121      	cbz	r1, 8001402 <BufferedSerial::puts(char const*)+0x22>
 80013f8:	4640      	mov	r0, r8
 80013fa:	f7ff ffc5 	bl	8001388 <Buffer<char>::put(char)>
 80013fe:	4635      	mov	r5, r6
 8001400:	e7f6      	b.n	80013f0 <BufferedSerial::puts(char const*)+0x10>
 8001402:	210a      	movs	r1, #10
 8001404:	4640      	mov	r0, r8
 8001406:	f7ff ffbf 	bl	8001388 <Buffer<char>::put(char)>
 800140a:	1b2c      	subs	r4, r5, r4
 800140c:	4638      	mov	r0, r7
 800140e:	f7ff ff97 	bl	8001340 <BufferedSerial::prime()>
 8001412:	1c60      	adds	r0, r4, #1
 8001414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001418:	4608      	mov	r0, r1
 800141a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800141e <BufferedSerial::write(void const*, unsigned int)>:
 800141e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001422:	4607      	mov	r7, r0
 8001424:	460d      	mov	r5, r1
 8001426:	b191      	cbz	r1, 800144e <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001428:	b1a2      	cbz	r2, 8001454 <BufferedSerial::write(void const*, unsigned int)+0x36>
 800142a:	188c      	adds	r4, r1, r2
 800142c:	460e      	mov	r6, r1
 800142e:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001432:	42b4      	cmp	r4, r6
 8001434:	d005      	beq.n	8001442 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001436:	f816 1b01 	ldrb.w	r1, [r6], #1
 800143a:	4640      	mov	r0, r8
 800143c:	f7ff ffa4 	bl	8001388 <Buffer<char>::put(char)>
 8001440:	e7f7      	b.n	8001432 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001442:	4638      	mov	r0, r7
 8001444:	f7ff ff7c 	bl	8001340 <BufferedSerial::prime()>
 8001448:	1b60      	subs	r0, r4, r5
 800144a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800144e:	4608      	mov	r0, r1
 8001450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001454:	4610      	mov	r0, r2
 8001456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800145c <BufferedSerial::printf(char const*, ...)>:
 800145c:	b40e      	push	{r1, r2, r3}
 800145e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001462:	b085      	sub	sp, #20
 8001464:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001468:	af02      	add	r7, sp, #8
 800146a:	1dd3      	adds	r3, r2, #7
 800146c:	f023 0307 	bic.w	r3, r3, #7
 8001470:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001474:	ebad 0d03 	sub.w	sp, sp, r3
 8001478:	f854 8b04 	ldr.w	r8, [r4], #4
 800147c:	ae02      	add	r6, sp, #8
 800147e:	4605      	mov	r5, r0
 8001480:	2100      	movs	r1, #0
 8001482:	4630      	mov	r0, r6
 8001484:	f004 fef9 	bl	800627a <memset>
 8001488:	4622      	mov	r2, r4
 800148a:	4641      	mov	r1, r8
 800148c:	4630      	mov	r0, r6
 800148e:	607c      	str	r4, [r7, #4]
 8001490:	f005 f9e0 	bl	8006854 <vsiprintf>
 8001494:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001498:	4283      	cmp	r3, r0
 800149a:	4602      	mov	r2, r0
 800149c:	d20c      	bcs.n	80014b8 <BufferedSerial::printf(char const*, ...)+0x5c>
 800149e:	9000      	str	r0, [sp, #0]
 80014a0:	225d      	movs	r2, #93	; 0x5d
 80014a2:	4808      	ldr	r0, [pc, #32]	; (80014c4 <BufferedSerial::printf(char const*, ...)+0x68>)
 80014a4:	4908      	ldr	r1, [pc, #32]	; (80014c8 <BufferedSerial::printf(char const*, ...)+0x6c>)
 80014a6:	f000 f901 	bl	80016ac <error>
 80014aa:	2000      	movs	r0, #0
 80014ac:	370c      	adds	r7, #12
 80014ae:	46bd      	mov	sp, r7
 80014b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014b4:	b003      	add	sp, #12
 80014b6:	4770      	bx	lr
 80014b8:	4631      	mov	r1, r6
 80014ba:	4628      	mov	r0, r5
 80014bc:	f7ff ffaf 	bl	800141e <BufferedSerial::write(void const*, unsigned int)>
 80014c0:	e7f4      	b.n	80014ac <BufferedSerial::printf(char const*, ...)+0x50>
 80014c2:	bf00      	nop
 80014c4:	08006ec8 	.word	0x08006ec8
 80014c8:	08006e8c 	.word	0x08006e8c

080014cc <Buffer<char>::~Buffer()>:
 80014cc:	b510      	push	{r4, lr}
 80014ce:	4604      	mov	r4, r0
 80014d0:	6800      	ldr	r0, [r0, #0]
 80014d2:	b108      	cbz	r0, 80014d8 <Buffer<char>::~Buffer()+0xc>
 80014d4:	f004 fb72 	bl	8005bbc <operator delete[](void*)>
 80014d8:	4620      	mov	r0, r4
 80014da:	bd10      	pop	{r4, pc}

080014dc <Buffer<char>::clear()>:
 80014dc:	2100      	movs	r1, #0
 80014de:	6041      	str	r1, [r0, #4]
 80014e0:	68c2      	ldr	r2, [r0, #12]
 80014e2:	6081      	str	r1, [r0, #8]
 80014e4:	6800      	ldr	r0, [r0, #0]
 80014e6:	f004 bec8 	b.w	800627a <memset>

080014ea <Buffer<char>::Buffer(unsigned long)>:
 80014ea:	b538      	push	{r3, r4, r5, lr}
 80014ec:	4604      	mov	r4, r0
 80014ee:	4608      	mov	r0, r1
 80014f0:	460d      	mov	r5, r1
 80014f2:	f004 fb57 	bl	8005ba4 <operator new[](unsigned int)>
 80014f6:	60e5      	str	r5, [r4, #12]
 80014f8:	6020      	str	r0, [r4, #0]
 80014fa:	4620      	mov	r0, r4
 80014fc:	f7ff ffee 	bl	80014dc <Buffer<char>::clear()>
 8001500:	4620      	mov	r0, r4
 8001502:	bd38      	pop	{r3, r4, r5, pc}

08001504 <_gpio_init_out.part.2>:
 8001504:	b538      	push	{r3, r4, r5, lr}
 8001506:	4604      	mov	r4, r0
 8001508:	460d      	mov	r5, r1
 800150a:	6803      	ldr	r3, [r0, #0]
 800150c:	b15a      	cbz	r2, 8001526 <_gpio_init_out.part.2+0x22>
 800150e:	6882      	ldr	r2, [r0, #8]
 8001510:	6013      	str	r3, [r2, #0]
 8001512:	4620      	mov	r0, r4
 8001514:	2101      	movs	r1, #1
 8001516:	f001 fd33 	bl	8002f80 <gpio_dir>
 800151a:	4629      	mov	r1, r5
 800151c:	4620      	mov	r0, r4
 800151e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001522:	f001 bd29 	b.w	8002f78 <gpio_mode>
 8001526:	68c2      	ldr	r2, [r0, #12]
 8001528:	041b      	lsls	r3, r3, #16
 800152a:	e7f1      	b.n	8001510 <_gpio_init_out.part.2+0xc>

0800152c <gpio_init_out_ex>:
 800152c:	b570      	push	{r4, r5, r6, lr}
 800152e:	460e      	mov	r6, r1
 8001530:	4604      	mov	r4, r0
 8001532:	4615      	mov	r5, r2
 8001534:	f001 fd00 	bl	8002f38 <gpio_init>
 8001538:	3601      	adds	r6, #1
 800153a:	d006      	beq.n	800154a <gpio_init_out_ex+0x1e>
 800153c:	462a      	mov	r2, r5
 800153e:	4620      	mov	r0, r4
 8001540:	2100      	movs	r1, #0
 8001542:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001546:	f7ff bfdd 	b.w	8001504 <_gpio_init_out.part.2>
 800154a:	bd70      	pop	{r4, r5, r6, pc}

0800154c <gpio_init_out>:
 800154c:	2200      	movs	r2, #0
 800154e:	f7ff bfed 	b.w	800152c <gpio_init_out_ex>
	...

08001554 <get_us_ticker_data>:
 8001554:	4800      	ldr	r0, [pc, #0]	; (8001558 <get_us_ticker_data+0x4>)
 8001556:	4770      	bx	lr
 8001558:	08006f38 	.word	0x08006f38

0800155c <us_ticker_irq_handler>:
 800155c:	4801      	ldr	r0, [pc, #4]	; (8001564 <us_ticker_irq_handler+0x8>)
 800155e:	f000 b803 	b.w	8001568 <ticker_irq_handler>
 8001562:	bf00      	nop
 8001564:	08006f38 	.word	0x08006f38

08001568 <ticker_irq_handler>:
 8001568:	6803      	ldr	r3, [r0, #0]
 800156a:	b570      	push	{r4, r5, r6, lr}
 800156c:	68db      	ldr	r3, [r3, #12]
 800156e:	4604      	mov	r4, r0
 8001570:	4798      	blx	r3
 8001572:	6863      	ldr	r3, [r4, #4]
 8001574:	685a      	ldr	r2, [r3, #4]
 8001576:	6823      	ldr	r3, [r4, #0]
 8001578:	b91a      	cbnz	r2, 8001582 <ticker_irq_handler+0x1a>
 800157a:	689b      	ldr	r3, [r3, #8]
 800157c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001580:	4718      	bx	r3
 8001582:	685b      	ldr	r3, [r3, #4]
 8001584:	6815      	ldr	r5, [r2, #0]
 8001586:	4798      	blx	r3
 8001588:	6863      	ldr	r3, [r4, #4]
 800158a:	1a28      	subs	r0, r5, r0
 800158c:	2800      	cmp	r0, #0
 800158e:	685a      	ldr	r2, [r3, #4]
 8001590:	dc07      	bgt.n	80015a2 <ticker_irq_handler+0x3a>
 8001592:	6891      	ldr	r1, [r2, #8]
 8001594:	6059      	str	r1, [r3, #4]
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	2b00      	cmp	r3, #0
 800159a:	d0ea      	beq.n	8001572 <ticker_irq_handler+0xa>
 800159c:	6850      	ldr	r0, [r2, #4]
 800159e:	4798      	blx	r3
 80015a0:	e7e7      	b.n	8001572 <ticker_irq_handler+0xa>
 80015a2:	6823      	ldr	r3, [r4, #0]
 80015a4:	6810      	ldr	r0, [r2, #0]
 80015a6:	691b      	ldr	r3, [r3, #16]
 80015a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80015ac:	4718      	bx	r3

080015ae <ticker_read>:
 80015ae:	6803      	ldr	r3, [r0, #0]
 80015b0:	685b      	ldr	r3, [r3, #4]
 80015b2:	4718      	bx	r3

080015b4 <pinmap_pinout>:
 80015b4:	b510      	push	{r4, lr}
 80015b6:	4604      	mov	r4, r0
 80015b8:	3001      	adds	r0, #1
 80015ba:	d10d      	bne.n	80015d8 <pinmap_pinout+0x24>
 80015bc:	bd10      	pop	{r4, pc}
 80015be:	429c      	cmp	r4, r3
 80015c0:	d109      	bne.n	80015d6 <pinmap_pinout+0x22>
 80015c2:	4620      	mov	r0, r4
 80015c4:	6889      	ldr	r1, [r1, #8]
 80015c6:	f002 f86d 	bl	80036a4 <pin_function>
 80015ca:	4620      	mov	r0, r4
 80015cc:	2100      	movs	r1, #0
 80015ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015d2:	f002 b8eb 	b.w	80037ac <pin_mode>
 80015d6:	310c      	adds	r1, #12
 80015d8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80015dc:	1c5a      	adds	r2, r3, #1
 80015de:	d1ee      	bne.n	80015be <pinmap_pinout+0xa>
 80015e0:	4802      	ldr	r0, [pc, #8]	; (80015ec <pinmap_pinout+0x38>)
 80015e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015e6:	f000 b861 	b.w	80016ac <error>
 80015ea:	bf00      	nop
 80015ec:	08006f85 	.word	0x08006f85

080015f0 <pinmap_merge>:
 80015f0:	4288      	cmp	r0, r1
 80015f2:	b508      	push	{r3, lr}
 80015f4:	d008      	beq.n	8001608 <pinmap_merge+0x18>
 80015f6:	1c43      	adds	r3, r0, #1
 80015f8:	d006      	beq.n	8001608 <pinmap_merge+0x18>
 80015fa:	3101      	adds	r1, #1
 80015fc:	d006      	beq.n	800160c <pinmap_merge+0x1c>
 80015fe:	4804      	ldr	r0, [pc, #16]	; (8001610 <pinmap_merge+0x20>)
 8001600:	f000 f854 	bl	80016ac <error>
 8001604:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001608:	4608      	mov	r0, r1
 800160a:	bd08      	pop	{r3, pc}
 800160c:	4601      	mov	r1, r0
 800160e:	e7fb      	b.n	8001608 <pinmap_merge+0x18>
 8001610:	08006f54 	.word	0x08006f54

08001614 <pinmap_find_peripheral>:
 8001614:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001618:	1c5a      	adds	r2, r3, #1
 800161a:	d101      	bne.n	8001620 <pinmap_find_peripheral+0xc>
 800161c:	4618      	mov	r0, r3
 800161e:	4770      	bx	lr
 8001620:	4283      	cmp	r3, r0
 8001622:	d101      	bne.n	8001628 <pinmap_find_peripheral+0x14>
 8001624:	6848      	ldr	r0, [r1, #4]
 8001626:	4770      	bx	lr
 8001628:	310c      	adds	r1, #12
 800162a:	e7f3      	b.n	8001614 <pinmap_find_peripheral>

0800162c <pinmap_peripheral>:
 800162c:	1c42      	adds	r2, r0, #1
 800162e:	b510      	push	{r4, lr}
 8001630:	4604      	mov	r4, r0
 8001632:	d007      	beq.n	8001644 <pinmap_peripheral+0x18>
 8001634:	f7ff ffee 	bl	8001614 <pinmap_find_peripheral>
 8001638:	1c43      	adds	r3, r0, #1
 800163a:	4604      	mov	r4, r0
 800163c:	d102      	bne.n	8001644 <pinmap_peripheral+0x18>
 800163e:	4802      	ldr	r0, [pc, #8]	; (8001648 <pinmap_peripheral+0x1c>)
 8001640:	f000 f834 	bl	80016ac <error>
 8001644:	4620      	mov	r0, r4
 8001646:	bd10      	pop	{r4, pc}
 8001648:	08006f65 	.word	0x08006f65

0800164c <core_util_are_interrupts_enabled>:
 800164c:	f3ef 8010 	mrs	r0, PRIMASK
 8001650:	43c0      	mvns	r0, r0
 8001652:	f000 0001 	and.w	r0, r0, #1
 8001656:	4770      	bx	lr

08001658 <core_util_critical_section_enter>:
 8001658:	b508      	push	{r3, lr}
 800165a:	f7ff fff7 	bl	800164c <core_util_are_interrupts_enabled>
 800165e:	b672      	cpsid	i
 8001660:	4b06      	ldr	r3, [pc, #24]	; (800167c <core_util_critical_section_enter+0x24>)
 8001662:	681a      	ldr	r2, [r3, #0]
 8001664:	b922      	cbnz	r2, 8001670 <core_util_critical_section_enter+0x18>
 8001666:	f080 0001 	eor.w	r0, r0, #1
 800166a:	4a05      	ldr	r2, [pc, #20]	; (8001680 <core_util_critical_section_enter+0x28>)
 800166c:	b2c0      	uxtb	r0, r0
 800166e:	7010      	strb	r0, [r2, #0]
 8001670:	681a      	ldr	r2, [r3, #0]
 8001672:	681a      	ldr	r2, [r3, #0]
 8001674:	3201      	adds	r2, #1
 8001676:	601a      	str	r2, [r3, #0]
 8001678:	bd08      	pop	{r3, pc}
 800167a:	bf00      	nop
 800167c:	20000a08 	.word	0x20000a08
 8001680:	20000a04 	.word	0x20000a04

08001684 <core_util_critical_section_exit>:
 8001684:	b508      	push	{r3, lr}
 8001686:	4b07      	ldr	r3, [pc, #28]	; (80016a4 <core_util_critical_section_exit+0x20>)
 8001688:	681a      	ldr	r2, [r3, #0]
 800168a:	b152      	cbz	r2, 80016a2 <core_util_critical_section_exit+0x1e>
 800168c:	f7ff ffde 	bl	800164c <core_util_are_interrupts_enabled>
 8001690:	681a      	ldr	r2, [r3, #0]
 8001692:	3a01      	subs	r2, #1
 8001694:	601a      	str	r2, [r3, #0]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	b91b      	cbnz	r3, 80016a2 <core_util_critical_section_exit+0x1e>
 800169a:	4b03      	ldr	r3, [pc, #12]	; (80016a8 <core_util_critical_section_exit+0x24>)
 800169c:	781b      	ldrb	r3, [r3, #0]
 800169e:	b903      	cbnz	r3, 80016a2 <core_util_critical_section_exit+0x1e>
 80016a0:	b662      	cpsie	i
 80016a2:	bd08      	pop	{r3, pc}
 80016a4:	20000a08 	.word	0x20000a08
 80016a8:	20000a04 	.word	0x20000a04

080016ac <error>:
 80016ac:	b40f      	push	{r0, r1, r2, r3}
 80016ae:	2001      	movs	r0, #1
 80016b0:	b508      	push	{r3, lr}
 80016b2:	f004 fa6b 	bl	8005b8c <__wrap_exit>

080016b6 <mbed_die>:
 80016b6:	b500      	push	{lr}
 80016b8:	b089      	sub	sp, #36	; 0x24
 80016ba:	f7ff ffcd 	bl	8001658 <core_util_critical_section_enter>
 80016be:	2105      	movs	r1, #5
 80016c0:	a801      	add	r0, sp, #4
 80016c2:	f7ff ff43 	bl	800154c <gpio_init_out>
 80016c6:	9b03      	ldr	r3, [sp, #12]
 80016c8:	9a01      	ldr	r2, [sp, #4]
 80016ca:	601a      	str	r2, [r3, #0]
 80016cc:	2096      	movs	r0, #150	; 0x96
 80016ce:	f004 f959 	bl	8005984 <wait_ms>
 80016d2:	9b01      	ldr	r3, [sp, #4]
 80016d4:	9a04      	ldr	r2, [sp, #16]
 80016d6:	041b      	lsls	r3, r3, #16
 80016d8:	6013      	str	r3, [r2, #0]
 80016da:	2096      	movs	r0, #150	; 0x96
 80016dc:	f004 f952 	bl	8005984 <wait_ms>
 80016e0:	e7f1      	b.n	80016c6 <mbed_die+0x10>

080016e2 <default_idle_hook>:
 80016e2:	f001 bc76 	b.w	8002fd2 <hal_sleep>
	...

080016e8 <rtos_idle_loop>:
 80016e8:	b508      	push	{r3, lr}
 80016ea:	4c02      	ldr	r4, [pc, #8]	; (80016f4 <rtos_idle_loop+0xc>)
 80016ec:	6823      	ldr	r3, [r4, #0]
 80016ee:	4798      	blx	r3
 80016f0:	e7fc      	b.n	80016ec <rtos_idle_loop+0x4>
 80016f2:	bf00      	nop
 80016f4:	200001c8 	.word	0x200001c8

080016f8 <pre_main>:
 80016f8:	b508      	push	{r3, lr}
 80016fa:	480b      	ldr	r0, [pc, #44]	; (8001728 <pre_main+0x30>)
 80016fc:	f000 fdaa 	bl	8002254 <osMutexCreate>
 8001700:	4b0a      	ldr	r3, [pc, #40]	; (800172c <pre_main+0x34>)
 8001702:	6018      	str	r0, [r3, #0]
 8001704:	480a      	ldr	r0, [pc, #40]	; (8001730 <pre_main+0x38>)
 8001706:	f000 fda5 	bl	8002254 <osMutexCreate>
 800170a:	4b0a      	ldr	r3, [pc, #40]	; (8001734 <pre_main+0x3c>)
 800170c:	6018      	str	r0, [r3, #0]
 800170e:	480a      	ldr	r0, [pc, #40]	; (8001738 <pre_main+0x40>)
 8001710:	f000 fda0 	bl	8002254 <osMutexCreate>
 8001714:	4b09      	ldr	r3, [pc, #36]	; (800173c <pre_main+0x44>)
 8001716:	6018      	str	r0, [r3, #0]
 8001718:	f004 fd02 	bl	8006120 <__libc_init_array>
 800171c:	2100      	movs	r1, #0
 800171e:	4608      	mov	r0, r1
 8001720:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001724:	f004 b9f5 	b.w	8005b12 <__wrap_main>
 8001728:	08006fe4 	.word	0x08006fe4
 800172c:	20001f00 	.word	0x20001f00
 8001730:	08006fe0 	.word	0x08006fe0
 8001734:	20000a14 	.word	0x20000a14
 8001738:	08006fdc 	.word	0x08006fdc
 800173c:	20000a0c 	.word	0x20000a0c

08001740 <os_idle_demon>:
 8001740:	f7ff bfd2 	b.w	80016e8 <rtos_idle_loop>

08001744 <os_error>:
 8001744:	b510      	push	{r4, lr}
 8001746:	4604      	mov	r4, r0
 8001748:	f000 fce4 	bl	8002114 <svcThreadGetId>
 800174c:	4621      	mov	r1, r4
 800174e:	4602      	mov	r2, r0
 8001750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001754:	4801      	ldr	r0, [pc, #4]	; (800175c <os_error+0x18>)
 8001756:	f7ff bfa9 	b.w	80016ac <error>
 800175a:	bf00      	nop
 800175c:	08006fa4 	.word	0x08006fa4

08001760 <sysThreadTerminate>:
 8001760:	f004 ba32 	b.w	8005bc8 <thread_terminate_hook>

08001764 <set_stack_heap>:
 8001764:	4a0b      	ldr	r2, [pc, #44]	; (8001794 <set_stack_heap+0x30>)
 8001766:	4b0c      	ldr	r3, [pc, #48]	; (8001798 <set_stack_heap+0x34>)
 8001768:	480c      	ldr	r0, [pc, #48]	; (800179c <set_stack_heap+0x38>)
 800176a:	b430      	push	{r4, r5}
 800176c:	601a      	str	r2, [r3, #0]
 800176e:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001772:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8001776:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800177a:	4619      	mov	r1, r3
 800177c:	bf28      	it	cs
 800177e:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001782:	4d07      	ldr	r5, [pc, #28]	; (80017a0 <set_stack_heap+0x3c>)
 8001784:	4c07      	ldr	r4, [pc, #28]	; (80017a4 <set_stack_heap+0x40>)
 8001786:	6001      	str	r1, [r0, #0]
 8001788:	1a5b      	subs	r3, r3, r1
 800178a:	441a      	add	r2, r3
 800178c:	602a      	str	r2, [r5, #0]
 800178e:	6023      	str	r3, [r4, #0]
 8001790:	bc30      	pop	{r4, r5}
 8001792:	4770      	bx	lr
 8001794:	20002968 	.word	0x20002968
 8001798:	20001e68 	.word	0x20001e68
 800179c:	20000a18 	.word	0x20000a18
 80017a0:	20000a1c 	.word	0x20000a1c
 80017a4:	20001e64 	.word	0x20001e64

080017a8 <software_init_hook_rtos>:
 80017a8:	f000 fe38 	bl	800241c <osKernelInitialize>
 80017ac:	f7ff ffda 	bl	8001764 <set_stack_heap>
 80017b0:	4803      	ldr	r0, [pc, #12]	; (80017c0 <software_init_hook_rtos+0x18>)
 80017b2:	2100      	movs	r1, #0
 80017b4:	f000 fdd6 	bl	8002364 <osThreadCreate>
 80017b8:	f000 fc2e 	bl	8002018 <osKernelStart>
 80017bc:	e7fe      	b.n	80017bc <software_init_hook_rtos+0x14>
 80017be:	0000      	.short	0x0000
 80017c0:	200001cc 	.word	0x200001cc

080017c4 <__rtos_malloc_lock>:
 80017c4:	4b02      	ldr	r3, [pc, #8]	; (80017d0 <__rtos_malloc_lock+0xc>)
 80017c6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80017ca:	6818      	ldr	r0, [r3, #0]
 80017cc:	f000 bd60 	b.w	8002290 <osMutexWait>
 80017d0:	20000a14 	.word	0x20000a14

080017d4 <__rtos_malloc_unlock>:
 80017d4:	4b01      	ldr	r3, [pc, #4]	; (80017dc <__rtos_malloc_unlock+0x8>)
 80017d6:	6818      	ldr	r0, [r3, #0]
 80017d8:	f000 bd82 	b.w	80022e0 <osMutexRelease>
 80017dc:	20000a14 	.word	0x20000a14

080017e0 <rt_put_prio>:
 80017e0:	b530      	push	{r4, r5, lr}
 80017e2:	7802      	ldrb	r2, [r0, #0]
 80017e4:	788c      	ldrb	r4, [r1, #2]
 80017e6:	6843      	ldr	r3, [r0, #4]
 80017e8:	3a01      	subs	r2, #1
 80017ea:	b2d2      	uxtb	r2, r2
 80017ec:	b113      	cbz	r3, 80017f4 <rt_put_prio+0x14>
 80017ee:	789d      	ldrb	r5, [r3, #2]
 80017f0:	42a5      	cmp	r5, r4
 80017f2:	d207      	bcs.n	8001804 <rt_put_prio+0x24>
 80017f4:	2a02      	cmp	r2, #2
 80017f6:	604b      	str	r3, [r1, #4]
 80017f8:	6041      	str	r1, [r0, #4]
 80017fa:	d806      	bhi.n	800180a <rt_put_prio+0x2a>
 80017fc:	b103      	cbz	r3, 8001800 <rt_put_prio+0x20>
 80017fe:	6099      	str	r1, [r3, #8]
 8001800:	6088      	str	r0, [r1, #8]
 8001802:	bd30      	pop	{r4, r5, pc}
 8001804:	4618      	mov	r0, r3
 8001806:	685b      	ldr	r3, [r3, #4]
 8001808:	e7f0      	b.n	80017ec <rt_put_prio+0xc>
 800180a:	2300      	movs	r3, #0
 800180c:	608b      	str	r3, [r1, #8]
 800180e:	bd30      	pop	{r4, r5, pc}

08001810 <rt_get_first>:
 8001810:	7802      	ldrb	r2, [r0, #0]
 8001812:	6843      	ldr	r3, [r0, #4]
 8001814:	3a01      	subs	r2, #1
 8001816:	6859      	ldr	r1, [r3, #4]
 8001818:	6041      	str	r1, [r0, #4]
 800181a:	2a02      	cmp	r2, #2
 800181c:	f04f 0200 	mov.w	r2, #0
 8001820:	d805      	bhi.n	800182e <rt_get_first+0x1e>
 8001822:	b109      	cbz	r1, 8001828 <rt_get_first+0x18>
 8001824:	6088      	str	r0, [r1, #8]
 8001826:	605a      	str	r2, [r3, #4]
 8001828:	609a      	str	r2, [r3, #8]
 800182a:	4618      	mov	r0, r3
 800182c:	4770      	bx	lr
 800182e:	605a      	str	r2, [r3, #4]
 8001830:	e7fb      	b.n	800182a <rt_get_first+0x1a>
	...

08001834 <rt_put_rdy_first>:
 8001834:	4b03      	ldr	r3, [pc, #12]	; (8001844 <rt_put_rdy_first+0x10>)
 8001836:	685a      	ldr	r2, [r3, #4]
 8001838:	6042      	str	r2, [r0, #4]
 800183a:	2200      	movs	r2, #0
 800183c:	6082      	str	r2, [r0, #8]
 800183e:	6058      	str	r0, [r3, #4]
 8001840:	4770      	bx	lr
 8001842:	bf00      	nop
 8001844:	20002840 	.word	0x20002840

08001848 <rt_put_dly>:
 8001848:	4b10      	ldr	r3, [pc, #64]	; (800188c <rt_put_dly+0x44>)
 800184a:	68da      	ldr	r2, [r3, #12]
 800184c:	b510      	push	{r4, lr}
 800184e:	b18a      	cbz	r2, 8001874 <rt_put_dly+0x2c>
 8001850:	8a9a      	ldrh	r2, [r3, #20]
 8001852:	68dc      	ldr	r4, [r3, #12]
 8001854:	428a      	cmp	r2, r1
 8001856:	d30c      	bcc.n	8001872 <rt_put_dly+0x2a>
 8001858:	60c4      	str	r4, [r0, #12]
 800185a:	60d8      	str	r0, [r3, #12]
 800185c:	68c4      	ldr	r4, [r0, #12]
 800185e:	6103      	str	r3, [r0, #16]
 8001860:	b104      	cbz	r4, 8001864 <rt_put_dly+0x1c>
 8001862:	6120      	str	r0, [r4, #16]
 8001864:	1a52      	subs	r2, r2, r1
 8001866:	b292      	uxth	r2, r2
 8001868:	8282      	strh	r2, [r0, #20]
 800186a:	8a99      	ldrh	r1, [r3, #20]
 800186c:	1a8a      	subs	r2, r1, r2
 800186e:	829a      	strh	r2, [r3, #20]
 8001870:	bd10      	pop	{r4, pc}
 8001872:	b93c      	cbnz	r4, 8001884 <rt_put_dly+0x3c>
 8001874:	2400      	movs	r4, #0
 8001876:	1a8a      	subs	r2, r1, r2
 8001878:	60c4      	str	r4, [r0, #12]
 800187a:	60d8      	str	r0, [r3, #12]
 800187c:	6103      	str	r3, [r0, #16]
 800187e:	829a      	strh	r2, [r3, #20]
 8001880:	8284      	strh	r4, [r0, #20]
 8001882:	bd10      	pop	{r4, pc}
 8001884:	8aa3      	ldrh	r3, [r4, #20]
 8001886:	441a      	add	r2, r3
 8001888:	4623      	mov	r3, r4
 800188a:	e7e2      	b.n	8001852 <rt_put_dly+0xa>
 800188c:	20002858 	.word	0x20002858

08001890 <rt_dec_dly>:
 8001890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001894:	4d17      	ldr	r5, [pc, #92]	; (80018f4 <rt_dec_dly+0x64>)
 8001896:	68eb      	ldr	r3, [r5, #12]
 8001898:	b153      	cbz	r3, 80018b0 <rt_dec_dly+0x20>
 800189a:	8aab      	ldrh	r3, [r5, #20]
 800189c:	4f16      	ldr	r7, [pc, #88]	; (80018f8 <rt_dec_dly+0x68>)
 800189e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80018fc <rt_dec_dly+0x6c>
 80018a2:	3b01      	subs	r3, #1
 80018a4:	82ab      	strh	r3, [r5, #20]
 80018a6:	2600      	movs	r6, #0
 80018a8:	8aaa      	ldrh	r2, [r5, #20]
 80018aa:	b90a      	cbnz	r2, 80018b0 <rt_dec_dly+0x20>
 80018ac:	68ec      	ldr	r4, [r5, #12]
 80018ae:	b90c      	cbnz	r4, 80018b4 <rt_dec_dly+0x24>
 80018b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018b4:	68a3      	ldr	r3, [r4, #8]
 80018b6:	b133      	cbz	r3, 80018c6 <rt_dec_dly+0x36>
 80018b8:	6861      	ldr	r1, [r4, #4]
 80018ba:	6059      	str	r1, [r3, #4]
 80018bc:	6861      	ldr	r1, [r4, #4]
 80018be:	b109      	cbz	r1, 80018c4 <rt_dec_dly+0x34>
 80018c0:	608b      	str	r3, [r1, #8]
 80018c2:	6062      	str	r2, [r4, #4]
 80018c4:	60a6      	str	r6, [r4, #8]
 80018c6:	4621      	mov	r1, r4
 80018c8:	4638      	mov	r0, r7
 80018ca:	f7ff ff89 	bl	80017e0 <rt_put_prio>
 80018ce:	8aa3      	ldrh	r3, [r4, #20]
 80018d0:	82ab      	strh	r3, [r5, #20]
 80018d2:	7863      	ldrb	r3, [r4, #1]
 80018d4:	2b04      	cmp	r3, #4
 80018d6:	bf01      	itttt	eq
 80018d8:	f8d8 3000 	ldreq.w	r3, [r8]
 80018dc:	8ae2      	ldrheq	r2, [r4, #22]
 80018de:	189b      	addeq	r3, r3, r2
 80018e0:	82a3      	strheq	r3, [r4, #20]
 80018e2:	2301      	movs	r3, #1
 80018e4:	7063      	strb	r3, [r4, #1]
 80018e6:	68e3      	ldr	r3, [r4, #12]
 80018e8:	60eb      	str	r3, [r5, #12]
 80018ea:	b10b      	cbz	r3, 80018f0 <rt_dec_dly+0x60>
 80018ec:	611d      	str	r5, [r3, #16]
 80018ee:	60e6      	str	r6, [r4, #12]
 80018f0:	6126      	str	r6, [r4, #16]
 80018f2:	e7d9      	b.n	80018a8 <rt_dec_dly+0x18>
 80018f4:	20002858 	.word	0x20002858
 80018f8:	20002840 	.word	0x20002840
 80018fc:	200028d4 	.word	0x200028d4

08001900 <rt_rmv_list>:
 8001900:	6883      	ldr	r3, [r0, #8]
 8001902:	b12b      	cbz	r3, 8001910 <rt_rmv_list+0x10>
 8001904:	6842      	ldr	r2, [r0, #4]
 8001906:	605a      	str	r2, [r3, #4]
 8001908:	6842      	ldr	r2, [r0, #4]
 800190a:	b15a      	cbz	r2, 8001924 <rt_rmv_list+0x24>
 800190c:	6093      	str	r3, [r2, #8]
 800190e:	4770      	bx	lr
 8001910:	4b05      	ldr	r3, [pc, #20]	; (8001928 <rt_rmv_list+0x28>)
 8001912:	685a      	ldr	r2, [r3, #4]
 8001914:	4290      	cmp	r0, r2
 8001916:	d102      	bne.n	800191e <rt_rmv_list+0x1e>
 8001918:	6842      	ldr	r2, [r0, #4]
 800191a:	605a      	str	r2, [r3, #4]
 800191c:	4770      	bx	lr
 800191e:	4613      	mov	r3, r2
 8001920:	2a00      	cmp	r2, #0
 8001922:	d1f6      	bne.n	8001912 <rt_rmv_list+0x12>
 8001924:	4770      	bx	lr
 8001926:	bf00      	nop
 8001928:	20002840 	.word	0x20002840

0800192c <rt_resort_prio>:
 800192c:	b510      	push	{r4, lr}
 800192e:	6884      	ldr	r4, [r0, #8]
 8001930:	4601      	mov	r1, r0
 8001932:	b92c      	cbnz	r4, 8001940 <rt_resort_prio+0x14>
 8001934:	7843      	ldrb	r3, [r0, #1]
 8001936:	2b01      	cmp	r3, #1
 8001938:	d10d      	bne.n	8001956 <rt_resort_prio+0x2a>
 800193a:	4c07      	ldr	r4, [pc, #28]	; (8001958 <rt_resort_prio+0x2c>)
 800193c:	e003      	b.n	8001946 <rt_resort_prio+0x1a>
 800193e:	68a4      	ldr	r4, [r4, #8]
 8001940:	7823      	ldrb	r3, [r4, #0]
 8001942:	2b00      	cmp	r3, #0
 8001944:	d0fb      	beq.n	800193e <rt_resort_prio+0x12>
 8001946:	4608      	mov	r0, r1
 8001948:	f7ff ffda 	bl	8001900 <rt_rmv_list>
 800194c:	4620      	mov	r0, r4
 800194e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001952:	f7ff bf45 	b.w	80017e0 <rt_put_prio>
 8001956:	bd10      	pop	{r4, pc}
 8001958:	20002840 	.word	0x20002840

0800195c <rt_rmv_dly>:
 800195c:	6903      	ldr	r3, [r0, #16]
 800195e:	b510      	push	{r4, lr}
 8001960:	b163      	cbz	r3, 800197c <rt_rmv_dly+0x20>
 8001962:	68c2      	ldr	r2, [r0, #12]
 8001964:	60da      	str	r2, [r3, #12]
 8001966:	68c2      	ldr	r2, [r0, #12]
 8001968:	b14a      	cbz	r2, 800197e <rt_rmv_dly+0x22>
 800196a:	8a99      	ldrh	r1, [r3, #20]
 800196c:	8a84      	ldrh	r4, [r0, #20]
 800196e:	4421      	add	r1, r4
 8001970:	8299      	strh	r1, [r3, #20]
 8001972:	6113      	str	r3, [r2, #16]
 8001974:	2300      	movs	r3, #0
 8001976:	60c3      	str	r3, [r0, #12]
 8001978:	2300      	movs	r3, #0
 800197a:	6103      	str	r3, [r0, #16]
 800197c:	bd10      	pop	{r4, pc}
 800197e:	829a      	strh	r2, [r3, #20]
 8001980:	e7fa      	b.n	8001978 <rt_rmv_dly+0x1c>
	...

08001984 <rt_psq_enq>:
 8001984:	b470      	push	{r4, r5, r6}
 8001986:	4b11      	ldr	r3, [pc, #68]	; (80019cc <rt_psq_enq+0x48>)
 8001988:	78dd      	ldrb	r5, [r3, #3]
 800198a:	f3ef 8610 	mrs	r6, PRIMASK
 800198e:	f3ef 8210 	mrs	r2, PRIMASK
 8001992:	b672      	cpsid	i
 8001994:	789a      	ldrb	r2, [r3, #2]
 8001996:	4295      	cmp	r5, r2
 8001998:	d911      	bls.n	80019be <rt_psq_enq+0x3a>
 800199a:	3201      	adds	r2, #1
 800199c:	709a      	strb	r2, [r3, #2]
 800199e:	781a      	ldrb	r2, [r3, #0]
 80019a0:	1c54      	adds	r4, r2, #1
 80019a2:	42a5      	cmp	r5, r4
 80019a4:	bf08      	it	eq
 80019a6:	2400      	moveq	r4, #0
 80019a8:	701c      	strb	r4, [r3, #0]
 80019aa:	b906      	cbnz	r6, 80019ae <rt_psq_enq+0x2a>
 80019ac:	b662      	cpsie	i
 80019ae:	4295      	cmp	r5, r2
 80019b0:	d907      	bls.n	80019c2 <rt_psq_enq+0x3e>
 80019b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80019b6:	bc70      	pop	{r4, r5, r6}
 80019b8:	6058      	str	r0, [r3, #4]
 80019ba:	6099      	str	r1, [r3, #8]
 80019bc:	4770      	bx	lr
 80019be:	2e00      	cmp	r6, #0
 80019c0:	d0f4      	beq.n	80019ac <rt_psq_enq+0x28>
 80019c2:	2002      	movs	r0, #2
 80019c4:	bc70      	pop	{r4, r5, r6}
 80019c6:	f7ff bebd 	b.w	8001744 <os_error>
 80019ca:	bf00      	nop
 80019cc:	20001e78 	.word	0x20001e78

080019d0 <rt_psh_req>:
 80019d0:	4b05      	ldr	r3, [pc, #20]	; (80019e8 <rt_psh_req+0x18>)
 80019d2:	781b      	ldrb	r3, [r3, #0]
 80019d4:	b923      	cbnz	r3, 80019e0 <rt_psh_req+0x10>
 80019d6:	4b05      	ldr	r3, [pc, #20]	; (80019ec <rt_psh_req+0x1c>)
 80019d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80019dc:	601a      	str	r2, [r3, #0]
 80019de:	4770      	bx	lr
 80019e0:	4b03      	ldr	r3, [pc, #12]	; (80019f0 <rt_psh_req+0x20>)
 80019e2:	2201      	movs	r2, #1
 80019e4:	701a      	strb	r2, [r3, #0]
 80019e6:	4770      	bx	lr
 80019e8:	20001a70 	.word	0x20001a70
 80019ec:	e000ed04 	.word	0xe000ed04
 80019f0:	20001a71 	.word	0x20001a71

080019f4 <rt_pop_req>:
 80019f4:	b538      	push	{r3, r4, r5, lr}
 80019f6:	4b1a      	ldr	r3, [pc, #104]	; (8001a60 <rt_pop_req+0x6c>)
 80019f8:	4c1a      	ldr	r4, [pc, #104]	; (8001a64 <rt_pop_req+0x70>)
 80019fa:	6818      	ldr	r0, [r3, #0]
 80019fc:	2301      	movs	r3, #1
 80019fe:	7043      	strb	r3, [r0, #1]
 8001a00:	f7ff ff18 	bl	8001834 <rt_put_rdy_first>
 8001a04:	7865      	ldrb	r5, [r4, #1]
 8001a06:	78a3      	ldrb	r3, [r4, #2]
 8001a08:	b93b      	cbnz	r3, 8001a1a <rt_pop_req+0x26>
 8001a0a:	4817      	ldr	r0, [pc, #92]	; (8001a68 <rt_pop_req+0x74>)
 8001a0c:	7065      	strb	r5, [r4, #1]
 8001a0e:	f7ff feff 	bl	8001810 <rt_get_first>
 8001a12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001a16:	f000 bddb 	b.w	80025d0 <rt_switch_req>
 8001a1a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001a1e:	6858      	ldr	r0, [r3, #4]
 8001a20:	7802      	ldrb	r2, [r0, #0]
 8001a22:	b99a      	cbnz	r2, 8001a4c <rt_pop_req+0x58>
 8001a24:	8919      	ldrh	r1, [r3, #8]
 8001a26:	f000 fa1b 	bl	8001e60 <rt_evt_psh>
 8001a2a:	78e3      	ldrb	r3, [r4, #3]
 8001a2c:	3501      	adds	r5, #1
 8001a2e:	429d      	cmp	r5, r3
 8001a30:	bf08      	it	eq
 8001a32:	2500      	moveq	r5, #0
 8001a34:	f3ef 8310 	mrs	r3, PRIMASK
 8001a38:	f3ef 8210 	mrs	r2, PRIMASK
 8001a3c:	b672      	cpsid	i
 8001a3e:	78a2      	ldrb	r2, [r4, #2]
 8001a40:	3a01      	subs	r2, #1
 8001a42:	70a2      	strb	r2, [r4, #2]
 8001a44:	2b00      	cmp	r3, #0
 8001a46:	d1de      	bne.n	8001a06 <rt_pop_req+0x12>
 8001a48:	b662      	cpsie	i
 8001a4a:	e7dc      	b.n	8001a06 <rt_pop_req+0x12>
 8001a4c:	2a01      	cmp	r2, #1
 8001a4e:	d103      	bne.n	8001a58 <rt_pop_req+0x64>
 8001a50:	6899      	ldr	r1, [r3, #8]
 8001a52:	f000 f993 	bl	8001d7c <rt_mbx_psh>
 8001a56:	e7e8      	b.n	8001a2a <rt_pop_req+0x36>
 8001a58:	f001 f918 	bl	8002c8c <rt_sem_psh>
 8001a5c:	e7e5      	b.n	8001a2a <rt_pop_req+0x36>
 8001a5e:	bf00      	nop
 8001a60:	2000288c 	.word	0x2000288c
 8001a64:	20001e78 	.word	0x20001e78
 8001a68:	20002840 	.word	0x20002840

08001a6c <os_tick_init>:
 8001a6c:	4b08      	ldr	r3, [pc, #32]	; (8001a90 <os_tick_init+0x24>)
 8001a6e:	681a      	ldr	r2, [r3, #0]
 8001a70:	4b08      	ldr	r3, [pc, #32]	; (8001a94 <os_tick_init+0x28>)
 8001a72:	601a      	str	r2, [r3, #0]
 8001a74:	2200      	movs	r2, #0
 8001a76:	605a      	str	r2, [r3, #4]
 8001a78:	2207      	movs	r2, #7
 8001a7a:	f843 2c04 	str.w	r2, [r3, #-4]
 8001a7e:	4a06      	ldr	r2, [pc, #24]	; (8001a98 <os_tick_init+0x2c>)
 8001a80:	6813      	ldr	r3, [r2, #0]
 8001a82:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001a86:	6013      	str	r3, [r2, #0]
 8001a88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a8c:	4770      	bx	lr
 8001a8e:	bf00      	nop
 8001a90:	08007004 	.word	0x08007004
 8001a94:	e000e014 	.word	0xe000e014
 8001a98:	e000ed20 	.word	0xe000ed20

08001a9c <os_tick_irqack>:
 8001a9c:	4770      	bx	lr
	...

08001aa0 <rt_systick>:
 8001aa0:	b508      	push	{r3, lr}
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <rt_systick+0x30>)
 8001aa4:	6818      	ldr	r0, [r3, #0]
 8001aa6:	2301      	movs	r3, #1
 8001aa8:	7043      	strb	r3, [r0, #1]
 8001aaa:	f7ff fec3 	bl	8001834 <rt_put_rdy_first>
 8001aae:	f000 fa0d 	bl	8001ecc <rt_chk_robin>
 8001ab2:	4a08      	ldr	r2, [pc, #32]	; (8001ad4 <rt_systick+0x34>)
 8001ab4:	6813      	ldr	r3, [r2, #0]
 8001ab6:	3301      	adds	r3, #1
 8001ab8:	6013      	str	r3, [r2, #0]
 8001aba:	f7ff fee9 	bl	8001890 <rt_dec_dly>
 8001abe:	f000 fd0f 	bl	80024e0 <sysTimerTick>
 8001ac2:	4805      	ldr	r0, [pc, #20]	; (8001ad8 <rt_systick+0x38>)
 8001ac4:	f7ff fea4 	bl	8001810 <rt_get_first>
 8001ac8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001acc:	f000 bd80 	b.w	80025d0 <rt_switch_req>
 8001ad0:	2000288c 	.word	0x2000288c
 8001ad4:	200028d4 	.word	0x200028d4
 8001ad8:	20002840 	.word	0x20002840

08001adc <rt_stk_check>:
 8001adc:	4b06      	ldr	r3, [pc, #24]	; (8001af8 <rt_stk_check+0x1c>)
 8001ade:	681a      	ldr	r2, [r3, #0]
 8001ae0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001ae2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001ae4:	4293      	cmp	r3, r2
 8001ae6:	d803      	bhi.n	8001af0 <rt_stk_check+0x14>
 8001ae8:	681a      	ldr	r2, [r3, #0]
 8001aea:	4b04      	ldr	r3, [pc, #16]	; (8001afc <rt_stk_check+0x20>)
 8001aec:	429a      	cmp	r2, r3
 8001aee:	d002      	beq.n	8001af6 <rt_stk_check+0x1a>
 8001af0:	2001      	movs	r0, #1
 8001af2:	f7ff be27 	b.w	8001744 <os_error>
 8001af6:	4770      	bx	lr
 8001af8:	2000288c 	.word	0x2000288c
 8001afc:	e25a2ea5 	.word	0xe25a2ea5

08001b00 <rt_init_stack>:
 8001b00:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001b02:	089b      	lsrs	r3, r3, #2
 8001b04:	bf04      	itt	eq
 8001b06:	4b22      	ldreq	r3, [pc, #136]	; (8001b90 <rt_init_stack+0x90>)
 8001b08:	881b      	ldrheq	r3, [r3, #0]
 8001b0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b0c:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001b0e:	bf08      	it	eq
 8001b10:	089b      	lsreq	r3, r3, #2
 8001b12:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001b16:	0754      	lsls	r4, r2, #29
 8001b18:	bf48      	it	mi
 8001b1a:	3a04      	submi	r2, #4
 8001b1c:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001b20:	e902 0042 	stmdb	r2, {r1, r6}
 8001b24:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001b28:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001b2c:	f1a2 070c 	sub.w	r7, r2, #12
 8001b30:	f04f 0e00 	mov.w	lr, #0
 8001b34:	f846 ef04 	str.w	lr, [r6, #4]!
 8001b38:	42be      	cmp	r6, r7
 8001b3a:	d1fb      	bne.n	8001b34 <rt_init_stack+0x34>
 8001b3c:	69c6      	ldr	r6, [r0, #28]
 8001b3e:	f842 6c20 	str.w	r6, [r2, #-32]
 8001b42:	6341      	str	r1, [r0, #52]	; 0x34
 8001b44:	4912      	ldr	r1, [pc, #72]	; (8001b90 <rt_init_stack+0x90>)
 8001b46:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001b48:	6809      	ldr	r1, [r1, #0]
 8001b4a:	00c9      	lsls	r1, r1, #3
 8001b4c:	d517      	bpl.n	8001b7e <rt_init_stack+0x7e>
 8001b4e:	2b11      	cmp	r3, #17
 8001b50:	d915      	bls.n	8001b7e <rt_init_stack+0x7e>
 8001b52:	3b10      	subs	r3, #16
 8001b54:	f06f 0107 	mvn.w	r1, #7
 8001b58:	085b      	lsrs	r3, r3, #1
 8001b5a:	434b      	muls	r3, r1
 8001b5c:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001b60:	440a      	add	r2, r1
 8001b62:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001b66:	4621      	mov	r1, r4
 8001b68:	4291      	cmp	r1, r2
 8001b6a:	d10b      	bne.n	8001b84 <rt_init_stack+0x84>
 8001b6c:	3308      	adds	r3, #8
 8001b6e:	441c      	add	r4, r3
 8001b70:	1f23      	subs	r3, r4, #4
 8001b72:	429d      	cmp	r5, r3
 8001b74:	bf3c      	itt	cc
 8001b76:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001b7a:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001b7e:	4b05      	ldr	r3, [pc, #20]	; (8001b94 <rt_init_stack+0x94>)
 8001b80:	602b      	str	r3, [r5, #0]
 8001b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b84:	f841 0c04 	str.w	r0, [r1, #-4]
 8001b88:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001b8c:	e7ec      	b.n	8001b68 <rt_init_stack+0x68>
 8001b8e:	bf00      	nop
 8001b90:	08006fec 	.word	0x08006fec
 8001b94:	e25a2ea5 	.word	0xe25a2ea5

08001b98 <rt_ret_val>:
 8001b98:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001b9c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001b9e:	b112      	cbz	r2, 8001ba6 <rt_ret_val+0xe>
 8001ba0:	3360      	adds	r3, #96	; 0x60
 8001ba2:	6019      	str	r1, [r3, #0]
 8001ba4:	4770      	bx	lr
 8001ba6:	3320      	adds	r3, #32
 8001ba8:	e7fb      	b.n	8001ba2 <rt_ret_val+0xa>

08001baa <rt_ret_val2>:
 8001baa:	b510      	push	{r4, lr}
 8001bac:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001bb0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001bb2:	b11c      	cbz	r4, 8001bbc <rt_ret_val2+0x12>
 8001bb4:	3360      	adds	r3, #96	; 0x60
 8001bb6:	e883 0006 	stmia.w	r3, {r1, r2}
 8001bba:	bd10      	pop	{r4, pc}
 8001bbc:	3320      	adds	r3, #32
 8001bbe:	e7fa      	b.n	8001bb6 <rt_ret_val2+0xc>

08001bc0 <_init_box>:
 8001bc0:	2a00      	cmp	r2, #0
 8001bc2:	bfbb      	ittet	lt
 8001bc4:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001bc8:	3207      	addlt	r2, #7
 8001bca:	3203      	addge	r2, #3
 8001bcc:	f022 0207 	biclt.w	r2, r2, #7
 8001bd0:	bfa8      	it	ge
 8001bd2:	f022 0203 	bicge.w	r2, r2, #3
 8001bd6:	b510      	push	{r4, lr}
 8001bd8:	bfb4      	ite	lt
 8001bda:	2310      	movlt	r3, #16
 8001bdc:	230c      	movge	r3, #12
 8001bde:	b192      	cbz	r2, 8001c06 <_init_box+0x46>
 8001be0:	18d4      	adds	r4, r2, r3
 8001be2:	428c      	cmp	r4, r1
 8001be4:	d80f      	bhi.n	8001c06 <_init_box+0x46>
 8001be6:	4401      	add	r1, r0
 8001be8:	4403      	add	r3, r0
 8001bea:	4254      	negs	r4, r2
 8001bec:	6041      	str	r1, [r0, #4]
 8001bee:	6003      	str	r3, [r0, #0]
 8001bf0:	6082      	str	r2, [r0, #8]
 8001bf2:	4421      	add	r1, r4
 8001bf4:	1898      	adds	r0, r3, r2
 8001bf6:	4281      	cmp	r1, r0
 8001bf8:	d302      	bcc.n	8001c00 <_init_box+0x40>
 8001bfa:	5100      	str	r0, [r0, r4]
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	e7f9      	b.n	8001bf4 <_init_box+0x34>
 8001c00:	2000      	movs	r0, #0
 8001c02:	6018      	str	r0, [r3, #0]
 8001c04:	bd10      	pop	{r4, pc}
 8001c06:	2001      	movs	r0, #1
 8001c08:	bd10      	pop	{r4, pc}

08001c0a <rt_alloc_box>:
 8001c0a:	f3ef 8310 	mrs	r3, PRIMASK
 8001c0e:	b672      	cpsid	i
 8001c10:	6802      	ldr	r2, [r0, #0]
 8001c12:	f003 0301 	and.w	r3, r3, #1
 8001c16:	b10a      	cbz	r2, 8001c1c <rt_alloc_box+0x12>
 8001c18:	6811      	ldr	r1, [r2, #0]
 8001c1a:	6001      	str	r1, [r0, #0]
 8001c1c:	b903      	cbnz	r3, 8001c20 <rt_alloc_box+0x16>
 8001c1e:	b662      	cpsie	i
 8001c20:	4610      	mov	r0, r2
 8001c22:	4770      	bx	lr

08001c24 <rt_free_box>:
 8001c24:	4281      	cmp	r1, r0
 8001c26:	d30d      	bcc.n	8001c44 <rt_free_box+0x20>
 8001c28:	6843      	ldr	r3, [r0, #4]
 8001c2a:	4299      	cmp	r1, r3
 8001c2c:	d20a      	bcs.n	8001c44 <rt_free_box+0x20>
 8001c2e:	f3ef 8310 	mrs	r3, PRIMASK
 8001c32:	b672      	cpsid	i
 8001c34:	6802      	ldr	r2, [r0, #0]
 8001c36:	600a      	str	r2, [r1, #0]
 8001c38:	6001      	str	r1, [r0, #0]
 8001c3a:	f013 0001 	ands.w	r0, r3, #1
 8001c3e:	d103      	bne.n	8001c48 <rt_free_box+0x24>
 8001c40:	b662      	cpsie	i
 8001c42:	4770      	bx	lr
 8001c44:	2001      	movs	r0, #1
 8001c46:	4770      	bx	lr
 8001c48:	2000      	movs	r0, #0
 8001c4a:	4770      	bx	lr

08001c4c <rt_mbx_init>:
 8001c4c:	2301      	movs	r3, #1
 8001c4e:	3910      	subs	r1, #16
 8001c50:	7003      	strb	r3, [r0, #0]
 8001c52:	0889      	lsrs	r1, r1, #2
 8001c54:	2300      	movs	r3, #0
 8001c56:	7043      	strb	r3, [r0, #1]
 8001c58:	7083      	strb	r3, [r0, #2]
 8001c5a:	6043      	str	r3, [r0, #4]
 8001c5c:	8103      	strh	r3, [r0, #8]
 8001c5e:	8143      	strh	r3, [r0, #10]
 8001c60:	8183      	strh	r3, [r0, #12]
 8001c62:	81c1      	strh	r1, [r0, #14]
 8001c64:	4770      	bx	lr
	...

08001c68 <rt_mbx_wait>:
 8001c68:	b570      	push	{r4, r5, r6, lr}
 8001c6a:	8985      	ldrh	r5, [r0, #12]
 8001c6c:	4604      	mov	r4, r0
 8001c6e:	4616      	mov	r6, r2
 8001c70:	2d00      	cmp	r5, #0
 8001c72:	d038      	beq.n	8001ce6 <rt_mbx_wait+0x7e>
 8001c74:	8943      	ldrh	r3, [r0, #10]
 8001c76:	1d1a      	adds	r2, r3, #4
 8001c78:	3301      	adds	r3, #1
 8001c7a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001c7e:	600a      	str	r2, [r1, #0]
 8001c80:	89c2      	ldrh	r2, [r0, #14]
 8001c82:	b29b      	uxth	r3, r3
 8001c84:	429a      	cmp	r2, r3
 8001c86:	8143      	strh	r3, [r0, #10]
 8001c88:	bf04      	itt	eq
 8001c8a:	2300      	moveq	r3, #0
 8001c8c:	8143      	strheq	r3, [r0, #10]
 8001c8e:	6843      	ldr	r3, [r0, #4]
 8001c90:	b1f3      	cbz	r3, 8001cd0 <rt_mbx_wait+0x68>
 8001c92:	7843      	ldrb	r3, [r0, #1]
 8001c94:	2b02      	cmp	r3, #2
 8001c96:	d11b      	bne.n	8001cd0 <rt_mbx_wait+0x68>
 8001c98:	f7ff fdba 	bl	8001810 <rt_get_first>
 8001c9c:	2100      	movs	r1, #0
 8001c9e:	4605      	mov	r5, r0
 8001ca0:	f7ff ff7a 	bl	8001b98 <rt_ret_val>
 8001ca4:	8923      	ldrh	r3, [r4, #8]
 8001ca6:	69e9      	ldr	r1, [r5, #28]
 8001ca8:	1d1a      	adds	r2, r3, #4
 8001caa:	3301      	adds	r3, #1
 8001cac:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001cb0:	89e2      	ldrh	r2, [r4, #14]
 8001cb2:	b29b      	uxth	r3, r3
 8001cb4:	429a      	cmp	r2, r3
 8001cb6:	8123      	strh	r3, [r4, #8]
 8001cb8:	bf08      	it	eq
 8001cba:	2300      	moveq	r3, #0
 8001cbc:	4628      	mov	r0, r5
 8001cbe:	bf08      	it	eq
 8001cc0:	8123      	strheq	r3, [r4, #8]
 8001cc2:	f7ff fe4b 	bl	800195c <rt_rmv_dly>
 8001cc6:	4628      	mov	r0, r5
 8001cc8:	f000 fc9c 	bl	8002604 <rt_dispatch>
 8001ccc:	2000      	movs	r0, #0
 8001cce:	bd70      	pop	{r4, r5, r6, pc}
 8001cd0:	f3ef 8010 	mrs	r0, PRIMASK
 8001cd4:	f3ef 8310 	mrs	r3, PRIMASK
 8001cd8:	b672      	cpsid	i
 8001cda:	3d01      	subs	r5, #1
 8001cdc:	81a5      	strh	r5, [r4, #12]
 8001cde:	2800      	cmp	r0, #0
 8001ce0:	d1f4      	bne.n	8001ccc <rt_mbx_wait+0x64>
 8001ce2:	b662      	cpsie	i
 8001ce4:	bd70      	pop	{r4, r5, r6, pc}
 8001ce6:	b14a      	cbz	r2, 8001cfc <rt_mbx_wait+0x94>
 8001ce8:	6842      	ldr	r2, [r0, #4]
 8001cea:	4b09      	ldr	r3, [pc, #36]	; (8001d10 <rt_mbx_wait+0xa8>)
 8001cec:	b142      	cbz	r2, 8001d00 <rt_mbx_wait+0x98>
 8001cee:	6819      	ldr	r1, [r3, #0]
 8001cf0:	f7ff fd76 	bl	80017e0 <rt_put_prio>
 8001cf4:	2108      	movs	r1, #8
 8001cf6:	4630      	mov	r0, r6
 8001cf8:	f000 fca8 	bl	800264c <rt_block>
 8001cfc:	2001      	movs	r0, #1
 8001cfe:	bd70      	pop	{r4, r5, r6, pc}
 8001d00:	681b      	ldr	r3, [r3, #0]
 8001d02:	6043      	str	r3, [r0, #4]
 8001d04:	605a      	str	r2, [r3, #4]
 8001d06:	6098      	str	r0, [r3, #8]
 8001d08:	2301      	movs	r3, #1
 8001d0a:	7043      	strb	r3, [r0, #1]
 8001d0c:	e7f2      	b.n	8001cf4 <rt_mbx_wait+0x8c>
 8001d0e:	bf00      	nop
 8001d10:	2000288c 	.word	0x2000288c

08001d14 <rt_mbx_check>:
 8001d14:	89c2      	ldrh	r2, [r0, #14]
 8001d16:	8980      	ldrh	r0, [r0, #12]
 8001d18:	1a10      	subs	r0, r2, r0
 8001d1a:	4770      	bx	lr

08001d1c <isr_mbx_send>:
 8001d1c:	b508      	push	{r3, lr}
 8001d1e:	f7ff fe31 	bl	8001984 <rt_psq_enq>
 8001d22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d26:	f7ff be53 	b.w	80019d0 <rt_psh_req>

08001d2a <isr_mbx_receive>:
 8001d2a:	8983      	ldrh	r3, [r0, #12]
 8001d2c:	b510      	push	{r4, lr}
 8001d2e:	4604      	mov	r4, r0
 8001d30:	b30b      	cbz	r3, 8001d76 <isr_mbx_receive+0x4c>
 8001d32:	8943      	ldrh	r3, [r0, #10]
 8001d34:	3304      	adds	r3, #4
 8001d36:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001d3a:	600b      	str	r3, [r1, #0]
 8001d3c:	7843      	ldrb	r3, [r0, #1]
 8001d3e:	2b02      	cmp	r3, #2
 8001d40:	d104      	bne.n	8001d4c <isr_mbx_receive+0x22>
 8001d42:	2100      	movs	r1, #0
 8001d44:	f7ff fe1e 	bl	8001984 <rt_psq_enq>
 8001d48:	f7ff fe42 	bl	80019d0 <rt_psh_req>
 8001d4c:	f3ef 8310 	mrs	r3, PRIMASK
 8001d50:	f3ef 8210 	mrs	r2, PRIMASK
 8001d54:	b672      	cpsid	i
 8001d56:	89a2      	ldrh	r2, [r4, #12]
 8001d58:	3a01      	subs	r2, #1
 8001d5a:	81a2      	strh	r2, [r4, #12]
 8001d5c:	b903      	cbnz	r3, 8001d60 <isr_mbx_receive+0x36>
 8001d5e:	b662      	cpsie	i
 8001d60:	8963      	ldrh	r3, [r4, #10]
 8001d62:	89e2      	ldrh	r2, [r4, #14]
 8001d64:	3301      	adds	r3, #1
 8001d66:	b29b      	uxth	r3, r3
 8001d68:	429a      	cmp	r2, r3
 8001d6a:	8163      	strh	r3, [r4, #10]
 8001d6c:	d101      	bne.n	8001d72 <isr_mbx_receive+0x48>
 8001d6e:	2300      	movs	r3, #0
 8001d70:	8163      	strh	r3, [r4, #10]
 8001d72:	2004      	movs	r0, #4
 8001d74:	bd10      	pop	{r4, pc}
 8001d76:	4618      	mov	r0, r3
 8001d78:	bd10      	pop	{r4, pc}
	...

08001d7c <rt_mbx_psh>:
 8001d7c:	6843      	ldr	r3, [r0, #4]
 8001d7e:	b570      	push	{r4, r5, r6, lr}
 8001d80:	4604      	mov	r4, r0
 8001d82:	460e      	mov	r6, r1
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d04b      	beq.n	8001e20 <rt_mbx_psh+0xa4>
 8001d88:	7845      	ldrb	r5, [r0, #1]
 8001d8a:	2d02      	cmp	r5, #2
 8001d8c:	d020      	beq.n	8001dd0 <rt_mbx_psh+0x54>
 8001d8e:	2d03      	cmp	r5, #3
 8001d90:	d00a      	beq.n	8001da8 <rt_mbx_psh+0x2c>
 8001d92:	2d01      	cmp	r5, #1
 8001d94:	d161      	bne.n	8001e5a <rt_mbx_psh+0xde>
 8001d96:	f7ff fd3b 	bl	8001810 <rt_get_first>
 8001d9a:	4604      	mov	r4, r0
 8001d9c:	4632      	mov	r2, r6
 8001d9e:	2110      	movs	r1, #16
 8001da0:	f7ff ff03 	bl	8001baa <rt_ret_val2>
 8001da4:	7065      	strb	r5, [r4, #1]
 8001da6:	e00e      	b.n	8001dc6 <rt_mbx_psh+0x4a>
 8001da8:	4608      	mov	r0, r1
 8001daa:	f7ff ff2e 	bl	8001c0a <rt_alloc_box>
 8001dae:	4605      	mov	r5, r0
 8001db0:	2800      	cmp	r0, #0
 8001db2:	d052      	beq.n	8001e5a <rt_mbx_psh+0xde>
 8001db4:	4620      	mov	r0, r4
 8001db6:	f7ff fd2b 	bl	8001810 <rt_get_first>
 8001dba:	4629      	mov	r1, r5
 8001dbc:	4604      	mov	r4, r0
 8001dbe:	f7ff feeb 	bl	8001b98 <rt_ret_val>
 8001dc2:	2301      	movs	r3, #1
 8001dc4:	7063      	strb	r3, [r4, #1]
 8001dc6:	4620      	mov	r0, r4
 8001dc8:	f7ff fdc8 	bl	800195c <rt_rmv_dly>
 8001dcc:	4621      	mov	r1, r4
 8001dce:	e022      	b.n	8001e16 <rt_mbx_psh+0x9a>
 8001dd0:	f7ff fd1e 	bl	8001810 <rt_get_first>
 8001dd4:	2100      	movs	r1, #0
 8001dd6:	4605      	mov	r5, r0
 8001dd8:	f7ff fede 	bl	8001b98 <rt_ret_val>
 8001ddc:	8923      	ldrh	r3, [r4, #8]
 8001dde:	69e9      	ldr	r1, [r5, #28]
 8001de0:	1d1a      	adds	r2, r3, #4
 8001de2:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001de6:	f3ef 8210 	mrs	r2, PRIMASK
 8001dea:	f3ef 8110 	mrs	r1, PRIMASK
 8001dee:	b672      	cpsid	i
 8001df0:	89a1      	ldrh	r1, [r4, #12]
 8001df2:	3101      	adds	r1, #1
 8001df4:	81a1      	strh	r1, [r4, #12]
 8001df6:	b902      	cbnz	r2, 8001dfa <rt_mbx_psh+0x7e>
 8001df8:	b662      	cpsie	i
 8001dfa:	89e2      	ldrh	r2, [r4, #14]
 8001dfc:	3301      	adds	r3, #1
 8001dfe:	b29b      	uxth	r3, r3
 8001e00:	429a      	cmp	r2, r3
 8001e02:	8123      	strh	r3, [r4, #8]
 8001e04:	bf04      	itt	eq
 8001e06:	2300      	moveq	r3, #0
 8001e08:	8123      	strheq	r3, [r4, #8]
 8001e0a:	2301      	movs	r3, #1
 8001e0c:	706b      	strb	r3, [r5, #1]
 8001e0e:	4628      	mov	r0, r5
 8001e10:	f7ff fda4 	bl	800195c <rt_rmv_dly>
 8001e14:	4629      	mov	r1, r5
 8001e16:	4811      	ldr	r0, [pc, #68]	; (8001e5c <rt_mbx_psh+0xe0>)
 8001e18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e1c:	f7ff bce0 	b.w	80017e0 <rt_put_prio>
 8001e20:	8980      	ldrh	r0, [r0, #12]
 8001e22:	89e1      	ldrh	r1, [r4, #14]
 8001e24:	4288      	cmp	r0, r1
 8001e26:	d213      	bcs.n	8001e50 <rt_mbx_psh+0xd4>
 8001e28:	8923      	ldrh	r3, [r4, #8]
 8001e2a:	1d1a      	adds	r2, r3, #4
 8001e2c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001e30:	f3ef 8210 	mrs	r2, PRIMASK
 8001e34:	f3ef 8510 	mrs	r5, PRIMASK
 8001e38:	b672      	cpsid	i
 8001e3a:	3001      	adds	r0, #1
 8001e3c:	81a0      	strh	r0, [r4, #12]
 8001e3e:	b902      	cbnz	r2, 8001e42 <rt_mbx_psh+0xc6>
 8001e40:	b662      	cpsie	i
 8001e42:	3301      	adds	r3, #1
 8001e44:	b29b      	uxth	r3, r3
 8001e46:	4299      	cmp	r1, r3
 8001e48:	bf08      	it	eq
 8001e4a:	2300      	moveq	r3, #0
 8001e4c:	8123      	strh	r3, [r4, #8]
 8001e4e:	bd70      	pop	{r4, r5, r6, pc}
 8001e50:	2003      	movs	r0, #3
 8001e52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e56:	f7ff bc75 	b.w	8001744 <os_error>
 8001e5a:	bd70      	pop	{r4, r5, r6, pc}
 8001e5c:	20002840 	.word	0x20002840

08001e60 <rt_evt_psh>:
 8001e60:	b510      	push	{r4, lr}
 8001e62:	8b03      	ldrh	r3, [r0, #24]
 8001e64:	7842      	ldrb	r2, [r0, #1]
 8001e66:	4319      	orrs	r1, r3
 8001e68:	2a06      	cmp	r2, #6
 8001e6a:	4604      	mov	r4, r0
 8001e6c:	8301      	strh	r1, [r0, #24]
 8001e6e:	8b43      	ldrh	r3, [r0, #26]
 8001e70:	d115      	bne.n	8001e9e <rt_evt_psh+0x3e>
 8001e72:	ea33 0201 	bics.w	r2, r3, r1
 8001e76:	d119      	bne.n	8001eac <rt_evt_psh+0x4c>
 8001e78:	ea21 0103 	bic.w	r1, r1, r3
 8001e7c:	8321      	strh	r1, [r4, #24]
 8001e7e:	4620      	mov	r0, r4
 8001e80:	f7ff fd6c 	bl	800195c <rt_rmv_dly>
 8001e84:	2301      	movs	r3, #1
 8001e86:	4620      	mov	r0, r4
 8001e88:	7063      	strb	r3, [r4, #1]
 8001e8a:	8b62      	ldrh	r2, [r4, #26]
 8001e8c:	2108      	movs	r1, #8
 8001e8e:	f7ff fe8c 	bl	8001baa <rt_ret_val2>
 8001e92:	4621      	mov	r1, r4
 8001e94:	4806      	ldr	r0, [pc, #24]	; (8001eb0 <rt_evt_psh+0x50>)
 8001e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e9a:	f7ff bca1 	b.w	80017e0 <rt_put_prio>
 8001e9e:	2a05      	cmp	r2, #5
 8001ea0:	d104      	bne.n	8001eac <rt_evt_psh+0x4c>
 8001ea2:	ea11 0203 	ands.w	r2, r1, r3
 8001ea6:	d001      	beq.n	8001eac <rt_evt_psh+0x4c>
 8001ea8:	8342      	strh	r2, [r0, #26]
 8001eaa:	e7e5      	b.n	8001e78 <rt_evt_psh+0x18>
 8001eac:	bd10      	pop	{r4, pc}
 8001eae:	bf00      	nop
 8001eb0:	20002840 	.word	0x20002840

08001eb4 <rt_init_robin>:
 8001eb4:	4b03      	ldr	r3, [pc, #12]	; (8001ec4 <rt_init_robin+0x10>)
 8001eb6:	2200      	movs	r2, #0
 8001eb8:	601a      	str	r2, [r3, #0]
 8001eba:	4a03      	ldr	r2, [pc, #12]	; (8001ec8 <rt_init_robin+0x14>)
 8001ebc:	6812      	ldr	r2, [r2, #0]
 8001ebe:	80da      	strh	r2, [r3, #6]
 8001ec0:	4770      	bx	lr
 8001ec2:	bf00      	nop
 8001ec4:	20002878 	.word	0x20002878
 8001ec8:	08006fe8 	.word	0x08006fe8

08001ecc <rt_chk_robin>:
 8001ecc:	b508      	push	{r3, lr}
 8001ece:	4b0e      	ldr	r3, [pc, #56]	; (8001f08 <rt_chk_robin+0x3c>)
 8001ed0:	685a      	ldr	r2, [r3, #4]
 8001ed2:	4b0e      	ldr	r3, [pc, #56]	; (8001f0c <rt_chk_robin+0x40>)
 8001ed4:	6819      	ldr	r1, [r3, #0]
 8001ed6:	4291      	cmp	r1, r2
 8001ed8:	490d      	ldr	r1, [pc, #52]	; (8001f10 <rt_chk_robin+0x44>)
 8001eda:	d005      	beq.n	8001ee8 <rt_chk_robin+0x1c>
 8001edc:	601a      	str	r2, [r3, #0]
 8001ede:	88da      	ldrh	r2, [r3, #6]
 8001ee0:	6808      	ldr	r0, [r1, #0]
 8001ee2:	3a01      	subs	r2, #1
 8001ee4:	4402      	add	r2, r0
 8001ee6:	809a      	strh	r2, [r3, #4]
 8001ee8:	8898      	ldrh	r0, [r3, #4]
 8001eea:	880a      	ldrh	r2, [r1, #0]
 8001eec:	4290      	cmp	r0, r2
 8001eee:	d10a      	bne.n	8001f06 <rt_chk_robin+0x3a>
 8001ef0:	2200      	movs	r2, #0
 8001ef2:	4805      	ldr	r0, [pc, #20]	; (8001f08 <rt_chk_robin+0x3c>)
 8001ef4:	601a      	str	r2, [r3, #0]
 8001ef6:	f7ff fc8b 	bl	8001810 <rt_get_first>
 8001efa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001efe:	4601      	mov	r1, r0
 8001f00:	4801      	ldr	r0, [pc, #4]	; (8001f08 <rt_chk_robin+0x3c>)
 8001f02:	f7ff bc6d 	b.w	80017e0 <rt_put_prio>
 8001f06:	bd08      	pop	{r3, pc}
 8001f08:	20002840 	.word	0x20002840
 8001f0c:	20002878 	.word	0x20002878
 8001f10:	200028d4 	.word	0x200028d4

08001f14 <rt_timer_insert>:
 8001f14:	4a0b      	ldr	r2, [pc, #44]	; (8001f44 <rt_timer_insert+0x30>)
 8001f16:	6813      	ldr	r3, [r2, #0]
 8001f18:	b530      	push	{r4, r5, lr}
 8001f1a:	2400      	movs	r4, #0
 8001f1c:	b943      	cbnz	r3, 8001f30 <rt_timer_insert+0x1c>
 8001f1e:	6003      	str	r3, [r0, #0]
 8001f20:	6081      	str	r1, [r0, #8]
 8001f22:	b113      	cbz	r3, 8001f2a <rt_timer_insert+0x16>
 8001f24:	689d      	ldr	r5, [r3, #8]
 8001f26:	1a69      	subs	r1, r5, r1
 8001f28:	6099      	str	r1, [r3, #8]
 8001f2a:	b144      	cbz	r4, 8001f3e <rt_timer_insert+0x2a>
 8001f2c:	6020      	str	r0, [r4, #0]
 8001f2e:	bd30      	pop	{r4, r5, pc}
 8001f30:	689d      	ldr	r5, [r3, #8]
 8001f32:	42a9      	cmp	r1, r5
 8001f34:	d3f3      	bcc.n	8001f1e <rt_timer_insert+0xa>
 8001f36:	461c      	mov	r4, r3
 8001f38:	1b49      	subs	r1, r1, r5
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	e7ee      	b.n	8001f1c <rt_timer_insert+0x8>
 8001f3e:	6010      	str	r0, [r2, #0]
 8001f40:	bd30      	pop	{r4, r5, pc}
 8001f42:	bf00      	nop
 8001f44:	20002888 	.word	0x20002888

08001f48 <rt_ms2tick>:
 8001f48:	b1c0      	cbz	r0, 8001f7c <rt_ms2tick+0x34>
 8001f4a:	1c43      	adds	r3, r0, #1
 8001f4c:	d011      	beq.n	8001f72 <rt_ms2tick+0x2a>
 8001f4e:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <rt_ms2tick+0x38>)
 8001f50:	4298      	cmp	r0, r3
 8001f52:	d811      	bhi.n	8001f78 <rt_ms2tick+0x30>
 8001f54:	4b0b      	ldr	r3, [pc, #44]	; (8001f84 <rt_ms2tick+0x3c>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001f5c:	1e5a      	subs	r2, r3, #1
 8001f5e:	fb01 2000 	mla	r0, r1, r0, r2
 8001f62:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f66:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f6a:	4283      	cmp	r3, r0
 8001f6c:	d806      	bhi.n	8001f7c <rt_ms2tick+0x34>
 8001f6e:	b298      	uxth	r0, r3
 8001f70:	4770      	bx	lr
 8001f72:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f76:	4770      	bx	lr
 8001f78:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f7c:	4770      	bx	lr
 8001f7e:	bf00      	nop
 8001f80:	003d0900 	.word	0x003d0900
 8001f84:	08006fa0 	.word	0x08006fa0

08001f88 <rt_tid2ptcb>:
 8001f88:	b138      	cbz	r0, 8001f9a <rt_tid2ptcb+0x12>
 8001f8a:	0783      	lsls	r3, r0, #30
 8001f8c:	d104      	bne.n	8001f98 <rt_tid2ptcb+0x10>
 8001f8e:	7803      	ldrb	r3, [r0, #0]
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	bf18      	it	ne
 8001f94:	2000      	movne	r0, #0
 8001f96:	4770      	bx	lr
 8001f98:	2000      	movs	r0, #0
 8001f9a:	4770      	bx	lr

08001f9c <svcKernelStart>:
 8001f9c:	b5b0      	push	{r4, r5, r7, lr}
 8001f9e:	4d0e      	ldr	r5, [pc, #56]	; (8001fd8 <svcKernelStart+0x3c>)
 8001fa0:	7828      	ldrb	r0, [r5, #0]
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	b9a8      	cbnz	r0, 8001fd2 <svcKernelStart+0x36>
 8001fa6:	4c0d      	ldr	r4, [pc, #52]	; (8001fdc <svcKernelStart+0x40>)
 8001fa8:	6823      	ldr	r3, [r4, #0]
 8001faa:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001fae:	f000 fb6f 	bl	8002690 <rt_tsk_prio>
 8001fb2:	6823      	ldr	r3, [r4, #0]
 8001fb4:	78da      	ldrb	r2, [r3, #3]
 8001fb6:	2aff      	cmp	r2, #255	; 0xff
 8001fb8:	d103      	bne.n	8001fc2 <svcKernelStart+0x26>
 8001fba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fbc:	3220      	adds	r2, #32
 8001fbe:	f382 8809 	msr	PSP, r2
 8001fc2:	6862      	ldr	r2, [r4, #4]
 8001fc4:	b90a      	cbnz	r2, 8001fca <svcKernelStart+0x2e>
 8001fc6:	e884 000c 	stmia.w	r4, {r2, r3}
 8001fca:	f000 fd19 	bl	8002a00 <rt_sys_start>
 8001fce:	2301      	movs	r3, #1
 8001fd0:	702b      	strb	r3, [r5, #0]
 8001fd2:	2000      	movs	r0, #0
 8001fd4:	bdb0      	pop	{r4, r5, r7, pc}
 8001fd6:	bf00      	nop
 8001fd8:	20002885 	.word	0x20002885
 8001fdc:	2000288c 	.word	0x2000288c

08001fe0 <svcKernelRunning>:
 8001fe0:	4b01      	ldr	r3, [pc, #4]	; (8001fe8 <svcKernelRunning+0x8>)
 8001fe2:	7818      	ldrb	r0, [r3, #0]
 8001fe4:	4770      	bx	lr
 8001fe6:	bf00      	nop
 8001fe8:	20002885 	.word	0x20002885

08001fec <osKernelRunning>:
 8001fec:	b510      	push	{r4, lr}
 8001fee:	f3ef 8410 	mrs	r4, PRIMASK
 8001ff2:	b934      	cbnz	r4, 8002002 <osKernelRunning+0x16>
 8001ff4:	f3ef 8405 	mrs	r4, IPSR
 8001ff8:	b91c      	cbnz	r4, 8002002 <osKernelRunning+0x16>
 8001ffa:	f3ef 8414 	mrs	r4, CONTROL
 8001ffe:	07e4      	lsls	r4, r4, #31
 8002000:	d402      	bmi.n	8002008 <osKernelRunning+0x1c>
 8002002:	4b03      	ldr	r3, [pc, #12]	; (8002010 <osKernelRunning+0x24>)
 8002004:	7818      	ldrb	r0, [r3, #0]
 8002006:	bd10      	pop	{r4, pc}
 8002008:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002014 <osKernelRunning+0x28>
 800200c:	df00      	svc	0
 800200e:	bd10      	pop	{r4, pc}
 8002010:	20002885 	.word	0x20002885
 8002014:	08001fe1 	.word	0x08001fe1

08002018 <osKernelStart>:
 8002018:	b590      	push	{r4, r7, lr}
 800201a:	b089      	sub	sp, #36	; 0x24
 800201c:	af00      	add	r7, sp, #0
 800201e:	f3ef 8310 	mrs	r3, PRIMASK
 8002022:	2b00      	cmp	r3, #0
 8002024:	d137      	bne.n	8002096 <osKernelStart+0x7e>
 8002026:	f3ef 8305 	mrs	r3, IPSR
 800202a:	2b00      	cmp	r3, #0
 800202c:	d133      	bne.n	8002096 <osKernelStart+0x7e>
 800202e:	f7ff ffdd 	bl	8001fec <osKernelRunning>
 8002032:	b928      	cbnz	r0, 8002040 <osKernelStart+0x28>
 8002034:	4c19      	ldr	r4, [pc, #100]	; (800209c <osKernelStart+0x84>)
 8002036:	6824      	ldr	r4, [r4, #0]
 8002038:	b114      	cbz	r4, 8002040 <osKernelStart+0x28>
 800203a:	6864      	ldr	r4, [r4, #4]
 800203c:	b104      	cbz	r4, 8002040 <osKernelStart+0x28>
 800203e:	47a0      	blx	r4
 8002040:	f3ef 8414 	mrs	r4, CONTROL
 8002044:	f004 0403 	and.w	r4, r4, #3
 8002048:	2c02      	cmp	r4, #2
 800204a:	d018      	beq.n	800207e <osKernelStart+0x66>
 800204c:	2c03      	cmp	r4, #3
 800204e:	d01c      	beq.n	800208a <osKernelStart+0x72>
 8002050:	2c01      	cmp	r4, #1
 8002052:	d01e      	beq.n	8002092 <osKernelStart+0x7a>
 8002054:	f107 0420 	add.w	r4, r7, #32
 8002058:	f384 8809 	msr	PSP, r4
 800205c:	4c10      	ldr	r4, [pc, #64]	; (80020a0 <osKernelStart+0x88>)
 800205e:	7824      	ldrb	r4, [r4, #0]
 8002060:	07e4      	lsls	r4, r4, #31
 8002062:	d510      	bpl.n	8002086 <osKernelStart+0x6e>
 8002064:	2402      	movs	r4, #2
 8002066:	f384 8814 	msr	CONTROL, r4
 800206a:	f3bf 8f4f 	dsb	sy
 800206e:	f3bf 8f6f 	isb	sy
 8002072:	f8df c030 	ldr.w	r12, [pc, #48]	; 80020a4 <osKernelStart+0x8c>
 8002076:	df00      	svc	0
 8002078:	3724      	adds	r7, #36	; 0x24
 800207a:	46bd      	mov	sp, r7
 800207c:	bd90      	pop	{r4, r7, pc}
 800207e:	4c08      	ldr	r4, [pc, #32]	; (80020a0 <osKernelStart+0x88>)
 8002080:	7824      	ldrb	r4, [r4, #0]
 8002082:	07e4      	lsls	r4, r4, #31
 8002084:	d4f5      	bmi.n	8002072 <osKernelStart+0x5a>
 8002086:	2403      	movs	r4, #3
 8002088:	e7ed      	b.n	8002066 <osKernelStart+0x4e>
 800208a:	4c05      	ldr	r4, [pc, #20]	; (80020a0 <osKernelStart+0x88>)
 800208c:	7824      	ldrb	r4, [r4, #0]
 800208e:	07e4      	lsls	r4, r4, #31
 8002090:	d5ef      	bpl.n	8002072 <osKernelStart+0x5a>
 8002092:	20ff      	movs	r0, #255	; 0xff
 8002094:	e7f0      	b.n	8002078 <osKernelStart+0x60>
 8002096:	2082      	movs	r0, #130	; 0x82
 8002098:	e7ee      	b.n	8002078 <osKernelStart+0x60>
 800209a:	bf00      	nop
 800209c:	20002874 	.word	0x20002874
 80020a0:	08006fce 	.word	0x08006fce
 80020a4:	08001f9d 	.word	0x08001f9d

080020a8 <svcThreadCreate>:
 80020a8:	b570      	push	{r4, r5, r6, lr}
 80020aa:	460b      	mov	r3, r1
 80020ac:	4616      	mov	r6, r2
 80020ae:	4602      	mov	r2, r0
 80020b0:	b910      	cbnz	r0, 80020b8 <svcThreadCreate+0x10>
 80020b2:	2400      	movs	r4, #0
 80020b4:	4620      	mov	r0, r4
 80020b6:	bd70      	pop	{r4, r5, r6, pc}
 80020b8:	6800      	ldr	r0, [r0, #0]
 80020ba:	2800      	cmp	r0, #0
 80020bc:	d0f9      	beq.n	80020b2 <svcThreadCreate+0xa>
 80020be:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80020c2:	1ce5      	adds	r5, r4, #3
 80020c4:	b2ad      	uxth	r5, r5
 80020c6:	2d06      	cmp	r5, #6
 80020c8:	d8f3      	bhi.n	80020b2 <svcThreadCreate+0xa>
 80020ca:	68d1      	ldr	r1, [r2, #12]
 80020cc:	b1c1      	cbz	r1, 8002100 <svcThreadCreate+0x58>
 80020ce:	6912      	ldr	r2, [r2, #16]
 80020d0:	3404      	adds	r4, #4
 80020d2:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80020d6:	f000 fb19 	bl	800270c <rt_tsk_create>
 80020da:	2800      	cmp	r0, #0
 80020dc:	d0e9      	beq.n	80020b2 <svcThreadCreate+0xa>
 80020de:	4b0a      	ldr	r3, [pc, #40]	; (8002108 <svcThreadCreate+0x60>)
 80020e0:	4a0a      	ldr	r2, [pc, #40]	; (800210c <svcThreadCreate+0x64>)
 80020e2:	3801      	subs	r0, #1
 80020e4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80020e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80020ea:	635a      	str	r2, [r3, #52]	; 0x34
 80020ec:	4b08      	ldr	r3, [pc, #32]	; (8002110 <svcThreadCreate+0x68>)
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	b143      	cbz	r3, 8002104 <svcThreadCreate+0x5c>
 80020f2:	689b      	ldr	r3, [r3, #8]
 80020f4:	b133      	cbz	r3, 8002104 <svcThreadCreate+0x5c>
 80020f6:	4631      	mov	r1, r6
 80020f8:	78e0      	ldrb	r0, [r4, #3]
 80020fa:	4798      	blx	r3
 80020fc:	63e0      	str	r0, [r4, #60]	; 0x3c
 80020fe:	e7d9      	b.n	80020b4 <svcThreadCreate+0xc>
 8002100:	460a      	mov	r2, r1
 8002102:	e7e5      	b.n	80020d0 <svcThreadCreate+0x28>
 8002104:	63e6      	str	r6, [r4, #60]	; 0x3c
 8002106:	e7d5      	b.n	80020b4 <svcThreadCreate+0xc>
 8002108:	20002228 	.word	0x20002228
 800210c:	080022b1 	.word	0x080022b1
 8002110:	20002874 	.word	0x20002874

08002114 <svcThreadGetId>:
 8002114:	b508      	push	{r3, lr}
 8002116:	f000 fab3 	bl	8002680 <rt_tsk_self>
 800211a:	b118      	cbz	r0, 8002124 <svcThreadGetId+0x10>
 800211c:	3801      	subs	r0, #1
 800211e:	4b02      	ldr	r3, [pc, #8]	; (8002128 <svcThreadGetId+0x14>)
 8002120:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002124:	bd08      	pop	{r3, pc}
 8002126:	bf00      	nop
 8002128:	20002228 	.word	0x20002228

0800212c <svcThreadTerminate>:
 800212c:	b510      	push	{r4, lr}
 800212e:	f7ff ff2b 	bl	8001f88 <rt_tid2ptcb>
 8002132:	4604      	mov	r4, r0
 8002134:	b170      	cbz	r0, 8002154 <svcThreadTerminate+0x28>
 8002136:	4b08      	ldr	r3, [pc, #32]	; (8002158 <svcThreadTerminate+0x2c>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	b11b      	cbz	r3, 8002144 <svcThreadTerminate+0x18>
 800213c:	68db      	ldr	r3, [r3, #12]
 800213e:	b10b      	cbz	r3, 8002144 <svcThreadTerminate+0x18>
 8002140:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002142:	4798      	blx	r3
 8002144:	78e0      	ldrb	r0, [r4, #3]
 8002146:	f000 fb37 	bl	80027b8 <rt_tsk_delete>
 800214a:	28ff      	cmp	r0, #255	; 0xff
 800214c:	bf0c      	ite	eq
 800214e:	2081      	moveq	r0, #129	; 0x81
 8002150:	2000      	movne	r0, #0
 8002152:	bd10      	pop	{r4, pc}
 8002154:	2080      	movs	r0, #128	; 0x80
 8002156:	bd10      	pop	{r4, pc}
 8002158:	20002874 	.word	0x20002874

0800215c <svcDelay>:
 800215c:	b508      	push	{r3, lr}
 800215e:	b128      	cbz	r0, 800216c <svcDelay+0x10>
 8002160:	f7ff fef2 	bl	8001f48 <rt_ms2tick>
 8002164:	f000 fd8e 	bl	8002c84 <rt_dly_wait>
 8002168:	2040      	movs	r0, #64	; 0x40
 800216a:	bd08      	pop	{r3, pc}
 800216c:	bd08      	pop	{r3, pc}
	...

08002170 <osDelay>:
 8002170:	b510      	push	{r4, lr}
 8002172:	f3ef 8410 	mrs	r4, PRIMASK
 8002176:	b934      	cbnz	r4, 8002186 <osDelay+0x16>
 8002178:	f3ef 8405 	mrs	r4, IPSR
 800217c:	b91c      	cbnz	r4, 8002186 <osDelay+0x16>
 800217e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800218c <osDelay+0x1c>
 8002182:	df00      	svc	0
 8002184:	bd10      	pop	{r4, pc}
 8002186:	2082      	movs	r0, #130	; 0x82
 8002188:	bd10      	pop	{r4, pc}
 800218a:	0000      	.short	0x0000
 800218c:	0800215d 	.word	0x0800215d

08002190 <svcTimerCall>:
 8002190:	0783      	lsls	r3, r0, #30
 8002192:	d105      	bne.n	80021a0 <svcTimerCall+0x10>
 8002194:	b138      	cbz	r0, 80021a6 <svcTimerCall+0x16>
 8002196:	6943      	ldr	r3, [r0, #20]
 8002198:	6901      	ldr	r1, [r0, #16]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	4618      	mov	r0, r3
 800219e:	4770      	bx	lr
 80021a0:	2300      	movs	r3, #0
 80021a2:	4619      	mov	r1, r3
 80021a4:	e7fa      	b.n	800219c <svcTimerCall+0xc>
 80021a6:	4603      	mov	r3, r0
 80021a8:	e7fb      	b.n	80021a2 <svcTimerCall+0x12>
	...

080021ac <osTimerCall>:
 80021ac:	b510      	push	{r4, lr}
 80021ae:	4604      	mov	r4, r0
 80021b0:	4608      	mov	r0, r1
 80021b2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021c0 <osTimerCall+0x14>
 80021b6:	df00      	svc	0
 80021b8:	e884 0003 	stmia.w	r4, {r0, r1}
 80021bc:	4620      	mov	r0, r4
 80021be:	bd10      	pop	{r4, pc}
 80021c0:	08002191 	.word	0x08002191

080021c4 <svcMutexCreate>:
 80021c4:	b510      	push	{r4, lr}
 80021c6:	b148      	cbz	r0, 80021dc <svcMutexCreate+0x18>
 80021c8:	6804      	ldr	r4, [r0, #0]
 80021ca:	b124      	cbz	r4, 80021d6 <svcMutexCreate+0x12>
 80021cc:	7823      	ldrb	r3, [r4, #0]
 80021ce:	b923      	cbnz	r3, 80021da <svcMutexCreate+0x16>
 80021d0:	4620      	mov	r0, r4
 80021d2:	f000 fc5b 	bl	8002a8c <rt_mut_init>
 80021d6:	4620      	mov	r0, r4
 80021d8:	bd10      	pop	{r4, pc}
 80021da:	2000      	movs	r0, #0
 80021dc:	bd10      	pop	{r4, pc}

080021de <svcMutexWait>:
 80021de:	b570      	push	{r4, r5, r6, lr}
 80021e0:	f010 0403 	ands.w	r4, r0, #3
 80021e4:	4605      	mov	r5, r0
 80021e6:	460e      	mov	r6, r1
 80021e8:	d111      	bne.n	800220e <svcMutexWait+0x30>
 80021ea:	b180      	cbz	r0, 800220e <svcMutexWait+0x30>
 80021ec:	7803      	ldrb	r3, [r0, #0]
 80021ee:	2b03      	cmp	r3, #3
 80021f0:	d10d      	bne.n	800220e <svcMutexWait+0x30>
 80021f2:	4608      	mov	r0, r1
 80021f4:	f7ff fea8 	bl	8001f48 <rt_ms2tick>
 80021f8:	4601      	mov	r1, r0
 80021fa:	4628      	mov	r0, r5
 80021fc:	f000 fd14 	bl	8002c28 <rt_mut_wait>
 8002200:	2801      	cmp	r0, #1
 8002202:	d106      	bne.n	8002212 <svcMutexWait+0x34>
 8002204:	2e00      	cmp	r6, #0
 8002206:	bf14      	ite	ne
 8002208:	20c1      	movne	r0, #193	; 0xc1
 800220a:	2081      	moveq	r0, #129	; 0x81
 800220c:	bd70      	pop	{r4, r5, r6, pc}
 800220e:	2080      	movs	r0, #128	; 0x80
 8002210:	bd70      	pop	{r4, r5, r6, pc}
 8002212:	4620      	mov	r0, r4
 8002214:	bd70      	pop	{r4, r5, r6, pc}

08002216 <svcMutexRelease>:
 8002216:	0782      	lsls	r2, r0, #30
 8002218:	b508      	push	{r3, lr}
 800221a:	d10a      	bne.n	8002232 <svcMutexRelease+0x1c>
 800221c:	b148      	cbz	r0, 8002232 <svcMutexRelease+0x1c>
 800221e:	7803      	ldrb	r3, [r0, #0]
 8002220:	2b03      	cmp	r3, #3
 8002222:	d106      	bne.n	8002232 <svcMutexRelease+0x1c>
 8002224:	f000 fc90 	bl	8002b48 <rt_mut_release>
 8002228:	28ff      	cmp	r0, #255	; 0xff
 800222a:	bf0c      	ite	eq
 800222c:	2081      	moveq	r0, #129	; 0x81
 800222e:	2000      	movne	r0, #0
 8002230:	bd08      	pop	{r3, pc}
 8002232:	2080      	movs	r0, #128	; 0x80
 8002234:	bd08      	pop	{r3, pc}

08002236 <svcMutexDelete>:
 8002236:	b510      	push	{r4, lr}
 8002238:	f010 0403 	ands.w	r4, r0, #3
 800223c:	d107      	bne.n	800224e <svcMutexDelete+0x18>
 800223e:	b130      	cbz	r0, 800224e <svcMutexDelete+0x18>
 8002240:	7803      	ldrb	r3, [r0, #0]
 8002242:	2b03      	cmp	r3, #3
 8002244:	d103      	bne.n	800224e <svcMutexDelete+0x18>
 8002246:	f000 fc29 	bl	8002a9c <rt_mut_delete>
 800224a:	4620      	mov	r0, r4
 800224c:	bd10      	pop	{r4, pc}
 800224e:	2080      	movs	r0, #128	; 0x80
 8002250:	bd10      	pop	{r4, pc}
	...

08002254 <osMutexCreate>:
 8002254:	b570      	push	{r4, r5, r6, lr}
 8002256:	4605      	mov	r5, r0
 8002258:	f3ef 8410 	mrs	r4, PRIMASK
 800225c:	b994      	cbnz	r4, 8002284 <osMutexCreate+0x30>
 800225e:	f3ef 8605 	mrs	r6, IPSR
 8002262:	b97e      	cbnz	r6, 8002284 <osMutexCreate+0x30>
 8002264:	f3ef 8414 	mrs	r4, CONTROL
 8002268:	07e4      	lsls	r4, r4, #31
 800226a:	d406      	bmi.n	800227a <osMutexCreate+0x26>
 800226c:	4c06      	ldr	r4, [pc, #24]	; (8002288 <osMutexCreate+0x34>)
 800226e:	7824      	ldrb	r4, [r4, #0]
 8002270:	b91c      	cbnz	r4, 800227a <osMutexCreate+0x26>
 8002272:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002276:	f7ff bfa5 	b.w	80021c4 <svcMutexCreate>
 800227a:	4628      	mov	r0, r5
 800227c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800228c <osMutexCreate+0x38>
 8002280:	df00      	svc	0
 8002282:	bd70      	pop	{r4, r5, r6, pc}
 8002284:	2000      	movs	r0, #0
 8002286:	bd70      	pop	{r4, r5, r6, pc}
 8002288:	20002885 	.word	0x20002885
 800228c:	080021c5 	.word	0x080021c5

08002290 <osMutexWait>:
 8002290:	b510      	push	{r4, lr}
 8002292:	f3ef 8410 	mrs	r4, PRIMASK
 8002296:	b934      	cbnz	r4, 80022a6 <osMutexWait+0x16>
 8002298:	f3ef 8405 	mrs	r4, IPSR
 800229c:	b91c      	cbnz	r4, 80022a6 <osMutexWait+0x16>
 800229e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022ac <osMutexWait+0x1c>
 80022a2:	df00      	svc	0
 80022a4:	bd10      	pop	{r4, pc}
 80022a6:	2082      	movs	r0, #130	; 0x82
 80022a8:	bd10      	pop	{r4, pc}
 80022aa:	0000      	.short	0x0000
 80022ac:	080021df 	.word	0x080021df

080022b0 <osThreadExit>:
 80022b0:	4808      	ldr	r0, [pc, #32]	; (80022d4 <osThreadExit+0x24>)
 80022b2:	b508      	push	{r3, lr}
 80022b4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80022b8:	6800      	ldr	r0, [r0, #0]
 80022ba:	f7ff ffe9 	bl	8002290 <osMutexWait>
 80022be:	f8df c018 	ldr.w	r12, [pc, #24]	; 80022d8 <osThreadExit+0x28>
 80022c2:	df00      	svc	0
 80022c4:	4604      	mov	r4, r0
 80022c6:	f7ff fa4b 	bl	8001760 <sysThreadTerminate>
 80022ca:	4620      	mov	r0, r4
 80022cc:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022dc <osThreadExit+0x2c>
 80022d0:	df00      	svc	0
 80022d2:	e7fe      	b.n	80022d2 <osThreadExit+0x22>
 80022d4:	20002880 	.word	0x20002880
 80022d8:	08002115 	.word	0x08002115
 80022dc:	0800212d 	.word	0x0800212d

080022e0 <osMutexRelease>:
 80022e0:	b510      	push	{r4, lr}
 80022e2:	f3ef 8410 	mrs	r4, PRIMASK
 80022e6:	b934      	cbnz	r4, 80022f6 <osMutexRelease+0x16>
 80022e8:	f3ef 8405 	mrs	r4, IPSR
 80022ec:	b91c      	cbnz	r4, 80022f6 <osMutexRelease+0x16>
 80022ee:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022fc <osMutexRelease+0x1c>
 80022f2:	df00      	svc	0
 80022f4:	bd10      	pop	{r4, pc}
 80022f6:	2082      	movs	r0, #130	; 0x82
 80022f8:	bd10      	pop	{r4, pc}
 80022fa:	0000      	.short	0x0000
 80022fc:	08002217 	.word	0x08002217

08002300 <osThreadContextCreate>:
 8002300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002304:	4680      	mov	r8, r0
 8002306:	460f      	mov	r7, r1
 8002308:	4616      	mov	r6, r2
 800230a:	f3ef 8410 	mrs	r4, PRIMASK
 800230e:	bb04      	cbnz	r4, 8002352 <osThreadContextCreate+0x52>
 8002310:	f3ef 8305 	mrs	r3, IPSR
 8002314:	b9d3      	cbnz	r3, 800234c <osThreadContextCreate+0x4c>
 8002316:	f3ef 8314 	mrs	r3, CONTROL
 800231a:	07db      	lsls	r3, r3, #31
 800231c:	d406      	bmi.n	800232c <osThreadContextCreate+0x2c>
 800231e:	4b0e      	ldr	r3, [pc, #56]	; (8002358 <osThreadContextCreate+0x58>)
 8002320:	781b      	ldrb	r3, [r3, #0]
 8002322:	b91b      	cbnz	r3, 800232c <osThreadContextCreate+0x2c>
 8002324:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002328:	f7ff bebe 	b.w	80020a8 <svcThreadCreate>
 800232c:	4d0b      	ldr	r5, [pc, #44]	; (800235c <osThreadContextCreate+0x5c>)
 800232e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002332:	6828      	ldr	r0, [r5, #0]
 8002334:	f7ff ffac 	bl	8002290 <osMutexWait>
 8002338:	4640      	mov	r0, r8
 800233a:	4639      	mov	r1, r7
 800233c:	4632      	mov	r2, r6
 800233e:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002360 <osThreadContextCreate+0x60>
 8002342:	df00      	svc	0
 8002344:	4604      	mov	r4, r0
 8002346:	6828      	ldr	r0, [r5, #0]
 8002348:	f7ff ffca 	bl	80022e0 <osMutexRelease>
 800234c:	4620      	mov	r0, r4
 800234e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002352:	2400      	movs	r4, #0
 8002354:	e7fa      	b.n	800234c <osThreadContextCreate+0x4c>
 8002356:	bf00      	nop
 8002358:	20002885 	.word	0x20002885
 800235c:	20002880 	.word	0x20002880
 8002360:	080020a9 	.word	0x080020a9

08002364 <osThreadCreate>:
 8002364:	2200      	movs	r2, #0
 8002366:	f7ff bfcb 	b.w	8002300 <osThreadContextCreate>
	...

0800236c <osMutexDelete>:
 800236c:	b510      	push	{r4, lr}
 800236e:	f3ef 8410 	mrs	r4, PRIMASK
 8002372:	b934      	cbnz	r4, 8002382 <osMutexDelete+0x16>
 8002374:	f3ef 8405 	mrs	r4, IPSR
 8002378:	b91c      	cbnz	r4, 8002382 <osMutexDelete+0x16>
 800237a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002388 <osMutexDelete+0x1c>
 800237e:	df00      	svc	0
 8002380:	bd10      	pop	{r4, pc}
 8002382:	2082      	movs	r0, #130	; 0x82
 8002384:	bd10      	pop	{r4, pc}
 8002386:	0000      	.short	0x0000
 8002388:	08002237 	.word	0x08002237

0800238c <svcMessageCreate>:
 800238c:	b510      	push	{r4, lr}
 800238e:	4604      	mov	r4, r0
 8002390:	b160      	cbz	r0, 80023ac <svcMessageCreate+0x20>
 8002392:	6801      	ldr	r1, [r0, #0]
 8002394:	b151      	cbz	r1, 80023ac <svcMessageCreate+0x20>
 8002396:	6840      	ldr	r0, [r0, #4]
 8002398:	b148      	cbz	r0, 80023ae <svcMessageCreate+0x22>
 800239a:	7803      	ldrb	r3, [r0, #0]
 800239c:	b933      	cbnz	r3, 80023ac <svcMessageCreate+0x20>
 800239e:	3104      	adds	r1, #4
 80023a0:	0089      	lsls	r1, r1, #2
 80023a2:	b289      	uxth	r1, r1
 80023a4:	f7ff fc52 	bl	8001c4c <rt_mbx_init>
 80023a8:	6860      	ldr	r0, [r4, #4]
 80023aa:	bd10      	pop	{r4, pc}
 80023ac:	2000      	movs	r0, #0
 80023ae:	bd10      	pop	{r4, pc}

080023b0 <svcKernelInitialize>:
 80023b0:	b538      	push	{r3, r4, r5, lr}
 80023b2:	4c11      	ldr	r4, [pc, #68]	; (80023f8 <svcKernelInitialize+0x48>)
 80023b4:	7823      	ldrb	r3, [r4, #0]
 80023b6:	b90b      	cbnz	r3, 80023bc <svcKernelInitialize+0xc>
 80023b8:	f000 faa8 	bl	800290c <rt_sys_init>
 80023bc:	4b0f      	ldr	r3, [pc, #60]	; (80023fc <svcKernelInitialize+0x4c>)
 80023be:	7825      	ldrb	r5, [r4, #0]
 80023c0:	681b      	ldr	r3, [r3, #0]
 80023c2:	22ff      	movs	r2, #255	; 0xff
 80023c4:	709a      	strb	r2, [r3, #2]
 80023c6:	b98d      	cbnz	r5, 80023ec <svcKernelInitialize+0x3c>
 80023c8:	4629      	mov	r1, r5
 80023ca:	480d      	ldr	r0, [pc, #52]	; (8002400 <svcKernelInitialize+0x50>)
 80023cc:	f7ff ffde 	bl	800238c <svcMessageCreate>
 80023d0:	4b0c      	ldr	r3, [pc, #48]	; (8002404 <svcKernelInitialize+0x54>)
 80023d2:	462a      	mov	r2, r5
 80023d4:	6018      	str	r0, [r3, #0]
 80023d6:	4629      	mov	r1, r5
 80023d8:	480b      	ldr	r0, [pc, #44]	; (8002408 <svcKernelInitialize+0x58>)
 80023da:	f7ff fe65 	bl	80020a8 <svcThreadCreate>
 80023de:	4b0b      	ldr	r3, [pc, #44]	; (800240c <svcKernelInitialize+0x5c>)
 80023e0:	6018      	str	r0, [r3, #0]
 80023e2:	480b      	ldr	r0, [pc, #44]	; (8002410 <svcKernelInitialize+0x60>)
 80023e4:	f7ff ff36 	bl	8002254 <osMutexCreate>
 80023e8:	4b0a      	ldr	r3, [pc, #40]	; (8002414 <svcKernelInitialize+0x64>)
 80023ea:	6018      	str	r0, [r3, #0]
 80023ec:	2301      	movs	r3, #1
 80023ee:	7023      	strb	r3, [r4, #0]
 80023f0:	4b09      	ldr	r3, [pc, #36]	; (8002418 <svcKernelInitialize+0x68>)
 80023f2:	2000      	movs	r0, #0
 80023f4:	7018      	strb	r0, [r3, #0]
 80023f6:	bd38      	pop	{r3, r4, r5, pc}
 80023f8:	20002884 	.word	0x20002884
 80023fc:	2000288c 	.word	0x2000288c
 8002400:	08006fd4 	.word	0x08006fd4
 8002404:	20001f04 	.word	0x20001f04
 8002408:	08006ff0 	.word	0x08006ff0
 800240c:	20001efc 	.word	0x20001efc
 8002410:	08007008 	.word	0x08007008
 8002414:	20002880 	.word	0x20002880
 8002418:	20002885 	.word	0x20002885

0800241c <osKernelInitialize>:
 800241c:	b510      	push	{r4, lr}
 800241e:	f3ef 8410 	mrs	r4, PRIMASK
 8002422:	b974      	cbnz	r4, 8002442 <osKernelInitialize+0x26>
 8002424:	f3ef 8405 	mrs	r4, IPSR
 8002428:	b95c      	cbnz	r4, 8002442 <osKernelInitialize+0x26>
 800242a:	f3ef 8414 	mrs	r4, CONTROL
 800242e:	07e4      	lsls	r4, r4, #31
 8002430:	d403      	bmi.n	800243a <osKernelInitialize+0x1e>
 8002432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002436:	f7ff bfbb 	b.w	80023b0 <svcKernelInitialize>
 800243a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002448 <osKernelInitialize+0x2c>
 800243e:	df00      	svc	0
 8002440:	bd10      	pop	{r4, pc}
 8002442:	2082      	movs	r0, #130	; 0x82
 8002444:	bd10      	pop	{r4, pc}
 8002446:	0000      	.short	0x0000
 8002448:	080023b1 	.word	0x080023b1

0800244c <svcMessageGet>:
 800244c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002450:	460c      	mov	r4, r1
 8002452:	4680      	mov	r8, r0
 8002454:	b318      	cbz	r0, 800249e <svcMessageGet+0x52>
 8002456:	7803      	ldrb	r3, [r0, #0]
 8002458:	2b01      	cmp	r3, #1
 800245a:	d125      	bne.n	80024a8 <svcMessageGet+0x5c>
 800245c:	4608      	mov	r0, r1
 800245e:	f7ff fd73 	bl	8001f48 <rt_ms2tick>
 8002462:	a902      	add	r1, sp, #8
 8002464:	4602      	mov	r2, r0
 8002466:	4640      	mov	r0, r8
 8002468:	f7ff fbfe 	bl	8001c68 <rt_mbx_wait>
 800246c:	2801      	cmp	r0, #1
 800246e:	d111      	bne.n	8002494 <svcMessageGet+0x48>
 8002470:	2000      	movs	r0, #0
 8002472:	2c00      	cmp	r4, #0
 8002474:	4602      	mov	r2, r0
 8002476:	4603      	mov	r3, r0
 8002478:	bf18      	it	ne
 800247a:	2040      	movne	r0, #64	; 0x40
 800247c:	9902      	ldr	r1, [sp, #8]
 800247e:	4604      	mov	r4, r0
 8002480:	460d      	mov	r5, r1
 8002482:	4616      	mov	r6, r2
 8002484:	461f      	mov	r7, r3
 8002486:	4620      	mov	r0, r4
 8002488:	4629      	mov	r1, r5
 800248a:	4632      	mov	r2, r6
 800248c:	463b      	mov	r3, r7
 800248e:	b004      	add	sp, #16
 8002490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002494:	2000      	movs	r0, #0
 8002496:	4602      	mov	r2, r0
 8002498:	4603      	mov	r3, r0
 800249a:	2010      	movs	r0, #16
 800249c:	e7ee      	b.n	800247c <svcMessageGet+0x30>
 800249e:	2480      	movs	r4, #128	; 0x80
 80024a0:	4605      	mov	r5, r0
 80024a2:	4606      	mov	r6, r0
 80024a4:	4607      	mov	r7, r0
 80024a6:	e7ee      	b.n	8002486 <svcMessageGet+0x3a>
 80024a8:	2500      	movs	r5, #0
 80024aa:	2480      	movs	r4, #128	; 0x80
 80024ac:	462e      	mov	r6, r5
 80024ae:	462f      	mov	r7, r5
 80024b0:	e7e9      	b.n	8002486 <svcMessageGet+0x3a>

080024b2 <isrMessagePut>:
 80024b2:	b570      	push	{r4, r5, r6, lr}
 80024b4:	460e      	mov	r6, r1
 80024b6:	4614      	mov	r4, r2
 80024b8:	4605      	mov	r5, r0
 80024ba:	b160      	cbz	r0, 80024d6 <isrMessagePut+0x24>
 80024bc:	b95a      	cbnz	r2, 80024d6 <isrMessagePut+0x24>
 80024be:	7803      	ldrb	r3, [r0, #0]
 80024c0:	2b01      	cmp	r3, #1
 80024c2:	d108      	bne.n	80024d6 <isrMessagePut+0x24>
 80024c4:	f7ff fc26 	bl	8001d14 <rt_mbx_check>
 80024c8:	b138      	cbz	r0, 80024da <isrMessagePut+0x28>
 80024ca:	4628      	mov	r0, r5
 80024cc:	4631      	mov	r1, r6
 80024ce:	f7ff fc25 	bl	8001d1c <isr_mbx_send>
 80024d2:	4620      	mov	r0, r4
 80024d4:	bd70      	pop	{r4, r5, r6, pc}
 80024d6:	2080      	movs	r0, #128	; 0x80
 80024d8:	bd70      	pop	{r4, r5, r6, pc}
 80024da:	2081      	movs	r0, #129	; 0x81
 80024dc:	bd70      	pop	{r4, r5, r6, pc}
	...

080024e0 <sysTimerTick>:
 80024e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024e2:	4e11      	ldr	r6, [pc, #68]	; (8002528 <sysTimerTick+0x48>)
 80024e4:	6834      	ldr	r4, [r6, #0]
 80024e6:	b12c      	cbz	r4, 80024f4 <sysTimerTick+0x14>
 80024e8:	68a3      	ldr	r3, [r4, #8]
 80024ea:	4f10      	ldr	r7, [pc, #64]	; (800252c <sysTimerTick+0x4c>)
 80024ec:	3b01      	subs	r3, #1
 80024ee:	60a3      	str	r3, [r4, #8]
 80024f0:	68a2      	ldr	r2, [r4, #8]
 80024f2:	b102      	cbz	r2, 80024f6 <sysTimerTick+0x16>
 80024f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024f6:	6825      	ldr	r5, [r4, #0]
 80024f8:	6838      	ldr	r0, [r7, #0]
 80024fa:	6035      	str	r5, [r6, #0]
 80024fc:	4621      	mov	r1, r4
 80024fe:	f7ff ffd8 	bl	80024b2 <isrMessagePut>
 8002502:	b110      	cbz	r0, 800250a <sysTimerTick+0x2a>
 8002504:	2004      	movs	r0, #4
 8002506:	f7ff f91d 	bl	8001744 <os_error>
 800250a:	7963      	ldrb	r3, [r4, #5]
 800250c:	2b01      	cmp	r3, #1
 800250e:	d107      	bne.n	8002520 <sysTimerTick+0x40>
 8002510:	68e1      	ldr	r1, [r4, #12]
 8002512:	4620      	mov	r0, r4
 8002514:	f7ff fcfe 	bl	8001f14 <rt_timer_insert>
 8002518:	2d00      	cmp	r5, #0
 800251a:	d0eb      	beq.n	80024f4 <sysTimerTick+0x14>
 800251c:	462c      	mov	r4, r5
 800251e:	e7e7      	b.n	80024f0 <sysTimerTick+0x10>
 8002520:	2301      	movs	r3, #1
 8002522:	7123      	strb	r3, [r4, #4]
 8002524:	e7f8      	b.n	8002518 <sysTimerTick+0x38>
 8002526:	bf00      	nop
 8002528:	20002888 	.word	0x20002888
 800252c:	20001f04 	.word	0x20001f04

08002530 <isrMessageGet>:
 8002530:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002532:	4604      	mov	r4, r0
 8002534:	4616      	mov	r6, r2
 8002536:	4608      	mov	r0, r1
 8002538:	b101      	cbz	r1, 800253c <isrMessageGet+0xc>
 800253a:	b122      	cbz	r2, 8002546 <isrMessageGet+0x16>
 800253c:	2380      	movs	r3, #128	; 0x80
 800253e:	6023      	str	r3, [r4, #0]
 8002540:	4620      	mov	r0, r4
 8002542:	b004      	add	sp, #16
 8002544:	bd70      	pop	{r4, r5, r6, pc}
 8002546:	780b      	ldrb	r3, [r1, #0]
 8002548:	2b01      	cmp	r3, #1
 800254a:	d1f7      	bne.n	800253c <isrMessageGet+0xc>
 800254c:	a902      	add	r1, sp, #8
 800254e:	f7ff fbec 	bl	8001d2a <isr_mbx_receive>
 8002552:	2804      	cmp	r0, #4
 8002554:	bf08      	it	eq
 8002556:	2310      	moveq	r3, #16
 8002558:	ad01      	add	r5, sp, #4
 800255a:	bf14      	ite	ne
 800255c:	9601      	strne	r6, [sp, #4]
 800255e:	9301      	streq	r3, [sp, #4]
 8002560:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002564:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002568:	e7ea      	b.n	8002540 <isrMessageGet+0x10>
	...

0800256c <osMessageGet>:
 800256c:	b538      	push	{r3, r4, r5, lr}
 800256e:	4604      	mov	r4, r0
 8002570:	4615      	mov	r5, r2
 8002572:	f3ef 8010 	mrs	r0, PRIMASK
 8002576:	b910      	cbnz	r0, 800257e <osMessageGet+0x12>
 8002578:	f3ef 8005 	mrs	r0, IPSR
 800257c:	b128      	cbz	r0, 800258a <osMessageGet+0x1e>
 800257e:	462a      	mov	r2, r5
 8002580:	4620      	mov	r0, r4
 8002582:	f7ff ffd5 	bl	8002530 <isrMessageGet>
 8002586:	4620      	mov	r0, r4
 8002588:	bd38      	pop	{r3, r4, r5, pc}
 800258a:	4608      	mov	r0, r1
 800258c:	4611      	mov	r1, r2
 800258e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800259c <osMessageGet+0x30>
 8002592:	df00      	svc	0
 8002594:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002598:	e7f5      	b.n	8002586 <osMessageGet+0x1a>
 800259a:	0000      	.short	0x0000
 800259c:	0800244d 	.word	0x0800244d

080025a0 <osTimerThread>:
 80025a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80025a2:	4c0a      	ldr	r4, [pc, #40]	; (80025cc <osTimerThread+0x2c>)
 80025a4:	6821      	ldr	r1, [r4, #0]
 80025a6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80025aa:	a803      	add	r0, sp, #12
 80025ac:	f7ff ffde 	bl	800256c <osMessageGet>
 80025b0:	9b03      	ldr	r3, [sp, #12]
 80025b2:	2b10      	cmp	r3, #16
 80025b4:	d1f6      	bne.n	80025a4 <osTimerThread+0x4>
 80025b6:	9904      	ldr	r1, [sp, #16]
 80025b8:	a801      	add	r0, sp, #4
 80025ba:	f7ff fdf7 	bl	80021ac <osTimerCall>
 80025be:	9b01      	ldr	r3, [sp, #4]
 80025c0:	2b00      	cmp	r3, #0
 80025c2:	d0ef      	beq.n	80025a4 <osTimerThread+0x4>
 80025c4:	9802      	ldr	r0, [sp, #8]
 80025c6:	4798      	blx	r3
 80025c8:	e7ec      	b.n	80025a4 <osTimerThread+0x4>
 80025ca:	bf00      	nop
 80025cc:	20001f04 	.word	0x20001f04

080025d0 <rt_switch_req>:
 80025d0:	4b05      	ldr	r3, [pc, #20]	; (80025e8 <rt_switch_req+0x18>)
 80025d2:	6058      	str	r0, [r3, #4]
 80025d4:	2302      	movs	r3, #2
 80025d6:	7043      	strb	r3, [r0, #1]
 80025d8:	4b04      	ldr	r3, [pc, #16]	; (80025ec <rt_switch_req+0x1c>)
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	b11b      	cbz	r3, 80025e6 <rt_switch_req+0x16>
 80025de:	691b      	ldr	r3, [r3, #16]
 80025e0:	b10b      	cbz	r3, 80025e6 <rt_switch_req+0x16>
 80025e2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80025e4:	4718      	bx	r3
 80025e6:	4770      	bx	lr
 80025e8:	2000288c 	.word	0x2000288c
 80025ec:	20002874 	.word	0x20002874

080025f0 <rt_dispatch.part.0>:
 80025f0:	b508      	push	{r3, lr}
 80025f2:	4803      	ldr	r0, [pc, #12]	; (8002600 <rt_dispatch.part.0+0x10>)
 80025f4:	f7ff f90c 	bl	8001810 <rt_get_first>
 80025f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80025fc:	f7ff bfe8 	b.w	80025d0 <rt_switch_req>
 8002600:	20002840 	.word	0x20002840

08002604 <rt_dispatch>:
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	4604      	mov	r4, r0
 8002608:	b918      	cbnz	r0, 8002612 <rt_dispatch+0xe>
 800260a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800260e:	f7ff bfef 	b.w	80025f0 <rt_dispatch.part.0>
 8002612:	4e0c      	ldr	r6, [pc, #48]	; (8002644 <rt_dispatch+0x40>)
 8002614:	78a2      	ldrb	r2, [r4, #2]
 8002616:	6830      	ldr	r0, [r6, #0]
 8002618:	7883      	ldrb	r3, [r0, #2]
 800261a:	429a      	cmp	r2, r3
 800261c:	f04f 0501 	mov.w	r5, #1
 8002620:	d908      	bls.n	8002634 <rt_dispatch+0x30>
 8002622:	f7ff f907 	bl	8001834 <rt_put_rdy_first>
 8002626:	6833      	ldr	r3, [r6, #0]
 8002628:	705d      	strb	r5, [r3, #1]
 800262a:	4620      	mov	r0, r4
 800262c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002630:	f7ff bfce 	b.w	80025d0 <rt_switch_req>
 8002634:	7065      	strb	r5, [r4, #1]
 8002636:	4621      	mov	r1, r4
 8002638:	4803      	ldr	r0, [pc, #12]	; (8002648 <rt_dispatch+0x44>)
 800263a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800263e:	f7ff b8cf 	b.w	80017e0 <rt_put_prio>
 8002642:	bf00      	nop
 8002644:	2000288c 	.word	0x2000288c
 8002648:	20002840 	.word	0x20002840

0800264c <rt_block>:
 800264c:	b538      	push	{r3, r4, r5, lr}
 800264e:	460d      	mov	r5, r1
 8002650:	4601      	mov	r1, r0
 8002652:	b180      	cbz	r0, 8002676 <rt_block+0x2a>
 8002654:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002658:	4298      	cmp	r0, r3
 800265a:	4c07      	ldr	r4, [pc, #28]	; (8002678 <rt_block+0x2c>)
 800265c:	d002      	beq.n	8002664 <rt_block+0x18>
 800265e:	6820      	ldr	r0, [r4, #0]
 8002660:	f7ff f8f2 	bl	8001848 <rt_put_dly>
 8002664:	6823      	ldr	r3, [r4, #0]
 8002666:	4805      	ldr	r0, [pc, #20]	; (800267c <rt_block+0x30>)
 8002668:	705d      	strb	r5, [r3, #1]
 800266a:	f7ff f8d1 	bl	8001810 <rt_get_first>
 800266e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002672:	f7ff bfad 	b.w	80025d0 <rt_switch_req>
 8002676:	bd38      	pop	{r3, r4, r5, pc}
 8002678:	2000288c 	.word	0x2000288c
 800267c:	20002840 	.word	0x20002840

08002680 <rt_tsk_self>:
 8002680:	4b02      	ldr	r3, [pc, #8]	; (800268c <rt_tsk_self+0xc>)
 8002682:	6818      	ldr	r0, [r3, #0]
 8002684:	b100      	cbz	r0, 8002688 <rt_tsk_self+0x8>
 8002686:	78c0      	ldrb	r0, [r0, #3]
 8002688:	4770      	bx	lr
 800268a:	bf00      	nop
 800268c:	2000288c 	.word	0x2000288c

08002690 <rt_tsk_prio>:
 8002690:	b510      	push	{r4, lr}
 8002692:	b9a8      	cbnz	r0, 80026c0 <rt_tsk_prio+0x30>
 8002694:	4b19      	ldr	r3, [pc, #100]	; (80026fc <rt_tsk_prio+0x6c>)
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	7099      	strb	r1, [r3, #2]
 800269a:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800269e:	4818      	ldr	r0, [pc, #96]	; (8002700 <rt_tsk_prio+0x70>)
 80026a0:	6843      	ldr	r3, [r0, #4]
 80026a2:	789b      	ldrb	r3, [r3, #2]
 80026a4:	428b      	cmp	r3, r1
 80026a6:	d801      	bhi.n	80026ac <rt_tsk_prio+0x1c>
 80026a8:	2000      	movs	r0, #0
 80026aa:	bd10      	pop	{r4, pc}
 80026ac:	4c13      	ldr	r4, [pc, #76]	; (80026fc <rt_tsk_prio+0x6c>)
 80026ae:	6821      	ldr	r1, [r4, #0]
 80026b0:	f7ff f896 	bl	80017e0 <rt_put_prio>
 80026b4:	6823      	ldr	r3, [r4, #0]
 80026b6:	2201      	movs	r2, #1
 80026b8:	705a      	strb	r2, [r3, #1]
 80026ba:	f7ff ff99 	bl	80025f0 <rt_dispatch.part.0>
 80026be:	e7f3      	b.n	80026a8 <rt_tsk_prio+0x18>
 80026c0:	4b10      	ldr	r3, [pc, #64]	; (8002704 <rt_tsk_prio+0x74>)
 80026c2:	881b      	ldrh	r3, [r3, #0]
 80026c4:	4298      	cmp	r0, r3
 80026c6:	d817      	bhi.n	80026f8 <rt_tsk_prio+0x68>
 80026c8:	3801      	subs	r0, #1
 80026ca:	4b0f      	ldr	r3, [pc, #60]	; (8002708 <rt_tsk_prio+0x78>)
 80026cc:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80026d0:	b194      	cbz	r4, 80026f8 <rt_tsk_prio+0x68>
 80026d2:	4b0a      	ldr	r3, [pc, #40]	; (80026fc <rt_tsk_prio+0x6c>)
 80026d4:	70a1      	strb	r1, [r4, #2]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80026dc:	429c      	cmp	r4, r3
 80026de:	d0de      	beq.n	800269e <rt_tsk_prio+0xe>
 80026e0:	4620      	mov	r0, r4
 80026e2:	f7ff f923 	bl	800192c <rt_resort_prio>
 80026e6:	7863      	ldrb	r3, [r4, #1]
 80026e8:	2b01      	cmp	r3, #1
 80026ea:	d1dd      	bne.n	80026a8 <rt_tsk_prio+0x18>
 80026ec:	4804      	ldr	r0, [pc, #16]	; (8002700 <rt_tsk_prio+0x70>)
 80026ee:	f7ff f88f 	bl	8001810 <rt_get_first>
 80026f2:	f7ff ff87 	bl	8002604 <rt_dispatch>
 80026f6:	e7d7      	b.n	80026a8 <rt_tsk_prio+0x18>
 80026f8:	20ff      	movs	r0, #255	; 0xff
 80026fa:	bd10      	pop	{r4, pc}
 80026fc:	2000288c 	.word	0x2000288c
 8002700:	20002840 	.word	0x20002840
 8002704:	08006fd0 	.word	0x08006fd0
 8002708:	20002228 	.word	0x20002228

0800270c <rt_tsk_create>:
 800270c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002710:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002714:	460d      	mov	r5, r1
 8002716:	4680      	mov	r8, r0
 8002718:	4823      	ldr	r0, [pc, #140]	; (80027a8 <rt_tsk_create+0x9c>)
 800271a:	4616      	mov	r6, r2
 800271c:	469a      	mov	r10, r3
 800271e:	bf08      	it	eq
 8002720:	3501      	addeq	r5, #1
 8002722:	f7ff fa72 	bl	8001c0a <rt_alloc_box>
 8002726:	4604      	mov	r4, r0
 8002728:	b920      	cbnz	r0, 8002734 <rt_tsk_create+0x28>
 800272a:	f04f 0900 	mov.w	r9, #0
 800272e:	4648      	mov	r0, r9
 8002730:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002734:	4b1d      	ldr	r3, [pc, #116]	; (80027ac <rt_tsk_create+0xa0>)
 8002736:	6306      	str	r6, [r0, #48]	; 0x30
 8002738:	881b      	ldrh	r3, [r3, #0]
 800273a:	4e1d      	ldr	r6, [pc, #116]	; (80027b0 <rt_tsk_create+0xa4>)
 800273c:	0a28      	lsrs	r0, r5, #8
 800273e:	62a0      	str	r0, [r4, #40]	; 0x28
 8002740:	2100      	movs	r1, #0
 8002742:	428b      	cmp	r3, r1
 8002744:	f101 0901 	add.w	r9, r1, #1
 8002748:	d0ef      	beq.n	800272a <rt_tsk_create+0x1e>
 800274a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800274e:	460f      	mov	r7, r1
 8002750:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002754:	4649      	mov	r1, r9
 8002756:	2a00      	cmp	r2, #0
 8002758:	d1f3      	bne.n	8002742 <rt_tsk_create+0x36>
 800275a:	b2ed      	uxtb	r5, r5
 800275c:	2301      	movs	r3, #1
 800275e:	f884 9003 	strb.w	r9, [r4, #3]
 8002762:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002766:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800276a:	7022      	strb	r2, [r4, #0]
 800276c:	7063      	strb	r3, [r4, #1]
 800276e:	70a5      	strb	r5, [r4, #2]
 8002770:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002774:	6062      	str	r2, [r4, #4]
 8002776:	60a2      	str	r2, [r4, #8]
 8002778:	60e2      	str	r2, [r4, #12]
 800277a:	6122      	str	r2, [r4, #16]
 800277c:	6222      	str	r2, [r4, #32]
 800277e:	82a2      	strh	r2, [r4, #20]
 8002780:	82e2      	strh	r2, [r4, #22]
 8002782:	8322      	strh	r2, [r4, #24]
 8002784:	8362      	strh	r2, [r4, #26]
 8002786:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800278a:	b918      	cbnz	r0, 8002794 <rt_tsk_create+0x88>
 800278c:	4809      	ldr	r0, [pc, #36]	; (80027b4 <rt_tsk_create+0xa8>)
 800278e:	f7ff fa3c 	bl	8001c0a <rt_alloc_box>
 8002792:	6320      	str	r0, [r4, #48]	; 0x30
 8002794:	4620      	mov	r0, r4
 8002796:	4641      	mov	r1, r8
 8002798:	f7ff f9b2 	bl	8001b00 <rt_init_stack>
 800279c:	4620      	mov	r0, r4
 800279e:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 80027a2:	f7ff ff2f 	bl	8002604 <rt_dispatch>
 80027a6:	e7c2      	b.n	800272e <rt_tsk_create+0x22>
 80027a8:	20002264 	.word	0x20002264
 80027ac:	08006fd0 	.word	0x08006fd0
 80027b0:	20002228 	.word	0x20002228
 80027b4:	20002630 	.word	0x20002630

080027b8 <rt_tsk_delete>:
 80027b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80027bc:	4d4d      	ldr	r5, [pc, #308]	; (80028f4 <rt_tsk_delete+0x13c>)
 80027be:	b118      	cbz	r0, 80027c8 <rt_tsk_delete+0x10>
 80027c0:	682b      	ldr	r3, [r5, #0]
 80027c2:	78db      	ldrb	r3, [r3, #3]
 80027c4:	4298      	cmp	r0, r3
 80027c6:	d141      	bne.n	800284c <rt_tsk_delete+0x94>
 80027c8:	682c      	ldr	r4, [r5, #0]
 80027ca:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002908 <rt_tsk_delete+0x150>
 80027ce:	2300      	movs	r3, #0
 80027d0:	7063      	strb	r3, [r4, #1]
 80027d2:	f003 fa2c 	bl	8005c2e <rt_get_PSP>
 80027d6:	62e0      	str	r0, [r4, #44]	; 0x2c
 80027d8:	f7ff f980 	bl	8001adc <rt_stk_check>
 80027dc:	682b      	ldr	r3, [r5, #0]
 80027de:	6a1c      	ldr	r4, [r3, #32]
 80027e0:	2701      	movs	r7, #1
 80027e2:	b9a4      	cbnz	r4, 800280e <rt_tsk_delete+0x56>
 80027e4:	682a      	ldr	r2, [r5, #0]
 80027e6:	4944      	ldr	r1, [pc, #272]	; (80028f8 <rt_tsk_delete+0x140>)
 80027e8:	78d3      	ldrb	r3, [r2, #3]
 80027ea:	4844      	ldr	r0, [pc, #272]	; (80028fc <rt_tsk_delete+0x144>)
 80027ec:	3b01      	subs	r3, #1
 80027ee:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80027f2:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80027f4:	f7ff fa16 	bl	8001c24 <rt_free_box>
 80027f8:	6829      	ldr	r1, [r5, #0]
 80027fa:	4841      	ldr	r0, [pc, #260]	; (8002900 <rt_tsk_delete+0x148>)
 80027fc:	630c      	str	r4, [r1, #48]	; 0x30
 80027fe:	f7ff fa11 	bl	8001c24 <rt_free_box>
 8002802:	602c      	str	r4, [r5, #0]
 8002804:	f7ff fef4 	bl	80025f0 <rt_dispatch.part.0>
 8002808:	4620      	mov	r0, r4
 800280a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800280e:	6863      	ldr	r3, [r4, #4]
 8002810:	b1b3      	cbz	r3, 8002840 <rt_tsk_delete+0x88>
 8002812:	4620      	mov	r0, r4
 8002814:	f7fe fffc 	bl	8001810 <rt_get_first>
 8002818:	2100      	movs	r1, #0
 800281a:	4606      	mov	r6, r0
 800281c:	f7ff f9bc 	bl	8001b98 <rt_ret_val>
 8002820:	4630      	mov	r0, r6
 8002822:	f7ff f89b 	bl	800195c <rt_rmv_dly>
 8002826:	7077      	strb	r7, [r6, #1]
 8002828:	4631      	mov	r1, r6
 800282a:	4640      	mov	r0, r8
 800282c:	f7fe ffd8 	bl	80017e0 <rt_put_prio>
 8002830:	68e3      	ldr	r3, [r4, #12]
 8002832:	6a32      	ldr	r2, [r6, #32]
 8002834:	8067      	strh	r7, [r4, #2]
 8002836:	60a6      	str	r6, [r4, #8]
 8002838:	60e2      	str	r2, [r4, #12]
 800283a:	6234      	str	r4, [r6, #32]
 800283c:	461c      	mov	r4, r3
 800283e:	e7d0      	b.n	80027e2 <rt_tsk_delete+0x2a>
 8002840:	68e2      	ldr	r2, [r4, #12]
 8002842:	8063      	strh	r3, [r4, #2]
 8002844:	60a3      	str	r3, [r4, #8]
 8002846:	60e3      	str	r3, [r4, #12]
 8002848:	4614      	mov	r4, r2
 800284a:	e7ca      	b.n	80027e2 <rt_tsk_delete+0x2a>
 800284c:	4b2d      	ldr	r3, [pc, #180]	; (8002904 <rt_tsk_delete+0x14c>)
 800284e:	881b      	ldrh	r3, [r3, #0]
 8002850:	4298      	cmp	r0, r3
 8002852:	d84d      	bhi.n	80028f0 <rt_tsk_delete+0x138>
 8002854:	4b28      	ldr	r3, [pc, #160]	; (80028f8 <rt_tsk_delete+0x140>)
 8002856:	1e47      	subs	r7, r0, #1
 8002858:	4699      	mov	r9, r3
 800285a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800285e:	2e00      	cmp	r6, #0
 8002860:	d046      	beq.n	80028f0 <rt_tsk_delete+0x138>
 8002862:	4630      	mov	r0, r6
 8002864:	f7ff f84c 	bl	8001900 <rt_rmv_list>
 8002868:	4630      	mov	r0, r6
 800286a:	f7ff f877 	bl	800195c <rt_rmv_dly>
 800286e:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002908 <rt_tsk_delete+0x150>
 8002872:	6a34      	ldr	r4, [r6, #32]
 8002874:	f04f 0a01 	mov.w	r10, #1
 8002878:	b9b4      	cbnz	r4, 80028a8 <rt_tsk_delete+0xf0>
 800287a:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800287c:	481f      	ldr	r0, [pc, #124]	; (80028fc <rt_tsk_delete+0x144>)
 800287e:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002882:	f7ff f9cf 	bl	8001c24 <rt_free_box>
 8002886:	4631      	mov	r1, r6
 8002888:	6334      	str	r4, [r6, #48]	; 0x30
 800288a:	481d      	ldr	r0, [pc, #116]	; (8002900 <rt_tsk_delete+0x148>)
 800288c:	f7ff f9ca 	bl	8001c24 <rt_free_box>
 8002890:	481d      	ldr	r0, [pc, #116]	; (8002908 <rt_tsk_delete+0x150>)
 8002892:	6829      	ldr	r1, [r5, #0]
 8002894:	6843      	ldr	r3, [r0, #4]
 8002896:	789a      	ldrb	r2, [r3, #2]
 8002898:	788b      	ldrb	r3, [r1, #2]
 800289a:	429a      	cmp	r2, r3
 800289c:	d9b4      	bls.n	8002808 <rt_tsk_delete+0x50>
 800289e:	2301      	movs	r3, #1
 80028a0:	704b      	strb	r3, [r1, #1]
 80028a2:	f7fe ff9d 	bl	80017e0 <rt_put_prio>
 80028a6:	e7ad      	b.n	8002804 <rt_tsk_delete+0x4c>
 80028a8:	6863      	ldr	r3, [r4, #4]
 80028aa:	b1db      	cbz	r3, 80028e4 <rt_tsk_delete+0x12c>
 80028ac:	4620      	mov	r0, r4
 80028ae:	f7fe ffaf 	bl	8001810 <rt_get_first>
 80028b2:	2100      	movs	r1, #0
 80028b4:	4680      	mov	r8, r0
 80028b6:	f7ff f96f 	bl	8001b98 <rt_ret_val>
 80028ba:	4640      	mov	r0, r8
 80028bc:	f7ff f84e 	bl	800195c <rt_rmv_dly>
 80028c0:	f888 a001 	strb.w	r10, [r8, #1]
 80028c4:	4641      	mov	r1, r8
 80028c6:	4658      	mov	r0, r11
 80028c8:	f7fe ff8a 	bl	80017e0 <rt_put_prio>
 80028cc:	68e3      	ldr	r3, [r4, #12]
 80028ce:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80028d2:	f8a4 a002 	strh.w	r10, [r4, #2]
 80028d6:	f8c4 8008 	str.w	r8, [r4, #8]
 80028da:	60e2      	str	r2, [r4, #12]
 80028dc:	f8c8 4020 	str.w	r4, [r8, #32]
 80028e0:	461c      	mov	r4, r3
 80028e2:	e7c9      	b.n	8002878 <rt_tsk_delete+0xc0>
 80028e4:	68e2      	ldr	r2, [r4, #12]
 80028e6:	8063      	strh	r3, [r4, #2]
 80028e8:	60a3      	str	r3, [r4, #8]
 80028ea:	60e3      	str	r3, [r4, #12]
 80028ec:	4614      	mov	r4, r2
 80028ee:	e7c3      	b.n	8002878 <rt_tsk_delete+0xc0>
 80028f0:	24ff      	movs	r4, #255	; 0xff
 80028f2:	e789      	b.n	8002808 <rt_tsk_delete+0x50>
 80028f4:	2000288c 	.word	0x2000288c
 80028f8:	20002228 	.word	0x20002228
 80028fc:	20002630 	.word	0x20002630
 8002900:	20002264 	.word	0x20002264
 8002904:	08006fd0 	.word	0x08006fd0
 8002908:	20002840 	.word	0x20002840

0800290c <rt_sys_init>:
 800290c:	b538      	push	{r3, r4, r5, lr}
 800290e:	4b2c      	ldr	r3, [pc, #176]	; (80029c0 <rt_sys_init+0xb4>)
 8002910:	492c      	ldr	r1, [pc, #176]	; (80029c4 <rt_sys_init+0xb8>)
 8002912:	881a      	ldrh	r2, [r3, #0]
 8002914:	2300      	movs	r3, #0
 8002916:	4618      	mov	r0, r3
 8002918:	4293      	cmp	r3, r2
 800291a:	d34d      	bcc.n	80029b8 <rt_sys_init+0xac>
 800291c:	4b2a      	ldr	r3, [pc, #168]	; (80029c8 <rt_sys_init+0xbc>)
 800291e:	482b      	ldr	r0, [pc, #172]	; (80029cc <rt_sys_init+0xc0>)
 8002920:	8819      	ldrh	r1, [r3, #0]
 8002922:	4c2b      	ldr	r4, [pc, #172]	; (80029d0 <rt_sys_init+0xc4>)
 8002924:	2240      	movs	r2, #64	; 0x40
 8002926:	f7ff f94b 	bl	8001bc0 <_init_box>
 800292a:	4b2a      	ldr	r3, [pc, #168]	; (80029d4 <rt_sys_init+0xc8>)
 800292c:	482a      	ldr	r0, [pc, #168]	; (80029d8 <rt_sys_init+0xcc>)
 800292e:	881a      	ldrh	r2, [r3, #0]
 8002930:	4b2a      	ldr	r3, [pc, #168]	; (80029dc <rt_sys_init+0xd0>)
 8002932:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002936:	6819      	ldr	r1, [r3, #0]
 8002938:	f7ff f942 	bl	8001bc0 <_init_box>
 800293c:	4b28      	ldr	r3, [pc, #160]	; (80029e0 <rt_sys_init+0xd4>)
 800293e:	8819      	ldrh	r1, [r3, #0]
 8002940:	4b28      	ldr	r3, [pc, #160]	; (80029e4 <rt_sys_init+0xd8>)
 8002942:	2208      	movs	r2, #8
 8002944:	6818      	ldr	r0, [r3, #0]
 8002946:	f7ff f93b 	bl	8001bc0 <_init_box>
 800294a:	23ff      	movs	r3, #255	; 0xff
 800294c:	2500      	movs	r5, #0
 800294e:	70e3      	strb	r3, [r4, #3]
 8002950:	4821      	ldr	r0, [pc, #132]	; (80029d8 <rt_sys_init+0xcc>)
 8002952:	62a5      	str	r5, [r4, #40]	; 0x28
 8002954:	2301      	movs	r3, #1
 8002956:	7063      	strb	r3, [r4, #1]
 8002958:	7025      	strb	r5, [r4, #0]
 800295a:	70a5      	strb	r5, [r4, #2]
 800295c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002960:	6065      	str	r5, [r4, #4]
 8002962:	60a5      	str	r5, [r4, #8]
 8002964:	60e5      	str	r5, [r4, #12]
 8002966:	6125      	str	r5, [r4, #16]
 8002968:	6225      	str	r5, [r4, #32]
 800296a:	82a5      	strh	r5, [r4, #20]
 800296c:	82e5      	strh	r5, [r4, #22]
 800296e:	8325      	strh	r5, [r4, #24]
 8002970:	8365      	strh	r5, [r4, #26]
 8002972:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002976:	f7ff f948 	bl	8001c0a <rt_alloc_box>
 800297a:	491b      	ldr	r1, [pc, #108]	; (80029e8 <rt_sys_init+0xdc>)
 800297c:	6320      	str	r0, [r4, #48]	; 0x30
 800297e:	4620      	mov	r0, r4
 8002980:	f7ff f8be 	bl	8001b00 <rt_init_stack>
 8002984:	4b19      	ldr	r3, [pc, #100]	; (80029ec <rt_sys_init+0xe0>)
 8002986:	2204      	movs	r2, #4
 8002988:	701a      	strb	r2, [r3, #0]
 800298a:	605d      	str	r5, [r3, #4]
 800298c:	4b18      	ldr	r3, [pc, #96]	; (80029f0 <rt_sys_init+0xe4>)
 800298e:	701a      	strb	r2, [r3, #0]
 8002990:	60dd      	str	r5, [r3, #12]
 8002992:	611d      	str	r5, [r3, #16]
 8002994:	829d      	strh	r5, [r3, #20]
 8002996:	4b17      	ldr	r3, [pc, #92]	; (80029f4 <rt_sys_init+0xe8>)
 8002998:	4620      	mov	r0, r4
 800299a:	601c      	str	r4, [r3, #0]
 800299c:	2302      	movs	r3, #2
 800299e:	7063      	strb	r3, [r4, #1]
 80029a0:	f7ff fe16 	bl	80025d0 <rt_switch_req>
 80029a4:	4a14      	ldr	r2, [pc, #80]	; (80029f8 <rt_sys_init+0xec>)
 80029a6:	4b15      	ldr	r3, [pc, #84]	; (80029fc <rt_sys_init+0xf0>)
 80029a8:	7812      	ldrb	r2, [r2, #0]
 80029aa:	701d      	strb	r5, [r3, #0]
 80029ac:	705d      	strb	r5, [r3, #1]
 80029ae:	70da      	strb	r2, [r3, #3]
 80029b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80029b4:	f7ff ba7e 	b.w	8001eb4 <rt_init_robin>
 80029b8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80029bc:	3301      	adds	r3, #1
 80029be:	e7ab      	b.n	8002918 <rt_sys_init+0xc>
 80029c0:	08006fd0 	.word	0x08006fd0
 80029c4:	20002228 	.word	0x20002228
 80029c8:	08006f9c 	.word	0x08006f9c
 80029cc:	20002264 	.word	0x20002264
 80029d0:	20002894 	.word	0x20002894
 80029d4:	08006fec 	.word	0x08006fec
 80029d8:	20002630 	.word	0x20002630
 80029dc:	08006f98 	.word	0x08006f98
 80029e0:	08006f9e 	.word	0x08006f9e
 80029e4:	20000a10 	.word	0x20000a10
 80029e8:	08001741 	.word	0x08001741
 80029ec:	20002840 	.word	0x20002840
 80029f0:	20002858 	.word	0x20002858
 80029f4:	2000288c 	.word	0x2000288c
 80029f8:	08006fcd 	.word	0x08006fcd
 80029fc:	20001e78 	.word	0x20001e78

08002a00 <rt_sys_start>:
 8002a00:	b508      	push	{r3, lr}
 8002a02:	4b1e      	ldr	r3, [pc, #120]	; (8002a7c <rt_sys_start+0x7c>)
 8002a04:	681a      	ldr	r2, [r3, #0]
 8002a06:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002a0a:	601a      	str	r2, [r3, #0]
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	021b      	lsls	r3, r3, #8
 8002a10:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002a14:	43db      	mvns	r3, r3
 8002a16:	fab3 f383 	clz	r3, r3
 8002a1a:	4a19      	ldr	r2, [pc, #100]	; (8002a80 <rt_sys_start+0x80>)
 8002a1c:	4819      	ldr	r0, [pc, #100]	; (8002a84 <rt_sys_start+0x84>)
 8002a1e:	6812      	ldr	r2, [r2, #0]
 8002a20:	6801      	ldr	r1, [r0, #0]
 8002a22:	b2db      	uxtb	r3, r3
 8002a24:	f1c3 0308 	rsb	r3, r3, #8
 8002a28:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002a2c:	4293      	cmp	r3, r2
 8002a2e:	bf98      	it	ls
 8002a30:	1c53      	addls	r3, r2, #1
 8002a32:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002a36:	fa02 f303 	lsl.w	r3, r2, r3
 8002a3a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002a3e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002a42:	4313      	orrs	r3, r2
 8002a44:	6003      	str	r3, [r0, #0]
 8002a46:	f7ff f811 	bl	8001a6c <os_tick_init>
 8002a4a:	4b0f      	ldr	r3, [pc, #60]	; (8002a88 <rt_sys_start+0x88>)
 8002a4c:	2800      	cmp	r0, #0
 8002a4e:	6018      	str	r0, [r3, #0]
 8002a50:	db12      	blt.n	8002a78 <rt_sys_start+0x78>
 8002a52:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002a56:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002a5a:	22ff      	movs	r2, #255	; 0xff
 8002a5c:	7002      	strb	r2, [r0, #0]
 8002a5e:	681a      	ldr	r2, [r3, #0]
 8002a60:	0953      	lsrs	r3, r2, #5
 8002a62:	009b      	lsls	r3, r3, #2
 8002a64:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002a68:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002a6c:	f002 021f 	and.w	r2, r2, #31
 8002a70:	2101      	movs	r1, #1
 8002a72:	fa01 f202 	lsl.w	r2, r1, r2
 8002a76:	601a      	str	r2, [r3, #0]
 8002a78:	bd08      	pop	{r3, pc}
 8002a7a:	bf00      	nop
 8002a7c:	e000ed20 	.word	0xe000ed20
 8002a80:	e000ed0c 	.word	0xe000ed0c
 8002a84:	e000ed1c 	.word	0xe000ed1c
 8002a88:	20002870 	.word	0x20002870

08002a8c <rt_mut_init>:
 8002a8c:	2303      	movs	r3, #3
 8002a8e:	7003      	strb	r3, [r0, #0]
 8002a90:	2300      	movs	r3, #0
 8002a92:	8043      	strh	r3, [r0, #2]
 8002a94:	6043      	str	r3, [r0, #4]
 8002a96:	6083      	str	r3, [r0, #8]
 8002a98:	60c3      	str	r3, [r0, #12]
 8002a9a:	4770      	bx	lr

08002a9c <rt_mut_delete>:
 8002a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a9e:	8843      	ldrh	r3, [r0, #2]
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	b19b      	cbz	r3, 8002acc <rt_mut_delete+0x30>
 8002aa4:	6880      	ldr	r0, [r0, #8]
 8002aa6:	6a03      	ldr	r3, [r0, #32]
 8002aa8:	429c      	cmp	r4, r3
 8002aaa:	d128      	bne.n	8002afe <rt_mut_delete+0x62>
 8002aac:	68e3      	ldr	r3, [r4, #12]
 8002aae:	6203      	str	r3, [r0, #32]
 8002ab0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002ab4:	6a02      	ldr	r2, [r0, #32]
 8002ab6:	bb52      	cbnz	r2, 8002b0e <rt_mut_delete+0x72>
 8002ab8:	7882      	ldrb	r2, [r0, #2]
 8002aba:	429a      	cmp	r2, r3
 8002abc:	d006      	beq.n	8002acc <rt_mut_delete+0x30>
 8002abe:	7083      	strb	r3, [r0, #2]
 8002ac0:	4b1f      	ldr	r3, [pc, #124]	; (8002b40 <rt_mut_delete+0xa4>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	4298      	cmp	r0, r3
 8002ac6:	d001      	beq.n	8002acc <rt_mut_delete+0x30>
 8002ac8:	f7fe ff30 	bl	800192c <rt_resort_prio>
 8002acc:	4f1d      	ldr	r7, [pc, #116]	; (8002b44 <rt_mut_delete+0xa8>)
 8002ace:	2601      	movs	r6, #1
 8002ad0:	6865      	ldr	r5, [r4, #4]
 8002ad2:	bb25      	cbnz	r5, 8002b1e <rt_mut_delete+0x82>
 8002ad4:	481b      	ldr	r0, [pc, #108]	; (8002b44 <rt_mut_delete+0xa8>)
 8002ad6:	6843      	ldr	r3, [r0, #4]
 8002ad8:	b16b      	cbz	r3, 8002af6 <rt_mut_delete+0x5a>
 8002ada:	4e19      	ldr	r6, [pc, #100]	; (8002b40 <rt_mut_delete+0xa4>)
 8002adc:	789a      	ldrb	r2, [r3, #2]
 8002ade:	6831      	ldr	r1, [r6, #0]
 8002ae0:	788b      	ldrb	r3, [r1, #2]
 8002ae2:	429a      	cmp	r2, r3
 8002ae4:	d907      	bls.n	8002af6 <rt_mut_delete+0x5a>
 8002ae6:	f7fe fe7b 	bl	80017e0 <rt_put_prio>
 8002aea:	6833      	ldr	r3, [r6, #0]
 8002aec:	2201      	movs	r2, #1
 8002aee:	705a      	strb	r2, [r3, #1]
 8002af0:	4628      	mov	r0, r5
 8002af2:	f7ff fd87 	bl	8002604 <rt_dispatch>
 8002af6:	2000      	movs	r0, #0
 8002af8:	7020      	strb	r0, [r4, #0]
 8002afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002afc:	4613      	mov	r3, r2
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d0d6      	beq.n	8002ab0 <rt_mut_delete+0x14>
 8002b02:	68da      	ldr	r2, [r3, #12]
 8002b04:	4294      	cmp	r4, r2
 8002b06:	d1f9      	bne.n	8002afc <rt_mut_delete+0x60>
 8002b08:	68e2      	ldr	r2, [r4, #12]
 8002b0a:	60da      	str	r2, [r3, #12]
 8002b0c:	e7d0      	b.n	8002ab0 <rt_mut_delete+0x14>
 8002b0e:	6851      	ldr	r1, [r2, #4]
 8002b10:	b119      	cbz	r1, 8002b1a <rt_mut_delete+0x7e>
 8002b12:	7889      	ldrb	r1, [r1, #2]
 8002b14:	428b      	cmp	r3, r1
 8002b16:	bf38      	it	cc
 8002b18:	460b      	movcc	r3, r1
 8002b1a:	68d2      	ldr	r2, [r2, #12]
 8002b1c:	e7cb      	b.n	8002ab6 <rt_mut_delete+0x1a>
 8002b1e:	4620      	mov	r0, r4
 8002b20:	f7fe fe76 	bl	8001810 <rt_get_first>
 8002b24:	2100      	movs	r1, #0
 8002b26:	4605      	mov	r5, r0
 8002b28:	f7ff f836 	bl	8001b98 <rt_ret_val>
 8002b2c:	4628      	mov	r0, r5
 8002b2e:	f7fe ff15 	bl	800195c <rt_rmv_dly>
 8002b32:	706e      	strb	r6, [r5, #1]
 8002b34:	4629      	mov	r1, r5
 8002b36:	4638      	mov	r0, r7
 8002b38:	f7fe fe52 	bl	80017e0 <rt_put_prio>
 8002b3c:	e7c8      	b.n	8002ad0 <rt_mut_delete+0x34>
 8002b3e:	bf00      	nop
 8002b40:	2000288c 	.word	0x2000288c
 8002b44:	20002840 	.word	0x20002840

08002b48 <rt_mut_release>:
 8002b48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002b4c:	8843      	ldrh	r3, [r0, #2]
 8002b4e:	4605      	mov	r5, r0
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d063      	beq.n	8002c1c <rt_mut_release+0xd4>
 8002b54:	4f32      	ldr	r7, [pc, #200]	; (8002c20 <rt_mut_release+0xd8>)
 8002b56:	6881      	ldr	r1, [r0, #8]
 8002b58:	683a      	ldr	r2, [r7, #0]
 8002b5a:	4291      	cmp	r1, r2
 8002b5c:	d15e      	bne.n	8002c1c <rt_mut_release+0xd4>
 8002b5e:	3b01      	subs	r3, #1
 8002b60:	b29b      	uxth	r3, r3
 8002b62:	8043      	strh	r3, [r0, #2]
 8002b64:	b11b      	cbz	r3, 8002b6e <rt_mut_release+0x26>
 8002b66:	2400      	movs	r4, #0
 8002b68:	4620      	mov	r0, r4
 8002b6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002b6e:	6a0b      	ldr	r3, [r1, #32]
 8002b70:	4298      	cmp	r0, r3
 8002b72:	d129      	bne.n	8002bc8 <rt_mut_release+0x80>
 8002b74:	68c3      	ldr	r3, [r0, #12]
 8002b76:	620b      	str	r3, [r1, #32]
 8002b78:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002b7c:	6a0c      	ldr	r4, [r1, #32]
 8002b7e:	bb5c      	cbnz	r4, 8002bd8 <rt_mut_release+0x90>
 8002b80:	708b      	strb	r3, [r1, #2]
 8002b82:	686a      	ldr	r2, [r5, #4]
 8002b84:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002c24 <rt_mut_release+0xdc>
 8002b88:	2a00      	cmp	r2, #0
 8002b8a:	d03b      	beq.n	8002c04 <rt_mut_release+0xbc>
 8002b8c:	4628      	mov	r0, r5
 8002b8e:	f7fe fe3f 	bl	8001810 <rt_get_first>
 8002b92:	4621      	mov	r1, r4
 8002b94:	4606      	mov	r6, r0
 8002b96:	f7fe ffff 	bl	8001b98 <rt_ret_val>
 8002b9a:	4630      	mov	r0, r6
 8002b9c:	f7fe fede 	bl	800195c <rt_rmv_dly>
 8002ba0:	6a33      	ldr	r3, [r6, #32]
 8002ba2:	60eb      	str	r3, [r5, #12]
 8002ba4:	f04f 0901 	mov.w	r9, #1
 8002ba8:	6839      	ldr	r1, [r7, #0]
 8002baa:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002bae:	f8a5 9002 	strh.w	r9, [r5, #2]
 8002bb2:	60ae      	str	r6, [r5, #8]
 8002bb4:	6235      	str	r5, [r6, #32]
 8002bb6:	788a      	ldrb	r2, [r1, #2]
 8002bb8:	789b      	ldrb	r3, [r3, #2]
 8002bba:	429a      	cmp	r2, r3
 8002bbc:	d314      	bcc.n	8002be8 <rt_mut_release+0xa0>
 8002bbe:	4630      	mov	r0, r6
 8002bc0:	f7ff fd20 	bl	8002604 <rt_dispatch>
 8002bc4:	e7d0      	b.n	8002b68 <rt_mut_release+0x20>
 8002bc6:	4613      	mov	r3, r2
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d0d5      	beq.n	8002b78 <rt_mut_release+0x30>
 8002bcc:	68da      	ldr	r2, [r3, #12]
 8002bce:	4295      	cmp	r5, r2
 8002bd0:	d1f9      	bne.n	8002bc6 <rt_mut_release+0x7e>
 8002bd2:	68ea      	ldr	r2, [r5, #12]
 8002bd4:	60da      	str	r2, [r3, #12]
 8002bd6:	e7cf      	b.n	8002b78 <rt_mut_release+0x30>
 8002bd8:	6862      	ldr	r2, [r4, #4]
 8002bda:	b11a      	cbz	r2, 8002be4 <rt_mut_release+0x9c>
 8002bdc:	7892      	ldrb	r2, [r2, #2]
 8002bde:	4293      	cmp	r3, r2
 8002be0:	bf38      	it	cc
 8002be2:	4613      	movcc	r3, r2
 8002be4:	68e4      	ldr	r4, [r4, #12]
 8002be6:	e7ca      	b.n	8002b7e <rt_mut_release+0x36>
 8002be8:	4640      	mov	r0, r8
 8002bea:	f7fe fdf9 	bl	80017e0 <rt_put_prio>
 8002bee:	4631      	mov	r1, r6
 8002bf0:	4640      	mov	r0, r8
 8002bf2:	f7fe fdf5 	bl	80017e0 <rt_put_prio>
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	f883 9001 	strb.w	r9, [r3, #1]
 8002bfc:	f886 9001 	strb.w	r9, [r6, #1]
 8002c00:	4620      	mov	r0, r4
 8002c02:	e7dd      	b.n	8002bc0 <rt_mut_release+0x78>
 8002c04:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002c08:	7892      	ldrb	r2, [r2, #2]
 8002c0a:	429a      	cmp	r2, r3
 8002c0c:	d9ab      	bls.n	8002b66 <rt_mut_release+0x1e>
 8002c0e:	4640      	mov	r0, r8
 8002c10:	f7fe fde6 	bl	80017e0 <rt_put_prio>
 8002c14:	683b      	ldr	r3, [r7, #0]
 8002c16:	2201      	movs	r2, #1
 8002c18:	705a      	strb	r2, [r3, #1]
 8002c1a:	e7f1      	b.n	8002c00 <rt_mut_release+0xb8>
 8002c1c:	24ff      	movs	r4, #255	; 0xff
 8002c1e:	e7a3      	b.n	8002b68 <rt_mut_release+0x20>
 8002c20:	2000288c 	.word	0x2000288c
 8002c24:	20002840 	.word	0x20002840

08002c28 <rt_mut_wait>:
 8002c28:	8843      	ldrh	r3, [r0, #2]
 8002c2a:	b570      	push	{r4, r5, r6, lr}
 8002c2c:	4604      	mov	r4, r0
 8002c2e:	460e      	mov	r6, r1
 8002c30:	4d13      	ldr	r5, [pc, #76]	; (8002c80 <rt_mut_wait+0x58>)
 8002c32:	b943      	cbnz	r3, 8002c46 <rt_mut_wait+0x1e>
 8002c34:	682a      	ldr	r2, [r5, #0]
 8002c36:	6082      	str	r2, [r0, #8]
 8002c38:	6a11      	ldr	r1, [r2, #32]
 8002c3a:	60c1      	str	r1, [r0, #12]
 8002c3c:	6210      	str	r0, [r2, #32]
 8002c3e:	3301      	adds	r3, #1
 8002c40:	8063      	strh	r3, [r4, #2]
 8002c42:	2000      	movs	r0, #0
 8002c44:	bd70      	pop	{r4, r5, r6, pc}
 8002c46:	6880      	ldr	r0, [r0, #8]
 8002c48:	682a      	ldr	r2, [r5, #0]
 8002c4a:	4290      	cmp	r0, r2
 8002c4c:	d0f7      	beq.n	8002c3e <rt_mut_wait+0x16>
 8002c4e:	b181      	cbz	r1, 8002c72 <rt_mut_wait+0x4a>
 8002c50:	7893      	ldrb	r3, [r2, #2]
 8002c52:	7882      	ldrb	r2, [r0, #2]
 8002c54:	429a      	cmp	r2, r3
 8002c56:	d202      	bcs.n	8002c5e <rt_mut_wait+0x36>
 8002c58:	7083      	strb	r3, [r0, #2]
 8002c5a:	f7fe fe67 	bl	800192c <rt_resort_prio>
 8002c5e:	6862      	ldr	r2, [r4, #4]
 8002c60:	b14a      	cbz	r2, 8002c76 <rt_mut_wait+0x4e>
 8002c62:	6829      	ldr	r1, [r5, #0]
 8002c64:	4620      	mov	r0, r4
 8002c66:	f7fe fdbb 	bl	80017e0 <rt_put_prio>
 8002c6a:	2109      	movs	r1, #9
 8002c6c:	4630      	mov	r0, r6
 8002c6e:	f7ff fced 	bl	800264c <rt_block>
 8002c72:	2001      	movs	r0, #1
 8002c74:	bd70      	pop	{r4, r5, r6, pc}
 8002c76:	682b      	ldr	r3, [r5, #0]
 8002c78:	6063      	str	r3, [r4, #4]
 8002c7a:	605a      	str	r2, [r3, #4]
 8002c7c:	609c      	str	r4, [r3, #8]
 8002c7e:	e7f4      	b.n	8002c6a <rt_mut_wait+0x42>
 8002c80:	2000288c 	.word	0x2000288c

08002c84 <rt_dly_wait>:
 8002c84:	2103      	movs	r1, #3
 8002c86:	f7ff bce1 	b.w	800264c <rt_block>
	...

08002c8c <rt_sem_psh>:
 8002c8c:	6842      	ldr	r2, [r0, #4]
 8002c8e:	b510      	push	{r4, lr}
 8002c90:	b17a      	cbz	r2, 8002cb2 <rt_sem_psh+0x26>
 8002c92:	f7fe fdbd 	bl	8001810 <rt_get_first>
 8002c96:	4604      	mov	r4, r0
 8002c98:	f7fe fe60 	bl	800195c <rt_rmv_dly>
 8002c9c:	2101      	movs	r1, #1
 8002c9e:	7061      	strb	r1, [r4, #1]
 8002ca0:	4620      	mov	r0, r4
 8002ca2:	f7fe ff79 	bl	8001b98 <rt_ret_val>
 8002ca6:	4621      	mov	r1, r4
 8002ca8:	4804      	ldr	r0, [pc, #16]	; (8002cbc <rt_sem_psh+0x30>)
 8002caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002cae:	f7fe bd97 	b.w	80017e0 <rt_put_prio>
 8002cb2:	8842      	ldrh	r2, [r0, #2]
 8002cb4:	3201      	adds	r2, #1
 8002cb6:	8042      	strh	r2, [r0, #2]
 8002cb8:	bd10      	pop	{r4, pc}
 8002cba:	bf00      	nop
 8002cbc:	20002840 	.word	0x20002840

08002cc0 <timer_irq_handler>:
 8002cc0:	b570      	push	{r4, r5, r6, lr}
 8002cc2:	4c13      	ldr	r4, [pc, #76]	; (8002d10 <timer_irq_handler+0x50>)
 8002cc4:	6823      	ldr	r3, [r4, #0]
 8002cc6:	691a      	ldr	r2, [r3, #16]
 8002cc8:	0795      	lsls	r5, r2, #30
 8002cca:	d507      	bpl.n	8002cdc <timer_irq_handler+0x1c>
 8002ccc:	68da      	ldr	r2, [r3, #12]
 8002cce:	0790      	lsls	r0, r2, #30
 8002cd0:	d504      	bpl.n	8002cdc <timer_irq_handler+0x1c>
 8002cd2:	f06f 0202 	mvn.w	r2, #2
 8002cd6:	611a      	str	r2, [r3, #16]
 8002cd8:	f7fe fc40 	bl	800155c <us_ticker_irq_handler>
 8002cdc:	6823      	ldr	r3, [r4, #0]
 8002cde:	691a      	ldr	r2, [r3, #16]
 8002ce0:	0751      	lsls	r1, r2, #29
 8002ce2:	d513      	bpl.n	8002d0c <timer_irq_handler+0x4c>
 8002ce4:	68da      	ldr	r2, [r3, #12]
 8002ce6:	0752      	lsls	r2, r2, #29
 8002ce8:	d510      	bpl.n	8002d0c <timer_irq_handler+0x4c>
 8002cea:	f06f 0204 	mvn.w	r2, #4
 8002cee:	4e09      	ldr	r6, [pc, #36]	; (8002d14 <timer_irq_handler+0x54>)
 8002cf0:	611a      	str	r2, [r3, #16]
 8002cf2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002cf4:	6833      	ldr	r3, [r6, #0]
 8002cf6:	1aeb      	subs	r3, r5, r3
 8002cf8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002cfc:	d306      	bcc.n	8002d0c <timer_irq_handler+0x4c>
 8002cfe:	f001 febf 	bl	8004a80 <HAL_IncTick>
 8002d02:	6823      	ldr	r3, [r4, #0]
 8002d04:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002d08:	639a      	str	r2, [r3, #56]	; 0x38
 8002d0a:	6035      	str	r5, [r6, #0]
 8002d0c:	bd70      	pop	{r4, r5, r6, pc}
 8002d0e:	bf00      	nop
 8002d10:	200028d8 	.word	0x200028d8
 8002d14:	20001a84 	.word	0x20001a84

08002d18 <HAL_InitTick>:
 8002d18:	b530      	push	{r4, r5, lr}
 8002d1a:	b089      	sub	sp, #36	; 0x24
 8002d1c:	a901      	add	r1, sp, #4
 8002d1e:	a803      	add	r0, sp, #12
 8002d20:	f001 fe2c 	bl	800497c <HAL_RCC_GetClockConfig>
 8002d24:	f001 fdfa 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 8002d28:	2300      	movs	r3, #0
 8002d2a:	9302      	str	r3, [sp, #8]
 8002d2c:	4b24      	ldr	r3, [pc, #144]	; (8002dc0 <HAL_InitTick+0xa8>)
 8002d2e:	9001      	str	r0, [sp, #4]
 8002d30:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002d32:	4c24      	ldr	r4, [pc, #144]	; (8002dc4 <HAL_InitTick+0xac>)
 8002d34:	f042 0208 	orr.w	r2, r2, #8
 8002d38:	641a      	str	r2, [r3, #64]	; 0x40
 8002d3a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002d3c:	f002 0208 	and.w	r2, r2, #8
 8002d40:	9202      	str	r2, [sp, #8]
 8002d42:	9a02      	ldr	r2, [sp, #8]
 8002d44:	6a1a      	ldr	r2, [r3, #32]
 8002d46:	f042 0208 	orr.w	r2, r2, #8
 8002d4a:	621a      	str	r2, [r3, #32]
 8002d4c:	6a1a      	ldr	r2, [r3, #32]
 8002d4e:	f022 0208 	bic.w	r2, r2, #8
 8002d52:	621a      	str	r2, [r3, #32]
 8002d54:	9a06      	ldr	r2, [sp, #24]
 8002d56:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002d5a:	6023      	str	r3, [r4, #0]
 8002d5c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d60:	60e3      	str	r3, [r4, #12]
 8002d62:	4b19      	ldr	r3, [pc, #100]	; (8002dc8 <HAL_InitTick+0xb0>)
 8002d64:	bb4a      	cbnz	r2, 8002dba <HAL_InitTick+0xa2>
 8002d66:	fbb0 f0f3 	udiv	r0, r0, r3
 8002d6a:	3801      	subs	r0, #1
 8002d6c:	2500      	movs	r5, #0
 8002d6e:	6060      	str	r0, [r4, #4]
 8002d70:	4814      	ldr	r0, [pc, #80]	; (8002dc4 <HAL_InitTick+0xac>)
 8002d72:	6125      	str	r5, [r4, #16]
 8002d74:	60a5      	str	r5, [r4, #8]
 8002d76:	6165      	str	r5, [r4, #20]
 8002d78:	f001 fb32 	bl	80043e0 <HAL_TIM_OC_Init>
 8002d7c:	4913      	ldr	r1, [pc, #76]	; (8002dcc <HAL_InitTick+0xb4>)
 8002d7e:	2032      	movs	r0, #50	; 0x32
 8002d80:	f001 f8b6 	bl	8003ef0 <__NVIC_SetVector>
 8002d84:	4b12      	ldr	r3, [pc, #72]	; (8002dd0 <HAL_InitTick+0xb8>)
 8002d86:	480f      	ldr	r0, [pc, #60]	; (8002dc4 <HAL_InitTick+0xac>)
 8002d88:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002d8c:	605a      	str	r2, [r3, #4]
 8002d8e:	4629      	mov	r1, r5
 8002d90:	f001 fb66 	bl	8004460 <HAL_TIM_OC_Start>
 8002d94:	2104      	movs	r1, #4
 8002d96:	480b      	ldr	r0, [pc, #44]	; (8002dc4 <HAL_InitTick+0xac>)
 8002d98:	f001 fb62 	bl	8004460 <HAL_TIM_OC_Start>
 8002d9c:	6823      	ldr	r3, [r4, #0]
 8002d9e:	4a0d      	ldr	r2, [pc, #52]	; (8002dd4 <HAL_InitTick+0xbc>)
 8002da0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002da2:	6011      	str	r1, [r2, #0]
 8002da4:	6812      	ldr	r2, [r2, #0]
 8002da6:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002daa:	639a      	str	r2, [r3, #56]	; 0x38
 8002dac:	68da      	ldr	r2, [r3, #12]
 8002dae:	4628      	mov	r0, r5
 8002db0:	f042 0204 	orr.w	r2, r2, #4
 8002db4:	60da      	str	r2, [r3, #12]
 8002db6:	b009      	add	sp, #36	; 0x24
 8002db8:	bd30      	pop	{r4, r5, pc}
 8002dba:	0040      	lsls	r0, r0, #1
 8002dbc:	e7d3      	b.n	8002d66 <HAL_InitTick+0x4e>
 8002dbe:	bf00      	nop
 8002dc0:	40023800 	.word	0x40023800
 8002dc4:	200028d8 	.word	0x200028d8
 8002dc8:	000f4240 	.word	0x000f4240
 8002dcc:	08002cc1 	.word	0x08002cc1
 8002dd0:	e000e100 	.word	0xe000e100
 8002dd4:	20001a84 	.word	0x20001a84

08002dd8 <HAL_SuspendTick>:
 8002dd8:	4b03      	ldr	r3, [pc, #12]	; (8002de8 <HAL_SuspendTick+0x10>)
 8002dda:	4a04      	ldr	r2, [pc, #16]	; (8002dec <HAL_SuspendTick+0x14>)
 8002ddc:	6013      	str	r3, [r2, #0]
 8002dde:	68da      	ldr	r2, [r3, #12]
 8002de0:	f022 0204 	bic.w	r2, r2, #4
 8002de4:	60da      	str	r2, [r3, #12]
 8002de6:	4770      	bx	lr
 8002de8:	40000c00 	.word	0x40000c00
 8002dec:	200028d8 	.word	0x200028d8

08002df0 <HAL_ResumeTick>:
 8002df0:	4b03      	ldr	r3, [pc, #12]	; (8002e00 <HAL_ResumeTick+0x10>)
 8002df2:	4a04      	ldr	r2, [pc, #16]	; (8002e04 <HAL_ResumeTick+0x14>)
 8002df4:	6013      	str	r3, [r2, #0]
 8002df6:	68da      	ldr	r2, [r3, #12]
 8002df8:	f042 0204 	orr.w	r2, r2, #4
 8002dfc:	60da      	str	r2, [r3, #12]
 8002dfe:	4770      	bx	lr
 8002e00:	40000c00 	.word	0x40000c00
 8002e04:	200028d8 	.word	0x200028d8

08002e08 <Set_GPIO_Clock>:
 8002e08:	b500      	push	{lr}
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	b089      	sub	sp, #36	; 0x24
 8002e0e:	2807      	cmp	r0, #7
 8002e10:	d86f      	bhi.n	8002ef2 <Set_GPIO_Clock+0xea>
 8002e12:	e8df f000 	tbb	[pc, r0]
 8002e16:	1304      	.short	0x1304
 8002e18:	473a2d20 	.word	0x473a2d20
 8002e1c:	6154      	.short	0x6154
 8002e1e:	9300      	str	r3, [sp, #0]
 8002e20:	4b36      	ldr	r3, [pc, #216]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002e22:	4837      	ldr	r0, [pc, #220]	; (8002f00 <Set_GPIO_Clock+0xf8>)
 8002e24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e26:	f042 0201 	orr.w	r2, r2, #1
 8002e2a:	631a      	str	r2, [r3, #48]	; 0x30
 8002e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e2e:	f003 0301 	and.w	r3, r3, #1
 8002e32:	9300      	str	r3, [sp, #0]
 8002e34:	9b00      	ldr	r3, [sp, #0]
 8002e36:	b009      	add	sp, #36	; 0x24
 8002e38:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e3c:	9301      	str	r3, [sp, #4]
 8002e3e:	4b2f      	ldr	r3, [pc, #188]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002e40:	4830      	ldr	r0, [pc, #192]	; (8002f04 <Set_GPIO_Clock+0xfc>)
 8002e42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e44:	f042 0202 	orr.w	r2, r2, #2
 8002e48:	631a      	str	r2, [r3, #48]	; 0x30
 8002e4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e4c:	f003 0302 	and.w	r3, r3, #2
 8002e50:	9301      	str	r3, [sp, #4]
 8002e52:	9b01      	ldr	r3, [sp, #4]
 8002e54:	e7ef      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002e56:	9302      	str	r3, [sp, #8]
 8002e58:	4b28      	ldr	r3, [pc, #160]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002e5a:	482b      	ldr	r0, [pc, #172]	; (8002f08 <Set_GPIO_Clock+0x100>)
 8002e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e5e:	f042 0204 	orr.w	r2, r2, #4
 8002e62:	631a      	str	r2, [r3, #48]	; 0x30
 8002e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e66:	f003 0304 	and.w	r3, r3, #4
 8002e6a:	9302      	str	r3, [sp, #8]
 8002e6c:	9b02      	ldr	r3, [sp, #8]
 8002e6e:	e7e2      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002e70:	9303      	str	r3, [sp, #12]
 8002e72:	4b22      	ldr	r3, [pc, #136]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002e74:	4825      	ldr	r0, [pc, #148]	; (8002f0c <Set_GPIO_Clock+0x104>)
 8002e76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e78:	f042 0208 	orr.w	r2, r2, #8
 8002e7c:	631a      	str	r2, [r3, #48]	; 0x30
 8002e7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e80:	f003 0308 	and.w	r3, r3, #8
 8002e84:	9303      	str	r3, [sp, #12]
 8002e86:	9b03      	ldr	r3, [sp, #12]
 8002e88:	e7d5      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002e8a:	9304      	str	r3, [sp, #16]
 8002e8c:	4b1b      	ldr	r3, [pc, #108]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002e8e:	4820      	ldr	r0, [pc, #128]	; (8002f10 <Set_GPIO_Clock+0x108>)
 8002e90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e92:	f042 0210 	orr.w	r2, r2, #16
 8002e96:	631a      	str	r2, [r3, #48]	; 0x30
 8002e98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e9a:	f003 0310 	and.w	r3, r3, #16
 8002e9e:	9304      	str	r3, [sp, #16]
 8002ea0:	9b04      	ldr	r3, [sp, #16]
 8002ea2:	e7c8      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002ea4:	9305      	str	r3, [sp, #20]
 8002ea6:	4b15      	ldr	r3, [pc, #84]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002ea8:	481a      	ldr	r0, [pc, #104]	; (8002f14 <Set_GPIO_Clock+0x10c>)
 8002eaa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002eac:	f042 0220 	orr.w	r2, r2, #32
 8002eb0:	631a      	str	r2, [r3, #48]	; 0x30
 8002eb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002eb4:	f003 0320 	and.w	r3, r3, #32
 8002eb8:	9305      	str	r3, [sp, #20]
 8002eba:	9b05      	ldr	r3, [sp, #20]
 8002ebc:	e7bb      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002ebe:	9306      	str	r3, [sp, #24]
 8002ec0:	4b0e      	ldr	r3, [pc, #56]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002ec2:	4815      	ldr	r0, [pc, #84]	; (8002f18 <Set_GPIO_Clock+0x110>)
 8002ec4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ec6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002eca:	631a      	str	r2, [r3, #48]	; 0x30
 8002ecc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ece:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ed2:	9306      	str	r3, [sp, #24]
 8002ed4:	9b06      	ldr	r3, [sp, #24]
 8002ed6:	e7ae      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002ed8:	9307      	str	r3, [sp, #28]
 8002eda:	4b08      	ldr	r3, [pc, #32]	; (8002efc <Set_GPIO_Clock+0xf4>)
 8002edc:	480f      	ldr	r0, [pc, #60]	; (8002f1c <Set_GPIO_Clock+0x114>)
 8002ede:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ee0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002ee4:	631a      	str	r2, [r3, #48]	; 0x30
 8002ee6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ee8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002eec:	9307      	str	r3, [sp, #28]
 8002eee:	9b07      	ldr	r3, [sp, #28]
 8002ef0:	e7a1      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002ef2:	480b      	ldr	r0, [pc, #44]	; (8002f20 <Set_GPIO_Clock+0x118>)
 8002ef4:	f7fe fbda 	bl	80016ac <error>
 8002ef8:	2000      	movs	r0, #0
 8002efa:	e79c      	b.n	8002e36 <Set_GPIO_Clock+0x2e>
 8002efc:	40023800 	.word	0x40023800
 8002f00:	40020000 	.word	0x40020000
 8002f04:	40020400 	.word	0x40020400
 8002f08:	40020800 	.word	0x40020800
 8002f0c:	40020c00 	.word	0x40020c00
 8002f10:	40021000 	.word	0x40021000
 8002f14:	40021400 	.word	0x40021400
 8002f18:	40021800 	.word	0x40021800
 8002f1c:	40021c00 	.word	0x40021c00
 8002f20:	0800700c 	.word	0x0800700c

08002f24 <gpio_set>:
 8002f24:	b510      	push	{r4, lr}
 8002f26:	2100      	movs	r1, #0
 8002f28:	4604      	mov	r4, r0
 8002f2a:	f004 040f 	and.w	r4, r4, #15
 8002f2e:	f000 fbb9 	bl	80036a4 <pin_function>
 8002f32:	2001      	movs	r0, #1
 8002f34:	40a0      	lsls	r0, r4
 8002f36:	bd10      	pop	{r4, pc}

08002f38 <gpio_init>:
 8002f38:	b570      	push	{r4, r5, r6, lr}
 8002f3a:	4604      	mov	r4, r0
 8002f3c:	1c4b      	adds	r3, r1, #1
 8002f3e:	460e      	mov	r6, r1
 8002f40:	8221      	strh	r1, [r4, #16]
 8002f42:	d016      	beq.n	8002f72 <gpio_init+0x3a>
 8002f44:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002f48:	f7ff ff5e 	bl	8002e08 <Set_GPIO_Clock>
 8002f4c:	4605      	mov	r5, r0
 8002f4e:	4630      	mov	r0, r6
 8002f50:	f7ff ffe8 	bl	8002f24 <gpio_set>
 8002f54:	8a23      	ldrh	r3, [r4, #16]
 8002f56:	4a07      	ldr	r2, [pc, #28]	; (8002f74 <gpio_init+0x3c>)
 8002f58:	6165      	str	r5, [r4, #20]
 8002f5a:	f003 030f 	and.w	r3, r3, #15
 8002f5e:	6020      	str	r0, [r4, #0]
 8002f60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f64:	61a3      	str	r3, [r4, #24]
 8002f66:	f105 0310 	add.w	r3, r5, #16
 8002f6a:	3518      	adds	r5, #24
 8002f6c:	6063      	str	r3, [r4, #4]
 8002f6e:	60a5      	str	r5, [r4, #8]
 8002f70:	60e5      	str	r5, [r4, #12]
 8002f72:	bd70      	pop	{r4, r5, r6, pc}
 8002f74:	080070fc 	.word	0x080070fc

08002f78 <gpio_mode>:
 8002f78:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002f7c:	f000 bc16 	b.w	80037ac <pin_mode>

08002f80 <gpio_dir>:
 8002f80:	b510      	push	{r4, lr}
 8002f82:	6983      	ldr	r3, [r0, #24]
 8002f84:	6944      	ldr	r4, [r0, #20]
 8002f86:	b971      	cbnz	r1, 8002fa6 <gpio_dir+0x26>
 8002f88:	6821      	ldr	r1, [r4, #0]
 8002f8a:	fa93 f2a3 	rbit	r2, r3
 8002f8e:	fab2 f282 	clz	r2, r2
 8002f92:	2003      	movs	r0, #3
 8002f94:	0052      	lsls	r2, r2, #1
 8002f96:	fa00 f202 	lsl.w	r2, r0, r2
 8002f9a:	ea21 0202 	bic.w	r2, r1, r2
 8002f9e:	fa93 f3a3 	rbit	r3, r3
 8002fa2:	6022      	str	r2, [r4, #0]
 8002fa4:	bd10      	pop	{r4, pc}
 8002fa6:	6822      	ldr	r2, [r4, #0]
 8002fa8:	fa93 f1a3 	rbit	r1, r3
 8002fac:	fab1 f181 	clz	r1, r1
 8002fb0:	fa93 f3a3 	rbit	r3, r3
 8002fb4:	2003      	movs	r0, #3
 8002fb6:	0049      	lsls	r1, r1, #1
 8002fb8:	fa00 f101 	lsl.w	r1, r0, r1
 8002fbc:	fab3 f383 	clz	r3, r3
 8002fc0:	ea22 0201 	bic.w	r2, r2, r1
 8002fc4:	005b      	lsls	r3, r3, #1
 8002fc6:	2101      	movs	r1, #1
 8002fc8:	fa01 f303 	lsl.w	r3, r1, r3
 8002fcc:	4313      	orrs	r3, r2
 8002fce:	6023      	str	r3, [r4, #0]
 8002fd0:	bd10      	pop	{r4, pc}

08002fd2 <hal_sleep>:
 8002fd2:	b508      	push	{r3, lr}
 8002fd4:	f7ff ff00 	bl	8002dd8 <HAL_SuspendTick>
 8002fd8:	2101      	movs	r1, #1
 8002fda:	2000      	movs	r0, #0
 8002fdc:	f001 fa42 	bl	8004464 <HAL_PWR_EnterSLEEPMode>
 8002fe0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002fe4:	f7ff bf04 	b.w	8002df0 <HAL_ResumeTick>

08002fe8 <can_irq>:
 8002fe8:	6943      	ldr	r3, [r0, #20]
 8002fea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fee:	4c3a      	ldr	r4, [pc, #232]	; (80030d8 <can_irq+0xf0>)
 8002ff0:	460d      	mov	r5, r1
 8002ff2:	07d9      	lsls	r1, r3, #31
 8002ff4:	6020      	str	r0, [r4, #0]
 8002ff6:	d52c      	bpl.n	8003052 <can_irq+0x6a>
 8002ff8:	6881      	ldr	r1, [r0, #8]
 8002ffa:	f8df e0e8 	ldr.w	lr, [pc, #232]	; 80030e4 <can_irq+0xfc>
 8002ffe:	6882      	ldr	r2, [r0, #8]
 8003000:	4f36      	ldr	r7, [pc, #216]	; (80030dc <can_irq+0xf4>)
 8003002:	6883      	ldr	r3, [r0, #8]
 8003004:	4e36      	ldr	r6, [pc, #216]	; (80030e0 <can_irq+0xf8>)
 8003006:	ea01 010e 	and.w	r1, r1, lr
 800300a:	4571      	cmp	r1, lr
 800300c:	ea02 0207 	and.w	r2, r2, r7
 8003010:	bf04      	itt	eq
 8003012:	f04f 0e01 	moveq.w	lr, #1
 8003016:	f8c0 e008 	streq.w	lr, [r0, #8]
 800301a:	42ba      	cmp	r2, r7
 800301c:	ea03 0306 	and.w	r3, r3, r6
 8003020:	bf04      	itt	eq
 8003022:	f44f 7780 	moveq.w	r7, #256	; 0x100
 8003026:	6087      	streq	r7, [r0, #8]
 8003028:	42b3      	cmp	r3, r6
 800302a:	bf04      	itt	eq
 800302c:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
 8003030:	6086      	streq	r6, [r0, #8]
 8003032:	482c      	ldr	r0, [pc, #176]	; (80030e4 <can_irq+0xfc>)
 8003034:	4281      	cmp	r1, r0
 8003036:	d005      	beq.n	8003044 <can_irq+0x5c>
 8003038:	4928      	ldr	r1, [pc, #160]	; (80030dc <can_irq+0xf4>)
 800303a:	428a      	cmp	r2, r1
 800303c:	d002      	beq.n	8003044 <can_irq+0x5c>
 800303e:	4a28      	ldr	r2, [pc, #160]	; (80030e0 <can_irq+0xf8>)
 8003040:	4293      	cmp	r3, r2
 8003042:	d106      	bne.n	8003052 <can_irq+0x6a>
 8003044:	4b28      	ldr	r3, [pc, #160]	; (80030e8 <can_irq+0x100>)
 8003046:	4a29      	ldr	r2, [pc, #164]	; (80030ec <can_irq+0x104>)
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 800304e:	2101      	movs	r1, #1
 8003050:	4798      	blx	r3
 8003052:	6823      	ldr	r3, [r4, #0]
 8003054:	68da      	ldr	r2, [r3, #12]
 8003056:	695b      	ldr	r3, [r3, #20]
 8003058:	0792      	lsls	r2, r2, #30
 800305a:	d008      	beq.n	800306e <can_irq+0x86>
 800305c:	079f      	lsls	r7, r3, #30
 800305e:	d506      	bpl.n	800306e <can_irq+0x86>
 8003060:	4b21      	ldr	r3, [pc, #132]	; (80030e8 <can_irq+0x100>)
 8003062:	4a22      	ldr	r2, [pc, #136]	; (80030ec <can_irq+0x104>)
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 800306a:	2100      	movs	r1, #0
 800306c:	4798      	blx	r3
 800306e:	6823      	ldr	r3, [r4, #0]
 8003070:	6999      	ldr	r1, [r3, #24]
 8003072:	695a      	ldr	r2, [r3, #20]
 8003074:	695b      	ldr	r3, [r3, #20]
 8003076:	078e      	lsls	r6, r1, #30
 8003078:	d50a      	bpl.n	8003090 <can_irq+0xa8>
 800307a:	0590      	lsls	r0, r2, #22
 800307c:	d508      	bpl.n	8003090 <can_irq+0xa8>
 800307e:	0419      	lsls	r1, r3, #16
 8003080:	d506      	bpl.n	8003090 <can_irq+0xa8>
 8003082:	4b19      	ldr	r3, [pc, #100]	; (80030e8 <can_irq+0x100>)
 8003084:	4a19      	ldr	r2, [pc, #100]	; (80030ec <can_irq+0x104>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 800308c:	2105      	movs	r1, #5
 800308e:	4798      	blx	r3
 8003090:	6822      	ldr	r2, [r4, #0]
 8003092:	6997      	ldr	r7, [r2, #24]
 8003094:	6956      	ldr	r6, [r2, #20]
 8003096:	6952      	ldr	r2, [r2, #20]
 8003098:	f017 0704 	ands.w	r7, r7, #4
 800309c:	f406 6680 	and.w	r6, r6, #1024	; 0x400
 80030a0:	d009      	beq.n	80030b6 <can_irq+0xce>
 80030a2:	b146      	cbz	r6, 80030b6 <can_irq+0xce>
 80030a4:	0412      	lsls	r2, r2, #16
 80030a6:	d506      	bpl.n	80030b6 <can_irq+0xce>
 80030a8:	4b0f      	ldr	r3, [pc, #60]	; (80030e8 <can_irq+0x100>)
 80030aa:	4a10      	ldr	r2, [pc, #64]	; (80030ec <can_irq+0x104>)
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 80030b2:	2107      	movs	r1, #7
 80030b4:	4798      	blx	r3
 80030b6:	6823      	ldr	r3, [r4, #0]
 80030b8:	695b      	ldr	r3, [r3, #20]
 80030ba:	b15f      	cbz	r7, 80030d4 <can_irq+0xec>
 80030bc:	b156      	cbz	r6, 80030d4 <can_irq+0xec>
 80030be:	041b      	lsls	r3, r3, #16
 80030c0:	d508      	bpl.n	80030d4 <can_irq+0xec>
 80030c2:	4b09      	ldr	r3, [pc, #36]	; (80030e8 <can_irq+0x100>)
 80030c4:	4a09      	ldr	r2, [pc, #36]	; (80030ec <can_irq+0x104>)
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 80030cc:	2102      	movs	r1, #2
 80030ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80030d2:	4718      	bx	r3
 80030d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80030d8:	20001a88 	.word	0x20001a88
 80030dc:	08000300 	.word	0x08000300
 80030e0:	10030000 	.word	0x10030000
 80030e4:	04000003 	.word	0x04000003
 80030e8:	20001ad0 	.word	0x20001ad0
 80030ec:	20001ac8 	.word	0x20001ac8

080030f0 <CAN1_SCE_IRQHandler>:
 80030f0:	2100      	movs	r1, #0
 80030f2:	4801      	ldr	r0, [pc, #4]	; (80030f8 <CAN1_SCE_IRQHandler+0x8>)
 80030f4:	f7ff bf78 	b.w	8002fe8 <can_irq>
 80030f8:	40006400 	.word	0x40006400

080030fc <CAN1_TX_IRQHandler>:
 80030fc:	f7ff bff8 	b.w	80030f0 <CAN1_SCE_IRQHandler>

08003100 <CAN1_RX0_IRQHandler>:
 8003100:	f7ff bff6 	b.w	80030f0 <CAN1_SCE_IRQHandler>

08003104 <CAN2_SCE_IRQHandler>:
 8003104:	2101      	movs	r1, #1
 8003106:	4801      	ldr	r0, [pc, #4]	; (800310c <CAN2_SCE_IRQHandler+0x8>)
 8003108:	f7ff bf6e 	b.w	8002fe8 <can_irq>
 800310c:	40006800 	.word	0x40006800

08003110 <CAN2_TX_IRQHandler>:
 8003110:	f7ff bff8 	b.w	8003104 <CAN2_SCE_IRQHandler>

08003114 <CAN2_RX0_IRQHandler>:
 8003114:	f7ff bff6 	b.w	8003104 <CAN2_SCE_IRQHandler>

08003118 <can_irq_init>:
 8003118:	4b03      	ldr	r3, [pc, #12]	; (8003128 <can_irq_init+0x10>)
 800311a:	6019      	str	r1, [r3, #0]
 800311c:	6841      	ldr	r1, [r0, #4]
 800311e:	4b03      	ldr	r3, [pc, #12]	; (800312c <can_irq_init+0x14>)
 8003120:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003124:	4770      	bx	lr
 8003126:	bf00      	nop
 8003128:	20001ad0 	.word	0x20001ad0
 800312c:	20001ac8 	.word	0x20001ac8

08003130 <can_irq_free>:
 8003130:	6802      	ldr	r2, [r0, #0]
 8003132:	6953      	ldr	r3, [r2, #20]
 8003134:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 8003138:	f023 0313 	bic.w	r3, r3, #19
 800313c:	6153      	str	r3, [r2, #20]
 800313e:	4b02      	ldr	r3, [pc, #8]	; (8003148 <can_irq_free+0x18>)
 8003140:	2100      	movs	r1, #0
 8003142:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003146:	4770      	bx	lr
 8003148:	20001ac8 	.word	0x20001ac8

0800314c <can_free>:
 800314c:	6803      	ldr	r3, [r0, #0]
 800314e:	4a10      	ldr	r2, [pc, #64]	; (8003190 <can_free+0x44>)
 8003150:	4293      	cmp	r3, r2
 8003152:	d10d      	bne.n	8003170 <can_free+0x24>
 8003154:	4b0f      	ldr	r3, [pc, #60]	; (8003194 <can_free+0x48>)
 8003156:	6a1a      	ldr	r2, [r3, #32]
 8003158:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 800315c:	621a      	str	r2, [r3, #32]
 800315e:	6a1a      	ldr	r2, [r3, #32]
 8003160:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8003164:	621a      	str	r2, [r3, #32]
 8003166:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003168:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800316c:	641a      	str	r2, [r3, #64]	; 0x40
 800316e:	4770      	bx	lr
 8003170:	4a09      	ldr	r2, [pc, #36]	; (8003198 <can_free+0x4c>)
 8003172:	4293      	cmp	r3, r2
 8003174:	d1fb      	bne.n	800316e <can_free+0x22>
 8003176:	4b07      	ldr	r3, [pc, #28]	; (8003194 <can_free+0x48>)
 8003178:	6a1a      	ldr	r2, [r3, #32]
 800317a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800317e:	621a      	str	r2, [r3, #32]
 8003180:	6a1a      	ldr	r2, [r3, #32]
 8003182:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8003186:	621a      	str	r2, [r3, #32]
 8003188:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800318a:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800318e:	e7ed      	b.n	800316c <can_free+0x20>
 8003190:	40006400 	.word	0x40006400
 8003194:	40023800 	.word	0x40023800
 8003198:	40006800 	.word	0x40006800

0800319c <can_frequency>:
 800319c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800319e:	460d      	mov	r5, r1
 80031a0:	4604      	mov	r4, r0
 80031a2:	f001 fbbb 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 80031a6:	2318      	movs	r3, #24
 80031a8:	fbb0 f0f5 	udiv	r0, r0, r5
 80031ac:	2119      	movs	r1, #25
 80031ae:	fbb0 f3f3 	udiv	r3, r0, r3
 80031b2:	0886      	lsrs	r6, r0, #2
 80031b4:	b29b      	uxth	r3, r3
 80031b6:	42b3      	cmp	r3, r6
 80031b8:	d315      	bcc.n	80031e6 <can_frequency+0x4a>
 80031ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80031be:	2b00      	cmp	r3, #0
 80031c0:	6822      	ldr	r2, [r4, #0]
 80031c2:	dd1c      	ble.n	80031fe <can_frequency+0x62>
 80031c4:	6811      	ldr	r1, [r2, #0]
 80031c6:	f041 0101 	orr.w	r1, r1, #1
 80031ca:	6011      	str	r1, [r2, #0]
 80031cc:	6851      	ldr	r1, [r2, #4]
 80031ce:	07c9      	lsls	r1, r1, #31
 80031d0:	d5fc      	bpl.n	80031cc <can_frequency+0x30>
 80031d2:	61d3      	str	r3, [r2, #28]
 80031d4:	6813      	ldr	r3, [r2, #0]
 80031d6:	f023 0301 	bic.w	r3, r3, #1
 80031da:	6013      	str	r3, [r2, #0]
 80031dc:	6853      	ldr	r3, [r2, #4]
 80031de:	07db      	lsls	r3, r3, #31
 80031e0:	d4fc      	bmi.n	80031dc <can_frequency+0x40>
 80031e2:	2001      	movs	r0, #1
 80031e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031e6:	3301      	adds	r3, #1
 80031e8:	b29b      	uxth	r3, r3
 80031ea:	43df      	mvns	r7, r3
 80031ec:	fb03 1201 	mla	r2, r3, r1, r1
 80031f0:	2516      	movs	r5, #22
 80031f2:	4290      	cmp	r0, r2
 80031f4:	d005      	beq.n	8003202 <can_frequency+0x66>
 80031f6:	3d01      	subs	r5, #1
 80031f8:	443a      	add	r2, r7
 80031fa:	d1fa      	bne.n	80031f2 <can_frequency+0x56>
 80031fc:	e7db      	b.n	80031b6 <can_frequency+0x1a>
 80031fe:	2000      	movs	r0, #0
 8003200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003202:	4908      	ldr	r1, [pc, #32]	; (8003224 <can_frequency+0x88>)
 8003204:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 8003208:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 800320c:	6852      	ldr	r2, [r2, #4]
 800320e:	0409      	lsls	r1, r1, #16
 8003210:	0512      	lsls	r2, r2, #20
 8003212:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 8003216:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 800321a:	430a      	orrs	r2, r1
 800321c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003220:	4313      	orrs	r3, r2
 8003222:	e7cc      	b.n	80031be <can_frequency+0x22>
 8003224:	08007044 	.word	0x08007044

08003228 <can_write>:
 8003228:	b084      	sub	sp, #16
 800322a:	b530      	push	{r4, r5, lr}
 800322c:	ac04      	add	r4, sp, #16
 800322e:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8003232:	6804      	ldr	r4, [r0, #0]
 8003234:	f89d 201e 	ldrb.w	r2, [sp, #30]
 8003238:	68a3      	ldr	r3, [r4, #8]
 800323a:	0158      	lsls	r0, r3, #5
 800323c:	d43a      	bmi.n	80032b4 <can_write+0x8c>
 800323e:	68a3      	ldr	r3, [r4, #8]
 8003240:	011b      	lsls	r3, r3, #4
 8003242:	d439      	bmi.n	80032b8 <can_write+0x90>
 8003244:	68a0      	ldr	r0, [r4, #8]
 8003246:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 800324a:	d02f      	beq.n	80032ac <can_write+0x84>
 800324c:	2002      	movs	r0, #2
 800324e:	0100      	lsls	r0, r0, #4
 8003250:	1823      	adds	r3, r4, r0
 8003252:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003256:	f005 0501 	and.w	r5, r5, #1
 800325a:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 800325e:	f89d 501d 	ldrb.w	r5, [sp, #29]
 8003262:	bb5d      	cbnz	r5, 80032bc <can_write+0x94>
 8003264:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003268:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 800326c:	4329      	orrs	r1, r5
 800326e:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8003272:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 8003276:	f021 010f 	bic.w	r1, r1, #15
 800327a:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 800327e:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8003282:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8003286:	f001 010f 	and.w	r1, r1, #15
 800328a:	4311      	orrs	r1, r2
 800328c:	1822      	adds	r2, r4, r0
 800328e:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 8003292:	9905      	ldr	r1, [sp, #20]
 8003294:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 8003298:	9906      	ldr	r1, [sp, #24]
 800329a:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 800329e:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80032a2:	f042 0201 	orr.w	r2, r2, #1
 80032a6:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 80032aa:	2001      	movs	r0, #1
 80032ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80032b0:	b004      	add	sp, #16
 80032b2:	4770      	bx	lr
 80032b4:	2000      	movs	r0, #0
 80032b6:	e7ca      	b.n	800324e <can_write+0x26>
 80032b8:	2001      	movs	r0, #1
 80032ba:	e7c8      	b.n	800324e <can_write+0x26>
 80032bc:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 80032c0:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80032c4:	f041 0104 	orr.w	r1, r1, #4
 80032c8:	e7d0      	b.n	800326c <can_write+0x44>

080032ca <can_read>:
 80032ca:	b530      	push	{r4, r5, lr}
 80032cc:	6804      	ldr	r4, [r0, #0]
 80032ce:	68e0      	ldr	r0, [r4, #12]
 80032d0:	f010 0003 	ands.w	r0, r0, #3
 80032d4:	d03a      	beq.n	800334c <can_read+0x82>
 80032d6:	0113      	lsls	r3, r2, #4
 80032d8:	18e0      	adds	r0, r4, r3
 80032da:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80032de:	f3c5 0580 	ubfx	r5, r5, #2, #1
 80032e2:	734d      	strb	r5, [r1, #13]
 80032e4:	bb9d      	cbnz	r5, 800334e <can_read+0x84>
 80032e6:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80032ea:	0d6d      	lsrs	r5, r5, #21
 80032ec:	600d      	str	r5, [r1, #0]
 80032ee:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80032f2:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 80032f6:	4423      	add	r3, r4
 80032f8:	f000 000f 	and.w	r0, r0, #15
 80032fc:	7308      	strb	r0, [r1, #12]
 80032fe:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003302:	7108      	strb	r0, [r1, #4]
 8003304:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003308:	0a00      	lsrs	r0, r0, #8
 800330a:	7148      	strb	r0, [r1, #5]
 800330c:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003310:	0c00      	lsrs	r0, r0, #16
 8003312:	7188      	strb	r0, [r1, #6]
 8003314:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003318:	0e00      	lsrs	r0, r0, #24
 800331a:	71c8      	strb	r0, [r1, #7]
 800331c:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8003320:	7208      	strb	r0, [r1, #8]
 8003322:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 8003326:	0a00      	lsrs	r0, r0, #8
 8003328:	7248      	strb	r0, [r1, #9]
 800332a:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 800332e:	0c00      	lsrs	r0, r0, #16
 8003330:	7288      	strb	r0, [r1, #10]
 8003332:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003336:	f3c5 0540 	ubfx	r5, r5, #1, #1
 800333a:	0e1b      	lsrs	r3, r3, #24
 800333c:	738d      	strb	r5, [r1, #14]
 800333e:	72cb      	strb	r3, [r1, #11]
 8003340:	b94a      	cbnz	r2, 8003356 <can_read+0x8c>
 8003342:	68e3      	ldr	r3, [r4, #12]
 8003344:	f043 0320 	orr.w	r3, r3, #32
 8003348:	60e3      	str	r3, [r4, #12]
 800334a:	2001      	movs	r0, #1
 800334c:	bd30      	pop	{r4, r5, pc}
 800334e:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003352:	08ed      	lsrs	r5, r5, #3
 8003354:	e7ca      	b.n	80032ec <can_read+0x22>
 8003356:	6923      	ldr	r3, [r4, #16]
 8003358:	f043 0320 	orr.w	r3, r3, #32
 800335c:	6123      	str	r3, [r4, #16]
 800335e:	e7f4      	b.n	800334a <can_read+0x80>

08003360 <can_filter>:
 8003360:	b530      	push	{r4, r5, lr}
 8003362:	b08b      	sub	sp, #44	; 0x2c
 8003364:	2b01      	cmp	r3, #1
 8003366:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003368:	d82b      	bhi.n	80033c2 <can_filter+0x62>
 800336a:	6805      	ldr	r5, [r0, #0]
 800336c:	4816      	ldr	r0, [pc, #88]	; (80033c8 <can_filter+0x68>)
 800336e:	9405      	str	r4, [sp, #20]
 8003370:	6005      	str	r5, [r0, #0]
 8003372:	2000      	movs	r0, #0
 8003374:	9006      	str	r0, [sp, #24]
 8003376:	2001      	movs	r0, #1
 8003378:	9007      	str	r0, [sp, #28]
 800337a:	b99b      	cbnz	r3, 80033a4 <can_filter+0x44>
 800337c:	0149      	lsls	r1, r1, #5
 800337e:	e88d 000a 	stmia.w	sp, {r1, r3}
 8003382:	0152      	lsls	r2, r2, #5
 8003384:	9202      	str	r2, [sp, #8]
 8003386:	9303      	str	r3, [sp, #12]
 8003388:	2300      	movs	r3, #0
 800338a:	9304      	str	r3, [sp, #16]
 800338c:	2301      	movs	r3, #1
 800338e:	9308      	str	r3, [sp, #32]
 8003390:	4669      	mov	r1, sp
 8003392:	f104 030e 	add.w	r3, r4, #14
 8003396:	480c      	ldr	r0, [pc, #48]	; (80033c8 <can_filter+0x68>)
 8003398:	9309      	str	r3, [sp, #36]	; 0x24
 800339a:	f000 fea5 	bl	80040e8 <HAL_CAN_ConfigFilter>
 800339e:	4620      	mov	r0, r4
 80033a0:	b00b      	add	sp, #44	; 0x2c
 80033a2:	bd30      	pop	{r4, r5, pc}
 80033a4:	0b4b      	lsrs	r3, r1, #13
 80033a6:	9300      	str	r3, [sp, #0]
 80033a8:	00c9      	lsls	r1, r1, #3
 80033aa:	0b53      	lsrs	r3, r2, #13
 80033ac:	00d2      	lsls	r2, r2, #3
 80033ae:	b2c9      	uxtb	r1, r1
 80033b0:	b2d2      	uxtb	r2, r2
 80033b2:	f041 0104 	orr.w	r1, r1, #4
 80033b6:	f042 0204 	orr.w	r2, r2, #4
 80033ba:	9101      	str	r1, [sp, #4]
 80033bc:	9302      	str	r3, [sp, #8]
 80033be:	9203      	str	r2, [sp, #12]
 80033c0:	e7e2      	b.n	8003388 <can_filter+0x28>
 80033c2:	2000      	movs	r0, #0
 80033c4:	e7ec      	b.n	80033a0 <can_filter+0x40>
 80033c6:	bf00      	nop
 80033c8:	20001a88 	.word	0x20001a88

080033cc <can_init>:
 80033cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033ce:	460e      	mov	r6, r1
 80033d0:	b087      	sub	sp, #28
 80033d2:	4604      	mov	r4, r0
 80033d4:	493e      	ldr	r1, [pc, #248]	; (80034d0 <can_init+0x104>)
 80033d6:	4630      	mov	r0, r6
 80033d8:	4615      	mov	r5, r2
 80033da:	f7fe f927 	bl	800162c <pinmap_peripheral>
 80033de:	493d      	ldr	r1, [pc, #244]	; (80034d4 <can_init+0x108>)
 80033e0:	4607      	mov	r7, r0
 80033e2:	4628      	mov	r0, r5
 80033e4:	f7fe f922 	bl	800162c <pinmap_peripheral>
 80033e8:	4601      	mov	r1, r0
 80033ea:	4638      	mov	r0, r7
 80033ec:	f7fe f900 	bl	80015f0 <pinmap_merge>
 80033f0:	4b39      	ldr	r3, [pc, #228]	; (80034d8 <can_init+0x10c>)
 80033f2:	6020      	str	r0, [r4, #0]
 80033f4:	4298      	cmp	r0, r3
 80033f6:	d14e      	bne.n	8003496 <can_init+0xca>
 80033f8:	f503 33ea 	add.w	r3, r3, #119808	; 0x1d400
 80033fc:	2100      	movs	r1, #0
 80033fe:	9103      	str	r1, [sp, #12]
 8003400:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003402:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8003406:	641a      	str	r2, [r3, #64]	; 0x40
 8003408:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800340a:	6061      	str	r1, [r4, #4]
 800340c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003410:	9303      	str	r3, [sp, #12]
 8003412:	9b03      	ldr	r3, [sp, #12]
 8003414:	492e      	ldr	r1, [pc, #184]	; (80034d0 <can_init+0x104>)
 8003416:	4630      	mov	r0, r6
 8003418:	f7fe f8cc 	bl	80015b4 <pinmap_pinout>
 800341c:	492d      	ldr	r1, [pc, #180]	; (80034d4 <can_init+0x108>)
 800341e:	4628      	mov	r0, r5
 8003420:	f7fe f8c8 	bl	80015b4 <pinmap_pinout>
 8003424:	1c72      	adds	r2, r6, #1
 8003426:	d003      	beq.n	8003430 <can_init+0x64>
 8003428:	2101      	movs	r1, #1
 800342a:	4630      	mov	r0, r6
 800342c:	f000 f9be 	bl	80037ac <pin_mode>
 8003430:	1c6b      	adds	r3, r5, #1
 8003432:	d003      	beq.n	800343c <can_init+0x70>
 8003434:	2101      	movs	r1, #1
 8003436:	4628      	mov	r0, r5
 8003438:	f000 f9b8 	bl	80037ac <pin_mode>
 800343c:	4827      	ldr	r0, [pc, #156]	; (80034dc <can_init+0x110>)
 800343e:	6823      	ldr	r3, [r4, #0]
 8003440:	6003      	str	r3, [r0, #0]
 8003442:	2300      	movs	r3, #0
 8003444:	6183      	str	r3, [r0, #24]
 8003446:	61c3      	str	r3, [r0, #28]
 8003448:	6203      	str	r3, [r0, #32]
 800344a:	6243      	str	r3, [r0, #36]	; 0x24
 800344c:	6283      	str	r3, [r0, #40]	; 0x28
 800344e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003450:	6083      	str	r3, [r0, #8]
 8003452:	60c3      	str	r3, [r0, #12]
 8003454:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8003458:	6103      	str	r3, [r0, #16]
 800345a:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 800345e:	6143      	str	r3, [r0, #20]
 8003460:	2302      	movs	r3, #2
 8003462:	6043      	str	r3, [r0, #4]
 8003464:	f000 fec1 	bl	80041ea <HAL_CAN_Init>
 8003468:	b110      	cbz	r0, 8003470 <can_init+0xa4>
 800346a:	481d      	ldr	r0, [pc, #116]	; (80034e0 <can_init+0x114>)
 800346c:	f7fe f91e 	bl	80016ac <error>
 8003470:	491c      	ldr	r1, [pc, #112]	; (80034e4 <can_init+0x118>)
 8003472:	4620      	mov	r0, r4
 8003474:	f7ff fe92 	bl	800319c <can_frequency>
 8003478:	4a17      	ldr	r2, [pc, #92]	; (80034d8 <can_init+0x10c>)
 800347a:	6823      	ldr	r3, [r4, #0]
 800347c:	4293      	cmp	r3, r2
 800347e:	bf14      	ite	ne
 8003480:	230e      	movne	r3, #14
 8003482:	2300      	moveq	r3, #0
 8003484:	9300      	str	r3, [sp, #0]
 8003486:	2300      	movs	r3, #0
 8003488:	461a      	mov	r2, r3
 800348a:	4619      	mov	r1, r3
 800348c:	4620      	mov	r0, r4
 800348e:	f7ff ff67 	bl	8003360 <can_filter>
 8003492:	b007      	add	sp, #28
 8003494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003496:	4b14      	ldr	r3, [pc, #80]	; (80034e8 <can_init+0x11c>)
 8003498:	4298      	cmp	r0, r3
 800349a:	d1fa      	bne.n	8003492 <can_init+0xc6>
 800349c:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
 80034a0:	2100      	movs	r1, #0
 80034a2:	9104      	str	r1, [sp, #16]
 80034a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80034a6:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80034aa:	641a      	str	r2, [r3, #64]	; 0x40
 80034ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80034ae:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 80034b2:	9204      	str	r2, [sp, #16]
 80034b4:	9a04      	ldr	r2, [sp, #16]
 80034b6:	9105      	str	r1, [sp, #20]
 80034b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80034ba:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80034be:	641a      	str	r2, [r3, #64]	; 0x40
 80034c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034c2:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80034c6:	9305      	str	r3, [sp, #20]
 80034c8:	9b05      	ldr	r3, [sp, #20]
 80034ca:	2301      	movs	r3, #1
 80034cc:	6063      	str	r3, [r4, #4]
 80034ce:	e7a1      	b.n	8003414 <can_init+0x48>
 80034d0:	08007154 	.word	0x08007154
 80034d4:	08007190 	.word	0x08007190
 80034d8:	40006400 	.word	0x40006400
 80034dc:	20001a88 	.word	0x20001a88
 80034e0:	0800702d 	.word	0x0800702d
 80034e4:	000186a0 	.word	0x000186a0
 80034e8:	40006800 	.word	0x40006800

080034ec <can_irq_set>:
 80034ec:	6800      	ldr	r0, [r0, #0]
 80034ee:	4b32      	ldr	r3, [pc, #200]	; (80035b8 <can_irq_set+0xcc>)
 80034f0:	4298      	cmp	r0, r3
 80034f2:	b510      	push	{r4, lr}
 80034f4:	d12d      	bne.n	8003552 <can_irq_set+0x66>
 80034f6:	2907      	cmp	r1, #7
 80034f8:	d819      	bhi.n	800352e <can_irq_set+0x42>
 80034fa:	e8df f001 	tbb	[pc, r1]
 80034fe:	1904      	.short	0x1904
 8003500:	2218181d 	.word	0x2218181d
 8003504:	2618      	.short	0x2618
 8003506:	492d      	ldr	r1, [pc, #180]	; (80035bc <can_irq_set+0xd0>)
 8003508:	2302      	movs	r3, #2
 800350a:	2414      	movs	r4, #20
 800350c:	2a00      	cmp	r2, #0
 800350e:	d04e      	beq.n	80035ae <can_irq_set+0xc2>
 8003510:	6942      	ldr	r2, [r0, #20]
 8003512:	4313      	orrs	r3, r2
 8003514:	6143      	str	r3, [r0, #20]
 8003516:	4620      	mov	r0, r4
 8003518:	f000 fcea 	bl	8003ef0 <__NVIC_SetVector>
 800351c:	0962      	lsrs	r2, r4, #5
 800351e:	2301      	movs	r3, #1
 8003520:	f004 041f 	and.w	r4, r4, #31
 8003524:	fa03 f404 	lsl.w	r4, r3, r4
 8003528:	4b25      	ldr	r3, [pc, #148]	; (80035c0 <can_irq_set+0xd4>)
 800352a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800352e:	bd10      	pop	{r4, pc}
 8003530:	4924      	ldr	r1, [pc, #144]	; (80035c4 <can_irq_set+0xd8>)
 8003532:	2301      	movs	r3, #1
 8003534:	2413      	movs	r4, #19
 8003536:	e7e9      	b.n	800350c <can_irq_set+0x20>
 8003538:	4923      	ldr	r1, [pc, #140]	; (80035c8 <can_irq_set+0xdc>)
 800353a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800353e:	2416      	movs	r4, #22
 8003540:	e7e4      	b.n	800350c <can_irq_set+0x20>
 8003542:	4921      	ldr	r1, [pc, #132]	; (80035c8 <can_irq_set+0xdc>)
 8003544:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003548:	e7f9      	b.n	800353e <can_irq_set+0x52>
 800354a:	491f      	ldr	r1, [pc, #124]	; (80035c8 <can_irq_set+0xdc>)
 800354c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003550:	e7f5      	b.n	800353e <can_irq_set+0x52>
 8003552:	4b1e      	ldr	r3, [pc, #120]	; (80035cc <can_irq_set+0xe0>)
 8003554:	4298      	cmp	r0, r3
 8003556:	d1ea      	bne.n	800352e <can_irq_set+0x42>
 8003558:	2907      	cmp	r1, #7
 800355a:	d8e8      	bhi.n	800352e <can_irq_set+0x42>
 800355c:	a301      	add	r3, pc, #4	; (adr r3, 8003564 <can_irq_set+0x78>)
 800355e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8003562:	bf00      	nop
 8003564:	08003585 	.word	0x08003585
 8003568:	0800358d 	.word	0x0800358d
 800356c:	08003595 	.word	0x08003595
 8003570:	0800352f 	.word	0x0800352f
 8003574:	0800352f 	.word	0x0800352f
 8003578:	0800359f 	.word	0x0800359f
 800357c:	0800352f 	.word	0x0800352f
 8003580:	080035a7 	.word	0x080035a7
 8003584:	4912      	ldr	r1, [pc, #72]	; (80035d0 <can_irq_set+0xe4>)
 8003586:	2302      	movs	r3, #2
 8003588:	2440      	movs	r4, #64	; 0x40
 800358a:	e7bf      	b.n	800350c <can_irq_set+0x20>
 800358c:	4911      	ldr	r1, [pc, #68]	; (80035d4 <can_irq_set+0xe8>)
 800358e:	2301      	movs	r3, #1
 8003590:	243f      	movs	r4, #63	; 0x3f
 8003592:	e7bb      	b.n	800350c <can_irq_set+0x20>
 8003594:	4910      	ldr	r1, [pc, #64]	; (80035d8 <can_irq_set+0xec>)
 8003596:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800359a:	2442      	movs	r4, #66	; 0x42
 800359c:	e7b6      	b.n	800350c <can_irq_set+0x20>
 800359e:	490e      	ldr	r1, [pc, #56]	; (80035d8 <can_irq_set+0xec>)
 80035a0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80035a4:	e7f9      	b.n	800359a <can_irq_set+0xae>
 80035a6:	490c      	ldr	r1, [pc, #48]	; (80035d8 <can_irq_set+0xec>)
 80035a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80035ac:	e7f5      	b.n	800359a <can_irq_set+0xae>
 80035ae:	6942      	ldr	r2, [r0, #20]
 80035b0:	ea22 0303 	bic.w	r3, r2, r3
 80035b4:	e7ae      	b.n	8003514 <can_irq_set+0x28>
 80035b6:	bf00      	nop
 80035b8:	40006400 	.word	0x40006400
 80035bc:	08003101 	.word	0x08003101
 80035c0:	e000e100 	.word	0xe000e100
 80035c4:	080030fd 	.word	0x080030fd
 80035c8:	080030f1 	.word	0x080030f1
 80035cc:	40006800 	.word	0x40006800
 80035d0:	08003115 	.word	0x08003115
 80035d4:	08003111 	.word	0x08003111
 80035d8:	08003105 	.word	0x08003105

080035dc <us_ticker_init>:
 80035dc:	4b05      	ldr	r3, [pc, #20]	; (80035f4 <us_ticker_init+0x18>)
 80035de:	6818      	ldr	r0, [r3, #0]
 80035e0:	b930      	cbnz	r0, 80035f0 <us_ticker_init+0x14>
 80035e2:	2201      	movs	r2, #1
 80035e4:	601a      	str	r2, [r3, #0]
 80035e6:	4b04      	ldr	r3, [pc, #16]	; (80035f8 <us_ticker_init+0x1c>)
 80035e8:	4a04      	ldr	r2, [pc, #16]	; (80035fc <us_ticker_init+0x20>)
 80035ea:	601a      	str	r2, [r3, #0]
 80035ec:	f7ff bb94 	b.w	8002d18 <HAL_InitTick>
 80035f0:	4770      	bx	lr
 80035f2:	bf00      	nop
 80035f4:	20001ad4 	.word	0x20001ad4
 80035f8:	200028d8 	.word	0x200028d8
 80035fc:	40000c00 	.word	0x40000c00

08003600 <us_ticker_read>:
 8003600:	b508      	push	{r3, lr}
 8003602:	4b04      	ldr	r3, [pc, #16]	; (8003614 <us_ticker_read+0x14>)
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	b90b      	cbnz	r3, 800360c <us_ticker_read+0xc>
 8003608:	f7ff ffe8 	bl	80035dc <us_ticker_init>
 800360c:	4b02      	ldr	r3, [pc, #8]	; (8003618 <us_ticker_read+0x18>)
 800360e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003610:	bd08      	pop	{r3, pc}
 8003612:	bf00      	nop
 8003614:	20001ad4 	.word	0x20001ad4
 8003618:	40000c00 	.word	0x40000c00

0800361c <us_ticker_set_interrupt>:
 800361c:	4b04      	ldr	r3, [pc, #16]	; (8003630 <us_ticker_set_interrupt+0x14>)
 800361e:	4a05      	ldr	r2, [pc, #20]	; (8003634 <us_ticker_set_interrupt+0x18>)
 8003620:	6013      	str	r3, [r2, #0]
 8003622:	6358      	str	r0, [r3, #52]	; 0x34
 8003624:	68da      	ldr	r2, [r3, #12]
 8003626:	f042 0202 	orr.w	r2, r2, #2
 800362a:	60da      	str	r2, [r3, #12]
 800362c:	4770      	bx	lr
 800362e:	bf00      	nop
 8003630:	40000c00 	.word	0x40000c00
 8003634:	200028d8 	.word	0x200028d8

08003638 <us_ticker_disable_interrupt>:
 8003638:	4b03      	ldr	r3, [pc, #12]	; (8003648 <us_ticker_disable_interrupt+0x10>)
 800363a:	4a04      	ldr	r2, [pc, #16]	; (800364c <us_ticker_disable_interrupt+0x14>)
 800363c:	6013      	str	r3, [r2, #0]
 800363e:	68da      	ldr	r2, [r3, #12]
 8003640:	f022 0202 	bic.w	r2, r2, #2
 8003644:	60da      	str	r2, [r3, #12]
 8003646:	4770      	bx	lr
 8003648:	40000c00 	.word	0x40000c00
 800364c:	200028d8 	.word	0x200028d8

08003650 <us_ticker_clear_interrupt>:
 8003650:	4a03      	ldr	r2, [pc, #12]	; (8003660 <us_ticker_clear_interrupt+0x10>)
 8003652:	4b04      	ldr	r3, [pc, #16]	; (8003664 <us_ticker_clear_interrupt+0x14>)
 8003654:	6013      	str	r3, [r2, #0]
 8003656:	f06f 0202 	mvn.w	r2, #2
 800365a:	611a      	str	r2, [r3, #16]
 800365c:	4770      	bx	lr
 800365e:	bf00      	nop
 8003660:	200028d8 	.word	0x200028d8
 8003664:	40000c00 	.word	0x40000c00

08003668 <LL_GPIO_SetPinPull>:
 8003668:	b530      	push	{r4, r5, lr}
 800366a:	68c3      	ldr	r3, [r0, #12]
 800366c:	fa91 f4a1 	rbit	r4, r1
 8003670:	fab4 f484 	clz	r4, r4
 8003674:	fa91 f1a1 	rbit	r1, r1
 8003678:	2503      	movs	r5, #3
 800367a:	fab1 f181 	clz	r1, r1
 800367e:	0064      	lsls	r4, r4, #1
 8003680:	fa05 f404 	lsl.w	r4, r5, r4
 8003684:	0049      	lsls	r1, r1, #1
 8003686:	ea23 0304 	bic.w	r3, r3, r4
 800368a:	fa02 f101 	lsl.w	r1, r2, r1
 800368e:	4319      	orrs	r1, r3
 8003690:	60c1      	str	r1, [r0, #12]
 8003692:	bd30      	pop	{r4, r5, pc}

08003694 <stm_pin_PullConfig>:
 8003694:	2a01      	cmp	r2, #1
 8003696:	d002      	beq.n	800369e <stm_pin_PullConfig+0xa>
 8003698:	2a02      	cmp	r2, #2
 800369a:	bf18      	it	ne
 800369c:	2200      	movne	r2, #0
 800369e:	f7ff bfe3 	b.w	8003668 <LL_GPIO_SetPinPull>
	...

080036a4 <pin_function>:
 80036a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036a8:	4b3f      	ldr	r3, [pc, #252]	; (80037a8 <pin_function+0x104>)
 80036aa:	f000 080f 	and.w	r8, r0, #15
 80036ae:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80036b2:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 80036b6:	460e      	mov	r6, r1
 80036b8:	f001 0507 	and.w	r5, r1, #7
 80036bc:	f7ff fba4 	bl	8002e08 <Set_GPIO_Clock>
 80036c0:	6883      	ldr	r3, [r0, #8]
 80036c2:	fa94 f1a4 	rbit	r1, r4
 80036c6:	fab1 f181 	clz	r1, r1
 80036ca:	fa94 f2a4 	rbit	r2, r4
 80036ce:	2703      	movs	r7, #3
 80036d0:	0049      	lsls	r1, r1, #1
 80036d2:	fa07 f101 	lsl.w	r1, r7, r1
 80036d6:	fab2 f282 	clz	r2, r2
 80036da:	ea23 0301 	bic.w	r3, r3, r1
 80036de:	0052      	lsls	r2, r2, #1
 80036e0:	2102      	movs	r1, #2
 80036e2:	fa01 f202 	lsl.w	r2, r1, r2
 80036e6:	4313      	orrs	r3, r2
 80036e8:	428d      	cmp	r5, r1
 80036ea:	6083      	str	r3, [r0, #8]
 80036ec:	d028      	beq.n	8003740 <pin_function+0x9c>
 80036ee:	42bd      	cmp	r5, r7
 80036f0:	d041      	beq.n	8003776 <pin_function+0xd2>
 80036f2:	2d01      	cmp	r5, #1
 80036f4:	d03f      	beq.n	8003776 <pin_function+0xd2>
 80036f6:	2300      	movs	r3, #0
 80036f8:	6802      	ldr	r2, [r0, #0]
 80036fa:	fa94 f7a4 	rbit	r7, r4
 80036fe:	fab7 f787 	clz	r7, r7
 8003702:	fa94 f1a4 	rbit	r1, r4
 8003706:	f04f 0e03 	mov.w	lr, #3
 800370a:	fab1 f181 	clz	r1, r1
 800370e:	007f      	lsls	r7, r7, #1
 8003710:	fa0e f707 	lsl.w	r7, lr, r7
 8003714:	0049      	lsls	r1, r1, #1
 8003716:	ea22 0207 	bic.w	r2, r2, r7
 800371a:	408b      	lsls	r3, r1
 800371c:	3d01      	subs	r5, #1
 800371e:	4313      	orrs	r3, r2
 8003720:	2d01      	cmp	r5, #1
 8003722:	6003      	str	r3, [r0, #0]
 8003724:	d805      	bhi.n	8003732 <pin_function+0x8e>
 8003726:	6843      	ldr	r3, [r0, #4]
 8003728:	0732      	lsls	r2, r6, #28
 800372a:	bf4c      	ite	mi
 800372c:	4323      	orrmi	r3, r4
 800372e:	43a3      	bicpl	r3, r4
 8003730:	6043      	str	r3, [r0, #4]
 8003732:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8003736:	4621      	mov	r1, r4
 8003738:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800373c:	f7ff bfaa 	b.w	8003694 <stm_pin_PullConfig>
 8003740:	f1b8 0f07 	cmp.w	r8, #7
 8003744:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003748:	d917      	bls.n	800377a <pin_function+0xd6>
 800374a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800374c:	0a23      	lsrs	r3, r4, #8
 800374e:	fa93 f1a3 	rbit	r1, r3
 8003752:	fab1 f181 	clz	r1, r1
 8003756:	fa93 f3a3 	rbit	r3, r3
 800375a:	f04f 0e0f 	mov.w	lr, #15
 800375e:	fab3 f383 	clz	r3, r3
 8003762:	0089      	lsls	r1, r1, #2
 8003764:	fa0e f101 	lsl.w	r1, lr, r1
 8003768:	009b      	lsls	r3, r3, #2
 800376a:	ea22 0201 	bic.w	r2, r2, r1
 800376e:	fa07 f303 	lsl.w	r3, r7, r3
 8003772:	4313      	orrs	r3, r2
 8003774:	6243      	str	r3, [r0, #36]	; 0x24
 8003776:	462b      	mov	r3, r5
 8003778:	e7be      	b.n	80036f8 <pin_function+0x54>
 800377a:	6a02      	ldr	r2, [r0, #32]
 800377c:	fa94 f3a4 	rbit	r3, r4
 8003780:	fab3 f383 	clz	r3, r3
 8003784:	fa94 f1a4 	rbit	r1, r4
 8003788:	f04f 0e0f 	mov.w	lr, #15
 800378c:	fab1 f181 	clz	r1, r1
 8003790:	009b      	lsls	r3, r3, #2
 8003792:	fa0e f303 	lsl.w	r3, lr, r3
 8003796:	0089      	lsls	r1, r1, #2
 8003798:	ea22 0203 	bic.w	r2, r2, r3
 800379c:	fa07 f301 	lsl.w	r3, r7, r1
 80037a0:	4313      	orrs	r3, r2
 80037a2:	6203      	str	r3, [r0, #32]
 80037a4:	e7e7      	b.n	8003776 <pin_function+0xd2>
 80037a6:	bf00      	nop
 80037a8:	080070fc 	.word	0x080070fc

080037ac <pin_mode>:
 80037ac:	b538      	push	{r3, r4, r5, lr}
 80037ae:	f000 020f 	and.w	r2, r0, #15
 80037b2:	4b19      	ldr	r3, [pc, #100]	; (8003818 <pin_mode+0x6c>)
 80037b4:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80037b8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80037bc:	460d      	mov	r5, r1
 80037be:	f7ff fb23 	bl	8002e08 <Set_GPIO_Clock>
 80037c2:	fb04 f204 	mul.w	r2, r4, r4
 80037c6:	6801      	ldr	r1, [r0, #0]
 80037c8:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80037cc:	400b      	ands	r3, r1
 80037ce:	fbb3 f3f2 	udiv	r3, r3, r2
 80037d2:	3b01      	subs	r3, #1
 80037d4:	2b01      	cmp	r3, #1
 80037d6:	d805      	bhi.n	80037e4 <pin_mode+0x38>
 80037d8:	1eeb      	subs	r3, r5, #3
 80037da:	2b02      	cmp	r3, #2
 80037dc:	6843      	ldr	r3, [r0, #4]
 80037de:	d809      	bhi.n	80037f4 <pin_mode+0x48>
 80037e0:	4323      	orrs	r3, r4
 80037e2:	6043      	str	r3, [r0, #4]
 80037e4:	2d03      	cmp	r5, #3
 80037e6:	d108      	bne.n	80037fa <pin_mode+0x4e>
 80037e8:	2201      	movs	r2, #1
 80037ea:	4621      	mov	r1, r4
 80037ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80037f0:	f7ff bf50 	b.w	8003694 <stm_pin_PullConfig>
 80037f4:	ea23 0304 	bic.w	r3, r3, r4
 80037f8:	6043      	str	r3, [r0, #4]
 80037fa:	2d01      	cmp	r5, #1
 80037fc:	d0f4      	beq.n	80037e8 <pin_mode+0x3c>
 80037fe:	2d05      	cmp	r5, #5
 8003800:	d001      	beq.n	8003806 <pin_mode+0x5a>
 8003802:	2d02      	cmp	r5, #2
 8003804:	d101      	bne.n	800380a <pin_mode+0x5e>
 8003806:	2202      	movs	r2, #2
 8003808:	e7ef      	b.n	80037ea <pin_mode+0x3e>
 800380a:	4621      	mov	r1, r4
 800380c:	2200      	movs	r2, #0
 800380e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003812:	f7ff bf29 	b.w	8003668 <LL_GPIO_SetPinPull>
 8003816:	bf00      	nop
 8003818:	080070fc 	.word	0x080070fc

0800381c <__NVIC_DisableIRQ>:
 800381c:	0943      	lsrs	r3, r0, #5
 800381e:	2201      	movs	r2, #1
 8003820:	f000 001f 	and.w	r0, r0, #31
 8003824:	fa02 f000 	lsl.w	r0, r2, r0
 8003828:	3320      	adds	r3, #32
 800382a:	4a04      	ldr	r2, [pc, #16]	; (800383c <__NVIC_DisableIRQ+0x20>)
 800382c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003830:	f3bf 8f4f 	dsb	sy
 8003834:	f3bf 8f6f 	isb	sy
 8003838:	4770      	bx	lr
 800383a:	bf00      	nop
 800383c:	e000e100 	.word	0xe000e100

08003840 <init_uart>:
 8003840:	6842      	ldr	r2, [r0, #4]
 8003842:	4916      	ldr	r1, [pc, #88]	; (800389c <init_uart+0x5c>)
 8003844:	0192      	lsls	r2, r2, #6
 8003846:	b510      	push	{r4, lr}
 8003848:	188b      	adds	r3, r1, r2
 800384a:	6804      	ldr	r4, [r0, #0]
 800384c:	508c      	str	r4, [r1, r2]
 800384e:	6882      	ldr	r2, [r0, #8]
 8003850:	605a      	str	r2, [r3, #4]
 8003852:	68c2      	ldr	r2, [r0, #12]
 8003854:	609a      	str	r2, [r3, #8]
 8003856:	6902      	ldr	r2, [r0, #16]
 8003858:	60da      	str	r2, [r3, #12]
 800385a:	6942      	ldr	r2, [r0, #20]
 800385c:	611a      	str	r2, [r3, #16]
 800385e:	6a02      	ldr	r2, [r0, #32]
 8003860:	619a      	str	r2, [r3, #24]
 8003862:	2200      	movs	r2, #0
 8003864:	61da      	str	r2, [r3, #28]
 8003866:	84da      	strh	r2, [r3, #38]	; 0x26
 8003868:	849a      	strh	r2, [r3, #36]	; 0x24
 800386a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800386c:	859a      	strh	r2, [r3, #44]	; 0x2c
 800386e:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003872:	3201      	adds	r2, #1
 8003874:	d10a      	bne.n	800388c <init_uart+0x4c>
 8003876:	2208      	movs	r2, #8
 8003878:	615a      	str	r2, [r3, #20]
 800387a:	4618      	mov	r0, r3
 800387c:	f000 ff1d 	bl	80046ba <HAL_UART_Init>
 8003880:	b158      	cbz	r0, 800389a <init_uart+0x5a>
 8003882:	4807      	ldr	r0, [pc, #28]	; (80038a0 <init_uart+0x60>)
 8003884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003888:	f7fd bf10 	b.w	80016ac <error>
 800388c:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003890:	3201      	adds	r2, #1
 8003892:	bf0c      	ite	eq
 8003894:	2204      	moveq	r2, #4
 8003896:	220c      	movne	r2, #12
 8003898:	e7ee      	b.n	8003878 <init_uart+0x38>
 800389a:	bd10      	pop	{r4, pc}
 800389c:	20001b00 	.word	0x20001b00
 80038a0:	0800713c 	.word	0x0800713c

080038a4 <uart_irq>:
 80038a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80038a6:	4e19      	ldr	r6, [pc, #100]	; (800390c <uart_irq+0x68>)
 80038a8:	4607      	mov	r7, r0
 80038aa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80038ae:	2800      	cmp	r0, #0
 80038b0:	d02a      	beq.n	8003908 <uart_irq+0x64>
 80038b2:	4c17      	ldr	r4, [pc, #92]	; (8003910 <uart_irq+0x6c>)
 80038b4:	01bd      	lsls	r5, r7, #6
 80038b6:	5963      	ldr	r3, [r4, r5]
 80038b8:	681a      	ldr	r2, [r3, #0]
 80038ba:	0652      	lsls	r2, r2, #25
 80038bc:	d50a      	bpl.n	80038d4 <uart_irq+0x30>
 80038be:	68db      	ldr	r3, [r3, #12]
 80038c0:	0659      	lsls	r1, r3, #25
 80038c2:	d507      	bpl.n	80038d4 <uart_irq+0x30>
 80038c4:	4b13      	ldr	r3, [pc, #76]	; (8003914 <uart_irq+0x70>)
 80038c6:	2101      	movs	r1, #1
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	4798      	blx	r3
 80038cc:	5963      	ldr	r3, [r4, r5]
 80038ce:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80038d2:	601a      	str	r2, [r3, #0]
 80038d4:	5963      	ldr	r3, [r4, r5]
 80038d6:	681a      	ldr	r2, [r3, #0]
 80038d8:	0692      	lsls	r2, r2, #26
 80038da:	d50c      	bpl.n	80038f6 <uart_irq+0x52>
 80038dc:	68db      	ldr	r3, [r3, #12]
 80038de:	0698      	lsls	r0, r3, #26
 80038e0:	d509      	bpl.n	80038f6 <uart_irq+0x52>
 80038e2:	4b0c      	ldr	r3, [pc, #48]	; (8003914 <uart_irq+0x70>)
 80038e4:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	2100      	movs	r1, #0
 80038ec:	4798      	blx	r3
 80038ee:	5963      	ldr	r3, [r4, r5]
 80038f0:	f06f 0220 	mvn.w	r2, #32
 80038f4:	601a      	str	r2, [r3, #0]
 80038f6:	5963      	ldr	r3, [r4, r5]
 80038f8:	681a      	ldr	r2, [r3, #0]
 80038fa:	0711      	lsls	r1, r2, #28
 80038fc:	d504      	bpl.n	8003908 <uart_irq+0x64>
 80038fe:	695a      	ldr	r2, [r3, #20]
 8003900:	07d2      	lsls	r2, r2, #31
 8003902:	bf44      	itt	mi
 8003904:	685b      	ldrmi	r3, [r3, #4]
 8003906:	9301      	strmi	r3, [sp, #4]
 8003908:	b003      	add	sp, #12
 800390a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800390c:	20001adc 	.word	0x20001adc
 8003910:	20001b00 	.word	0x20001b00
 8003914:	20001ad8 	.word	0x20001ad8

08003918 <uart1_irq>:
 8003918:	2000      	movs	r0, #0
 800391a:	f7ff bfc3 	b.w	80038a4 <uart_irq>

0800391e <uart2_irq>:
 800391e:	2001      	movs	r0, #1
 8003920:	f7ff bfc0 	b.w	80038a4 <uart_irq>

08003924 <uart3_irq>:
 8003924:	2002      	movs	r0, #2
 8003926:	f7ff bfbd 	b.w	80038a4 <uart_irq>

0800392a <uart4_irq>:
 800392a:	2003      	movs	r0, #3
 800392c:	f7ff bfba 	b.w	80038a4 <uart_irq>

08003930 <uart5_irq>:
 8003930:	2004      	movs	r0, #4
 8003932:	f7ff bfb7 	b.w	80038a4 <uart_irq>

08003936 <uart6_irq>:
 8003936:	2005      	movs	r0, #5
 8003938:	f7ff bfb4 	b.w	80038a4 <uart_irq>

0800393c <serial_init>:
 800393c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800393e:	460e      	mov	r6, r1
 8003940:	b087      	sub	sp, #28
 8003942:	4604      	mov	r4, r0
 8003944:	496d      	ldr	r1, [pc, #436]	; (8003afc <serial_init+0x1c0>)
 8003946:	4630      	mov	r0, r6
 8003948:	4615      	mov	r5, r2
 800394a:	f7fd fe6f 	bl	800162c <pinmap_peripheral>
 800394e:	496c      	ldr	r1, [pc, #432]	; (8003b00 <serial_init+0x1c4>)
 8003950:	4607      	mov	r7, r0
 8003952:	4628      	mov	r0, r5
 8003954:	f7fd fe6a 	bl	800162c <pinmap_peripheral>
 8003958:	4601      	mov	r1, r0
 800395a:	4638      	mov	r0, r7
 800395c:	f7fd fe48 	bl	80015f0 <pinmap_merge>
 8003960:	4b68      	ldr	r3, [pc, #416]	; (8003b04 <serial_init+0x1c8>)
 8003962:	6020      	str	r0, [r4, #0]
 8003964:	4298      	cmp	r0, r3
 8003966:	f000 809c 	beq.w	8003aa2 <serial_init+0x166>
 800396a:	d836      	bhi.n	80039da <serial_init+0x9e>
 800396c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003970:	4298      	cmp	r0, r3
 8003972:	d069      	beq.n	8003a48 <serial_init+0x10c>
 8003974:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003978:	4298      	cmp	r0, r3
 800397a:	d07c      	beq.n	8003a76 <serial_init+0x13a>
 800397c:	495f      	ldr	r1, [pc, #380]	; (8003afc <serial_init+0x1c0>)
 800397e:	4630      	mov	r0, r6
 8003980:	f7fd fe18 	bl	80015b4 <pinmap_pinout>
 8003984:	495e      	ldr	r1, [pc, #376]	; (8003b00 <serial_init+0x1c4>)
 8003986:	4628      	mov	r0, r5
 8003988:	f7fd fe14 	bl	80015b4 <pinmap_pinout>
 800398c:	1c72      	adds	r2, r6, #1
 800398e:	d003      	beq.n	8003998 <serial_init+0x5c>
 8003990:	2101      	movs	r1, #1
 8003992:	4630      	mov	r0, r6
 8003994:	f7ff ff0a 	bl	80037ac <pin_mode>
 8003998:	1c6b      	adds	r3, r5, #1
 800399a:	d003      	beq.n	80039a4 <serial_init+0x68>
 800399c:	2101      	movs	r1, #1
 800399e:	4628      	mov	r0, r5
 80039a0:	f7ff ff04 	bl	80037ac <pin_mode>
 80039a4:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80039a8:	60a3      	str	r3, [r4, #8]
 80039aa:	2300      	movs	r3, #0
 80039ac:	60e3      	str	r3, [r4, #12]
 80039ae:	6123      	str	r3, [r4, #16]
 80039b0:	6163      	str	r3, [r4, #20]
 80039b2:	6223      	str	r3, [r4, #32]
 80039b4:	8326      	strh	r6, [r4, #24]
 80039b6:	8365      	strh	r5, [r4, #26]
 80039b8:	4620      	mov	r0, r4
 80039ba:	f7ff ff41 	bl	8003840 <init_uart>
 80039be:	6822      	ldr	r2, [r4, #0]
 80039c0:	4b51      	ldr	r3, [pc, #324]	; (8003b08 <serial_init+0x1cc>)
 80039c2:	429a      	cmp	r2, r3
 80039c4:	d107      	bne.n	80039d6 <serial_init+0x9a>
 80039c6:	4b51      	ldr	r3, [pc, #324]	; (8003b0c <serial_init+0x1d0>)
 80039c8:	4851      	ldr	r0, [pc, #324]	; (8003b10 <serial_init+0x1d4>)
 80039ca:	2201      	movs	r2, #1
 80039cc:	601a      	str	r2, [r3, #0]
 80039ce:	4621      	mov	r1, r4
 80039d0:	224c      	movs	r2, #76	; 0x4c
 80039d2:	f002 fc2d 	bl	8006230 <memcpy>
 80039d6:	b007      	add	sp, #28
 80039d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80039da:	4b4e      	ldr	r3, [pc, #312]	; (8003b14 <serial_init+0x1d8>)
 80039dc:	4298      	cmp	r0, r3
 80039de:	d01d      	beq.n	8003a1c <serial_init+0xe0>
 80039e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80039e4:	4298      	cmp	r0, r3
 80039e6:	d072      	beq.n	8003ace <serial_init+0x192>
 80039e8:	f5a3 4344 	sub.w	r3, r3, #50176	; 0xc400
 80039ec:	4298      	cmp	r0, r3
 80039ee:	d1c5      	bne.n	800397c <serial_init+0x40>
 80039f0:	4b49      	ldr	r3, [pc, #292]	; (8003b18 <serial_init+0x1dc>)
 80039f2:	6a1a      	ldr	r2, [r3, #32]
 80039f4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80039f8:	621a      	str	r2, [r3, #32]
 80039fa:	6a1a      	ldr	r2, [r3, #32]
 80039fc:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8003a00:	621a      	str	r2, [r3, #32]
 8003a02:	2200      	movs	r2, #0
 8003a04:	9204      	str	r2, [sp, #16]
 8003a06:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a08:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003a0c:	641a      	str	r2, [r3, #64]	; 0x40
 8003a0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a10:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003a14:	9304      	str	r3, [sp, #16]
 8003a16:	9b04      	ldr	r3, [sp, #16]
 8003a18:	2304      	movs	r3, #4
 8003a1a:	e02a      	b.n	8003a72 <serial_init+0x136>
 8003a1c:	4b3e      	ldr	r3, [pc, #248]	; (8003b18 <serial_init+0x1dc>)
 8003a1e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a20:	f042 0210 	orr.w	r2, r2, #16
 8003a24:	625a      	str	r2, [r3, #36]	; 0x24
 8003a26:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a28:	2100      	movs	r1, #0
 8003a2a:	f022 0210 	bic.w	r2, r2, #16
 8003a2e:	625a      	str	r2, [r3, #36]	; 0x24
 8003a30:	9100      	str	r1, [sp, #0]
 8003a32:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003a34:	f042 0210 	orr.w	r2, r2, #16
 8003a38:	645a      	str	r2, [r3, #68]	; 0x44
 8003a3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a3c:	6061      	str	r1, [r4, #4]
 8003a3e:	f003 0310 	and.w	r3, r3, #16
 8003a42:	9300      	str	r3, [sp, #0]
 8003a44:	9b00      	ldr	r3, [sp, #0]
 8003a46:	e799      	b.n	800397c <serial_init+0x40>
 8003a48:	4b33      	ldr	r3, [pc, #204]	; (8003b18 <serial_init+0x1dc>)
 8003a4a:	6a1a      	ldr	r2, [r3, #32]
 8003a4c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003a50:	621a      	str	r2, [r3, #32]
 8003a52:	6a1a      	ldr	r2, [r3, #32]
 8003a54:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003a58:	621a      	str	r2, [r3, #32]
 8003a5a:	2200      	movs	r2, #0
 8003a5c:	9201      	str	r2, [sp, #4]
 8003a5e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a60:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003a64:	641a      	str	r2, [r3, #64]	; 0x40
 8003a66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a68:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003a6c:	9301      	str	r3, [sp, #4]
 8003a6e:	9b01      	ldr	r3, [sp, #4]
 8003a70:	2301      	movs	r3, #1
 8003a72:	6063      	str	r3, [r4, #4]
 8003a74:	e782      	b.n	800397c <serial_init+0x40>
 8003a76:	4b28      	ldr	r3, [pc, #160]	; (8003b18 <serial_init+0x1dc>)
 8003a78:	6a1a      	ldr	r2, [r3, #32]
 8003a7a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003a7e:	621a      	str	r2, [r3, #32]
 8003a80:	6a1a      	ldr	r2, [r3, #32]
 8003a82:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003a86:	621a      	str	r2, [r3, #32]
 8003a88:	2200      	movs	r2, #0
 8003a8a:	9202      	str	r2, [sp, #8]
 8003a8c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a8e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003a92:	641a      	str	r2, [r3, #64]	; 0x40
 8003a94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a96:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003a9a:	9302      	str	r3, [sp, #8]
 8003a9c:	9b02      	ldr	r3, [sp, #8]
 8003a9e:	2302      	movs	r3, #2
 8003aa0:	e7e7      	b.n	8003a72 <serial_init+0x136>
 8003aa2:	4b1d      	ldr	r3, [pc, #116]	; (8003b18 <serial_init+0x1dc>)
 8003aa4:	6a1a      	ldr	r2, [r3, #32]
 8003aa6:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003aaa:	621a      	str	r2, [r3, #32]
 8003aac:	6a1a      	ldr	r2, [r3, #32]
 8003aae:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8003ab2:	621a      	str	r2, [r3, #32]
 8003ab4:	2200      	movs	r2, #0
 8003ab6:	9203      	str	r2, [sp, #12]
 8003ab8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003aba:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003abe:	641a      	str	r2, [r3, #64]	; 0x40
 8003ac0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ac2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003ac6:	9303      	str	r3, [sp, #12]
 8003ac8:	9b03      	ldr	r3, [sp, #12]
 8003aca:	2303      	movs	r3, #3
 8003acc:	e7d1      	b.n	8003a72 <serial_init+0x136>
 8003ace:	4b12      	ldr	r3, [pc, #72]	; (8003b18 <serial_init+0x1dc>)
 8003ad0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003ad2:	f042 0220 	orr.w	r2, r2, #32
 8003ad6:	625a      	str	r2, [r3, #36]	; 0x24
 8003ad8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003ada:	f022 0220 	bic.w	r2, r2, #32
 8003ade:	625a      	str	r2, [r3, #36]	; 0x24
 8003ae0:	2200      	movs	r2, #0
 8003ae2:	9205      	str	r2, [sp, #20]
 8003ae4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003ae6:	f042 0220 	orr.w	r2, r2, #32
 8003aea:	645a      	str	r2, [r3, #68]	; 0x44
 8003aec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003aee:	f003 0320 	and.w	r3, r3, #32
 8003af2:	9305      	str	r3, [sp, #20]
 8003af4:	9b05      	ldr	r3, [sp, #20]
 8003af6:	2305      	movs	r3, #5
 8003af8:	e7bb      	b.n	8003a72 <serial_init+0x136>
 8003afa:	bf00      	nop
 8003afc:	08007238 	.word	0x08007238
 8003b00:	080071cc 	.word	0x080071cc
 8003b04:	40004c00 	.word	0x40004c00
 8003b08:	40004400 	.word	0x40004400
 8003b0c:	20001afc 	.word	0x20001afc
 8003b10:	20002914 	.word	0x20002914
 8003b14:	40011000 	.word	0x40011000
 8003b18:	40023800 	.word	0x40023800

08003b1c <serial_baud>:
 8003b1c:	6081      	str	r1, [r0, #8]
 8003b1e:	f7ff be8f 	b.w	8003840 <init_uart>
	...

08003b24 <serial_irq_handler>:
 8003b24:	4b03      	ldr	r3, [pc, #12]	; (8003b34 <serial_irq_handler+0x10>)
 8003b26:	6019      	str	r1, [r3, #0]
 8003b28:	6841      	ldr	r1, [r0, #4]
 8003b2a:	4b03      	ldr	r3, [pc, #12]	; (8003b38 <serial_irq_handler+0x14>)
 8003b2c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003b30:	4770      	bx	lr
 8003b32:	bf00      	nop
 8003b34:	20001ad8 	.word	0x20001ad8
 8003b38:	20001adc 	.word	0x20001adc

08003b3c <serial_irq_set>:
 8003b3c:	b538      	push	{r3, r4, r5, lr}
 8003b3e:	6843      	ldr	r3, [r0, #4]
 8003b40:	460d      	mov	r5, r1
 8003b42:	2b05      	cmp	r3, #5
 8003b44:	d82b      	bhi.n	8003b9e <serial_irq_set+0x62>
 8003b46:	e8df f003 	tbb	[pc, r3]
 8003b4a:	1b03      	.short	0x1b03
 8003b4c:	2724211e 	.word	0x2724211e
 8003b50:	4921      	ldr	r1, [pc, #132]	; (8003bd8 <serial_irq_set+0x9c>)
 8003b52:	2425      	movs	r4, #37	; 0x25
 8003b54:	4821      	ldr	r0, [pc, #132]	; (8003bdc <serial_irq_set+0xa0>)
 8003b56:	019b      	lsls	r3, r3, #6
 8003b58:	b33a      	cbz	r2, 8003baa <serial_irq_set+0x6e>
 8003b5a:	58c2      	ldr	r2, [r0, r3]
 8003b5c:	68d3      	ldr	r3, [r2, #12]
 8003b5e:	bb0d      	cbnz	r5, 8003ba4 <serial_irq_set+0x68>
 8003b60:	f043 0320 	orr.w	r3, r3, #32
 8003b64:	60d3      	str	r3, [r2, #12]
 8003b66:	4620      	mov	r0, r4
 8003b68:	f000 f9c2 	bl	8003ef0 <__NVIC_SetVector>
 8003b6c:	0962      	lsrs	r2, r4, #5
 8003b6e:	2301      	movs	r3, #1
 8003b70:	f004 0417 	and.w	r4, r4, #23
 8003b74:	fa03 f404 	lsl.w	r4, r3, r4
 8003b78:	4b19      	ldr	r3, [pc, #100]	; (8003be0 <serial_irq_set+0xa4>)
 8003b7a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003b7e:	bd38      	pop	{r3, r4, r5, pc}
 8003b80:	4918      	ldr	r1, [pc, #96]	; (8003be4 <serial_irq_set+0xa8>)
 8003b82:	2426      	movs	r4, #38	; 0x26
 8003b84:	e7e6      	b.n	8003b54 <serial_irq_set+0x18>
 8003b86:	4918      	ldr	r1, [pc, #96]	; (8003be8 <serial_irq_set+0xac>)
 8003b88:	2427      	movs	r4, #39	; 0x27
 8003b8a:	e7e3      	b.n	8003b54 <serial_irq_set+0x18>
 8003b8c:	4917      	ldr	r1, [pc, #92]	; (8003bec <serial_irq_set+0xb0>)
 8003b8e:	2434      	movs	r4, #52	; 0x34
 8003b90:	e7e0      	b.n	8003b54 <serial_irq_set+0x18>
 8003b92:	4917      	ldr	r1, [pc, #92]	; (8003bf0 <serial_irq_set+0xb4>)
 8003b94:	2435      	movs	r4, #53	; 0x35
 8003b96:	e7dd      	b.n	8003b54 <serial_irq_set+0x18>
 8003b98:	4916      	ldr	r1, [pc, #88]	; (8003bf4 <serial_irq_set+0xb8>)
 8003b9a:	2447      	movs	r4, #71	; 0x47
 8003b9c:	e7da      	b.n	8003b54 <serial_irq_set+0x18>
 8003b9e:	2100      	movs	r1, #0
 8003ba0:	460c      	mov	r4, r1
 8003ba2:	e7d7      	b.n	8003b54 <serial_irq_set+0x18>
 8003ba4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ba8:	e7dc      	b.n	8003b64 <serial_irq_set+0x28>
 8003baa:	58c3      	ldr	r3, [r0, r3]
 8003bac:	68da      	ldr	r2, [r3, #12]
 8003bae:	b935      	cbnz	r5, 8003bbe <serial_irq_set+0x82>
 8003bb0:	f022 0220 	bic.w	r2, r2, #32
 8003bb4:	60da      	str	r2, [r3, #12]
 8003bb6:	68db      	ldr	r3, [r3, #12]
 8003bb8:	061a      	lsls	r2, r3, #24
 8003bba:	d506      	bpl.n	8003bca <serial_irq_set+0x8e>
 8003bbc:	bd38      	pop	{r3, r4, r5, pc}
 8003bbe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003bc2:	60da      	str	r2, [r3, #12]
 8003bc4:	68db      	ldr	r3, [r3, #12]
 8003bc6:	069b      	lsls	r3, r3, #26
 8003bc8:	d404      	bmi.n	8003bd4 <serial_irq_set+0x98>
 8003bca:	4620      	mov	r0, r4
 8003bcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003bd0:	f7ff be24 	b.w	800381c <__NVIC_DisableIRQ>
 8003bd4:	bd38      	pop	{r3, r4, r5, pc}
 8003bd6:	bf00      	nop
 8003bd8:	08003919 	.word	0x08003919
 8003bdc:	20001b00 	.word	0x20001b00
 8003be0:	e000e100 	.word	0xe000e100
 8003be4:	0800391f 	.word	0x0800391f
 8003be8:	08003925 	.word	0x08003925
 8003bec:	0800392b 	.word	0x0800392b
 8003bf0:	08003931 	.word	0x08003931
 8003bf4:	08003937 	.word	0x08003937

08003bf8 <serial_readable>:
 8003bf8:	6843      	ldr	r3, [r0, #4]
 8003bfa:	4a03      	ldr	r2, [pc, #12]	; (8003c08 <serial_readable+0x10>)
 8003bfc:	019b      	lsls	r3, r3, #6
 8003bfe:	58d3      	ldr	r3, [r2, r3]
 8003c00:	6818      	ldr	r0, [r3, #0]
 8003c02:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003c06:	4770      	bx	lr
 8003c08:	20001b00 	.word	0x20001b00

08003c0c <serial_getc>:
 8003c0c:	6841      	ldr	r1, [r0, #4]
 8003c0e:	b510      	push	{r4, lr}
 8003c10:	4604      	mov	r4, r0
 8003c12:	4620      	mov	r0, r4
 8003c14:	f7ff fff0 	bl	8003bf8 <serial_readable>
 8003c18:	2800      	cmp	r0, #0
 8003c1a:	d0fa      	beq.n	8003c12 <serial_getc+0x6>
 8003c1c:	0189      	lsls	r1, r1, #6
 8003c1e:	4b03      	ldr	r3, [pc, #12]	; (8003c2c <serial_getc+0x20>)
 8003c20:	585b      	ldr	r3, [r3, r1]
 8003c22:	6858      	ldr	r0, [r3, #4]
 8003c24:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003c28:	bd10      	pop	{r4, pc}
 8003c2a:	bf00      	nop
 8003c2c:	20001b00 	.word	0x20001b00

08003c30 <serial_writable>:
 8003c30:	6843      	ldr	r3, [r0, #4]
 8003c32:	4a03      	ldr	r2, [pc, #12]	; (8003c40 <serial_writable+0x10>)
 8003c34:	019b      	lsls	r3, r3, #6
 8003c36:	58d3      	ldr	r3, [r2, r3]
 8003c38:	6818      	ldr	r0, [r3, #0]
 8003c3a:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003c3e:	4770      	bx	lr
 8003c40:	20001b00 	.word	0x20001b00

08003c44 <serial_putc>:
 8003c44:	b538      	push	{r3, r4, r5, lr}
 8003c46:	6844      	ldr	r4, [r0, #4]
 8003c48:	4605      	mov	r5, r0
 8003c4a:	4628      	mov	r0, r5
 8003c4c:	f7ff fff0 	bl	8003c30 <serial_writable>
 8003c50:	2800      	cmp	r0, #0
 8003c52:	d0fa      	beq.n	8003c4a <serial_putc+0x6>
 8003c54:	01a4      	lsls	r4, r4, #6
 8003c56:	4b03      	ldr	r3, [pc, #12]	; (8003c64 <serial_putc+0x20>)
 8003c58:	591b      	ldr	r3, [r3, r4]
 8003c5a:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003c5e:	6059      	str	r1, [r3, #4]
 8003c60:	bd38      	pop	{r3, r4, r5, pc}
 8003c62:	bf00      	nop
 8003c64:	20001b00 	.word	0x20001b00

08003c68 <mbed_sdk_init>:
 8003c68:	b508      	push	{r3, lr}
 8003c6a:	f000 f805 	bl	8003c78 <SystemCoreClockUpdate>
 8003c6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003c72:	f000 beed 	b.w	8004a50 <HAL_Init>
	...

08003c78 <SystemCoreClockUpdate>:
 8003c78:	4a17      	ldr	r2, [pc, #92]	; (8003cd8 <SystemCoreClockUpdate+0x60>)
 8003c7a:	4918      	ldr	r1, [pc, #96]	; (8003cdc <SystemCoreClockUpdate+0x64>)
 8003c7c:	6893      	ldr	r3, [r2, #8]
 8003c7e:	f003 030c 	and.w	r3, r3, #12
 8003c82:	2b04      	cmp	r3, #4
 8003c84:	b510      	push	{r4, lr}
 8003c86:	d00d      	beq.n	8003ca4 <SystemCoreClockUpdate+0x2c>
 8003c88:	2b08      	cmp	r3, #8
 8003c8a:	d00d      	beq.n	8003ca8 <SystemCoreClockUpdate+0x30>
 8003c8c:	4b14      	ldr	r3, [pc, #80]	; (8003ce0 <SystemCoreClockUpdate+0x68>)
 8003c8e:	600b      	str	r3, [r1, #0]
 8003c90:	4b11      	ldr	r3, [pc, #68]	; (8003cd8 <SystemCoreClockUpdate+0x60>)
 8003c92:	4a14      	ldr	r2, [pc, #80]	; (8003ce4 <SystemCoreClockUpdate+0x6c>)
 8003c94:	689b      	ldr	r3, [r3, #8]
 8003c96:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003c9a:	5cd2      	ldrb	r2, [r2, r3]
 8003c9c:	680b      	ldr	r3, [r1, #0]
 8003c9e:	40d3      	lsrs	r3, r2
 8003ca0:	600b      	str	r3, [r1, #0]
 8003ca2:	bd10      	pop	{r4, pc}
 8003ca4:	4b10      	ldr	r3, [pc, #64]	; (8003ce8 <SystemCoreClockUpdate+0x70>)
 8003ca6:	e7f2      	b.n	8003c8e <SystemCoreClockUpdate+0x16>
 8003ca8:	6854      	ldr	r4, [r2, #4]
 8003caa:	6850      	ldr	r0, [r2, #4]
 8003cac:	6852      	ldr	r2, [r2, #4]
 8003cae:	0263      	lsls	r3, r4, #9
 8003cb0:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8003cb4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8003cb8:	bf4c      	ite	mi
 8003cba:	4b0b      	ldrmi	r3, [pc, #44]	; (8003ce8 <SystemCoreClockUpdate+0x70>)
 8003cbc:	4b08      	ldrpl	r3, [pc, #32]	; (8003ce0 <SystemCoreClockUpdate+0x68>)
 8003cbe:	fbb3 f3f0 	udiv	r3, r3, r0
 8003cc2:	4353      	muls	r3, r2
 8003cc4:	4a04      	ldr	r2, [pc, #16]	; (8003cd8 <SystemCoreClockUpdate+0x60>)
 8003cc6:	6852      	ldr	r2, [r2, #4]
 8003cc8:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8003ccc:	3201      	adds	r2, #1
 8003cce:	0052      	lsls	r2, r2, #1
 8003cd0:	fbb3 f3f2 	udiv	r3, r3, r2
 8003cd4:	e7db      	b.n	8003c8e <SystemCoreClockUpdate+0x16>
 8003cd6:	bf00      	nop
 8003cd8:	40023800 	.word	0x40023800
 8003cdc:	200001e0 	.word	0x200001e0
 8003ce0:	00f42400 	.word	0x00f42400
 8003ce4:	080072a4 	.word	0x080072a4
 8003ce8:	007a1200 	.word	0x007a1200

08003cec <SetSysClock_PLL_HSE>:
 8003cec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cf0:	b0ac      	sub	sp, #176	; 0xb0
 8003cf2:	4b30      	ldr	r3, [pc, #192]	; (8003db4 <SetSysClock_PLL_HSE+0xc8>)
 8003cf4:	2100      	movs	r1, #0
 8003cf6:	9101      	str	r1, [sp, #4]
 8003cf8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003cfa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003cfe:	641a      	str	r2, [r3, #64]	; 0x40
 8003d00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d02:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003d06:	9301      	str	r3, [sp, #4]
 8003d08:	9b01      	ldr	r3, [sp, #4]
 8003d0a:	4b2b      	ldr	r3, [pc, #172]	; (8003db8 <SetSysClock_PLL_HSE+0xcc>)
 8003d0c:	9102      	str	r1, [sp, #8]
 8003d0e:	681a      	ldr	r2, [r3, #0]
 8003d10:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003d14:	601a      	str	r2, [r3, #0]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003d1c:	9302      	str	r3, [sp, #8]
 8003d1e:	9b02      	ldr	r3, [sp, #8]
 8003d20:	2301      	movs	r3, #1
 8003d22:	9308      	str	r3, [sp, #32]
 8003d24:	4607      	mov	r7, r0
 8003d26:	b9c0      	cbnz	r0, 8003d5a <SetSysClock_PLL_HSE+0x6e>
 8003d28:	9309      	str	r3, [sp, #36]	; 0x24
 8003d2a:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8003d2e:	2402      	movs	r4, #2
 8003d30:	f44f 0580 	mov.w	r5, #4194304	; 0x400000
 8003d34:	2608      	movs	r6, #8
 8003d36:	9311      	str	r3, [sp, #68]	; 0x44
 8003d38:	a808      	add	r0, sp, #32
 8003d3a:	2307      	movs	r3, #7
 8003d3c:	940e      	str	r4, [sp, #56]	; 0x38
 8003d3e:	950f      	str	r5, [sp, #60]	; 0x3c
 8003d40:	9610      	str	r6, [sp, #64]	; 0x40
 8003d42:	9412      	str	r4, [sp, #72]	; 0x48
 8003d44:	9313      	str	r3, [sp, #76]	; 0x4c
 8003d46:	9414      	str	r4, [sp, #80]	; 0x50
 8003d48:	f001 f998 	bl	800507c <HAL_RCC_OscConfig>
 8003d4c:	b918      	cbnz	r0, 8003d56 <SetSysClock_PLL_HSE+0x6a>
 8003d4e:	f000 fe33 	bl	80049b8 <HAL_PWREx_EnableOverDrive>
 8003d52:	4680      	mov	r8, r0
 8003d54:	b118      	cbz	r0, 8003d5e <SetSysClock_PLL_HSE+0x72>
 8003d56:	2000      	movs	r0, #0
 8003d58:	e028      	b.n	8003dac <SetSysClock_PLL_HSE+0xc0>
 8003d5a:	2305      	movs	r3, #5
 8003d5c:	e7e4      	b.n	8003d28 <SetSysClock_PLL_HSE+0x3c>
 8003d5e:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8003d62:	931c      	str	r3, [sp, #112]	; 0x70
 8003d64:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003d68:	9315      	str	r3, [sp, #84]	; 0x54
 8003d6a:	a815      	add	r0, sp, #84	; 0x54
 8003d6c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003d70:	932a      	str	r3, [sp, #168]	; 0xa8
 8003d72:	961b      	str	r6, [sp, #108]	; 0x6c
 8003d74:	961d      	str	r6, [sp, #116]	; 0x74
 8003d76:	f000 fe91 	bl	8004a9c <HAL_RCCEx_PeriphCLKConfig>
 8003d7a:	230f      	movs	r3, #15
 8003d7c:	9303      	str	r3, [sp, #12]
 8003d7e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8003d82:	9306      	str	r3, [sp, #24]
 8003d84:	2105      	movs	r1, #5
 8003d86:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003d8a:	a803      	add	r0, sp, #12
 8003d8c:	9404      	str	r4, [sp, #16]
 8003d8e:	f8cd 8014 	str.w	r8, [sp, #20]
 8003d92:	9307      	str	r3, [sp, #28]
 8003d94:	f000 fd0c 	bl	80047b0 <HAL_RCC_ClockConfig>
 8003d98:	4602      	mov	r2, r0
 8003d9a:	2800      	cmp	r0, #0
 8003d9c:	d1db      	bne.n	8003d56 <SetSysClock_PLL_HSE+0x6a>
 8003d9e:	b90f      	cbnz	r7, 8003da4 <SetSysClock_PLL_HSE+0xb8>
 8003da0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8003da4:	4629      	mov	r1, r5
 8003da6:	f000 fcb7 	bl	8004718 <HAL_RCC_MCOConfig>
 8003daa:	2001      	movs	r0, #1
 8003dac:	b02c      	add	sp, #176	; 0xb0
 8003dae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003db2:	bf00      	nop
 8003db4:	40023800 	.word	0x40023800
 8003db8:	40007000 	.word	0x40007000

08003dbc <SetSysClock_PLL_HSI>:
 8003dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003dbe:	b095      	sub	sp, #84	; 0x54
 8003dc0:	2400      	movs	r4, #0
 8003dc2:	4b23      	ldr	r3, [pc, #140]	; (8003e50 <SetSysClock_PLL_HSI+0x94>)
 8003dc4:	9400      	str	r4, [sp, #0]
 8003dc6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003dc8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003dcc:	641a      	str	r2, [r3, #64]	; 0x40
 8003dce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003dd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003dd4:	9300      	str	r3, [sp, #0]
 8003dd6:	9b00      	ldr	r3, [sp, #0]
 8003dd8:	4b1e      	ldr	r3, [pc, #120]	; (8003e54 <SetSysClock_PLL_HSI+0x98>)
 8003dda:	9401      	str	r4, [sp, #4]
 8003ddc:	681a      	ldr	r2, [r3, #0]
 8003dde:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003de2:	601a      	str	r2, [r3, #0]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	9408      	str	r4, [sp, #32]
 8003de8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003dec:	9301      	str	r3, [sp, #4]
 8003dee:	9b01      	ldr	r3, [sp, #4]
 8003df0:	940e      	str	r4, [sp, #56]	; 0x38
 8003df2:	2303      	movs	r3, #3
 8003df4:	9307      	str	r3, [sp, #28]
 8003df6:	2310      	movs	r3, #16
 8003df8:	930b      	str	r3, [sp, #44]	; 0x2c
 8003dfa:	930f      	str	r3, [sp, #60]	; 0x3c
 8003dfc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8003e00:	2602      	movs	r6, #2
 8003e02:	9310      	str	r3, [sp, #64]	; 0x40
 8003e04:	2701      	movs	r7, #1
 8003e06:	2306      	movs	r3, #6
 8003e08:	a807      	add	r0, sp, #28
 8003e0a:	970a      	str	r7, [sp, #40]	; 0x28
 8003e0c:	960d      	str	r6, [sp, #52]	; 0x34
 8003e0e:	9611      	str	r6, [sp, #68]	; 0x44
 8003e10:	9312      	str	r3, [sp, #72]	; 0x48
 8003e12:	f001 f933 	bl	800507c <HAL_RCC_OscConfig>
 8003e16:	4605      	mov	r5, r0
 8003e18:	b9b8      	cbnz	r0, 8003e4a <SetSysClock_PLL_HSI+0x8e>
 8003e1a:	230f      	movs	r3, #15
 8003e1c:	9302      	str	r3, [sp, #8]
 8003e1e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8003e22:	9004      	str	r0, [sp, #16]
 8003e24:	9305      	str	r3, [sp, #20]
 8003e26:	2105      	movs	r1, #5
 8003e28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003e2c:	a802      	add	r0, sp, #8
 8003e2e:	9603      	str	r6, [sp, #12]
 8003e30:	9306      	str	r3, [sp, #24]
 8003e32:	f000 fcbd 	bl	80047b0 <HAL_RCC_ClockConfig>
 8003e36:	4602      	mov	r2, r0
 8003e38:	b928      	cbnz	r0, 8003e46 <SetSysClock_PLL_HSI+0x8a>
 8003e3a:	4601      	mov	r1, r0
 8003e3c:	f000 fc6c 	bl	8004718 <HAL_RCC_MCOConfig>
 8003e40:	4638      	mov	r0, r7
 8003e42:	b015      	add	sp, #84	; 0x54
 8003e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e46:	4628      	mov	r0, r5
 8003e48:	e7fb      	b.n	8003e42 <SetSysClock_PLL_HSI+0x86>
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	e7f9      	b.n	8003e42 <SetSysClock_PLL_HSI+0x86>
 8003e4e:	bf00      	nop
 8003e50:	40023800 	.word	0x40023800
 8003e54:	40007000 	.word	0x40007000

08003e58 <SetSysClock>:
 8003e58:	b508      	push	{r3, lr}
 8003e5a:	2001      	movs	r0, #1
 8003e5c:	f7ff ff46 	bl	8003cec <SetSysClock_PLL_HSE>
 8003e60:	b918      	cbnz	r0, 8003e6a <SetSysClock+0x12>
 8003e62:	f7ff ffab 	bl	8003dbc <SetSysClock_PLL_HSI>
 8003e66:	b900      	cbnz	r0, 8003e6a <SetSysClock+0x12>
 8003e68:	e7fe      	b.n	8003e68 <SetSysClock+0x10>
 8003e6a:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003e6e:	2100      	movs	r1, #0
 8003e70:	2001      	movs	r0, #1
 8003e72:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003e76:	f000 bc4f 	b.w	8004718 <HAL_RCC_MCOConfig>
	...

08003e7c <SystemInit>:
 8003e7c:	4a17      	ldr	r2, [pc, #92]	; (8003edc <SystemInit+0x60>)
 8003e7e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003e82:	b510      	push	{r4, lr}
 8003e84:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003e88:	4c15      	ldr	r4, [pc, #84]	; (8003ee0 <SystemInit+0x64>)
 8003e8a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003e8e:	6823      	ldr	r3, [r4, #0]
 8003e90:	2100      	movs	r1, #0
 8003e92:	f043 0301 	orr.w	r3, r3, #1
 8003e96:	6023      	str	r3, [r4, #0]
 8003e98:	60a1      	str	r1, [r4, #8]
 8003e9a:	6823      	ldr	r3, [r4, #0]
 8003e9c:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003ea0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003ea4:	6023      	str	r3, [r4, #0]
 8003ea6:	4b0f      	ldr	r3, [pc, #60]	; (8003ee4 <SystemInit+0x68>)
 8003ea8:	6063      	str	r3, [r4, #4]
 8003eaa:	6823      	ldr	r3, [r4, #0]
 8003eac:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003eb0:	6023      	str	r3, [r4, #0]
 8003eb2:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003eb6:	60e1      	str	r1, [r4, #12]
 8003eb8:	6093      	str	r3, [r2, #8]
 8003eba:	4b0b      	ldr	r3, [pc, #44]	; (8003ee8 <SystemInit+0x6c>)
 8003ebc:	4a0b      	ldr	r2, [pc, #44]	; (8003eec <SystemInit+0x70>)
 8003ebe:	601a      	str	r2, [r3, #0]
 8003ec0:	f000 fdc6 	bl	8004a50 <HAL_Init>
 8003ec4:	f7ff ffc8 	bl	8003e58 <SetSysClock>
 8003ec8:	6a23      	ldr	r3, [r4, #32]
 8003eca:	f043 0308 	orr.w	r3, r3, #8
 8003ece:	6223      	str	r3, [r4, #32]
 8003ed0:	6a23      	ldr	r3, [r4, #32]
 8003ed2:	f023 0308 	bic.w	r3, r3, #8
 8003ed6:	6223      	str	r3, [r4, #32]
 8003ed8:	bd10      	pop	{r4, pc}
 8003eda:	bf00      	nop
 8003edc:	e000ed00 	.word	0xe000ed00
 8003ee0:	40023800 	.word	0x40023800
 8003ee4:	24003010 	.word	0x24003010
 8003ee8:	200001e0 	.word	0x200001e0
 8003eec:	0112a880 	.word	0x0112a880

08003ef0 <__NVIC_SetVector>:
 8003ef0:	b530      	push	{r4, r5, lr}
 8003ef2:	4c0c      	ldr	r4, [pc, #48]	; (8003f24 <__NVIC_SetVector+0x34>)
 8003ef4:	68a2      	ldr	r2, [r4, #8]
 8003ef6:	68a4      	ldr	r4, [r4, #8]
 8003ef8:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003efc:	4613      	mov	r3, r2
 8003efe:	d10c      	bne.n	8003f1a <__NVIC_SetVector+0x2a>
 8003f00:	1f13      	subs	r3, r2, #4
 8003f02:	4c09      	ldr	r4, [pc, #36]	; (8003f28 <__NVIC_SetVector+0x38>)
 8003f04:	4a09      	ldr	r2, [pc, #36]	; (8003f2c <__NVIC_SetVector+0x3c>)
 8003f06:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003f0a:	f842 5f04 	str.w	r5, [r2, #4]!
 8003f0e:	42a2      	cmp	r2, r4
 8003f10:	d1f9      	bne.n	8003f06 <__NVIC_SetVector+0x16>
 8003f12:	4a04      	ldr	r2, [pc, #16]	; (8003f24 <__NVIC_SetVector+0x34>)
 8003f14:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003f18:	6093      	str	r3, [r2, #8]
 8003f1a:	3010      	adds	r0, #16
 8003f1c:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003f20:	bd30      	pop	{r4, r5, pc}
 8003f22:	bf00      	nop
 8003f24:	e000ed00 	.word	0xe000ed00
 8003f28:	200001c0 	.word	0x200001c0
 8003f2c:	1ffffffc 	.word	0x1ffffffc

08003f30 <HAL_GPIO_Init>:
 8003f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8003f34:	b085      	sub	sp, #20
 8003f36:	680b      	ldr	r3, [r1, #0]
 8003f38:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80040dc <HAL_GPIO_Init+0x1ac>
 8003f3c:	4a65      	ldr	r2, [pc, #404]	; (80040d4 <HAL_GPIO_Init+0x1a4>)
 8003f3e:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 80040e0 <HAL_GPIO_Init+0x1b0>
 8003f42:	9301      	str	r3, [sp, #4]
 8003f44:	2300      	movs	r3, #0
 8003f46:	f04f 0e01 	mov.w	lr, #1
 8003f4a:	9c01      	ldr	r4, [sp, #4]
 8003f4c:	fa0e fe03 	lsl.w	lr, lr, r3
 8003f50:	ea0e 0604 	and.w	r6, lr, r4
 8003f54:	45b6      	cmp	lr, r6
 8003f56:	f040 80aa 	bne.w	80040ae <HAL_GPIO_Init+0x17e>
 8003f5a:	684c      	ldr	r4, [r1, #4]
 8003f5c:	f024 0710 	bic.w	r7, r4, #16
 8003f60:	2f02      	cmp	r7, #2
 8003f62:	d116      	bne.n	8003f92 <HAL_GPIO_Init+0x62>
 8003f64:	ea4f 0ad3 	mov.w	r10, r3, lsr #3
 8003f68:	eb00 0a8a 	add.w	r10, r0, r10, lsl #2
 8003f6c:	f003 0b07 	and.w	r11, r3, #7
 8003f70:	f8da 5020 	ldr.w	r5, [r10, #32]
 8003f74:	ea4f 0b8b 	mov.w	r11, r11, lsl #2
 8003f78:	f04f 0c0f 	mov.w	r12, #15
 8003f7c:	fa0c fc0b 	lsl.w	r12, r12, r11
 8003f80:	ea25 0c0c 	bic.w	r12, r5, r12
 8003f84:	690d      	ldr	r5, [r1, #16]
 8003f86:	fa05 f50b 	lsl.w	r5, r5, r11
 8003f8a:	ea45 050c 	orr.w	r5, r5, r12
 8003f8e:	f8ca 5020 	str.w	r5, [r10, #32]
 8003f92:	ea4f 0a43 	mov.w	r10, r3, lsl #1
 8003f96:	2503      	movs	r5, #3
 8003f98:	f8d0 b000 	ldr.w	r11, [r0]
 8003f9c:	fa05 f50a 	lsl.w	r5, r5, r10
 8003fa0:	43ed      	mvns	r5, r5
 8003fa2:	f004 0c03 	and.w	r12, r4, #3
 8003fa6:	ea0b 0b05 	and.w	r11, r11, r5
 8003faa:	fa0c fc0a 	lsl.w	r12, r12, r10
 8003fae:	3f01      	subs	r7, #1
 8003fb0:	ea4c 0c0b 	orr.w	r12, r12, r11
 8003fb4:	2f01      	cmp	r7, #1
 8003fb6:	f8c0 c000 	str.w	r12, [r0]
 8003fba:	d811      	bhi.n	8003fe0 <HAL_GPIO_Init+0xb0>
 8003fbc:	6887      	ldr	r7, [r0, #8]
 8003fbe:	ea07 0b05 	and.w	r11, r7, r5
 8003fc2:	68cf      	ldr	r7, [r1, #12]
 8003fc4:	fa07 fc0a 	lsl.w	r12, r7, r10
 8003fc8:	ea4c 070b 	orr.w	r7, r12, r11
 8003fcc:	6087      	str	r7, [r0, #8]
 8003fce:	6847      	ldr	r7, [r0, #4]
 8003fd0:	ea27 0e0e 	bic.w	lr, r7, lr
 8003fd4:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8003fd8:	409f      	lsls	r7, r3
 8003fda:	ea47 070e 	orr.w	r7, r7, lr
 8003fde:	6047      	str	r7, [r0, #4]
 8003fe0:	68c7      	ldr	r7, [r0, #12]
 8003fe2:	403d      	ands	r5, r7
 8003fe4:	688f      	ldr	r7, [r1, #8]
 8003fe6:	fa07 f70a 	lsl.w	r7, r7, r10
 8003fea:	433d      	orrs	r5, r7
 8003fec:	60c5      	str	r5, [r0, #12]
 8003fee:	00e5      	lsls	r5, r4, #3
 8003ff0:	d55d      	bpl.n	80040ae <HAL_GPIO_Init+0x17e>
 8003ff2:	f04f 0b00 	mov.w	r11, #0
 8003ff6:	f8cd b00c 	str.w	r11, [sp, #12]
 8003ffa:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8003ffe:	4d36      	ldr	r5, [pc, #216]	; (80040d8 <HAL_GPIO_Init+0x1a8>)
 8004000:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004004:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004008:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800400c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004010:	9703      	str	r7, [sp, #12]
 8004012:	9f03      	ldr	r7, [sp, #12]
 8004014:	f023 0703 	bic.w	r7, r3, #3
 8004018:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800401c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8004020:	f003 0c03 	and.w	r12, r3, #3
 8004024:	f8d7 a008 	ldr.w	r10, [r7, #8]
 8004028:	ea4f 0c8c 	mov.w	r12, r12, lsl #2
 800402c:	f04f 0e0f 	mov.w	lr, #15
 8004030:	fa0e fe0c 	lsl.w	lr, lr, r12
 8004034:	42a8      	cmp	r0, r5
 8004036:	ea2a 0e0e 	bic.w	lr, r10, lr
 800403a:	d03f      	beq.n	80040bc <HAL_GPIO_Init+0x18c>
 800403c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004040:	42a8      	cmp	r0, r5
 8004042:	d03d      	beq.n	80040c0 <HAL_GPIO_Init+0x190>
 8004044:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004048:	42a8      	cmp	r0, r5
 800404a:	d03b      	beq.n	80040c4 <HAL_GPIO_Init+0x194>
 800404c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004050:	42a8      	cmp	r0, r5
 8004052:	d039      	beq.n	80040c8 <HAL_GPIO_Init+0x198>
 8004054:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004058:	42a8      	cmp	r0, r5
 800405a:	d037      	beq.n	80040cc <HAL_GPIO_Init+0x19c>
 800405c:	4548      	cmp	r0, r9
 800405e:	d037      	beq.n	80040d0 <HAL_GPIO_Init+0x1a0>
 8004060:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004064:	42a8      	cmp	r0, r5
 8004066:	bf14      	ite	ne
 8004068:	2508      	movne	r5, #8
 800406a:	2506      	moveq	r5, #6
 800406c:	fa05 f50c 	lsl.w	r5, r5, r12
 8004070:	ea45 050e 	orr.w	r5, r5, lr
 8004074:	60bd      	str	r5, [r7, #8]
 8004076:	6815      	ldr	r5, [r2, #0]
 8004078:	43f7      	mvns	r7, r6
 800407a:	f414 3f80 	tst.w	r4, #65536	; 0x10000
 800407e:	bf0c      	ite	eq
 8004080:	403d      	andeq	r5, r7
 8004082:	4335      	orrne	r5, r6
 8004084:	6015      	str	r5, [r2, #0]
 8004086:	6855      	ldr	r5, [r2, #4]
 8004088:	f414 3f00 	tst.w	r4, #131072	; 0x20000
 800408c:	bf0c      	ite	eq
 800408e:	403d      	andeq	r5, r7
 8004090:	4335      	orrne	r5, r6
 8004092:	6055      	str	r5, [r2, #4]
 8004094:	6895      	ldr	r5, [r2, #8]
 8004096:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
 800409a:	bf0c      	ite	eq
 800409c:	403d      	andeq	r5, r7
 800409e:	4335      	orrne	r5, r6
 80040a0:	6095      	str	r5, [r2, #8]
 80040a2:	68d5      	ldr	r5, [r2, #12]
 80040a4:	02a4      	lsls	r4, r4, #10
 80040a6:	bf54      	ite	pl
 80040a8:	403d      	andpl	r5, r7
 80040aa:	4335      	orrmi	r5, r6
 80040ac:	60d5      	str	r5, [r2, #12]
 80040ae:	3301      	adds	r3, #1
 80040b0:	2b10      	cmp	r3, #16
 80040b2:	f47f af48 	bne.w	8003f46 <HAL_GPIO_Init+0x16>
 80040b6:	b005      	add	sp, #20
 80040b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80040bc:	465d      	mov	r5, r11
 80040be:	e7d5      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040c0:	2501      	movs	r5, #1
 80040c2:	e7d3      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040c4:	2502      	movs	r5, #2
 80040c6:	e7d1      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040c8:	2503      	movs	r5, #3
 80040ca:	e7cf      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040cc:	2504      	movs	r5, #4
 80040ce:	e7cd      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040d0:	2505      	movs	r5, #5
 80040d2:	e7cb      	b.n	800406c <HAL_GPIO_Init+0x13c>
 80040d4:	40013c00 	.word	0x40013c00
 80040d8:	40020000 	.word	0x40020000
 80040dc:	40023800 	.word	0x40023800
 80040e0:	40021400 	.word	0x40021400

080040e4 <HAL_MspInit>:
 80040e4:	4770      	bx	lr
	...

080040e8 <HAL_CAN_ConfigFilter>:
 80040e8:	694a      	ldr	r2, [r1, #20]
 80040ea:	2301      	movs	r3, #1
 80040ec:	b530      	push	{r4, r5, lr}
 80040ee:	fa03 f502 	lsl.w	r5, r3, r2
 80040f2:	4b3c      	ldr	r3, [pc, #240]	; (80041e4 <HAL_CAN_ConfigFilter+0xfc>)
 80040f4:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 80040f8:	f040 0001 	orr.w	r0, r0, #1
 80040fc:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 8004100:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8004104:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8004108:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 800410c:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8004110:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8004112:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
 8004116:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 800411a:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
 800411e:	43ec      	mvns	r4, r5
 8004120:	4020      	ands	r0, r4
 8004122:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
 8004126:	69c8      	ldr	r0, [r1, #28]
 8004128:	2800      	cmp	r0, #0
 800412a:	d136      	bne.n	800419a <HAL_CAN_ConfigFilter+0xb2>
 800412c:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8004130:	4020      	ands	r0, r4
 8004132:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
 8004136:	00d2      	lsls	r2, r2, #3
 8004138:	68c8      	ldr	r0, [r1, #12]
 800413a:	888b      	ldrh	r3, [r1, #4]
 800413c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8004140:	f502 42c8 	add.w	r2, r2, #25600	; 0x6400
 8004144:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004148:	f8c2 3240 	str.w	r3, [r2, #576]	; 0x240
 800414c:	6888      	ldr	r0, [r1, #8]
 800414e:	880b      	ldrh	r3, [r1, #0]
 8004150:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004154:	f8c2 3244 	str.w	r3, [r2, #580]	; 0x244
 8004158:	698b      	ldr	r3, [r1, #24]
 800415a:	4822      	ldr	r0, [pc, #136]	; (80041e4 <HAL_CAN_ConfigFilter+0xfc>)
 800415c:	2b00      	cmp	r3, #0
 800415e:	d135      	bne.n	80041cc <HAL_CAN_ConfigFilter+0xe4>
 8004160:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 8004164:	4023      	ands	r3, r4
 8004166:	f8c0 3204 	str.w	r3, [r0, #516]	; 0x204
 800416a:	690b      	ldr	r3, [r1, #16]
 800416c:	4a1d      	ldr	r2, [pc, #116]	; (80041e4 <HAL_CAN_ConfigFilter+0xfc>)
 800416e:	bb8b      	cbnz	r3, 80041d4 <HAL_CAN_ConfigFilter+0xec>
 8004170:	f8d0 3214 	ldr.w	r3, [r0, #532]	; 0x214
 8004174:	401c      	ands	r4, r3
 8004176:	f8c0 4214 	str.w	r4, [r0, #532]	; 0x214
 800417a:	6a0b      	ldr	r3, [r1, #32]
 800417c:	2b01      	cmp	r3, #1
 800417e:	bf02      	ittt	eq
 8004180:	f8d2 321c 	ldreq.w	r3, [r2, #540]	; 0x21c
 8004184:	432b      	orreq	r3, r5
 8004186:	f8c2 321c 	streq.w	r3, [r2, #540]	; 0x21c
 800418a:	f8d2 3200 	ldr.w	r3, [r2, #512]	; 0x200
 800418e:	f023 0301 	bic.w	r3, r3, #1
 8004192:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
 8004196:	2000      	movs	r0, #0
 8004198:	bd30      	pop	{r4, r5, pc}
 800419a:	2801      	cmp	r0, #1
 800419c:	d1dc      	bne.n	8004158 <HAL_CAN_ConfigFilter+0x70>
 800419e:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 80041a2:	4328      	orrs	r0, r5
 80041a4:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
 80041a8:	680b      	ldr	r3, [r1, #0]
 80041aa:	8888      	ldrh	r0, [r1, #4]
 80041ac:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80041b0:	00d3      	lsls	r3, r2, #3
 80041b2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80041b6:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400
 80041ba:	898a      	ldrh	r2, [r1, #12]
 80041bc:	f8c3 0240 	str.w	r0, [r3, #576]	; 0x240
 80041c0:	6888      	ldr	r0, [r1, #8]
 80041c2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80041c6:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 80041ca:	e7c5      	b.n	8004158 <HAL_CAN_ConfigFilter+0x70>
 80041cc:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 80041d0:	432b      	orrs	r3, r5
 80041d2:	e7c8      	b.n	8004166 <HAL_CAN_ConfigFilter+0x7e>
 80041d4:	2b01      	cmp	r3, #1
 80041d6:	bf02      	ittt	eq
 80041d8:	f8d2 3214 	ldreq.w	r3, [r2, #532]	; 0x214
 80041dc:	432b      	orreq	r3, r5
 80041de:	f8c2 3214 	streq.w	r3, [r2, #532]	; 0x214
 80041e2:	e7ca      	b.n	800417a <HAL_CAN_ConfigFilter+0x92>
 80041e4:	40006400 	.word	0x40006400

080041e8 <HAL_CAN_MspInit>:
 80041e8:	4770      	bx	lr

080041ea <HAL_CAN_Init>:
 80041ea:	b570      	push	{r4, r5, r6, lr}
 80041ec:	4604      	mov	r4, r0
 80041ee:	2800      	cmp	r0, #0
 80041f0:	f000 808f 	beq.w	8004312 <HAL_CAN_Init+0x128>
 80041f4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80041f8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80041fc:	b91b      	cbnz	r3, 8004206 <HAL_CAN_Init+0x1c>
 80041fe:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8004202:	f7ff fff1 	bl	80041e8 <HAL_CAN_MspInit>
 8004206:	2302      	movs	r3, #2
 8004208:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800420c:	6823      	ldr	r3, [r4, #0]
 800420e:	681a      	ldr	r2, [r3, #0]
 8004210:	f022 0202 	bic.w	r2, r2, #2
 8004214:	601a      	str	r2, [r3, #0]
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	f042 0201 	orr.w	r2, r2, #1
 800421c:	601a      	str	r2, [r3, #0]
 800421e:	f000 fc37 	bl	8004a90 <HAL_GetTick>
 8004222:	4606      	mov	r6, r0
 8004224:	6823      	ldr	r3, [r4, #0]
 8004226:	685d      	ldr	r5, [r3, #4]
 8004228:	f015 0501 	ands.w	r5, r5, #1
 800422c:	d057      	beq.n	80042de <HAL_CAN_Init+0xf4>
 800422e:	685a      	ldr	r2, [r3, #4]
 8004230:	07d1      	lsls	r1, r2, #31
 8004232:	d56b      	bpl.n	800430c <HAL_CAN_Init+0x122>
 8004234:	69a2      	ldr	r2, [r4, #24]
 8004236:	2a01      	cmp	r2, #1
 8004238:	681a      	ldr	r2, [r3, #0]
 800423a:	bf0c      	ite	eq
 800423c:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 8004240:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	69e2      	ldr	r2, [r4, #28]
 8004248:	2a01      	cmp	r2, #1
 800424a:	681a      	ldr	r2, [r3, #0]
 800424c:	bf0c      	ite	eq
 800424e:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 8004252:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	6a22      	ldr	r2, [r4, #32]
 800425a:	2a01      	cmp	r2, #1
 800425c:	681a      	ldr	r2, [r3, #0]
 800425e:	bf0c      	ite	eq
 8004260:	f042 0220 	orreq.w	r2, r2, #32
 8004264:	f022 0220 	bicne.w	r2, r2, #32
 8004268:	601a      	str	r2, [r3, #0]
 800426a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800426c:	2a01      	cmp	r2, #1
 800426e:	681a      	ldr	r2, [r3, #0]
 8004270:	bf0c      	ite	eq
 8004272:	f042 0210 	orreq.w	r2, r2, #16
 8004276:	f022 0210 	bicne.w	r2, r2, #16
 800427a:	601a      	str	r2, [r3, #0]
 800427c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800427e:	2a01      	cmp	r2, #1
 8004280:	681a      	ldr	r2, [r3, #0]
 8004282:	bf0c      	ite	eq
 8004284:	f042 0208 	orreq.w	r2, r2, #8
 8004288:	f022 0208 	bicne.w	r2, r2, #8
 800428c:	601a      	str	r2, [r3, #0]
 800428e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004290:	2a01      	cmp	r2, #1
 8004292:	681a      	ldr	r2, [r3, #0]
 8004294:	bf0c      	ite	eq
 8004296:	f042 0204 	orreq.w	r2, r2, #4
 800429a:	f022 0204 	bicne.w	r2, r2, #4
 800429e:	601a      	str	r2, [r3, #0]
 80042a0:	68e1      	ldr	r1, [r4, #12]
 80042a2:	68a2      	ldr	r2, [r4, #8]
 80042a4:	430a      	orrs	r2, r1
 80042a6:	6921      	ldr	r1, [r4, #16]
 80042a8:	430a      	orrs	r2, r1
 80042aa:	6961      	ldr	r1, [r4, #20]
 80042ac:	430a      	orrs	r2, r1
 80042ae:	6861      	ldr	r1, [r4, #4]
 80042b0:	3901      	subs	r1, #1
 80042b2:	430a      	orrs	r2, r1
 80042b4:	61da      	str	r2, [r3, #28]
 80042b6:	681a      	ldr	r2, [r3, #0]
 80042b8:	f022 0201 	bic.w	r2, r2, #1
 80042bc:	601a      	str	r2, [r3, #0]
 80042be:	f000 fbe7 	bl	8004a90 <HAL_GetTick>
 80042c2:	4605      	mov	r5, r0
 80042c4:	6823      	ldr	r3, [r4, #0]
 80042c6:	685a      	ldr	r2, [r3, #4]
 80042c8:	07d2      	lsls	r2, r2, #31
 80042ca:	d413      	bmi.n	80042f4 <HAL_CAN_Init+0x10a>
 80042cc:	6858      	ldr	r0, [r3, #4]
 80042ce:	f010 0001 	ands.w	r0, r0, #1
 80042d2:	d11b      	bne.n	800430c <HAL_CAN_Init+0x122>
 80042d4:	2301      	movs	r3, #1
 80042d6:	63e0      	str	r0, [r4, #60]	; 0x3c
 80042d8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80042dc:	bd70      	pop	{r4, r5, r6, pc}
 80042de:	f000 fbd7 	bl	8004a90 <HAL_GetTick>
 80042e2:	1b80      	subs	r0, r0, r6
 80042e4:	280a      	cmp	r0, #10
 80042e6:	d99d      	bls.n	8004224 <HAL_CAN_Init+0x3a>
 80042e8:	2003      	movs	r0, #3
 80042ea:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 80042ee:	f884 5039 	strb.w	r5, [r4, #57]	; 0x39
 80042f2:	bd70      	pop	{r4, r5, r6, pc}
 80042f4:	f000 fbcc 	bl	8004a90 <HAL_GetTick>
 80042f8:	1b40      	subs	r0, r0, r5
 80042fa:	280a      	cmp	r0, #10
 80042fc:	d9e2      	bls.n	80042c4 <HAL_CAN_Init+0xda>
 80042fe:	2003      	movs	r0, #3
 8004300:	2300      	movs	r3, #0
 8004302:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8004306:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800430a:	bd70      	pop	{r4, r5, r6, pc}
 800430c:	2304      	movs	r3, #4
 800430e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004312:	2001      	movs	r0, #1
 8004314:	bd70      	pop	{r4, r5, r6, pc}

08004316 <HAL_TIM_OC_MspInit>:
 8004316:	4770      	bx	lr

08004318 <TIM_Base_SetConfig>:
 8004318:	4a2e      	ldr	r2, [pc, #184]	; (80043d4 <TIM_Base_SetConfig+0xbc>)
 800431a:	6803      	ldr	r3, [r0, #0]
 800431c:	4290      	cmp	r0, r2
 800431e:	d012      	beq.n	8004346 <TIM_Base_SetConfig+0x2e>
 8004320:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004324:	d00f      	beq.n	8004346 <TIM_Base_SetConfig+0x2e>
 8004326:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800432a:	4290      	cmp	r0, r2
 800432c:	d00b      	beq.n	8004346 <TIM_Base_SetConfig+0x2e>
 800432e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004332:	4290      	cmp	r0, r2
 8004334:	d007      	beq.n	8004346 <TIM_Base_SetConfig+0x2e>
 8004336:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800433a:	4290      	cmp	r0, r2
 800433c:	d003      	beq.n	8004346 <TIM_Base_SetConfig+0x2e>
 800433e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8004342:	4290      	cmp	r0, r2
 8004344:	d11d      	bne.n	8004382 <TIM_Base_SetConfig+0x6a>
 8004346:	684a      	ldr	r2, [r1, #4]
 8004348:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800434c:	4313      	orrs	r3, r2
 800434e:	4a21      	ldr	r2, [pc, #132]	; (80043d4 <TIM_Base_SetConfig+0xbc>)
 8004350:	4290      	cmp	r0, r2
 8004352:	d104      	bne.n	800435e <TIM_Base_SetConfig+0x46>
 8004354:	68ca      	ldr	r2, [r1, #12]
 8004356:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800435a:	4313      	orrs	r3, r2
 800435c:	e028      	b.n	80043b0 <TIM_Base_SetConfig+0x98>
 800435e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004362:	d0f7      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004364:	4a1c      	ldr	r2, [pc, #112]	; (80043d8 <TIM_Base_SetConfig+0xc0>)
 8004366:	4290      	cmp	r0, r2
 8004368:	d0f4      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 800436a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800436e:	4290      	cmp	r0, r2
 8004370:	d0f0      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004372:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004376:	4290      	cmp	r0, r2
 8004378:	d0ec      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 800437a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800437e:	4290      	cmp	r0, r2
 8004380:	d0e8      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004382:	4a16      	ldr	r2, [pc, #88]	; (80043dc <TIM_Base_SetConfig+0xc4>)
 8004384:	4290      	cmp	r0, r2
 8004386:	d0e5      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004388:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800438c:	4290      	cmp	r0, r2
 800438e:	d0e1      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004390:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004394:	4290      	cmp	r0, r2
 8004396:	d0dd      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 8004398:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800439c:	4290      	cmp	r0, r2
 800439e:	d0d9      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 80043a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80043a4:	4290      	cmp	r0, r2
 80043a6:	d0d5      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 80043a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80043ac:	4290      	cmp	r0, r2
 80043ae:	d0d1      	beq.n	8004354 <TIM_Base_SetConfig+0x3c>
 80043b0:	6003      	str	r3, [r0, #0]
 80043b2:	688b      	ldr	r3, [r1, #8]
 80043b4:	62c3      	str	r3, [r0, #44]	; 0x2c
 80043b6:	680b      	ldr	r3, [r1, #0]
 80043b8:	6283      	str	r3, [r0, #40]	; 0x28
 80043ba:	4b06      	ldr	r3, [pc, #24]	; (80043d4 <TIM_Base_SetConfig+0xbc>)
 80043bc:	4298      	cmp	r0, r3
 80043be:	d006      	beq.n	80043ce <TIM_Base_SetConfig+0xb6>
 80043c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80043c4:	4298      	cmp	r0, r3
 80043c6:	d002      	beq.n	80043ce <TIM_Base_SetConfig+0xb6>
 80043c8:	2301      	movs	r3, #1
 80043ca:	6143      	str	r3, [r0, #20]
 80043cc:	4770      	bx	lr
 80043ce:	690b      	ldr	r3, [r1, #16]
 80043d0:	6303      	str	r3, [r0, #48]	; 0x30
 80043d2:	e7f9      	b.n	80043c8 <TIM_Base_SetConfig+0xb0>
 80043d4:	40010000 	.word	0x40010000
 80043d8:	40000400 	.word	0x40000400
 80043dc:	40014000 	.word	0x40014000

080043e0 <HAL_TIM_OC_Init>:
 80043e0:	b510      	push	{r4, lr}
 80043e2:	4604      	mov	r4, r0
 80043e4:	b1a0      	cbz	r0, 8004410 <HAL_TIM_OC_Init+0x30>
 80043e6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80043ea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80043ee:	b91b      	cbnz	r3, 80043f8 <HAL_TIM_OC_Init+0x18>
 80043f0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80043f4:	f7ff ff8f 	bl	8004316 <HAL_TIM_OC_MspInit>
 80043f8:	2302      	movs	r3, #2
 80043fa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80043fe:	6820      	ldr	r0, [r4, #0]
 8004400:	1d21      	adds	r1, r4, #4
 8004402:	f7ff ff89 	bl	8004318 <TIM_Base_SetConfig>
 8004406:	2301      	movs	r3, #1
 8004408:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800440c:	2000      	movs	r0, #0
 800440e:	bd10      	pop	{r4, pc}
 8004410:	2001      	movs	r0, #1
 8004412:	bd10      	pop	{r4, pc}

08004414 <TIM_CCxChannelCmd>:
 8004414:	6a03      	ldr	r3, [r0, #32]
 8004416:	b510      	push	{r4, lr}
 8004418:	2401      	movs	r4, #1
 800441a:	408c      	lsls	r4, r1
 800441c:	ea23 0304 	bic.w	r3, r3, r4
 8004420:	6203      	str	r3, [r0, #32]
 8004422:	6a03      	ldr	r3, [r0, #32]
 8004424:	408a      	lsls	r2, r1
 8004426:	431a      	orrs	r2, r3
 8004428:	6202      	str	r2, [r0, #32]
 800442a:	bd10      	pop	{r4, pc}

0800442c <HAL_TIM_PWM_Start>:
 800442c:	b510      	push	{r4, lr}
 800442e:	4604      	mov	r4, r0
 8004430:	2201      	movs	r2, #1
 8004432:	6800      	ldr	r0, [r0, #0]
 8004434:	f7ff ffee 	bl	8004414 <TIM_CCxChannelCmd>
 8004438:	6823      	ldr	r3, [r4, #0]
 800443a:	4a08      	ldr	r2, [pc, #32]	; (800445c <HAL_TIM_PWM_Start+0x30>)
 800443c:	4293      	cmp	r3, r2
 800443e:	d003      	beq.n	8004448 <HAL_TIM_PWM_Start+0x1c>
 8004440:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004444:	4293      	cmp	r3, r2
 8004446:	d103      	bne.n	8004450 <HAL_TIM_PWM_Start+0x24>
 8004448:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800444a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800444e:	645a      	str	r2, [r3, #68]	; 0x44
 8004450:	681a      	ldr	r2, [r3, #0]
 8004452:	f042 0201 	orr.w	r2, r2, #1
 8004456:	601a      	str	r2, [r3, #0]
 8004458:	2000      	movs	r0, #0
 800445a:	bd10      	pop	{r4, pc}
 800445c:	40010000 	.word	0x40010000

08004460 <HAL_TIM_OC_Start>:
 8004460:	f7ff bfe4 	b.w	800442c <HAL_TIM_PWM_Start>

08004464 <HAL_PWR_EnterSLEEPMode>:
 8004464:	4a06      	ldr	r2, [pc, #24]	; (8004480 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8004466:	6913      	ldr	r3, [r2, #16]
 8004468:	2901      	cmp	r1, #1
 800446a:	f023 0304 	bic.w	r3, r3, #4
 800446e:	6113      	str	r3, [r2, #16]
 8004470:	d101      	bne.n	8004476 <HAL_PWR_EnterSLEEPMode+0x12>
 8004472:	bf30      	wfi
 8004474:	4770      	bx	lr
 8004476:	bf40      	sev
 8004478:	bf20      	wfe
 800447a:	bf20      	wfe
 800447c:	4770      	bx	lr
 800447e:	bf00      	nop
 8004480:	e000ed00 	.word	0xe000ed00

08004484 <UART_SetConfig>:
 8004484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004488:	6806      	ldr	r6, [r0, #0]
 800448a:	68c2      	ldr	r2, [r0, #12]
 800448c:	6933      	ldr	r3, [r6, #16]
 800448e:	69c1      	ldr	r1, [r0, #28]
 8004490:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004494:	4313      	orrs	r3, r2
 8004496:	6133      	str	r3, [r6, #16]
 8004498:	4604      	mov	r4, r0
 800449a:	6883      	ldr	r3, [r0, #8]
 800449c:	6900      	ldr	r0, [r0, #16]
 800449e:	68f2      	ldr	r2, [r6, #12]
 80044a0:	4303      	orrs	r3, r0
 80044a2:	6960      	ldr	r0, [r4, #20]
 80044a4:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 80044a8:	4303      	orrs	r3, r0
 80044aa:	f022 020c 	bic.w	r2, r2, #12
 80044ae:	430b      	orrs	r3, r1
 80044b0:	4313      	orrs	r3, r2
 80044b2:	60f3      	str	r3, [r6, #12]
 80044b4:	6973      	ldr	r3, [r6, #20]
 80044b6:	69a2      	ldr	r2, [r4, #24]
 80044b8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80044bc:	4313      	orrs	r3, r2
 80044be:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 80044c2:	6173      	str	r3, [r6, #20]
 80044c4:	4b7a      	ldr	r3, [pc, #488]	; (80046b0 <UART_SetConfig+0x22c>)
 80044c6:	d17c      	bne.n	80045c2 <UART_SetConfig+0x13e>
 80044c8:	429e      	cmp	r6, r3
 80044ca:	d003      	beq.n	80044d4 <UART_SetConfig+0x50>
 80044cc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80044d0:	429e      	cmp	r6, r3
 80044d2:	d144      	bne.n	800455e <UART_SetConfig+0xda>
 80044d4:	f000 fa3a 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 80044d8:	2519      	movs	r5, #25
 80044da:	fb05 f300 	mul.w	r3, r5, r0
 80044de:	6860      	ldr	r0, [r4, #4]
 80044e0:	f04f 0964 	mov.w	r9, #100	; 0x64
 80044e4:	0040      	lsls	r0, r0, #1
 80044e6:	fbb3 f3f0 	udiv	r3, r3, r0
 80044ea:	fbb3 f3f9 	udiv	r3, r3, r9
 80044ee:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80044f2:	f000 fa2b 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 80044f6:	6863      	ldr	r3, [r4, #4]
 80044f8:	4368      	muls	r0, r5
 80044fa:	005b      	lsls	r3, r3, #1
 80044fc:	fbb0 f7f3 	udiv	r7, r0, r3
 8004500:	f000 fa24 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 8004504:	6863      	ldr	r3, [r4, #4]
 8004506:	4368      	muls	r0, r5
 8004508:	005b      	lsls	r3, r3, #1
 800450a:	fbb0 f3f3 	udiv	r3, r0, r3
 800450e:	fbb3 f3f9 	udiv	r3, r3, r9
 8004512:	fb09 7313 	mls	r3, r9, r3, r7
 8004516:	00db      	lsls	r3, r3, #3
 8004518:	3332      	adds	r3, #50	; 0x32
 800451a:	fbb3 f3f9 	udiv	r3, r3, r9
 800451e:	005b      	lsls	r3, r3, #1
 8004520:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8004524:	f000 fa12 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 8004528:	6862      	ldr	r2, [r4, #4]
 800452a:	4368      	muls	r0, r5
 800452c:	0052      	lsls	r2, r2, #1
 800452e:	fbb0 faf2 	udiv	r10, r0, r2
 8004532:	f000 fa0b 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 8004536:	6863      	ldr	r3, [r4, #4]
 8004538:	4368      	muls	r0, r5
 800453a:	005b      	lsls	r3, r3, #1
 800453c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004540:	fbb3 f3f9 	udiv	r3, r3, r9
 8004544:	fb09 a313 	mls	r3, r9, r3, r10
 8004548:	00db      	lsls	r3, r3, #3
 800454a:	3332      	adds	r3, #50	; 0x32
 800454c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004550:	f003 0307 	and.w	r3, r3, #7
 8004554:	4443      	add	r3, r8
 8004556:	443b      	add	r3, r7
 8004558:	60b3      	str	r3, [r6, #8]
 800455a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800455e:	f000 f9dd 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 8004562:	2519      	movs	r5, #25
 8004564:	fb05 f300 	mul.w	r3, r5, r0
 8004568:	6860      	ldr	r0, [r4, #4]
 800456a:	f04f 0964 	mov.w	r9, #100	; 0x64
 800456e:	0040      	lsls	r0, r0, #1
 8004570:	fbb3 f3f0 	udiv	r3, r3, r0
 8004574:	fbb3 f3f9 	udiv	r3, r3, r9
 8004578:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800457c:	f000 f9ce 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 8004580:	6863      	ldr	r3, [r4, #4]
 8004582:	4368      	muls	r0, r5
 8004584:	005b      	lsls	r3, r3, #1
 8004586:	fbb0 f7f3 	udiv	r7, r0, r3
 800458a:	f000 f9c7 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 800458e:	6863      	ldr	r3, [r4, #4]
 8004590:	4368      	muls	r0, r5
 8004592:	005b      	lsls	r3, r3, #1
 8004594:	fbb0 f3f3 	udiv	r3, r0, r3
 8004598:	fbb3 f3f9 	udiv	r3, r3, r9
 800459c:	fb09 7313 	mls	r3, r9, r3, r7
 80045a0:	00db      	lsls	r3, r3, #3
 80045a2:	3332      	adds	r3, #50	; 0x32
 80045a4:	fbb3 f3f9 	udiv	r3, r3, r9
 80045a8:	005b      	lsls	r3, r3, #1
 80045aa:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80045ae:	f000 f9b5 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 80045b2:	6862      	ldr	r2, [r4, #4]
 80045b4:	4368      	muls	r0, r5
 80045b6:	0052      	lsls	r2, r2, #1
 80045b8:	fbb0 faf2 	udiv	r10, r0, r2
 80045bc:	f000 f9ae 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 80045c0:	e7b9      	b.n	8004536 <UART_SetConfig+0xb2>
 80045c2:	429e      	cmp	r6, r3
 80045c4:	d002      	beq.n	80045cc <UART_SetConfig+0x148>
 80045c6:	4b3b      	ldr	r3, [pc, #236]	; (80046b4 <UART_SetConfig+0x230>)
 80045c8:	429e      	cmp	r6, r3
 80045ca:	d140      	bne.n	800464e <UART_SetConfig+0x1ca>
 80045cc:	f000 f9be 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 80045d0:	6867      	ldr	r7, [r4, #4]
 80045d2:	2519      	movs	r5, #25
 80045d4:	f04f 0964 	mov.w	r9, #100	; 0x64
 80045d8:	fb05 f300 	mul.w	r3, r5, r0
 80045dc:	00bf      	lsls	r7, r7, #2
 80045de:	fbb3 f3f7 	udiv	r3, r3, r7
 80045e2:	fbb3 f3f9 	udiv	r3, r3, r9
 80045e6:	011f      	lsls	r7, r3, #4
 80045e8:	f000 f9b0 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 80045ec:	6863      	ldr	r3, [r4, #4]
 80045ee:	4368      	muls	r0, r5
 80045f0:	009b      	lsls	r3, r3, #2
 80045f2:	fbb0 f8f3 	udiv	r8, r0, r3
 80045f6:	f000 f9a9 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 80045fa:	6863      	ldr	r3, [r4, #4]
 80045fc:	4368      	muls	r0, r5
 80045fe:	009b      	lsls	r3, r3, #2
 8004600:	fbb0 f3f3 	udiv	r3, r0, r3
 8004604:	fbb3 f3f9 	udiv	r3, r3, r9
 8004608:	fb09 8313 	mls	r3, r9, r3, r8
 800460c:	011b      	lsls	r3, r3, #4
 800460e:	3332      	adds	r3, #50	; 0x32
 8004610:	fbb3 f3f9 	udiv	r3, r3, r9
 8004614:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004618:	f000 f998 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 800461c:	6862      	ldr	r2, [r4, #4]
 800461e:	4368      	muls	r0, r5
 8004620:	0092      	lsls	r2, r2, #2
 8004622:	fbb0 faf2 	udiv	r10, r0, r2
 8004626:	f000 f991 	bl	800494c <HAL_RCC_GetPCLK2Freq>
 800462a:	6863      	ldr	r3, [r4, #4]
 800462c:	4368      	muls	r0, r5
 800462e:	009b      	lsls	r3, r3, #2
 8004630:	fbb0 f3f3 	udiv	r3, r0, r3
 8004634:	fbb3 f3f9 	udiv	r3, r3, r9
 8004638:	fb09 a313 	mls	r3, r9, r3, r10
 800463c:	011b      	lsls	r3, r3, #4
 800463e:	3332      	adds	r3, #50	; 0x32
 8004640:	fbb3 f3f9 	udiv	r3, r3, r9
 8004644:	f003 030f 	and.w	r3, r3, #15
 8004648:	ea43 0308 	orr.w	r3, r3, r8
 800464c:	e783      	b.n	8004556 <UART_SetConfig+0xd2>
 800464e:	f000 f965 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 8004652:	6867      	ldr	r7, [r4, #4]
 8004654:	2519      	movs	r5, #25
 8004656:	f04f 0964 	mov.w	r9, #100	; 0x64
 800465a:	fb05 f300 	mul.w	r3, r5, r0
 800465e:	00bf      	lsls	r7, r7, #2
 8004660:	fbb3 f3f7 	udiv	r3, r3, r7
 8004664:	fbb3 f3f9 	udiv	r3, r3, r9
 8004668:	011f      	lsls	r7, r3, #4
 800466a:	f000 f957 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 800466e:	6863      	ldr	r3, [r4, #4]
 8004670:	4368      	muls	r0, r5
 8004672:	009b      	lsls	r3, r3, #2
 8004674:	fbb0 f8f3 	udiv	r8, r0, r3
 8004678:	f000 f950 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 800467c:	6863      	ldr	r3, [r4, #4]
 800467e:	4368      	muls	r0, r5
 8004680:	009b      	lsls	r3, r3, #2
 8004682:	fbb0 f3f3 	udiv	r3, r0, r3
 8004686:	fbb3 f3f9 	udiv	r3, r3, r9
 800468a:	fb09 8313 	mls	r3, r9, r3, r8
 800468e:	011b      	lsls	r3, r3, #4
 8004690:	3332      	adds	r3, #50	; 0x32
 8004692:	fbb3 f3f9 	udiv	r3, r3, r9
 8004696:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 800469a:	f000 f93f 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 800469e:	6862      	ldr	r2, [r4, #4]
 80046a0:	4368      	muls	r0, r5
 80046a2:	0092      	lsls	r2, r2, #2
 80046a4:	fbb0 faf2 	udiv	r10, r0, r2
 80046a8:	f000 f938 	bl	800491c <HAL_RCC_GetPCLK1Freq>
 80046ac:	e7bd      	b.n	800462a <UART_SetConfig+0x1a6>
 80046ae:	bf00      	nop
 80046b0:	40011000 	.word	0x40011000
 80046b4:	40011400 	.word	0x40011400

080046b8 <HAL_UART_MspInit>:
 80046b8:	4770      	bx	lr

080046ba <HAL_UART_Init>:
 80046ba:	b510      	push	{r4, lr}
 80046bc:	4604      	mov	r4, r0
 80046be:	b340      	cbz	r0, 8004712 <HAL_UART_Init+0x58>
 80046c0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80046c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80046c8:	b91b      	cbnz	r3, 80046d2 <HAL_UART_Init+0x18>
 80046ca:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80046ce:	f7ff fff3 	bl	80046b8 <HAL_UART_MspInit>
 80046d2:	6822      	ldr	r2, [r4, #0]
 80046d4:	2324      	movs	r3, #36	; 0x24
 80046d6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80046da:	68d3      	ldr	r3, [r2, #12]
 80046dc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80046e0:	60d3      	str	r3, [r2, #12]
 80046e2:	4620      	mov	r0, r4
 80046e4:	f7ff fece 	bl	8004484 <UART_SetConfig>
 80046e8:	6823      	ldr	r3, [r4, #0]
 80046ea:	691a      	ldr	r2, [r3, #16]
 80046ec:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80046f0:	611a      	str	r2, [r3, #16]
 80046f2:	695a      	ldr	r2, [r3, #20]
 80046f4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80046f8:	615a      	str	r2, [r3, #20]
 80046fa:	68da      	ldr	r2, [r3, #12]
 80046fc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004700:	60da      	str	r2, [r3, #12]
 8004702:	2000      	movs	r0, #0
 8004704:	2320      	movs	r3, #32
 8004706:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004708:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800470c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8004710:	bd10      	pop	{r4, pc}
 8004712:	2001      	movs	r0, #1
 8004714:	bd10      	pop	{r4, pc}
	...

08004718 <HAL_RCC_MCOConfig>:
 8004718:	b570      	push	{r4, r5, r6, lr}
 800471a:	460d      	mov	r5, r1
 800471c:	b088      	sub	sp, #32
 800471e:	4616      	mov	r6, r2
 8004720:	4c20      	ldr	r4, [pc, #128]	; (80047a4 <HAL_RCC_MCOConfig+0x8c>)
 8004722:	b9f0      	cbnz	r0, 8004762 <HAL_RCC_MCOConfig+0x4a>
 8004724:	9001      	str	r0, [sp, #4]
 8004726:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004728:	f043 0301 	orr.w	r3, r3, #1
 800472c:	6323      	str	r3, [r4, #48]	; 0x30
 800472e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004730:	9005      	str	r0, [sp, #20]
 8004732:	f003 0301 	and.w	r3, r3, #1
 8004736:	9301      	str	r3, [sp, #4]
 8004738:	9b01      	ldr	r3, [sp, #4]
 800473a:	9007      	str	r0, [sp, #28]
 800473c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004740:	9303      	str	r3, [sp, #12]
 8004742:	2302      	movs	r3, #2
 8004744:	9304      	str	r3, [sp, #16]
 8004746:	a903      	add	r1, sp, #12
 8004748:	2303      	movs	r3, #3
 800474a:	4817      	ldr	r0, [pc, #92]	; (80047a8 <HAL_RCC_MCOConfig+0x90>)
 800474c:	9306      	str	r3, [sp, #24]
 800474e:	f7ff fbef 	bl	8003f30 <HAL_GPIO_Init>
 8004752:	68a1      	ldr	r1, [r4, #8]
 8004754:	f021 61ec 	bic.w	r1, r1, #123731968	; 0x7600000
 8004758:	4331      	orrs	r1, r6
 800475a:	4329      	orrs	r1, r5
 800475c:	60a1      	str	r1, [r4, #8]
 800475e:	b008      	add	sp, #32
 8004760:	bd70      	pop	{r4, r5, r6, pc}
 8004762:	2300      	movs	r3, #0
 8004764:	9302      	str	r3, [sp, #8]
 8004766:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004768:	4810      	ldr	r0, [pc, #64]	; (80047ac <HAL_RCC_MCOConfig+0x94>)
 800476a:	f042 0204 	orr.w	r2, r2, #4
 800476e:	6322      	str	r2, [r4, #48]	; 0x30
 8004770:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004772:	9305      	str	r3, [sp, #20]
 8004774:	f002 0204 	and.w	r2, r2, #4
 8004778:	9202      	str	r2, [sp, #8]
 800477a:	9a02      	ldr	r2, [sp, #8]
 800477c:	9307      	str	r3, [sp, #28]
 800477e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004782:	9203      	str	r2, [sp, #12]
 8004784:	2202      	movs	r2, #2
 8004786:	9204      	str	r2, [sp, #16]
 8004788:	a903      	add	r1, sp, #12
 800478a:	2203      	movs	r2, #3
 800478c:	9206      	str	r2, [sp, #24]
 800478e:	f7ff fbcf 	bl	8003f30 <HAL_GPIO_Init>
 8004792:	68a3      	ldr	r3, [r4, #8]
 8004794:	ea45 01c6 	orr.w	r1, r5, r6, lsl #3
 8004798:	f023 4578 	bic.w	r5, r3, #4160749568	; 0xf8000000
 800479c:	430d      	orrs	r5, r1
 800479e:	60a5      	str	r5, [r4, #8]
 80047a0:	e7dd      	b.n	800475e <HAL_RCC_MCOConfig+0x46>
 80047a2:	bf00      	nop
 80047a4:	40023800 	.word	0x40023800
 80047a8:	40020000 	.word	0x40020000
 80047ac:	40020800 	.word	0x40020800

080047b0 <HAL_RCC_ClockConfig>:
 80047b0:	4b56      	ldr	r3, [pc, #344]	; (800490c <HAL_RCC_ClockConfig+0x15c>)
 80047b2:	681a      	ldr	r2, [r3, #0]
 80047b4:	f002 020f 	and.w	r2, r2, #15
 80047b8:	428a      	cmp	r2, r1
 80047ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047be:	4605      	mov	r5, r0
 80047c0:	460e      	mov	r6, r1
 80047c2:	d330      	bcc.n	8004826 <HAL_RCC_ClockConfig+0x76>
 80047c4:	682a      	ldr	r2, [r5, #0]
 80047c6:	0794      	lsls	r4, r2, #30
 80047c8:	d437      	bmi.n	800483a <HAL_RCC_ClockConfig+0x8a>
 80047ca:	07d0      	lsls	r0, r2, #31
 80047cc:	d43d      	bmi.n	800484a <HAL_RCC_ClockConfig+0x9a>
 80047ce:	4b4f      	ldr	r3, [pc, #316]	; (800490c <HAL_RCC_ClockConfig+0x15c>)
 80047d0:	681a      	ldr	r2, [r3, #0]
 80047d2:	f002 020f 	and.w	r2, r2, #15
 80047d6:	4296      	cmp	r6, r2
 80047d8:	f0c0 8088 	bcc.w	80048ec <HAL_RCC_ClockConfig+0x13c>
 80047dc:	682a      	ldr	r2, [r5, #0]
 80047de:	0751      	lsls	r1, r2, #29
 80047e0:	f100 808c 	bmi.w	80048fc <HAL_RCC_ClockConfig+0x14c>
 80047e4:	0713      	lsls	r3, r2, #28
 80047e6:	d507      	bpl.n	80047f8 <HAL_RCC_ClockConfig+0x48>
 80047e8:	4a49      	ldr	r2, [pc, #292]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 80047ea:	6929      	ldr	r1, [r5, #16]
 80047ec:	6893      	ldr	r3, [r2, #8]
 80047ee:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80047f2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80047f6:	6093      	str	r3, [r2, #8]
 80047f8:	f000 fdcc 	bl	8005394 <HAL_RCC_GetSysClockFreq>
 80047fc:	4b44      	ldr	r3, [pc, #272]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 80047fe:	22f0      	movs	r2, #240	; 0xf0
 8004800:	689b      	ldr	r3, [r3, #8]
 8004802:	fa92 f2a2 	rbit	r2, r2
 8004806:	fab2 f282 	clz	r2, r2
 800480a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800480e:	40d3      	lsrs	r3, r2
 8004810:	4a40      	ldr	r2, [pc, #256]	; (8004914 <HAL_RCC_ClockConfig+0x164>)
 8004812:	5cd3      	ldrb	r3, [r2, r3]
 8004814:	40d8      	lsrs	r0, r3
 8004816:	4b40      	ldr	r3, [pc, #256]	; (8004918 <HAL_RCC_ClockConfig+0x168>)
 8004818:	6018      	str	r0, [r3, #0]
 800481a:	200f      	movs	r0, #15
 800481c:	f7fe fa7c 	bl	8002d18 <HAL_InitTick>
 8004820:	2000      	movs	r0, #0
 8004822:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004826:	b2ca      	uxtb	r2, r1
 8004828:	701a      	strb	r2, [r3, #0]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	f003 030f 	and.w	r3, r3, #15
 8004830:	4299      	cmp	r1, r3
 8004832:	d0c7      	beq.n	80047c4 <HAL_RCC_ClockConfig+0x14>
 8004834:	2001      	movs	r0, #1
 8004836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800483a:	4935      	ldr	r1, [pc, #212]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 800483c:	68a8      	ldr	r0, [r5, #8]
 800483e:	688b      	ldr	r3, [r1, #8]
 8004840:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004844:	4303      	orrs	r3, r0
 8004846:	608b      	str	r3, [r1, #8]
 8004848:	e7bf      	b.n	80047ca <HAL_RCC_ClockConfig+0x1a>
 800484a:	686a      	ldr	r2, [r5, #4]
 800484c:	4b30      	ldr	r3, [pc, #192]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 800484e:	2a01      	cmp	r2, #1
 8004850:	d11e      	bne.n	8004890 <HAL_RCC_ClockConfig+0xe0>
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004858:	d0ec      	beq.n	8004834 <HAL_RCC_ClockConfig+0x84>
 800485a:	4c2d      	ldr	r4, [pc, #180]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 800485c:	68a3      	ldr	r3, [r4, #8]
 800485e:	f023 0303 	bic.w	r3, r3, #3
 8004862:	4313      	orrs	r3, r2
 8004864:	60a3      	str	r3, [r4, #8]
 8004866:	f000 f913 	bl	8004a90 <HAL_GetTick>
 800486a:	686b      	ldr	r3, [r5, #4]
 800486c:	2b01      	cmp	r3, #1
 800486e:	4607      	mov	r7, r0
 8004870:	f241 3888 	movw	r8, #5000	; 0x1388
 8004874:	d116      	bne.n	80048a4 <HAL_RCC_ClockConfig+0xf4>
 8004876:	68a3      	ldr	r3, [r4, #8]
 8004878:	f003 030c 	and.w	r3, r3, #12
 800487c:	2b04      	cmp	r3, #4
 800487e:	d0a6      	beq.n	80047ce <HAL_RCC_ClockConfig+0x1e>
 8004880:	f000 f906 	bl	8004a90 <HAL_GetTick>
 8004884:	1bc0      	subs	r0, r0, r7
 8004886:	4540      	cmp	r0, r8
 8004888:	d9f5      	bls.n	8004876 <HAL_RCC_ClockConfig+0xc6>
 800488a:	2003      	movs	r0, #3
 800488c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004890:	1e91      	subs	r1, r2, #2
 8004892:	2901      	cmp	r1, #1
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	d802      	bhi.n	800489e <HAL_RCC_ClockConfig+0xee>
 8004898:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800489c:	e7dc      	b.n	8004858 <HAL_RCC_ClockConfig+0xa8>
 800489e:	f013 0f02 	tst.w	r3, #2
 80048a2:	e7d9      	b.n	8004858 <HAL_RCC_ClockConfig+0xa8>
 80048a4:	2b02      	cmp	r3, #2
 80048a6:	d10a      	bne.n	80048be <HAL_RCC_ClockConfig+0x10e>
 80048a8:	68a3      	ldr	r3, [r4, #8]
 80048aa:	f003 030c 	and.w	r3, r3, #12
 80048ae:	2b08      	cmp	r3, #8
 80048b0:	d08d      	beq.n	80047ce <HAL_RCC_ClockConfig+0x1e>
 80048b2:	f000 f8ed 	bl	8004a90 <HAL_GetTick>
 80048b6:	1bc0      	subs	r0, r0, r7
 80048b8:	4540      	cmp	r0, r8
 80048ba:	d9f5      	bls.n	80048a8 <HAL_RCC_ClockConfig+0xf8>
 80048bc:	e7e5      	b.n	800488a <HAL_RCC_ClockConfig+0xda>
 80048be:	2b03      	cmp	r3, #3
 80048c0:	d10f      	bne.n	80048e2 <HAL_RCC_ClockConfig+0x132>
 80048c2:	68a3      	ldr	r3, [r4, #8]
 80048c4:	f003 030c 	and.w	r3, r3, #12
 80048c8:	2b0c      	cmp	r3, #12
 80048ca:	d080      	beq.n	80047ce <HAL_RCC_ClockConfig+0x1e>
 80048cc:	f000 f8e0 	bl	8004a90 <HAL_GetTick>
 80048d0:	1bc0      	subs	r0, r0, r7
 80048d2:	4540      	cmp	r0, r8
 80048d4:	d9f5      	bls.n	80048c2 <HAL_RCC_ClockConfig+0x112>
 80048d6:	e7d8      	b.n	800488a <HAL_RCC_ClockConfig+0xda>
 80048d8:	f000 f8da 	bl	8004a90 <HAL_GetTick>
 80048dc:	1bc0      	subs	r0, r0, r7
 80048de:	4540      	cmp	r0, r8
 80048e0:	d8d3      	bhi.n	800488a <HAL_RCC_ClockConfig+0xda>
 80048e2:	68a3      	ldr	r3, [r4, #8]
 80048e4:	f013 0f0c 	tst.w	r3, #12
 80048e8:	d1f6      	bne.n	80048d8 <HAL_RCC_ClockConfig+0x128>
 80048ea:	e770      	b.n	80047ce <HAL_RCC_ClockConfig+0x1e>
 80048ec:	b2f2      	uxtb	r2, r6
 80048ee:	701a      	strb	r2, [r3, #0]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	f003 030f 	and.w	r3, r3, #15
 80048f6:	429e      	cmp	r6, r3
 80048f8:	d19c      	bne.n	8004834 <HAL_RCC_ClockConfig+0x84>
 80048fa:	e76f      	b.n	80047dc <HAL_RCC_ClockConfig+0x2c>
 80048fc:	4904      	ldr	r1, [pc, #16]	; (8004910 <HAL_RCC_ClockConfig+0x160>)
 80048fe:	68e8      	ldr	r0, [r5, #12]
 8004900:	688b      	ldr	r3, [r1, #8]
 8004902:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8004906:	4303      	orrs	r3, r0
 8004908:	608b      	str	r3, [r1, #8]
 800490a:	e76b      	b.n	80047e4 <HAL_RCC_ClockConfig+0x34>
 800490c:	40023c00 	.word	0x40023c00
 8004910:	40023800 	.word	0x40023800
 8004914:	080072b4 	.word	0x080072b4
 8004918:	200001e0 	.word	0x200001e0

0800491c <HAL_RCC_GetPCLK1Freq>:
 800491c:	4b08      	ldr	r3, [pc, #32]	; (8004940 <HAL_RCC_GetPCLK1Freq+0x24>)
 800491e:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8004922:	689b      	ldr	r3, [r3, #8]
 8004924:	fa92 f2a2 	rbit	r2, r2
 8004928:	fab2 f282 	clz	r2, r2
 800492c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004930:	40d3      	lsrs	r3, r2
 8004932:	4a04      	ldr	r2, [pc, #16]	; (8004944 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004934:	5cd3      	ldrb	r3, [r2, r3]
 8004936:	4a04      	ldr	r2, [pc, #16]	; (8004948 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004938:	6810      	ldr	r0, [r2, #0]
 800493a:	40d8      	lsrs	r0, r3
 800493c:	4770      	bx	lr
 800493e:	bf00      	nop
 8004940:	40023800 	.word	0x40023800
 8004944:	080072b4 	.word	0x080072b4
 8004948:	200001e0 	.word	0x200001e0

0800494c <HAL_RCC_GetPCLK2Freq>:
 800494c:	4b08      	ldr	r3, [pc, #32]	; (8004970 <HAL_RCC_GetPCLK2Freq+0x24>)
 800494e:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8004952:	689b      	ldr	r3, [r3, #8]
 8004954:	fa92 f2a2 	rbit	r2, r2
 8004958:	fab2 f282 	clz	r2, r2
 800495c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8004960:	40d3      	lsrs	r3, r2
 8004962:	4a04      	ldr	r2, [pc, #16]	; (8004974 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004964:	5cd3      	ldrb	r3, [r2, r3]
 8004966:	4a04      	ldr	r2, [pc, #16]	; (8004978 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004968:	6810      	ldr	r0, [r2, #0]
 800496a:	40d8      	lsrs	r0, r3
 800496c:	4770      	bx	lr
 800496e:	bf00      	nop
 8004970:	40023800 	.word	0x40023800
 8004974:	080072b4 	.word	0x080072b4
 8004978:	200001e0 	.word	0x200001e0

0800497c <HAL_RCC_GetClockConfig>:
 800497c:	230f      	movs	r3, #15
 800497e:	6003      	str	r3, [r0, #0]
 8004980:	4b0b      	ldr	r3, [pc, #44]	; (80049b0 <HAL_RCC_GetClockConfig+0x34>)
 8004982:	689a      	ldr	r2, [r3, #8]
 8004984:	f002 0203 	and.w	r2, r2, #3
 8004988:	6042      	str	r2, [r0, #4]
 800498a:	689a      	ldr	r2, [r3, #8]
 800498c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8004990:	6082      	str	r2, [r0, #8]
 8004992:	689a      	ldr	r2, [r3, #8]
 8004994:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8004998:	60c2      	str	r2, [r0, #12]
 800499a:	689b      	ldr	r3, [r3, #8]
 800499c:	08db      	lsrs	r3, r3, #3
 800499e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80049a2:	6103      	str	r3, [r0, #16]
 80049a4:	4b03      	ldr	r3, [pc, #12]	; (80049b4 <HAL_RCC_GetClockConfig+0x38>)
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	f003 030f 	and.w	r3, r3, #15
 80049ac:	600b      	str	r3, [r1, #0]
 80049ae:	4770      	bx	lr
 80049b0:	40023800 	.word	0x40023800
 80049b4:	40023c00 	.word	0x40023c00

080049b8 <HAL_PWREx_EnableOverDrive>:
 80049b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80049ba:	2300      	movs	r3, #0
 80049bc:	9301      	str	r3, [sp, #4]
 80049be:	4b22      	ldr	r3, [pc, #136]	; (8004a48 <HAL_PWREx_EnableOverDrive+0x90>)
 80049c0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80049c2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80049c6:	641a      	str	r2, [r3, #64]	; 0x40
 80049c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80049ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049ce:	9301      	str	r3, [sp, #4]
 80049d0:	9b01      	ldr	r3, [sp, #4]
 80049d2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80049d6:	fa93 f3a3 	rbit	r3, r3
 80049da:	fab3 f383 	clz	r3, r3
 80049de:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80049e2:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80049e6:	009b      	lsls	r3, r3, #2
 80049e8:	2201      	movs	r2, #1
 80049ea:	601a      	str	r2, [r3, #0]
 80049ec:	f000 f850 	bl	8004a90 <HAL_GetTick>
 80049f0:	4c16      	ldr	r4, [pc, #88]	; (8004a4c <HAL_PWREx_EnableOverDrive+0x94>)
 80049f2:	4605      	mov	r5, r0
 80049f4:	6863      	ldr	r3, [r4, #4]
 80049f6:	03da      	lsls	r2, r3, #15
 80049f8:	d515      	bpl.n	8004a26 <HAL_PWREx_EnableOverDrive+0x6e>
 80049fa:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80049fe:	fa93 f3a3 	rbit	r3, r3
 8004a02:	fab3 f383 	clz	r3, r3
 8004a06:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004a0a:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8004a0e:	009b      	lsls	r3, r3, #2
 8004a10:	2201      	movs	r2, #1
 8004a12:	601a      	str	r2, [r3, #0]
 8004a14:	f000 f83c 	bl	8004a90 <HAL_GetTick>
 8004a18:	4c0c      	ldr	r4, [pc, #48]	; (8004a4c <HAL_PWREx_EnableOverDrive+0x94>)
 8004a1a:	4605      	mov	r5, r0
 8004a1c:	6863      	ldr	r3, [r4, #4]
 8004a1e:	039b      	lsls	r3, r3, #14
 8004a20:	d50a      	bpl.n	8004a38 <HAL_PWREx_EnableOverDrive+0x80>
 8004a22:	2000      	movs	r0, #0
 8004a24:	e006      	b.n	8004a34 <HAL_PWREx_EnableOverDrive+0x7c>
 8004a26:	f000 f833 	bl	8004a90 <HAL_GetTick>
 8004a2a:	1b40      	subs	r0, r0, r5
 8004a2c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a30:	d9e0      	bls.n	80049f4 <HAL_PWREx_EnableOverDrive+0x3c>
 8004a32:	2003      	movs	r0, #3
 8004a34:	b003      	add	sp, #12
 8004a36:	bd30      	pop	{r4, r5, pc}
 8004a38:	f000 f82a 	bl	8004a90 <HAL_GetTick>
 8004a3c:	1b40      	subs	r0, r0, r5
 8004a3e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a42:	d9eb      	bls.n	8004a1c <HAL_PWREx_EnableOverDrive+0x64>
 8004a44:	e7f5      	b.n	8004a32 <HAL_PWREx_EnableOverDrive+0x7a>
 8004a46:	bf00      	nop
 8004a48:	40023800 	.word	0x40023800
 8004a4c:	40007000 	.word	0x40007000

08004a50 <HAL_Init>:
 8004a50:	b508      	push	{r3, lr}
 8004a52:	4b0a      	ldr	r3, [pc, #40]	; (8004a7c <HAL_Init+0x2c>)
 8004a54:	681a      	ldr	r2, [r3, #0]
 8004a56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004a5a:	601a      	str	r2, [r3, #0]
 8004a5c:	681a      	ldr	r2, [r3, #0]
 8004a5e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a62:	601a      	str	r2, [r3, #0]
 8004a64:	681a      	ldr	r2, [r3, #0]
 8004a66:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004a6a:	601a      	str	r2, [r3, #0]
 8004a6c:	200f      	movs	r0, #15
 8004a6e:	f7fe f953 	bl	8002d18 <HAL_InitTick>
 8004a72:	f7ff fb37 	bl	80040e4 <HAL_MspInit>
 8004a76:	2000      	movs	r0, #0
 8004a78:	bd08      	pop	{r3, pc}
 8004a7a:	bf00      	nop
 8004a7c:	40023c00 	.word	0x40023c00

08004a80 <HAL_IncTick>:
 8004a80:	4a02      	ldr	r2, [pc, #8]	; (8004a8c <HAL_IncTick+0xc>)
 8004a82:	6813      	ldr	r3, [r2, #0]
 8004a84:	3301      	adds	r3, #1
 8004a86:	6013      	str	r3, [r2, #0]
 8004a88:	4770      	bx	lr
 8004a8a:	bf00      	nop
 8004a8c:	20002960 	.word	0x20002960

08004a90 <HAL_GetTick>:
 8004a90:	4b01      	ldr	r3, [pc, #4]	; (8004a98 <HAL_GetTick+0x8>)
 8004a92:	6818      	ldr	r0, [r3, #0]
 8004a94:	4770      	bx	lr
 8004a96:	bf00      	nop
 8004a98:	20002960 	.word	0x20002960

08004a9c <HAL_RCCEx_PeriphCLKConfig>:
 8004a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004aa0:	6803      	ldr	r3, [r0, #0]
 8004aa2:	f013 0601 	ands.w	r6, r3, #1
 8004aa6:	b085      	sub	sp, #20
 8004aa8:	4604      	mov	r4, r0
 8004aaa:	d00b      	beq.n	8004ac4 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8004aac:	49c8      	ldr	r1, [pc, #800]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004aae:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8004ab0:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8004ab4:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004ab8:	4332      	orrs	r2, r6
 8004aba:	fab6 f686 	clz	r6, r6
 8004abe:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 8004ac2:	0976      	lsrs	r6, r6, #5
 8004ac4:	0799      	lsls	r1, r3, #30
 8004ac6:	d50b      	bpl.n	8004ae0 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8004ac8:	48c1      	ldr	r0, [pc, #772]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004aca:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8004acc:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8004ad0:	f022 52c0 	bic.w	r2, r2, #402653184	; 0x18000000
 8004ad4:	430a      	orrs	r2, r1
 8004ad6:	2900      	cmp	r1, #0
 8004ad8:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 8004adc:	bf08      	it	eq
 8004ade:	2601      	moveq	r6, #1
 8004ae0:	f013 0504 	ands.w	r5, r3, #4
 8004ae4:	d012      	beq.n	8004b0c <HAL_RCCEx_PeriphCLKConfig+0x70>
 8004ae6:	49ba      	ldr	r1, [pc, #744]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004ae8:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8004aea:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8004aee:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 8004af2:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8004af6:	ea42 0205 	orr.w	r2, r2, r5
 8004afa:	bf18      	it	ne
 8004afc:	fab5 f585 	clzne	r5, r5
 8004b00:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 8004b04:	bf12      	itee	ne
 8004b06:	096d      	lsrne	r5, r5, #5
 8004b08:	2500      	moveq	r5, #0
 8004b0a:	2601      	moveq	r6, #1
 8004b0c:	071a      	lsls	r2, r3, #28
 8004b0e:	d50f      	bpl.n	8004b30 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8004b10:	48af      	ldr	r0, [pc, #700]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004b12:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004b14:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8004b18:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8004b1c:	430a      	orrs	r2, r1
 8004b1e:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
 8004b22:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 8004b26:	f000 81bf 	beq.w	8004ea8 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 8004b2a:	2900      	cmp	r1, #0
 8004b2c:	bf08      	it	eq
 8004b2e:	2501      	moveq	r5, #1
 8004b30:	069f      	lsls	r7, r3, #26
 8004b32:	d533      	bpl.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x100>
 8004b34:	2300      	movs	r3, #0
 8004b36:	9303      	str	r3, [sp, #12]
 8004b38:	4ba5      	ldr	r3, [pc, #660]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004b3a:	4fa6      	ldr	r7, [pc, #664]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8004b3c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004b3e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004b42:	641a      	str	r2, [r3, #64]	; 0x40
 8004b44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b4a:	9303      	str	r3, [sp, #12]
 8004b4c:	9b03      	ldr	r3, [sp, #12]
 8004b4e:	683b      	ldr	r3, [r7, #0]
 8004b50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b54:	603b      	str	r3, [r7, #0]
 8004b56:	f7ff ff9b 	bl	8004a90 <HAL_GetTick>
 8004b5a:	4680      	mov	r8, r0
 8004b5c:	683b      	ldr	r3, [r7, #0]
 8004b5e:	05d8      	lsls	r0, r3, #23
 8004b60:	f140 81a4 	bpl.w	8004eac <HAL_RCCEx_PeriphCLKConfig+0x410>
 8004b64:	4f9a      	ldr	r7, [pc, #616]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004b66:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004b68:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8004b6c:	f040 81a9 	bne.w	8004ec2 <HAL_RCCEx_PeriphCLKConfig+0x426>
 8004b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b72:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8004b76:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8004b7a:	4a95      	ldr	r2, [pc, #596]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004b7c:	f040 81c4 	bne.w	8004f08 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 8004b80:	6891      	ldr	r1, [r2, #8]
 8004b82:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8004b86:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004b8a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8004b8e:	4301      	orrs	r1, r0
 8004b90:	6091      	str	r1, [r2, #8]
 8004b92:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8004b94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b98:	430b      	orrs	r3, r1
 8004b9a:	6713      	str	r3, [r2, #112]	; 0x70
 8004b9c:	6823      	ldr	r3, [r4, #0]
 8004b9e:	06db      	lsls	r3, r3, #27
 8004ba0:	bf42      	ittt	mi
 8004ba2:	4b8d      	ldrmi	r3, [pc, #564]	; (8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8004ba4:	f894 2058 	ldrbmi.w	r2, [r4, #88]	; 0x58
 8004ba8:	601a      	strmi	r2, [r3, #0]
 8004baa:	6823      	ldr	r3, [r4, #0]
 8004bac:	061f      	lsls	r7, r3, #24
 8004bae:	d508      	bpl.n	8004bc2 <HAL_RCCEx_PeriphCLKConfig+0x126>
 8004bb0:	4987      	ldr	r1, [pc, #540]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004bb2:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8004bb4:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8004bb8:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8004bbc:	4302      	orrs	r2, r0
 8004bbe:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8004bc2:	0658      	lsls	r0, r3, #25
 8004bc4:	d508      	bpl.n	8004bd8 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8004bc6:	4982      	ldr	r1, [pc, #520]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004bc8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004bca:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8004bce:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8004bd2:	4302      	orrs	r2, r0
 8004bd4:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8004bd8:	05d9      	lsls	r1, r3, #23
 8004bda:	d50c      	bpl.n	8004bf6 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8004bdc:	487c      	ldr	r0, [pc, #496]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004bde:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8004be0:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8004be4:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 8004be8:	430a      	orrs	r2, r1
 8004bea:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 8004bee:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8004bf2:	bf08      	it	eq
 8004bf4:	2501      	moveq	r5, #1
 8004bf6:	059a      	lsls	r2, r3, #22
 8004bf8:	d508      	bpl.n	8004c0c <HAL_RCCEx_PeriphCLKConfig+0x170>
 8004bfa:	4975      	ldr	r1, [pc, #468]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004bfc:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8004bfe:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8004c02:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8004c06:	4302      	orrs	r2, r0
 8004c08:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8004c0c:	055f      	lsls	r7, r3, #21
 8004c0e:	f100 817f 	bmi.w	8004f10 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8004c12:	2e01      	cmp	r6, #1
 8004c14:	f040 818a 	bne.w	8004f2c <HAL_RCCEx_PeriphCLKConfig+0x490>
 8004c18:	4e70      	ldr	r6, [pc, #448]	; (8004ddc <HAL_RCCEx_PeriphCLKConfig+0x340>)
 8004c1a:	4f6d      	ldr	r7, [pc, #436]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	6033      	str	r3, [r6, #0]
 8004c20:	f7ff ff36 	bl	8004a90 <HAL_GetTick>
 8004c24:	9601      	str	r6, [sp, #4]
 8004c26:	4680      	mov	r8, r0
 8004c28:	683b      	ldr	r3, [r7, #0]
 8004c2a:	0118      	lsls	r0, r3, #4
 8004c2c:	f100 820b 	bmi.w	8005046 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8004c30:	6820      	ldr	r0, [r4, #0]
 8004c32:	07c1      	lsls	r1, r0, #31
 8004c34:	d501      	bpl.n	8004c3a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8004c36:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004c38:	b123      	cbz	r3, 8004c44 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8004c3a:	0782      	lsls	r2, r0, #30
 8004c3c:	d546      	bpl.n	8004ccc <HAL_RCCEx_PeriphCLKConfig+0x230>
 8004c3e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d143      	bne.n	8004ccc <HAL_RCCEx_PeriphCLKConfig+0x230>
 8004c44:	4f62      	ldr	r7, [pc, #392]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004c46:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8004c4a:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8004c4e:	fa91 fea1 	rbit	lr, r1
 8004c52:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8004c56:	fabe fe8e 	clz	lr, lr
 8004c5a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004c5e:	fa9c f8ac 	rbit	r8, r12
 8004c62:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 8004c66:	fab8 f888 	clz	r8, r8
 8004c6a:	fa9b fbab 	rbit	r11, r11
 8004c6e:	fabb fb8b 	clz	r11, r11
 8004c72:	fa91 f1a1 	rbit	r1, r1
 8004c76:	fab1 f181 	clz	r1, r1
 8004c7a:	fa9c fcac 	rbit	r12, r12
 8004c7e:	f04f 4ae0 	mov.w	r10, #1879048192	; 0x70000000
 8004c82:	fabc fc8c 	clz	r12, r12
 8004c86:	fa9a faaa 	rbit	r10, r10
 8004c8a:	68a6      	ldr	r6, [r4, #8]
 8004c8c:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004c90:	fa06 f90b 	lsl.w	r9, r6, r11
 8004c94:	6966      	ldr	r6, [r4, #20]
 8004c96:	faba fa8a 	clz	r10, r10
 8004c9a:	fa22 f20e 	lsr.w	r2, r2, lr
 8004c9e:	fa06 fa0a 	lsl.w	r10, r6, r10
 8004ca2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8004ca6:	6866      	ldr	r6, [r4, #4]
 8004ca8:	3201      	adds	r2, #1
 8004caa:	ea49 090a 	orr.w	r9, r9, r10
 8004cae:	fa23 f308 	lsr.w	r3, r3, r8
 8004cb2:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8004cb6:	ea49 0906 	orr.w	r9, r9, r6
 8004cba:	fa03 f30c 	lsl.w	r3, r3, r12
 8004cbe:	3a01      	subs	r2, #1
 8004cc0:	ea49 0303 	orr.w	r3, r9, r3
 8004cc4:	408a      	lsls	r2, r1
 8004cc6:	4313      	orrs	r3, r2
 8004cc8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004ccc:	0743      	lsls	r3, r0, #29
 8004cce:	d503      	bpl.n	8004cd8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8004cd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004cd2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004cd6:	d005      	beq.n	8004ce4 <HAL_RCCEx_PeriphCLKConfig+0x248>
 8004cd8:	0707      	lsls	r7, r0, #28
 8004cda:	d550      	bpl.n	8004d7e <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8004cdc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004cde:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004ce2:	d14c      	bne.n	8004d7e <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8004ce4:	4f3a      	ldr	r7, [pc, #232]	; (8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004ce6:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8004cea:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8004cee:	fa91 fea1 	rbit	lr, r1
 8004cf2:	f04f 4ce0 	mov.w	r12, #1879048192	; 0x70000000
 8004cf6:	fabe fe8e 	clz	lr, lr
 8004cfa:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004cfe:	fa9c f8ac 	rbit	r8, r12
 8004d02:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 8004d06:	fab8 f888 	clz	r8, r8
 8004d0a:	fa9b fbab 	rbit	r11, r11
 8004d0e:	fabb fb8b 	clz	r11, r11
 8004d12:	fa91 f1a1 	rbit	r1, r1
 8004d16:	f04f 6a70 	mov.w	r10, #251658240	; 0xf000000
 8004d1a:	fab1 f181 	clz	r1, r1
 8004d1e:	fa9a faaa 	rbit	r10, r10
 8004d22:	faba fa8a 	clz	r10, r10
 8004d26:	fa9c fcac 	rbit	r12, r12
 8004d2a:	68a6      	ldr	r6, [r4, #8]
 8004d2c:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004d30:	fa06 f90b 	lsl.w	r9, r6, r11
 8004d34:	6926      	ldr	r6, [r4, #16]
 8004d36:	fa22 f20e 	lsr.w	r2, r2, lr
 8004d3a:	fa06 fa0a 	lsl.w	r10, r6, r10
 8004d3e:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8004d42:	6866      	ldr	r6, [r4, #4]
 8004d44:	3201      	adds	r2, #1
 8004d46:	fabc fc8c 	clz	r12, r12
 8004d4a:	ea49 090a 	orr.w	r9, r9, r10
 8004d4e:	fa23 f308 	lsr.w	r3, r3, r8
 8004d52:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8004d56:	ea49 0906 	orr.w	r9, r9, r6
 8004d5a:	fa03 f30c 	lsl.w	r3, r3, r12
 8004d5e:	3a01      	subs	r2, #1
 8004d60:	408a      	lsls	r2, r1
 8004d62:	ea49 0303 	orr.w	r3, r9, r3
 8004d66:	4313      	orrs	r3, r2
 8004d68:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004d6c:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8004d70:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8004d72:	f022 021f 	bic.w	r2, r2, #31
 8004d76:	3b01      	subs	r3, #1
 8004d78:	4313      	orrs	r3, r2
 8004d7a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8004d7e:	0546      	lsls	r6, r0, #21
 8004d80:	d553      	bpl.n	8004e2a <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8004d82:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8004d84:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004d88:	d14f      	bne.n	8004e2a <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8004d8a:	f8df c044 	ldr.w	r12, [pc, #68]	; 8004dd0 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8004d8e:	f44f 3b40 	mov.w	r11, #196608	; 0x30000
 8004d92:	f8dc 2084 	ldr.w	r2, [r12, #132]	; 0x84
 8004d96:	fa9b f8ab 	rbit	r8, r11
 8004d9a:	f04f 47e0 	mov.w	r7, #1879048192	; 0x70000000
 8004d9e:	fab8 f888 	clz	r8, r8
 8004da2:	f8dc 1084 	ldr.w	r1, [r12, #132]	; 0x84
 8004da6:	fa97 f9a7 	rbit	r9, r7
 8004daa:	f647 7ac0 	movw	r10, #32704	; 0x7fc0
 8004dae:	fab9 f989 	clz	r9, r9
 8004db2:	fa9a faaa 	rbit	r10, r10
 8004db6:	faba fa8a 	clz	r10, r10
 8004dba:	fa9b fbab 	rbit	r11, r11
 8004dbe:	f04f 6e70 	mov.w	lr, #251658240	; 0xf000000
 8004dc2:	fabb fb8b 	clz	r11, r11
 8004dc6:	fa9e feae 	rbit	lr, lr
 8004dca:	fabe fe8e 	clz	lr, lr
 8004dce:	e007      	b.n	8004de0 <HAL_RCCEx_PeriphCLKConfig+0x344>
 8004dd0:	40023800 	.word	0x40023800
 8004dd4:	40007000 	.word	0x40007000
 8004dd8:	424711e0 	.word	0x424711e0
 8004ddc:	42470068 	.word	0x42470068
 8004de0:	fa97 f7a7 	rbit	r7, r7
 8004de4:	68e3      	ldr	r3, [r4, #12]
 8004de6:	68a6      	ldr	r6, [r4, #8]
 8004de8:	085b      	lsrs	r3, r3, #1
 8004dea:	3b01      	subs	r3, #1
 8004dec:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004df0:	fa06 fa0a 	lsl.w	r10, r6, r10
 8004df4:	fa03 f30b 	lsl.w	r3, r3, r11
 8004df8:	6866      	ldr	r6, [r4, #4]
 8004dfa:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8004dfe:	fa22 f808 	lsr.w	r8, r2, r8
 8004e02:	fab7 f787 	clz	r7, r7
 8004e06:	ea43 030a 	orr.w	r3, r3, r10
 8004e0a:	fa21 f909 	lsr.w	r9, r1, r9
 8004e0e:	f108 0801 	add.w	r8, r8, #1
 8004e12:	4333      	orrs	r3, r6
 8004e14:	fa09 f707 	lsl.w	r7, r9, r7
 8004e18:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8004e1c:	431f      	orrs	r7, r3
 8004e1e:	fa08 fe0e 	lsl.w	lr, r8, lr
 8004e22:	ea47 070e 	orr.w	r7, r7, lr
 8004e26:	f8cc 7084 	str.w	r7, [r12, #132]	; 0x84
 8004e2a:	0501      	lsls	r1, r0, #20
 8004e2c:	d52c      	bpl.n	8004e88 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8004e2e:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8004e32:	fa97 f7a7 	rbit	r7, r7
 8004e36:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8004e3a:	fab7 f787 	clz	r7, r7
 8004e3e:	fa93 f3a3 	rbit	r3, r3
 8004e42:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8004e46:	fab3 f283 	clz	r2, r3
 8004e4a:	fa90 f0a0 	rbit	r0, r0
 8004e4e:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8004e52:	fab0 f080 	clz	r0, r0
 8004e56:	fa91 f1a1 	rbit	r1, r1
 8004e5a:	68e3      	ldr	r3, [r4, #12]
 8004e5c:	085b      	lsrs	r3, r3, #1
 8004e5e:	3b01      	subs	r3, #1
 8004e60:	4093      	lsls	r3, r2
 8004e62:	68a2      	ldr	r2, [r4, #8]
 8004e64:	fa02 f707 	lsl.w	r7, r2, r7
 8004e68:	6862      	ldr	r2, [r4, #4]
 8004e6a:	433b      	orrs	r3, r7
 8004e6c:	4313      	orrs	r3, r2
 8004e6e:	6922      	ldr	r2, [r4, #16]
 8004e70:	fa02 f000 	lsl.w	r0, r2, r0
 8004e74:	6962      	ldr	r2, [r4, #20]
 8004e76:	fab1 f181 	clz	r1, r1
 8004e7a:	fa02 f101 	lsl.w	r1, r2, r1
 8004e7e:	4303      	orrs	r3, r0
 8004e80:	4a7b      	ldr	r2, [pc, #492]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004e82:	430b      	orrs	r3, r1
 8004e84:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8004e88:	9a01      	ldr	r2, [sp, #4]
 8004e8a:	4e79      	ldr	r6, [pc, #484]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004e8c:	2301      	movs	r3, #1
 8004e8e:	6013      	str	r3, [r2, #0]
 8004e90:	f7ff fdfe 	bl	8004a90 <HAL_GetTick>
 8004e94:	4607      	mov	r7, r0
 8004e96:	6833      	ldr	r3, [r6, #0]
 8004e98:	011a      	lsls	r2, r3, #4
 8004e9a:	d44b      	bmi.n	8004f34 <HAL_RCCEx_PeriphCLKConfig+0x498>
 8004e9c:	f7ff fdf8 	bl	8004a90 <HAL_GetTick>
 8004ea0:	1bc0      	subs	r0, r0, r7
 8004ea2:	2802      	cmp	r0, #2
 8004ea4:	d9f7      	bls.n	8004e96 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8004ea6:	e008      	b.n	8004eba <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004ea8:	2601      	movs	r6, #1
 8004eaa:	e641      	b.n	8004b30 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8004eac:	f7ff fdf0 	bl	8004a90 <HAL_GetTick>
 8004eb0:	eba0 0008 	sub.w	r0, r0, r8
 8004eb4:	2802      	cmp	r0, #2
 8004eb6:	f67f ae51 	bls.w	8004b5c <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8004eba:	2003      	movs	r0, #3
 8004ebc:	b005      	add	sp, #20
 8004ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8004ec2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ec4:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8004ec8:	4293      	cmp	r3, r2
 8004eca:	f43f ae51 	beq.w	8004b70 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004ece:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004ed0:	4a68      	ldr	r2, [pc, #416]	; (8005074 <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 8004ed2:	2101      	movs	r1, #1
 8004ed4:	6011      	str	r1, [r2, #0]
 8004ed6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004eda:	2100      	movs	r1, #0
 8004edc:	6011      	str	r1, [r2, #0]
 8004ede:	673b      	str	r3, [r7, #112]	; 0x70
 8004ee0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004ee2:	07d9      	lsls	r1, r3, #31
 8004ee4:	f57f ae44 	bpl.w	8004b70 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004ee8:	f7ff fdd2 	bl	8004a90 <HAL_GetTick>
 8004eec:	f241 3988 	movw	r9, #5000	; 0x1388
 8004ef0:	4680      	mov	r8, r0
 8004ef2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004ef4:	079a      	lsls	r2, r3, #30
 8004ef6:	f53f ae3b 	bmi.w	8004b70 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004efa:	f7ff fdc9 	bl	8004a90 <HAL_GetTick>
 8004efe:	eba0 0008 	sub.w	r0, r0, r8
 8004f02:	4548      	cmp	r0, r9
 8004f04:	d9f5      	bls.n	8004ef2 <HAL_RCCEx_PeriphCLKConfig+0x456>
 8004f06:	e7d8      	b.n	8004eba <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004f08:	6891      	ldr	r1, [r2, #8]
 8004f0a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004f0e:	e63f      	b.n	8004b90 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004f10:	4857      	ldr	r0, [pc, #348]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004f12:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8004f14:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8004f18:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8004f1c:	430a      	orrs	r2, r1
 8004f1e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 8004f22:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8004f26:	f47f ae74 	bne.w	8004c12 <HAL_RCCEx_PeriphCLKConfig+0x176>
 8004f2a:	e675      	b.n	8004c18 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8004f2c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004f30:	f43f ae72 	beq.w	8004c18 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8004f34:	2d01      	cmp	r5, #1
 8004f36:	f040 8084 	bne.w	8005042 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8004f3a:	4d4f      	ldr	r5, [pc, #316]	; (8005078 <HAL_RCCEx_PeriphCLKConfig+0x5dc>)
 8004f3c:	4e4c      	ldr	r6, [pc, #304]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004f3e:	2300      	movs	r3, #0
 8004f40:	602b      	str	r3, [r5, #0]
 8004f42:	f7ff fda5 	bl	8004a90 <HAL_GetTick>
 8004f46:	4607      	mov	r7, r0
 8004f48:	6833      	ldr	r3, [r6, #0]
 8004f4a:	009b      	lsls	r3, r3, #2
 8004f4c:	f100 8083 	bmi.w	8005056 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8004f50:	6820      	ldr	r0, [r4, #0]
 8004f52:	0746      	lsls	r6, r0, #29
 8004f54:	d501      	bpl.n	8004f5a <HAL_RCCEx_PeriphCLKConfig+0x4be>
 8004f56:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004f58:	b11b      	cbz	r3, 8004f62 <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 8004f5a:	0701      	lsls	r1, r0, #28
 8004f5c:	d538      	bpl.n	8004fd0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8004f5e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004f60:	bbb3      	cbnz	r3, 8004fd0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8004f62:	4943      	ldr	r1, [pc, #268]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004f64:	f44f 3640 	mov.w	r6, #196608	; 0x30000
 8004f68:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8004f6c:	fa96 fea6 	rbit	lr, r6
 8004f70:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8004f74:	fabe fe8e 	clz	lr, lr
 8004f78:	fa92 f2a2 	rbit	r2, r2
 8004f7c:	fab2 f782 	clz	r7, r2
 8004f80:	fa96 f6a6 	rbit	r6, r6
 8004f84:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8004f88:	fab6 f686 	clz	r6, r6
 8004f8c:	fa9c fcac 	rbit	r12, r12
 8004f90:	69e2      	ldr	r2, [r4, #28]
 8004f92:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004f96:	40ba      	lsls	r2, r7
 8004f98:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8004f9a:	fabc fc8c 	clz	r12, r12
 8004f9e:	fa23 f30e 	lsr.w	r3, r3, lr
 8004fa2:	fa07 f70c 	lsl.w	r7, r7, r12
 8004fa6:	3301      	adds	r3, #1
 8004fa8:	433a      	orrs	r2, r7
 8004faa:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004fae:	69a7      	ldr	r7, [r4, #24]
 8004fb0:	3b01      	subs	r3, #1
 8004fb2:	433a      	orrs	r2, r7
 8004fb4:	40b3      	lsls	r3, r6
 8004fb6:	4313      	orrs	r3, r2
 8004fb8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004fbc:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8004fc0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004fc2:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004fc6:	3a01      	subs	r2, #1
 8004fc8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004fcc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004fd0:	05c2      	lsls	r2, r0, #23
 8004fd2:	d52d      	bpl.n	8005030 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8004fd4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004fd6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8004fda:	d129      	bne.n	8005030 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8004fdc:	4924      	ldr	r1, [pc, #144]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004fde:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8004fe2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8004fe6:	fa90 f6a0 	rbit	r6, r0
 8004fea:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8004fee:	fab6 f686 	clz	r6, r6
 8004ff2:	fa9e feae 	rbit	lr, lr
 8004ff6:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8004ffa:	fabe fe8e 	clz	lr, lr
 8004ffe:	fa93 f3a3 	rbit	r3, r3
 8005002:	fab3 f783 	clz	r7, r3
 8005006:	fa90 f0a0 	rbit	r0, r0
 800500a:	6a23      	ldr	r3, [r4, #32]
 800500c:	085b      	lsrs	r3, r3, #1
 800500e:	3b01      	subs	r3, #1
 8005010:	40bb      	lsls	r3, r7
 8005012:	69e7      	ldr	r7, [r4, #28]
 8005014:	69a4      	ldr	r4, [r4, #24]
 8005016:	fa07 f70e 	lsl.w	r7, r7, lr
 800501a:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 800501e:	fab0 f080 	clz	r0, r0
 8005022:	433b      	orrs	r3, r7
 8005024:	40f2      	lsrs	r2, r6
 8005026:	4323      	orrs	r3, r4
 8005028:	4082      	lsls	r2, r0
 800502a:	4313      	orrs	r3, r2
 800502c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005030:	2301      	movs	r3, #1
 8005032:	602b      	str	r3, [r5, #0]
 8005034:	f7ff fd2c 	bl	8004a90 <HAL_GetTick>
 8005038:	4c0d      	ldr	r4, [pc, #52]	; (8005070 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 800503a:	4605      	mov	r5, r0
 800503c:	6823      	ldr	r3, [r4, #0]
 800503e:	009b      	lsls	r3, r3, #2
 8005040:	d510      	bpl.n	8005064 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8005042:	2000      	movs	r0, #0
 8005044:	e73a      	b.n	8004ebc <HAL_RCCEx_PeriphCLKConfig+0x420>
 8005046:	f7ff fd23 	bl	8004a90 <HAL_GetTick>
 800504a:	eba0 0008 	sub.w	r0, r0, r8
 800504e:	2802      	cmp	r0, #2
 8005050:	f67f adea 	bls.w	8004c28 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8005054:	e731      	b.n	8004eba <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005056:	f7ff fd1b 	bl	8004a90 <HAL_GetTick>
 800505a:	1bc0      	subs	r0, r0, r7
 800505c:	2802      	cmp	r0, #2
 800505e:	f67f af73 	bls.w	8004f48 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 8005062:	e72a      	b.n	8004eba <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005064:	f7ff fd14 	bl	8004a90 <HAL_GetTick>
 8005068:	1b40      	subs	r0, r0, r5
 800506a:	2802      	cmp	r0, #2
 800506c:	d9e6      	bls.n	800503c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 800506e:	e724      	b.n	8004eba <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8005070:	40023800 	.word	0x40023800
 8005074:	42470e40 	.word	0x42470e40
 8005078:	42470070 	.word	0x42470070

0800507c <HAL_RCC_OscConfig>:
 800507c:	6803      	ldr	r3, [r0, #0]
 800507e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005080:	07df      	lsls	r7, r3, #31
 8005082:	4604      	mov	r4, r0
 8005084:	d438      	bmi.n	80050f8 <HAL_RCC_OscConfig+0x7c>
 8005086:	6823      	ldr	r3, [r4, #0]
 8005088:	079e      	lsls	r6, r3, #30
 800508a:	d47a      	bmi.n	8005182 <HAL_RCC_OscConfig+0x106>
 800508c:	6823      	ldr	r3, [r4, #0]
 800508e:	071e      	lsls	r6, r3, #28
 8005090:	f100 80cf 	bmi.w	8005232 <HAL_RCC_OscConfig+0x1b6>
 8005094:	6823      	ldr	r3, [r4, #0]
 8005096:	075d      	lsls	r5, r3, #29
 8005098:	d528      	bpl.n	80050ec <HAL_RCC_OscConfig+0x70>
 800509a:	2300      	movs	r3, #0
 800509c:	9301      	str	r3, [sp, #4]
 800509e:	4baf      	ldr	r3, [pc, #700]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80050a0:	4daf      	ldr	r5, [pc, #700]	; (8005360 <HAL_RCC_OscConfig+0x2e4>)
 80050a2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80050a4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80050a8:	641a      	str	r2, [r3, #64]	; 0x40
 80050aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80050b0:	9301      	str	r3, [sp, #4]
 80050b2:	9b01      	ldr	r3, [sp, #4]
 80050b4:	682b      	ldr	r3, [r5, #0]
 80050b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80050ba:	602b      	str	r3, [r5, #0]
 80050bc:	f7ff fce8 	bl	8004a90 <HAL_GetTick>
 80050c0:	4606      	mov	r6, r0
 80050c2:	682b      	ldr	r3, [r5, #0]
 80050c4:	05da      	lsls	r2, r3, #23
 80050c6:	f140 80d6 	bpl.w	8005276 <HAL_RCC_OscConfig+0x1fa>
 80050ca:	4ba6      	ldr	r3, [pc, #664]	; (8005364 <HAL_RCC_OscConfig+0x2e8>)
 80050cc:	7a22      	ldrb	r2, [r4, #8]
 80050ce:	701a      	strb	r2, [r3, #0]
 80050d0:	68a3      	ldr	r3, [r4, #8]
 80050d2:	2b00      	cmp	r3, #0
 80050d4:	f000 80dd 	beq.w	8005292 <HAL_RCC_OscConfig+0x216>
 80050d8:	f7ff fcda 	bl	8004a90 <HAL_GetTick>
 80050dc:	4d9f      	ldr	r5, [pc, #636]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80050de:	4606      	mov	r6, r0
 80050e0:	f241 3788 	movw	r7, #5000	; 0x1388
 80050e4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80050e6:	079b      	lsls	r3, r3, #30
 80050e8:	f140 80cc 	bpl.w	8005284 <HAL_RCC_OscConfig+0x208>
 80050ec:	69a2      	ldr	r2, [r4, #24]
 80050ee:	2a00      	cmp	r2, #0
 80050f0:	f040 80df 	bne.w	80052b2 <HAL_RCC_OscConfig+0x236>
 80050f4:	2000      	movs	r0, #0
 80050f6:	e01e      	b.n	8005136 <HAL_RCC_OscConfig+0xba>
 80050f8:	4b98      	ldr	r3, [pc, #608]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80050fa:	689a      	ldr	r2, [r3, #8]
 80050fc:	f002 020c 	and.w	r2, r2, #12
 8005100:	2a04      	cmp	r2, #4
 8005102:	d010      	beq.n	8005126 <HAL_RCC_OscConfig+0xaa>
 8005104:	689a      	ldr	r2, [r3, #8]
 8005106:	f002 020c 	and.w	r2, r2, #12
 800510a:	2a08      	cmp	r2, #8
 800510c:	d102      	bne.n	8005114 <HAL_RCC_OscConfig+0x98>
 800510e:	685b      	ldr	r3, [r3, #4]
 8005110:	025d      	lsls	r5, r3, #9
 8005112:	d408      	bmi.n	8005126 <HAL_RCC_OscConfig+0xaa>
 8005114:	4a91      	ldr	r2, [pc, #580]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005116:	6893      	ldr	r3, [r2, #8]
 8005118:	f003 030c 	and.w	r3, r3, #12
 800511c:	2b0c      	cmp	r3, #12
 800511e:	d10c      	bne.n	800513a <HAL_RCC_OscConfig+0xbe>
 8005120:	6853      	ldr	r3, [r2, #4]
 8005122:	0258      	lsls	r0, r3, #9
 8005124:	d509      	bpl.n	800513a <HAL_RCC_OscConfig+0xbe>
 8005126:	4b8d      	ldr	r3, [pc, #564]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	0399      	lsls	r1, r3, #14
 800512c:	d5ab      	bpl.n	8005086 <HAL_RCC_OscConfig+0xa>
 800512e:	6863      	ldr	r3, [r4, #4]
 8005130:	2b00      	cmp	r3, #0
 8005132:	d1a8      	bne.n	8005086 <HAL_RCC_OscConfig+0xa>
 8005134:	2001      	movs	r0, #1
 8005136:	b003      	add	sp, #12
 8005138:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800513a:	4b8b      	ldr	r3, [pc, #556]	; (8005368 <HAL_RCC_OscConfig+0x2ec>)
 800513c:	7922      	ldrb	r2, [r4, #4]
 800513e:	701a      	strb	r2, [r3, #0]
 8005140:	6863      	ldr	r3, [r4, #4]
 8005142:	b17b      	cbz	r3, 8005164 <HAL_RCC_OscConfig+0xe8>
 8005144:	f7ff fca4 	bl	8004a90 <HAL_GetTick>
 8005148:	4d84      	ldr	r5, [pc, #528]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 800514a:	4606      	mov	r6, r0
 800514c:	f241 3788 	movw	r7, #5000	; 0x1388
 8005150:	682b      	ldr	r3, [r5, #0]
 8005152:	039a      	lsls	r2, r3, #14
 8005154:	d497      	bmi.n	8005086 <HAL_RCC_OscConfig+0xa>
 8005156:	f7ff fc9b 	bl	8004a90 <HAL_GetTick>
 800515a:	1b80      	subs	r0, r0, r6
 800515c:	42b8      	cmp	r0, r7
 800515e:	d9f7      	bls.n	8005150 <HAL_RCC_OscConfig+0xd4>
 8005160:	2003      	movs	r0, #3
 8005162:	e7e8      	b.n	8005136 <HAL_RCC_OscConfig+0xba>
 8005164:	f7ff fc94 	bl	8004a90 <HAL_GetTick>
 8005168:	4d7c      	ldr	r5, [pc, #496]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 800516a:	4606      	mov	r6, r0
 800516c:	f241 3788 	movw	r7, #5000	; 0x1388
 8005170:	682b      	ldr	r3, [r5, #0]
 8005172:	039b      	lsls	r3, r3, #14
 8005174:	d587      	bpl.n	8005086 <HAL_RCC_OscConfig+0xa>
 8005176:	f7ff fc8b 	bl	8004a90 <HAL_GetTick>
 800517a:	1b80      	subs	r0, r0, r6
 800517c:	42b8      	cmp	r0, r7
 800517e:	d9f7      	bls.n	8005170 <HAL_RCC_OscConfig+0xf4>
 8005180:	e7ee      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005182:	4b76      	ldr	r3, [pc, #472]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005184:	689a      	ldr	r2, [r3, #8]
 8005186:	f012 0f0c 	tst.w	r2, #12
 800518a:	d010      	beq.n	80051ae <HAL_RCC_OscConfig+0x132>
 800518c:	689a      	ldr	r2, [r3, #8]
 800518e:	f002 020c 	and.w	r2, r2, #12
 8005192:	2a08      	cmp	r2, #8
 8005194:	d102      	bne.n	800519c <HAL_RCC_OscConfig+0x120>
 8005196:	685b      	ldr	r3, [r3, #4]
 8005198:	0258      	lsls	r0, r3, #9
 800519a:	d508      	bpl.n	80051ae <HAL_RCC_OscConfig+0x132>
 800519c:	4a6f      	ldr	r2, [pc, #444]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 800519e:	6893      	ldr	r3, [r2, #8]
 80051a0:	f003 030c 	and.w	r3, r3, #12
 80051a4:	2b0c      	cmp	r3, #12
 80051a6:	d116      	bne.n	80051d6 <HAL_RCC_OscConfig+0x15a>
 80051a8:	6853      	ldr	r3, [r2, #4]
 80051aa:	0259      	lsls	r1, r3, #9
 80051ac:	d413      	bmi.n	80051d6 <HAL_RCC_OscConfig+0x15a>
 80051ae:	4b6b      	ldr	r3, [pc, #428]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80051b0:	681a      	ldr	r2, [r3, #0]
 80051b2:	0792      	lsls	r2, r2, #30
 80051b4:	d502      	bpl.n	80051bc <HAL_RCC_OscConfig+0x140>
 80051b6:	68e2      	ldr	r2, [r4, #12]
 80051b8:	2a01      	cmp	r2, #1
 80051ba:	d1bb      	bne.n	8005134 <HAL_RCC_OscConfig+0xb8>
 80051bc:	6818      	ldr	r0, [r3, #0]
 80051be:	22f8      	movs	r2, #248	; 0xf8
 80051c0:	fa92 f2a2 	rbit	r2, r2
 80051c4:	fab2 f182 	clz	r1, r2
 80051c8:	6922      	ldr	r2, [r4, #16]
 80051ca:	408a      	lsls	r2, r1
 80051cc:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 80051d0:	430a      	orrs	r2, r1
 80051d2:	601a      	str	r2, [r3, #0]
 80051d4:	e75a      	b.n	800508c <HAL_RCC_OscConfig+0x10>
 80051d6:	68e2      	ldr	r2, [r4, #12]
 80051d8:	4b64      	ldr	r3, [pc, #400]	; (800536c <HAL_RCC_OscConfig+0x2f0>)
 80051da:	b1da      	cbz	r2, 8005214 <HAL_RCC_OscConfig+0x198>
 80051dc:	2201      	movs	r2, #1
 80051de:	601a      	str	r2, [r3, #0]
 80051e0:	f7ff fc56 	bl	8004a90 <HAL_GetTick>
 80051e4:	4d5d      	ldr	r5, [pc, #372]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80051e6:	4606      	mov	r6, r0
 80051e8:	682b      	ldr	r3, [r5, #0]
 80051ea:	079b      	lsls	r3, r3, #30
 80051ec:	d50c      	bpl.n	8005208 <HAL_RCC_OscConfig+0x18c>
 80051ee:	6829      	ldr	r1, [r5, #0]
 80051f0:	23f8      	movs	r3, #248	; 0xf8
 80051f2:	fa93 f3a3 	rbit	r3, r3
 80051f6:	fab3 f283 	clz	r2, r3
 80051fa:	6923      	ldr	r3, [r4, #16]
 80051fc:	4093      	lsls	r3, r2
 80051fe:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8005202:	4313      	orrs	r3, r2
 8005204:	602b      	str	r3, [r5, #0]
 8005206:	e741      	b.n	800508c <HAL_RCC_OscConfig+0x10>
 8005208:	f7ff fc42 	bl	8004a90 <HAL_GetTick>
 800520c:	1b80      	subs	r0, r0, r6
 800520e:	2802      	cmp	r0, #2
 8005210:	d9ea      	bls.n	80051e8 <HAL_RCC_OscConfig+0x16c>
 8005212:	e7a5      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005214:	601a      	str	r2, [r3, #0]
 8005216:	f7ff fc3b 	bl	8004a90 <HAL_GetTick>
 800521a:	4d50      	ldr	r5, [pc, #320]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 800521c:	4606      	mov	r6, r0
 800521e:	682b      	ldr	r3, [r5, #0]
 8005220:	079f      	lsls	r7, r3, #30
 8005222:	f57f af33 	bpl.w	800508c <HAL_RCC_OscConfig+0x10>
 8005226:	f7ff fc33 	bl	8004a90 <HAL_GetTick>
 800522a:	1b80      	subs	r0, r0, r6
 800522c:	2802      	cmp	r0, #2
 800522e:	d9f6      	bls.n	800521e <HAL_RCC_OscConfig+0x1a2>
 8005230:	e796      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005232:	6962      	ldr	r2, [r4, #20]
 8005234:	4b4e      	ldr	r3, [pc, #312]	; (8005370 <HAL_RCC_OscConfig+0x2f4>)
 8005236:	b17a      	cbz	r2, 8005258 <HAL_RCC_OscConfig+0x1dc>
 8005238:	2201      	movs	r2, #1
 800523a:	601a      	str	r2, [r3, #0]
 800523c:	f7ff fc28 	bl	8004a90 <HAL_GetTick>
 8005240:	4d46      	ldr	r5, [pc, #280]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005242:	4606      	mov	r6, r0
 8005244:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005246:	0798      	lsls	r0, r3, #30
 8005248:	f53f af24 	bmi.w	8005094 <HAL_RCC_OscConfig+0x18>
 800524c:	f7ff fc20 	bl	8004a90 <HAL_GetTick>
 8005250:	1b80      	subs	r0, r0, r6
 8005252:	2802      	cmp	r0, #2
 8005254:	d9f6      	bls.n	8005244 <HAL_RCC_OscConfig+0x1c8>
 8005256:	e783      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005258:	601a      	str	r2, [r3, #0]
 800525a:	f7ff fc19 	bl	8004a90 <HAL_GetTick>
 800525e:	4d3f      	ldr	r5, [pc, #252]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005260:	4606      	mov	r6, r0
 8005262:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005264:	0799      	lsls	r1, r3, #30
 8005266:	f57f af15 	bpl.w	8005094 <HAL_RCC_OscConfig+0x18>
 800526a:	f7ff fc11 	bl	8004a90 <HAL_GetTick>
 800526e:	1b80      	subs	r0, r0, r6
 8005270:	2802      	cmp	r0, #2
 8005272:	d9f6      	bls.n	8005262 <HAL_RCC_OscConfig+0x1e6>
 8005274:	e774      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005276:	f7ff fc0b 	bl	8004a90 <HAL_GetTick>
 800527a:	1b80      	subs	r0, r0, r6
 800527c:	2802      	cmp	r0, #2
 800527e:	f67f af20 	bls.w	80050c2 <HAL_RCC_OscConfig+0x46>
 8005282:	e76d      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005284:	f7ff fc04 	bl	8004a90 <HAL_GetTick>
 8005288:	1b80      	subs	r0, r0, r6
 800528a:	42b8      	cmp	r0, r7
 800528c:	f67f af2a 	bls.w	80050e4 <HAL_RCC_OscConfig+0x68>
 8005290:	e766      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005292:	f7ff fbfd 	bl	8004a90 <HAL_GetTick>
 8005296:	4d31      	ldr	r5, [pc, #196]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005298:	4606      	mov	r6, r0
 800529a:	f241 3788 	movw	r7, #5000	; 0x1388
 800529e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80052a0:	0798      	lsls	r0, r3, #30
 80052a2:	f57f af23 	bpl.w	80050ec <HAL_RCC_OscConfig+0x70>
 80052a6:	f7ff fbf3 	bl	8004a90 <HAL_GetTick>
 80052aa:	1b80      	subs	r0, r0, r6
 80052ac:	42b8      	cmp	r0, r7
 80052ae:	d9f6      	bls.n	800529e <HAL_RCC_OscConfig+0x222>
 80052b0:	e756      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 80052b2:	4d2a      	ldr	r5, [pc, #168]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 80052b4:	68ab      	ldr	r3, [r5, #8]
 80052b6:	f003 030c 	and.w	r3, r3, #12
 80052ba:	2b08      	cmp	r3, #8
 80052bc:	f43f af3a 	beq.w	8005134 <HAL_RCC_OscConfig+0xb8>
 80052c0:	4e2c      	ldr	r6, [pc, #176]	; (8005374 <HAL_RCC_OscConfig+0x2f8>)
 80052c2:	2300      	movs	r3, #0
 80052c4:	2a02      	cmp	r2, #2
 80052c6:	6033      	str	r3, [r6, #0]
 80052c8:	d156      	bne.n	8005378 <HAL_RCC_OscConfig+0x2fc>
 80052ca:	f7ff fbe1 	bl	8004a90 <HAL_GetTick>
 80052ce:	4607      	mov	r7, r0
 80052d0:	682b      	ldr	r3, [r5, #0]
 80052d2:	0199      	lsls	r1, r3, #6
 80052d4:	d43c      	bmi.n	8005350 <HAL_RCC_OscConfig+0x2d4>
 80052d6:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 80052da:	fa9e feae 	rbit	lr, lr
 80052de:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80052e2:	fabe fe8e 	clz	lr, lr
 80052e6:	fa92 f2a2 	rbit	r2, r2
 80052ea:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 80052ee:	fab2 f782 	clz	r7, r2
 80052f2:	fa90 f0a0 	rbit	r0, r0
 80052f6:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 80052fa:	fab0 f080 	clz	r0, r0
 80052fe:	fa91 f1a1 	rbit	r1, r1
 8005302:	6a22      	ldr	r2, [r4, #32]
 8005304:	69e3      	ldr	r3, [r4, #28]
 8005306:	4313      	orrs	r3, r2
 8005308:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800530a:	fa02 f20e 	lsl.w	r2, r2, lr
 800530e:	4313      	orrs	r3, r2
 8005310:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005312:	0852      	lsrs	r2, r2, #1
 8005314:	3a01      	subs	r2, #1
 8005316:	40ba      	lsls	r2, r7
 8005318:	4313      	orrs	r3, r2
 800531a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800531c:	fa02 f000 	lsl.w	r0, r2, r0
 8005320:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005322:	4c0e      	ldr	r4, [pc, #56]	; (800535c <HAL_RCC_OscConfig+0x2e0>)
 8005324:	fab1 f181 	clz	r1, r1
 8005328:	4303      	orrs	r3, r0
 800532a:	fa02 f101 	lsl.w	r1, r2, r1
 800532e:	430b      	orrs	r3, r1
 8005330:	606b      	str	r3, [r5, #4]
 8005332:	2301      	movs	r3, #1
 8005334:	6033      	str	r3, [r6, #0]
 8005336:	f7ff fbab 	bl	8004a90 <HAL_GetTick>
 800533a:	4605      	mov	r5, r0
 800533c:	6823      	ldr	r3, [r4, #0]
 800533e:	019a      	lsls	r2, r3, #6
 8005340:	f53f aed8 	bmi.w	80050f4 <HAL_RCC_OscConfig+0x78>
 8005344:	f7ff fba4 	bl	8004a90 <HAL_GetTick>
 8005348:	1b40      	subs	r0, r0, r5
 800534a:	2802      	cmp	r0, #2
 800534c:	d9f6      	bls.n	800533c <HAL_RCC_OscConfig+0x2c0>
 800534e:	e707      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005350:	f7ff fb9e 	bl	8004a90 <HAL_GetTick>
 8005354:	1bc0      	subs	r0, r0, r7
 8005356:	2802      	cmp	r0, #2
 8005358:	d9ba      	bls.n	80052d0 <HAL_RCC_OscConfig+0x254>
 800535a:	e701      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 800535c:	40023800 	.word	0x40023800
 8005360:	40007000 	.word	0x40007000
 8005364:	40023870 	.word	0x40023870
 8005368:	40023802 	.word	0x40023802
 800536c:	42470000 	.word	0x42470000
 8005370:	42470e80 	.word	0x42470e80
 8005374:	42470060 	.word	0x42470060
 8005378:	f7ff fb8a 	bl	8004a90 <HAL_GetTick>
 800537c:	4604      	mov	r4, r0
 800537e:	682b      	ldr	r3, [r5, #0]
 8005380:	019b      	lsls	r3, r3, #6
 8005382:	f57f aeb7 	bpl.w	80050f4 <HAL_RCC_OscConfig+0x78>
 8005386:	f7ff fb83 	bl	8004a90 <HAL_GetTick>
 800538a:	1b00      	subs	r0, r0, r4
 800538c:	2802      	cmp	r0, #2
 800538e:	d9f6      	bls.n	800537e <HAL_RCC_OscConfig+0x302>
 8005390:	e6e6      	b.n	8005160 <HAL_RCC_OscConfig+0xe4>
 8005392:	bf00      	nop

08005394 <HAL_RCC_GetSysClockFreq>:
 8005394:	4b2b      	ldr	r3, [pc, #172]	; (8005444 <HAL_RCC_GetSysClockFreq+0xb0>)
 8005396:	689a      	ldr	r2, [r3, #8]
 8005398:	f002 020c 	and.w	r2, r2, #12
 800539c:	2a08      	cmp	r2, #8
 800539e:	d007      	beq.n	80053b0 <HAL_RCC_GetSysClockFreq+0x1c>
 80053a0:	2a0c      	cmp	r2, #12
 80053a2:	d02c      	beq.n	80053fe <HAL_RCC_GetSysClockFreq+0x6a>
 80053a4:	4b28      	ldr	r3, [pc, #160]	; (8005448 <HAL_RCC_GetSysClockFreq+0xb4>)
 80053a6:	4829      	ldr	r0, [pc, #164]	; (800544c <HAL_RCC_GetSysClockFreq+0xb8>)
 80053a8:	2a04      	cmp	r2, #4
 80053aa:	bf18      	it	ne
 80053ac:	4618      	movne	r0, r3
 80053ae:	4770      	bx	lr
 80053b0:	685a      	ldr	r2, [r3, #4]
 80053b2:	6859      	ldr	r1, [r3, #4]
 80053b4:	685b      	ldr	r3, [r3, #4]
 80053b6:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 80053ba:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80053be:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 80053c2:	fa91 f0a1 	rbit	r0, r1
 80053c6:	fab0 f080 	clz	r0, r0
 80053ca:	ea03 0301 	and.w	r3, r3, r1
 80053ce:	fa23 f300 	lsr.w	r3, r3, r0
 80053d2:	bf14      	ite	ne
 80053d4:	481d      	ldrne	r0, [pc, #116]	; (800544c <HAL_RCC_GetSysClockFreq+0xb8>)
 80053d6:	481c      	ldreq	r0, [pc, #112]	; (8005448 <HAL_RCC_GetSysClockFreq+0xb4>)
 80053d8:	fbb0 f0f2 	udiv	r0, r0, r2
 80053dc:	4358      	muls	r0, r3
 80053de:	4b19      	ldr	r3, [pc, #100]	; (8005444 <HAL_RCC_GetSysClockFreq+0xb0>)
 80053e0:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80053e4:	685b      	ldr	r3, [r3, #4]
 80053e6:	fa92 f2a2 	rbit	r2, r2
 80053ea:	fab2 f282 	clz	r2, r2
 80053ee:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80053f2:	40d3      	lsrs	r3, r2
 80053f4:	3301      	adds	r3, #1
 80053f6:	005b      	lsls	r3, r3, #1
 80053f8:	fbb0 f0f3 	udiv	r0, r0, r3
 80053fc:	4770      	bx	lr
 80053fe:	685a      	ldr	r2, [r3, #4]
 8005400:	6859      	ldr	r1, [r3, #4]
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8005408:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800540c:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8005410:	fa91 f0a1 	rbit	r0, r1
 8005414:	fab0 f080 	clz	r0, r0
 8005418:	ea03 0301 	and.w	r3, r3, r1
 800541c:	fa23 f300 	lsr.w	r3, r3, r0
 8005420:	bf14      	ite	ne
 8005422:	480a      	ldrne	r0, [pc, #40]	; (800544c <HAL_RCC_GetSysClockFreq+0xb8>)
 8005424:	4808      	ldreq	r0, [pc, #32]	; (8005448 <HAL_RCC_GetSysClockFreq+0xb4>)
 8005426:	fbb0 f0f2 	udiv	r0, r0, r2
 800542a:	4358      	muls	r0, r3
 800542c:	4b05      	ldr	r3, [pc, #20]	; (8005444 <HAL_RCC_GetSysClockFreq+0xb0>)
 800542e:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 8005432:	685b      	ldr	r3, [r3, #4]
 8005434:	fa92 f2a2 	rbit	r2, r2
 8005438:	fab2 f282 	clz	r2, r2
 800543c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8005440:	40d3      	lsrs	r3, r2
 8005442:	e7d9      	b.n	80053f8 <HAL_RCC_GetSysClockFreq+0x64>
 8005444:	40023800 	.word	0x40023800
 8005448:	00f42400 	.word	0x00f42400
 800544c:	007a1200 	.word	0x007a1200

08005450 <mbed::Timer::start()>:
 8005450:	b510      	push	{r4, lr}
 8005452:	4604      	mov	r4, r0
 8005454:	f7fc f900 	bl	8001658 <core_util_critical_section_enter>
 8005458:	6823      	ldr	r3, [r4, #0]
 800545a:	b92b      	cbnz	r3, 8005468 <mbed::Timer::start()+0x18>
 800545c:	68e0      	ldr	r0, [r4, #12]
 800545e:	f7fc f8a6 	bl	80015ae <ticker_read>
 8005462:	2301      	movs	r3, #1
 8005464:	6060      	str	r0, [r4, #4]
 8005466:	6023      	str	r3, [r4, #0]
 8005468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800546c:	f7fc b90a 	b.w	8001684 <core_util_critical_section_exit>

08005470 <mbed::Timer::slicetime()>:
 8005470:	b538      	push	{r3, r4, r5, lr}
 8005472:	4605      	mov	r5, r0
 8005474:	f7fc f8f0 	bl	8001658 <core_util_critical_section_enter>
 8005478:	682c      	ldr	r4, [r5, #0]
 800547a:	b124      	cbz	r4, 8005486 <mbed::Timer::slicetime()+0x16>
 800547c:	68e8      	ldr	r0, [r5, #12]
 800547e:	f7fc f896 	bl	80015ae <ticker_read>
 8005482:	686c      	ldr	r4, [r5, #4]
 8005484:	1b04      	subs	r4, r0, r4
 8005486:	f7fc f8fd 	bl	8001684 <core_util_critical_section_exit>
 800548a:	4620      	mov	r0, r4
 800548c:	bd38      	pop	{r3, r4, r5, pc}

0800548e <mbed::Timer::read_us()>:
 800548e:	b538      	push	{r3, r4, r5, lr}
 8005490:	4605      	mov	r5, r0
 8005492:	f7fc f8e1 	bl	8001658 <core_util_critical_section_enter>
 8005496:	4628      	mov	r0, r5
 8005498:	68ac      	ldr	r4, [r5, #8]
 800549a:	f7ff ffe9 	bl	8005470 <mbed::Timer::slicetime()>
 800549e:	4404      	add	r4, r0
 80054a0:	f7fc f8f0 	bl	8001684 <core_util_critical_section_exit>
 80054a4:	4620      	mov	r0, r4
 80054a6:	bd38      	pop	{r3, r4, r5, pc}

080054a8 <mbed::Timer::read_ms()>:
 80054a8:	b508      	push	{r3, lr}
 80054aa:	f7ff fff0 	bl	800548e <mbed::Timer::read_us()>
 80054ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80054b2:	fb90 f0f3 	sdiv	r0, r0, r3
 80054b6:	bd08      	pop	{r3, pc}

080054b8 <mbed::Timer::reset()>:
 80054b8:	b510      	push	{r4, lr}
 80054ba:	4604      	mov	r4, r0
 80054bc:	f7fc f8cc 	bl	8001658 <core_util_critical_section_enter>
 80054c0:	68e0      	ldr	r0, [r4, #12]
 80054c2:	f7fc f874 	bl	80015ae <ticker_read>
 80054c6:	2300      	movs	r3, #0
 80054c8:	6060      	str	r0, [r4, #4]
 80054ca:	60a3      	str	r3, [r4, #8]
 80054cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80054d0:	f7fc b8d8 	b.w	8001684 <core_util_critical_section_exit>

080054d4 <mbed::Timer::Timer()>:
 80054d4:	2300      	movs	r3, #0
 80054d6:	b510      	push	{r4, lr}
 80054d8:	6003      	str	r3, [r0, #0]
 80054da:	6043      	str	r3, [r0, #4]
 80054dc:	6083      	str	r3, [r0, #8]
 80054de:	4604      	mov	r4, r0
 80054e0:	f7fc f838 	bl	8001554 <get_us_ticker_data>
 80054e4:	60e0      	str	r0, [r4, #12]
 80054e6:	4620      	mov	r0, r4
 80054e8:	f7ff ffe6 	bl	80054b8 <mbed::Timer::reset()>
 80054ec:	4620      	mov	r0, r4
 80054ee:	bd10      	pop	{r4, pc}

080054f0 <mbed::RawSerial::lock()>:
 80054f0:	4770      	bx	lr
	...

080054f4 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 80054f4:	b510      	push	{r4, lr}
 80054f6:	4604      	mov	r4, r0
 80054f8:	f000 f954 	bl	80057a4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 80054fc:	4b01      	ldr	r3, [pc, #4]	; (8005504 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 80054fe:	6023      	str	r3, [r4, #0]
 8005500:	4620      	mov	r0, r4
 8005502:	bd10      	pop	{r4, pc}
 8005504:	080072cc 	.word	0x080072cc

08005508 <mbed::RawSerial::~RawSerial()>:
 8005508:	b510      	push	{r4, lr}
 800550a:	4b03      	ldr	r3, [pc, #12]	; (8005518 <mbed::RawSerial::~RawSerial()+0x10>)
 800550c:	6003      	str	r3, [r0, #0]
 800550e:	4604      	mov	r4, r0
 8005510:	f7fb fe78 	bl	8001204 <mbed::SerialBase::~SerialBase()>
 8005514:	4620      	mov	r0, r4
 8005516:	bd10      	pop	{r4, pc}
 8005518:	080072cc 	.word	0x080072cc

0800551c <mbed::RawSerial::~RawSerial()>:
 800551c:	b510      	push	{r4, lr}
 800551e:	4604      	mov	r4, r0
 8005520:	f7ff fff2 	bl	8005508 <mbed::RawSerial::~RawSerial()>
 8005524:	4620      	mov	r0, r4
 8005526:	f000 fb4d 	bl	8005bc4 <operator delete(void*)>
 800552a:	4620      	mov	r0, r4
 800552c:	bd10      	pop	{r4, pc}

0800552e <mbed::donothing()>:
 800552e:	4770      	bx	lr

08005530 <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8005530:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005534:	f102 000c 	add.w	r0, r2, #12
 8005538:	6993      	ldr	r3, [r2, #24]
 800553a:	681b      	ldr	r3, [r3, #0]
 800553c:	4718      	bx	r3

0800553e <mbed::CAN::lock()>:
 800553e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005542:	309c      	adds	r0, #156	; 0x9c
 8005544:	f000 bb62 	b.w	8005c0c <rtos::Mutex::lock(unsigned long)>

08005548 <mbed::CAN::unlock()>:
 8005548:	309c      	adds	r0, #156	; 0x9c
 800554a:	f000 bb62 	b.w	8005c12 <rtos::Mutex::unlock()>

0800554e <mbed::CAN::frequency(int)>:
 800554e:	b570      	push	{r4, r5, r6, lr}
 8005550:	4605      	mov	r5, r0
 8005552:	460e      	mov	r6, r1
 8005554:	f855 3b04 	ldr.w	r3, [r5], #4
 8005558:	689b      	ldr	r3, [r3, #8]
 800555a:	4604      	mov	r4, r0
 800555c:	4798      	blx	r3
 800555e:	4631      	mov	r1, r6
 8005560:	4628      	mov	r0, r5
 8005562:	f7fd fe1b 	bl	800319c <can_frequency>
 8005566:	6823      	ldr	r3, [r4, #0]
 8005568:	4605      	mov	r5, r0
 800556a:	68db      	ldr	r3, [r3, #12]
 800556c:	4620      	mov	r0, r4
 800556e:	4798      	blx	r3
 8005570:	4628      	mov	r0, r5
 8005572:	bd70      	pop	{r4, r5, r6, pc}

08005574 <mbed::CAN::write(mbed::CANMessage)>:
 8005574:	b084      	sub	sp, #16
 8005576:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005578:	4606      	mov	r6, r0
 800557a:	ac07      	add	r4, sp, #28
 800557c:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8005580:	f856 3b04 	ldr.w	r3, [r6], #4
 8005584:	689b      	ldr	r3, [r3, #8]
 8005586:	4605      	mov	r5, r0
 8005588:	4798      	blx	r3
 800558a:	2300      	movs	r3, #0
 800558c:	9301      	str	r3, [sp, #4]
 800558e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005590:	9300      	str	r3, [sp, #0]
 8005592:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8005596:	4630      	mov	r0, r6
 8005598:	f7fd fe46 	bl	8003228 <can_write>
 800559c:	682b      	ldr	r3, [r5, #0]
 800559e:	4604      	mov	r4, r0
 80055a0:	68db      	ldr	r3, [r3, #12]
 80055a2:	4628      	mov	r0, r5
 80055a4:	4798      	blx	r3
 80055a6:	4620      	mov	r0, r4
 80055a8:	b002      	add	sp, #8
 80055aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80055ae:	b004      	add	sp, #16
 80055b0:	4770      	bx	lr

080055b2 <mbed::CAN::read(mbed::CANMessage&, int)>:
 80055b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80055b4:	4605      	mov	r5, r0
 80055b6:	460e      	mov	r6, r1
 80055b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80055bc:	4617      	mov	r7, r2
 80055be:	689b      	ldr	r3, [r3, #8]
 80055c0:	4604      	mov	r4, r0
 80055c2:	4798      	blx	r3
 80055c4:	463a      	mov	r2, r7
 80055c6:	4631      	mov	r1, r6
 80055c8:	4628      	mov	r0, r5
 80055ca:	f7fd fe7e 	bl	80032ca <can_read>
 80055ce:	6823      	ldr	r3, [r4, #0]
 80055d0:	4605      	mov	r5, r0
 80055d2:	68db      	ldr	r3, [r3, #12]
 80055d4:	4620      	mov	r0, r4
 80055d6:	4798      	blx	r3
 80055d8:	4628      	mov	r0, r5
 80055da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080055dc <mbed::CAN::~CAN()>:
 80055dc:	b570      	push	{r4, r5, r6, lr}
 80055de:	4604      	mov	r4, r0
 80055e0:	4b0d      	ldr	r3, [pc, #52]	; (8005618 <mbed::CAN::~CAN()+0x3c>)
 80055e2:	f844 3b04 	str.w	r3, [r4], #4
 80055e6:	4605      	mov	r5, r0
 80055e8:	4620      	mov	r0, r4
 80055ea:	f7fd fda1 	bl	8003130 <can_irq_free>
 80055ee:	4620      	mov	r0, r4
 80055f0:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 80055f4:	f7fd fdaa 	bl	800314c <can_free>
 80055f8:	4620      	mov	r0, r4
 80055fa:	f000 fb0d 	bl	8005c18 <rtos::Mutex::~Mutex()>
 80055fe:	f115 060c 	adds.w	r6, r5, #12
 8005602:	d006      	beq.n	8005612 <mbed::CAN::~CAN()+0x36>
 8005604:	42b4      	cmp	r4, r6
 8005606:	d004      	beq.n	8005612 <mbed::CAN::~CAN()+0x36>
 8005608:	3c10      	subs	r4, #16
 800560a:	4620      	mov	r0, r4
 800560c:	f7fb fdb7 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8005610:	e7f8      	b.n	8005604 <mbed::CAN::~CAN()+0x28>
 8005612:	4628      	mov	r0, r5
 8005614:	bd70      	pop	{r4, r5, r6, pc}
 8005616:	bf00      	nop
 8005618:	080072e4 	.word	0x080072e4

0800561c <mbed::CAN::~CAN()>:
 800561c:	b510      	push	{r4, lr}
 800561e:	4604      	mov	r4, r0
 8005620:	f7ff ffdc 	bl	80055dc <mbed::CAN::~CAN()>
 8005624:	4620      	mov	r0, r4
 8005626:	f000 facd 	bl	8005bc4 <operator delete(void*)>
 800562a:	4620      	mov	r0, r4
 800562c:	bd10      	pop	{r4, pc}

0800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 800562e:	4288      	cmp	r0, r1
 8005630:	b538      	push	{r3, r4, r5, lr}
 8005632:	4604      	mov	r4, r0
 8005634:	460d      	mov	r5, r1
 8005636:	d00a      	beq.n	800564e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005638:	f7fb fda1 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 800563c:	b13c      	cbz	r4, 800564e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 800563e:	68eb      	ldr	r3, [r5, #12]
 8005640:	b11b      	cbz	r3, 800564a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8005642:	685b      	ldr	r3, [r3, #4]
 8005644:	4629      	mov	r1, r5
 8005646:	4620      	mov	r0, r4
 8005648:	4798      	blx	r3
 800564a:	68eb      	ldr	r3, [r5, #12]
 800564c:	60e3      	str	r3, [r4, #12]
 800564e:	4620      	mov	r0, r4
 8005650:	bd38      	pop	{r3, r4, r5, pc}
	...

08005654 <mbed::CAN::CAN(PinName, PinName)>:
 8005654:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8005658:	4b1a      	ldr	r3, [pc, #104]	; (80056c4 <mbed::CAN::CAN(PinName, PinName)+0x70>)
 800565a:	6003      	str	r3, [r0, #0]
 800565c:	4617      	mov	r7, r2
 800565e:	f100 030c 	add.w	r3, r0, #12
 8005662:	2200      	movs	r2, #0
 8005664:	4604      	mov	r4, r0
 8005666:	460e      	mov	r6, r1
 8005668:	6042      	str	r2, [r0, #4]
 800566a:	6082      	str	r2, [r0, #8]
 800566c:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8005670:	461d      	mov	r5, r3
 8005672:	60da      	str	r2, [r3, #12]
 8005674:	3310      	adds	r3, #16
 8005676:	4543      	cmp	r3, r8
 8005678:	d1fb      	bne.n	8005672 <mbed::CAN::CAN(PinName, PinName)+0x1e>
 800567a:	4640      	mov	r0, r8
 800567c:	f000 faae 	bl	8005bdc <rtos::Mutex::Mutex()>
 8005680:	f8df a048 	ldr.w	r10, [pc, #72]	; 80056cc <mbed::CAN::CAN(PinName, PinName)+0x78>
 8005684:	f8df 9048 	ldr.w	r9, [pc, #72]	; 80056d0 <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8005688:	4545      	cmp	r5, r8
 800568a:	d00c      	beq.n	80056a6 <mbed::CAN::CAN(PinName, PinName)+0x52>
 800568c:	4669      	mov	r1, sp
 800568e:	4628      	mov	r0, r5
 8005690:	f8cd a000 	str.w	r10, [sp]
 8005694:	f8cd 900c 	str.w	r9, [sp, #12]
 8005698:	f7ff ffc9 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800569c:	4668      	mov	r0, sp
 800569e:	f7fb fd6e 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80056a2:	3510      	adds	r5, #16
 80056a4:	e7f0      	b.n	8005688 <mbed::CAN::CAN(PinName, PinName)+0x34>
 80056a6:	1d25      	adds	r5, r4, #4
 80056a8:	463a      	mov	r2, r7
 80056aa:	4631      	mov	r1, r6
 80056ac:	4628      	mov	r0, r5
 80056ae:	f7fd fe8d 	bl	80033cc <can_init>
 80056b2:	4628      	mov	r0, r5
 80056b4:	4622      	mov	r2, r4
 80056b6:	4904      	ldr	r1, [pc, #16]	; (80056c8 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 80056b8:	f7fd fd2e 	bl	8003118 <can_irq_init>
 80056bc:	4620      	mov	r0, r4
 80056be:	b004      	add	sp, #16
 80056c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80056c4:	080072e4 	.word	0x080072e4
 80056c8:	08005531 	.word	0x08005531
 80056cc:	0800552f 	.word	0x0800552f
 80056d0:	08006c90 	.word	0x08006c90

080056d4 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)>:
 80056d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80056d8:	4605      	mov	r5, r0
 80056da:	4688      	mov	r8, r1
 80056dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80056e0:	689b      	ldr	r3, [r3, #8]
 80056e2:	4604      	mov	r4, r0
 80056e4:	4616      	mov	r6, r2
 80056e6:	4798      	blx	r3
 80056e8:	f8d8 700c 	ldr.w	r7, [r8, #12]
 80056ec:	0130      	lsls	r0, r6, #4
 80056ee:	b187      	cbz	r7, 8005712 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x3e>
 80056f0:	300c      	adds	r0, #12
 80056f2:	4641      	mov	r1, r8
 80056f4:	4420      	add	r0, r4
 80056f6:	f7ff ff9a 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80056fa:	2201      	movs	r2, #1
 80056fc:	4631      	mov	r1, r6
 80056fe:	4628      	mov	r0, r5
 8005700:	f7fd fef4 	bl	80034ec <can_irq_set>
 8005704:	6823      	ldr	r3, [r4, #0]
 8005706:	4620      	mov	r0, r4
 8005708:	68db      	ldr	r3, [r3, #12]
 800570a:	4798      	blx	r3
 800570c:	b004      	add	sp, #16
 800570e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005712:	4b07      	ldr	r3, [pc, #28]	; (8005730 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x5c>)
 8005714:	9300      	str	r3, [sp, #0]
 8005716:	300c      	adds	r0, #12
 8005718:	4b06      	ldr	r3, [pc, #24]	; (8005734 <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x60>)
 800571a:	9303      	str	r3, [sp, #12]
 800571c:	4669      	mov	r1, sp
 800571e:	4420      	add	r0, r4
 8005720:	f7ff ff85 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005724:	4668      	mov	r0, sp
 8005726:	f7fb fd2a 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 800572a:	463a      	mov	r2, r7
 800572c:	e7e6      	b.n	80056fc <mbed::CAN::attach(mbed::Callback<void ()>, mbed::CAN::IrqType)+0x28>
 800572e:	bf00      	nop
 8005730:	0800552f 	.word	0x0800552f
 8005734:	08006c90 	.word	0x08006c90

08005738 <mbed::donothing()>:
 8005738:	4770      	bx	lr

0800573a <mbed::SerialBase::lock()>:
 800573a:	4770      	bx	lr

0800573c <mbed::SerialBase::unlock()>:
 800573c:	4770      	bx	lr

0800573e <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 800573e:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005742:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8005746:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	4718      	bx	r3

0800574e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 800574e:	b410      	push	{r4}
 8005750:	b180      	cbz	r0, 8005774 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8005752:	6814      	ldr	r4, [r2, #0]
 8005754:	6853      	ldr	r3, [r2, #4]
 8005756:	b90c      	cbnz	r4, 800575c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8005758:	07da      	lsls	r2, r3, #31
 800575a:	d50b      	bpl.n	8005774 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 800575c:	f013 0f01 	tst.w	r3, #1
 8005760:	ea4f 0363 	mov.w	r3, r3, asr #1
 8005764:	bf1c      	itt	ne
 8005766:	58c2      	ldrne	r2, [r0, r3]
 8005768:	5914      	ldrne	r4, [r2, r4]
 800576a:	4418      	add	r0, r3
 800576c:	4623      	mov	r3, r4
 800576e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005772:	4718      	bx	r3
 8005774:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005778:	4770      	bx	lr

0800577a <mbed::SerialBase::baud(int)>:
 800577a:	b570      	push	{r4, r5, r6, lr}
 800577c:	4605      	mov	r5, r0
 800577e:	4604      	mov	r4, r0
 8005780:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005784:	460e      	mov	r6, r1
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	4798      	blx	r3
 800578a:	4628      	mov	r0, r5
 800578c:	4631      	mov	r1, r6
 800578e:	f7fe f9c5 	bl	8003b1c <serial_baud>
 8005792:	6823      	ldr	r3, [r4, #0]
 8005794:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8005798:	4620      	mov	r0, r4
 800579a:	685b      	ldr	r3, [r3, #4]
 800579c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80057a0:	4718      	bx	r3
	...

080057a4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 80057a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80057a8:	b087      	sub	sp, #28
 80057aa:	2500      	movs	r5, #0
 80057ac:	4691      	mov	r9, r2
 80057ae:	9500      	str	r5, [sp, #0]
 80057b0:	4602      	mov	r2, r0
 80057b2:	9501      	str	r5, [sp, #4]
 80057b4:	4604      	mov	r4, r0
 80057b6:	4688      	mov	r8, r1
 80057b8:	461f      	mov	r7, r3
 80057ba:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80057be:	4b27      	ldr	r3, [pc, #156]	; (800585c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 80057c0:	f842 3b08 	str.w	r3, [r2], #8
 80057c4:	4b26      	ldr	r3, [pc, #152]	; (8005860 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 80057c6:	e882 0003 	stmia.w	r2, {r0, r1}
 80057ca:	6123      	str	r3, [r4, #16]
 80057cc:	f248 0307 	movw	r3, #32775	; 0x8007
 80057d0:	6163      	str	r3, [r4, #20]
 80057d2:	4b24      	ldr	r3, [pc, #144]	; (8005864 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 80057d4:	61e5      	str	r5, [r4, #28]
 80057d6:	61a4      	str	r4, [r4, #24]
 80057d8:	6222      	str	r2, [r4, #32]
 80057da:	6263      	str	r3, [r4, #36]	; 0x24
 80057dc:	f3bf 8f6f 	isb	sy
 80057e0:	f3bf 8f4f 	dsb	sy
 80057e4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80057e8:	224c      	movs	r2, #76	; 0x4c
 80057ea:	6365      	str	r5, [r4, #52]	; 0x34
 80057ec:	6465      	str	r5, [r4, #68]	; 0x44
 80057ee:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 80057f2:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 80057f6:	4630      	mov	r0, r6
 80057f8:	f000 fd3f 	bl	800627a <memset>
 80057fc:	a902      	add	r1, sp, #8
 80057fe:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8005802:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8005806:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 800580a:	4d17      	ldr	r5, [pc, #92]	; (8005868 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 800580c:	4f17      	ldr	r7, [pc, #92]	; (800586c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 800580e:	9702      	str	r7, [sp, #8]
 8005810:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8005814:	9505      	str	r5, [sp, #20]
 8005816:	f7ff ff0a 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800581a:	a802      	add	r0, sp, #8
 800581c:	f7fb fcaf 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8005820:	a902      	add	r1, sp, #8
 8005822:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8005826:	9702      	str	r7, [sp, #8]
 8005828:	9505      	str	r5, [sp, #20]
 800582a:	f7ff ff00 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800582e:	a802      	add	r0, sp, #8
 8005830:	f7fb fca5 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 8005834:	464a      	mov	r2, r9
 8005836:	4641      	mov	r1, r8
 8005838:	4630      	mov	r0, r6
 800583a:	f7fe f87f 	bl	800393c <serial_init>
 800583e:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8005842:	4630      	mov	r0, r6
 8005844:	f7fe f96a 	bl	8003b1c <serial_baud>
 8005848:	4630      	mov	r0, r6
 800584a:	4622      	mov	r2, r4
 800584c:	4908      	ldr	r1, [pc, #32]	; (8005870 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 800584e:	f7fe f969 	bl	8003b24 <serial_irq_handler>
 8005852:	4620      	mov	r0, r4
 8005854:	b007      	add	sp, #28
 8005856:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800585a:	bf00      	nop
 800585c:	080072fc 	.word	0x080072fc
 8005860:	e890a001 	.word	0xe890a001
 8005864:	0800574f 	.word	0x0800574f
 8005868:	08006c90 	.word	0x08006c90
 800586c:	08005739 	.word	0x08005739
 8005870:	0800573f 	.word	0x0800573f

08005874 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8005874:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005878:	4605      	mov	r5, r0
 800587a:	4688      	mov	r8, r1
 800587c:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	4604      	mov	r4, r0
 8005884:	4616      	mov	r6, r2
 8005886:	4798      	blx	r3
 8005888:	f7fb fee6 	bl	8001658 <core_util_critical_section_enter>
 800588c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005890:	0130      	lsls	r0, r6, #4
 8005892:	b197      	cbz	r7, 80058ba <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005894:	3098      	adds	r0, #152	; 0x98
 8005896:	4641      	mov	r1, r8
 8005898:	4420      	add	r0, r4
 800589a:	f7ff fec8 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800589e:	2201      	movs	r2, #1
 80058a0:	4631      	mov	r1, r6
 80058a2:	4628      	mov	r0, r5
 80058a4:	f7fe f94a 	bl	8003b3c <serial_irq_set>
 80058a8:	f7fb feec 	bl	8001684 <core_util_critical_section_exit>
 80058ac:	6823      	ldr	r3, [r4, #0]
 80058ae:	4620      	mov	r0, r4
 80058b0:	685b      	ldr	r3, [r3, #4]
 80058b2:	4798      	blx	r3
 80058b4:	b004      	add	sp, #16
 80058b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058ba:	4b07      	ldr	r3, [pc, #28]	; (80058d8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 80058bc:	9300      	str	r3, [sp, #0]
 80058be:	3098      	adds	r0, #152	; 0x98
 80058c0:	4b06      	ldr	r3, [pc, #24]	; (80058dc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 80058c2:	9303      	str	r3, [sp, #12]
 80058c4:	4669      	mov	r1, sp
 80058c6:	4420      	add	r0, r4
 80058c8:	f7ff feb1 	bl	800562e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80058cc:	4668      	mov	r0, sp
 80058ce:	f7fb fc56 	bl	800117e <mbed::Callback<void ()>::~Callback()>
 80058d2:	463a      	mov	r2, r7
 80058d4:	e7e4      	b.n	80058a0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 80058d6:	bf00      	nop
 80058d8:	08005739 	.word	0x08005739
 80058dc:	08006c90 	.word	0x08006c90

080058e0 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80058e0:	b538      	push	{r3, r4, r5, lr}
 80058e2:	4604      	mov	r4, r0
 80058e4:	b148      	cbz	r0, 80058fa <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80058e6:	3058      	adds	r0, #88	; 0x58
 80058e8:	42a0      	cmp	r0, r4
 80058ea:	d006      	beq.n	80058fa <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80058ec:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80058f0:	3814      	subs	r0, #20
 80058f2:	f7fb fc7e 	bl	80011f2 <mbed::Callback<void (int)>::~Callback()>
 80058f6:	4628      	mov	r0, r5
 80058f8:	e7f6      	b.n	80058e8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80058fa:	4620      	mov	r0, r4
 80058fc:	bd38      	pop	{r3, r4, r5, pc}
	...

08005900 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005900:	b570      	push	{r4, r5, r6, lr}
 8005902:	4c0e      	ldr	r4, [pc, #56]	; (800593c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005904:	4620      	mov	r0, r4
 8005906:	2500      	movs	r5, #0
 8005908:	2628      	movs	r6, #40	; 0x28
 800590a:	4632      	mov	r2, r6
 800590c:	4629      	mov	r1, r5
 800590e:	f840 5b04 	str.w	r5, [r0], #4
 8005912:	f000 fcb2 	bl	800627a <memset>
 8005916:	4632      	mov	r2, r6
 8005918:	4629      	mov	r1, r5
 800591a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800591e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005920:	f000 fcab 	bl	800627a <memset>
 8005924:	65a5      	str	r5, [r4, #88]	; 0x58
 8005926:	4620      	mov	r0, r4
 8005928:	65e5      	str	r5, [r4, #92]	; 0x5c
 800592a:	4a05      	ldr	r2, [pc, #20]	; (8005940 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 800592c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005930:	4904      	ldr	r1, [pc, #16]	; (8005944 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005932:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005936:	f000 b927 	b.w	8005b88 <__aeabi_atexit>
 800593a:	bf00      	nop
 800593c:	20001d00 	.word	0x20001d00
 8005940:	200001c4 	.word	0x200001c4
 8005944:	080058e1 	.word	0x080058e1

08005948 <__wrap__malloc_r>:
 8005948:	f000 bcee 	b.w	8006328 <_malloc_r>

0800594c <__wrap__realloc_r>:
 800594c:	f000 bd4a 	b.w	80063e4 <_realloc_r>

08005950 <__wrap__free_r>:
 8005950:	f000 bc9c 	b.w	800628c <_free_r>

08005954 <wait_us>:
 8005954:	b570      	push	{r4, r5, r6, lr}
 8005956:	4605      	mov	r5, r0
 8005958:	f7fd fe52 	bl	8003600 <us_ticker_read>
 800595c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005960:	fb95 f4f4 	sdiv	r4, r5, r4
 8005964:	2c00      	cmp	r4, #0
 8005966:	4606      	mov	r6, r0
 8005968:	dd02      	ble.n	8005970 <wait_us+0x1c>
 800596a:	f7fb fe6f 	bl	800164c <core_util_are_interrupts_enabled>
 800596e:	b928      	cbnz	r0, 800597c <wait_us+0x28>
 8005970:	f7fd fe46 	bl	8003600 <us_ticker_read>
 8005974:	1b80      	subs	r0, r0, r6
 8005976:	42a8      	cmp	r0, r5
 8005978:	d3fa      	bcc.n	8005970 <wait_us+0x1c>
 800597a:	bd70      	pop	{r4, r5, r6, pc}
 800597c:	4620      	mov	r0, r4
 800597e:	f000 f92b 	bl	8005bd8 <rtos::Thread::wait(unsigned long)>
 8005982:	e7f5      	b.n	8005970 <wait_us+0x1c>

08005984 <wait_ms>:
 8005984:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005988:	4358      	muls	r0, r3
 800598a:	f7ff bfe3 	b.w	8005954 <wait_us>
	...

08005990 <init_serial()>:
 8005990:	b508      	push	{r3, lr}
 8005992:	4b08      	ldr	r3, [pc, #32]	; (80059b4 <init_serial()+0x24>)
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	b95b      	cbnz	r3, 80059b0 <init_serial()+0x20>
 8005998:	2102      	movs	r1, #2
 800599a:	4807      	ldr	r0, [pc, #28]	; (80059b8 <init_serial()+0x28>)
 800599c:	2203      	movs	r2, #3
 800599e:	f7fd ffcd 	bl	800393c <serial_init>
 80059a2:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 80059a6:	4804      	ldr	r0, [pc, #16]	; (80059b8 <init_serial()+0x28>)
 80059a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80059ac:	f7fe b8b6 	b.w	8003b1c <serial_baud>
 80059b0:	bd08      	pop	{r3, pc}
 80059b2:	bf00      	nop
 80059b4:	20001afc 	.word	0x20001afc
 80059b8:	20002914 	.word	0x20002914

080059bc <_close>:
 80059bc:	2802      	cmp	r0, #2
 80059be:	b510      	push	{r4, lr}
 80059c0:	4604      	mov	r4, r0
 80059c2:	dc01      	bgt.n	80059c8 <_close+0xc>
 80059c4:	2000      	movs	r0, #0
 80059c6:	bd10      	pop	{r4, pc}
 80059c8:	f000 fa16 	bl	8005df8 <__errno>
 80059cc:	2309      	movs	r3, #9
 80059ce:	6003      	str	r3, [r0, #0]
 80059d0:	3c03      	subs	r4, #3
 80059d2:	4b09      	ldr	r3, [pc, #36]	; (80059f8 <_close+0x3c>)
 80059d4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80059d8:	2200      	movs	r2, #0
 80059da:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80059de:	b140      	cbz	r0, 80059f2 <_close+0x36>
 80059e0:	6803      	ldr	r3, [r0, #0]
 80059e2:	691b      	ldr	r3, [r3, #16]
 80059e4:	4798      	blx	r3
 80059e6:	1e04      	subs	r4, r0, #0
 80059e8:	daec      	bge.n	80059c4 <_close+0x8>
 80059ea:	f000 fa05 	bl	8005df8 <__errno>
 80059ee:	4264      	negs	r4, r4
 80059f0:	6004      	str	r4, [r0, #0]
 80059f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80059f6:	bd10      	pop	{r4, pc}
 80059f8:	20001d64 	.word	0x20001d64

080059fc <_write>:
 80059fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80059fe:	4605      	mov	r5, r0
 8005a00:	460e      	mov	r6, r1
 8005a02:	4614      	mov	r4, r2
 8005a04:	f000 f9f8 	bl	8005df8 <__errno>
 8005a08:	2309      	movs	r3, #9
 8005a0a:	2d02      	cmp	r5, #2
 8005a0c:	6003      	str	r3, [r0, #0]
 8005a0e:	dc0f      	bgt.n	8005a30 <_write+0x34>
 8005a10:	4b12      	ldr	r3, [pc, #72]	; (8005a5c <_write+0x60>)
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	b90b      	cbnz	r3, 8005a1a <_write+0x1e>
 8005a16:	f7ff ffbb 	bl	8005990 <init_serial()>
 8005a1a:	4635      	mov	r5, r6
 8005a1c:	1937      	adds	r7, r6, r4
 8005a1e:	4e10      	ldr	r6, [pc, #64]	; (8005a60 <_write+0x64>)
 8005a20:	42bd      	cmp	r5, r7
 8005a22:	d015      	beq.n	8005a50 <_write+0x54>
 8005a24:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005a28:	4630      	mov	r0, r6
 8005a2a:	f7fe f90b 	bl	8003c44 <serial_putc>
 8005a2e:	e7f7      	b.n	8005a20 <_write+0x24>
 8005a30:	3d03      	subs	r5, #3
 8005a32:	4b0c      	ldr	r3, [pc, #48]	; (8005a64 <_write+0x68>)
 8005a34:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005a38:	b160      	cbz	r0, 8005a54 <_write+0x58>
 8005a3a:	6803      	ldr	r3, [r0, #0]
 8005a3c:	4622      	mov	r2, r4
 8005a3e:	68db      	ldr	r3, [r3, #12]
 8005a40:	4631      	mov	r1, r6
 8005a42:	4798      	blx	r3
 8005a44:	1e04      	subs	r4, r0, #0
 8005a46:	da03      	bge.n	8005a50 <_write+0x54>
 8005a48:	f000 f9d6 	bl	8005df8 <__errno>
 8005a4c:	4263      	negs	r3, r4
 8005a4e:	6003      	str	r3, [r0, #0]
 8005a50:	4620      	mov	r0, r4
 8005a52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a54:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005a58:	e7fa      	b.n	8005a50 <_write+0x54>
 8005a5a:	bf00      	nop
 8005a5c:	20001afc 	.word	0x20001afc
 8005a60:	20002914 	.word	0x20002914
 8005a64:	20001d64 	.word	0x20001d64

08005a68 <_read>:
 8005a68:	b570      	push	{r4, r5, r6, lr}
 8005a6a:	4604      	mov	r4, r0
 8005a6c:	460d      	mov	r5, r1
 8005a6e:	4616      	mov	r6, r2
 8005a70:	f000 f9c2 	bl	8005df8 <__errno>
 8005a74:	2309      	movs	r3, #9
 8005a76:	2c02      	cmp	r4, #2
 8005a78:	6003      	str	r3, [r0, #0]
 8005a7a:	dc0b      	bgt.n	8005a94 <_read+0x2c>
 8005a7c:	4b0f      	ldr	r3, [pc, #60]	; (8005abc <_read+0x54>)
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	b90b      	cbnz	r3, 8005a86 <_read+0x1e>
 8005a82:	f7ff ff85 	bl	8005990 <init_serial()>
 8005a86:	480e      	ldr	r0, [pc, #56]	; (8005ac0 <_read+0x58>)
 8005a88:	f7fe f8c0 	bl	8003c0c <serial_getc>
 8005a8c:	2401      	movs	r4, #1
 8005a8e:	7028      	strb	r0, [r5, #0]
 8005a90:	4620      	mov	r0, r4
 8005a92:	bd70      	pop	{r4, r5, r6, pc}
 8005a94:	3c03      	subs	r4, #3
 8005a96:	4b0b      	ldr	r3, [pc, #44]	; (8005ac4 <_read+0x5c>)
 8005a98:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005a9c:	b158      	cbz	r0, 8005ab6 <_read+0x4e>
 8005a9e:	6803      	ldr	r3, [r0, #0]
 8005aa0:	4632      	mov	r2, r6
 8005aa2:	689b      	ldr	r3, [r3, #8]
 8005aa4:	4629      	mov	r1, r5
 8005aa6:	4798      	blx	r3
 8005aa8:	1e04      	subs	r4, r0, #0
 8005aaa:	daf1      	bge.n	8005a90 <_read+0x28>
 8005aac:	f000 f9a4 	bl	8005df8 <__errno>
 8005ab0:	4263      	negs	r3, r4
 8005ab2:	6003      	str	r3, [r0, #0]
 8005ab4:	e7ec      	b.n	8005a90 <_read+0x28>
 8005ab6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005aba:	e7e9      	b.n	8005a90 <_read+0x28>
 8005abc:	20001afc 	.word	0x20001afc
 8005ac0:	20002914 	.word	0x20002914
 8005ac4:	20001d64 	.word	0x20001d64

08005ac8 <_lseek>:
 8005ac8:	b570      	push	{r4, r5, r6, lr}
 8005aca:	4604      	mov	r4, r0
 8005acc:	460d      	mov	r5, r1
 8005ace:	4616      	mov	r6, r2
 8005ad0:	f000 f992 	bl	8005df8 <__errno>
 8005ad4:	2309      	movs	r3, #9
 8005ad6:	2c02      	cmp	r4, #2
 8005ad8:	6003      	str	r3, [r0, #0]
 8005ada:	dd0b      	ble.n	8005af4 <_lseek+0x2c>
 8005adc:	3c03      	subs	r4, #3
 8005ade:	4b08      	ldr	r3, [pc, #32]	; (8005b00 <_lseek+0x38>)
 8005ae0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005ae4:	b140      	cbz	r0, 8005af8 <_lseek+0x30>
 8005ae6:	6803      	ldr	r3, [r0, #0]
 8005ae8:	4632      	mov	r2, r6
 8005aea:	4629      	mov	r1, r5
 8005aec:	69db      	ldr	r3, [r3, #28]
 8005aee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005af2:	4718      	bx	r3
 8005af4:	2000      	movs	r0, #0
 8005af6:	bd70      	pop	{r4, r5, r6, pc}
 8005af8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005afc:	bd70      	pop	{r4, r5, r6, pc}
 8005afe:	bf00      	nop
 8005b00:	20001d64 	.word	0x20001d64

08005b04 <software_init_hook>:
 8005b04:	b508      	push	{r3, lr}
 8005b06:	f7fe f8af 	bl	8003c68 <mbed_sdk_init>
 8005b0a:	f7fb fe4d 	bl	80017a8 <software_init_hook_rtos>
 8005b0e:	bd08      	pop	{r3, pc}

08005b10 <mbed_main>:
 8005b10:	4770      	bx	lr

08005b12 <__wrap_main>:
 8005b12:	b508      	push	{r3, lr}
 8005b14:	f7ff fffc 	bl	8005b10 <mbed_main>
 8005b18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005b1c:	f7fb ba62 	b.w	8000fe4 <main>

08005b20 <_sbrk>:
 8005b20:	4a0c      	ldr	r2, [pc, #48]	; (8005b54 <_sbrk+0x34>)
 8005b22:	6813      	ldr	r3, [r2, #0]
 8005b24:	b510      	push	{r4, lr}
 8005b26:	4418      	add	r0, r3
 8005b28:	f3ef 8108 	mrs	r1, MSP
 8005b2c:	4288      	cmp	r0, r1
 8005b2e:	d305      	bcc.n	8005b3c <_sbrk+0x1c>
 8005b30:	4b09      	ldr	r3, [pc, #36]	; (8005b58 <_sbrk+0x38>)
 8005b32:	220c      	movs	r2, #12
 8005b34:	601a      	str	r2, [r3, #0]
 8005b36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b3a:	bd10      	pop	{r4, pc}
 8005b3c:	4907      	ldr	r1, [pc, #28]	; (8005b5c <_sbrk+0x3c>)
 8005b3e:	680c      	ldr	r4, [r1, #0]
 8005b40:	b124      	cbz	r4, 8005b4c <_sbrk+0x2c>
 8005b42:	4907      	ldr	r1, [pc, #28]	; (8005b60 <_sbrk+0x40>)
 8005b44:	6809      	ldr	r1, [r1, #0]
 8005b46:	4421      	add	r1, r4
 8005b48:	4288      	cmp	r0, r1
 8005b4a:	d2f1      	bcs.n	8005b30 <_sbrk+0x10>
 8005b4c:	6010      	str	r0, [r2, #0]
 8005b4e:	4618      	mov	r0, r3
 8005b50:	bd10      	pop	{r4, pc}
 8005b52:	bf00      	nop
 8005b54:	200001e4 	.word	0x200001e4
 8005b58:	20002964 	.word	0x20002964
 8005b5c:	20001e64 	.word	0x20001e64
 8005b60:	20001e68 	.word	0x20001e68

08005b64 <_exit>:
 8005b64:	4c07      	ldr	r4, [pc, #28]	; (8005b84 <_exit+0x20>)
 8005b66:	b508      	push	{r3, lr}
 8005b68:	6823      	ldr	r3, [r4, #0]
 8005b6a:	4605      	mov	r5, r0
 8005b6c:	6898      	ldr	r0, [r3, #8]
 8005b6e:	f000 f9fb 	bl	8005f68 <fflush>
 8005b72:	6823      	ldr	r3, [r4, #0]
 8005b74:	68d8      	ldr	r0, [r3, #12]
 8005b76:	f000 f9f7 	bl	8005f68 <fflush>
 8005b7a:	b10d      	cbz	r5, 8005b80 <_exit+0x1c>
 8005b7c:	f7fb fd9b 	bl	80016b6 <mbed_die>
 8005b80:	e7fe      	b.n	8005b80 <_exit+0x1c>
 8005b82:	bf00      	nop
 8005b84:	200001e8 	.word	0x200001e8

08005b88 <__aeabi_atexit>:
 8005b88:	2001      	movs	r0, #1
 8005b8a:	4770      	bx	lr

08005b8c <__wrap_exit>:
 8005b8c:	b508      	push	{r3, lr}
 8005b8e:	f7ff ffe9 	bl	8005b64 <_exit>

08005b92 <__malloc_lock>:
 8005b92:	b508      	push	{r3, lr}
 8005b94:	f7fb fe16 	bl	80017c4 <__rtos_malloc_lock>
 8005b98:	bd08      	pop	{r3, pc}

08005b9a <__malloc_unlock>:
 8005b9a:	b508      	push	{r3, lr}
 8005b9c:	f7fb fe1a 	bl	80017d4 <__rtos_malloc_unlock>
 8005ba0:	bd08      	pop	{r3, pc}
	...

08005ba4 <operator new[](unsigned int)>:
 8005ba4:	b510      	push	{r4, lr}
 8005ba6:	f000 fadf 	bl	8006168 <malloc>
 8005baa:	4604      	mov	r4, r0
 8005bac:	b910      	cbnz	r0, 8005bb4 <operator new[](unsigned int)+0x10>
 8005bae:	4802      	ldr	r0, [pc, #8]	; (8005bb8 <operator new[](unsigned int)+0x14>)
 8005bb0:	f7fb fd7c 	bl	80016ac <error>
 8005bb4:	4620      	mov	r0, r4
 8005bb6:	bd10      	pop	{r4, pc}
 8005bb8:	0800730c 	.word	0x0800730c

08005bbc <operator delete[](void*)>:
 8005bbc:	b108      	cbz	r0, 8005bc2 <operator delete[](void*)+0x6>
 8005bbe:	f000 badb 	b.w	8006178 <free>
 8005bc2:	4770      	bx	lr

08005bc4 <operator delete(void*)>:
 8005bc4:	f7ff bffa 	b.w	8005bbc <operator delete[](void*)>

08005bc8 <thread_terminate_hook>:
 8005bc8:	4b02      	ldr	r3, [pc, #8]	; (8005bd4 <thread_terminate_hook+0xc>)
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	b103      	cbz	r3, 8005bd0 <thread_terminate_hook+0x8>
 8005bce:	4718      	bx	r3
 8005bd0:	4770      	bx	lr
 8005bd2:	bf00      	nop
 8005bd4:	20001e6c 	.word	0x20001e6c

08005bd8 <rtos::Thread::wait(unsigned long)>:
 8005bd8:	f7fc baca 	b.w	8002170 <osDelay>

08005bdc <rtos::Mutex::Mutex()>:
 8005bdc:	b538      	push	{r3, r4, r5, lr}
 8005bde:	f100 0508 	add.w	r5, r0, #8
 8005be2:	4604      	mov	r4, r0
 8005be4:	2210      	movs	r2, #16
 8005be6:	2100      	movs	r1, #0
 8005be8:	4628      	mov	r0, r5
 8005bea:	f000 fb46 	bl	800627a <memset>
 8005bee:	4620      	mov	r0, r4
 8005bf0:	f840 5f04 	str.w	r5, [r0, #4]!
 8005bf4:	f7fc fb2e 	bl	8002254 <osMutexCreate>
 8005bf8:	6020      	str	r0, [r4, #0]
 8005bfa:	b910      	cbnz	r0, 8005c02 <rtos::Mutex::Mutex()+0x26>
 8005bfc:	4802      	ldr	r0, [pc, #8]	; (8005c08 <rtos::Mutex::Mutex()+0x2c>)
 8005bfe:	f7fb fd55 	bl	80016ac <error>
 8005c02:	4620      	mov	r0, r4
 8005c04:	bd38      	pop	{r3, r4, r5, pc}
 8005c06:	bf00      	nop
 8005c08:	0800732b 	.word	0x0800732b

08005c0c <rtos::Mutex::lock(unsigned long)>:
 8005c0c:	6800      	ldr	r0, [r0, #0]
 8005c0e:	f7fc bb3f 	b.w	8002290 <osMutexWait>

08005c12 <rtos::Mutex::unlock()>:
 8005c12:	6800      	ldr	r0, [r0, #0]
 8005c14:	f7fc bb64 	b.w	80022e0 <osMutexRelease>

08005c18 <rtos::Mutex::~Mutex()>:
 8005c18:	b510      	push	{r4, lr}
 8005c1a:	4604      	mov	r4, r0
 8005c1c:	6800      	ldr	r0, [r0, #0]
 8005c1e:	f7fc fba5 	bl	800236c <osMutexDelete>
 8005c22:	4620      	mov	r0, r4
 8005c24:	bd10      	pop	{r4, pc}
	...

08005c28 <rt_set_PSP>:
 8005c28:	f380 8809 	msr	PSP, r0
 8005c2c:	4770      	bx	lr

08005c2e <rt_get_PSP>:
 8005c2e:	f3ef 8009 	mrs	r0, PSP
 8005c32:	4770      	bx	lr

08005c34 <os_set_env>:
 8005c34:	4668      	mov	r0, sp
 8005c36:	f380 8809 	msr	PSP, r0
 8005c3a:	485a      	ldr	r0, [pc, #360]	; (8005da4 <OS_Tick_Handler+0x10>)
 8005c3c:	7800      	ldrb	r0, [r0, #0]
 8005c3e:	07c0      	lsls	r0, r0, #31
 8005c40:	bf14      	ite	ne
 8005c42:	2002      	movne	r0, #2
 8005c44:	2003      	moveq	r0, #3
 8005c46:	f380 8814 	msr	CONTROL, r0
 8005c4a:	4770      	bx	lr

08005c4c <_alloc_box>:
 8005c4c:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005da8 <OS_Tick_Handler+0x14>
 8005c50:	f3ef 8305 	mrs	r3, IPSR
 8005c54:	061b      	lsls	r3, r3, #24
 8005c56:	bf18      	it	ne
 8005c58:	4760      	bxne	r12
 8005c5a:	f3ef 8314 	mrs	r3, CONTROL
 8005c5e:	07db      	lsls	r3, r3, #31
 8005c60:	bf08      	it	eq
 8005c62:	4760      	bxeq	r12
 8005c64:	df00      	svc	0
 8005c66:	4770      	bx	lr

08005c68 <_free_box>:
 8005c68:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005dac <OS_Tick_Handler+0x18>
 8005c6c:	f3ef 8305 	mrs	r3, IPSR
 8005c70:	061b      	lsls	r3, r3, #24
 8005c72:	bf18      	it	ne
 8005c74:	4760      	bxne	r12
 8005c76:	f3ef 8314 	mrs	r3, CONTROL
 8005c7a:	07db      	lsls	r3, r3, #31
 8005c7c:	bf08      	it	eq
 8005c7e:	4760      	bxeq	r12
 8005c80:	df00      	svc	0
 8005c82:	4770      	bx	lr

08005c84 <SVC_Handler>:
 8005c84:	f3ef 8009 	mrs	r0, PSP
 8005c88:	6981      	ldr	r1, [r0, #24]
 8005c8a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8005c8e:	bbe1      	cbnz	r1, 8005d0a <SVC_User>
 8005c90:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005c94:	b510      	push	{r4, lr}
 8005c96:	47e0      	blx	r12
 8005c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005c9c:	f3ef 8c09 	mrs	r12, PSP
 8005ca0:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005ca4:	4b42      	ldr	r3, [pc, #264]	; (8005db0 <OS_Tick_Handler+0x1c>)
 8005ca6:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005caa:	4291      	cmp	r1, r2
 8005cac:	bf08      	it	eq
 8005cae:	4770      	bxeq	lr
 8005cb0:	b941      	cbnz	r1, 8005cc4 <SVC_ContextSave>
 8005cb2:	f01e 0f10 	tst.w	lr, #16
 8005cb6:	d116      	bne.n	8005ce6 <SVC_ContextRestore>
 8005cb8:	493e      	ldr	r1, [pc, #248]	; (8005db4 <OS_Tick_Handler+0x20>)
 8005cba:	6808      	ldr	r0, [r1, #0]
 8005cbc:	f020 0001 	bic.w	r0, r0, #1
 8005cc0:	6008      	str	r0, [r1, #0]
 8005cc2:	e010      	b.n	8005ce6 <SVC_ContextRestore>

08005cc4 <SVC_ContextSave>:
 8005cc4:	f01e 0f10 	tst.w	lr, #16
 8005cc8:	bf06      	itte	eq
 8005cca:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005cce:	2001      	moveq	r0, #1
 8005cd0:	2000      	movne	r0, #0
 8005cd2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005cd6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005cda:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005cde:	b40c      	push	{r2, r3}
 8005ce0:	f7fb fefc 	bl	8001adc <rt_stk_check>
 8005ce4:	bc0c      	pop	{r2, r3}

08005ce6 <SVC_ContextRestore>:
 8005ce6:	601a      	str	r2, [r3, #0]
 8005ce8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005cec:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005cf0:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005cf4:	2800      	cmp	r0, #0
 8005cf6:	bf0e      	itee	eq
 8005cf8:	f06f 0e02 	mvneq.w	lr, #2
 8005cfc:	f06f 0e12 	mvnne.w	lr, #18
 8005d00:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005d04:	f38c 8809 	msr	PSP, r12

08005d08 <SVC_Exit>:
 8005d08:	4770      	bx	lr

08005d0a <SVC_User>:
 8005d0a:	b510      	push	{r4, lr}
 8005d0c:	4a2a      	ldr	r2, [pc, #168]	; (8005db8 <OS_Tick_Handler+0x24>)
 8005d0e:	6812      	ldr	r2, [r2, #0]
 8005d10:	4291      	cmp	r1, r2
 8005d12:	d809      	bhi.n	8005d28 <SVC_Done>
 8005d14:	4c29      	ldr	r4, [pc, #164]	; (8005dbc <OS_Tick_Handler+0x28>)
 8005d16:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005d1a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005d1e:	47a0      	blx	r4
 8005d20:	f3ef 8c09 	mrs	r12, PSP
 8005d24:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005d28 <SVC_Done>:
 8005d28:	bd10      	pop	{r4, pc}

08005d2a <PendSV_Handler>:
 8005d2a:	b510      	push	{r4, lr}
 8005d2c:	f7fb fe62 	bl	80019f4 <rt_pop_req>

08005d30 <Sys_Switch>:
 8005d30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d34:	4b1e      	ldr	r3, [pc, #120]	; (8005db0 <OS_Tick_Handler+0x1c>)
 8005d36:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005d3a:	4291      	cmp	r1, r2
 8005d3c:	bf08      	it	eq
 8005d3e:	4770      	bxeq	lr
 8005d40:	f3ef 8c09 	mrs	r12, PSP
 8005d44:	f01e 0f10 	tst.w	lr, #16
 8005d48:	bf06      	itte	eq
 8005d4a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005d4e:	2001      	moveq	r0, #1
 8005d50:	2000      	movne	r0, #0
 8005d52:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005d56:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005d5a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005d5e:	b40c      	push	{r2, r3}
 8005d60:	f7fb febc 	bl	8001adc <rt_stk_check>
 8005d64:	bc0c      	pop	{r2, r3}
 8005d66:	601a      	str	r2, [r3, #0]
 8005d68:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005d6c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005d70:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005d74:	2800      	cmp	r0, #0
 8005d76:	bf0e      	itee	eq
 8005d78:	f06f 0e02 	mvneq.w	lr, #2
 8005d7c:	f06f 0e12 	mvnne.w	lr, #18
 8005d80:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005d84:	f38c 8809 	msr	PSP, r12

08005d88 <Sys_Exit>:
 8005d88:	4770      	bx	lr

08005d8a <SysTick_Handler>:
 8005d8a:	b510      	push	{r4, lr}
 8005d8c:	f7fb fe88 	bl	8001aa0 <rt_systick>
 8005d90:	f7ff bfce 	b.w	8005d30 <Sys_Switch>

08005d94 <OS_Tick_Handler>:
 8005d94:	b510      	push	{r4, lr}
 8005d96:	f7fb fe81 	bl	8001a9c <os_tick_irqack>
 8005d9a:	f7fb fe81 	bl	8001aa0 <rt_systick>
 8005d9e:	f7ff bfc7 	b.w	8005d30 <Sys_Switch>
 8005da2:	0000      	.short	0x0000
 8005da4:	08006fce 	.word	0x08006fce
 8005da8:	08001c0b 	.word	0x08001c0b
 8005dac:	08001c25 	.word	0x08001c25
 8005db0:	2000288c 	.word	0x2000288c
 8005db4:	e000ef34 	.word	0xe000ef34
 8005db8:	00000000 	.word	0x00000000
 8005dbc:	fffffffc 	.word	0xfffffffc

08005dc0 <Reset_Handler>:
 8005dc0:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005de4 <LoopCopyDataInit+0x14>
 8005dc4:	2100      	movs	r1, #0
 8005dc6:	e003      	b.n	8005dd0 <LoopCopyDataInit>

08005dc8 <CopyDataInit>:
 8005dc8:	4b07      	ldr	r3, [pc, #28]	; (8005de8 <LoopCopyDataInit+0x18>)
 8005dca:	585b      	ldr	r3, [r3, r1]
 8005dcc:	5043      	str	r3, [r0, r1]
 8005dce:	3104      	adds	r1, #4

08005dd0 <LoopCopyDataInit>:
 8005dd0:	4806      	ldr	r0, [pc, #24]	; (8005dec <LoopCopyDataInit+0x1c>)
 8005dd2:	4b07      	ldr	r3, [pc, #28]	; (8005df0 <LoopCopyDataInit+0x20>)
 8005dd4:	1842      	adds	r2, r0, r1
 8005dd6:	429a      	cmp	r2, r3
 8005dd8:	d3f6      	bcc.n	8005dc8 <CopyDataInit>
 8005dda:	f7fe f84f 	bl	8003e7c <SystemInit>
 8005dde:	f7fb f979 	bl	80010d4 <_start>
 8005de2:	4770      	bx	lr
 8005de4:	20020000 	.word	0x20020000
 8005de8:	080073f4 	.word	0x080073f4
 8005dec:	200001c4 	.word	0x200001c4
 8005df0:	20000260 	.word	0x20000260

08005df4 <ADC_IRQHandler>:
 8005df4:	e7fe      	b.n	8005df4 <ADC_IRQHandler>
	...

08005df8 <__errno>:
 8005df8:	4b01      	ldr	r3, [pc, #4]	; (8005e00 <__errno+0x8>)
 8005dfa:	6818      	ldr	r0, [r3, #0]
 8005dfc:	4770      	bx	lr
 8005dfe:	bf00      	nop
 8005e00:	200001e8 	.word	0x200001e8

08005e04 <__sflush_r>:
 8005e04:	898a      	ldrh	r2, [r1, #12]
 8005e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e0a:	4605      	mov	r5, r0
 8005e0c:	0710      	lsls	r0, r2, #28
 8005e0e:	460c      	mov	r4, r1
 8005e10:	d45a      	bmi.n	8005ec8 <__sflush_r+0xc4>
 8005e12:	684b      	ldr	r3, [r1, #4]
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	dc05      	bgt.n	8005e24 <__sflush_r+0x20>
 8005e18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	dc02      	bgt.n	8005e24 <__sflush_r+0x20>
 8005e1e:	2000      	movs	r0, #0
 8005e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005e26:	2e00      	cmp	r6, #0
 8005e28:	d0f9      	beq.n	8005e1e <__sflush_r+0x1a>
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005e30:	682f      	ldr	r7, [r5, #0]
 8005e32:	602b      	str	r3, [r5, #0]
 8005e34:	d033      	beq.n	8005e9e <__sflush_r+0x9a>
 8005e36:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005e38:	89a3      	ldrh	r3, [r4, #12]
 8005e3a:	075a      	lsls	r2, r3, #29
 8005e3c:	d505      	bpl.n	8005e4a <__sflush_r+0x46>
 8005e3e:	6863      	ldr	r3, [r4, #4]
 8005e40:	1ac0      	subs	r0, r0, r3
 8005e42:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e44:	b10b      	cbz	r3, 8005e4a <__sflush_r+0x46>
 8005e46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e48:	1ac0      	subs	r0, r0, r3
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	4602      	mov	r2, r0
 8005e4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005e50:	6a21      	ldr	r1, [r4, #32]
 8005e52:	4628      	mov	r0, r5
 8005e54:	47b0      	blx	r6
 8005e56:	1c43      	adds	r3, r0, #1
 8005e58:	89a3      	ldrh	r3, [r4, #12]
 8005e5a:	d106      	bne.n	8005e6a <__sflush_r+0x66>
 8005e5c:	6829      	ldr	r1, [r5, #0]
 8005e5e:	291d      	cmp	r1, #29
 8005e60:	d84b      	bhi.n	8005efa <__sflush_r+0xf6>
 8005e62:	4a2b      	ldr	r2, [pc, #172]	; (8005f10 <__sflush_r+0x10c>)
 8005e64:	40ca      	lsrs	r2, r1
 8005e66:	07d6      	lsls	r6, r2, #31
 8005e68:	d547      	bpl.n	8005efa <__sflush_r+0xf6>
 8005e6a:	2200      	movs	r2, #0
 8005e6c:	6062      	str	r2, [r4, #4]
 8005e6e:	04d9      	lsls	r1, r3, #19
 8005e70:	6922      	ldr	r2, [r4, #16]
 8005e72:	6022      	str	r2, [r4, #0]
 8005e74:	d504      	bpl.n	8005e80 <__sflush_r+0x7c>
 8005e76:	1c42      	adds	r2, r0, #1
 8005e78:	d101      	bne.n	8005e7e <__sflush_r+0x7a>
 8005e7a:	682b      	ldr	r3, [r5, #0]
 8005e7c:	b903      	cbnz	r3, 8005e80 <__sflush_r+0x7c>
 8005e7e:	6560      	str	r0, [r4, #84]	; 0x54
 8005e80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005e82:	602f      	str	r7, [r5, #0]
 8005e84:	2900      	cmp	r1, #0
 8005e86:	d0ca      	beq.n	8005e1e <__sflush_r+0x1a>
 8005e88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005e8c:	4299      	cmp	r1, r3
 8005e8e:	d002      	beq.n	8005e96 <__sflush_r+0x92>
 8005e90:	4628      	mov	r0, r5
 8005e92:	f7ff fd5d 	bl	8005950 <__wrap__free_r>
 8005e96:	2000      	movs	r0, #0
 8005e98:	6360      	str	r0, [r4, #52]	; 0x34
 8005e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e9e:	6a21      	ldr	r1, [r4, #32]
 8005ea0:	2301      	movs	r3, #1
 8005ea2:	4628      	mov	r0, r5
 8005ea4:	47b0      	blx	r6
 8005ea6:	1c41      	adds	r1, r0, #1
 8005ea8:	d1c6      	bne.n	8005e38 <__sflush_r+0x34>
 8005eaa:	682b      	ldr	r3, [r5, #0]
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d0c3      	beq.n	8005e38 <__sflush_r+0x34>
 8005eb0:	2b1d      	cmp	r3, #29
 8005eb2:	d001      	beq.n	8005eb8 <__sflush_r+0xb4>
 8005eb4:	2b16      	cmp	r3, #22
 8005eb6:	d101      	bne.n	8005ebc <__sflush_r+0xb8>
 8005eb8:	602f      	str	r7, [r5, #0]
 8005eba:	e7b0      	b.n	8005e1e <__sflush_r+0x1a>
 8005ebc:	89a3      	ldrh	r3, [r4, #12]
 8005ebe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005ec2:	81a3      	strh	r3, [r4, #12]
 8005ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005ec8:	690f      	ldr	r7, [r1, #16]
 8005eca:	2f00      	cmp	r7, #0
 8005ecc:	d0a7      	beq.n	8005e1e <__sflush_r+0x1a>
 8005ece:	0793      	lsls	r3, r2, #30
 8005ed0:	680e      	ldr	r6, [r1, #0]
 8005ed2:	bf08      	it	eq
 8005ed4:	694b      	ldreq	r3, [r1, #20]
 8005ed6:	600f      	str	r7, [r1, #0]
 8005ed8:	bf18      	it	ne
 8005eda:	2300      	movne	r3, #0
 8005edc:	eba6 0807 	sub.w	r8, r6, r7
 8005ee0:	608b      	str	r3, [r1, #8]
 8005ee2:	f1b8 0f00 	cmp.w	r8, #0
 8005ee6:	dd9a      	ble.n	8005e1e <__sflush_r+0x1a>
 8005ee8:	4643      	mov	r3, r8
 8005eea:	463a      	mov	r2, r7
 8005eec:	6a21      	ldr	r1, [r4, #32]
 8005eee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005ef0:	4628      	mov	r0, r5
 8005ef2:	47b0      	blx	r6
 8005ef4:	2800      	cmp	r0, #0
 8005ef6:	dc07      	bgt.n	8005f08 <__sflush_r+0x104>
 8005ef8:	89a3      	ldrh	r3, [r4, #12]
 8005efa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005efe:	81a3      	strh	r3, [r4, #12]
 8005f00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f08:	4407      	add	r7, r0
 8005f0a:	eba8 0800 	sub.w	r8, r8, r0
 8005f0e:	e7e8      	b.n	8005ee2 <__sflush_r+0xde>
 8005f10:	20400001 	.word	0x20400001

08005f14 <_fflush_r>:
 8005f14:	b538      	push	{r3, r4, r5, lr}
 8005f16:	690b      	ldr	r3, [r1, #16]
 8005f18:	4605      	mov	r5, r0
 8005f1a:	460c      	mov	r4, r1
 8005f1c:	b1db      	cbz	r3, 8005f56 <_fflush_r+0x42>
 8005f1e:	b118      	cbz	r0, 8005f28 <_fflush_r+0x14>
 8005f20:	6983      	ldr	r3, [r0, #24]
 8005f22:	b90b      	cbnz	r3, 8005f28 <_fflush_r+0x14>
 8005f24:	f000 f872 	bl	800600c <__sinit>
 8005f28:	4b0c      	ldr	r3, [pc, #48]	; (8005f5c <_fflush_r+0x48>)
 8005f2a:	429c      	cmp	r4, r3
 8005f2c:	d109      	bne.n	8005f42 <_fflush_r+0x2e>
 8005f2e:	686c      	ldr	r4, [r5, #4]
 8005f30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005f34:	b17b      	cbz	r3, 8005f56 <_fflush_r+0x42>
 8005f36:	4621      	mov	r1, r4
 8005f38:	4628      	mov	r0, r5
 8005f3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005f3e:	f7ff bf61 	b.w	8005e04 <__sflush_r>
 8005f42:	4b07      	ldr	r3, [pc, #28]	; (8005f60 <_fflush_r+0x4c>)
 8005f44:	429c      	cmp	r4, r3
 8005f46:	d101      	bne.n	8005f4c <_fflush_r+0x38>
 8005f48:	68ac      	ldr	r4, [r5, #8]
 8005f4a:	e7f1      	b.n	8005f30 <_fflush_r+0x1c>
 8005f4c:	4b05      	ldr	r3, [pc, #20]	; (8005f64 <_fflush_r+0x50>)
 8005f4e:	429c      	cmp	r4, r3
 8005f50:	bf08      	it	eq
 8005f52:	68ec      	ldreq	r4, [r5, #12]
 8005f54:	e7ec      	b.n	8005f30 <_fflush_r+0x1c>
 8005f56:	2000      	movs	r0, #0
 8005f58:	bd38      	pop	{r3, r4, r5, pc}
 8005f5a:	bf00      	nop
 8005f5c:	08007370 	.word	0x08007370
 8005f60:	08007390 	.word	0x08007390
 8005f64:	08007350 	.word	0x08007350

08005f68 <fflush>:
 8005f68:	4601      	mov	r1, r0
 8005f6a:	b920      	cbnz	r0, 8005f76 <fflush+0xe>
 8005f6c:	4b04      	ldr	r3, [pc, #16]	; (8005f80 <fflush+0x18>)
 8005f6e:	4905      	ldr	r1, [pc, #20]	; (8005f84 <fflush+0x1c>)
 8005f70:	6818      	ldr	r0, [r3, #0]
 8005f72:	f000 b8b7 	b.w	80060e4 <_fwalk_reent>
 8005f76:	4b04      	ldr	r3, [pc, #16]	; (8005f88 <fflush+0x20>)
 8005f78:	6818      	ldr	r0, [r3, #0]
 8005f7a:	f7ff bfcb 	b.w	8005f14 <_fflush_r>
 8005f7e:	bf00      	nop
 8005f80:	080073b0 	.word	0x080073b0
 8005f84:	08005f15 	.word	0x08005f15
 8005f88:	200001e8 	.word	0x200001e8

08005f8c <_cleanup_r>:
 8005f8c:	4901      	ldr	r1, [pc, #4]	; (8005f94 <_cleanup_r+0x8>)
 8005f8e:	f000 b8a9 	b.w	80060e4 <_fwalk_reent>
 8005f92:	bf00      	nop
 8005f94:	08005f15 	.word	0x08005f15

08005f98 <std.isra.0>:
 8005f98:	2300      	movs	r3, #0
 8005f9a:	b510      	push	{r4, lr}
 8005f9c:	4604      	mov	r4, r0
 8005f9e:	6003      	str	r3, [r0, #0]
 8005fa0:	6043      	str	r3, [r0, #4]
 8005fa2:	6083      	str	r3, [r0, #8]
 8005fa4:	8181      	strh	r1, [r0, #12]
 8005fa6:	6643      	str	r3, [r0, #100]	; 0x64
 8005fa8:	81c2      	strh	r2, [r0, #14]
 8005faa:	6103      	str	r3, [r0, #16]
 8005fac:	6143      	str	r3, [r0, #20]
 8005fae:	6183      	str	r3, [r0, #24]
 8005fb0:	4619      	mov	r1, r3
 8005fb2:	2208      	movs	r2, #8
 8005fb4:	305c      	adds	r0, #92	; 0x5c
 8005fb6:	f000 f960 	bl	800627a <memset>
 8005fba:	4b05      	ldr	r3, [pc, #20]	; (8005fd0 <std.isra.0+0x38>)
 8005fbc:	6263      	str	r3, [r4, #36]	; 0x24
 8005fbe:	4b05      	ldr	r3, [pc, #20]	; (8005fd4 <std.isra.0+0x3c>)
 8005fc0:	62a3      	str	r3, [r4, #40]	; 0x28
 8005fc2:	4b05      	ldr	r3, [pc, #20]	; (8005fd8 <std.isra.0+0x40>)
 8005fc4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005fc6:	4b05      	ldr	r3, [pc, #20]	; (8005fdc <std.isra.0+0x44>)
 8005fc8:	6224      	str	r4, [r4, #32]
 8005fca:	6323      	str	r3, [r4, #48]	; 0x30
 8005fcc:	bd10      	pop	{r4, pc}
 8005fce:	bf00      	nop
 8005fd0:	0800678d 	.word	0x0800678d
 8005fd4:	080067af 	.word	0x080067af
 8005fd8:	080067e7 	.word	0x080067e7
 8005fdc:	0800680b 	.word	0x0800680b

08005fe0 <__sfmoreglue>:
 8005fe0:	b570      	push	{r4, r5, r6, lr}
 8005fe2:	1e4a      	subs	r2, r1, #1
 8005fe4:	2568      	movs	r5, #104	; 0x68
 8005fe6:	4355      	muls	r5, r2
 8005fe8:	460e      	mov	r6, r1
 8005fea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005fee:	f7ff fcab 	bl	8005948 <__wrap__malloc_r>
 8005ff2:	4604      	mov	r4, r0
 8005ff4:	b140      	cbz	r0, 8006008 <__sfmoreglue+0x28>
 8005ff6:	2100      	movs	r1, #0
 8005ff8:	e880 0042 	stmia.w	r0, {r1, r6}
 8005ffc:	300c      	adds	r0, #12
 8005ffe:	60a0      	str	r0, [r4, #8]
 8006000:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006004:	f000 f939 	bl	800627a <memset>
 8006008:	4620      	mov	r0, r4
 800600a:	bd70      	pop	{r4, r5, r6, pc}

0800600c <__sinit>:
 800600c:	6983      	ldr	r3, [r0, #24]
 800600e:	b510      	push	{r4, lr}
 8006010:	4604      	mov	r4, r0
 8006012:	bb33      	cbnz	r3, 8006062 <__sinit+0x56>
 8006014:	6483      	str	r3, [r0, #72]	; 0x48
 8006016:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006018:	6503      	str	r3, [r0, #80]	; 0x50
 800601a:	4b12      	ldr	r3, [pc, #72]	; (8006064 <__sinit+0x58>)
 800601c:	4a12      	ldr	r2, [pc, #72]	; (8006068 <__sinit+0x5c>)
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	6282      	str	r2, [r0, #40]	; 0x28
 8006022:	4298      	cmp	r0, r3
 8006024:	bf04      	itt	eq
 8006026:	2301      	moveq	r3, #1
 8006028:	6183      	streq	r3, [r0, #24]
 800602a:	f000 f81f 	bl	800606c <__sfp>
 800602e:	6060      	str	r0, [r4, #4]
 8006030:	4620      	mov	r0, r4
 8006032:	f000 f81b 	bl	800606c <__sfp>
 8006036:	60a0      	str	r0, [r4, #8]
 8006038:	4620      	mov	r0, r4
 800603a:	f000 f817 	bl	800606c <__sfp>
 800603e:	2200      	movs	r2, #0
 8006040:	60e0      	str	r0, [r4, #12]
 8006042:	2104      	movs	r1, #4
 8006044:	6860      	ldr	r0, [r4, #4]
 8006046:	f7ff ffa7 	bl	8005f98 <std.isra.0>
 800604a:	2201      	movs	r2, #1
 800604c:	2109      	movs	r1, #9
 800604e:	68a0      	ldr	r0, [r4, #8]
 8006050:	f7ff ffa2 	bl	8005f98 <std.isra.0>
 8006054:	2202      	movs	r2, #2
 8006056:	2112      	movs	r1, #18
 8006058:	68e0      	ldr	r0, [r4, #12]
 800605a:	f7ff ff9d 	bl	8005f98 <std.isra.0>
 800605e:	2301      	movs	r3, #1
 8006060:	61a3      	str	r3, [r4, #24]
 8006062:	bd10      	pop	{r4, pc}
 8006064:	080073b0 	.word	0x080073b0
 8006068:	08005f8d 	.word	0x08005f8d

0800606c <__sfp>:
 800606c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800606e:	4b1c      	ldr	r3, [pc, #112]	; (80060e0 <__sfp+0x74>)
 8006070:	681e      	ldr	r6, [r3, #0]
 8006072:	69b3      	ldr	r3, [r6, #24]
 8006074:	4607      	mov	r7, r0
 8006076:	b913      	cbnz	r3, 800607e <__sfp+0x12>
 8006078:	4630      	mov	r0, r6
 800607a:	f7ff ffc7 	bl	800600c <__sinit>
 800607e:	3648      	adds	r6, #72	; 0x48
 8006080:	68b4      	ldr	r4, [r6, #8]
 8006082:	6873      	ldr	r3, [r6, #4]
 8006084:	3b01      	subs	r3, #1
 8006086:	d503      	bpl.n	8006090 <__sfp+0x24>
 8006088:	6833      	ldr	r3, [r6, #0]
 800608a:	b133      	cbz	r3, 800609a <__sfp+0x2e>
 800608c:	6836      	ldr	r6, [r6, #0]
 800608e:	e7f7      	b.n	8006080 <__sfp+0x14>
 8006090:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006094:	b16d      	cbz	r5, 80060b2 <__sfp+0x46>
 8006096:	3468      	adds	r4, #104	; 0x68
 8006098:	e7f4      	b.n	8006084 <__sfp+0x18>
 800609a:	2104      	movs	r1, #4
 800609c:	4638      	mov	r0, r7
 800609e:	f7ff ff9f 	bl	8005fe0 <__sfmoreglue>
 80060a2:	6030      	str	r0, [r6, #0]
 80060a4:	2800      	cmp	r0, #0
 80060a6:	d1f1      	bne.n	800608c <__sfp+0x20>
 80060a8:	230c      	movs	r3, #12
 80060aa:	603b      	str	r3, [r7, #0]
 80060ac:	4604      	mov	r4, r0
 80060ae:	4620      	mov	r0, r4
 80060b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80060b6:	81e3      	strh	r3, [r4, #14]
 80060b8:	2301      	movs	r3, #1
 80060ba:	81a3      	strh	r3, [r4, #12]
 80060bc:	6665      	str	r5, [r4, #100]	; 0x64
 80060be:	6025      	str	r5, [r4, #0]
 80060c0:	60a5      	str	r5, [r4, #8]
 80060c2:	6065      	str	r5, [r4, #4]
 80060c4:	6125      	str	r5, [r4, #16]
 80060c6:	6165      	str	r5, [r4, #20]
 80060c8:	61a5      	str	r5, [r4, #24]
 80060ca:	2208      	movs	r2, #8
 80060cc:	4629      	mov	r1, r5
 80060ce:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80060d2:	f000 f8d2 	bl	800627a <memset>
 80060d6:	6365      	str	r5, [r4, #52]	; 0x34
 80060d8:	63a5      	str	r5, [r4, #56]	; 0x38
 80060da:	64a5      	str	r5, [r4, #72]	; 0x48
 80060dc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80060de:	e7e6      	b.n	80060ae <__sfp+0x42>
 80060e0:	080073b0 	.word	0x080073b0

080060e4 <_fwalk_reent>:
 80060e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80060e8:	4680      	mov	r8, r0
 80060ea:	4689      	mov	r9, r1
 80060ec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80060f0:	2600      	movs	r6, #0
 80060f2:	b914      	cbnz	r4, 80060fa <_fwalk_reent+0x16>
 80060f4:	4630      	mov	r0, r6
 80060f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80060fa:	68a5      	ldr	r5, [r4, #8]
 80060fc:	6867      	ldr	r7, [r4, #4]
 80060fe:	3f01      	subs	r7, #1
 8006100:	d501      	bpl.n	8006106 <_fwalk_reent+0x22>
 8006102:	6824      	ldr	r4, [r4, #0]
 8006104:	e7f5      	b.n	80060f2 <_fwalk_reent+0xe>
 8006106:	89ab      	ldrh	r3, [r5, #12]
 8006108:	2b01      	cmp	r3, #1
 800610a:	d907      	bls.n	800611c <_fwalk_reent+0x38>
 800610c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006110:	3301      	adds	r3, #1
 8006112:	d003      	beq.n	800611c <_fwalk_reent+0x38>
 8006114:	4629      	mov	r1, r5
 8006116:	4640      	mov	r0, r8
 8006118:	47c8      	blx	r9
 800611a:	4306      	orrs	r6, r0
 800611c:	3568      	adds	r5, #104	; 0x68
 800611e:	e7ee      	b.n	80060fe <_fwalk_reent+0x1a>

08006120 <__libc_init_array>:
 8006120:	b570      	push	{r4, r5, r6, lr}
 8006122:	4e0d      	ldr	r6, [pc, #52]	; (8006158 <__libc_init_array+0x38>)
 8006124:	4c0d      	ldr	r4, [pc, #52]	; (800615c <__libc_init_array+0x3c>)
 8006126:	1ba4      	subs	r4, r4, r6
 8006128:	10a4      	asrs	r4, r4, #2
 800612a:	2500      	movs	r5, #0
 800612c:	42a5      	cmp	r5, r4
 800612e:	d109      	bne.n	8006144 <__libc_init_array+0x24>
 8006130:	4e0b      	ldr	r6, [pc, #44]	; (8006160 <__libc_init_array+0x40>)
 8006132:	4c0c      	ldr	r4, [pc, #48]	; (8006164 <__libc_init_array+0x44>)
 8006134:	f000 fd36 	bl	8006ba4 <_init>
 8006138:	1ba4      	subs	r4, r4, r6
 800613a:	10a4      	asrs	r4, r4, #2
 800613c:	2500      	movs	r5, #0
 800613e:	42a5      	cmp	r5, r4
 8006140:	d105      	bne.n	800614e <__libc_init_array+0x2e>
 8006142:	bd70      	pop	{r4, r5, r6, pc}
 8006144:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006148:	4798      	blx	r3
 800614a:	3501      	adds	r5, #1
 800614c:	e7ee      	b.n	800612c <__libc_init_array+0xc>
 800614e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006152:	4798      	blx	r3
 8006154:	3501      	adds	r5, #1
 8006156:	e7f2      	b.n	800613e <__libc_init_array+0x1e>
 8006158:	2000024c 	.word	0x2000024c
 800615c:	2000024c 	.word	0x2000024c
 8006160:	2000024c 	.word	0x2000024c
 8006164:	20000258 	.word	0x20000258

08006168 <malloc>:
 8006168:	4b02      	ldr	r3, [pc, #8]	; (8006174 <malloc+0xc>)
 800616a:	4601      	mov	r1, r0
 800616c:	6818      	ldr	r0, [r3, #0]
 800616e:	f7ff bbeb 	b.w	8005948 <__wrap__malloc_r>
 8006172:	bf00      	nop
 8006174:	200001e8 	.word	0x200001e8

08006178 <free>:
 8006178:	4b02      	ldr	r3, [pc, #8]	; (8006184 <free+0xc>)
 800617a:	4601      	mov	r1, r0
 800617c:	6818      	ldr	r0, [r3, #0]
 800617e:	f7ff bbe7 	b.w	8005950 <__wrap__free_r>
 8006182:	bf00      	nop
 8006184:	200001e8 	.word	0x200001e8
	...

08006190 <memchr>:
 8006190:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006194:	2a10      	cmp	r2, #16
 8006196:	db2b      	blt.n	80061f0 <memchr+0x60>
 8006198:	f010 0f07 	tst.w	r0, #7
 800619c:	d008      	beq.n	80061b0 <memchr+0x20>
 800619e:	f810 3b01 	ldrb.w	r3, [r0], #1
 80061a2:	3a01      	subs	r2, #1
 80061a4:	428b      	cmp	r3, r1
 80061a6:	d02d      	beq.n	8006204 <memchr+0x74>
 80061a8:	f010 0f07 	tst.w	r0, #7
 80061ac:	b342      	cbz	r2, 8006200 <memchr+0x70>
 80061ae:	d1f6      	bne.n	800619e <memchr+0xe>
 80061b0:	b4f0      	push	{r4, r5, r6, r7}
 80061b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80061b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80061ba:	f022 0407 	bic.w	r4, r2, #7
 80061be:	f07f 0700 	mvns.w	r7, #0
 80061c2:	2300      	movs	r3, #0
 80061c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80061c8:	3c08      	subs	r4, #8
 80061ca:	ea85 0501 	eor.w	r5, r5, r1
 80061ce:	ea86 0601 	eor.w	r6, r6, r1
 80061d2:	fa85 f547 	uadd8	r5, r5, r7
 80061d6:	faa3 f587 	sel	r5, r3, r7
 80061da:	fa86 f647 	uadd8	r6, r6, r7
 80061de:	faa5 f687 	sel	r6, r5, r7
 80061e2:	b98e      	cbnz	r6, 8006208 <memchr+0x78>
 80061e4:	d1ee      	bne.n	80061c4 <memchr+0x34>
 80061e6:	bcf0      	pop	{r4, r5, r6, r7}
 80061e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80061ec:	f002 0207 	and.w	r2, r2, #7
 80061f0:	b132      	cbz	r2, 8006200 <memchr+0x70>
 80061f2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80061f6:	3a01      	subs	r2, #1
 80061f8:	ea83 0301 	eor.w	r3, r3, r1
 80061fc:	b113      	cbz	r3, 8006204 <memchr+0x74>
 80061fe:	d1f8      	bne.n	80061f2 <memchr+0x62>
 8006200:	2000      	movs	r0, #0
 8006202:	4770      	bx	lr
 8006204:	3801      	subs	r0, #1
 8006206:	4770      	bx	lr
 8006208:	2d00      	cmp	r5, #0
 800620a:	bf06      	itte	eq
 800620c:	4635      	moveq	r5, r6
 800620e:	3803      	subeq	r0, #3
 8006210:	3807      	subne	r0, #7
 8006212:	f015 0f01 	tst.w	r5, #1
 8006216:	d107      	bne.n	8006228 <memchr+0x98>
 8006218:	3001      	adds	r0, #1
 800621a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800621e:	bf02      	ittt	eq
 8006220:	3001      	addeq	r0, #1
 8006222:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006226:	3001      	addeq	r0, #1
 8006228:	bcf0      	pop	{r4, r5, r6, r7}
 800622a:	3801      	subs	r0, #1
 800622c:	4770      	bx	lr
 800622e:	bf00      	nop

08006230 <memcpy>:
 8006230:	b510      	push	{r4, lr}
 8006232:	1e43      	subs	r3, r0, #1
 8006234:	440a      	add	r2, r1
 8006236:	4291      	cmp	r1, r2
 8006238:	d100      	bne.n	800623c <memcpy+0xc>
 800623a:	bd10      	pop	{r4, pc}
 800623c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006240:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006244:	e7f7      	b.n	8006236 <memcpy+0x6>

08006246 <memmove>:
 8006246:	4288      	cmp	r0, r1
 8006248:	b510      	push	{r4, lr}
 800624a:	eb01 0302 	add.w	r3, r1, r2
 800624e:	d803      	bhi.n	8006258 <memmove+0x12>
 8006250:	1e42      	subs	r2, r0, #1
 8006252:	4299      	cmp	r1, r3
 8006254:	d10c      	bne.n	8006270 <memmove+0x2a>
 8006256:	bd10      	pop	{r4, pc}
 8006258:	4298      	cmp	r0, r3
 800625a:	d2f9      	bcs.n	8006250 <memmove+0xa>
 800625c:	1881      	adds	r1, r0, r2
 800625e:	1ad2      	subs	r2, r2, r3
 8006260:	42d3      	cmn	r3, r2
 8006262:	d100      	bne.n	8006266 <memmove+0x20>
 8006264:	bd10      	pop	{r4, pc}
 8006266:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800626a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800626e:	e7f7      	b.n	8006260 <memmove+0x1a>
 8006270:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006274:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006278:	e7eb      	b.n	8006252 <memmove+0xc>

0800627a <memset>:
 800627a:	4402      	add	r2, r0
 800627c:	4603      	mov	r3, r0
 800627e:	4293      	cmp	r3, r2
 8006280:	d100      	bne.n	8006284 <memset+0xa>
 8006282:	4770      	bx	lr
 8006284:	f803 1b01 	strb.w	r1, [r3], #1
 8006288:	e7f9      	b.n	800627e <memset+0x4>
	...

0800628c <_free_r>:
 800628c:	b538      	push	{r3, r4, r5, lr}
 800628e:	4605      	mov	r5, r0
 8006290:	2900      	cmp	r1, #0
 8006292:	d045      	beq.n	8006320 <_free_r+0x94>
 8006294:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006298:	1f0c      	subs	r4, r1, #4
 800629a:	2b00      	cmp	r3, #0
 800629c:	bfb8      	it	lt
 800629e:	18e4      	addlt	r4, r4, r3
 80062a0:	f7ff fc77 	bl	8005b92 <__malloc_lock>
 80062a4:	4a1f      	ldr	r2, [pc, #124]	; (8006324 <_free_r+0x98>)
 80062a6:	6813      	ldr	r3, [r2, #0]
 80062a8:	4610      	mov	r0, r2
 80062aa:	b933      	cbnz	r3, 80062ba <_free_r+0x2e>
 80062ac:	6063      	str	r3, [r4, #4]
 80062ae:	6014      	str	r4, [r2, #0]
 80062b0:	4628      	mov	r0, r5
 80062b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80062b6:	f7ff bc70 	b.w	8005b9a <__malloc_unlock>
 80062ba:	42a3      	cmp	r3, r4
 80062bc:	d90c      	bls.n	80062d8 <_free_r+0x4c>
 80062be:	6821      	ldr	r1, [r4, #0]
 80062c0:	1862      	adds	r2, r4, r1
 80062c2:	4293      	cmp	r3, r2
 80062c4:	bf04      	itt	eq
 80062c6:	681a      	ldreq	r2, [r3, #0]
 80062c8:	685b      	ldreq	r3, [r3, #4]
 80062ca:	6063      	str	r3, [r4, #4]
 80062cc:	bf04      	itt	eq
 80062ce:	1852      	addeq	r2, r2, r1
 80062d0:	6022      	streq	r2, [r4, #0]
 80062d2:	6004      	str	r4, [r0, #0]
 80062d4:	e7ec      	b.n	80062b0 <_free_r+0x24>
 80062d6:	4613      	mov	r3, r2
 80062d8:	685a      	ldr	r2, [r3, #4]
 80062da:	b10a      	cbz	r2, 80062e0 <_free_r+0x54>
 80062dc:	42a2      	cmp	r2, r4
 80062de:	d9fa      	bls.n	80062d6 <_free_r+0x4a>
 80062e0:	6819      	ldr	r1, [r3, #0]
 80062e2:	1858      	adds	r0, r3, r1
 80062e4:	42a0      	cmp	r0, r4
 80062e6:	d10b      	bne.n	8006300 <_free_r+0x74>
 80062e8:	6820      	ldr	r0, [r4, #0]
 80062ea:	4401      	add	r1, r0
 80062ec:	1858      	adds	r0, r3, r1
 80062ee:	4282      	cmp	r2, r0
 80062f0:	6019      	str	r1, [r3, #0]
 80062f2:	d1dd      	bne.n	80062b0 <_free_r+0x24>
 80062f4:	6810      	ldr	r0, [r2, #0]
 80062f6:	6852      	ldr	r2, [r2, #4]
 80062f8:	605a      	str	r2, [r3, #4]
 80062fa:	4401      	add	r1, r0
 80062fc:	6019      	str	r1, [r3, #0]
 80062fe:	e7d7      	b.n	80062b0 <_free_r+0x24>
 8006300:	d902      	bls.n	8006308 <_free_r+0x7c>
 8006302:	230c      	movs	r3, #12
 8006304:	602b      	str	r3, [r5, #0]
 8006306:	e7d3      	b.n	80062b0 <_free_r+0x24>
 8006308:	6820      	ldr	r0, [r4, #0]
 800630a:	1821      	adds	r1, r4, r0
 800630c:	428a      	cmp	r2, r1
 800630e:	bf04      	itt	eq
 8006310:	6811      	ldreq	r1, [r2, #0]
 8006312:	6852      	ldreq	r2, [r2, #4]
 8006314:	6062      	str	r2, [r4, #4]
 8006316:	bf04      	itt	eq
 8006318:	1809      	addeq	r1, r1, r0
 800631a:	6021      	streq	r1, [r4, #0]
 800631c:	605c      	str	r4, [r3, #4]
 800631e:	e7c7      	b.n	80062b0 <_free_r+0x24>
 8006320:	bd38      	pop	{r3, r4, r5, pc}
 8006322:	bf00      	nop
 8006324:	20001e70 	.word	0x20001e70

08006328 <_malloc_r>:
 8006328:	b570      	push	{r4, r5, r6, lr}
 800632a:	1ccd      	adds	r5, r1, #3
 800632c:	f025 0503 	bic.w	r5, r5, #3
 8006330:	3508      	adds	r5, #8
 8006332:	2d0c      	cmp	r5, #12
 8006334:	bf38      	it	cc
 8006336:	250c      	movcc	r5, #12
 8006338:	2d00      	cmp	r5, #0
 800633a:	4606      	mov	r6, r0
 800633c:	db01      	blt.n	8006342 <_malloc_r+0x1a>
 800633e:	42a9      	cmp	r1, r5
 8006340:	d903      	bls.n	800634a <_malloc_r+0x22>
 8006342:	230c      	movs	r3, #12
 8006344:	6033      	str	r3, [r6, #0]
 8006346:	2000      	movs	r0, #0
 8006348:	bd70      	pop	{r4, r5, r6, pc}
 800634a:	f7ff fc22 	bl	8005b92 <__malloc_lock>
 800634e:	4a23      	ldr	r2, [pc, #140]	; (80063dc <_malloc_r+0xb4>)
 8006350:	6814      	ldr	r4, [r2, #0]
 8006352:	4621      	mov	r1, r4
 8006354:	b991      	cbnz	r1, 800637c <_malloc_r+0x54>
 8006356:	4c22      	ldr	r4, [pc, #136]	; (80063e0 <_malloc_r+0xb8>)
 8006358:	6823      	ldr	r3, [r4, #0]
 800635a:	b91b      	cbnz	r3, 8006364 <_malloc_r+0x3c>
 800635c:	4630      	mov	r0, r6
 800635e:	f000 fa05 	bl	800676c <_sbrk_r>
 8006362:	6020      	str	r0, [r4, #0]
 8006364:	4629      	mov	r1, r5
 8006366:	4630      	mov	r0, r6
 8006368:	f000 fa00 	bl	800676c <_sbrk_r>
 800636c:	1c43      	adds	r3, r0, #1
 800636e:	d126      	bne.n	80063be <_malloc_r+0x96>
 8006370:	230c      	movs	r3, #12
 8006372:	6033      	str	r3, [r6, #0]
 8006374:	4630      	mov	r0, r6
 8006376:	f7ff fc10 	bl	8005b9a <__malloc_unlock>
 800637a:	e7e4      	b.n	8006346 <_malloc_r+0x1e>
 800637c:	680b      	ldr	r3, [r1, #0]
 800637e:	1b5b      	subs	r3, r3, r5
 8006380:	d41a      	bmi.n	80063b8 <_malloc_r+0x90>
 8006382:	2b0b      	cmp	r3, #11
 8006384:	d90f      	bls.n	80063a6 <_malloc_r+0x7e>
 8006386:	600b      	str	r3, [r1, #0]
 8006388:	50cd      	str	r5, [r1, r3]
 800638a:	18cc      	adds	r4, r1, r3
 800638c:	4630      	mov	r0, r6
 800638e:	f7ff fc04 	bl	8005b9a <__malloc_unlock>
 8006392:	f104 000b 	add.w	r0, r4, #11
 8006396:	1d23      	adds	r3, r4, #4
 8006398:	f020 0007 	bic.w	r0, r0, #7
 800639c:	1ac3      	subs	r3, r0, r3
 800639e:	d01b      	beq.n	80063d8 <_malloc_r+0xb0>
 80063a0:	425a      	negs	r2, r3
 80063a2:	50e2      	str	r2, [r4, r3]
 80063a4:	bd70      	pop	{r4, r5, r6, pc}
 80063a6:	428c      	cmp	r4, r1
 80063a8:	bf0d      	iteet	eq
 80063aa:	6863      	ldreq	r3, [r4, #4]
 80063ac:	684b      	ldrne	r3, [r1, #4]
 80063ae:	6063      	strne	r3, [r4, #4]
 80063b0:	6013      	streq	r3, [r2, #0]
 80063b2:	bf18      	it	ne
 80063b4:	460c      	movne	r4, r1
 80063b6:	e7e9      	b.n	800638c <_malloc_r+0x64>
 80063b8:	460c      	mov	r4, r1
 80063ba:	6849      	ldr	r1, [r1, #4]
 80063bc:	e7ca      	b.n	8006354 <_malloc_r+0x2c>
 80063be:	1cc4      	adds	r4, r0, #3
 80063c0:	f024 0403 	bic.w	r4, r4, #3
 80063c4:	42a0      	cmp	r0, r4
 80063c6:	d005      	beq.n	80063d4 <_malloc_r+0xac>
 80063c8:	1a21      	subs	r1, r4, r0
 80063ca:	4630      	mov	r0, r6
 80063cc:	f000 f9ce 	bl	800676c <_sbrk_r>
 80063d0:	3001      	adds	r0, #1
 80063d2:	d0cd      	beq.n	8006370 <_malloc_r+0x48>
 80063d4:	6025      	str	r5, [r4, #0]
 80063d6:	e7d9      	b.n	800638c <_malloc_r+0x64>
 80063d8:	bd70      	pop	{r4, r5, r6, pc}
 80063da:	bf00      	nop
 80063dc:	20001e70 	.word	0x20001e70
 80063e0:	20001e74 	.word	0x20001e74

080063e4 <_realloc_r>:
 80063e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063e6:	4607      	mov	r7, r0
 80063e8:	4614      	mov	r4, r2
 80063ea:	460e      	mov	r6, r1
 80063ec:	b921      	cbnz	r1, 80063f8 <_realloc_r+0x14>
 80063ee:	4611      	mov	r1, r2
 80063f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80063f4:	f7ff baa8 	b.w	8005948 <__wrap__malloc_r>
 80063f8:	b922      	cbnz	r2, 8006404 <_realloc_r+0x20>
 80063fa:	f7ff faa9 	bl	8005950 <__wrap__free_r>
 80063fe:	4625      	mov	r5, r4
 8006400:	4628      	mov	r0, r5
 8006402:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006404:	f000 fa64 	bl	80068d0 <_malloc_usable_size_r>
 8006408:	4284      	cmp	r4, r0
 800640a:	d90f      	bls.n	800642c <_realloc_r+0x48>
 800640c:	4621      	mov	r1, r4
 800640e:	4638      	mov	r0, r7
 8006410:	f7ff fa9a 	bl	8005948 <__wrap__malloc_r>
 8006414:	4605      	mov	r5, r0
 8006416:	2800      	cmp	r0, #0
 8006418:	d0f2      	beq.n	8006400 <_realloc_r+0x1c>
 800641a:	4631      	mov	r1, r6
 800641c:	4622      	mov	r2, r4
 800641e:	f7ff ff07 	bl	8006230 <memcpy>
 8006422:	4631      	mov	r1, r6
 8006424:	4638      	mov	r0, r7
 8006426:	f7ff fa93 	bl	8005950 <__wrap__free_r>
 800642a:	e7e9      	b.n	8006400 <_realloc_r+0x1c>
 800642c:	4635      	mov	r5, r6
 800642e:	e7e7      	b.n	8006400 <_realloc_r+0x1c>

08006430 <_printf_common>:
 8006430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006434:	4691      	mov	r9, r2
 8006436:	461f      	mov	r7, r3
 8006438:	688a      	ldr	r2, [r1, #8]
 800643a:	690b      	ldr	r3, [r1, #16]
 800643c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006440:	4293      	cmp	r3, r2
 8006442:	bfb8      	it	lt
 8006444:	4613      	movlt	r3, r2
 8006446:	f8c9 3000 	str.w	r3, [r9]
 800644a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800644e:	4606      	mov	r6, r0
 8006450:	460c      	mov	r4, r1
 8006452:	b112      	cbz	r2, 800645a <_printf_common+0x2a>
 8006454:	3301      	adds	r3, #1
 8006456:	f8c9 3000 	str.w	r3, [r9]
 800645a:	6823      	ldr	r3, [r4, #0]
 800645c:	0699      	lsls	r1, r3, #26
 800645e:	bf42      	ittt	mi
 8006460:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006464:	3302      	addmi	r3, #2
 8006466:	f8c9 3000 	strmi.w	r3, [r9]
 800646a:	6825      	ldr	r5, [r4, #0]
 800646c:	f015 0506 	ands.w	r5, r5, #6
 8006470:	d107      	bne.n	8006482 <_printf_common+0x52>
 8006472:	f104 0a19 	add.w	r10, r4, #25
 8006476:	68e3      	ldr	r3, [r4, #12]
 8006478:	f8d9 2000 	ldr.w	r2, [r9]
 800647c:	1a9b      	subs	r3, r3, r2
 800647e:	429d      	cmp	r5, r3
 8006480:	db29      	blt.n	80064d6 <_printf_common+0xa6>
 8006482:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006486:	6822      	ldr	r2, [r4, #0]
 8006488:	3300      	adds	r3, #0
 800648a:	bf18      	it	ne
 800648c:	2301      	movne	r3, #1
 800648e:	0692      	lsls	r2, r2, #26
 8006490:	d42e      	bmi.n	80064f0 <_printf_common+0xc0>
 8006492:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006496:	4639      	mov	r1, r7
 8006498:	4630      	mov	r0, r6
 800649a:	47c0      	blx	r8
 800649c:	3001      	adds	r0, #1
 800649e:	d021      	beq.n	80064e4 <_printf_common+0xb4>
 80064a0:	6823      	ldr	r3, [r4, #0]
 80064a2:	68e5      	ldr	r5, [r4, #12]
 80064a4:	f8d9 2000 	ldr.w	r2, [r9]
 80064a8:	f003 0306 	and.w	r3, r3, #6
 80064ac:	2b04      	cmp	r3, #4
 80064ae:	bf08      	it	eq
 80064b0:	1aad      	subeq	r5, r5, r2
 80064b2:	68a3      	ldr	r3, [r4, #8]
 80064b4:	6922      	ldr	r2, [r4, #16]
 80064b6:	bf0c      	ite	eq
 80064b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80064bc:	2500      	movne	r5, #0
 80064be:	4293      	cmp	r3, r2
 80064c0:	bfc4      	itt	gt
 80064c2:	1a9b      	subgt	r3, r3, r2
 80064c4:	18ed      	addgt	r5, r5, r3
 80064c6:	f04f 0900 	mov.w	r9, #0
 80064ca:	341a      	adds	r4, #26
 80064cc:	454d      	cmp	r5, r9
 80064ce:	d11b      	bne.n	8006508 <_printf_common+0xd8>
 80064d0:	2000      	movs	r0, #0
 80064d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80064d6:	2301      	movs	r3, #1
 80064d8:	4652      	mov	r2, r10
 80064da:	4639      	mov	r1, r7
 80064dc:	4630      	mov	r0, r6
 80064de:	47c0      	blx	r8
 80064e0:	3001      	adds	r0, #1
 80064e2:	d103      	bne.n	80064ec <_printf_common+0xbc>
 80064e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80064e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80064ec:	3501      	adds	r5, #1
 80064ee:	e7c2      	b.n	8006476 <_printf_common+0x46>
 80064f0:	18e1      	adds	r1, r4, r3
 80064f2:	1c5a      	adds	r2, r3, #1
 80064f4:	2030      	movs	r0, #48	; 0x30
 80064f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80064fa:	4422      	add	r2, r4
 80064fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006500:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006504:	3302      	adds	r3, #2
 8006506:	e7c4      	b.n	8006492 <_printf_common+0x62>
 8006508:	2301      	movs	r3, #1
 800650a:	4622      	mov	r2, r4
 800650c:	4639      	mov	r1, r7
 800650e:	4630      	mov	r0, r6
 8006510:	47c0      	blx	r8
 8006512:	3001      	adds	r0, #1
 8006514:	d0e6      	beq.n	80064e4 <_printf_common+0xb4>
 8006516:	f109 0901 	add.w	r9, r9, #1
 800651a:	e7d7      	b.n	80064cc <_printf_common+0x9c>

0800651c <_printf_i>:
 800651c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006520:	4617      	mov	r7, r2
 8006522:	7e0a      	ldrb	r2, [r1, #24]
 8006524:	b085      	sub	sp, #20
 8006526:	2a6e      	cmp	r2, #110	; 0x6e
 8006528:	4698      	mov	r8, r3
 800652a:	4606      	mov	r6, r0
 800652c:	460c      	mov	r4, r1
 800652e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006530:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8006534:	f000 80bc 	beq.w	80066b0 <_printf_i+0x194>
 8006538:	d81a      	bhi.n	8006570 <_printf_i+0x54>
 800653a:	2a63      	cmp	r2, #99	; 0x63
 800653c:	d02e      	beq.n	800659c <_printf_i+0x80>
 800653e:	d80a      	bhi.n	8006556 <_printf_i+0x3a>
 8006540:	2a00      	cmp	r2, #0
 8006542:	f000 80c8 	beq.w	80066d6 <_printf_i+0x1ba>
 8006546:	2a58      	cmp	r2, #88	; 0x58
 8006548:	f000 808a 	beq.w	8006660 <_printf_i+0x144>
 800654c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006550:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8006554:	e02a      	b.n	80065ac <_printf_i+0x90>
 8006556:	2a64      	cmp	r2, #100	; 0x64
 8006558:	d001      	beq.n	800655e <_printf_i+0x42>
 800655a:	2a69      	cmp	r2, #105	; 0x69
 800655c:	d1f6      	bne.n	800654c <_printf_i+0x30>
 800655e:	6821      	ldr	r1, [r4, #0]
 8006560:	681a      	ldr	r2, [r3, #0]
 8006562:	f011 0f80 	tst.w	r1, #128	; 0x80
 8006566:	d023      	beq.n	80065b0 <_printf_i+0x94>
 8006568:	1d11      	adds	r1, r2, #4
 800656a:	6019      	str	r1, [r3, #0]
 800656c:	6813      	ldr	r3, [r2, #0]
 800656e:	e027      	b.n	80065c0 <_printf_i+0xa4>
 8006570:	2a73      	cmp	r2, #115	; 0x73
 8006572:	f000 80b4 	beq.w	80066de <_printf_i+0x1c2>
 8006576:	d808      	bhi.n	800658a <_printf_i+0x6e>
 8006578:	2a6f      	cmp	r2, #111	; 0x6f
 800657a:	d02a      	beq.n	80065d2 <_printf_i+0xb6>
 800657c:	2a70      	cmp	r2, #112	; 0x70
 800657e:	d1e5      	bne.n	800654c <_printf_i+0x30>
 8006580:	680a      	ldr	r2, [r1, #0]
 8006582:	f042 0220 	orr.w	r2, r2, #32
 8006586:	600a      	str	r2, [r1, #0]
 8006588:	e003      	b.n	8006592 <_printf_i+0x76>
 800658a:	2a75      	cmp	r2, #117	; 0x75
 800658c:	d021      	beq.n	80065d2 <_printf_i+0xb6>
 800658e:	2a78      	cmp	r2, #120	; 0x78
 8006590:	d1dc      	bne.n	800654c <_printf_i+0x30>
 8006592:	2278      	movs	r2, #120	; 0x78
 8006594:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006598:	496e      	ldr	r1, [pc, #440]	; (8006754 <_printf_i+0x238>)
 800659a:	e064      	b.n	8006666 <_printf_i+0x14a>
 800659c:	681a      	ldr	r2, [r3, #0]
 800659e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80065a2:	1d11      	adds	r1, r2, #4
 80065a4:	6019      	str	r1, [r3, #0]
 80065a6:	6813      	ldr	r3, [r2, #0]
 80065a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80065ac:	2301      	movs	r3, #1
 80065ae:	e0a3      	b.n	80066f8 <_printf_i+0x1dc>
 80065b0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80065b4:	f102 0104 	add.w	r1, r2, #4
 80065b8:	6019      	str	r1, [r3, #0]
 80065ba:	d0d7      	beq.n	800656c <_printf_i+0x50>
 80065bc:	f9b2 3000 	ldrsh.w	r3, [r2]
 80065c0:	2b00      	cmp	r3, #0
 80065c2:	da03      	bge.n	80065cc <_printf_i+0xb0>
 80065c4:	222d      	movs	r2, #45	; 0x2d
 80065c6:	425b      	negs	r3, r3
 80065c8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80065cc:	4962      	ldr	r1, [pc, #392]	; (8006758 <_printf_i+0x23c>)
 80065ce:	220a      	movs	r2, #10
 80065d0:	e017      	b.n	8006602 <_printf_i+0xe6>
 80065d2:	6820      	ldr	r0, [r4, #0]
 80065d4:	6819      	ldr	r1, [r3, #0]
 80065d6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80065da:	d003      	beq.n	80065e4 <_printf_i+0xc8>
 80065dc:	1d08      	adds	r0, r1, #4
 80065de:	6018      	str	r0, [r3, #0]
 80065e0:	680b      	ldr	r3, [r1, #0]
 80065e2:	e006      	b.n	80065f2 <_printf_i+0xd6>
 80065e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80065e8:	f101 0004 	add.w	r0, r1, #4
 80065ec:	6018      	str	r0, [r3, #0]
 80065ee:	d0f7      	beq.n	80065e0 <_printf_i+0xc4>
 80065f0:	880b      	ldrh	r3, [r1, #0]
 80065f2:	4959      	ldr	r1, [pc, #356]	; (8006758 <_printf_i+0x23c>)
 80065f4:	2a6f      	cmp	r2, #111	; 0x6f
 80065f6:	bf14      	ite	ne
 80065f8:	220a      	movne	r2, #10
 80065fa:	2208      	moveq	r2, #8
 80065fc:	2000      	movs	r0, #0
 80065fe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006602:	6865      	ldr	r5, [r4, #4]
 8006604:	60a5      	str	r5, [r4, #8]
 8006606:	2d00      	cmp	r5, #0
 8006608:	f2c0 809c 	blt.w	8006744 <_printf_i+0x228>
 800660c:	6820      	ldr	r0, [r4, #0]
 800660e:	f020 0004 	bic.w	r0, r0, #4
 8006612:	6020      	str	r0, [r4, #0]
 8006614:	2b00      	cmp	r3, #0
 8006616:	d13f      	bne.n	8006698 <_printf_i+0x17c>
 8006618:	2d00      	cmp	r5, #0
 800661a:	f040 8095 	bne.w	8006748 <_printf_i+0x22c>
 800661e:	4675      	mov	r5, lr
 8006620:	2a08      	cmp	r2, #8
 8006622:	d10b      	bne.n	800663c <_printf_i+0x120>
 8006624:	6823      	ldr	r3, [r4, #0]
 8006626:	07da      	lsls	r2, r3, #31
 8006628:	d508      	bpl.n	800663c <_printf_i+0x120>
 800662a:	6923      	ldr	r3, [r4, #16]
 800662c:	6862      	ldr	r2, [r4, #4]
 800662e:	429a      	cmp	r2, r3
 8006630:	bfde      	ittt	le
 8006632:	2330      	movle	r3, #48	; 0x30
 8006634:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006638:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800663c:	ebae 0305 	sub.w	r3, lr, r5
 8006640:	6123      	str	r3, [r4, #16]
 8006642:	f8cd 8000 	str.w	r8, [sp]
 8006646:	463b      	mov	r3, r7
 8006648:	aa03      	add	r2, sp, #12
 800664a:	4621      	mov	r1, r4
 800664c:	4630      	mov	r0, r6
 800664e:	f7ff feef 	bl	8006430 <_printf_common>
 8006652:	3001      	adds	r0, #1
 8006654:	d155      	bne.n	8006702 <_printf_i+0x1e6>
 8006656:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800665a:	b005      	add	sp, #20
 800665c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006660:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8006664:	493c      	ldr	r1, [pc, #240]	; (8006758 <_printf_i+0x23c>)
 8006666:	6822      	ldr	r2, [r4, #0]
 8006668:	6818      	ldr	r0, [r3, #0]
 800666a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800666e:	f100 0504 	add.w	r5, r0, #4
 8006672:	601d      	str	r5, [r3, #0]
 8006674:	d001      	beq.n	800667a <_printf_i+0x15e>
 8006676:	6803      	ldr	r3, [r0, #0]
 8006678:	e002      	b.n	8006680 <_printf_i+0x164>
 800667a:	0655      	lsls	r5, r2, #25
 800667c:	d5fb      	bpl.n	8006676 <_printf_i+0x15a>
 800667e:	8803      	ldrh	r3, [r0, #0]
 8006680:	07d0      	lsls	r0, r2, #31
 8006682:	bf44      	itt	mi
 8006684:	f042 0220 	orrmi.w	r2, r2, #32
 8006688:	6022      	strmi	r2, [r4, #0]
 800668a:	b91b      	cbnz	r3, 8006694 <_printf_i+0x178>
 800668c:	6822      	ldr	r2, [r4, #0]
 800668e:	f022 0220 	bic.w	r2, r2, #32
 8006692:	6022      	str	r2, [r4, #0]
 8006694:	2210      	movs	r2, #16
 8006696:	e7b1      	b.n	80065fc <_printf_i+0xe0>
 8006698:	4675      	mov	r5, lr
 800669a:	fbb3 f0f2 	udiv	r0, r3, r2
 800669e:	fb02 3310 	mls	r3, r2, r0, r3
 80066a2:	5ccb      	ldrb	r3, [r1, r3]
 80066a4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80066a8:	4603      	mov	r3, r0
 80066aa:	2800      	cmp	r0, #0
 80066ac:	d1f5      	bne.n	800669a <_printf_i+0x17e>
 80066ae:	e7b7      	b.n	8006620 <_printf_i+0x104>
 80066b0:	6808      	ldr	r0, [r1, #0]
 80066b2:	681a      	ldr	r2, [r3, #0]
 80066b4:	6949      	ldr	r1, [r1, #20]
 80066b6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80066ba:	d004      	beq.n	80066c6 <_printf_i+0x1aa>
 80066bc:	1d10      	adds	r0, r2, #4
 80066be:	6018      	str	r0, [r3, #0]
 80066c0:	6813      	ldr	r3, [r2, #0]
 80066c2:	6019      	str	r1, [r3, #0]
 80066c4:	e007      	b.n	80066d6 <_printf_i+0x1ba>
 80066c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80066ca:	f102 0004 	add.w	r0, r2, #4
 80066ce:	6018      	str	r0, [r3, #0]
 80066d0:	6813      	ldr	r3, [r2, #0]
 80066d2:	d0f6      	beq.n	80066c2 <_printf_i+0x1a6>
 80066d4:	8019      	strh	r1, [r3, #0]
 80066d6:	2300      	movs	r3, #0
 80066d8:	6123      	str	r3, [r4, #16]
 80066da:	4675      	mov	r5, lr
 80066dc:	e7b1      	b.n	8006642 <_printf_i+0x126>
 80066de:	681a      	ldr	r2, [r3, #0]
 80066e0:	1d11      	adds	r1, r2, #4
 80066e2:	6019      	str	r1, [r3, #0]
 80066e4:	6815      	ldr	r5, [r2, #0]
 80066e6:	6862      	ldr	r2, [r4, #4]
 80066e8:	2100      	movs	r1, #0
 80066ea:	4628      	mov	r0, r5
 80066ec:	f7ff fd50 	bl	8006190 <memchr>
 80066f0:	b108      	cbz	r0, 80066f6 <_printf_i+0x1da>
 80066f2:	1b40      	subs	r0, r0, r5
 80066f4:	6060      	str	r0, [r4, #4]
 80066f6:	6863      	ldr	r3, [r4, #4]
 80066f8:	6123      	str	r3, [r4, #16]
 80066fa:	2300      	movs	r3, #0
 80066fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006700:	e79f      	b.n	8006642 <_printf_i+0x126>
 8006702:	6923      	ldr	r3, [r4, #16]
 8006704:	462a      	mov	r2, r5
 8006706:	4639      	mov	r1, r7
 8006708:	4630      	mov	r0, r6
 800670a:	47c0      	blx	r8
 800670c:	3001      	adds	r0, #1
 800670e:	d0a2      	beq.n	8006656 <_printf_i+0x13a>
 8006710:	6823      	ldr	r3, [r4, #0]
 8006712:	079b      	lsls	r3, r3, #30
 8006714:	d507      	bpl.n	8006726 <_printf_i+0x20a>
 8006716:	2500      	movs	r5, #0
 8006718:	f104 0919 	add.w	r9, r4, #25
 800671c:	68e3      	ldr	r3, [r4, #12]
 800671e:	9a03      	ldr	r2, [sp, #12]
 8006720:	1a9b      	subs	r3, r3, r2
 8006722:	429d      	cmp	r5, r3
 8006724:	db05      	blt.n	8006732 <_printf_i+0x216>
 8006726:	68e0      	ldr	r0, [r4, #12]
 8006728:	9b03      	ldr	r3, [sp, #12]
 800672a:	4298      	cmp	r0, r3
 800672c:	bfb8      	it	lt
 800672e:	4618      	movlt	r0, r3
 8006730:	e793      	b.n	800665a <_printf_i+0x13e>
 8006732:	2301      	movs	r3, #1
 8006734:	464a      	mov	r2, r9
 8006736:	4639      	mov	r1, r7
 8006738:	4630      	mov	r0, r6
 800673a:	47c0      	blx	r8
 800673c:	3001      	adds	r0, #1
 800673e:	d08a      	beq.n	8006656 <_printf_i+0x13a>
 8006740:	3501      	adds	r5, #1
 8006742:	e7eb      	b.n	800671c <_printf_i+0x200>
 8006744:	2b00      	cmp	r3, #0
 8006746:	d1a7      	bne.n	8006698 <_printf_i+0x17c>
 8006748:	780b      	ldrb	r3, [r1, #0]
 800674a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800674e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006752:	e765      	b.n	8006620 <_printf_i+0x104>
 8006754:	080073c5 	.word	0x080073c5
 8006758:	080073b4 	.word	0x080073b4

0800675c <realloc>:
 800675c:	4b02      	ldr	r3, [pc, #8]	; (8006768 <realloc+0xc>)
 800675e:	460a      	mov	r2, r1
 8006760:	4601      	mov	r1, r0
 8006762:	6818      	ldr	r0, [r3, #0]
 8006764:	f7ff b8f2 	b.w	800594c <__wrap__realloc_r>
 8006768:	200001e8 	.word	0x200001e8

0800676c <_sbrk_r>:
 800676c:	b538      	push	{r3, r4, r5, lr}
 800676e:	4c06      	ldr	r4, [pc, #24]	; (8006788 <_sbrk_r+0x1c>)
 8006770:	2300      	movs	r3, #0
 8006772:	4605      	mov	r5, r0
 8006774:	4608      	mov	r0, r1
 8006776:	6023      	str	r3, [r4, #0]
 8006778:	f7ff f9d2 	bl	8005b20 <_sbrk>
 800677c:	1c43      	adds	r3, r0, #1
 800677e:	d102      	bne.n	8006786 <_sbrk_r+0x1a>
 8006780:	6823      	ldr	r3, [r4, #0]
 8006782:	b103      	cbz	r3, 8006786 <_sbrk_r+0x1a>
 8006784:	602b      	str	r3, [r5, #0]
 8006786:	bd38      	pop	{r3, r4, r5, pc}
 8006788:	20002964 	.word	0x20002964

0800678c <__sread>:
 800678c:	b510      	push	{r4, lr}
 800678e:	460c      	mov	r4, r1
 8006790:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006794:	f000 f9f4 	bl	8006b80 <_read_r>
 8006798:	2800      	cmp	r0, #0
 800679a:	bfab      	itete	ge
 800679c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800679e:	89a3      	ldrhlt	r3, [r4, #12]
 80067a0:	181b      	addge	r3, r3, r0
 80067a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80067a6:	bfac      	ite	ge
 80067a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80067aa:	81a3      	strhlt	r3, [r4, #12]
 80067ac:	bd10      	pop	{r4, pc}

080067ae <__swrite>:
 80067ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067b2:	461f      	mov	r7, r3
 80067b4:	898b      	ldrh	r3, [r1, #12]
 80067b6:	05db      	lsls	r3, r3, #23
 80067b8:	4605      	mov	r5, r0
 80067ba:	460c      	mov	r4, r1
 80067bc:	4616      	mov	r6, r2
 80067be:	d505      	bpl.n	80067cc <__swrite+0x1e>
 80067c0:	2302      	movs	r3, #2
 80067c2:	2200      	movs	r2, #0
 80067c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067c8:	f000 f870 	bl	80068ac <_lseek_r>
 80067cc:	89a3      	ldrh	r3, [r4, #12]
 80067ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80067d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80067d6:	81a3      	strh	r3, [r4, #12]
 80067d8:	4632      	mov	r2, r6
 80067da:	463b      	mov	r3, r7
 80067dc:	4628      	mov	r0, r5
 80067de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80067e2:	f000 b841 	b.w	8006868 <_write_r>

080067e6 <__sseek>:
 80067e6:	b510      	push	{r4, lr}
 80067e8:	460c      	mov	r4, r1
 80067ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067ee:	f000 f85d 	bl	80068ac <_lseek_r>
 80067f2:	1c43      	adds	r3, r0, #1
 80067f4:	89a3      	ldrh	r3, [r4, #12]
 80067f6:	bf15      	itete	ne
 80067f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80067fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80067fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006802:	81a3      	strheq	r3, [r4, #12]
 8006804:	bf18      	it	ne
 8006806:	81a3      	strhne	r3, [r4, #12]
 8006808:	bd10      	pop	{r4, pc}

0800680a <__sclose>:
 800680a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800680e:	f000 b83d 	b.w	800688c <_close_r>

08006812 <strlen>:
 8006812:	4603      	mov	r3, r0
 8006814:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006818:	2a00      	cmp	r2, #0
 800681a:	d1fb      	bne.n	8006814 <strlen+0x2>
 800681c:	1a18      	subs	r0, r3, r0
 800681e:	3801      	subs	r0, #1
 8006820:	4770      	bx	lr

08006822 <_vsiprintf_r>:
 8006822:	b510      	push	{r4, lr}
 8006824:	b09a      	sub	sp, #104	; 0x68
 8006826:	f44f 7402 	mov.w	r4, #520	; 0x208
 800682a:	9100      	str	r1, [sp, #0]
 800682c:	9104      	str	r1, [sp, #16]
 800682e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006832:	9102      	str	r1, [sp, #8]
 8006834:	9105      	str	r1, [sp, #20]
 8006836:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800683a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800683e:	4669      	mov	r1, sp
 8006840:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006844:	f000 f8a8 	bl	8006998 <_svfiprintf_r>
 8006848:	9b00      	ldr	r3, [sp, #0]
 800684a:	2200      	movs	r2, #0
 800684c:	701a      	strb	r2, [r3, #0]
 800684e:	b01a      	add	sp, #104	; 0x68
 8006850:	bd10      	pop	{r4, pc}
	...

08006854 <vsiprintf>:
 8006854:	4613      	mov	r3, r2
 8006856:	460a      	mov	r2, r1
 8006858:	4601      	mov	r1, r0
 800685a:	4802      	ldr	r0, [pc, #8]	; (8006864 <vsiprintf+0x10>)
 800685c:	6800      	ldr	r0, [r0, #0]
 800685e:	f7ff bfe0 	b.w	8006822 <_vsiprintf_r>
 8006862:	bf00      	nop
 8006864:	200001e8 	.word	0x200001e8

08006868 <_write_r>:
 8006868:	b538      	push	{r3, r4, r5, lr}
 800686a:	4c07      	ldr	r4, [pc, #28]	; (8006888 <_write_r+0x20>)
 800686c:	4605      	mov	r5, r0
 800686e:	4608      	mov	r0, r1
 8006870:	4611      	mov	r1, r2
 8006872:	2200      	movs	r2, #0
 8006874:	6022      	str	r2, [r4, #0]
 8006876:	461a      	mov	r2, r3
 8006878:	f7ff f8c0 	bl	80059fc <_write>
 800687c:	1c43      	adds	r3, r0, #1
 800687e:	d102      	bne.n	8006886 <_write_r+0x1e>
 8006880:	6823      	ldr	r3, [r4, #0]
 8006882:	b103      	cbz	r3, 8006886 <_write_r+0x1e>
 8006884:	602b      	str	r3, [r5, #0]
 8006886:	bd38      	pop	{r3, r4, r5, pc}
 8006888:	20002964 	.word	0x20002964

0800688c <_close_r>:
 800688c:	b538      	push	{r3, r4, r5, lr}
 800688e:	4c06      	ldr	r4, [pc, #24]	; (80068a8 <_close_r+0x1c>)
 8006890:	2300      	movs	r3, #0
 8006892:	4605      	mov	r5, r0
 8006894:	4608      	mov	r0, r1
 8006896:	6023      	str	r3, [r4, #0]
 8006898:	f7ff f890 	bl	80059bc <_close>
 800689c:	1c43      	adds	r3, r0, #1
 800689e:	d102      	bne.n	80068a6 <_close_r+0x1a>
 80068a0:	6823      	ldr	r3, [r4, #0]
 80068a2:	b103      	cbz	r3, 80068a6 <_close_r+0x1a>
 80068a4:	602b      	str	r3, [r5, #0]
 80068a6:	bd38      	pop	{r3, r4, r5, pc}
 80068a8:	20002964 	.word	0x20002964

080068ac <_lseek_r>:
 80068ac:	b538      	push	{r3, r4, r5, lr}
 80068ae:	4c07      	ldr	r4, [pc, #28]	; (80068cc <_lseek_r+0x20>)
 80068b0:	4605      	mov	r5, r0
 80068b2:	4608      	mov	r0, r1
 80068b4:	4611      	mov	r1, r2
 80068b6:	2200      	movs	r2, #0
 80068b8:	6022      	str	r2, [r4, #0]
 80068ba:	461a      	mov	r2, r3
 80068bc:	f7ff f904 	bl	8005ac8 <_lseek>
 80068c0:	1c43      	adds	r3, r0, #1
 80068c2:	d102      	bne.n	80068ca <_lseek_r+0x1e>
 80068c4:	6823      	ldr	r3, [r4, #0]
 80068c6:	b103      	cbz	r3, 80068ca <_lseek_r+0x1e>
 80068c8:	602b      	str	r3, [r5, #0]
 80068ca:	bd38      	pop	{r3, r4, r5, pc}
 80068cc:	20002964 	.word	0x20002964

080068d0 <_malloc_usable_size_r>:
 80068d0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80068d4:	2800      	cmp	r0, #0
 80068d6:	f1a0 0004 	sub.w	r0, r0, #4
 80068da:	bfbc      	itt	lt
 80068dc:	580b      	ldrlt	r3, [r1, r0]
 80068de:	18c0      	addlt	r0, r0, r3
 80068e0:	4770      	bx	lr

080068e2 <__ssputs_r>:
 80068e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80068e6:	688e      	ldr	r6, [r1, #8]
 80068e8:	429e      	cmp	r6, r3
 80068ea:	4682      	mov	r10, r0
 80068ec:	460c      	mov	r4, r1
 80068ee:	4691      	mov	r9, r2
 80068f0:	4698      	mov	r8, r3
 80068f2:	d835      	bhi.n	8006960 <__ssputs_r+0x7e>
 80068f4:	898a      	ldrh	r2, [r1, #12]
 80068f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80068fa:	d031      	beq.n	8006960 <__ssputs_r+0x7e>
 80068fc:	6825      	ldr	r5, [r4, #0]
 80068fe:	6909      	ldr	r1, [r1, #16]
 8006900:	1a6f      	subs	r7, r5, r1
 8006902:	6965      	ldr	r5, [r4, #20]
 8006904:	2302      	movs	r3, #2
 8006906:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800690a:	fb95 f5f3 	sdiv	r5, r5, r3
 800690e:	f108 0301 	add.w	r3, r8, #1
 8006912:	443b      	add	r3, r7
 8006914:	429d      	cmp	r5, r3
 8006916:	bf38      	it	cc
 8006918:	461d      	movcc	r5, r3
 800691a:	0553      	lsls	r3, r2, #21
 800691c:	d531      	bpl.n	8006982 <__ssputs_r+0xa0>
 800691e:	4629      	mov	r1, r5
 8006920:	f7ff f812 	bl	8005948 <__wrap__malloc_r>
 8006924:	4606      	mov	r6, r0
 8006926:	b950      	cbnz	r0, 800693e <__ssputs_r+0x5c>
 8006928:	230c      	movs	r3, #12
 800692a:	f8ca 3000 	str.w	r3, [r10]
 800692e:	89a3      	ldrh	r3, [r4, #12]
 8006930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006934:	81a3      	strh	r3, [r4, #12]
 8006936:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800693a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800693e:	463a      	mov	r2, r7
 8006940:	6921      	ldr	r1, [r4, #16]
 8006942:	f7ff fc75 	bl	8006230 <memcpy>
 8006946:	89a3      	ldrh	r3, [r4, #12]
 8006948:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800694c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006950:	81a3      	strh	r3, [r4, #12]
 8006952:	6126      	str	r6, [r4, #16]
 8006954:	6165      	str	r5, [r4, #20]
 8006956:	443e      	add	r6, r7
 8006958:	1bed      	subs	r5, r5, r7
 800695a:	6026      	str	r6, [r4, #0]
 800695c:	60a5      	str	r5, [r4, #8]
 800695e:	4646      	mov	r6, r8
 8006960:	4546      	cmp	r6, r8
 8006962:	bf28      	it	cs
 8006964:	4646      	movcs	r6, r8
 8006966:	4632      	mov	r2, r6
 8006968:	4649      	mov	r1, r9
 800696a:	6820      	ldr	r0, [r4, #0]
 800696c:	f7ff fc6b 	bl	8006246 <memmove>
 8006970:	68a3      	ldr	r3, [r4, #8]
 8006972:	1b9b      	subs	r3, r3, r6
 8006974:	60a3      	str	r3, [r4, #8]
 8006976:	6823      	ldr	r3, [r4, #0]
 8006978:	441e      	add	r6, r3
 800697a:	6026      	str	r6, [r4, #0]
 800697c:	2000      	movs	r0, #0
 800697e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006982:	462a      	mov	r2, r5
 8006984:	f7fe ffe2 	bl	800594c <__wrap__realloc_r>
 8006988:	4606      	mov	r6, r0
 800698a:	2800      	cmp	r0, #0
 800698c:	d1e1      	bne.n	8006952 <__ssputs_r+0x70>
 800698e:	6921      	ldr	r1, [r4, #16]
 8006990:	4650      	mov	r0, r10
 8006992:	f7fe ffdd 	bl	8005950 <__wrap__free_r>
 8006996:	e7c7      	b.n	8006928 <__ssputs_r+0x46>

08006998 <_svfiprintf_r>:
 8006998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800699c:	b09d      	sub	sp, #116	; 0x74
 800699e:	4680      	mov	r8, r0
 80069a0:	9303      	str	r3, [sp, #12]
 80069a2:	898b      	ldrh	r3, [r1, #12]
 80069a4:	061c      	lsls	r4, r3, #24
 80069a6:	460d      	mov	r5, r1
 80069a8:	4616      	mov	r6, r2
 80069aa:	d50f      	bpl.n	80069cc <_svfiprintf_r+0x34>
 80069ac:	690b      	ldr	r3, [r1, #16]
 80069ae:	b96b      	cbnz	r3, 80069cc <_svfiprintf_r+0x34>
 80069b0:	2140      	movs	r1, #64	; 0x40
 80069b2:	f7fe ffc9 	bl	8005948 <__wrap__malloc_r>
 80069b6:	6028      	str	r0, [r5, #0]
 80069b8:	6128      	str	r0, [r5, #16]
 80069ba:	b928      	cbnz	r0, 80069c8 <_svfiprintf_r+0x30>
 80069bc:	230c      	movs	r3, #12
 80069be:	f8c8 3000 	str.w	r3, [r8]
 80069c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80069c6:	e0c5      	b.n	8006b54 <_svfiprintf_r+0x1bc>
 80069c8:	2340      	movs	r3, #64	; 0x40
 80069ca:	616b      	str	r3, [r5, #20]
 80069cc:	2300      	movs	r3, #0
 80069ce:	9309      	str	r3, [sp, #36]	; 0x24
 80069d0:	2320      	movs	r3, #32
 80069d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80069d6:	2330      	movs	r3, #48	; 0x30
 80069d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80069dc:	f04f 0b01 	mov.w	r11, #1
 80069e0:	4637      	mov	r7, r6
 80069e2:	463c      	mov	r4, r7
 80069e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d13c      	bne.n	8006a66 <_svfiprintf_r+0xce>
 80069ec:	ebb7 0a06 	subs.w	r10, r7, r6
 80069f0:	d00b      	beq.n	8006a0a <_svfiprintf_r+0x72>
 80069f2:	4653      	mov	r3, r10
 80069f4:	4632      	mov	r2, r6
 80069f6:	4629      	mov	r1, r5
 80069f8:	4640      	mov	r0, r8
 80069fa:	f7ff ff72 	bl	80068e2 <__ssputs_r>
 80069fe:	3001      	adds	r0, #1
 8006a00:	f000 80a3 	beq.w	8006b4a <_svfiprintf_r+0x1b2>
 8006a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006a06:	4453      	add	r3, r10
 8006a08:	9309      	str	r3, [sp, #36]	; 0x24
 8006a0a:	783b      	ldrb	r3, [r7, #0]
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	f000 809c 	beq.w	8006b4a <_svfiprintf_r+0x1b2>
 8006a12:	2300      	movs	r3, #0
 8006a14:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006a18:	9304      	str	r3, [sp, #16]
 8006a1a:	9307      	str	r3, [sp, #28]
 8006a1c:	9205      	str	r2, [sp, #20]
 8006a1e:	9306      	str	r3, [sp, #24]
 8006a20:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006a24:	931a      	str	r3, [sp, #104]	; 0x68
 8006a26:	2205      	movs	r2, #5
 8006a28:	7821      	ldrb	r1, [r4, #0]
 8006a2a:	4850      	ldr	r0, [pc, #320]	; (8006b6c <_svfiprintf_r+0x1d4>)
 8006a2c:	f7ff fbb0 	bl	8006190 <memchr>
 8006a30:	1c67      	adds	r7, r4, #1
 8006a32:	9b04      	ldr	r3, [sp, #16]
 8006a34:	b9d8      	cbnz	r0, 8006a6e <_svfiprintf_r+0xd6>
 8006a36:	06d9      	lsls	r1, r3, #27
 8006a38:	bf44      	itt	mi
 8006a3a:	2220      	movmi	r2, #32
 8006a3c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a40:	071a      	lsls	r2, r3, #28
 8006a42:	bf44      	itt	mi
 8006a44:	222b      	movmi	r2, #43	; 0x2b
 8006a46:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a4a:	7822      	ldrb	r2, [r4, #0]
 8006a4c:	2a2a      	cmp	r2, #42	; 0x2a
 8006a4e:	d016      	beq.n	8006a7e <_svfiprintf_r+0xe6>
 8006a50:	9a07      	ldr	r2, [sp, #28]
 8006a52:	2100      	movs	r1, #0
 8006a54:	200a      	movs	r0, #10
 8006a56:	4627      	mov	r7, r4
 8006a58:	3401      	adds	r4, #1
 8006a5a:	783b      	ldrb	r3, [r7, #0]
 8006a5c:	3b30      	subs	r3, #48	; 0x30
 8006a5e:	2b09      	cmp	r3, #9
 8006a60:	d951      	bls.n	8006b06 <_svfiprintf_r+0x16e>
 8006a62:	b1c9      	cbz	r1, 8006a98 <_svfiprintf_r+0x100>
 8006a64:	e011      	b.n	8006a8a <_svfiprintf_r+0xf2>
 8006a66:	2b25      	cmp	r3, #37	; 0x25
 8006a68:	d0c0      	beq.n	80069ec <_svfiprintf_r+0x54>
 8006a6a:	4627      	mov	r7, r4
 8006a6c:	e7b9      	b.n	80069e2 <_svfiprintf_r+0x4a>
 8006a6e:	4a3f      	ldr	r2, [pc, #252]	; (8006b6c <_svfiprintf_r+0x1d4>)
 8006a70:	1a80      	subs	r0, r0, r2
 8006a72:	fa0b f000 	lsl.w	r0, r11, r0
 8006a76:	4318      	orrs	r0, r3
 8006a78:	9004      	str	r0, [sp, #16]
 8006a7a:	463c      	mov	r4, r7
 8006a7c:	e7d3      	b.n	8006a26 <_svfiprintf_r+0x8e>
 8006a7e:	9a03      	ldr	r2, [sp, #12]
 8006a80:	1d11      	adds	r1, r2, #4
 8006a82:	6812      	ldr	r2, [r2, #0]
 8006a84:	9103      	str	r1, [sp, #12]
 8006a86:	2a00      	cmp	r2, #0
 8006a88:	db01      	blt.n	8006a8e <_svfiprintf_r+0xf6>
 8006a8a:	9207      	str	r2, [sp, #28]
 8006a8c:	e004      	b.n	8006a98 <_svfiprintf_r+0x100>
 8006a8e:	4252      	negs	r2, r2
 8006a90:	f043 0302 	orr.w	r3, r3, #2
 8006a94:	9207      	str	r2, [sp, #28]
 8006a96:	9304      	str	r3, [sp, #16]
 8006a98:	783b      	ldrb	r3, [r7, #0]
 8006a9a:	2b2e      	cmp	r3, #46	; 0x2e
 8006a9c:	d10e      	bne.n	8006abc <_svfiprintf_r+0x124>
 8006a9e:	787b      	ldrb	r3, [r7, #1]
 8006aa0:	2b2a      	cmp	r3, #42	; 0x2a
 8006aa2:	f107 0101 	add.w	r1, r7, #1
 8006aa6:	d132      	bne.n	8006b0e <_svfiprintf_r+0x176>
 8006aa8:	9b03      	ldr	r3, [sp, #12]
 8006aaa:	1d1a      	adds	r2, r3, #4
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	9203      	str	r2, [sp, #12]
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	bfb8      	it	lt
 8006ab4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006ab8:	3702      	adds	r7, #2
 8006aba:	9305      	str	r3, [sp, #20]
 8006abc:	4c2c      	ldr	r4, [pc, #176]	; (8006b70 <_svfiprintf_r+0x1d8>)
 8006abe:	7839      	ldrb	r1, [r7, #0]
 8006ac0:	2203      	movs	r2, #3
 8006ac2:	4620      	mov	r0, r4
 8006ac4:	f7ff fb64 	bl	8006190 <memchr>
 8006ac8:	b138      	cbz	r0, 8006ada <_svfiprintf_r+0x142>
 8006aca:	2340      	movs	r3, #64	; 0x40
 8006acc:	1b00      	subs	r0, r0, r4
 8006ace:	fa03 f000 	lsl.w	r0, r3, r0
 8006ad2:	9b04      	ldr	r3, [sp, #16]
 8006ad4:	4303      	orrs	r3, r0
 8006ad6:	9304      	str	r3, [sp, #16]
 8006ad8:	3701      	adds	r7, #1
 8006ada:	7839      	ldrb	r1, [r7, #0]
 8006adc:	4825      	ldr	r0, [pc, #148]	; (8006b74 <_svfiprintf_r+0x1dc>)
 8006ade:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006ae2:	2206      	movs	r2, #6
 8006ae4:	1c7e      	adds	r6, r7, #1
 8006ae6:	f7ff fb53 	bl	8006190 <memchr>
 8006aea:	2800      	cmp	r0, #0
 8006aec:	d035      	beq.n	8006b5a <_svfiprintf_r+0x1c2>
 8006aee:	4b22      	ldr	r3, [pc, #136]	; (8006b78 <_svfiprintf_r+0x1e0>)
 8006af0:	b9fb      	cbnz	r3, 8006b32 <_svfiprintf_r+0x19a>
 8006af2:	9b03      	ldr	r3, [sp, #12]
 8006af4:	3307      	adds	r3, #7
 8006af6:	f023 0307 	bic.w	r3, r3, #7
 8006afa:	3308      	adds	r3, #8
 8006afc:	9303      	str	r3, [sp, #12]
 8006afe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b00:	444b      	add	r3, r9
 8006b02:	9309      	str	r3, [sp, #36]	; 0x24
 8006b04:	e76c      	b.n	80069e0 <_svfiprintf_r+0x48>
 8006b06:	fb00 3202 	mla	r2, r0, r2, r3
 8006b0a:	2101      	movs	r1, #1
 8006b0c:	e7a3      	b.n	8006a56 <_svfiprintf_r+0xbe>
 8006b0e:	2300      	movs	r3, #0
 8006b10:	9305      	str	r3, [sp, #20]
 8006b12:	4618      	mov	r0, r3
 8006b14:	240a      	movs	r4, #10
 8006b16:	460f      	mov	r7, r1
 8006b18:	3101      	adds	r1, #1
 8006b1a:	783a      	ldrb	r2, [r7, #0]
 8006b1c:	3a30      	subs	r2, #48	; 0x30
 8006b1e:	2a09      	cmp	r2, #9
 8006b20:	d903      	bls.n	8006b2a <_svfiprintf_r+0x192>
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d0ca      	beq.n	8006abc <_svfiprintf_r+0x124>
 8006b26:	9005      	str	r0, [sp, #20]
 8006b28:	e7c8      	b.n	8006abc <_svfiprintf_r+0x124>
 8006b2a:	fb04 2000 	mla	r0, r4, r0, r2
 8006b2e:	2301      	movs	r3, #1
 8006b30:	e7f1      	b.n	8006b16 <_svfiprintf_r+0x17e>
 8006b32:	ab03      	add	r3, sp, #12
 8006b34:	9300      	str	r3, [sp, #0]
 8006b36:	462a      	mov	r2, r5
 8006b38:	4b10      	ldr	r3, [pc, #64]	; (8006b7c <_svfiprintf_r+0x1e4>)
 8006b3a:	a904      	add	r1, sp, #16
 8006b3c:	4640      	mov	r0, r8
 8006b3e:	f3af 8000 	nop.w
 8006b42:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8006b46:	4681      	mov	r9, r0
 8006b48:	d1d9      	bne.n	8006afe <_svfiprintf_r+0x166>
 8006b4a:	89ab      	ldrh	r3, [r5, #12]
 8006b4c:	065b      	lsls	r3, r3, #25
 8006b4e:	f53f af38 	bmi.w	80069c2 <_svfiprintf_r+0x2a>
 8006b52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b54:	b01d      	add	sp, #116	; 0x74
 8006b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8006b5a:	ab03      	add	r3, sp, #12
 8006b5c:	9300      	str	r3, [sp, #0]
 8006b5e:	462a      	mov	r2, r5
 8006b60:	4b06      	ldr	r3, [pc, #24]	; (8006b7c <_svfiprintf_r+0x1e4>)
 8006b62:	a904      	add	r1, sp, #16
 8006b64:	4640      	mov	r0, r8
 8006b66:	f7ff fcd9 	bl	800651c <_printf_i>
 8006b6a:	e7ea      	b.n	8006b42 <_svfiprintf_r+0x1aa>
 8006b6c:	080073d6 	.word	0x080073d6
 8006b70:	080073dc 	.word	0x080073dc
 8006b74:	080073e0 	.word	0x080073e0
 8006b78:	00000000 	.word	0x00000000
 8006b7c:	080068e3 	.word	0x080068e3

08006b80 <_read_r>:
 8006b80:	b538      	push	{r3, r4, r5, lr}
 8006b82:	4c07      	ldr	r4, [pc, #28]	; (8006ba0 <_read_r+0x20>)
 8006b84:	4605      	mov	r5, r0
 8006b86:	4608      	mov	r0, r1
 8006b88:	4611      	mov	r1, r2
 8006b8a:	2200      	movs	r2, #0
 8006b8c:	6022      	str	r2, [r4, #0]
 8006b8e:	461a      	mov	r2, r3
 8006b90:	f7fe ff6a 	bl	8005a68 <_read>
 8006b94:	1c43      	adds	r3, r0, #1
 8006b96:	d102      	bne.n	8006b9e <_read_r+0x1e>
 8006b98:	6823      	ldr	r3, [r4, #0]
 8006b9a:	b103      	cbz	r3, 8006b9e <_read_r+0x1e>
 8006b9c:	602b      	str	r3, [r5, #0]
 8006b9e:	bd38      	pop	{r3, r4, r5, pc}
 8006ba0:	20002964 	.word	0x20002964

08006ba4 <_init>:
 8006ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ba6:	bf00      	nop
 8006ba8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006baa:	bc08      	pop	{r3}
 8006bac:	469e      	mov	lr, r3
 8006bae:	4770      	bx	lr

08006bb0 <_fini>:
 8006bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bb2:	bf00      	nop
 8006bb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006bb6:	bc08      	pop	{r3}
 8006bb8:	469e      	mov	lr, r3
 8006bba:	4770      	bx	lr

08006bbc <vtable for std_msgs::Time>:
	...
 8006bc4:	0231 0800 0259 0800 0295 0800 029d 0800     1...Y...........

08006bd4 <vtable for rosserial_msgs::TopicInfo>:
	...
 8006bdc:	05cd 0800 07f1 0800 02a5 0800 02ad 0800     ................

08006bec <vtable for rosserial_msgs::Log>:
	...
 8006bf4:	05a1 0800 0671 0800 02b5 0800 02bd 0800     ....q...........

08006c04 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8006c0c:	04bf 0800 08a7 0800 02c5 0800 02cd 0800     ................

08006c1c <vtable for std_msgs::MultiArrayDimension>:
	...
 8006c24:	0473 0800 06a7 0800 02d5 0800 02dd 0800     s...............

08006c34 <vtable for std_msgs::MultiArrayLayout>:
	...
 8006c3c:	02e5 0800 0711 0800 0335 0800 033d 0800     ........5...=...

08006c4c <vtable for std_msgs::UInt8MultiArray>:
	...
 8006c54:	0345 0800 0785 0800 0381 0800 0389 0800     E...............

08006c64 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8006c6c:	0d05 0800 0dc5 0800 03b5 0800               ............

08006c78 <vtable for ros::Subscriber<std_msgs::UInt8MultiArray, void>>:
	...
 8006c80:	07d9 0800 039f 0800 03a5 0800 03ad 0800     ................

08006c90 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006c90:	0391 0800 0395 0800 039d 0800 6163 5f6e     ............can_
 8006ca0:	6f6d 6f74 5f72 6572 6c70 0079 6f6d 6f74     motor_reply.moto
 8006cb0:	5f72 6163 5f6e 6d63 0064 6639 6530 3839     r_can_cmd.9f0e98
 8006cc0:	6462 3661 3935 3138 3839 6436 6664 3335     bda65981986ddf53
 8006cd0:	6661 3761 3461 6530 3934 3100 6131 6462     afa7a40e49.11abd
 8006ce0:	3337 6331 3532 3339 3233 3136 6463 3136     731c25933261cd61
 8006cf0:	3338 6462 3231 3664 3932 0035 6f72 7373     83bd12d6295.ross
 8006d00:	7265 6169 5f6c 736d 7367 4c2f 676f 3000     erial_msgs/Log.0
 8006d10:	6461 3135 3866 6638 3463 3834 3239 3866     ad51f88fc44892f8
 8006d20:	3163 3630 3438 3730 3637 3634 3030 0035     c10684077646005.
 8006d30:	6f72 7373 7265 6169 5f6c 736d 7367 542f     rosserial_msgs/T
 8006d40:	706f 6369 6e49 6f66 7200                         opicInfo.

08006d49 <rosserial_msgs::REQUESTPARAM>:
 8006d49:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8006d59:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8006d69:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8006d79:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8006d89:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006d99:	6566 2e72 3800 3332 3337 3166 3136 3332     fer..82373f16123
 8006da9:	3138 6262 6536 3465 3337 3562 6463 6636     81bb6ee473b5cd6f
 8006db9:	6435 3938 0063 7473 5f64 736d 7367 552f     5d89c.std_msgs/U
 8006dc9:	6e49 3874 754d 746c 4169 7272 7961 3000     Int8MultiArray.0
 8006dd9:	6566 3264 3161 6331 3331 3165 6331 3535     fed2a11c13e11c55
 8006de9:	3137 3462 3265 3961 3539 3961 6131 0033     71b4e2a995a91a3.
 8006df9:	7473 5f64 736d 7367 4d2f 6c75 6974 7241     std_msgs/MultiAr
 8006e09:	6172 4c79 7961 756f 0074 6334 3064 3863     rayLayout.4cd0c8
 8006e19:	6133 3638 3338 6564 6561 3034 6365 6164     3a8683deae40ecda
 8006e29:	3663 6530 3335 6662 3861 7300 6474 6d5f     c60e53bfa8.std_m
 8006e39:	6773 2f73 754d 746c 4169 7272 7961 6944     sgs/MultiArrayDi
 8006e49:	656d 736e 6f69 006e 6463 3137 3636 3763     mension.cd7166c7
 8006e59:	6334 3535 6332 3133 6631 6362 3263 6566     4c552c311fbcc2fe
 8006e69:	6135 6237 3263 3938 7300 6474 6d5f 6773     5a7bc289.std_msg
 8006e79:	2f73 6954 656d 6700                              s/Time.

08006e80 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006e80:	1167 0800 1159 0800 1165 0800 682f 6d6f     g...Y...e.../hom
 8006e90:	2f65 6166 2f6c 6f72 2f73 696c 2f62 6f72     e/fal/ros/lib/ro
 8006ea0:	5f73 696c 2f62 7542 6666 7265 6465 6553     s_lib/BufferedSe
 8006eb0:	6972 6c61 422f 6675 6566 6572 5364 7265     rial/BufferedSer
 8006ec0:	6169 2e6c 7063 0070 7325 2520 2064 7562     ial.cpp.%s %d bu
 8006ed0:	6666 7265 6f20 6576 7772 6972 6574 2820     ffer overwrite (
 8006ee0:	616d 5f78 7562 5f66 6973 657a 203a 6425     max_buf_size: %d
 8006ef0:	6520 6378 6565 6564 3a64 2520 2964 0d21      exceeded: %d)!.
 8006f00:	000a 0000                                   ....

08006f04 <vtable for BufferedSerial>:
	...
 8006f0c:	54f1 0800 54f1 0800 1251 0800 12a9 0800     .T...T..Q.......
 8006f1c:	1119 0800 1129 0800 112d 0800 13c9 0800     ....)...-.......
 8006f2c:	13e1 0800 145d 0800 141f 0800               ....].......

08006f38 <us_data>:
 8006f38:	6f40 0800 09fc 2000                         @o..... 

08006f40 <us_interface>:
 8006f40:	35dd 0800 3601 0800 3639 0800 3651 0800     .5...6..96..Q6..
 8006f50:	361d 0800 6970 6d6e 7061 6d20 7369 6d2d     .6..pinmap mis-m
 8006f60:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8006f70:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8006f80:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8006f90:	6e69 756f 0074 0000                         inout...

08006f98 <mp_stk_size>:
 8006f98:	0210 0000                                   ....

08006f9c <mp_tcb_size>:
 8006f9c:	03cc                                        ..

08006f9e <mp_tmr_size>:
	...

08006fa0 <os_clockrate>:
 8006fa0:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006fb0:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006fc0:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006fcd <os_fifo_size>:
 8006fcd:	0110                                             .

08006fce <os_flags>:
 8006fce:	0001                                        ..

08006fd0 <os_maxtaskrun>:
 8006fd0:	000f 0000                                   ....

08006fd4 <os_messageQ_def_osTimerMessageQ>:
 8006fd4:	0004 0000 0a20 2000                         .... .. 

08006fdc <os_mutex_def_env_mutex>:
 8006fdc:	0a40 2000                                   @.. 

08006fe0 <os_mutex_def_malloc_mutex>:
 8006fe0:	0a50 2000                                   P.. 

08006fe4 <os_mutex_def_singleton_mutex>:
 8006fe4:	0a60 2000                                   `.. 

08006fe8 <os_rrobin>:
 8006fe8:	0005 0001                                   ....

08006fec <os_stackinfo>:
 8006fec:	0200 0100                                   ....

08006ff0 <os_thread_def_osTimerThread>:
 8006ff0:	25a1 0800 0002 0000 0001 0000 0320 0000     .%.......... ...
 8007000:	1f08 2000                                   ... 

08007004 <os_trv>:
 8007004:	bf1f 0002                                   ....

08007008 <os_mutex_def_osThreadMutex>:
 8007008:	1a74 2000 6950 6d6e 7061 6520 7272 726f     t.. Pinmap error
 8007018:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8007028:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8007038:	6169 696c 657a 4320 4e41 0000               ialize CAN..

08007044 <timing_pts>:
	...
 800704c:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 800705c:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 800706c:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 800707c:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 800708c:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 800709c:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 80070ac:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 80070bc:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 80070cc:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 80070dc:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 80070ec:	000f 0000 0006 0000 000f 0000 0007 0000     ................

080070fc <ll_pin_defines>:
 80070fc:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 800710c:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 800711c:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 800712c:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 800713c:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 800714c:	2065 4155 5452 000a                         e UART..

08007154 <PinMap_CAN_RD>:
 8007154:	0018 0000 6400 4000 0902 0000 001c 0000     .....d.@........
 8007164:	6800 4000 0902 0000 0015 0000 6800 4000     .h.@.........h.@
 8007174:	0902 0000 000b 0000 6400 4000 0902 0000     .........d.@....
 8007184:	ffff 0000 ffff ffff 0000 0000               ............

08007190 <PinMap_CAN_TD>:
 8007190:	0019 0000 6400 4000 0902 0000 001d 0000     .....d.@........
 80071a0:	6800 4000 0902 0000 0016 0000 6800 4000     .h.@.........h.@
 80071b0:	0902 0000 000c 0000 6400 4000 0902 0000     .........d.@....
 80071c0:	ffff 0000 ffff ffff 0000 0000               ............

080071cc <PinMap_UART_RX>:
 80071cc:	0001 0000 4c00 4000 0812 0000 0003 0000     .....L.@........
 80071dc:	4400 4000 0712 0000 000a 0000 1000 4001     .D.@...........@
 80071ec:	0712 0000 0017 0000 1000 4001 0712 0000     ...........@....
 80071fc:	0025 0000 4800 4000 0712 0000 0027 0000     %....H.@....'...
 800720c:	1400 4001 0812 0000 002b 0000 4800 4000     ...@....+....H.@
 800721c:	0712 0000 0032 0000 5000 4000 0812 0000     ....2....P.@....
 800722c:	ffff 0000 ffff ffff 0000 0000               ............

08007238 <PinMap_UART_TX>:
 8007238:	0000 0000 4c00 4000 0812 0000 0002 0000     .....L.@........
 8007248:	4400 4000 0712 0000 0009 0000 1000 4001     .D.@...........@
 8007258:	0712 0000 0016 0000 1000 4001 0712 0000     ...........@....
 8007268:	001a 0000 4800 4000 0712 0000 0026 0000     .....H.@....&...
 8007278:	1400 4001 0812 0000 002a 0000 4800 4000     ...@....*....H.@
 8007288:	0712 0000 002c 0000 5000 4000 0812 0000     ....,....P.@....
 8007298:	ffff 0000 ffff ffff 0000 0000               ............

080072a4 <AHBPrescTable>:
	...
 80072ac:	0201 0403 0706 0908                         ........

080072b4 <APBAHBPrescTable>:
 80072b4:	0000 0000 0201 0403 0201 0403 0706 0908     ................

080072c4 <vtable for mbed::RawSerial>:
	...
 80072cc:	54f1 0800 54f1 0800 5509 0800 551d 0800     .T...T...U...U..

080072dc <vtable for mbed::CAN>:
	...
 80072e4:	55dd 0800 561d 0800 553f 0800 5549 0800     .U...V..?U..IU..

080072f4 <vtable for mbed::SerialBase>:
	...
 80072fc:	573b 0800 573d 0800 1205 0800 123d 0800     ;W..=W......=...
 800730c:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 800731c:	7475 6f20 2066 656d 6f6d 7972 0a0d 4500     ut of memory...E
 800732c:	7272 726f 6920 696e 6974 6c61 7a69 6e69     rror initializin
 800733c:	2067 6874 2065 756d 6574 2078 626f 656a     g the mutex obje
 800734c:	7463 000a                                   ct..

08007350 <__sf_fake_stderr>:
	...

08007370 <__sf_fake_stdin>:
	...

08007390 <__sf_fake_stdout>:
	...

080073b0 <_global_impure_ptr>:
 80073b0:	01ec 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80073c0:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80073d0:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 80073e0:	6665 4567 4746 0000                         efgEFG..

080073e8 <__EH_FRAME_BEGIN__>:
 80073e8:	0000 0000                                   ....
